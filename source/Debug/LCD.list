
LCD.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00029b8c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003514  08029d3c  08029d3c  00039d3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00000246  0802d250  0802d250  0003d250  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  0802d498  0802d498  0003d498  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 00061294  0802d4b0  0802d4b0  0003d4b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 00000020  0808e744  0808e744  0009e744  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0808e764  0808e764  000a0138  2**0
                  CONTENTS
  8 .ARM          00000008  0808e764  0808e764  0009e764  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0808e76c  0808e76c  000a0138  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000018  0808e76c  0808e76c  0009e76c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   0000000c  0808e784  0808e784  0009e784  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000138  20000000  0808e790  000a0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .ccmram       00000000  10000000  10000000  000a0138  2**0
                  CONTENTS
 14 .bss          0000ecc0  20000138  20000138  000a0138  2**2
                  ALLOC
 15 ._user_heap_stack 00006000  2000edf8  2000edf8  000a0138  2**0
                  ALLOC
 16 .ARM.attributes 00000030  00000000  00000000  000a0138  2**0
                  CONTENTS, READONLY
 17 .comment      000000c2  00000000  00000000  000a0168  2**0
                  CONTENTS, READONLY
 18 .debug_info   00088fe3  00000000  00000000  000a022a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 0000fdd6  00000000  00000000  0012920d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00003240  00000000  00000000  00138fe8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_rnglists 000024d5  00000000  00000000  0013c228  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_macro  00030109  00000000  00000000  0013e6fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line   0003bb1a  00000000  00000000  0016e806  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    000febb7  00000000  00000000  001aa320  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_frame  0000db04  00000000  00000000  002a8ed8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_line_str 00000060  00000000  00000000  002b69dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000138 	.word	0x20000138
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08029d24 	.word	0x08029d24

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000013c 	.word	0x2000013c
 80001ec:	08029d24 	.word	0x08029d24

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 80002a4:	f000 b970 	b.w	8000588 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9e08      	ldr	r6, [sp, #32]
 80002c6:	460d      	mov	r5, r1
 80002c8:	4604      	mov	r4, r0
 80002ca:	460f      	mov	r7, r1
 80002cc:	2b00      	cmp	r3, #0
 80002ce:	d14a      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002d0:	428a      	cmp	r2, r1
 80002d2:	4694      	mov	ip, r2
 80002d4:	d965      	bls.n	80003a2 <__udivmoddi4+0xe2>
 80002d6:	fab2 f382 	clz	r3, r2
 80002da:	b143      	cbz	r3, 80002ee <__udivmoddi4+0x2e>
 80002dc:	fa02 fc03 	lsl.w	ip, r2, r3
 80002e0:	f1c3 0220 	rsb	r2, r3, #32
 80002e4:	409f      	lsls	r7, r3
 80002e6:	fa20 f202 	lsr.w	r2, r0, r2
 80002ea:	4317      	orrs	r7, r2
 80002ec:	409c      	lsls	r4, r3
 80002ee:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80002f2:	fa1f f58c 	uxth.w	r5, ip
 80002f6:	fbb7 f1fe 	udiv	r1, r7, lr
 80002fa:	0c22      	lsrs	r2, r4, #16
 80002fc:	fb0e 7711 	mls	r7, lr, r1, r7
 8000300:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000304:	fb01 f005 	mul.w	r0, r1, r5
 8000308:	4290      	cmp	r0, r2
 800030a:	d90a      	bls.n	8000322 <__udivmoddi4+0x62>
 800030c:	eb1c 0202 	adds.w	r2, ip, r2
 8000310:	f101 37ff 	add.w	r7, r1, #4294967295	; 0xffffffff
 8000314:	f080 811c 	bcs.w	8000550 <__udivmoddi4+0x290>
 8000318:	4290      	cmp	r0, r2
 800031a:	f240 8119 	bls.w	8000550 <__udivmoddi4+0x290>
 800031e:	3902      	subs	r1, #2
 8000320:	4462      	add	r2, ip
 8000322:	1a12      	subs	r2, r2, r0
 8000324:	b2a4      	uxth	r4, r4
 8000326:	fbb2 f0fe 	udiv	r0, r2, lr
 800032a:	fb0e 2210 	mls	r2, lr, r0, r2
 800032e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000332:	fb00 f505 	mul.w	r5, r0, r5
 8000336:	42a5      	cmp	r5, r4
 8000338:	d90a      	bls.n	8000350 <__udivmoddi4+0x90>
 800033a:	eb1c 0404 	adds.w	r4, ip, r4
 800033e:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8000342:	f080 8107 	bcs.w	8000554 <__udivmoddi4+0x294>
 8000346:	42a5      	cmp	r5, r4
 8000348:	f240 8104 	bls.w	8000554 <__udivmoddi4+0x294>
 800034c:	4464      	add	r4, ip
 800034e:	3802      	subs	r0, #2
 8000350:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000354:	1b64      	subs	r4, r4, r5
 8000356:	2100      	movs	r1, #0
 8000358:	b11e      	cbz	r6, 8000362 <__udivmoddi4+0xa2>
 800035a:	40dc      	lsrs	r4, r3
 800035c:	2300      	movs	r3, #0
 800035e:	e9c6 4300 	strd	r4, r3, [r6]
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d908      	bls.n	800037c <__udivmoddi4+0xbc>
 800036a:	2e00      	cmp	r6, #0
 800036c:	f000 80ed 	beq.w	800054a <__udivmoddi4+0x28a>
 8000370:	2100      	movs	r1, #0
 8000372:	e9c6 0500 	strd	r0, r5, [r6]
 8000376:	4608      	mov	r0, r1
 8000378:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037c:	fab3 f183 	clz	r1, r3
 8000380:	2900      	cmp	r1, #0
 8000382:	d149      	bne.n	8000418 <__udivmoddi4+0x158>
 8000384:	42ab      	cmp	r3, r5
 8000386:	d302      	bcc.n	800038e <__udivmoddi4+0xce>
 8000388:	4282      	cmp	r2, r0
 800038a:	f200 80f8 	bhi.w	800057e <__udivmoddi4+0x2be>
 800038e:	1a84      	subs	r4, r0, r2
 8000390:	eb65 0203 	sbc.w	r2, r5, r3
 8000394:	2001      	movs	r0, #1
 8000396:	4617      	mov	r7, r2
 8000398:	2e00      	cmp	r6, #0
 800039a:	d0e2      	beq.n	8000362 <__udivmoddi4+0xa2>
 800039c:	e9c6 4700 	strd	r4, r7, [r6]
 80003a0:	e7df      	b.n	8000362 <__udivmoddi4+0xa2>
 80003a2:	b902      	cbnz	r2, 80003a6 <__udivmoddi4+0xe6>
 80003a4:	deff      	udf	#255	; 0xff
 80003a6:	fab2 f382 	clz	r3, r2
 80003aa:	2b00      	cmp	r3, #0
 80003ac:	f040 8090 	bne.w	80004d0 <__udivmoddi4+0x210>
 80003b0:	1a8a      	subs	r2, r1, r2
 80003b2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003b6:	fa1f fe8c 	uxth.w	lr, ip
 80003ba:	2101      	movs	r1, #1
 80003bc:	fbb2 f5f7 	udiv	r5, r2, r7
 80003c0:	fb07 2015 	mls	r0, r7, r5, r2
 80003c4:	0c22      	lsrs	r2, r4, #16
 80003c6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003ca:	fb0e f005 	mul.w	r0, lr, r5
 80003ce:	4290      	cmp	r0, r2
 80003d0:	d908      	bls.n	80003e4 <__udivmoddi4+0x124>
 80003d2:	eb1c 0202 	adds.w	r2, ip, r2
 80003d6:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x122>
 80003dc:	4290      	cmp	r0, r2
 80003de:	f200 80cb 	bhi.w	8000578 <__udivmoddi4+0x2b8>
 80003e2:	4645      	mov	r5, r8
 80003e4:	1a12      	subs	r2, r2, r0
 80003e6:	b2a4      	uxth	r4, r4
 80003e8:	fbb2 f0f7 	udiv	r0, r2, r7
 80003ec:	fb07 2210 	mls	r2, r7, r0, r2
 80003f0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f4:	fb0e fe00 	mul.w	lr, lr, r0
 80003f8:	45a6      	cmp	lr, r4
 80003fa:	d908      	bls.n	800040e <__udivmoddi4+0x14e>
 80003fc:	eb1c 0404 	adds.w	r4, ip, r4
 8000400:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8000404:	d202      	bcs.n	800040c <__udivmoddi4+0x14c>
 8000406:	45a6      	cmp	lr, r4
 8000408:	f200 80bb 	bhi.w	8000582 <__udivmoddi4+0x2c2>
 800040c:	4610      	mov	r0, r2
 800040e:	eba4 040e 	sub.w	r4, r4, lr
 8000412:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000416:	e79f      	b.n	8000358 <__udivmoddi4+0x98>
 8000418:	f1c1 0720 	rsb	r7, r1, #32
 800041c:	408b      	lsls	r3, r1
 800041e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000422:	ea4c 0c03 	orr.w	ip, ip, r3
 8000426:	fa05 f401 	lsl.w	r4, r5, r1
 800042a:	fa20 f307 	lsr.w	r3, r0, r7
 800042e:	40fd      	lsrs	r5, r7
 8000430:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000434:	4323      	orrs	r3, r4
 8000436:	fbb5 f8f9 	udiv	r8, r5, r9
 800043a:	fa1f fe8c 	uxth.w	lr, ip
 800043e:	fb09 5518 	mls	r5, r9, r8, r5
 8000442:	0c1c      	lsrs	r4, r3, #16
 8000444:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000448:	fb08 f50e 	mul.w	r5, r8, lr
 800044c:	42a5      	cmp	r5, r4
 800044e:	fa02 f201 	lsl.w	r2, r2, r1
 8000452:	fa00 f001 	lsl.w	r0, r0, r1
 8000456:	d90b      	bls.n	8000470 <__udivmoddi4+0x1b0>
 8000458:	eb1c 0404 	adds.w	r4, ip, r4
 800045c:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8000460:	f080 8088 	bcs.w	8000574 <__udivmoddi4+0x2b4>
 8000464:	42a5      	cmp	r5, r4
 8000466:	f240 8085 	bls.w	8000574 <__udivmoddi4+0x2b4>
 800046a:	f1a8 0802 	sub.w	r8, r8, #2
 800046e:	4464      	add	r4, ip
 8000470:	1b64      	subs	r4, r4, r5
 8000472:	b29d      	uxth	r5, r3
 8000474:	fbb4 f3f9 	udiv	r3, r4, r9
 8000478:	fb09 4413 	mls	r4, r9, r3, r4
 800047c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000480:	fb03 fe0e 	mul.w	lr, r3, lr
 8000484:	45a6      	cmp	lr, r4
 8000486:	d908      	bls.n	800049a <__udivmoddi4+0x1da>
 8000488:	eb1c 0404 	adds.w	r4, ip, r4
 800048c:	f103 35ff 	add.w	r5, r3, #4294967295	; 0xffffffff
 8000490:	d26c      	bcs.n	800056c <__udivmoddi4+0x2ac>
 8000492:	45a6      	cmp	lr, r4
 8000494:	d96a      	bls.n	800056c <__udivmoddi4+0x2ac>
 8000496:	3b02      	subs	r3, #2
 8000498:	4464      	add	r4, ip
 800049a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800049e:	fba3 9502 	umull	r9, r5, r3, r2
 80004a2:	eba4 040e 	sub.w	r4, r4, lr
 80004a6:	42ac      	cmp	r4, r5
 80004a8:	46c8      	mov	r8, r9
 80004aa:	46ae      	mov	lr, r5
 80004ac:	d356      	bcc.n	800055c <__udivmoddi4+0x29c>
 80004ae:	d053      	beq.n	8000558 <__udivmoddi4+0x298>
 80004b0:	b156      	cbz	r6, 80004c8 <__udivmoddi4+0x208>
 80004b2:	ebb0 0208 	subs.w	r2, r0, r8
 80004b6:	eb64 040e 	sbc.w	r4, r4, lr
 80004ba:	fa04 f707 	lsl.w	r7, r4, r7
 80004be:	40ca      	lsrs	r2, r1
 80004c0:	40cc      	lsrs	r4, r1
 80004c2:	4317      	orrs	r7, r2
 80004c4:	e9c6 7400 	strd	r7, r4, [r6]
 80004c8:	4618      	mov	r0, r3
 80004ca:	2100      	movs	r1, #0
 80004cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004d0:	f1c3 0120 	rsb	r1, r3, #32
 80004d4:	fa02 fc03 	lsl.w	ip, r2, r3
 80004d8:	fa20 f201 	lsr.w	r2, r0, r1
 80004dc:	fa25 f101 	lsr.w	r1, r5, r1
 80004e0:	409d      	lsls	r5, r3
 80004e2:	432a      	orrs	r2, r5
 80004e4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004e8:	fa1f fe8c 	uxth.w	lr, ip
 80004ec:	fbb1 f0f7 	udiv	r0, r1, r7
 80004f0:	fb07 1510 	mls	r5, r7, r0, r1
 80004f4:	0c11      	lsrs	r1, r2, #16
 80004f6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80004fa:	fb00 f50e 	mul.w	r5, r0, lr
 80004fe:	428d      	cmp	r5, r1
 8000500:	fa04 f403 	lsl.w	r4, r4, r3
 8000504:	d908      	bls.n	8000518 <__udivmoddi4+0x258>
 8000506:	eb1c 0101 	adds.w	r1, ip, r1
 800050a:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 800050e:	d22f      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000510:	428d      	cmp	r5, r1
 8000512:	d92d      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000514:	3802      	subs	r0, #2
 8000516:	4461      	add	r1, ip
 8000518:	1b49      	subs	r1, r1, r5
 800051a:	b292      	uxth	r2, r2
 800051c:	fbb1 f5f7 	udiv	r5, r1, r7
 8000520:	fb07 1115 	mls	r1, r7, r5, r1
 8000524:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000528:	fb05 f10e 	mul.w	r1, r5, lr
 800052c:	4291      	cmp	r1, r2
 800052e:	d908      	bls.n	8000542 <__udivmoddi4+0x282>
 8000530:	eb1c 0202 	adds.w	r2, ip, r2
 8000534:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8000538:	d216      	bcs.n	8000568 <__udivmoddi4+0x2a8>
 800053a:	4291      	cmp	r1, r2
 800053c:	d914      	bls.n	8000568 <__udivmoddi4+0x2a8>
 800053e:	3d02      	subs	r5, #2
 8000540:	4462      	add	r2, ip
 8000542:	1a52      	subs	r2, r2, r1
 8000544:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000548:	e738      	b.n	80003bc <__udivmoddi4+0xfc>
 800054a:	4631      	mov	r1, r6
 800054c:	4630      	mov	r0, r6
 800054e:	e708      	b.n	8000362 <__udivmoddi4+0xa2>
 8000550:	4639      	mov	r1, r7
 8000552:	e6e6      	b.n	8000322 <__udivmoddi4+0x62>
 8000554:	4610      	mov	r0, r2
 8000556:	e6fb      	b.n	8000350 <__udivmoddi4+0x90>
 8000558:	4548      	cmp	r0, r9
 800055a:	d2a9      	bcs.n	80004b0 <__udivmoddi4+0x1f0>
 800055c:	ebb9 0802 	subs.w	r8, r9, r2
 8000560:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000564:	3b01      	subs	r3, #1
 8000566:	e7a3      	b.n	80004b0 <__udivmoddi4+0x1f0>
 8000568:	4645      	mov	r5, r8
 800056a:	e7ea      	b.n	8000542 <__udivmoddi4+0x282>
 800056c:	462b      	mov	r3, r5
 800056e:	e794      	b.n	800049a <__udivmoddi4+0x1da>
 8000570:	4640      	mov	r0, r8
 8000572:	e7d1      	b.n	8000518 <__udivmoddi4+0x258>
 8000574:	46d0      	mov	r8, sl
 8000576:	e77b      	b.n	8000470 <__udivmoddi4+0x1b0>
 8000578:	3d02      	subs	r5, #2
 800057a:	4462      	add	r2, ip
 800057c:	e732      	b.n	80003e4 <__udivmoddi4+0x124>
 800057e:	4608      	mov	r0, r1
 8000580:	e70a      	b.n	8000398 <__udivmoddi4+0xd8>
 8000582:	4464      	add	r4, ip
 8000584:	3802      	subs	r0, #2
 8000586:	e742      	b.n	800040e <__udivmoddi4+0x14e>

08000588 <__aeabi_idiv0>:
 8000588:	4770      	bx	lr
 800058a:	bf00      	nop

0800058c <ft6x06_Init>:
  *         from MCU to FT6xx6 : ie I2C channel initialization (if required).
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT6xx6).
  * @retval None
  */
void ft6x06_Init(uint16_t DeviceAddr)
{  
 800058c:	b580      	push	{r7, lr}
 800058e:	b084      	sub	sp, #16
 8000590:	af00      	add	r7, sp, #0
 8000592:	4603      	mov	r3, r0
 8000594:	80fb      	strh	r3, [r7, #6]
  uint8_t instance;
  uint8_t empty;
  
  /* Check if device instance already exists */
  instance = ft6x06_GetInstance(DeviceAddr);
 8000596:	88fb      	ldrh	r3, [r7, #6]
 8000598:	4618      	mov	r0, r3
 800059a:	f000 f909 	bl	80007b0 <ft6x06_GetInstance>
 800059e:	4603      	mov	r3, r0
 80005a0:	73fb      	strb	r3, [r7, #15]
  
  /* To prevent double initialization */
  if(instance == 0xFF)
 80005a2:	7bfb      	ldrb	r3, [r7, #15]
 80005a4:	2bff      	cmp	r3, #255	; 0xff
 80005a6:	d10c      	bne.n	80005c2 <ft6x06_Init+0x36>
  {
    /* Look for empty instance */
    empty = ft6x06_GetInstance(0);
 80005a8:	2000      	movs	r0, #0
 80005aa:	f000 f901 	bl	80007b0 <ft6x06_GetInstance>
 80005ae:	4603      	mov	r3, r0
 80005b0:	73bb      	strb	r3, [r7, #14]
    
    if(empty < FT6x06_MAX_INSTANCE)
 80005b2:	7bbb      	ldrb	r3, [r7, #14]
 80005b4:	2b01      	cmp	r3, #1
 80005b6:	d804      	bhi.n	80005c2 <ft6x06_Init+0x36>
    {
      /* Register the current device instance */
      ft6x06[empty] = DeviceAddr;
 80005b8:	7bbb      	ldrb	r3, [r7, #14]
 80005ba:	88fa      	ldrh	r2, [r7, #6]
 80005bc:	b2d1      	uxtb	r1, r2
 80005be:	4a03      	ldr	r2, [pc, #12]	; (80005cc <ft6x06_Init+0x40>)
 80005c0:	54d1      	strb	r1, [r2, r3]
      
      /* Initialize IO BUS layer */
//      TS_IO_Init();
    }
  }
}
 80005c2:	bf00      	nop
 80005c4:	3710      	adds	r7, #16
 80005c6:	46bd      	mov	sp, r7
 80005c8:	bd80      	pop	{r7, pc}
 80005ca:	bf00      	nop
 80005cc:	20000154 	.word	0x20000154

080005d0 <ft6x06_Reset>:
  *         @note : Not applicable to FT6xx6.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT6xx6).
  * @retval None
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
 80005d0:	b480      	push	{r7}
 80005d2:	b083      	sub	sp, #12
 80005d4:	af00      	add	r7, sp, #0
 80005d6:	4603      	mov	r3, r0
 80005d8:	80fb      	strh	r3, [r7, #6]
  /* Do nothing */
  /* No software reset sequence available in FT6xx6 IC */
}
 80005da:	bf00      	nop
 80005dc:	370c      	adds	r7, #12
 80005de:	46bd      	mov	sp, r7
 80005e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005e4:	4770      	bx	lr

080005e6 <ft6x06_ReadID>:
  *         able to read the FT6xx6 device ID, and verify this is a FT6xx6.
  * @param  DeviceAddr: I2C FT6xx6 Slave address.
  * @retval The Device ID (two bytes).
  */
uint16_t ft6x06_ReadID(uint16_t DeviceAddr)
{
 80005e6:	b580      	push	{r7, lr}
 80005e8:	b082      	sub	sp, #8
 80005ea:	af00      	add	r7, sp, #0
 80005ec:	4603      	mov	r3, r0
 80005ee:	80fb      	strh	r3, [r7, #6]
  /* Initialize I2C link if needed */
//  TS_IO_Init();
  
  /* Return the device ID value */
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 80005f0:	88fb      	ldrh	r3, [r7, #6]
 80005f2:	b2db      	uxtb	r3, r3
 80005f4:	21a8      	movs	r1, #168	; 0xa8
 80005f6:	4618      	mov	r0, r3
 80005f8:	f000 f91e 	bl	8000838 <TS_IO_Read>
 80005fc:	4603      	mov	r3, r0
 80005fe:	b29b      	uxth	r3, r3
}
 8000600:	4618      	mov	r0, r3
 8000602:	3708      	adds	r7, #8
 8000604:	46bd      	mov	sp, r7
 8000606:	bd80      	pop	{r7, pc}

08000608 <ft6x06_TS_Start>:
  *         the touch screen).
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address).
  * @retval None.
  */
void ft6x06_TS_Start(uint16_t DeviceAddr)
{
 8000608:	b580      	push	{r7, lr}
 800060a:	b082      	sub	sp, #8
 800060c:	af00      	add	r7, sp, #0
 800060e:	4603      	mov	r3, r0
 8000610:	80fb      	strh	r3, [r7, #6]
  /* Hw Calibration sequence start : should be done once after each power up */
  /* This is called internal calibration of the touch screen                 */
  ft6x06_TS_Calibration(DeviceAddr);
#endif
  /* Minimum static configuration of FT6xx6 */
  ft6x06_TS_Configure(DeviceAddr);
 8000612:	88fb      	ldrh	r3, [r7, #6]
 8000614:	4618      	mov	r0, r3
 8000616:	f000 f8bc 	bl	8000792 <ft6x06_TS_Configure>

  /* By default set FT6xx6 IC in Polling mode : no INT generation on FT6xx6 for new touch available */
  /* Note TS_INT is active low                                                                      */
  ft6x06_TS_DisableIT(DeviceAddr);
 800061a:	88fb      	ldrh	r3, [r7, #6]
 800061c:	4618      	mov	r0, r3
 800061e:	f000 f88d 	bl	800073c <ft6x06_TS_DisableIT>
}
 8000622:	bf00      	nop
 8000624:	3708      	adds	r7, #8
 8000626:	46bd      	mov	sp, r7
 8000628:	bd80      	pop	{r7, pc}
	...

0800062c <ft6x06_TS_DetectTouch>:
  *         variables).
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval : Number of active touches detected (can be 0, 1 or 2).
  */
uint8_t ft6x06_TS_DetectTouch(uint16_t DeviceAddr)
{
 800062c:	b580      	push	{r7, lr}
 800062e:	b084      	sub	sp, #16
 8000630:	af00      	add	r7, sp, #0
 8000632:	4603      	mov	r3, r0
 8000634:	80fb      	strh	r3, [r7, #6]
  volatile uint8_t nbTouch = 0;
 8000636:	2300      	movs	r3, #0
 8000638:	73fb      	strb	r3, [r7, #15]

  /* Read register FT6206_TD_STAT_REG to check number of touches detection */
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 800063a:	88fb      	ldrh	r3, [r7, #6]
 800063c:	b2db      	uxtb	r3, r3
 800063e:	2102      	movs	r1, #2
 8000640:	4618      	mov	r0, r3
 8000642:	f000 f8f9 	bl	8000838 <TS_IO_Read>
 8000646:	4603      	mov	r3, r0
 8000648:	73fb      	strb	r3, [r7, #15]
  nbTouch &= FT6206_TD_STAT_MASK;
 800064a:	7bfb      	ldrb	r3, [r7, #15]
 800064c:	b2db      	uxtb	r3, r3
 800064e:	f003 030f 	and.w	r3, r3, #15
 8000652:	b2db      	uxtb	r3, r3
 8000654:	73fb      	strb	r3, [r7, #15]

  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 8000656:	7bfb      	ldrb	r3, [r7, #15]
 8000658:	b2db      	uxtb	r3, r3
 800065a:	2b02      	cmp	r3, #2
 800065c:	d901      	bls.n	8000662 <ft6x06_TS_DetectTouch+0x36>
  {
    /* If invalid number of touch detected, set it to zero */
    nbTouch = 0;
 800065e:	2300      	movs	r3, #0
 8000660:	73fb      	strb	r3, [r7, #15]
  }

  /* Update ft6xx6 driver internal global : current number of active touches */
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8000662:	7bfb      	ldrb	r3, [r7, #15]
 8000664:	b2da      	uxtb	r2, r3
 8000666:	4b05      	ldr	r3, [pc, #20]	; (800067c <ft6x06_TS_DetectTouch+0x50>)
 8000668:	705a      	strb	r2, [r3, #1]

  /* Reset current active touch index on which to work on */
  ft6x06_handle.currActiveTouchIdx = 0;
 800066a:	4b04      	ldr	r3, [pc, #16]	; (800067c <ft6x06_TS_DetectTouch+0x50>)
 800066c:	2200      	movs	r2, #0
 800066e:	709a      	strb	r2, [r3, #2]

  return(nbTouch);
 8000670:	7bfb      	ldrb	r3, [r7, #15]
 8000672:	b2db      	uxtb	r3, r3
}
 8000674:	4618      	mov	r0, r3
 8000676:	3710      	adds	r7, #16
 8000678:	46bd      	mov	sp, r7
 800067a:	bd80      	pop	{r7, pc}
 800067c:	20000158 	.word	0x20000158

08000680 <ft6x06_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value
  * @retval None.
  */
void ft6x06_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8000680:	b580      	push	{r7, lr}
 8000682:	b086      	sub	sp, #24
 8000684:	af00      	add	r7, sp, #0
 8000686:	4603      	mov	r3, r0
 8000688:	60b9      	str	r1, [r7, #8]
 800068a:	607a      	str	r2, [r7, #4]
 800068c:	81fb      	strh	r3, [r7, #14]
  uint8_t regAddress = 0;
 800068e:	2300      	movs	r3, #0
 8000690:	75fb      	strb	r3, [r7, #23]
  uint8_t  dataxy[4];
  
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8000692:	4b1f      	ldr	r3, [pc, #124]	; (8000710 <ft6x06_TS_GetXY+0x90>)
 8000694:	789a      	ldrb	r2, [r3, #2]
 8000696:	4b1e      	ldr	r3, [pc, #120]	; (8000710 <ft6x06_TS_GetXY+0x90>)
 8000698:	785b      	ldrb	r3, [r3, #1]
 800069a:	429a      	cmp	r2, r3
 800069c:	d234      	bcs.n	8000708 <ft6x06_TS_GetXY+0x88>
  {
    switch(ft6x06_handle.currActiveTouchIdx)
 800069e:	4b1c      	ldr	r3, [pc, #112]	; (8000710 <ft6x06_TS_GetXY+0x90>)
 80006a0:	789b      	ldrb	r3, [r3, #2]
 80006a2:	2b00      	cmp	r3, #0
 80006a4:	d002      	beq.n	80006ac <ft6x06_TS_GetXY+0x2c>
 80006a6:	2b01      	cmp	r3, #1
 80006a8:	d003      	beq.n	80006b2 <ft6x06_TS_GetXY+0x32>
    case 1 :
      regAddress = FT6206_P2_XH_REG; 
      break;

    default :
      break;
 80006aa:	e005      	b.n	80006b8 <ft6x06_TS_GetXY+0x38>
      regAddress = FT6206_P1_XH_REG; 
 80006ac:	2303      	movs	r3, #3
 80006ae:	75fb      	strb	r3, [r7, #23]
      break;
 80006b0:	e002      	b.n	80006b8 <ft6x06_TS_GetXY+0x38>
      regAddress = FT6206_P2_XH_REG; 
 80006b2:	2309      	movs	r3, #9
 80006b4:	75fb      	strb	r3, [r7, #23]
      break;
 80006b6:	bf00      	nop
    }
    
    /* Read X and Y positions */
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 80006b8:	89fb      	ldrh	r3, [r7, #14]
 80006ba:	b2d8      	uxtb	r0, r3
 80006bc:	f107 0210 	add.w	r2, r7, #16
 80006c0:	7df9      	ldrb	r1, [r7, #23]
 80006c2:	2304      	movs	r3, #4
 80006c4:	f000 f8e0 	bl	8000888 <TS_IO_ReadMultiple>

    /* Send back ready X position to caller */
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 80006c8:	7c3b      	ldrb	r3, [r7, #16]
 80006ca:	021b      	lsls	r3, r3, #8
 80006cc:	b21b      	sxth	r3, r3
 80006ce:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 80006d2:	b21a      	sxth	r2, r3
 80006d4:	7c7b      	ldrb	r3, [r7, #17]
 80006d6:	b21b      	sxth	r3, r3
 80006d8:	4313      	orrs	r3, r2
 80006da:	b21b      	sxth	r3, r3
 80006dc:	b29a      	uxth	r2, r3
 80006de:	68bb      	ldr	r3, [r7, #8]
 80006e0:	801a      	strh	r2, [r3, #0]
    
    /* Send back ready Y position to caller */
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 80006e2:	7cbb      	ldrb	r3, [r7, #18]
 80006e4:	021b      	lsls	r3, r3, #8
 80006e6:	b21b      	sxth	r3, r3
 80006e8:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 80006ec:	b21a      	sxth	r2, r3
 80006ee:	7cfb      	ldrb	r3, [r7, #19]
 80006f0:	b21b      	sxth	r3, r3
 80006f2:	4313      	orrs	r3, r2
 80006f4:	b21b      	sxth	r3, r3
 80006f6:	b29a      	uxth	r2, r3
 80006f8:	687b      	ldr	r3, [r7, #4]
 80006fa:	801a      	strh	r2, [r3, #0]
    
    ft6x06_handle.currActiveTouchIdx++;
 80006fc:	4b04      	ldr	r3, [pc, #16]	; (8000710 <ft6x06_TS_GetXY+0x90>)
 80006fe:	789b      	ldrb	r3, [r3, #2]
 8000700:	3301      	adds	r3, #1
 8000702:	b2da      	uxtb	r2, r3
 8000704:	4b02      	ldr	r3, [pc, #8]	; (8000710 <ft6x06_TS_GetXY+0x90>)
 8000706:	709a      	strb	r2, [r3, #2]
  }
}
 8000708:	bf00      	nop
 800070a:	3718      	adds	r7, #24
 800070c:	46bd      	mov	sp, r7
 800070e:	bd80      	pop	{r7, pc}
 8000710:	20000158 	.word	0x20000158

08000714 <ft6x06_TS_EnableIT>:
  *         connected to MCU as EXTI.
  * @param  DeviceAddr: Device address on communication Bus (Slave I2C address of FT6xx6).
  * @retval None
  */
void ft6x06_TS_EnableIT(uint16_t DeviceAddr)
{
 8000714:	b580      	push	{r7, lr}
 8000716:	b084      	sub	sp, #16
 8000718:	af00      	add	r7, sp, #0
 800071a:	4603      	mov	r3, r0
 800071c:	80fb      	strh	r3, [r7, #6]
  uint8_t regValue = 0;
 800071e:	2300      	movs	r3, #0
 8000720:	73fb      	strb	r3, [r7, #15]
  regValue = (FT6206_G_MODE_INTERRUPT_TRIGGER & (FT6206_G_MODE_INTERRUPT_MASK >> FT6206_G_MODE_INTERRUPT_SHIFT)) << FT6206_G_MODE_INTERRUPT_SHIFT;
 8000722:	2301      	movs	r3, #1
 8000724:	73fb      	strb	r3, [r7, #15]
  
  /* Set interrupt trigger mode in FT6206_GMODE_REG */
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8000726:	88fb      	ldrh	r3, [r7, #6]
 8000728:	b2db      	uxtb	r3, r3
 800072a:	7bfa      	ldrb	r2, [r7, #15]
 800072c:	21a4      	movs	r1, #164	; 0xa4
 800072e:	4618      	mov	r0, r3
 8000730:	f000 f860 	bl	80007f4 <TS_IO_Write>
}
 8000734:	bf00      	nop
 8000736:	3710      	adds	r7, #16
 8000738:	46bd      	mov	sp, r7
 800073a:	bd80      	pop	{r7, pc}

0800073c <ft6x06_TS_DisableIT>:
  *         connected to MCU as EXTI.
  * @param  DeviceAddr: Device address on communication Bus (Slave I2C address of FT6xx6).
  * @retval None
  */
void ft6x06_TS_DisableIT(uint16_t DeviceAddr)
{
 800073c:	b580      	push	{r7, lr}
 800073e:	b084      	sub	sp, #16
 8000740:	af00      	add	r7, sp, #0
 8000742:	4603      	mov	r3, r0
 8000744:	80fb      	strh	r3, [r7, #6]
  uint8_t regValue = 0;
 8000746:	2300      	movs	r3, #0
 8000748:	73fb      	strb	r3, [r7, #15]
  regValue = (FT6206_G_MODE_INTERRUPT_POLLING & (FT6206_G_MODE_INTERRUPT_MASK >> FT6206_G_MODE_INTERRUPT_SHIFT)) << FT6206_G_MODE_INTERRUPT_SHIFT;
 800074a:	2300      	movs	r3, #0
 800074c:	73fb      	strb	r3, [r7, #15]

  /* Set interrupt polling mode in FT6206_GMODE_REG */
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 800074e:	88fb      	ldrh	r3, [r7, #6]
 8000750:	b2db      	uxtb	r3, r3
 8000752:	7bfa      	ldrb	r2, [r7, #15]
 8000754:	21a4      	movs	r1, #164	; 0xa4
 8000756:	4618      	mov	r0, r3
 8000758:	f000 f84c 	bl	80007f4 <TS_IO_Write>
}
 800075c:	bf00      	nop
 800075e:	3710      	adds	r7, #16
 8000760:	46bd      	mov	sp, r7
 8000762:	bd80      	pop	{r7, pc}

08000764 <ft6x06_TS_ITStatus>:
  *         @note : This feature is not applicable to FT6xx6.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT6xx6).
  * @retval TS interrupts status : always return 0 here
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
 8000764:	b480      	push	{r7}
 8000766:	b083      	sub	sp, #12
 8000768:	af00      	add	r7, sp, #0
 800076a:	4603      	mov	r3, r0
 800076c:	80fb      	strh	r3, [r7, #6]
  /* Always return 0 as feature not applicable to FT6xx6 */
  return 0;
 800076e:	2300      	movs	r3, #0
}
 8000770:	4618      	mov	r0, r3
 8000772:	370c      	adds	r7, #12
 8000774:	46bd      	mov	sp, r7
 8000776:	f85d 7b04 	ldr.w	r7, [sp], #4
 800077a:	4770      	bx	lr

0800077c <ft6x06_TS_ClearIT>:
  *         @note : This feature is not applicable to FT6xx6.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT6xx6).
  * @retval None
  */
void ft6x06_TS_ClearIT(uint16_t DeviceAddr)
{
 800077c:	b480      	push	{r7}
 800077e:	b083      	sub	sp, #12
 8000780:	af00      	add	r7, sp, #0
 8000782:	4603      	mov	r3, r0
 8000784:	80fb      	strh	r3, [r7, #6]
  /* Nothing to be done here for FT6xx6 */
}
 8000786:	bf00      	nop
 8000788:	370c      	adds	r7, #12
 800078a:	46bd      	mov	sp, r7
 800078c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000790:	4770      	bx	lr

08000792 <ft6x06_TS_Configure>:
  * @brief  Basic static configuration of TouchScreen
  * @param  DeviceAddr: FT6xx6 Device address for communication on I2C Bus.
  * @retval Status FT6206_STATUS_OK or FT6206_STATUS_NOT_OK.
  */
static uint32_t ft6x06_TS_Configure(uint16_t DeviceAddr)
{
 8000792:	b480      	push	{r7}
 8000794:	b085      	sub	sp, #20
 8000796:	af00      	add	r7, sp, #0
 8000798:	4603      	mov	r3, r0
 800079a:	80fb      	strh	r3, [r7, #6]
  uint32_t status = FT6206_STATUS_OK;
 800079c:	2300      	movs	r3, #0
 800079e:	60fb      	str	r3, [r7, #12]

  /* Nothing special to be done for FT6xx6 */

  return(status);
 80007a0:	68fb      	ldr	r3, [r7, #12]
}
 80007a2:	4618      	mov	r0, r3
 80007a4:	3714      	adds	r7, #20
 80007a6:	46bd      	mov	sp, r7
 80007a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007ac:	4770      	bx	lr
	...

080007b0 <ft6x06_GetInstance>:
  *         and return its index  
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Index of the device instance if registered, 0xFF if not.
  */
static uint8_t ft6x06_GetInstance(uint16_t DeviceAddr)
{
 80007b0:	b480      	push	{r7}
 80007b2:	b085      	sub	sp, #20
 80007b4:	af00      	add	r7, sp, #0
 80007b6:	4603      	mov	r3, r0
 80007b8:	80fb      	strh	r3, [r7, #6]
  uint8_t idx = 0;
 80007ba:	2300      	movs	r3, #0
 80007bc:	73fb      	strb	r3, [r7, #15]
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 80007be:	2300      	movs	r3, #0
 80007c0:	73fb      	strb	r3, [r7, #15]
 80007c2:	e00b      	b.n	80007dc <ft6x06_GetInstance+0x2c>
  {
    if(ft6x06[idx] == DeviceAddr)
 80007c4:	7bfb      	ldrb	r3, [r7, #15]
 80007c6:	4a0a      	ldr	r2, [pc, #40]	; (80007f0 <ft6x06_GetInstance+0x40>)
 80007c8:	5cd3      	ldrb	r3, [r2, r3]
 80007ca:	b29b      	uxth	r3, r3
 80007cc:	88fa      	ldrh	r2, [r7, #6]
 80007ce:	429a      	cmp	r2, r3
 80007d0:	d101      	bne.n	80007d6 <ft6x06_GetInstance+0x26>
    {
      return idx; 
 80007d2:	7bfb      	ldrb	r3, [r7, #15]
 80007d4:	e006      	b.n	80007e4 <ft6x06_GetInstance+0x34>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 80007d6:	7bfb      	ldrb	r3, [r7, #15]
 80007d8:	3301      	adds	r3, #1
 80007da:	73fb      	strb	r3, [r7, #15]
 80007dc:	7bfb      	ldrb	r3, [r7, #15]
 80007de:	2b01      	cmp	r3, #1
 80007e0:	d9f0      	bls.n	80007c4 <ft6x06_GetInstance+0x14>
    }
  }
  
  return 0xFF;
 80007e2:	23ff      	movs	r3, #255	; 0xff
}
 80007e4:	4618      	mov	r0, r3
 80007e6:	3714      	adds	r7, #20
 80007e8:	46bd      	mov	sp, r7
 80007ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007ee:	4770      	bx	lr
 80007f0:	20000154 	.word	0x20000154

080007f4 <TS_IO_Write>:

void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 80007f4:	b580      	push	{r7, lr}
 80007f6:	b088      	sub	sp, #32
 80007f8:	af04      	add	r7, sp, #16
 80007fa:	4603      	mov	r3, r0
 80007fc:	71fb      	strb	r3, [r7, #7]
 80007fe:	460b      	mov	r3, r1
 8000800:	71bb      	strb	r3, [r7, #6]
 8000802:	4613      	mov	r3, r2
 8000804:	717b      	strb	r3, [r7, #5]
	HAL_StatusTypeDef status = HAL_OK;
 8000806:	2300      	movs	r3, #0
 8000808:	73fb      	strb	r3, [r7, #15]

	status = HAL_I2C_Mem_Write(&hi2c1,
 800080a:	79fb      	ldrb	r3, [r7, #7]
 800080c:	b299      	uxth	r1, r3
 800080e:	79bb      	ldrb	r3, [r7, #6]
 8000810:	b29a      	uxth	r2, r3
 8000812:	2364      	movs	r3, #100	; 0x64
 8000814:	9302      	str	r3, [sp, #8]
 8000816:	2301      	movs	r3, #1
 8000818:	9301      	str	r3, [sp, #4]
 800081a:	1d7b      	adds	r3, r7, #5
 800081c:	9300      	str	r3, [sp, #0]
 800081e:	2301      	movs	r3, #1
 8000820:	4804      	ldr	r0, [pc, #16]	; (8000834 <TS_IO_Write+0x40>)
 8000822:	f003 f91b 	bl	8003a5c <HAL_I2C_Mem_Write>
 8000826:	4603      	mov	r3, r0
 8000828:	73fb      	strb	r3, [r7, #15]
							(uint16_t)Reg,
							I2C_MEMADD_SIZE_8BIT,
							&Value,
							1,
							100);
}
 800082a:	bf00      	nop
 800082c:	3710      	adds	r7, #16
 800082e:	46bd      	mov	sp, r7
 8000830:	bd80      	pop	{r7, pc}
 8000832:	bf00      	nop
 8000834:	200002bc 	.word	0x200002bc

08000838 <TS_IO_Read>:

uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8000838:	b580      	push	{r7, lr}
 800083a:	b088      	sub	sp, #32
 800083c:	af04      	add	r7, sp, #16
 800083e:	4603      	mov	r3, r0
 8000840:	460a      	mov	r2, r1
 8000842:	71fb      	strb	r3, [r7, #7]
 8000844:	4613      	mov	r3, r2
 8000846:	71bb      	strb	r3, [r7, #6]
	HAL_StatusTypeDef status = HAL_OK;
 8000848:	2300      	movs	r3, #0
 800084a:	73fb      	strb	r3, [r7, #15]
	uint8_t Value = 0;
 800084c:	2300      	movs	r3, #0
 800084e:	73bb      	strb	r3, [r7, #14]

	status = HAL_I2C_Mem_Read(&hi2c1,
 8000850:	79fb      	ldrb	r3, [r7, #7]
 8000852:	b29b      	uxth	r3, r3
 8000854:	3301      	adds	r3, #1
 8000856:	b299      	uxth	r1, r3
 8000858:	79bb      	ldrb	r3, [r7, #6]
 800085a:	b29a      	uxth	r2, r3
 800085c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000860:	9302      	str	r3, [sp, #8]
 8000862:	2301      	movs	r3, #1
 8000864:	9301      	str	r3, [sp, #4]
 8000866:	f107 030e 	add.w	r3, r7, #14
 800086a:	9300      	str	r3, [sp, #0]
 800086c:	2301      	movs	r3, #1
 800086e:	4805      	ldr	r0, [pc, #20]	; (8000884 <TS_IO_Read+0x4c>)
 8000870:	f003 f9ee 	bl	8003c50 <HAL_I2C_Mem_Read>
 8000874:	4603      	mov	r3, r0
 8000876:	73fb      	strb	r3, [r7, #15]
							I2C_MEMADD_SIZE_8BIT,
							&Value,
							1,
							1000);

	return Value;
 8000878:	7bbb      	ldrb	r3, [r7, #14]
}
 800087a:	4618      	mov	r0, r3
 800087c:	3710      	adds	r7, #16
 800087e:	46bd      	mov	sp, r7
 8000880:	bd80      	pop	{r7, pc}
 8000882:	bf00      	nop
 8000884:	200002bc 	.word	0x200002bc

08000888 <TS_IO_ReadMultiple>:
							1000);

}

uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 8000888:	b580      	push	{r7, lr}
 800088a:	b088      	sub	sp, #32
 800088c:	af04      	add	r7, sp, #16
 800088e:	603a      	str	r2, [r7, #0]
 8000890:	461a      	mov	r2, r3
 8000892:	4603      	mov	r3, r0
 8000894:	71fb      	strb	r3, [r7, #7]
 8000896:	460b      	mov	r3, r1
 8000898:	71bb      	strb	r3, [r7, #6]
 800089a:	4613      	mov	r3, r2
 800089c:	80bb      	strh	r3, [r7, #4]
	HAL_StatusTypeDef status = HAL_OK;
 800089e:	2300      	movs	r3, #0
 80008a0:	73fb      	strb	r3, [r7, #15]

	status = HAL_I2C_Mem_Read(&hi2c1,
 80008a2:	79fb      	ldrb	r3, [r7, #7]
 80008a4:	b299      	uxth	r1, r3
 80008a6:	79bb      	ldrb	r3, [r7, #6]
 80008a8:	b29a      	uxth	r2, r3
 80008aa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80008ae:	9302      	str	r3, [sp, #8]
 80008b0:	88bb      	ldrh	r3, [r7, #4]
 80008b2:	9301      	str	r3, [sp, #4]
 80008b4:	683b      	ldr	r3, [r7, #0]
 80008b6:	9300      	str	r3, [sp, #0]
 80008b8:	2301      	movs	r3, #1
 80008ba:	4805      	ldr	r0, [pc, #20]	; (80008d0 <TS_IO_ReadMultiple+0x48>)
 80008bc:	f003 f9c8 	bl	8003c50 <HAL_I2C_Mem_Read>
 80008c0:	4603      	mov	r3, r0
 80008c2:	73fb      	strb	r3, [r7, #15]
							(uint16_t)Reg,
							I2C_MEMADD_SIZE_8BIT,
							Buffer,
							Length,
							1000);
}
 80008c4:	bf00      	nop
 80008c6:	4618      	mov	r0, r3
 80008c8:	3710      	adds	r7, #16
 80008ca:	46bd      	mov	sp, r7
 80008cc:	bd80      	pop	{r7, pc}
 80008ce:	bf00      	nop
 80008d0:	200002bc 	.word	0x200002bc

080008d4 <CS4350_Init>:

/* UART Declaration */
//extern void transmit_uart(char *string);

uint8_t CS4350_Init(CS4350* codec, I2C_HandleTypeDef* I2Chandle, GPIO_TypeDef* nrstPinBank, uint16_t nrstPin)
{
 80008d4:	b580      	push	{r7, lr}
 80008d6:	b092      	sub	sp, #72	; 0x48
 80008d8:	af00      	add	r7, sp, #0
 80008da:	60f8      	str	r0, [r7, #12]
 80008dc:	60b9      	str	r1, [r7, #8]
 80008de:	607a      	str	r2, [r7, #4]
 80008e0:	807b      	strh	r3, [r7, #2]
	uint8_t data;
	uint8_t read;
	char temp[50];

	/* Store I2C handle and reset pin location */
	codec->I2CHandle = I2Chandle;
 80008e2:	68fb      	ldr	r3, [r7, #12]
 80008e4:	68ba      	ldr	r2, [r7, #8]
 80008e6:	601a      	str	r2, [r3, #0]
	codec->nrstPinBank = nrstPinBank;
 80008e8:	68fb      	ldr	r3, [r7, #12]
 80008ea:	687a      	ldr	r2, [r7, #4]
 80008ec:	605a      	str	r2, [r3, #4]
	codec->nrstPin = nrstPin;
 80008ee:	68fb      	ldr	r3, [r7, #12]
 80008f0:	887a      	ldrh	r2, [r7, #2]
 80008f2:	811a      	strh	r2, [r3, #8]

	/* Reset codec */
	CS4350_Reset(codec);
 80008f4:	68f8      	ldr	r0, [r7, #12]
 80008f6:	f000 f8cd 	bl	8000a94 <CS4350_Reset>
//	data = 0x92;
	/* TODO
	 *
	 * Look into this!
	 * */
	data = 0x95;
 80008fa:	2395      	movs	r3, #149	; 0x95
 80008fc:	f887 3046 	strb.w	r3, [r7, #70]	; 0x46
	status = CS4350_WriteRegister(codec, MODE_CTRL, &data);
 8000900:	f107 0346 	add.w	r3, r7, #70	; 0x46
 8000904:	461a      	mov	r2, r3
 8000906:	2102      	movs	r1, #2
 8000908:	68f8      	ldr	r0, [r7, #12]
 800090a:	f000 f9df 	bl	8000ccc <CS4350_WriteRegister>
 800090e:	4603      	mov	r3, r0
 8000910:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
	if (status != HAL_OK)
 8000914:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 8000918:	2b00      	cmp	r3, #0
 800091a:	d002      	beq.n	8000922 <CS4350_Init+0x4e>
	{
		printf("Unable to write to register: MODE_CTRL!\r\n");
 800091c:	4854      	ldr	r0, [pc, #336]	; (8000a70 <CS4350_Init+0x19c>)
 800091e:	f028 f941 	bl	8028ba4 <puts>
	}
	status = CS4350_ReadRegister(codec, MODE_CTRL, &read);
 8000922:	f107 0345 	add.w	r3, r7, #69	; 0x45
 8000926:	461a      	mov	r2, r3
 8000928:	2102      	movs	r1, #2
 800092a:	68f8      	ldr	r0, [r7, #12]
 800092c:	f000 f9b2 	bl	8000c94 <CS4350_ReadRegister>
 8000930:	4603      	mov	r3, r0
 8000932:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
	if (status != HAL_OK)
 8000936:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 800093a:	2b00      	cmp	r3, #0
 800093c:	d003      	beq.n	8000946 <CS4350_Init+0x72>
	{
		printf("Unable to read register: MODE_CTRL!\r\n");
 800093e:	484d      	ldr	r0, [pc, #308]	; (8000a74 <CS4350_Init+0x1a0>)
 8000940:	f028 f930 	bl	8028ba4 <puts>
 8000944:	e00d      	b.n	8000962 <CS4350_Init+0x8e>
	}
	else
	{
		sprintf(temp, "MODE_CTRL: %x\r\n", read);
 8000946:	f897 3045 	ldrb.w	r3, [r7, #69]	; 0x45
 800094a:	461a      	mov	r2, r3
 800094c:	f107 0310 	add.w	r3, r7, #16
 8000950:	4949      	ldr	r1, [pc, #292]	; (8000a78 <CS4350_Init+0x1a4>)
 8000952:	4618      	mov	r0, r3
 8000954:	f027 ffde 	bl	8028914 <siprintf>
		printf(temp);
 8000958:	f107 0310 	add.w	r3, r7, #16
 800095c:	4618      	mov	r0, r3
 800095e:	f028 f8bb 	bl	8028ad8 <iprintf>
	}

	/* Volume Mixing and Inversion Control */
	//data = 0x59;
	data = 0x89;
 8000962:	2389      	movs	r3, #137	; 0x89
 8000964:	f887 3046 	strb.w	r3, [r7, #70]	; 0x46
	status = CS4350_WriteRegister(codec, VOLUME_MIXING_CTRL, &data);
 8000968:	f107 0346 	add.w	r3, r7, #70	; 0x46
 800096c:	461a      	mov	r2, r3
 800096e:	2103      	movs	r1, #3
 8000970:	68f8      	ldr	r0, [r7, #12]
 8000972:	f000 f9ab 	bl	8000ccc <CS4350_WriteRegister>
 8000976:	4603      	mov	r3, r0
 8000978:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
	if (status != HAL_OK)
 800097c:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 8000980:	2b00      	cmp	r3, #0
 8000982:	d002      	beq.n	800098a <CS4350_Init+0xb6>
	{
		printf("Unable to write to register: VOLUME_MIXING_CTR!\r\n");
 8000984:	483d      	ldr	r0, [pc, #244]	; (8000a7c <CS4350_Init+0x1a8>)
 8000986:	f028 f90d 	bl	8028ba4 <puts>
	}
	status = CS4350_ReadRegister(codec, VOLUME_MIXING_CTRL, &read);
 800098a:	f107 0345 	add.w	r3, r7, #69	; 0x45
 800098e:	461a      	mov	r2, r3
 8000990:	2103      	movs	r1, #3
 8000992:	68f8      	ldr	r0, [r7, #12]
 8000994:	f000 f97e 	bl	8000c94 <CS4350_ReadRegister>
 8000998:	4603      	mov	r3, r0
 800099a:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
	if (status != HAL_OK)
 800099e:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 80009a2:	2b00      	cmp	r3, #0
 80009a4:	d003      	beq.n	80009ae <CS4350_Init+0xda>
	{
		printf("Unable to read register: VOLUME_MIXING_CTRL!\r\n");
 80009a6:	4836      	ldr	r0, [pc, #216]	; (8000a80 <CS4350_Init+0x1ac>)
 80009a8:	f028 f8fc 	bl	8028ba4 <puts>
 80009ac:	e00d      	b.n	80009ca <CS4350_Init+0xf6>
	}
	else
	{
		sprintf(temp, "VOLUME_MIXING_CTRL: %x\r\n", read);
 80009ae:	f897 3045 	ldrb.w	r3, [r7, #69]	; 0x45
 80009b2:	461a      	mov	r2, r3
 80009b4:	f107 0310 	add.w	r3, r7, #16
 80009b8:	4932      	ldr	r1, [pc, #200]	; (8000a84 <CS4350_Init+0x1b0>)
 80009ba:	4618      	mov	r0, r3
 80009bc:	f027 ffaa 	bl	8028914 <siprintf>
		printf(temp);
 80009c0:	f107 0310 	add.w	r3, r7, #16
 80009c4:	4618      	mov	r0, r3
 80009c6:	f028 f887 	bl	8028ad8 <iprintf>
	}

	/* Set volume */
	data = 0xE1; // 225
 80009ca:	23e1      	movs	r3, #225	; 0xe1
 80009cc:	f887 3046 	strb.w	r3, [r7, #70]	; 0x46
	status = CS4350_WriteRegister(codec, CHANNELA_VOL_CTRL, &data);
 80009d0:	f107 0346 	add.w	r3, r7, #70	; 0x46
 80009d4:	461a      	mov	r2, r3
 80009d6:	2105      	movs	r1, #5
 80009d8:	68f8      	ldr	r0, [r7, #12]
 80009da:	f000 f977 	bl	8000ccc <CS4350_WriteRegister>
 80009de:	4603      	mov	r3, r0
 80009e0:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
	if (status != HAL_OK)
 80009e4:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 80009e8:	2b00      	cmp	r3, #0
 80009ea:	d002      	beq.n	80009f2 <CS4350_Init+0x11e>
	{
		printf("Unable to write to register: CHANNELA_VOL_CTRL!\r\n");
 80009ec:	4826      	ldr	r0, [pc, #152]	; (8000a88 <CS4350_Init+0x1b4>)
 80009ee:	f028 f8d9 	bl	8028ba4 <puts>
	}
	status = CS4350_ReadRegister(codec, CHANNELA_VOL_CTRL, &read);
 80009f2:	f107 0345 	add.w	r3, r7, #69	; 0x45
 80009f6:	461a      	mov	r2, r3
 80009f8:	2105      	movs	r1, #5
 80009fa:	68f8      	ldr	r0, [r7, #12]
 80009fc:	f000 f94a 	bl	8000c94 <CS4350_ReadRegister>
 8000a00:	4603      	mov	r3, r0
 8000a02:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
	if (status != HAL_OK)
 8000a06:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 8000a0a:	2b00      	cmp	r3, #0
 8000a0c:	d002      	beq.n	8000a14 <CS4350_Init+0x140>
	{
		printf("Unable to read register: CHANNELA_VOL_CTRL!\r\n");
 8000a0e:	481f      	ldr	r0, [pc, #124]	; (8000a8c <CS4350_Init+0x1b8>)
 8000a10:	f028 f8c8 	bl	8028ba4 <puts>
	}
	printf("CHANNELA_VOL_CTRL: %d\r\n", read);
 8000a14:	f897 3045 	ldrb.w	r3, [r7, #69]	; 0x45
 8000a18:	4619      	mov	r1, r3
 8000a1a:	481d      	ldr	r0, [pc, #116]	; (8000a90 <CS4350_Init+0x1bc>)
 8000a1c:	f028 f85c 	bl	8028ad8 <iprintf>

	status = CS4350_WriteRegister(codec, CHANNELB_VOL_CTRL, &data);
 8000a20:	f107 0346 	add.w	r3, r7, #70	; 0x46
 8000a24:	461a      	mov	r2, r3
 8000a26:	2106      	movs	r1, #6
 8000a28:	68f8      	ldr	r0, [r7, #12]
 8000a2a:	f000 f94f 	bl	8000ccc <CS4350_WriteRegister>
 8000a2e:	4603      	mov	r3, r0
 8000a30:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
	if (status != HAL_OK)
 8000a34:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 8000a38:	2b00      	cmp	r3, #0
 8000a3a:	d002      	beq.n	8000a42 <CS4350_Init+0x16e>
	{
		printf("Unable to write to register: CHANNELA_VOL_CTRL!\r\n");
 8000a3c:	4812      	ldr	r0, [pc, #72]	; (8000a88 <CS4350_Init+0x1b4>)
 8000a3e:	f028 f8b1 	bl	8028ba4 <puts>
	}
	status = CS4350_ReadRegister(codec, CHANNELB_VOL_CTRL, &read);
 8000a42:	f107 0345 	add.w	r3, r7, #69	; 0x45
 8000a46:	461a      	mov	r2, r3
 8000a48:	2106      	movs	r1, #6
 8000a4a:	68f8      	ldr	r0, [r7, #12]
 8000a4c:	f000 f922 	bl	8000c94 <CS4350_ReadRegister>
 8000a50:	4603      	mov	r3, r0
 8000a52:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
	if (status != HAL_OK)
 8000a56:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 8000a5a:	2b00      	cmp	r3, #0
 8000a5c:	d002      	beq.n	8000a64 <CS4350_Init+0x190>
	{
		printf("Unable to read register: CHANNELA_VOL_CTRL!\r\n");
 8000a5e:	480b      	ldr	r0, [pc, #44]	; (8000a8c <CS4350_Init+0x1b8>)
 8000a60:	f028 f8a0 	bl	8028ba4 <puts>
	}

}
 8000a64:	bf00      	nop
 8000a66:	4618      	mov	r0, r3
 8000a68:	3748      	adds	r7, #72	; 0x48
 8000a6a:	46bd      	mov	sp, r7
 8000a6c:	bd80      	pop	{r7, pc}
 8000a6e:	bf00      	nop
 8000a70:	08029d3c 	.word	0x08029d3c
 8000a74:	08029d68 	.word	0x08029d68
 8000a78:	08029d90 	.word	0x08029d90
 8000a7c:	08029da0 	.word	0x08029da0
 8000a80:	08029dd4 	.word	0x08029dd4
 8000a84:	08029e04 	.word	0x08029e04
 8000a88:	08029e20 	.word	0x08029e20
 8000a8c:	08029e54 	.word	0x08029e54
 8000a90:	08029e84 	.word	0x08029e84

08000a94 <CS4350_Reset>:

void CS4350_Reset(CS4350* codec)
{
 8000a94:	b580      	push	{r7, lr}
 8000a96:	b090      	sub	sp, #64	; 0x40
 8000a98:	af00      	add	r7, sp, #0
 8000a9a:	6078      	str	r0, [r7, #4]
	uint8_t read;
	char temp[50];

//	transmit_uart("Booting DAC...\r\n");

	HAL_GPIO_WritePin(codec->nrstPinBank, codec->nrstPin, GPIO_PIN_RESET);
 8000a9c:	687b      	ldr	r3, [r7, #4]
 8000a9e:	6858      	ldr	r0, [r3, #4]
 8000aa0:	687b      	ldr	r3, [r7, #4]
 8000aa2:	891b      	ldrh	r3, [r3, #8]
 8000aa4:	2200      	movs	r2, #0
 8000aa6:	4619      	mov	r1, r3
 8000aa8:	f002 fe62 	bl	8003770 <HAL_GPIO_WritePin>
	HAL_Delay(5);
 8000aac:	2005      	movs	r0, #5
 8000aae:	f001 ffa3 	bl	80029f8 <HAL_Delay>
	HAL_GPIO_WritePin(codec->nrstPinBank, codec->nrstPin, GPIO_PIN_SET);
 8000ab2:	687b      	ldr	r3, [r7, #4]
 8000ab4:	6858      	ldr	r0, [r3, #4]
 8000ab6:	687b      	ldr	r3, [r7, #4]
 8000ab8:	891b      	ldrh	r3, [r3, #8]
 8000aba:	2201      	movs	r2, #1
 8000abc:	4619      	mov	r1, r3
 8000abe:	f002 fe57 	bl	8003770 <HAL_GPIO_WritePin>

	/* Control Port Mode test-write */
	HAL_Delay(1);
 8000ac2:	2001      	movs	r0, #1
 8000ac4:	f001 ff98 	bl	80029f8 <HAL_Delay>
//	if (status != HAL_OK)
//	{
//		transmit_uart("Unable to test-write to register: MISC_CTRL1\r\n");
//	}

	data = 0x80;
 8000ac8:	2380      	movs	r3, #128	; 0x80
 8000aca:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
	status = CS4350_WriteRegister(codec, MISC_CTRL, &data);
 8000ace:	f107 033e 	add.w	r3, r7, #62	; 0x3e
 8000ad2:	461a      	mov	r2, r3
 8000ad4:	2108      	movs	r1, #8
 8000ad6:	6878      	ldr	r0, [r7, #4]
 8000ad8:	f000 f8f8 	bl	8000ccc <CS4350_WriteRegister>
 8000adc:	4603      	mov	r3, r0
 8000ade:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
	if (status != HAL_OK)
 8000ae2:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 8000ae6:	2b00      	cmp	r3, #0
 8000ae8:	d002      	beq.n	8000af0 <CS4350_Reset+0x5c>
	{
		printf("Unable to test-write to register: MISC_CTRL\r\n");
 8000aea:	482f      	ldr	r0, [pc, #188]	; (8000ba8 <CS4350_Reset+0x114>)
 8000aec:	f028 f85a 	bl	8028ba4 <puts>
	}
	status = CS4350_ReadRegister(codec, MISC_CTRL, &read);
 8000af0:	f107 033d 	add.w	r3, r7, #61	; 0x3d
 8000af4:	461a      	mov	r2, r3
 8000af6:	2108      	movs	r1, #8
 8000af8:	6878      	ldr	r0, [r7, #4]
 8000afa:	f000 f8cb 	bl	8000c94 <CS4350_ReadRegister>
 8000afe:	4603      	mov	r3, r0
 8000b00:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
	if (status != HAL_OK)
 8000b04:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 8000b08:	2b00      	cmp	r3, #0
 8000b0a:	d003      	beq.n	8000b14 <CS4350_Reset+0x80>
	{
		printf("Unable to read register: MISC_CTRL\r\n");
 8000b0c:	4827      	ldr	r0, [pc, #156]	; (8000bac <CS4350_Reset+0x118>)
 8000b0e:	f028 f849 	bl	8028ba4 <puts>
 8000b12:	e00d      	b.n	8000b30 <CS4350_Reset+0x9c>
	}
	else
	{
		sprintf(temp, "MISC_CTRL: %x\r\n", read);
 8000b14:	f897 303d 	ldrb.w	r3, [r7, #61]	; 0x3d
 8000b18:	461a      	mov	r2, r3
 8000b1a:	f107 0308 	add.w	r3, r7, #8
 8000b1e:	4924      	ldr	r1, [pc, #144]	; (8000bb0 <CS4350_Reset+0x11c>)
 8000b20:	4618      	mov	r0, r3
 8000b22:	f027 fef7 	bl	8028914 <siprintf>
		printf(temp);
 8000b26:	f107 0308 	add.w	r3, r7, #8
 8000b2a:	4618      	mov	r0, r3
 8000b2c:	f027 ffd4 	bl	8028ad8 <iprintf>
	}

	data = 0x00;
 8000b30:	2300      	movs	r3, #0
 8000b32:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
	status = CS4350_WriteRegister(codec, MISC_CTRL, &data);
 8000b36:	f107 033e 	add.w	r3, r7, #62	; 0x3e
 8000b3a:	461a      	mov	r2, r3
 8000b3c:	2108      	movs	r1, #8
 8000b3e:	6878      	ldr	r0, [r7, #4]
 8000b40:	f000 f8c4 	bl	8000ccc <CS4350_WriteRegister>
 8000b44:	4603      	mov	r3, r0
 8000b46:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
	if (status != HAL_OK)
 8000b4a:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 8000b4e:	2b00      	cmp	r3, #0
 8000b50:	d002      	beq.n	8000b58 <CS4350_Reset+0xc4>
	{
		printf("Unable to test-write to register: MISC_CTRL2\r\n");
 8000b52:	4818      	ldr	r0, [pc, #96]	; (8000bb4 <CS4350_Reset+0x120>)
 8000b54:	f028 f826 	bl	8028ba4 <puts>
	}
	status = CS4350_ReadRegister(codec, MISC_CTRL, &read);
 8000b58:	f107 033d 	add.w	r3, r7, #61	; 0x3d
 8000b5c:	461a      	mov	r2, r3
 8000b5e:	2108      	movs	r1, #8
 8000b60:	6878      	ldr	r0, [r7, #4]
 8000b62:	f000 f897 	bl	8000c94 <CS4350_ReadRegister>
 8000b66:	4603      	mov	r3, r0
 8000b68:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
	if (status != HAL_OK)
 8000b6c:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 8000b70:	2b00      	cmp	r3, #0
 8000b72:	d003      	beq.n	8000b7c <CS4350_Reset+0xe8>
	{
		printf("Unable to read register: MISC_CTRL\r\n");
 8000b74:	480d      	ldr	r0, [pc, #52]	; (8000bac <CS4350_Reset+0x118>)
 8000b76:	f028 f815 	bl	8028ba4 <puts>
 8000b7a:	e00d      	b.n	8000b98 <CS4350_Reset+0x104>
	}
	else
	{
		sprintf(temp, "MISC_CTRL: %x\r\n", read);
 8000b7c:	f897 303d 	ldrb.w	r3, [r7, #61]	; 0x3d
 8000b80:	461a      	mov	r2, r3
 8000b82:	f107 0308 	add.w	r3, r7, #8
 8000b86:	490a      	ldr	r1, [pc, #40]	; (8000bb0 <CS4350_Reset+0x11c>)
 8000b88:	4618      	mov	r0, r3
 8000b8a:	f027 fec3 	bl	8028914 <siprintf>
		printf(temp);
 8000b8e:	f107 0308 	add.w	r3, r7, #8
 8000b92:	4618      	mov	r0, r3
 8000b94:	f027 ffa0 	bl	8028ad8 <iprintf>
	}

	printf("Exiting Boot!\r\n");
 8000b98:	4807      	ldr	r0, [pc, #28]	; (8000bb8 <CS4350_Reset+0x124>)
 8000b9a:	f028 f803 	bl	8028ba4 <puts>
}
 8000b9e:	bf00      	nop
 8000ba0:	3740      	adds	r7, #64	; 0x40
 8000ba2:	46bd      	mov	sp, r7
 8000ba4:	bd80      	pop	{r7, pc}
 8000ba6:	bf00      	nop
 8000ba8:	08029e9c 	.word	0x08029e9c
 8000bac:	08029ecc 	.word	0x08029ecc
 8000bb0:	08029ef0 	.word	0x08029ef0
 8000bb4:	08029f00 	.word	0x08029f00
 8000bb8:	08029f30 	.word	0x08029f30

08000bbc <CS4350_increase_vol>:

void CS4350_increase_vol(CS4350* codec)
{
 8000bbc:	b580      	push	{r7, lr}
 8000bbe:	b084      	sub	sp, #16
 8000bc0:	af00      	add	r7, sp, #0
 8000bc2:	6078      	str	r0, [r7, #4]
	HAL_StatusTypeDef status;
	uint8_t data;
	uint8_t read;

	status = CS4350_ReadRegister(codec, CHANNELA_VOL_CTRL, &read);
 8000bc4:	f107 030d 	add.w	r3, r7, #13
 8000bc8:	461a      	mov	r2, r3
 8000bca:	2105      	movs	r1, #5
 8000bcc:	6878      	ldr	r0, [r7, #4]
 8000bce:	f000 f861 	bl	8000c94 <CS4350_ReadRegister>
 8000bd2:	4603      	mov	r3, r0
 8000bd4:	73fb      	strb	r3, [r7, #15]
	if (status != HAL_OK)
 8000bd6:	7bfb      	ldrb	r3, [r7, #15]
 8000bd8:	2b00      	cmp	r3, #0
 8000bda:	d002      	beq.n	8000be2 <CS4350_increase_vol+0x26>
	{
		printf("Unable to read register: CHANNELA_VOL_CTRL!\r\n");
 8000bdc:	480f      	ldr	r0, [pc, #60]	; (8000c1c <CS4350_increase_vol+0x60>)
 8000bde:	f027 ffe1 	bl	8028ba4 <puts>
	}
	if ((read - 0x0A) < 10)
 8000be2:	7b7b      	ldrb	r3, [r7, #13]
 8000be4:	2b13      	cmp	r3, #19
 8000be6:	d915      	bls.n	8000c14 <CS4350_increase_vol+0x58>
	{
		return;
	}
	status = CS4350_WriteRegister(codec, CHANNELA_VOL_CTRL, &data);
 8000be8:	f107 030e 	add.w	r3, r7, #14
 8000bec:	461a      	mov	r2, r3
 8000bee:	2105      	movs	r1, #5
 8000bf0:	6878      	ldr	r0, [r7, #4]
 8000bf2:	f000 f86b 	bl	8000ccc <CS4350_WriteRegister>
 8000bf6:	4603      	mov	r3, r0
 8000bf8:	73fb      	strb	r3, [r7, #15]
	if (status != HAL_OK)
 8000bfa:	7bfb      	ldrb	r3, [r7, #15]
 8000bfc:	2b00      	cmp	r3, #0
 8000bfe:	d002      	beq.n	8000c06 <CS4350_increase_vol+0x4a>
	{
		printf("Unable to write to register: CHANNELA_VOL_CTRL!\r\n");
 8000c00:	4807      	ldr	r0, [pc, #28]	; (8000c20 <CS4350_increase_vol+0x64>)
 8000c02:	f027 ffcf 	bl	8028ba4 <puts>
	}

	printf("Current volume: %d\r\n", read - 0x0A);
 8000c06:	7b7b      	ldrb	r3, [r7, #13]
 8000c08:	3b0a      	subs	r3, #10
 8000c0a:	4619      	mov	r1, r3
 8000c0c:	4805      	ldr	r0, [pc, #20]	; (8000c24 <CS4350_increase_vol+0x68>)
 8000c0e:	f027 ff63 	bl	8028ad8 <iprintf>
 8000c12:	e000      	b.n	8000c16 <CS4350_increase_vol+0x5a>
		return;
 8000c14:	bf00      	nop
}
 8000c16:	3710      	adds	r7, #16
 8000c18:	46bd      	mov	sp, r7
 8000c1a:	bd80      	pop	{r7, pc}
 8000c1c:	08029e54 	.word	0x08029e54
 8000c20:	08029e20 	.word	0x08029e20
 8000c24:	08029f40 	.word	0x08029f40

08000c28 <CS4350_decrease_vol>:
void CS4350_decrease_vol(CS4350* codec)
{
 8000c28:	b580      	push	{r7, lr}
 8000c2a:	b084      	sub	sp, #16
 8000c2c:	af00      	add	r7, sp, #0
 8000c2e:	6078      	str	r0, [r7, #4]
	HAL_StatusTypeDef status;
	uint8_t data;
	uint8_t read;

	status = CS4350_ReadRegister(codec, CHANNELA_VOL_CTRL, &read);
 8000c30:	f107 030d 	add.w	r3, r7, #13
 8000c34:	461a      	mov	r2, r3
 8000c36:	2105      	movs	r1, #5
 8000c38:	6878      	ldr	r0, [r7, #4]
 8000c3a:	f000 f82b 	bl	8000c94 <CS4350_ReadRegister>
 8000c3e:	4603      	mov	r3, r0
 8000c40:	73fb      	strb	r3, [r7, #15]
	if (status != HAL_OK)
 8000c42:	7bfb      	ldrb	r3, [r7, #15]
 8000c44:	2b00      	cmp	r3, #0
 8000c46:	d002      	beq.n	8000c4e <CS4350_decrease_vol+0x26>
	{
		printf("Unable to read register: CHANNELA_VOL_CTRL!\r\n");
 8000c48:	480f      	ldr	r0, [pc, #60]	; (8000c88 <CS4350_decrease_vol+0x60>)
 8000c4a:	f027 ffab 	bl	8028ba4 <puts>
	}

	if ((read + 0x0A) > 245)
 8000c4e:	7b7b      	ldrb	r3, [r7, #13]
 8000c50:	2beb      	cmp	r3, #235	; 0xeb
 8000c52:	d815      	bhi.n	8000c80 <CS4350_decrease_vol+0x58>
	{
		return;
	}
	status = CS4350_WriteRegister(codec, CHANNELA_VOL_CTRL, &data);
 8000c54:	f107 030e 	add.w	r3, r7, #14
 8000c58:	461a      	mov	r2, r3
 8000c5a:	2105      	movs	r1, #5
 8000c5c:	6878      	ldr	r0, [r7, #4]
 8000c5e:	f000 f835 	bl	8000ccc <CS4350_WriteRegister>
 8000c62:	4603      	mov	r3, r0
 8000c64:	73fb      	strb	r3, [r7, #15]
	if (status != HAL_OK)
 8000c66:	7bfb      	ldrb	r3, [r7, #15]
 8000c68:	2b00      	cmp	r3, #0
 8000c6a:	d002      	beq.n	8000c72 <CS4350_decrease_vol+0x4a>
	{
		printf("Unable to write to register: CHANNELA_VOL_CTRL!\r\n");
 8000c6c:	4807      	ldr	r0, [pc, #28]	; (8000c8c <CS4350_decrease_vol+0x64>)
 8000c6e:	f027 ff99 	bl	8028ba4 <puts>
	}
	printf("Current volume: %d\r\n", read + 0x0A);
 8000c72:	7b7b      	ldrb	r3, [r7, #13]
 8000c74:	330a      	adds	r3, #10
 8000c76:	4619      	mov	r1, r3
 8000c78:	4805      	ldr	r0, [pc, #20]	; (8000c90 <CS4350_decrease_vol+0x68>)
 8000c7a:	f027 ff2d 	bl	8028ad8 <iprintf>
 8000c7e:	e000      	b.n	8000c82 <CS4350_decrease_vol+0x5a>
		return;
 8000c80:	bf00      	nop
}
 8000c82:	3710      	adds	r7, #16
 8000c84:	46bd      	mov	sp, r7
 8000c86:	bd80      	pop	{r7, pc}
 8000c88:	08029e54 	.word	0x08029e54
 8000c8c:	08029e20 	.word	0x08029e20
 8000c90:	08029f40 	.word	0x08029f40

08000c94 <CS4350_ReadRegister>:


HAL_StatusTypeDef CS4350_ReadRegister(CS4350* codec, uint16_t regAddr, uint8_t* data)
{
 8000c94:	b580      	push	{r7, lr}
 8000c96:	b08a      	sub	sp, #40	; 0x28
 8000c98:	af04      	add	r7, sp, #16
 8000c9a:	60f8      	str	r0, [r7, #12]
 8000c9c:	460b      	mov	r3, r1
 8000c9e:	607a      	str	r2, [r7, #4]
 8000ca0:	817b      	strh	r3, [r7, #10]
	HAL_StatusTypeDef status = HAL_I2C_Mem_Read(codec->I2CHandle, CS4350_I2C_ADDR | 0x01, regAddr, I2C_MEMADD_SIZE_8BIT, data, 1, HAL_MAX_DELAY);
 8000ca2:	68fb      	ldr	r3, [r7, #12]
 8000ca4:	6818      	ldr	r0, [r3, #0]
 8000ca6:	897a      	ldrh	r2, [r7, #10]
 8000ca8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000cac:	9302      	str	r3, [sp, #8]
 8000cae:	2301      	movs	r3, #1
 8000cb0:	9301      	str	r3, [sp, #4]
 8000cb2:	687b      	ldr	r3, [r7, #4]
 8000cb4:	9300      	str	r3, [sp, #0]
 8000cb6:	2301      	movs	r3, #1
 8000cb8:	2191      	movs	r1, #145	; 0x91
 8000cba:	f002 ffc9 	bl	8003c50 <HAL_I2C_Mem_Read>
 8000cbe:	4603      	mov	r3, r0
 8000cc0:	75fb      	strb	r3, [r7, #23]

	return status;
 8000cc2:	7dfb      	ldrb	r3, [r7, #23]
}
 8000cc4:	4618      	mov	r0, r3
 8000cc6:	3718      	adds	r7, #24
 8000cc8:	46bd      	mov	sp, r7
 8000cca:	bd80      	pop	{r7, pc}

08000ccc <CS4350_WriteRegister>:

HAL_StatusTypeDef CS4350_WriteRegister(CS4350* codec, uint16_t regAddr, uint8_t* data)
{
 8000ccc:	b580      	push	{r7, lr}
 8000cce:	b08a      	sub	sp, #40	; 0x28
 8000cd0:	af04      	add	r7, sp, #16
 8000cd2:	60f8      	str	r0, [r7, #12]
 8000cd4:	460b      	mov	r3, r1
 8000cd6:	607a      	str	r2, [r7, #4]
 8000cd8:	817b      	strh	r3, [r7, #10]
	HAL_StatusTypeDef status = HAL_I2C_Mem_Write(codec->I2CHandle, CS4350_I2C_ADDR, regAddr, I2C_MEMADD_SIZE_8BIT, data, 1, HAL_MAX_DELAY);
 8000cda:	68fb      	ldr	r3, [r7, #12]
 8000cdc:	6818      	ldr	r0, [r3, #0]
 8000cde:	897a      	ldrh	r2, [r7, #10]
 8000ce0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000ce4:	9302      	str	r3, [sp, #8]
 8000ce6:	2301      	movs	r3, #1
 8000ce8:	9301      	str	r3, [sp, #4]
 8000cea:	687b      	ldr	r3, [r7, #4]
 8000cec:	9300      	str	r3, [sp, #0]
 8000cee:	2301      	movs	r3, #1
 8000cf0:	2190      	movs	r1, #144	; 0x90
 8000cf2:	f002 feb3 	bl	8003a5c <HAL_I2C_Mem_Write>
 8000cf6:	4603      	mov	r3, r0
 8000cf8:	75fb      	strb	r3, [r7, #23]

	return status;
 8000cfa:	7dfb      	ldrb	r3, [r7, #23]
}
 8000cfc:	4618      	mov	r0, r3
 8000cfe:	3718      	adds	r7, #24
 8000d00:	46bd      	mov	sp, r7
 8000d02:	bd80      	pop	{r7, pc}

08000d04 <SELECT>:
 * SPI functions
 **************************************/

/* slave select */
static void SELECT(void)
{
 8000d04:	b580      	push	{r7, lr}
 8000d06:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(SD_CS_PORT, SD_CS_PIN, GPIO_PIN_RESET);
 8000d08:	2200      	movs	r2, #0
 8000d0a:	2110      	movs	r1, #16
 8000d0c:	4803      	ldr	r0, [pc, #12]	; (8000d1c <SELECT+0x18>)
 8000d0e:	f002 fd2f 	bl	8003770 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8000d12:	2001      	movs	r0, #1
 8000d14:	f001 fe70 	bl	80029f8 <HAL_Delay>
}
 8000d18:	bf00      	nop
 8000d1a:	bd80      	pop	{r7, pc}
 8000d1c:	40020000 	.word	0x40020000

08000d20 <DESELECT>:

/* slave deselect */
static void DESELECT(void)
{
 8000d20:	b580      	push	{r7, lr}
 8000d22:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(SD_CS_PORT, SD_CS_PIN, GPIO_PIN_SET);
 8000d24:	2201      	movs	r2, #1
 8000d26:	2110      	movs	r1, #16
 8000d28:	4803      	ldr	r0, [pc, #12]	; (8000d38 <DESELECT+0x18>)
 8000d2a:	f002 fd21 	bl	8003770 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8000d2e:	2001      	movs	r0, #1
 8000d30:	f001 fe62 	bl	80029f8 <HAL_Delay>
}
 8000d34:	bf00      	nop
 8000d36:	bd80      	pop	{r7, pc}
 8000d38:	40020000 	.word	0x40020000

08000d3c <SPI_TxByte>:

/* SPI transmit a byte */
static void SPI_TxByte(uint8_t data)
{
 8000d3c:	b580      	push	{r7, lr}
 8000d3e:	b082      	sub	sp, #8
 8000d40:	af00      	add	r7, sp, #0
 8000d42:	4603      	mov	r3, r0
 8000d44:	71fb      	strb	r3, [r7, #7]
	while(!__HAL_SPI_GET_FLAG(HSPI_SDCARD, SPI_FLAG_TXE));
 8000d46:	bf00      	nop
 8000d48:	4b08      	ldr	r3, [pc, #32]	; (8000d6c <SPI_TxByte+0x30>)
 8000d4a:	681b      	ldr	r3, [r3, #0]
 8000d4c:	689b      	ldr	r3, [r3, #8]
 8000d4e:	f003 0302 	and.w	r3, r3, #2
 8000d52:	2b02      	cmp	r3, #2
 8000d54:	d1f8      	bne.n	8000d48 <SPI_TxByte+0xc>
	HAL_SPI_Transmit(HSPI_SDCARD, &data, 1, SPI_TIMEOUT);
 8000d56:	1df9      	adds	r1, r7, #7
 8000d58:	2364      	movs	r3, #100	; 0x64
 8000d5a:	2201      	movs	r2, #1
 8000d5c:	4803      	ldr	r0, [pc, #12]	; (8000d6c <SPI_TxByte+0x30>)
 8000d5e:	f005 fdd0 	bl	8006902 <HAL_SPI_Transmit>
}
 8000d62:	bf00      	nop
 8000d64:	3708      	adds	r7, #8
 8000d66:	46bd      	mov	sp, r7
 8000d68:	bd80      	pop	{r7, pc}
 8000d6a:	bf00      	nop
 8000d6c:	2000040c 	.word	0x2000040c

08000d70 <SPI_TxBuffer>:

/* SPI transmit buffer */
static void SPI_TxBuffer(uint8_t *buffer, uint16_t len)
{
 8000d70:	b580      	push	{r7, lr}
 8000d72:	b082      	sub	sp, #8
 8000d74:	af00      	add	r7, sp, #0
 8000d76:	6078      	str	r0, [r7, #4]
 8000d78:	460b      	mov	r3, r1
 8000d7a:	807b      	strh	r3, [r7, #2]
	while(!__HAL_SPI_GET_FLAG(HSPI_SDCARD, SPI_FLAG_TXE));
 8000d7c:	bf00      	nop
 8000d7e:	4b08      	ldr	r3, [pc, #32]	; (8000da0 <SPI_TxBuffer+0x30>)
 8000d80:	681b      	ldr	r3, [r3, #0]
 8000d82:	689b      	ldr	r3, [r3, #8]
 8000d84:	f003 0302 	and.w	r3, r3, #2
 8000d88:	2b02      	cmp	r3, #2
 8000d8a:	d1f8      	bne.n	8000d7e <SPI_TxBuffer+0xe>
	HAL_SPI_Transmit(HSPI_SDCARD, buffer, len, SPI_TIMEOUT);
 8000d8c:	887a      	ldrh	r2, [r7, #2]
 8000d8e:	2364      	movs	r3, #100	; 0x64
 8000d90:	6879      	ldr	r1, [r7, #4]
 8000d92:	4803      	ldr	r0, [pc, #12]	; (8000da0 <SPI_TxBuffer+0x30>)
 8000d94:	f005 fdb5 	bl	8006902 <HAL_SPI_Transmit>
}
 8000d98:	bf00      	nop
 8000d9a:	3708      	adds	r7, #8
 8000d9c:	46bd      	mov	sp, r7
 8000d9e:	bd80      	pop	{r7, pc}
 8000da0:	2000040c 	.word	0x2000040c

08000da4 <SPI_RxByte>:

/* SPI receive a byte */
static uint8_t SPI_RxByte(void)
{
 8000da4:	b580      	push	{r7, lr}
 8000da6:	b084      	sub	sp, #16
 8000da8:	af02      	add	r7, sp, #8
	uint8_t dummy, data;
	dummy = 0xFF;
 8000daa:	23ff      	movs	r3, #255	; 0xff
 8000dac:	71fb      	strb	r3, [r7, #7]

	while(!__HAL_SPI_GET_FLAG(HSPI_SDCARD, SPI_FLAG_TXE));
 8000dae:	bf00      	nop
 8000db0:	4b09      	ldr	r3, [pc, #36]	; (8000dd8 <SPI_RxByte+0x34>)
 8000db2:	681b      	ldr	r3, [r3, #0]
 8000db4:	689b      	ldr	r3, [r3, #8]
 8000db6:	f003 0302 	and.w	r3, r3, #2
 8000dba:	2b02      	cmp	r3, #2
 8000dbc:	d1f8      	bne.n	8000db0 <SPI_RxByte+0xc>
	HAL_SPI_TransmitReceive(HSPI_SDCARD, &dummy, &data, 1, SPI_TIMEOUT);
 8000dbe:	1dba      	adds	r2, r7, #6
 8000dc0:	1df9      	adds	r1, r7, #7
 8000dc2:	2364      	movs	r3, #100	; 0x64
 8000dc4:	9300      	str	r3, [sp, #0]
 8000dc6:	2301      	movs	r3, #1
 8000dc8:	4803      	ldr	r0, [pc, #12]	; (8000dd8 <SPI_RxByte+0x34>)
 8000dca:	f005 fed6 	bl	8006b7a <HAL_SPI_TransmitReceive>

	return data;
 8000dce:	79bb      	ldrb	r3, [r7, #6]
}
 8000dd0:	4618      	mov	r0, r3
 8000dd2:	3708      	adds	r7, #8
 8000dd4:	46bd      	mov	sp, r7
 8000dd6:	bd80      	pop	{r7, pc}
 8000dd8:	2000040c 	.word	0x2000040c

08000ddc <SPI_RxBytePtr>:

/* SPI receive a byte via pointer */
static void SPI_RxBytePtr(uint8_t *buff) 
{
 8000ddc:	b580      	push	{r7, lr}
 8000dde:	b082      	sub	sp, #8
 8000de0:	af00      	add	r7, sp, #0
 8000de2:	6078      	str	r0, [r7, #4]
	*buff = SPI_RxByte();
 8000de4:	f7ff ffde 	bl	8000da4 <SPI_RxByte>
 8000de8:	4603      	mov	r3, r0
 8000dea:	461a      	mov	r2, r3
 8000dec:	687b      	ldr	r3, [r7, #4]
 8000dee:	701a      	strb	r2, [r3, #0]
}
 8000df0:	bf00      	nop
 8000df2:	3708      	adds	r7, #8
 8000df4:	46bd      	mov	sp, r7
 8000df6:	bd80      	pop	{r7, pc}

08000df8 <SD_ReadyWait>:
 * SD functions
 **************************************/

/* wait SD ready */
static uint8_t SD_ReadyWait(void)
{
 8000df8:	b580      	push	{r7, lr}
 8000dfa:	b082      	sub	sp, #8
 8000dfc:	af00      	add	r7, sp, #0
	uint8_t res;

	/* timeout 500ms */
	Timer2 = 500;
 8000dfe:	4b0a      	ldr	r3, [pc, #40]	; (8000e28 <SD_ReadyWait+0x30>)
 8000e00:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8000e04:	801a      	strh	r2, [r3, #0]

	/* if SD goes ready, receives 0xFF */
	do {
		res = SPI_RxByte();
 8000e06:	f7ff ffcd 	bl	8000da4 <SPI_RxByte>
 8000e0a:	4603      	mov	r3, r0
 8000e0c:	71fb      	strb	r3, [r7, #7]
	} while ((res != 0xFF) && Timer2);
 8000e0e:	79fb      	ldrb	r3, [r7, #7]
 8000e10:	2bff      	cmp	r3, #255	; 0xff
 8000e12:	d003      	beq.n	8000e1c <SD_ReadyWait+0x24>
 8000e14:	4b04      	ldr	r3, [pc, #16]	; (8000e28 <SD_ReadyWait+0x30>)
 8000e16:	881b      	ldrh	r3, [r3, #0]
 8000e18:	2b00      	cmp	r3, #0
 8000e1a:	d1f4      	bne.n	8000e06 <SD_ReadyWait+0xe>

	return res;
 8000e1c:	79fb      	ldrb	r3, [r7, #7]
}
 8000e1e:	4618      	mov	r0, r3
 8000e20:	3708      	adds	r7, #8
 8000e22:	46bd      	mov	sp, r7
 8000e24:	bd80      	pop	{r7, pc}
 8000e26:	bf00      	nop
 8000e28:	2000015e 	.word	0x2000015e

08000e2c <SD_PowerOn>:

/* power on */
static void SD_PowerOn(void) 
{
 8000e2c:	b580      	push	{r7, lr}
 8000e2e:	b084      	sub	sp, #16
 8000e30:	af00      	add	r7, sp, #0
	uint8_t args[6];
	uint32_t cnt = 0x1FFF;
 8000e32:	f641 73ff 	movw	r3, #8191	; 0x1fff
 8000e36:	60fb      	str	r3, [r7, #12]

	/* transmit bytes to wake up */
	DESELECT();
 8000e38:	f7ff ff72 	bl	8000d20 <DESELECT>
	for(int i = 0; i < 10; i++)
 8000e3c:	2300      	movs	r3, #0
 8000e3e:	60bb      	str	r3, [r7, #8]
 8000e40:	e005      	b.n	8000e4e <SD_PowerOn+0x22>
	{
		SPI_TxByte(0xFF);
 8000e42:	20ff      	movs	r0, #255	; 0xff
 8000e44:	f7ff ff7a 	bl	8000d3c <SPI_TxByte>
	for(int i = 0; i < 10; i++)
 8000e48:	68bb      	ldr	r3, [r7, #8]
 8000e4a:	3301      	adds	r3, #1
 8000e4c:	60bb      	str	r3, [r7, #8]
 8000e4e:	68bb      	ldr	r3, [r7, #8]
 8000e50:	2b09      	cmp	r3, #9
 8000e52:	ddf6      	ble.n	8000e42 <SD_PowerOn+0x16>
	}

	/* slave select */
	SELECT();
 8000e54:	f7ff ff56 	bl	8000d04 <SELECT>

	/* make idle state */
	args[0] = CMD0;		/* CMD0:GO_IDLE_STATE */
 8000e58:	2340      	movs	r3, #64	; 0x40
 8000e5a:	703b      	strb	r3, [r7, #0]
	args[1] = 0;
 8000e5c:	2300      	movs	r3, #0
 8000e5e:	707b      	strb	r3, [r7, #1]
	args[2] = 0;
 8000e60:	2300      	movs	r3, #0
 8000e62:	70bb      	strb	r3, [r7, #2]
	args[3] = 0;
 8000e64:	2300      	movs	r3, #0
 8000e66:	70fb      	strb	r3, [r7, #3]
	args[4] = 0;
 8000e68:	2300      	movs	r3, #0
 8000e6a:	713b      	strb	r3, [r7, #4]
	args[5] = 0x95;		/* CRC */
 8000e6c:	2395      	movs	r3, #149	; 0x95
 8000e6e:	717b      	strb	r3, [r7, #5]

	SPI_TxBuffer(args, sizeof(args));
 8000e70:	463b      	mov	r3, r7
 8000e72:	2106      	movs	r1, #6
 8000e74:	4618      	mov	r0, r3
 8000e76:	f7ff ff7b 	bl	8000d70 <SPI_TxBuffer>

	/* wait response */
	while ((SPI_RxByte() != 0x01) && cnt)
 8000e7a:	e002      	b.n	8000e82 <SD_PowerOn+0x56>
	{
		cnt--;
 8000e7c:	68fb      	ldr	r3, [r7, #12]
 8000e7e:	3b01      	subs	r3, #1
 8000e80:	60fb      	str	r3, [r7, #12]
	while ((SPI_RxByte() != 0x01) && cnt)
 8000e82:	f7ff ff8f 	bl	8000da4 <SPI_RxByte>
 8000e86:	4603      	mov	r3, r0
 8000e88:	2b01      	cmp	r3, #1
 8000e8a:	d002      	beq.n	8000e92 <SD_PowerOn+0x66>
 8000e8c:	68fb      	ldr	r3, [r7, #12]
 8000e8e:	2b00      	cmp	r3, #0
 8000e90:	d1f4      	bne.n	8000e7c <SD_PowerOn+0x50>
	}

	DESELECT();
 8000e92:	f7ff ff45 	bl	8000d20 <DESELECT>
	SPI_TxByte(0XFF);
 8000e96:	20ff      	movs	r0, #255	; 0xff
 8000e98:	f7ff ff50 	bl	8000d3c <SPI_TxByte>

	PowerFlag = 1;
 8000e9c:	4b03      	ldr	r3, [pc, #12]	; (8000eac <SD_PowerOn+0x80>)
 8000e9e:	2201      	movs	r2, #1
 8000ea0:	701a      	strb	r2, [r3, #0]
}
 8000ea2:	bf00      	nop
 8000ea4:	3710      	adds	r7, #16
 8000ea6:	46bd      	mov	sp, r7
 8000ea8:	bd80      	pop	{r7, pc}
 8000eaa:	bf00      	nop
 8000eac:	20000161 	.word	0x20000161

08000eb0 <SD_PowerOff>:

/* power off */
static void SD_PowerOff(void) 
{
 8000eb0:	b480      	push	{r7}
 8000eb2:	af00      	add	r7, sp, #0
	PowerFlag = 0;
 8000eb4:	4b03      	ldr	r3, [pc, #12]	; (8000ec4 <SD_PowerOff+0x14>)
 8000eb6:	2200      	movs	r2, #0
 8000eb8:	701a      	strb	r2, [r3, #0]
}
 8000eba:	bf00      	nop
 8000ebc:	46bd      	mov	sp, r7
 8000ebe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ec2:	4770      	bx	lr
 8000ec4:	20000161 	.word	0x20000161

08000ec8 <SD_CheckPower>:

/* check power flag */
static uint8_t SD_CheckPower(void) 
{
 8000ec8:	b480      	push	{r7}
 8000eca:	af00      	add	r7, sp, #0
	return PowerFlag;
 8000ecc:	4b03      	ldr	r3, [pc, #12]	; (8000edc <SD_CheckPower+0x14>)
 8000ece:	781b      	ldrb	r3, [r3, #0]
}
 8000ed0:	4618      	mov	r0, r3
 8000ed2:	46bd      	mov	sp, r7
 8000ed4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ed8:	4770      	bx	lr
 8000eda:	bf00      	nop
 8000edc:	20000161 	.word	0x20000161

08000ee0 <SD_RxDataBlock>:

/* receive data block */
static bool SD_RxDataBlock(BYTE *buff, UINT len)
{
 8000ee0:	b580      	push	{r7, lr}
 8000ee2:	b084      	sub	sp, #16
 8000ee4:	af00      	add	r7, sp, #0
 8000ee6:	6078      	str	r0, [r7, #4]
 8000ee8:	6039      	str	r1, [r7, #0]
	uint8_t token;

	/* timeout 200ms */
	Timer1 = 200;
 8000eea:	4b13      	ldr	r3, [pc, #76]	; (8000f38 <SD_RxDataBlock+0x58>)
 8000eec:	22c8      	movs	r2, #200	; 0xc8
 8000eee:	801a      	strh	r2, [r3, #0]

	/* loop until receive a response or timeout */
	do {
		token = SPI_RxByte();
 8000ef0:	f7ff ff58 	bl	8000da4 <SPI_RxByte>
 8000ef4:	4603      	mov	r3, r0
 8000ef6:	73fb      	strb	r3, [r7, #15]
	} while((token == 0xFF) && Timer1);
 8000ef8:	7bfb      	ldrb	r3, [r7, #15]
 8000efa:	2bff      	cmp	r3, #255	; 0xff
 8000efc:	d103      	bne.n	8000f06 <SD_RxDataBlock+0x26>
 8000efe:	4b0e      	ldr	r3, [pc, #56]	; (8000f38 <SD_RxDataBlock+0x58>)
 8000f00:	881b      	ldrh	r3, [r3, #0]
 8000f02:	2b00      	cmp	r3, #0
 8000f04:	d1f4      	bne.n	8000ef0 <SD_RxDataBlock+0x10>

	/* invalid response */
	if(token != 0xFE) return FALSE;
 8000f06:	7bfb      	ldrb	r3, [r7, #15]
 8000f08:	2bfe      	cmp	r3, #254	; 0xfe
 8000f0a:	d001      	beq.n	8000f10 <SD_RxDataBlock+0x30>
 8000f0c:	2300      	movs	r3, #0
 8000f0e:	e00f      	b.n	8000f30 <SD_RxDataBlock+0x50>

	/* receive data */
	do {
		SPI_RxBytePtr(buff++);
 8000f10:	687b      	ldr	r3, [r7, #4]
 8000f12:	1c5a      	adds	r2, r3, #1
 8000f14:	607a      	str	r2, [r7, #4]
 8000f16:	4618      	mov	r0, r3
 8000f18:	f7ff ff60 	bl	8000ddc <SPI_RxBytePtr>
	} while(len--);
 8000f1c:	683b      	ldr	r3, [r7, #0]
 8000f1e:	1e5a      	subs	r2, r3, #1
 8000f20:	603a      	str	r2, [r7, #0]
 8000f22:	2b00      	cmp	r3, #0
 8000f24:	d1f4      	bne.n	8000f10 <SD_RxDataBlock+0x30>

	/* discard CRC */
	SPI_RxByte();
 8000f26:	f7ff ff3d 	bl	8000da4 <SPI_RxByte>
	SPI_RxByte();
 8000f2a:	f7ff ff3b 	bl	8000da4 <SPI_RxByte>

	return TRUE;
 8000f2e:	2301      	movs	r3, #1
}
 8000f30:	4618      	mov	r0, r3
 8000f32:	3710      	adds	r7, #16
 8000f34:	46bd      	mov	sp, r7
 8000f36:	bd80      	pop	{r7, pc}
 8000f38:	2000015c 	.word	0x2000015c

08000f3c <SD_TxDataBlock>:

/* transmit data block */
#if _USE_WRITE == 1
static bool SD_TxDataBlock(const uint8_t *buff, BYTE token)
{
 8000f3c:	b580      	push	{r7, lr}
 8000f3e:	b084      	sub	sp, #16
 8000f40:	af00      	add	r7, sp, #0
 8000f42:	6078      	str	r0, [r7, #4]
 8000f44:	460b      	mov	r3, r1
 8000f46:	70fb      	strb	r3, [r7, #3]
	uint8_t resp;
	uint8_t i = 0;
 8000f48:	2300      	movs	r3, #0
 8000f4a:	73bb      	strb	r3, [r7, #14]

	/* wait SD ready */
	if (SD_ReadyWait() != 0xFF) return FALSE;
 8000f4c:	f7ff ff54 	bl	8000df8 <SD_ReadyWait>
 8000f50:	4603      	mov	r3, r0
 8000f52:	2bff      	cmp	r3, #255	; 0xff
 8000f54:	d001      	beq.n	8000f5a <SD_TxDataBlock+0x1e>
 8000f56:	2300      	movs	r3, #0
 8000f58:	e02f      	b.n	8000fba <SD_TxDataBlock+0x7e>

	/* transmit token */
	SPI_TxByte(token);
 8000f5a:	78fb      	ldrb	r3, [r7, #3]
 8000f5c:	4618      	mov	r0, r3
 8000f5e:	f7ff feed 	bl	8000d3c <SPI_TxByte>

	/* if it's not STOP token, transmit data */
	if (token != 0xFD)
 8000f62:	78fb      	ldrb	r3, [r7, #3]
 8000f64:	2bfd      	cmp	r3, #253	; 0xfd
 8000f66:	d020      	beq.n	8000faa <SD_TxDataBlock+0x6e>
	{
		SPI_TxBuffer((uint8_t*)buff, 512);
 8000f68:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000f6c:	6878      	ldr	r0, [r7, #4]
 8000f6e:	f7ff feff 	bl	8000d70 <SPI_TxBuffer>

		/* discard CRC */
		SPI_RxByte();
 8000f72:	f7ff ff17 	bl	8000da4 <SPI_RxByte>
		SPI_RxByte();
 8000f76:	f7ff ff15 	bl	8000da4 <SPI_RxByte>

		/* receive response */
		while (i <= 64)
 8000f7a:	e00b      	b.n	8000f94 <SD_TxDataBlock+0x58>
		{
			resp = SPI_RxByte();
 8000f7c:	f7ff ff12 	bl	8000da4 <SPI_RxByte>
 8000f80:	4603      	mov	r3, r0
 8000f82:	73fb      	strb	r3, [r7, #15]

			/* transmit 0x05 accepted */
			if ((resp & 0x1F) == 0x05) break;
 8000f84:	7bfb      	ldrb	r3, [r7, #15]
 8000f86:	f003 031f 	and.w	r3, r3, #31
 8000f8a:	2b05      	cmp	r3, #5
 8000f8c:	d006      	beq.n	8000f9c <SD_TxDataBlock+0x60>
			i++;
 8000f8e:	7bbb      	ldrb	r3, [r7, #14]
 8000f90:	3301      	adds	r3, #1
 8000f92:	73bb      	strb	r3, [r7, #14]
		while (i <= 64)
 8000f94:	7bbb      	ldrb	r3, [r7, #14]
 8000f96:	2b40      	cmp	r3, #64	; 0x40
 8000f98:	d9f0      	bls.n	8000f7c <SD_TxDataBlock+0x40>
 8000f9a:	e000      	b.n	8000f9e <SD_TxDataBlock+0x62>
			if ((resp & 0x1F) == 0x05) break;
 8000f9c:	bf00      	nop
		}

		/* recv buffer clear */
		while (SPI_RxByte() == 0);
 8000f9e:	bf00      	nop
 8000fa0:	f7ff ff00 	bl	8000da4 <SPI_RxByte>
 8000fa4:	4603      	mov	r3, r0
 8000fa6:	2b00      	cmp	r3, #0
 8000fa8:	d0fa      	beq.n	8000fa0 <SD_TxDataBlock+0x64>
	}

	/* transmit 0x05 accepted */
	if ((resp & 0x1F) == 0x05) return TRUE;
 8000faa:	7bfb      	ldrb	r3, [r7, #15]
 8000fac:	f003 031f 	and.w	r3, r3, #31
 8000fb0:	2b05      	cmp	r3, #5
 8000fb2:	d101      	bne.n	8000fb8 <SD_TxDataBlock+0x7c>
 8000fb4:	2301      	movs	r3, #1
 8000fb6:	e000      	b.n	8000fba <SD_TxDataBlock+0x7e>

	return FALSE;
 8000fb8:	2300      	movs	r3, #0
}
 8000fba:	4618      	mov	r0, r3
 8000fbc:	3710      	adds	r7, #16
 8000fbe:	46bd      	mov	sp, r7
 8000fc0:	bd80      	pop	{r7, pc}

08000fc2 <SD_SendCmd>:
#endif /* _USE_WRITE */

/* transmit command */
static BYTE SD_SendCmd(BYTE cmd, uint32_t arg)
{
 8000fc2:	b580      	push	{r7, lr}
 8000fc4:	b084      	sub	sp, #16
 8000fc6:	af00      	add	r7, sp, #0
 8000fc8:	4603      	mov	r3, r0
 8000fca:	6039      	str	r1, [r7, #0]
 8000fcc:	71fb      	strb	r3, [r7, #7]
	uint8_t crc, res;

	/* wait SD ready */
	if (SD_ReadyWait() != 0xFF) return 0xFF;
 8000fce:	f7ff ff13 	bl	8000df8 <SD_ReadyWait>
 8000fd2:	4603      	mov	r3, r0
 8000fd4:	2bff      	cmp	r3, #255	; 0xff
 8000fd6:	d001      	beq.n	8000fdc <SD_SendCmd+0x1a>
 8000fd8:	23ff      	movs	r3, #255	; 0xff
 8000fda:	e042      	b.n	8001062 <SD_SendCmd+0xa0>

	/* transmit command */
	SPI_TxByte(cmd); 					/* Command */
 8000fdc:	79fb      	ldrb	r3, [r7, #7]
 8000fde:	4618      	mov	r0, r3
 8000fe0:	f7ff feac 	bl	8000d3c <SPI_TxByte>
	SPI_TxByte((uint8_t)(arg >> 24)); 	/* Argument[31..24] */
 8000fe4:	683b      	ldr	r3, [r7, #0]
 8000fe6:	0e1b      	lsrs	r3, r3, #24
 8000fe8:	b2db      	uxtb	r3, r3
 8000fea:	4618      	mov	r0, r3
 8000fec:	f7ff fea6 	bl	8000d3c <SPI_TxByte>
	SPI_TxByte((uint8_t)(arg >> 16)); 	/* Argument[23..16] */
 8000ff0:	683b      	ldr	r3, [r7, #0]
 8000ff2:	0c1b      	lsrs	r3, r3, #16
 8000ff4:	b2db      	uxtb	r3, r3
 8000ff6:	4618      	mov	r0, r3
 8000ff8:	f7ff fea0 	bl	8000d3c <SPI_TxByte>
	SPI_TxByte((uint8_t)(arg >> 8)); 	/* Argument[15..8] */
 8000ffc:	683b      	ldr	r3, [r7, #0]
 8000ffe:	0a1b      	lsrs	r3, r3, #8
 8001000:	b2db      	uxtb	r3, r3
 8001002:	4618      	mov	r0, r3
 8001004:	f7ff fe9a 	bl	8000d3c <SPI_TxByte>
	SPI_TxByte((uint8_t)arg); 			/* Argument[7..0] */
 8001008:	683b      	ldr	r3, [r7, #0]
 800100a:	b2db      	uxtb	r3, r3
 800100c:	4618      	mov	r0, r3
 800100e:	f7ff fe95 	bl	8000d3c <SPI_TxByte>

	/* prepare CRC */
	if(cmd == CMD0) crc = 0x95;	/* CRC for CMD0(0) */
 8001012:	79fb      	ldrb	r3, [r7, #7]
 8001014:	2b40      	cmp	r3, #64	; 0x40
 8001016:	d102      	bne.n	800101e <SD_SendCmd+0x5c>
 8001018:	2395      	movs	r3, #149	; 0x95
 800101a:	73fb      	strb	r3, [r7, #15]
 800101c:	e007      	b.n	800102e <SD_SendCmd+0x6c>
	else if(cmd == CMD8) crc = 0x87;	/* CRC for CMD8(0x1AA) */
 800101e:	79fb      	ldrb	r3, [r7, #7]
 8001020:	2b48      	cmp	r3, #72	; 0x48
 8001022:	d102      	bne.n	800102a <SD_SendCmd+0x68>
 8001024:	2387      	movs	r3, #135	; 0x87
 8001026:	73fb      	strb	r3, [r7, #15]
 8001028:	e001      	b.n	800102e <SD_SendCmd+0x6c>
	else crc = 1;
 800102a:	2301      	movs	r3, #1
 800102c:	73fb      	strb	r3, [r7, #15]

	/* transmit CRC */
	SPI_TxByte(crc);
 800102e:	7bfb      	ldrb	r3, [r7, #15]
 8001030:	4618      	mov	r0, r3
 8001032:	f7ff fe83 	bl	8000d3c <SPI_TxByte>

	/* Skip a stuff byte when STOP_TRANSMISSION */
	if (cmd == CMD12) SPI_RxByte();
 8001036:	79fb      	ldrb	r3, [r7, #7]
 8001038:	2b4c      	cmp	r3, #76	; 0x4c
 800103a:	d101      	bne.n	8001040 <SD_SendCmd+0x7e>
 800103c:	f7ff feb2 	bl	8000da4 <SPI_RxByte>

	/* receive response */
	uint8_t n = 10;
 8001040:	230a      	movs	r3, #10
 8001042:	73bb      	strb	r3, [r7, #14]
	do {
		res = SPI_RxByte();
 8001044:	f7ff feae 	bl	8000da4 <SPI_RxByte>
 8001048:	4603      	mov	r3, r0
 800104a:	737b      	strb	r3, [r7, #13]
	} while ((res & 0x80) && --n);
 800104c:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8001050:	2b00      	cmp	r3, #0
 8001052:	da05      	bge.n	8001060 <SD_SendCmd+0x9e>
 8001054:	7bbb      	ldrb	r3, [r7, #14]
 8001056:	3b01      	subs	r3, #1
 8001058:	73bb      	strb	r3, [r7, #14]
 800105a:	7bbb      	ldrb	r3, [r7, #14]
 800105c:	2b00      	cmp	r3, #0
 800105e:	d1f1      	bne.n	8001044 <SD_SendCmd+0x82>

	return res;
 8001060:	7b7b      	ldrb	r3, [r7, #13]
}
 8001062:	4618      	mov	r0, r3
 8001064:	3710      	adds	r7, #16
 8001066:	46bd      	mov	sp, r7
 8001068:	bd80      	pop	{r7, pc}
	...

0800106c <SD_disk_initialize>:
 * user_diskio.c functions
 **************************************/

/* initialize SD */
DSTATUS SD_disk_initialize(BYTE drv) 
{
 800106c:	b590      	push	{r4, r7, lr}
 800106e:	b085      	sub	sp, #20
 8001070:	af00      	add	r7, sp, #0
 8001072:	4603      	mov	r3, r0
 8001074:	71fb      	strb	r3, [r7, #7]
	uint8_t n, type, ocr[4];

	/* single drive, drv should be 0 */
	if(drv) return STA_NOINIT;
 8001076:	79fb      	ldrb	r3, [r7, #7]
 8001078:	2b00      	cmp	r3, #0
 800107a:	d001      	beq.n	8001080 <SD_disk_initialize+0x14>
 800107c:	2301      	movs	r3, #1
 800107e:	e0d1      	b.n	8001224 <SD_disk_initialize+0x1b8>

	/* no disk */
	if(Stat & STA_NODISK) return Stat;
 8001080:	4b6a      	ldr	r3, [pc, #424]	; (800122c <SD_disk_initialize+0x1c0>)
 8001082:	781b      	ldrb	r3, [r3, #0]
 8001084:	b2db      	uxtb	r3, r3
 8001086:	f003 0302 	and.w	r3, r3, #2
 800108a:	2b00      	cmp	r3, #0
 800108c:	d003      	beq.n	8001096 <SD_disk_initialize+0x2a>
 800108e:	4b67      	ldr	r3, [pc, #412]	; (800122c <SD_disk_initialize+0x1c0>)
 8001090:	781b      	ldrb	r3, [r3, #0]
 8001092:	b2db      	uxtb	r3, r3
 8001094:	e0c6      	b.n	8001224 <SD_disk_initialize+0x1b8>

	/* power on */
	SD_PowerOn();
 8001096:	f7ff fec9 	bl	8000e2c <SD_PowerOn>

	/* slave select */
	SELECT();
 800109a:	f7ff fe33 	bl	8000d04 <SELECT>

	/* check disk type */
	type = 0;
 800109e:	2300      	movs	r3, #0
 80010a0:	73bb      	strb	r3, [r7, #14]

	/* send GO_IDLE_STATE command */
	if (SD_SendCmd(CMD0, 0) == 1)
 80010a2:	2100      	movs	r1, #0
 80010a4:	2040      	movs	r0, #64	; 0x40
 80010a6:	f7ff ff8c 	bl	8000fc2 <SD_SendCmd>
 80010aa:	4603      	mov	r3, r0
 80010ac:	2b01      	cmp	r3, #1
 80010ae:	f040 80a1 	bne.w	80011f4 <SD_disk_initialize+0x188>
	{
		/* timeout 1 sec */
		Timer1 = 1000;
 80010b2:	4b5f      	ldr	r3, [pc, #380]	; (8001230 <SD_disk_initialize+0x1c4>)
 80010b4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80010b8:	801a      	strh	r2, [r3, #0]

		/* SDC V2+ accept CMD8 command, http://elm-chan.org/docs/mmc/mmc_e.html */
		if (SD_SendCmd(CMD8, 0x1AA) == 1)
 80010ba:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 80010be:	2048      	movs	r0, #72	; 0x48
 80010c0:	f7ff ff7f 	bl	8000fc2 <SD_SendCmd>
 80010c4:	4603      	mov	r3, r0
 80010c6:	2b01      	cmp	r3, #1
 80010c8:	d155      	bne.n	8001176 <SD_disk_initialize+0x10a>
		{
			/* operation condition register */
			for (n = 0; n < 4; n++)
 80010ca:	2300      	movs	r3, #0
 80010cc:	73fb      	strb	r3, [r7, #15]
 80010ce:	e00c      	b.n	80010ea <SD_disk_initialize+0x7e>
			{
				ocr[n] = SPI_RxByte();
 80010d0:	7bfc      	ldrb	r4, [r7, #15]
 80010d2:	f7ff fe67 	bl	8000da4 <SPI_RxByte>
 80010d6:	4603      	mov	r3, r0
 80010d8:	461a      	mov	r2, r3
 80010da:	f104 0310 	add.w	r3, r4, #16
 80010de:	443b      	add	r3, r7
 80010e0:	f803 2c08 	strb.w	r2, [r3, #-8]
			for (n = 0; n < 4; n++)
 80010e4:	7bfb      	ldrb	r3, [r7, #15]
 80010e6:	3301      	adds	r3, #1
 80010e8:	73fb      	strb	r3, [r7, #15]
 80010ea:	7bfb      	ldrb	r3, [r7, #15]
 80010ec:	2b03      	cmp	r3, #3
 80010ee:	d9ef      	bls.n	80010d0 <SD_disk_initialize+0x64>
			}

			/* voltage range 2.7-3.6V */
			if (ocr[2] == 0x01 && ocr[3] == 0xAA)
 80010f0:	7abb      	ldrb	r3, [r7, #10]
 80010f2:	2b01      	cmp	r3, #1
 80010f4:	d17e      	bne.n	80011f4 <SD_disk_initialize+0x188>
 80010f6:	7afb      	ldrb	r3, [r7, #11]
 80010f8:	2baa      	cmp	r3, #170	; 0xaa
 80010fa:	d17b      	bne.n	80011f4 <SD_disk_initialize+0x188>
			{
				/* ACMD41 with HCS bit */
				do {
					if (SD_SendCmd(CMD55, 0) <= 1 && SD_SendCmd(CMD41, 1UL << 30) == 0) break;
 80010fc:	2100      	movs	r1, #0
 80010fe:	2077      	movs	r0, #119	; 0x77
 8001100:	f7ff ff5f 	bl	8000fc2 <SD_SendCmd>
 8001104:	4603      	mov	r3, r0
 8001106:	2b01      	cmp	r3, #1
 8001108:	d807      	bhi.n	800111a <SD_disk_initialize+0xae>
 800110a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 800110e:	2069      	movs	r0, #105	; 0x69
 8001110:	f7ff ff57 	bl	8000fc2 <SD_SendCmd>
 8001114:	4603      	mov	r3, r0
 8001116:	2b00      	cmp	r3, #0
 8001118:	d004      	beq.n	8001124 <SD_disk_initialize+0xb8>
				} while (Timer1);
 800111a:	4b45      	ldr	r3, [pc, #276]	; (8001230 <SD_disk_initialize+0x1c4>)
 800111c:	881b      	ldrh	r3, [r3, #0]
 800111e:	2b00      	cmp	r3, #0
 8001120:	d1ec      	bne.n	80010fc <SD_disk_initialize+0x90>
 8001122:	e000      	b.n	8001126 <SD_disk_initialize+0xba>
					if (SD_SendCmd(CMD55, 0) <= 1 && SD_SendCmd(CMD41, 1UL << 30) == 0) break;
 8001124:	bf00      	nop

				/* READ_OCR */
				if (Timer1 && SD_SendCmd(CMD58, 0) == 0)
 8001126:	4b42      	ldr	r3, [pc, #264]	; (8001230 <SD_disk_initialize+0x1c4>)
 8001128:	881b      	ldrh	r3, [r3, #0]
 800112a:	2b00      	cmp	r3, #0
 800112c:	d062      	beq.n	80011f4 <SD_disk_initialize+0x188>
 800112e:	2100      	movs	r1, #0
 8001130:	207a      	movs	r0, #122	; 0x7a
 8001132:	f7ff ff46 	bl	8000fc2 <SD_SendCmd>
 8001136:	4603      	mov	r3, r0
 8001138:	2b00      	cmp	r3, #0
 800113a:	d15b      	bne.n	80011f4 <SD_disk_initialize+0x188>
				{
					/* Check CCS bit */
					for (n = 0; n < 4; n++)
 800113c:	2300      	movs	r3, #0
 800113e:	73fb      	strb	r3, [r7, #15]
 8001140:	e00c      	b.n	800115c <SD_disk_initialize+0xf0>
					{
						ocr[n] = SPI_RxByte();
 8001142:	7bfc      	ldrb	r4, [r7, #15]
 8001144:	f7ff fe2e 	bl	8000da4 <SPI_RxByte>
 8001148:	4603      	mov	r3, r0
 800114a:	461a      	mov	r2, r3
 800114c:	f104 0310 	add.w	r3, r4, #16
 8001150:	443b      	add	r3, r7
 8001152:	f803 2c08 	strb.w	r2, [r3, #-8]
					for (n = 0; n < 4; n++)
 8001156:	7bfb      	ldrb	r3, [r7, #15]
 8001158:	3301      	adds	r3, #1
 800115a:	73fb      	strb	r3, [r7, #15]
 800115c:	7bfb      	ldrb	r3, [r7, #15]
 800115e:	2b03      	cmp	r3, #3
 8001160:	d9ef      	bls.n	8001142 <SD_disk_initialize+0xd6>
					}

					/* SDv2 (HC or SC) */
					type = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;
 8001162:	7a3b      	ldrb	r3, [r7, #8]
 8001164:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001168:	2b00      	cmp	r3, #0
 800116a:	d001      	beq.n	8001170 <SD_disk_initialize+0x104>
 800116c:	230c      	movs	r3, #12
 800116e:	e000      	b.n	8001172 <SD_disk_initialize+0x106>
 8001170:	2304      	movs	r3, #4
 8001172:	73bb      	strb	r3, [r7, #14]
 8001174:	e03e      	b.n	80011f4 <SD_disk_initialize+0x188>
			}
		}
		else
		{
			/* SDC V1 or MMC */
			type = (SD_SendCmd(CMD55, 0) <= 1 && SD_SendCmd(CMD41, 0) <= 1) ? CT_SD1 : CT_MMC;
 8001176:	2100      	movs	r1, #0
 8001178:	2077      	movs	r0, #119	; 0x77
 800117a:	f7ff ff22 	bl	8000fc2 <SD_SendCmd>
 800117e:	4603      	mov	r3, r0
 8001180:	2b01      	cmp	r3, #1
 8001182:	d808      	bhi.n	8001196 <SD_disk_initialize+0x12a>
 8001184:	2100      	movs	r1, #0
 8001186:	2069      	movs	r0, #105	; 0x69
 8001188:	f7ff ff1b 	bl	8000fc2 <SD_SendCmd>
 800118c:	4603      	mov	r3, r0
 800118e:	2b01      	cmp	r3, #1
 8001190:	d801      	bhi.n	8001196 <SD_disk_initialize+0x12a>
 8001192:	2302      	movs	r3, #2
 8001194:	e000      	b.n	8001198 <SD_disk_initialize+0x12c>
 8001196:	2301      	movs	r3, #1
 8001198:	73bb      	strb	r3, [r7, #14]

			do
			{
				if (type == CT_SD1)
 800119a:	7bbb      	ldrb	r3, [r7, #14]
 800119c:	2b02      	cmp	r3, #2
 800119e:	d10e      	bne.n	80011be <SD_disk_initialize+0x152>
				{
					if (SD_SendCmd(CMD55, 0) <= 1 && SD_SendCmd(CMD41, 0) == 0) break; /* ACMD41 */
 80011a0:	2100      	movs	r1, #0
 80011a2:	2077      	movs	r0, #119	; 0x77
 80011a4:	f7ff ff0d 	bl	8000fc2 <SD_SendCmd>
 80011a8:	4603      	mov	r3, r0
 80011aa:	2b01      	cmp	r3, #1
 80011ac:	d80e      	bhi.n	80011cc <SD_disk_initialize+0x160>
 80011ae:	2100      	movs	r1, #0
 80011b0:	2069      	movs	r0, #105	; 0x69
 80011b2:	f7ff ff06 	bl	8000fc2 <SD_SendCmd>
 80011b6:	4603      	mov	r3, r0
 80011b8:	2b00      	cmp	r3, #0
 80011ba:	d107      	bne.n	80011cc <SD_disk_initialize+0x160>
 80011bc:	e00c      	b.n	80011d8 <SD_disk_initialize+0x16c>
				}
				else
				{
					if (SD_SendCmd(CMD1, 0) == 0) break; /* CMD1 */
 80011be:	2100      	movs	r1, #0
 80011c0:	2041      	movs	r0, #65	; 0x41
 80011c2:	f7ff fefe 	bl	8000fc2 <SD_SendCmd>
 80011c6:	4603      	mov	r3, r0
 80011c8:	2b00      	cmp	r3, #0
 80011ca:	d004      	beq.n	80011d6 <SD_disk_initialize+0x16a>
				}

			} while (Timer1);
 80011cc:	4b18      	ldr	r3, [pc, #96]	; (8001230 <SD_disk_initialize+0x1c4>)
 80011ce:	881b      	ldrh	r3, [r3, #0]
 80011d0:	2b00      	cmp	r3, #0
 80011d2:	d1e2      	bne.n	800119a <SD_disk_initialize+0x12e>
 80011d4:	e000      	b.n	80011d8 <SD_disk_initialize+0x16c>
					if (SD_SendCmd(CMD1, 0) == 0) break; /* CMD1 */
 80011d6:	bf00      	nop

			/* SET_BLOCKLEN */
			if (!Timer1 || SD_SendCmd(CMD16, 512) != 0) type = 0;
 80011d8:	4b15      	ldr	r3, [pc, #84]	; (8001230 <SD_disk_initialize+0x1c4>)
 80011da:	881b      	ldrh	r3, [r3, #0]
 80011dc:	2b00      	cmp	r3, #0
 80011de:	d007      	beq.n	80011f0 <SD_disk_initialize+0x184>
 80011e0:	f44f 7100 	mov.w	r1, #512	; 0x200
 80011e4:	2050      	movs	r0, #80	; 0x50
 80011e6:	f7ff feec 	bl	8000fc2 <SD_SendCmd>
 80011ea:	4603      	mov	r3, r0
 80011ec:	2b00      	cmp	r3, #0
 80011ee:	d001      	beq.n	80011f4 <SD_disk_initialize+0x188>
 80011f0:	2300      	movs	r3, #0
 80011f2:	73bb      	strb	r3, [r7, #14]
		}
	}

	CardType = type;
 80011f4:	4a0f      	ldr	r2, [pc, #60]	; (8001234 <SD_disk_initialize+0x1c8>)
 80011f6:	7bbb      	ldrb	r3, [r7, #14]
 80011f8:	7013      	strb	r3, [r2, #0]

	/* Idle */
	DESELECT();
 80011fa:	f7ff fd91 	bl	8000d20 <DESELECT>
	SPI_RxByte();
 80011fe:	f7ff fdd1 	bl	8000da4 <SPI_RxByte>

	/* Clear STA_NOINIT */
	if (type)
 8001202:	7bbb      	ldrb	r3, [r7, #14]
 8001204:	2b00      	cmp	r3, #0
 8001206:	d008      	beq.n	800121a <SD_disk_initialize+0x1ae>
	{
		Stat &= ~STA_NOINIT;
 8001208:	4b08      	ldr	r3, [pc, #32]	; (800122c <SD_disk_initialize+0x1c0>)
 800120a:	781b      	ldrb	r3, [r3, #0]
 800120c:	b2db      	uxtb	r3, r3
 800120e:	f023 0301 	bic.w	r3, r3, #1
 8001212:	b2da      	uxtb	r2, r3
 8001214:	4b05      	ldr	r3, [pc, #20]	; (800122c <SD_disk_initialize+0x1c0>)
 8001216:	701a      	strb	r2, [r3, #0]
 8001218:	e001      	b.n	800121e <SD_disk_initialize+0x1b2>
	}
	else
	{
		/* Initialization failed */
		SD_PowerOff();
 800121a:	f7ff fe49 	bl	8000eb0 <SD_PowerOff>
	}

	return Stat;
 800121e:	4b03      	ldr	r3, [pc, #12]	; (800122c <SD_disk_initialize+0x1c0>)
 8001220:	781b      	ldrb	r3, [r3, #0]
 8001222:	b2db      	uxtb	r3, r3
}
 8001224:	4618      	mov	r0, r3
 8001226:	3714      	adds	r7, #20
 8001228:	46bd      	mov	sp, r7
 800122a:	bd90      	pop	{r4, r7, pc}
 800122c:	2000002c 	.word	0x2000002c
 8001230:	2000015c 	.word	0x2000015c
 8001234:	20000160 	.word	0x20000160

08001238 <SD_disk_status>:

/* return disk status */
DSTATUS SD_disk_status(BYTE drv) 
{
 8001238:	b480      	push	{r7}
 800123a:	b083      	sub	sp, #12
 800123c:	af00      	add	r7, sp, #0
 800123e:	4603      	mov	r3, r0
 8001240:	71fb      	strb	r3, [r7, #7]
	if (drv) return STA_NOINIT;
 8001242:	79fb      	ldrb	r3, [r7, #7]
 8001244:	2b00      	cmp	r3, #0
 8001246:	d001      	beq.n	800124c <SD_disk_status+0x14>
 8001248:	2301      	movs	r3, #1
 800124a:	e002      	b.n	8001252 <SD_disk_status+0x1a>
	return Stat;
 800124c:	4b04      	ldr	r3, [pc, #16]	; (8001260 <SD_disk_status+0x28>)
 800124e:	781b      	ldrb	r3, [r3, #0]
 8001250:	b2db      	uxtb	r3, r3
}
 8001252:	4618      	mov	r0, r3
 8001254:	370c      	adds	r7, #12
 8001256:	46bd      	mov	sp, r7
 8001258:	f85d 7b04 	ldr.w	r7, [sp], #4
 800125c:	4770      	bx	lr
 800125e:	bf00      	nop
 8001260:	2000002c 	.word	0x2000002c

08001264 <SD_disk_read>:

/* read sector */
DRESULT SD_disk_read(BYTE pdrv, BYTE* buff, DWORD sector, UINT count) 
{
 8001264:	b580      	push	{r7, lr}
 8001266:	b084      	sub	sp, #16
 8001268:	af00      	add	r7, sp, #0
 800126a:	60b9      	str	r1, [r7, #8]
 800126c:	607a      	str	r2, [r7, #4]
 800126e:	603b      	str	r3, [r7, #0]
 8001270:	4603      	mov	r3, r0
 8001272:	73fb      	strb	r3, [r7, #15]
	/* pdrv should be 0 */
	if (pdrv || !count) return RES_PARERR;
 8001274:	7bfb      	ldrb	r3, [r7, #15]
 8001276:	2b00      	cmp	r3, #0
 8001278:	d102      	bne.n	8001280 <SD_disk_read+0x1c>
 800127a:	683b      	ldr	r3, [r7, #0]
 800127c:	2b00      	cmp	r3, #0
 800127e:	d101      	bne.n	8001284 <SD_disk_read+0x20>
 8001280:	2304      	movs	r3, #4
 8001282:	e051      	b.n	8001328 <SD_disk_read+0xc4>

	/* no disk */
	if (Stat & STA_NOINIT) return RES_NOTRDY;
 8001284:	4b2a      	ldr	r3, [pc, #168]	; (8001330 <SD_disk_read+0xcc>)
 8001286:	781b      	ldrb	r3, [r3, #0]
 8001288:	b2db      	uxtb	r3, r3
 800128a:	f003 0301 	and.w	r3, r3, #1
 800128e:	2b00      	cmp	r3, #0
 8001290:	d001      	beq.n	8001296 <SD_disk_read+0x32>
 8001292:	2303      	movs	r3, #3
 8001294:	e048      	b.n	8001328 <SD_disk_read+0xc4>

	/* convert to byte address */
	if (!(CardType & CT_SD2)) sector *= 512;
 8001296:	4b27      	ldr	r3, [pc, #156]	; (8001334 <SD_disk_read+0xd0>)
 8001298:	781b      	ldrb	r3, [r3, #0]
 800129a:	f003 0304 	and.w	r3, r3, #4
 800129e:	2b00      	cmp	r3, #0
 80012a0:	d102      	bne.n	80012a8 <SD_disk_read+0x44>
 80012a2:	687b      	ldr	r3, [r7, #4]
 80012a4:	025b      	lsls	r3, r3, #9
 80012a6:	607b      	str	r3, [r7, #4]

	SELECT();
 80012a8:	f7ff fd2c 	bl	8000d04 <SELECT>

	if (count == 1)
 80012ac:	683b      	ldr	r3, [r7, #0]
 80012ae:	2b01      	cmp	r3, #1
 80012b0:	d111      	bne.n	80012d6 <SD_disk_read+0x72>
	{
		/* READ_SINGLE_BLOCK */
		if ((SD_SendCmd(CMD17, sector) == 0) && SD_RxDataBlock(buff, 512)) count = 0;
 80012b2:	6879      	ldr	r1, [r7, #4]
 80012b4:	2051      	movs	r0, #81	; 0x51
 80012b6:	f7ff fe84 	bl	8000fc2 <SD_SendCmd>
 80012ba:	4603      	mov	r3, r0
 80012bc:	2b00      	cmp	r3, #0
 80012be:	d129      	bne.n	8001314 <SD_disk_read+0xb0>
 80012c0:	f44f 7100 	mov.w	r1, #512	; 0x200
 80012c4:	68b8      	ldr	r0, [r7, #8]
 80012c6:	f7ff fe0b 	bl	8000ee0 <SD_RxDataBlock>
 80012ca:	4603      	mov	r3, r0
 80012cc:	2b00      	cmp	r3, #0
 80012ce:	d021      	beq.n	8001314 <SD_disk_read+0xb0>
 80012d0:	2300      	movs	r3, #0
 80012d2:	603b      	str	r3, [r7, #0]
 80012d4:	e01e      	b.n	8001314 <SD_disk_read+0xb0>
	}
	else
	{
		/* READ_MULTIPLE_BLOCK */
		if (SD_SendCmd(CMD18, sector) == 0)
 80012d6:	6879      	ldr	r1, [r7, #4]
 80012d8:	2052      	movs	r0, #82	; 0x52
 80012da:	f7ff fe72 	bl	8000fc2 <SD_SendCmd>
 80012de:	4603      	mov	r3, r0
 80012e0:	2b00      	cmp	r3, #0
 80012e2:	d117      	bne.n	8001314 <SD_disk_read+0xb0>
		{
			do {
				if (!SD_RxDataBlock(buff, 512)) break;
 80012e4:	f44f 7100 	mov.w	r1, #512	; 0x200
 80012e8:	68b8      	ldr	r0, [r7, #8]
 80012ea:	f7ff fdf9 	bl	8000ee0 <SD_RxDataBlock>
 80012ee:	4603      	mov	r3, r0
 80012f0:	2b00      	cmp	r3, #0
 80012f2:	d00a      	beq.n	800130a <SD_disk_read+0xa6>
				buff += 512;
 80012f4:	68bb      	ldr	r3, [r7, #8]
 80012f6:	f503 7300 	add.w	r3, r3, #512	; 0x200
 80012fa:	60bb      	str	r3, [r7, #8]
			} while (--count);
 80012fc:	683b      	ldr	r3, [r7, #0]
 80012fe:	3b01      	subs	r3, #1
 8001300:	603b      	str	r3, [r7, #0]
 8001302:	683b      	ldr	r3, [r7, #0]
 8001304:	2b00      	cmp	r3, #0
 8001306:	d1ed      	bne.n	80012e4 <SD_disk_read+0x80>
 8001308:	e000      	b.n	800130c <SD_disk_read+0xa8>
				if (!SD_RxDataBlock(buff, 512)) break;
 800130a:	bf00      	nop

			/* STOP_TRANSMISSION */
			SD_SendCmd(CMD12, 0);
 800130c:	2100      	movs	r1, #0
 800130e:	204c      	movs	r0, #76	; 0x4c
 8001310:	f7ff fe57 	bl	8000fc2 <SD_SendCmd>
		}
	}

	/* Idle */
	DESELECT();
 8001314:	f7ff fd04 	bl	8000d20 <DESELECT>
	SPI_RxByte();
 8001318:	f7ff fd44 	bl	8000da4 <SPI_RxByte>

	return count ? RES_ERROR : RES_OK;
 800131c:	683b      	ldr	r3, [r7, #0]
 800131e:	2b00      	cmp	r3, #0
 8001320:	bf14      	ite	ne
 8001322:	2301      	movne	r3, #1
 8001324:	2300      	moveq	r3, #0
 8001326:	b2db      	uxtb	r3, r3
}
 8001328:	4618      	mov	r0, r3
 800132a:	3710      	adds	r7, #16
 800132c:	46bd      	mov	sp, r7
 800132e:	bd80      	pop	{r7, pc}
 8001330:	2000002c 	.word	0x2000002c
 8001334:	20000160 	.word	0x20000160

08001338 <SD_disk_write>:

/* write sector */
#if _USE_WRITE == 1
DRESULT SD_disk_write(BYTE pdrv, const BYTE* buff, DWORD sector, UINT count) 
{
 8001338:	b580      	push	{r7, lr}
 800133a:	b084      	sub	sp, #16
 800133c:	af00      	add	r7, sp, #0
 800133e:	60b9      	str	r1, [r7, #8]
 8001340:	607a      	str	r2, [r7, #4]
 8001342:	603b      	str	r3, [r7, #0]
 8001344:	4603      	mov	r3, r0
 8001346:	73fb      	strb	r3, [r7, #15]
	/* pdrv should be 0 */
	if (pdrv || !count) return RES_PARERR;
 8001348:	7bfb      	ldrb	r3, [r7, #15]
 800134a:	2b00      	cmp	r3, #0
 800134c:	d102      	bne.n	8001354 <SD_disk_write+0x1c>
 800134e:	683b      	ldr	r3, [r7, #0]
 8001350:	2b00      	cmp	r3, #0
 8001352:	d101      	bne.n	8001358 <SD_disk_write+0x20>
 8001354:	2304      	movs	r3, #4
 8001356:	e06b      	b.n	8001430 <SD_disk_write+0xf8>

	/* no disk */
	if (Stat & STA_NOINIT) return RES_NOTRDY;
 8001358:	4b37      	ldr	r3, [pc, #220]	; (8001438 <SD_disk_write+0x100>)
 800135a:	781b      	ldrb	r3, [r3, #0]
 800135c:	b2db      	uxtb	r3, r3
 800135e:	f003 0301 	and.w	r3, r3, #1
 8001362:	2b00      	cmp	r3, #0
 8001364:	d001      	beq.n	800136a <SD_disk_write+0x32>
 8001366:	2303      	movs	r3, #3
 8001368:	e062      	b.n	8001430 <SD_disk_write+0xf8>

	/* write protection */
	if (Stat & STA_PROTECT) return RES_WRPRT;
 800136a:	4b33      	ldr	r3, [pc, #204]	; (8001438 <SD_disk_write+0x100>)
 800136c:	781b      	ldrb	r3, [r3, #0]
 800136e:	b2db      	uxtb	r3, r3
 8001370:	f003 0304 	and.w	r3, r3, #4
 8001374:	2b00      	cmp	r3, #0
 8001376:	d001      	beq.n	800137c <SD_disk_write+0x44>
 8001378:	2302      	movs	r3, #2
 800137a:	e059      	b.n	8001430 <SD_disk_write+0xf8>

	/* convert to byte address */
	if (!(CardType & CT_SD2)) sector *= 512;
 800137c:	4b2f      	ldr	r3, [pc, #188]	; (800143c <SD_disk_write+0x104>)
 800137e:	781b      	ldrb	r3, [r3, #0]
 8001380:	f003 0304 	and.w	r3, r3, #4
 8001384:	2b00      	cmp	r3, #0
 8001386:	d102      	bne.n	800138e <SD_disk_write+0x56>
 8001388:	687b      	ldr	r3, [r7, #4]
 800138a:	025b      	lsls	r3, r3, #9
 800138c:	607b      	str	r3, [r7, #4]

	SELECT();
 800138e:	f7ff fcb9 	bl	8000d04 <SELECT>

	if (count == 1)
 8001392:	683b      	ldr	r3, [r7, #0]
 8001394:	2b01      	cmp	r3, #1
 8001396:	d110      	bne.n	80013ba <SD_disk_write+0x82>
	{
		/* WRITE_BLOCK */
		if ((SD_SendCmd(CMD24, sector) == 0) && SD_TxDataBlock(buff, 0xFE))
 8001398:	6879      	ldr	r1, [r7, #4]
 800139a:	2058      	movs	r0, #88	; 0x58
 800139c:	f7ff fe11 	bl	8000fc2 <SD_SendCmd>
 80013a0:	4603      	mov	r3, r0
 80013a2:	2b00      	cmp	r3, #0
 80013a4:	d13a      	bne.n	800141c <SD_disk_write+0xe4>
 80013a6:	21fe      	movs	r1, #254	; 0xfe
 80013a8:	68b8      	ldr	r0, [r7, #8]
 80013aa:	f7ff fdc7 	bl	8000f3c <SD_TxDataBlock>
 80013ae:	4603      	mov	r3, r0
 80013b0:	2b00      	cmp	r3, #0
 80013b2:	d033      	beq.n	800141c <SD_disk_write+0xe4>
			count = 0;
 80013b4:	2300      	movs	r3, #0
 80013b6:	603b      	str	r3, [r7, #0]
 80013b8:	e030      	b.n	800141c <SD_disk_write+0xe4>
	}
	else
	{
		/* WRITE_MULTIPLE_BLOCK */
		if (CardType & CT_SD1)
 80013ba:	4b20      	ldr	r3, [pc, #128]	; (800143c <SD_disk_write+0x104>)
 80013bc:	781b      	ldrb	r3, [r3, #0]
 80013be:	f003 0302 	and.w	r3, r3, #2
 80013c2:	2b00      	cmp	r3, #0
 80013c4:	d007      	beq.n	80013d6 <SD_disk_write+0x9e>
		{
			SD_SendCmd(CMD55, 0);
 80013c6:	2100      	movs	r1, #0
 80013c8:	2077      	movs	r0, #119	; 0x77
 80013ca:	f7ff fdfa 	bl	8000fc2 <SD_SendCmd>
			SD_SendCmd(CMD23, count); /* ACMD23 */
 80013ce:	6839      	ldr	r1, [r7, #0]
 80013d0:	2057      	movs	r0, #87	; 0x57
 80013d2:	f7ff fdf6 	bl	8000fc2 <SD_SendCmd>
		}

		if (SD_SendCmd(CMD25, sector) == 0)
 80013d6:	6879      	ldr	r1, [r7, #4]
 80013d8:	2059      	movs	r0, #89	; 0x59
 80013da:	f7ff fdf2 	bl	8000fc2 <SD_SendCmd>
 80013de:	4603      	mov	r3, r0
 80013e0:	2b00      	cmp	r3, #0
 80013e2:	d11b      	bne.n	800141c <SD_disk_write+0xe4>
		{
			do {
				if(!SD_TxDataBlock(buff, 0xFC)) break;
 80013e4:	21fc      	movs	r1, #252	; 0xfc
 80013e6:	68b8      	ldr	r0, [r7, #8]
 80013e8:	f7ff fda8 	bl	8000f3c <SD_TxDataBlock>
 80013ec:	4603      	mov	r3, r0
 80013ee:	2b00      	cmp	r3, #0
 80013f0:	d00a      	beq.n	8001408 <SD_disk_write+0xd0>
				buff += 512;
 80013f2:	68bb      	ldr	r3, [r7, #8]
 80013f4:	f503 7300 	add.w	r3, r3, #512	; 0x200
 80013f8:	60bb      	str	r3, [r7, #8]
			} while (--count);
 80013fa:	683b      	ldr	r3, [r7, #0]
 80013fc:	3b01      	subs	r3, #1
 80013fe:	603b      	str	r3, [r7, #0]
 8001400:	683b      	ldr	r3, [r7, #0]
 8001402:	2b00      	cmp	r3, #0
 8001404:	d1ee      	bne.n	80013e4 <SD_disk_write+0xac>
 8001406:	e000      	b.n	800140a <SD_disk_write+0xd2>
				if(!SD_TxDataBlock(buff, 0xFC)) break;
 8001408:	bf00      	nop

			/* STOP_TRAN token */
			if(!SD_TxDataBlock(0, 0xFD))
 800140a:	21fd      	movs	r1, #253	; 0xfd
 800140c:	2000      	movs	r0, #0
 800140e:	f7ff fd95 	bl	8000f3c <SD_TxDataBlock>
 8001412:	4603      	mov	r3, r0
 8001414:	2b00      	cmp	r3, #0
 8001416:	d101      	bne.n	800141c <SD_disk_write+0xe4>
			{
				count = 1;
 8001418:	2301      	movs	r3, #1
 800141a:	603b      	str	r3, [r7, #0]
			}
		}
	}

	/* Idle */
	DESELECT();
 800141c:	f7ff fc80 	bl	8000d20 <DESELECT>
	SPI_RxByte();
 8001420:	f7ff fcc0 	bl	8000da4 <SPI_RxByte>

	return count ? RES_ERROR : RES_OK;
 8001424:	683b      	ldr	r3, [r7, #0]
 8001426:	2b00      	cmp	r3, #0
 8001428:	bf14      	ite	ne
 800142a:	2301      	movne	r3, #1
 800142c:	2300      	moveq	r3, #0
 800142e:	b2db      	uxtb	r3, r3
}
 8001430:	4618      	mov	r0, r3
 8001432:	3710      	adds	r7, #16
 8001434:	46bd      	mov	sp, r7
 8001436:	bd80      	pop	{r7, pc}
 8001438:	2000002c 	.word	0x2000002c
 800143c:	20000160 	.word	0x20000160

08001440 <SD_disk_ioctl>:
#endif /* _USE_WRITE */

/* ioctl */
DRESULT SD_disk_ioctl(BYTE drv, BYTE ctrl, void *buff) 
{
 8001440:	b590      	push	{r4, r7, lr}
 8001442:	b08b      	sub	sp, #44	; 0x2c
 8001444:	af00      	add	r7, sp, #0
 8001446:	4603      	mov	r3, r0
 8001448:	603a      	str	r2, [r7, #0]
 800144a:	71fb      	strb	r3, [r7, #7]
 800144c:	460b      	mov	r3, r1
 800144e:	71bb      	strb	r3, [r7, #6]
	DRESULT res;
	uint8_t n, csd[16], *ptr = buff;
 8001450:	683b      	ldr	r3, [r7, #0]
 8001452:	623b      	str	r3, [r7, #32]
	WORD csize;

	/* pdrv should be 0 */
	if (drv) return RES_PARERR;
 8001454:	79fb      	ldrb	r3, [r7, #7]
 8001456:	2b00      	cmp	r3, #0
 8001458:	d001      	beq.n	800145e <SD_disk_ioctl+0x1e>
 800145a:	2304      	movs	r3, #4
 800145c:	e115      	b.n	800168a <SD_disk_ioctl+0x24a>
	res = RES_ERROR;
 800145e:	2301      	movs	r3, #1
 8001460:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27

	if (ctrl == CTRL_POWER)
 8001464:	79bb      	ldrb	r3, [r7, #6]
 8001466:	2b05      	cmp	r3, #5
 8001468:	d124      	bne.n	80014b4 <SD_disk_ioctl+0x74>
	{
		switch (*ptr)
 800146a:	6a3b      	ldr	r3, [r7, #32]
 800146c:	781b      	ldrb	r3, [r3, #0]
 800146e:	2b02      	cmp	r3, #2
 8001470:	d012      	beq.n	8001498 <SD_disk_ioctl+0x58>
 8001472:	2b02      	cmp	r3, #2
 8001474:	dc1a      	bgt.n	80014ac <SD_disk_ioctl+0x6c>
 8001476:	2b00      	cmp	r3, #0
 8001478:	d002      	beq.n	8001480 <SD_disk_ioctl+0x40>
 800147a:	2b01      	cmp	r3, #1
 800147c:	d006      	beq.n	800148c <SD_disk_ioctl+0x4c>
 800147e:	e015      	b.n	80014ac <SD_disk_ioctl+0x6c>
		{
		case 0:
			SD_PowerOff();		/* Power Off */
 8001480:	f7ff fd16 	bl	8000eb0 <SD_PowerOff>
			res = RES_OK;
 8001484:	2300      	movs	r3, #0
 8001486:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
			break;
 800148a:	e0fc      	b.n	8001686 <SD_disk_ioctl+0x246>
		case 1:
			SD_PowerOn();		/* Power On */
 800148c:	f7ff fcce 	bl	8000e2c <SD_PowerOn>
			res = RES_OK;
 8001490:	2300      	movs	r3, #0
 8001492:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
			break;
 8001496:	e0f6      	b.n	8001686 <SD_disk_ioctl+0x246>
		case 2:
			*(ptr + 1) = SD_CheckPower();
 8001498:	6a3b      	ldr	r3, [r7, #32]
 800149a:	1c5c      	adds	r4, r3, #1
 800149c:	f7ff fd14 	bl	8000ec8 <SD_CheckPower>
 80014a0:	4603      	mov	r3, r0
 80014a2:	7023      	strb	r3, [r4, #0]
			res = RES_OK;		/* Power Check */
 80014a4:	2300      	movs	r3, #0
 80014a6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
			break;
 80014aa:	e0ec      	b.n	8001686 <SD_disk_ioctl+0x246>
		default:
			res = RES_PARERR;
 80014ac:	2304      	movs	r3, #4
 80014ae:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80014b2:	e0e8      	b.n	8001686 <SD_disk_ioctl+0x246>
		}
	}
	else
	{
		/* no disk */
		if (Stat & STA_NOINIT) return RES_NOTRDY;
 80014b4:	4b77      	ldr	r3, [pc, #476]	; (8001694 <SD_disk_ioctl+0x254>)
 80014b6:	781b      	ldrb	r3, [r3, #0]
 80014b8:	b2db      	uxtb	r3, r3
 80014ba:	f003 0301 	and.w	r3, r3, #1
 80014be:	2b00      	cmp	r3, #0
 80014c0:	d001      	beq.n	80014c6 <SD_disk_ioctl+0x86>
 80014c2:	2303      	movs	r3, #3
 80014c4:	e0e1      	b.n	800168a <SD_disk_ioctl+0x24a>

		SELECT();
 80014c6:	f7ff fc1d 	bl	8000d04 <SELECT>

		switch (ctrl)
 80014ca:	79bb      	ldrb	r3, [r7, #6]
 80014cc:	2b0d      	cmp	r3, #13
 80014ce:	f200 80cb 	bhi.w	8001668 <SD_disk_ioctl+0x228>
 80014d2:	a201      	add	r2, pc, #4	; (adr r2, 80014d8 <SD_disk_ioctl+0x98>)
 80014d4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80014d8:	080015d3 	.word	0x080015d3
 80014dc:	08001511 	.word	0x08001511
 80014e0:	080015c3 	.word	0x080015c3
 80014e4:	08001669 	.word	0x08001669
 80014e8:	08001669 	.word	0x08001669
 80014ec:	08001669 	.word	0x08001669
 80014f0:	08001669 	.word	0x08001669
 80014f4:	08001669 	.word	0x08001669
 80014f8:	08001669 	.word	0x08001669
 80014fc:	08001669 	.word	0x08001669
 8001500:	08001669 	.word	0x08001669
 8001504:	080015e5 	.word	0x080015e5
 8001508:	08001609 	.word	0x08001609
 800150c:	0800162d 	.word	0x0800162d
		{
		case GET_SECTOR_COUNT:
			/* SEND_CSD */
			if ((SD_SendCmd(CMD9, 0) == 0) && SD_RxDataBlock(csd, 16))
 8001510:	2100      	movs	r1, #0
 8001512:	2049      	movs	r0, #73	; 0x49
 8001514:	f7ff fd55 	bl	8000fc2 <SD_SendCmd>
 8001518:	4603      	mov	r3, r0
 800151a:	2b00      	cmp	r3, #0
 800151c:	f040 80a8 	bne.w	8001670 <SD_disk_ioctl+0x230>
 8001520:	f107 030c 	add.w	r3, r7, #12
 8001524:	2110      	movs	r1, #16
 8001526:	4618      	mov	r0, r3
 8001528:	f7ff fcda 	bl	8000ee0 <SD_RxDataBlock>
 800152c:	4603      	mov	r3, r0
 800152e:	2b00      	cmp	r3, #0
 8001530:	f000 809e 	beq.w	8001670 <SD_disk_ioctl+0x230>
			{
				if ((csd[0] >> 6) == 1)
 8001534:	7b3b      	ldrb	r3, [r7, #12]
 8001536:	099b      	lsrs	r3, r3, #6
 8001538:	b2db      	uxtb	r3, r3
 800153a:	2b01      	cmp	r3, #1
 800153c:	d10e      	bne.n	800155c <SD_disk_ioctl+0x11c>
				{
					/* SDC V2 */
					csize = csd[9] + ((WORD) csd[8] << 8) + 1;
 800153e:	7d7b      	ldrb	r3, [r7, #21]
 8001540:	b29a      	uxth	r2, r3
 8001542:	7d3b      	ldrb	r3, [r7, #20]
 8001544:	b29b      	uxth	r3, r3
 8001546:	021b      	lsls	r3, r3, #8
 8001548:	b29b      	uxth	r3, r3
 800154a:	4413      	add	r3, r2
 800154c:	b29b      	uxth	r3, r3
 800154e:	3301      	adds	r3, #1
 8001550:	83fb      	strh	r3, [r7, #30]
					*(DWORD*) buff = (DWORD) csize << 10;
 8001552:	8bfb      	ldrh	r3, [r7, #30]
 8001554:	029a      	lsls	r2, r3, #10
 8001556:	683b      	ldr	r3, [r7, #0]
 8001558:	601a      	str	r2, [r3, #0]
 800155a:	e02e      	b.n	80015ba <SD_disk_ioctl+0x17a>
				}
				else
				{
					/* MMC or SDC V1 */
					n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
 800155c:	7c7b      	ldrb	r3, [r7, #17]
 800155e:	f003 030f 	and.w	r3, r3, #15
 8001562:	b2da      	uxtb	r2, r3
 8001564:	7dbb      	ldrb	r3, [r7, #22]
 8001566:	09db      	lsrs	r3, r3, #7
 8001568:	b2db      	uxtb	r3, r3
 800156a:	4413      	add	r3, r2
 800156c:	b2da      	uxtb	r2, r3
 800156e:	7d7b      	ldrb	r3, [r7, #21]
 8001570:	005b      	lsls	r3, r3, #1
 8001572:	b2db      	uxtb	r3, r3
 8001574:	f003 0306 	and.w	r3, r3, #6
 8001578:	b2db      	uxtb	r3, r3
 800157a:	4413      	add	r3, r2
 800157c:	b2db      	uxtb	r3, r3
 800157e:	3302      	adds	r3, #2
 8001580:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
					csize = (csd[8] >> 6) + ((WORD) csd[7] << 2) + ((WORD) (csd[6] & 3) << 10) + 1;
 8001584:	7d3b      	ldrb	r3, [r7, #20]
 8001586:	099b      	lsrs	r3, r3, #6
 8001588:	b2db      	uxtb	r3, r3
 800158a:	b29a      	uxth	r2, r3
 800158c:	7cfb      	ldrb	r3, [r7, #19]
 800158e:	b29b      	uxth	r3, r3
 8001590:	009b      	lsls	r3, r3, #2
 8001592:	b29b      	uxth	r3, r3
 8001594:	4413      	add	r3, r2
 8001596:	b29a      	uxth	r2, r3
 8001598:	7cbb      	ldrb	r3, [r7, #18]
 800159a:	029b      	lsls	r3, r3, #10
 800159c:	b29b      	uxth	r3, r3
 800159e:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 80015a2:	b29b      	uxth	r3, r3
 80015a4:	4413      	add	r3, r2
 80015a6:	b29b      	uxth	r3, r3
 80015a8:	3301      	adds	r3, #1
 80015aa:	83fb      	strh	r3, [r7, #30]
					*(DWORD*) buff = (DWORD) csize << (n - 9);
 80015ac:	8bfa      	ldrh	r2, [r7, #30]
 80015ae:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 80015b2:	3b09      	subs	r3, #9
 80015b4:	409a      	lsls	r2, r3
 80015b6:	683b      	ldr	r3, [r7, #0]
 80015b8:	601a      	str	r2, [r3, #0]
				}
				res = RES_OK;
 80015ba:	2300      	movs	r3, #0
 80015bc:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
			}
			break;
 80015c0:	e056      	b.n	8001670 <SD_disk_ioctl+0x230>
		case GET_SECTOR_SIZE:
			*(WORD*) buff = 512;
 80015c2:	683b      	ldr	r3, [r7, #0]
 80015c4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80015c8:	801a      	strh	r2, [r3, #0]
			res = RES_OK;
 80015ca:	2300      	movs	r3, #0
 80015cc:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
			break;
 80015d0:	e055      	b.n	800167e <SD_disk_ioctl+0x23e>
		case CTRL_SYNC:
			if (SD_ReadyWait() == 0xFF) res = RES_OK;
 80015d2:	f7ff fc11 	bl	8000df8 <SD_ReadyWait>
 80015d6:	4603      	mov	r3, r0
 80015d8:	2bff      	cmp	r3, #255	; 0xff
 80015da:	d14b      	bne.n	8001674 <SD_disk_ioctl+0x234>
 80015dc:	2300      	movs	r3, #0
 80015de:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
			break;
 80015e2:	e047      	b.n	8001674 <SD_disk_ioctl+0x234>
		case MMC_GET_CSD:
			/* SEND_CSD */
			if (SD_SendCmd(CMD9, 0) == 0 && SD_RxDataBlock(ptr, 16)) res = RES_OK;
 80015e4:	2100      	movs	r1, #0
 80015e6:	2049      	movs	r0, #73	; 0x49
 80015e8:	f7ff fceb 	bl	8000fc2 <SD_SendCmd>
 80015ec:	4603      	mov	r3, r0
 80015ee:	2b00      	cmp	r3, #0
 80015f0:	d142      	bne.n	8001678 <SD_disk_ioctl+0x238>
 80015f2:	2110      	movs	r1, #16
 80015f4:	6a38      	ldr	r0, [r7, #32]
 80015f6:	f7ff fc73 	bl	8000ee0 <SD_RxDataBlock>
 80015fa:	4603      	mov	r3, r0
 80015fc:	2b00      	cmp	r3, #0
 80015fe:	d03b      	beq.n	8001678 <SD_disk_ioctl+0x238>
 8001600:	2300      	movs	r3, #0
 8001602:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
			break;
 8001606:	e037      	b.n	8001678 <SD_disk_ioctl+0x238>
		case MMC_GET_CID:
			/* SEND_CID */
			if (SD_SendCmd(CMD10, 0) == 0 && SD_RxDataBlock(ptr, 16)) res = RES_OK;
 8001608:	2100      	movs	r1, #0
 800160a:	204a      	movs	r0, #74	; 0x4a
 800160c:	f7ff fcd9 	bl	8000fc2 <SD_SendCmd>
 8001610:	4603      	mov	r3, r0
 8001612:	2b00      	cmp	r3, #0
 8001614:	d132      	bne.n	800167c <SD_disk_ioctl+0x23c>
 8001616:	2110      	movs	r1, #16
 8001618:	6a38      	ldr	r0, [r7, #32]
 800161a:	f7ff fc61 	bl	8000ee0 <SD_RxDataBlock>
 800161e:	4603      	mov	r3, r0
 8001620:	2b00      	cmp	r3, #0
 8001622:	d02b      	beq.n	800167c <SD_disk_ioctl+0x23c>
 8001624:	2300      	movs	r3, #0
 8001626:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
			break;
 800162a:	e027      	b.n	800167c <SD_disk_ioctl+0x23c>
		case MMC_GET_OCR:
			/* READ_OCR */
			if (SD_SendCmd(CMD58, 0) == 0)
 800162c:	2100      	movs	r1, #0
 800162e:	207a      	movs	r0, #122	; 0x7a
 8001630:	f7ff fcc7 	bl	8000fc2 <SD_SendCmd>
 8001634:	4603      	mov	r3, r0
 8001636:	2b00      	cmp	r3, #0
 8001638:	d116      	bne.n	8001668 <SD_disk_ioctl+0x228>
			{
				for (n = 0; n < 4; n++)
 800163a:	2300      	movs	r3, #0
 800163c:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 8001640:	e00b      	b.n	800165a <SD_disk_ioctl+0x21a>
				{
					*ptr++ = SPI_RxByte();
 8001642:	6a3c      	ldr	r4, [r7, #32]
 8001644:	1c63      	adds	r3, r4, #1
 8001646:	623b      	str	r3, [r7, #32]
 8001648:	f7ff fbac 	bl	8000da4 <SPI_RxByte>
 800164c:	4603      	mov	r3, r0
 800164e:	7023      	strb	r3, [r4, #0]
				for (n = 0; n < 4; n++)
 8001650:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8001654:	3301      	adds	r3, #1
 8001656:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 800165a:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 800165e:	2b03      	cmp	r3, #3
 8001660:	d9ef      	bls.n	8001642 <SD_disk_ioctl+0x202>
				}
				res = RES_OK;
 8001662:	2300      	movs	r3, #0
 8001664:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
			}
		default:
			res = RES_PARERR;
 8001668:	2304      	movs	r3, #4
 800166a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800166e:	e006      	b.n	800167e <SD_disk_ioctl+0x23e>
			break;
 8001670:	bf00      	nop
 8001672:	e004      	b.n	800167e <SD_disk_ioctl+0x23e>
			break;
 8001674:	bf00      	nop
 8001676:	e002      	b.n	800167e <SD_disk_ioctl+0x23e>
			break;
 8001678:	bf00      	nop
 800167a:	e000      	b.n	800167e <SD_disk_ioctl+0x23e>
			break;
 800167c:	bf00      	nop
		}

		DESELECT();
 800167e:	f7ff fb4f 	bl	8000d20 <DESELECT>
		SPI_RxByte();
 8001682:	f7ff fb8f 	bl	8000da4 <SPI_RxByte>
	}

	return res;
 8001686:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
}
 800168a:	4618      	mov	r0, r3
 800168c:	372c      	adds	r7, #44	; 0x2c
 800168e:	46bd      	mov	sp, r7
 8001690:	bd90      	pop	{r4, r7, pc}
 8001692:	bf00      	nop
 8001694:	2000002c 	.word	0x2000002c

08001698 <initialize_library>:

/* UART Declaration */
//extern void transmit_uart(char *string);

Song* initialize_library()
{
 8001698:	b580      	push	{r7, lr}
 800169a:	b0a6      	sub	sp, #152	; 0x98
 800169c:	af00      	add	r7, sp, #0
	char temp[50];
//	static const char* path;

	static Song* library = NULL;

	fres = f_mkdir("library");
 800169e:	482f      	ldr	r0, [pc, #188]	; (800175c <initialize_library+0xc4>)
 80016a0:	f009 fa57 	bl	800ab52 <f_mkdir>
 80016a4:	4603      	mov	r3, r0
 80016a6:	f887 3097 	strb.w	r3, [r7, #151]	; 0x97
	fres = f_opendir(&dir, "library");
 80016aa:	492c      	ldr	r1, [pc, #176]	; (800175c <initialize_library+0xc4>)
 80016ac:	482c      	ldr	r0, [pc, #176]	; (8001760 <initialize_library+0xc8>)
 80016ae:	f009 f9a0 	bl	800a9f2 <f_opendir>
 80016b2:	4603      	mov	r3, r0
 80016b4:	f887 3097 	strb.w	r3, [r7, #151]	; 0x97
	sprintf(temp, "FRES opendir ERROR: %d in initialize_library()\r\n", fres);
 80016b8:	f897 2097 	ldrb.w	r2, [r7, #151]	; 0x97
 80016bc:	f107 0364 	add.w	r3, r7, #100	; 0x64
 80016c0:	4928      	ldr	r1, [pc, #160]	; (8001764 <initialize_library+0xcc>)
 80016c2:	4618      	mov	r0, r3
 80016c4:	f027 f926 	bl	8028914 <siprintf>
	printf(temp);
 80016c8:	f107 0364 	add.w	r3, r7, #100	; 0x64
 80016cc:	4618      	mov	r0, r3
 80016ce:	f027 fa03 	bl	8028ad8 <iprintf>
	if (fres == FR_OK)
 80016d2:	f897 3097 	ldrb.w	r3, [r7, #151]	; 0x97
 80016d6:	2b00      	cmp	r3, #0
 80016d8:	d13a      	bne.n	8001750 <initialize_library+0xb8>
	{
		printf("Successfully opened Library!\r\n");
 80016da:	4823      	ldr	r0, [pc, #140]	; (8001768 <initialize_library+0xd0>)
 80016dc:	f027 fa62 	bl	8028ba4 <puts>
		while (1)
		{
			/* Read a directory item */
			fres = f_readdir(&dir, &file_info);
 80016e0:	4922      	ldr	r1, [pc, #136]	; (800176c <initialize_library+0xd4>)
 80016e2:	481f      	ldr	r0, [pc, #124]	; (8001760 <initialize_library+0xc8>)
 80016e4:	f009 f9f8 	bl	800aad8 <f_readdir>
 80016e8:	4603      	mov	r3, r0
 80016ea:	f887 3097 	strb.w	r3, [r7, #151]	; 0x97
			if (fres != FR_OK || file_info.fname[0] == 0) break; // End of directory
 80016ee:	f897 3097 	ldrb.w	r3, [r7, #151]	; 0x97
 80016f2:	2b00      	cmp	r3, #0
 80016f4:	d12c      	bne.n	8001750 <initialize_library+0xb8>
 80016f6:	4b1d      	ldr	r3, [pc, #116]	; (800176c <initialize_library+0xd4>)
 80016f8:	7d9b      	ldrb	r3, [r3, #22]
 80016fa:	2b00      	cmp	r3, #0
 80016fc:	d028      	beq.n	8001750 <initialize_library+0xb8>

			if (!(file_info.fattrib & AM_DIR))
 80016fe:	4b1b      	ldr	r3, [pc, #108]	; (800176c <initialize_library+0xd4>)
 8001700:	7a1b      	ldrb	r3, [r3, #8]
 8001702:	f003 0310 	and.w	r3, r3, #16
 8001706:	2b00      	cmp	r3, #0
 8001708:	d1ea      	bne.n	80016e0 <initialize_library+0x48>
			{
				// Check if the file has a ".wav" extension
				if (strstr(file_info.fname, ".wav") != NULL)
 800170a:	4919      	ldr	r1, [pc, #100]	; (8001770 <initialize_library+0xd8>)
 800170c:	4819      	ldr	r0, [pc, #100]	; (8001774 <initialize_library+0xdc>)
 800170e:	f027 fa73 	bl	8028bf8 <strstr>
 8001712:	4603      	mov	r3, r0
 8001714:	2b00      	cmp	r3, #0
 8001716:	d0e3      	beq.n	80016e0 <initialize_library+0x48>
				{
					printf("Found a .wav\r\n");
 8001718:	4817      	ldr	r0, [pc, #92]	; (8001778 <initialize_library+0xe0>)
 800171a:	f027 fa43 	bl	8028ba4 <puts>
					char path_str[100] = "library/";
 800171e:	4a17      	ldr	r2, [pc, #92]	; (800177c <initialize_library+0xe4>)
 8001720:	463b      	mov	r3, r7
 8001722:	6810      	ldr	r0, [r2, #0]
 8001724:	6851      	ldr	r1, [r2, #4]
 8001726:	c303      	stmia	r3!, {r0, r1}
 8001728:	7a12      	ldrb	r2, [r2, #8]
 800172a:	701a      	strb	r2, [r3, #0]
 800172c:	f107 0309 	add.w	r3, r7, #9
 8001730:	225b      	movs	r2, #91	; 0x5b
 8001732:	2100      	movs	r1, #0
 8001734:	4618      	mov	r0, r3
 8001736:	f027 fa75 	bl	8028c24 <memset>
					add_song(&library, strcat(path_str, file_info.fname));
 800173a:	463b      	mov	r3, r7
 800173c:	490d      	ldr	r1, [pc, #52]	; (8001774 <initialize_library+0xdc>)
 800173e:	4618      	mov	r0, r3
 8001740:	f027 fa38 	bl	8028bb4 <strcat>
 8001744:	4603      	mov	r3, r0
 8001746:	4619      	mov	r1, r3
 8001748:	480d      	ldr	r0, [pc, #52]	; (8001780 <initialize_library+0xe8>)
 800174a:	f000 f83b 	bl	80017c4 <add_song>
			fres = f_readdir(&dir, &file_info);
 800174e:	e7c7      	b.n	80016e0 <initialize_library+0x48>
				}
			}
		}
	}
	return library;
 8001750:	4b0b      	ldr	r3, [pc, #44]	; (8001780 <initialize_library+0xe8>)
 8001752:	681b      	ldr	r3, [r3, #0]
}
 8001754:	4618      	mov	r0, r3
 8001756:	3798      	adds	r7, #152	; 0x98
 8001758:	46bd      	mov	sp, r7
 800175a:	bd80      	pop	{r7, pc}
 800175c:	08029f58 	.word	0x08029f58
 8001760:	20000164 	.word	0x20000164
 8001764:	08029f60 	.word	0x08029f60
 8001768:	08029f94 	.word	0x08029f94
 800176c:	20000198 	.word	0x20000198
 8001770:	08029fb4 	.word	0x08029fb4
 8001774:	200001ae 	.word	0x200001ae
 8001778:	08029fbc 	.word	0x08029fbc
 800177c:	08029fcc 	.word	0x08029fcc
 8001780:	200002b0 	.word	0x200002b0

08001784 <create_song>:

// Function to create a new song node
Song* create_song(const char* path)
{
 8001784:	b580      	push	{r7, lr}
 8001786:	b084      	sub	sp, #16
 8001788:	af00      	add	r7, sp, #0
 800178a:	6078      	str	r0, [r7, #4]
    Song* newSong = (Song*)malloc(sizeof(Song));
 800178c:	203c      	movs	r0, #60	; 0x3c
 800178e:	f027 f805 	bl	802879c <malloc>
 8001792:	4603      	mov	r3, r0
 8001794:	60fb      	str	r3, [r7, #12]
    if (newSong == NULL) {
 8001796:	68fb      	ldr	r3, [r7, #12]
 8001798:	2b00      	cmp	r3, #0
 800179a:	d102      	bne.n	80017a2 <create_song+0x1e>
        exit(1);
 800179c:	2001      	movs	r0, #1
 800179e:	f026 ffeb 	bl	8028778 <exit>
    }
    strncpy(newSong->path, path, sizeof(newSong->path));
 80017a2:	68fb      	ldr	r3, [r7, #12]
 80017a4:	2232      	movs	r2, #50	; 0x32
 80017a6:	6879      	ldr	r1, [r7, #4]
 80017a8:	4618      	mov	r0, r3
 80017aa:	f027 fa12 	bl	8028bd2 <strncpy>
    newSong->next = NULL;
 80017ae:	68fb      	ldr	r3, [r7, #12]
 80017b0:	2200      	movs	r2, #0
 80017b2:	635a      	str	r2, [r3, #52]	; 0x34
    newSong->prev = NULL;
 80017b4:	68fb      	ldr	r3, [r7, #12]
 80017b6:	2200      	movs	r2, #0
 80017b8:	639a      	str	r2, [r3, #56]	; 0x38

    return newSong;
 80017ba:	68fb      	ldr	r3, [r7, #12]
}
 80017bc:	4618      	mov	r0, r3
 80017be:	3710      	adds	r7, #16
 80017c0:	46bd      	mov	sp, r7
 80017c2:	bd80      	pop	{r7, pc}

080017c4 <add_song>:

// Function to insert a song at the end of the list
void add_song(Song** head, const char* path)
{
 80017c4:	b580      	push	{r7, lr}
 80017c6:	b084      	sub	sp, #16
 80017c8:	af00      	add	r7, sp, #0
 80017ca:	6078      	str	r0, [r7, #4]
 80017cc:	6039      	str	r1, [r7, #0]
    Song* newSong = create_song(path);
 80017ce:	6838      	ldr	r0, [r7, #0]
 80017d0:	f7ff ffd8 	bl	8001784 <create_song>
 80017d4:	60b8      	str	r0, [r7, #8]
    if (*head == NULL)
 80017d6:	687b      	ldr	r3, [r7, #4]
 80017d8:	681b      	ldr	r3, [r3, #0]
 80017da:	2b00      	cmp	r3, #0
 80017dc:	d103      	bne.n	80017e6 <add_song+0x22>
    {
        *head = newSong;
 80017de:	687b      	ldr	r3, [r7, #4]
 80017e0:	68ba      	ldr	r2, [r7, #8]
 80017e2:	601a      	str	r2, [r3, #0]
			current = current->next;
		}
        current->next = newSong;
        newSong->prev = current;
    }
}
 80017e4:	e010      	b.n	8001808 <add_song+0x44>
		Song* current = *head;
 80017e6:	687b      	ldr	r3, [r7, #4]
 80017e8:	681b      	ldr	r3, [r3, #0]
 80017ea:	60fb      	str	r3, [r7, #12]
		while (current->next != NULL)
 80017ec:	e002      	b.n	80017f4 <add_song+0x30>
			current = current->next;
 80017ee:	68fb      	ldr	r3, [r7, #12]
 80017f0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80017f2:	60fb      	str	r3, [r7, #12]
		while (current->next != NULL)
 80017f4:	68fb      	ldr	r3, [r7, #12]
 80017f6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80017f8:	2b00      	cmp	r3, #0
 80017fa:	d1f8      	bne.n	80017ee <add_song+0x2a>
        current->next = newSong;
 80017fc:	68fb      	ldr	r3, [r7, #12]
 80017fe:	68ba      	ldr	r2, [r7, #8]
 8001800:	635a      	str	r2, [r3, #52]	; 0x34
        newSong->prev = current;
 8001802:	68bb      	ldr	r3, [r7, #8]
 8001804:	68fa      	ldr	r2, [r7, #12]
 8001806:	639a      	str	r2, [r3, #56]	; 0x38
}
 8001808:	bf00      	nop
 800180a:	3710      	adds	r7, #16
 800180c:	46bd      	mov	sp, r7
 800180e:	bd80      	pop	{r7, pc}

08001810 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8001810:	b480      	push	{r7}
 8001812:	b083      	sub	sp, #12
 8001814:	af00      	add	r7, sp, #0
 8001816:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8001818:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800181c:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 8001820:	f003 0301 	and.w	r3, r3, #1
 8001824:	2b00      	cmp	r3, #0
 8001826:	d013      	beq.n	8001850 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 8001828:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800182c:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 8001830:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8001834:	2b00      	cmp	r3, #0
 8001836:	d00b      	beq.n	8001850 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 8001838:	e000      	b.n	800183c <ITM_SendChar+0x2c>
    {
      __NOP();
 800183a:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 800183c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8001840:	681b      	ldr	r3, [r3, #0]
 8001842:	2b00      	cmp	r3, #0
 8001844:	d0f9      	beq.n	800183a <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 8001846:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800184a:	687a      	ldr	r2, [r7, #4]
 800184c:	b2d2      	uxtb	r2, r2
 800184e:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 8001850:	687b      	ldr	r3, [r7, #4]
}
 8001852:	4618      	mov	r0, r3
 8001854:	370c      	adds	r7, #12
 8001856:	46bd      	mov	sp, r7
 8001858:	f85d 7b04 	ldr.w	r7, [sp], #4
 800185c:	4770      	bx	lr

0800185e <_write>:
}AppStateTypeDef;
/* USER CODE END PTD */

/* Private define ------------------------------------------------------------*/
/* USER CODE BEGIN PD */
int _write(int file, char *ptr, int len) {
 800185e:	b580      	push	{r7, lr}
 8001860:	b086      	sub	sp, #24
 8001862:	af00      	add	r7, sp, #0
 8001864:	60f8      	str	r0, [r7, #12]
 8001866:	60b9      	str	r1, [r7, #8]
 8001868:	607a      	str	r2, [r7, #4]
    int DataIdx;
    for (DataIdx = 0; DataIdx < len; DataIdx++) {
 800186a:	2300      	movs	r3, #0
 800186c:	617b      	str	r3, [r7, #20]
 800186e:	e009      	b.n	8001884 <_write+0x26>
        ITM_SendChar(*ptr++);
 8001870:	68bb      	ldr	r3, [r7, #8]
 8001872:	1c5a      	adds	r2, r3, #1
 8001874:	60ba      	str	r2, [r7, #8]
 8001876:	781b      	ldrb	r3, [r3, #0]
 8001878:	4618      	mov	r0, r3
 800187a:	f7ff ffc9 	bl	8001810 <ITM_SendChar>
    for (DataIdx = 0; DataIdx < len; DataIdx++) {
 800187e:	697b      	ldr	r3, [r7, #20]
 8001880:	3301      	adds	r3, #1
 8001882:	617b      	str	r3, [r7, #20]
 8001884:	697a      	ldr	r2, [r7, #20]
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	429a      	cmp	r2, r3
 800188a:	dbf1      	blt.n	8001870 <_write+0x12>
    }
    return len;
 800188c:	687b      	ldr	r3, [r7, #4]
}
 800188e:	4618      	mov	r0, r3
 8001890:	3718      	adds	r7, #24
 8001892:	46bd      	mov	sp, r7
 8001894:	bd80      	pop	{r7, pc}
	...

08001898 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001898:	b580      	push	{r7, lr}
 800189a:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800189c:	f001 f86a 	bl	8002974 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80018a0:	f000 f87c 	bl	800199c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80018a4:	f000 fa4e 	bl	8001d44 <MX_GPIO_Init>
  MX_DMA_Init();
 80018a8:	f000 fa2c 	bl	8001d04 <MX_DMA_Init>
  MX_CRC_Init();
 80018ac:	f000 f8e6 	bl	8001a7c <MX_CRC_Init>
  MX_TIM2_Init();
 80018b0:	f000 f9dc 	bl	8001c6c <MX_TIM2_Init>
  MX_I2C2_Init();
 80018b4:	f000 f936 	bl	8001b24 <MX_I2C2_Init>
  MX_I2C1_Init();
 80018b8:	f000 f8f4 	bl	8001aa4 <MX_I2C1_Init>
  MX_SPI1_Init();
 80018bc:	f000 f9a0 	bl	8001c00 <MX_SPI1_Init>
  MX_FATFS_Init();
 80018c0:	f006 f84a 	bl	8007958 <MX_FATFS_Init>
  MX_I2S2_Init();
 80018c4:	f000 f96e 	bl	8001ba4 <MX_I2S2_Init>
  MX_TouchGFX_Init();
 80018c8:	f009 fcdc 	bl	800b284 <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */
  /* For the purpose of debugging */
	HAL_TIM_Base_Start_IT(&htim2);
 80018cc:	482a      	ldr	r0, [pc, #168]	; (8001978 <main+0xe0>)
 80018ce:	f005 fc11 	bl	80070f4 <HAL_TIM_Base_Start_IT>

	/* *********************** Begin Testing fatfs *********************** */
//	fatfs_test();
	/* *********************** End Testing fatfs ************************* */

	mount_sd();
 80018d2:	f000 fee3 	bl	800269c <mount_sd>
	HAL_Delay(10);
 80018d6:	200a      	movs	r0, #10
 80018d8:	f001 f88e 	bl	80029f8 <HAL_Delay>
	/* Initialize library */
	library = initialize_library();
 80018dc:	f7ff fedc 	bl	8001698 <initialize_library>
 80018e0:	4603      	mov	r3, r0
 80018e2:	4a26      	ldr	r2, [pc, #152]	; (800197c <main+0xe4>)
 80018e4:	6013      	str	r3, [r2, #0]
	current = library;
 80018e6:	4b25      	ldr	r3, [pc, #148]	; (800197c <main+0xe4>)
 80018e8:	681b      	ldr	r3, [r3, #0]
 80018ea:	4a25      	ldr	r2, [pc, #148]	; (8001980 <main+0xe8>)
 80018ec:	6013      	str	r3, [r2, #0]
	/* Read first song header */
	player_song_select(library);
 80018ee:	4b23      	ldr	r3, [pc, #140]	; (800197c <main+0xe4>)
 80018f0:	681b      	ldr	r3, [r3, #0]
 80018f2:	4618      	mov	r0, r3
 80018f4:	f000 fee8 	bl	80026c8 <player_song_select>
	HAL_Delay(10);
 80018f8:	200a      	movs	r0, #10
 80018fa:	f001 f87d 	bl	80029f8 <HAL_Delay>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1)
	{
		switch (app_state)
 80018fe:	4b21      	ldr	r3, [pc, #132]	; (8001984 <main+0xec>)
 8001900:	781b      	ldrb	r3, [r3, #0]
 8001902:	b2db      	uxtb	r3, r3
 8001904:	2b04      	cmp	r3, #4
 8001906:	d8fa      	bhi.n	80018fe <main+0x66>
 8001908:	a201      	add	r2, pc, #4	; (adr r2, 8001910 <main+0x78>)
 800190a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800190e:	bf00      	nop
 8001910:	080018ff 	.word	0x080018ff
 8001914:	08001925 	.word	0x08001925
 8001918:	08001947 	.word	0x08001947
 800191c:	0800194d 	.word	0x0800194d
 8001920:	08001961 	.word	0x08001961
		{
		case APP_STATE_IDLE :
			break;

		case APP_STATE_INIT :
			player_play(&hi2s2);
 8001924:	4818      	ldr	r0, [pc, #96]	; (8001988 <main+0xf0>)
 8001926:	f000 ff17 	bl	8002758 <player_play>
			HAL_Delay(10);
 800192a:	200a      	movs	r0, #10
 800192c:	f001 f864 	bl	80029f8 <HAL_Delay>
			CS4350_Init(&codec, &hi2c2, GPIOD, NRST_DAC_Pin);
 8001930:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001934:	4a15      	ldr	r2, [pc, #84]	; (800198c <main+0xf4>)
 8001936:	4916      	ldr	r1, [pc, #88]	; (8001990 <main+0xf8>)
 8001938:	4816      	ldr	r0, [pc, #88]	; (8001994 <main+0xfc>)
 800193a:	f7fe ffcb 	bl	80008d4 <CS4350_Init>

			app_state = APP_STATE_PLAY;
 800193e:	4b11      	ldr	r3, [pc, #68]	; (8001984 <main+0xec>)
 8001940:	2202      	movs	r2, #2
 8001942:	701a      	strb	r2, [r3, #0]
			break;
 8001944:	e016      	b.n	8001974 <main+0xdc>

		case APP_STATE_PLAY :
			player_process();
 8001946:	f000 ff31 	bl	80027ac <player_process>
			break;
 800194a:	e013      	b.n	8001974 <main+0xdc>

		case APP_STATE_PAUSE :
			player_pause(&hi2s2);
 800194c:	480e      	ldr	r0, [pc, #56]	; (8001988 <main+0xf0>)
 800194e:	f000 ffb0 	bl	80028b2 <player_pause>
			wavplayer_ispaused = true;
 8001952:	4b11      	ldr	r3, [pc, #68]	; (8001998 <main+0x100>)
 8001954:	2201      	movs	r2, #1
 8001956:	701a      	strb	r2, [r3, #0]

			app_state = APP_STATE_IDLE;
 8001958:	4b0a      	ldr	r3, [pc, #40]	; (8001984 <main+0xec>)
 800195a:	2200      	movs	r2, #0
 800195c:	701a      	strb	r2, [r3, #0]
			break;
 800195e:	e009      	b.n	8001974 <main+0xdc>

		case APP_STATE_RESUME :
			wavplayer_ispaused = false;
 8001960:	4b0d      	ldr	r3, [pc, #52]	; (8001998 <main+0x100>)
 8001962:	2200      	movs	r2, #0
 8001964:	701a      	strb	r2, [r3, #0]
			player_process();
 8001966:	f000 ff21 	bl	80027ac <player_process>

			app_state = APP_STATE_PLAY;
 800196a:	4b06      	ldr	r3, [pc, #24]	; (8001984 <main+0xec>)
 800196c:	2202      	movs	r2, #2
 800196e:	701a      	strb	r2, [r3, #0]
			break;
 8001970:	bf00      	nop
 8001972:	e7c4      	b.n	80018fe <main+0x66>
		switch (app_state)
 8001974:	e7c3      	b.n	80018fe <main+0x66>
 8001976:	bf00      	nop
 8001978:	20000464 	.word	0x20000464
 800197c:	200004ac 	.word	0x200004ac
 8001980:	200004b0 	.word	0x200004b0
 8001984:	200004c0 	.word	0x200004c0
 8001988:	20000364 	.word	0x20000364
 800198c:	40020c00 	.word	0x40020c00
 8001990:	20000310 	.word	0x20000310
 8001994:	200004b4 	.word	0x200004b4
 8001998:	200004c1 	.word	0x200004c1

0800199c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800199c:	b580      	push	{r7, lr}
 800199e:	b094      	sub	sp, #80	; 0x50
 80019a0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80019a2:	f107 0320 	add.w	r3, r7, #32
 80019a6:	2230      	movs	r2, #48	; 0x30
 80019a8:	2100      	movs	r1, #0
 80019aa:	4618      	mov	r0, r3
 80019ac:	f027 f93a 	bl	8028c24 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80019b0:	f107 030c 	add.w	r3, r7, #12
 80019b4:	2200      	movs	r2, #0
 80019b6:	601a      	str	r2, [r3, #0]
 80019b8:	605a      	str	r2, [r3, #4]
 80019ba:	609a      	str	r2, [r3, #8]
 80019bc:	60da      	str	r2, [r3, #12]
 80019be:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80019c0:	2300      	movs	r3, #0
 80019c2:	60bb      	str	r3, [r7, #8]
 80019c4:	4b2b      	ldr	r3, [pc, #172]	; (8001a74 <SystemClock_Config+0xd8>)
 80019c6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019c8:	4a2a      	ldr	r2, [pc, #168]	; (8001a74 <SystemClock_Config+0xd8>)
 80019ca:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80019ce:	6413      	str	r3, [r2, #64]	; 0x40
 80019d0:	4b28      	ldr	r3, [pc, #160]	; (8001a74 <SystemClock_Config+0xd8>)
 80019d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019d4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80019d8:	60bb      	str	r3, [r7, #8]
 80019da:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80019dc:	2300      	movs	r3, #0
 80019de:	607b      	str	r3, [r7, #4]
 80019e0:	4b25      	ldr	r3, [pc, #148]	; (8001a78 <SystemClock_Config+0xdc>)
 80019e2:	681b      	ldr	r3, [r3, #0]
 80019e4:	4a24      	ldr	r2, [pc, #144]	; (8001a78 <SystemClock_Config+0xdc>)
 80019e6:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80019ea:	6013      	str	r3, [r2, #0]
 80019ec:	4b22      	ldr	r3, [pc, #136]	; (8001a78 <SystemClock_Config+0xdc>)
 80019ee:	681b      	ldr	r3, [r3, #0]
 80019f0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80019f4:	607b      	str	r3, [r7, #4]
 80019f6:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80019f8:	2301      	movs	r3, #1
 80019fa:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80019fc:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001a00:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001a02:	2302      	movs	r3, #2
 8001a04:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001a06:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001a0a:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8001a0c:	2304      	movs	r3, #4
 8001a0e:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 180;
 8001a10:	23b4      	movs	r3, #180	; 0xb4
 8001a12:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001a14:	2302      	movs	r3, #2
 8001a16:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001a18:	2304      	movs	r3, #4
 8001a1a:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001a1c:	f107 0320 	add.w	r3, r7, #32
 8001a20:	4618      	mov	r0, r3
 8001a22:	f003 fffd 	bl	8005a20 <HAL_RCC_OscConfig>
 8001a26:	4603      	mov	r3, r0
 8001a28:	2b00      	cmp	r3, #0
 8001a2a:	d001      	beq.n	8001a30 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8001a2c:	f000 faac 	bl	8001f88 <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001a30:	f003 ffa6 	bl	8005980 <HAL_PWREx_EnableOverDrive>
 8001a34:	4603      	mov	r3, r0
 8001a36:	2b00      	cmp	r3, #0
 8001a38:	d001      	beq.n	8001a3e <SystemClock_Config+0xa2>
  {
    Error_Handler();
 8001a3a:	f000 faa5 	bl	8001f88 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001a3e:	230f      	movs	r3, #15
 8001a40:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001a42:	2302      	movs	r3, #2
 8001a44:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001a46:	2300      	movs	r3, #0
 8001a48:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001a4a:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8001a4e:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001a50:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001a54:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001a56:	f107 030c 	add.w	r3, r7, #12
 8001a5a:	2105      	movs	r1, #5
 8001a5c:	4618      	mov	r0, r3
 8001a5e:	f004 fa57 	bl	8005f10 <HAL_RCC_ClockConfig>
 8001a62:	4603      	mov	r3, r0
 8001a64:	2b00      	cmp	r3, #0
 8001a66:	d001      	beq.n	8001a6c <SystemClock_Config+0xd0>
  {
    Error_Handler();
 8001a68:	f000 fa8e 	bl	8001f88 <Error_Handler>
  }
}
 8001a6c:	bf00      	nop
 8001a6e:	3750      	adds	r7, #80	; 0x50
 8001a70:	46bd      	mov	sp, r7
 8001a72:	bd80      	pop	{r7, pc}
 8001a74:	40023800 	.word	0x40023800
 8001a78:	40007000 	.word	0x40007000

08001a7c <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8001a7c:	b580      	push	{r7, lr}
 8001a7e:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8001a80:	4b06      	ldr	r3, [pc, #24]	; (8001a9c <MX_CRC_Init+0x20>)
 8001a82:	4a07      	ldr	r2, [pc, #28]	; (8001aa0 <MX_CRC_Init+0x24>)
 8001a84:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001a86:	4805      	ldr	r0, [pc, #20]	; (8001a9c <MX_CRC_Init+0x20>)
 8001a88:	f001 f8c9 	bl	8002c1e <HAL_CRC_Init>
 8001a8c:	4603      	mov	r3, r0
 8001a8e:	2b00      	cmp	r3, #0
 8001a90:	d001      	beq.n	8001a96 <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 8001a92:	f000 fa79 	bl	8001f88 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8001a96:	bf00      	nop
 8001a98:	bd80      	pop	{r7, pc}
 8001a9a:	bf00      	nop
 8001a9c:	200002b4 	.word	0x200002b4
 8001aa0:	40023000 	.word	0x40023000

08001aa4 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8001aa4:	b580      	push	{r7, lr}
 8001aa6:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001aa8:	4b1b      	ldr	r3, [pc, #108]	; (8001b18 <MX_I2C1_Init+0x74>)
 8001aaa:	4a1c      	ldr	r2, [pc, #112]	; (8001b1c <MX_I2C1_Init+0x78>)
 8001aac:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 400000;
 8001aae:	4b1a      	ldr	r3, [pc, #104]	; (8001b18 <MX_I2C1_Init+0x74>)
 8001ab0:	4a1b      	ldr	r2, [pc, #108]	; (8001b20 <MX_I2C1_Init+0x7c>)
 8001ab2:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8001ab4:	4b18      	ldr	r3, [pc, #96]	; (8001b18 <MX_I2C1_Init+0x74>)
 8001ab6:	2200      	movs	r2, #0
 8001ab8:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8001aba:	4b17      	ldr	r3, [pc, #92]	; (8001b18 <MX_I2C1_Init+0x74>)
 8001abc:	2200      	movs	r2, #0
 8001abe:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001ac0:	4b15      	ldr	r3, [pc, #84]	; (8001b18 <MX_I2C1_Init+0x74>)
 8001ac2:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8001ac6:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001ac8:	4b13      	ldr	r3, [pc, #76]	; (8001b18 <MX_I2C1_Init+0x74>)
 8001aca:	2200      	movs	r2, #0
 8001acc:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8001ace:	4b12      	ldr	r3, [pc, #72]	; (8001b18 <MX_I2C1_Init+0x74>)
 8001ad0:	2200      	movs	r2, #0
 8001ad2:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001ad4:	4b10      	ldr	r3, [pc, #64]	; (8001b18 <MX_I2C1_Init+0x74>)
 8001ad6:	2200      	movs	r2, #0
 8001ad8:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001ada:	4b0f      	ldr	r3, [pc, #60]	; (8001b18 <MX_I2C1_Init+0x74>)
 8001adc:	2200      	movs	r2, #0
 8001ade:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001ae0:	480d      	ldr	r0, [pc, #52]	; (8001b18 <MX_I2C1_Init+0x74>)
 8001ae2:	f001 fe77 	bl	80037d4 <HAL_I2C_Init>
 8001ae6:	4603      	mov	r3, r0
 8001ae8:	2b00      	cmp	r3, #0
 8001aea:	d001      	beq.n	8001af0 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8001aec:	f000 fa4c 	bl	8001f88 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001af0:	2100      	movs	r1, #0
 8001af2:	4809      	ldr	r0, [pc, #36]	; (8001b18 <MX_I2C1_Init+0x74>)
 8001af4:	f002 fe2d 	bl	8004752 <HAL_I2CEx_ConfigAnalogFilter>
 8001af8:	4603      	mov	r3, r0
 8001afa:	2b00      	cmp	r3, #0
 8001afc:	d001      	beq.n	8001b02 <MX_I2C1_Init+0x5e>
  {
    Error_Handler();
 8001afe:	f000 fa43 	bl	8001f88 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8001b02:	2100      	movs	r1, #0
 8001b04:	4804      	ldr	r0, [pc, #16]	; (8001b18 <MX_I2C1_Init+0x74>)
 8001b06:	f002 fe60 	bl	80047ca <HAL_I2CEx_ConfigDigitalFilter>
 8001b0a:	4603      	mov	r3, r0
 8001b0c:	2b00      	cmp	r3, #0
 8001b0e:	d001      	beq.n	8001b14 <MX_I2C1_Init+0x70>
  {
    Error_Handler();
 8001b10:	f000 fa3a 	bl	8001f88 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001b14:	bf00      	nop
 8001b16:	bd80      	pop	{r7, pc}
 8001b18:	200002bc 	.word	0x200002bc
 8001b1c:	40005400 	.word	0x40005400
 8001b20:	00061a80 	.word	0x00061a80

08001b24 <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 8001b24:	b580      	push	{r7, lr}
 8001b26:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 8001b28:	4b1b      	ldr	r3, [pc, #108]	; (8001b98 <MX_I2C2_Init+0x74>)
 8001b2a:	4a1c      	ldr	r2, [pc, #112]	; (8001b9c <MX_I2C2_Init+0x78>)
 8001b2c:	601a      	str	r2, [r3, #0]
  hi2c2.Init.ClockSpeed = 100000;
 8001b2e:	4b1a      	ldr	r3, [pc, #104]	; (8001b98 <MX_I2C2_Init+0x74>)
 8001b30:	4a1b      	ldr	r2, [pc, #108]	; (8001ba0 <MX_I2C2_Init+0x7c>)
 8001b32:	605a      	str	r2, [r3, #4]
  hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8001b34:	4b18      	ldr	r3, [pc, #96]	; (8001b98 <MX_I2C2_Init+0x74>)
 8001b36:	2200      	movs	r2, #0
 8001b38:	609a      	str	r2, [r3, #8]
  hi2c2.Init.OwnAddress1 = 0;
 8001b3a:	4b17      	ldr	r3, [pc, #92]	; (8001b98 <MX_I2C2_Init+0x74>)
 8001b3c:	2200      	movs	r2, #0
 8001b3e:	60da      	str	r2, [r3, #12]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001b40:	4b15      	ldr	r3, [pc, #84]	; (8001b98 <MX_I2C2_Init+0x74>)
 8001b42:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8001b46:	611a      	str	r2, [r3, #16]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001b48:	4b13      	ldr	r3, [pc, #76]	; (8001b98 <MX_I2C2_Init+0x74>)
 8001b4a:	2200      	movs	r2, #0
 8001b4c:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2 = 0;
 8001b4e:	4b12      	ldr	r3, [pc, #72]	; (8001b98 <MX_I2C2_Init+0x74>)
 8001b50:	2200      	movs	r2, #0
 8001b52:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001b54:	4b10      	ldr	r3, [pc, #64]	; (8001b98 <MX_I2C2_Init+0x74>)
 8001b56:	2200      	movs	r2, #0
 8001b58:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001b5a:	4b0f      	ldr	r3, [pc, #60]	; (8001b98 <MX_I2C2_Init+0x74>)
 8001b5c:	2200      	movs	r2, #0
 8001b5e:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8001b60:	480d      	ldr	r0, [pc, #52]	; (8001b98 <MX_I2C2_Init+0x74>)
 8001b62:	f001 fe37 	bl	80037d4 <HAL_I2C_Init>
 8001b66:	4603      	mov	r3, r0
 8001b68:	2b00      	cmp	r3, #0
 8001b6a:	d001      	beq.n	8001b70 <MX_I2C2_Init+0x4c>
  {
    Error_Handler();
 8001b6c:	f000 fa0c 	bl	8001f88 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001b70:	2100      	movs	r1, #0
 8001b72:	4809      	ldr	r0, [pc, #36]	; (8001b98 <MX_I2C2_Init+0x74>)
 8001b74:	f002 fded 	bl	8004752 <HAL_I2CEx_ConfigAnalogFilter>
 8001b78:	4603      	mov	r3, r0
 8001b7a:	2b00      	cmp	r3, #0
 8001b7c:	d001      	beq.n	8001b82 <MX_I2C2_Init+0x5e>
  {
    Error_Handler();
 8001b7e:	f000 fa03 	bl	8001f88 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 8001b82:	2100      	movs	r1, #0
 8001b84:	4804      	ldr	r0, [pc, #16]	; (8001b98 <MX_I2C2_Init+0x74>)
 8001b86:	f002 fe20 	bl	80047ca <HAL_I2CEx_ConfigDigitalFilter>
 8001b8a:	4603      	mov	r3, r0
 8001b8c:	2b00      	cmp	r3, #0
 8001b8e:	d001      	beq.n	8001b94 <MX_I2C2_Init+0x70>
  {
    Error_Handler();
 8001b90:	f000 f9fa 	bl	8001f88 <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 8001b94:	bf00      	nop
 8001b96:	bd80      	pop	{r7, pc}
 8001b98:	20000310 	.word	0x20000310
 8001b9c:	40005800 	.word	0x40005800
 8001ba0:	000186a0 	.word	0x000186a0

08001ba4 <MX_I2S2_Init>:
  * @brief I2S2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2S2_Init(void)
{
 8001ba4:	b580      	push	{r7, lr}
 8001ba6:	af00      	add	r7, sp, #0
  /* USER CODE END I2S2_Init 0 */

  /* USER CODE BEGIN I2S2_Init 1 */

  /* USER CODE END I2S2_Init 1 */
  hi2s2.Instance = SPI2;
 8001ba8:	4b13      	ldr	r3, [pc, #76]	; (8001bf8 <MX_I2S2_Init+0x54>)
 8001baa:	4a14      	ldr	r2, [pc, #80]	; (8001bfc <MX_I2S2_Init+0x58>)
 8001bac:	601a      	str	r2, [r3, #0]
  hi2s2.Init.Mode = I2S_MODE_MASTER_TX;
 8001bae:	4b12      	ldr	r3, [pc, #72]	; (8001bf8 <MX_I2S2_Init+0x54>)
 8001bb0:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001bb4:	605a      	str	r2, [r3, #4]
  hi2s2.Init.Standard = I2S_STANDARD_PHILIPS;
 8001bb6:	4b10      	ldr	r3, [pc, #64]	; (8001bf8 <MX_I2S2_Init+0x54>)
 8001bb8:	2200      	movs	r2, #0
 8001bba:	609a      	str	r2, [r3, #8]
  hi2s2.Init.DataFormat = I2S_DATAFORMAT_16B;
 8001bbc:	4b0e      	ldr	r3, [pc, #56]	; (8001bf8 <MX_I2S2_Init+0x54>)
 8001bbe:	2200      	movs	r2, #0
 8001bc0:	60da      	str	r2, [r3, #12]
  hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
 8001bc2:	4b0d      	ldr	r3, [pc, #52]	; (8001bf8 <MX_I2S2_Init+0x54>)
 8001bc4:	2200      	movs	r2, #0
 8001bc6:	611a      	str	r2, [r3, #16]
  hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_44K;
 8001bc8:	4b0b      	ldr	r3, [pc, #44]	; (8001bf8 <MX_I2S2_Init+0x54>)
 8001bca:	f64a 4244 	movw	r2, #44100	; 0xac44
 8001bce:	615a      	str	r2, [r3, #20]
  hi2s2.Init.CPOL = I2S_CPOL_LOW;
 8001bd0:	4b09      	ldr	r3, [pc, #36]	; (8001bf8 <MX_I2S2_Init+0x54>)
 8001bd2:	2200      	movs	r2, #0
 8001bd4:	619a      	str	r2, [r3, #24]
  hi2s2.Init.ClockSource = I2S_CLOCK_PLL;
 8001bd6:	4b08      	ldr	r3, [pc, #32]	; (8001bf8 <MX_I2S2_Init+0x54>)
 8001bd8:	2200      	movs	r2, #0
 8001bda:	61da      	str	r2, [r3, #28]
  hi2s2.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 8001bdc:	4b06      	ldr	r3, [pc, #24]	; (8001bf8 <MX_I2S2_Init+0x54>)
 8001bde:	2200      	movs	r2, #0
 8001be0:	621a      	str	r2, [r3, #32]
  if (HAL_I2S_Init(&hi2s2) != HAL_OK)
 8001be2:	4805      	ldr	r0, [pc, #20]	; (8001bf8 <MX_I2S2_Init+0x54>)
 8001be4:	f002 fe30 	bl	8004848 <HAL_I2S_Init>
 8001be8:	4603      	mov	r3, r0
 8001bea:	2b00      	cmp	r3, #0
 8001bec:	d001      	beq.n	8001bf2 <MX_I2S2_Init+0x4e>
  {
    Error_Handler();
 8001bee:	f000 f9cb 	bl	8001f88 <Error_Handler>
  }
  /* USER CODE BEGIN I2S2_Init 2 */

  /* USER CODE END I2S2_Init 2 */

}
 8001bf2:	bf00      	nop
 8001bf4:	bd80      	pop	{r7, pc}
 8001bf6:	bf00      	nop
 8001bf8:	20000364 	.word	0x20000364
 8001bfc:	40003800 	.word	0x40003800

08001c00 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8001c00:	b580      	push	{r7, lr}
 8001c02:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8001c04:	4b17      	ldr	r3, [pc, #92]	; (8001c64 <MX_SPI1_Init+0x64>)
 8001c06:	4a18      	ldr	r2, [pc, #96]	; (8001c68 <MX_SPI1_Init+0x68>)
 8001c08:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8001c0a:	4b16      	ldr	r3, [pc, #88]	; (8001c64 <MX_SPI1_Init+0x64>)
 8001c0c:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001c10:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8001c12:	4b14      	ldr	r3, [pc, #80]	; (8001c64 <MX_SPI1_Init+0x64>)
 8001c14:	2200      	movs	r2, #0
 8001c16:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8001c18:	4b12      	ldr	r3, [pc, #72]	; (8001c64 <MX_SPI1_Init+0x64>)
 8001c1a:	2200      	movs	r2, #0
 8001c1c:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001c1e:	4b11      	ldr	r3, [pc, #68]	; (8001c64 <MX_SPI1_Init+0x64>)
 8001c20:	2200      	movs	r2, #0
 8001c22:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001c24:	4b0f      	ldr	r3, [pc, #60]	; (8001c64 <MX_SPI1_Init+0x64>)
 8001c26:	2200      	movs	r2, #0
 8001c28:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8001c2a:	4b0e      	ldr	r3, [pc, #56]	; (8001c64 <MX_SPI1_Init+0x64>)
 8001c2c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001c30:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8001c32:	4b0c      	ldr	r3, [pc, #48]	; (8001c64 <MX_SPI1_Init+0x64>)
 8001c34:	2200      	movs	r2, #0
 8001c36:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001c38:	4b0a      	ldr	r3, [pc, #40]	; (8001c64 <MX_SPI1_Init+0x64>)
 8001c3a:	2200      	movs	r2, #0
 8001c3c:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8001c3e:	4b09      	ldr	r3, [pc, #36]	; (8001c64 <MX_SPI1_Init+0x64>)
 8001c40:	2200      	movs	r2, #0
 8001c42:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001c44:	4b07      	ldr	r3, [pc, #28]	; (8001c64 <MX_SPI1_Init+0x64>)
 8001c46:	2200      	movs	r2, #0
 8001c48:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 8001c4a:	4b06      	ldr	r3, [pc, #24]	; (8001c64 <MX_SPI1_Init+0x64>)
 8001c4c:	220a      	movs	r2, #10
 8001c4e:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8001c50:	4804      	ldr	r0, [pc, #16]	; (8001c64 <MX_SPI1_Init+0x64>)
 8001c52:	f004 fdcd 	bl	80067f0 <HAL_SPI_Init>
 8001c56:	4603      	mov	r3, r0
 8001c58:	2b00      	cmp	r3, #0
 8001c5a:	d001      	beq.n	8001c60 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8001c5c:	f000 f994 	bl	8001f88 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8001c60:	bf00      	nop
 8001c62:	bd80      	pop	{r7, pc}
 8001c64:	2000040c 	.word	0x2000040c
 8001c68:	40013000 	.word	0x40013000

08001c6c <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001c6c:	b580      	push	{r7, lr}
 8001c6e:	b086      	sub	sp, #24
 8001c70:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001c72:	f107 0308 	add.w	r3, r7, #8
 8001c76:	2200      	movs	r2, #0
 8001c78:	601a      	str	r2, [r3, #0]
 8001c7a:	605a      	str	r2, [r3, #4]
 8001c7c:	609a      	str	r2, [r3, #8]
 8001c7e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001c80:	463b      	mov	r3, r7
 8001c82:	2200      	movs	r2, #0
 8001c84:	601a      	str	r2, [r3, #0]
 8001c86:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001c88:	4b1d      	ldr	r3, [pc, #116]	; (8001d00 <MX_TIM2_Init+0x94>)
 8001c8a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001c8e:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 100;
 8001c90:	4b1b      	ldr	r3, [pc, #108]	; (8001d00 <MX_TIM2_Init+0x94>)
 8001c92:	2264      	movs	r2, #100	; 0x64
 8001c94:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001c96:	4b1a      	ldr	r3, [pc, #104]	; (8001d00 <MX_TIM2_Init+0x94>)
 8001c98:	2200      	movs	r2, #0
 8001c9a:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 50000;
 8001c9c:	4b18      	ldr	r3, [pc, #96]	; (8001d00 <MX_TIM2_Init+0x94>)
 8001c9e:	f24c 3250 	movw	r2, #50000	; 0xc350
 8001ca2:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001ca4:	4b16      	ldr	r3, [pc, #88]	; (8001d00 <MX_TIM2_Init+0x94>)
 8001ca6:	2200      	movs	r2, #0
 8001ca8:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001caa:	4b15      	ldr	r3, [pc, #84]	; (8001d00 <MX_TIM2_Init+0x94>)
 8001cac:	2200      	movs	r2, #0
 8001cae:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001cb0:	4813      	ldr	r0, [pc, #76]	; (8001d00 <MX_TIM2_Init+0x94>)
 8001cb2:	f005 f9cf 	bl	8007054 <HAL_TIM_Base_Init>
 8001cb6:	4603      	mov	r3, r0
 8001cb8:	2b00      	cmp	r3, #0
 8001cba:	d001      	beq.n	8001cc0 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8001cbc:	f000 f964 	bl	8001f88 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001cc0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001cc4:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001cc6:	f107 0308 	add.w	r3, r7, #8
 8001cca:	4619      	mov	r1, r3
 8001ccc:	480c      	ldr	r0, [pc, #48]	; (8001d00 <MX_TIM2_Init+0x94>)
 8001cce:	f005 fb89 	bl	80073e4 <HAL_TIM_ConfigClockSource>
 8001cd2:	4603      	mov	r3, r0
 8001cd4:	2b00      	cmp	r3, #0
 8001cd6:	d001      	beq.n	8001cdc <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8001cd8:	f000 f956 	bl	8001f88 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001cdc:	2300      	movs	r3, #0
 8001cde:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001ce0:	2300      	movs	r3, #0
 8001ce2:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001ce4:	463b      	mov	r3, r7
 8001ce6:	4619      	mov	r1, r3
 8001ce8:	4805      	ldr	r0, [pc, #20]	; (8001d00 <MX_TIM2_Init+0x94>)
 8001cea:	f005 fda5 	bl	8007838 <HAL_TIMEx_MasterConfigSynchronization>
 8001cee:	4603      	mov	r3, r0
 8001cf0:	2b00      	cmp	r3, #0
 8001cf2:	d001      	beq.n	8001cf8 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8001cf4:	f000 f948 	bl	8001f88 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8001cf8:	bf00      	nop
 8001cfa:	3718      	adds	r7, #24
 8001cfc:	46bd      	mov	sp, r7
 8001cfe:	bd80      	pop	{r7, pc}
 8001d00:	20000464 	.word	0x20000464

08001d04 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8001d04:	b580      	push	{r7, lr}
 8001d06:	b082      	sub	sp, #8
 8001d08:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001d0a:	2300      	movs	r3, #0
 8001d0c:	607b      	str	r3, [r7, #4]
 8001d0e:	4b0c      	ldr	r3, [pc, #48]	; (8001d40 <MX_DMA_Init+0x3c>)
 8001d10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d12:	4a0b      	ldr	r2, [pc, #44]	; (8001d40 <MX_DMA_Init+0x3c>)
 8001d14:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001d18:	6313      	str	r3, [r2, #48]	; 0x30
 8001d1a:	4b09      	ldr	r3, [pc, #36]	; (8001d40 <MX_DMA_Init+0x3c>)
 8001d1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d1e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001d22:	607b      	str	r3, [r7, #4]
 8001d24:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream4_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 0, 0);
 8001d26:	2200      	movs	r2, #0
 8001d28:	2100      	movs	r1, #0
 8001d2a:	200f      	movs	r0, #15
 8001d2c:	f000 ff40 	bl	8002bb0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 8001d30:	200f      	movs	r0, #15
 8001d32:	f000 ff59 	bl	8002be8 <HAL_NVIC_EnableIRQ>

}
 8001d36:	bf00      	nop
 8001d38:	3708      	adds	r7, #8
 8001d3a:	46bd      	mov	sp, r7
 8001d3c:	bd80      	pop	{r7, pc}
 8001d3e:	bf00      	nop
 8001d40:	40023800 	.word	0x40023800

08001d44 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001d44:	b580      	push	{r7, lr}
 8001d46:	b08a      	sub	sp, #40	; 0x28
 8001d48:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d4a:	f107 0314 	add.w	r3, r7, #20
 8001d4e:	2200      	movs	r2, #0
 8001d50:	601a      	str	r2, [r3, #0]
 8001d52:	605a      	str	r2, [r3, #4]
 8001d54:	609a      	str	r2, [r3, #8]
 8001d56:	60da      	str	r2, [r3, #12]
 8001d58:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001d5a:	2300      	movs	r3, #0
 8001d5c:	613b      	str	r3, [r7, #16]
 8001d5e:	4b58      	ldr	r3, [pc, #352]	; (8001ec0 <MX_GPIO_Init+0x17c>)
 8001d60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d62:	4a57      	ldr	r2, [pc, #348]	; (8001ec0 <MX_GPIO_Init+0x17c>)
 8001d64:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001d68:	6313      	str	r3, [r2, #48]	; 0x30
 8001d6a:	4b55      	ldr	r3, [pc, #340]	; (8001ec0 <MX_GPIO_Init+0x17c>)
 8001d6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d6e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001d72:	613b      	str	r3, [r7, #16]
 8001d74:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d76:	2300      	movs	r3, #0
 8001d78:	60fb      	str	r3, [r7, #12]
 8001d7a:	4b51      	ldr	r3, [pc, #324]	; (8001ec0 <MX_GPIO_Init+0x17c>)
 8001d7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d7e:	4a50      	ldr	r2, [pc, #320]	; (8001ec0 <MX_GPIO_Init+0x17c>)
 8001d80:	f043 0301 	orr.w	r3, r3, #1
 8001d84:	6313      	str	r3, [r2, #48]	; 0x30
 8001d86:	4b4e      	ldr	r3, [pc, #312]	; (8001ec0 <MX_GPIO_Init+0x17c>)
 8001d88:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d8a:	f003 0301 	and.w	r3, r3, #1
 8001d8e:	60fb      	str	r3, [r7, #12]
 8001d90:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d92:	2300      	movs	r3, #0
 8001d94:	60bb      	str	r3, [r7, #8]
 8001d96:	4b4a      	ldr	r3, [pc, #296]	; (8001ec0 <MX_GPIO_Init+0x17c>)
 8001d98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d9a:	4a49      	ldr	r2, [pc, #292]	; (8001ec0 <MX_GPIO_Init+0x17c>)
 8001d9c:	f043 0302 	orr.w	r3, r3, #2
 8001da0:	6313      	str	r3, [r2, #48]	; 0x30
 8001da2:	4b47      	ldr	r3, [pc, #284]	; (8001ec0 <MX_GPIO_Init+0x17c>)
 8001da4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001da6:	f003 0302 	and.w	r3, r3, #2
 8001daa:	60bb      	str	r3, [r7, #8]
 8001dac:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001dae:	2300      	movs	r3, #0
 8001db0:	607b      	str	r3, [r7, #4]
 8001db2:	4b43      	ldr	r3, [pc, #268]	; (8001ec0 <MX_GPIO_Init+0x17c>)
 8001db4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001db6:	4a42      	ldr	r2, [pc, #264]	; (8001ec0 <MX_GPIO_Init+0x17c>)
 8001db8:	f043 0308 	orr.w	r3, r3, #8
 8001dbc:	6313      	str	r3, [r2, #48]	; 0x30
 8001dbe:	4b40      	ldr	r3, [pc, #256]	; (8001ec0 <MX_GPIO_Init+0x17c>)
 8001dc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dc2:	f003 0308 	and.w	r3, r3, #8
 8001dc6:	607b      	str	r3, [r7, #4]
 8001dc8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001dca:	2300      	movs	r3, #0
 8001dcc:	603b      	str	r3, [r7, #0]
 8001dce:	4b3c      	ldr	r3, [pc, #240]	; (8001ec0 <MX_GPIO_Init+0x17c>)
 8001dd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dd2:	4a3b      	ldr	r2, [pc, #236]	; (8001ec0 <MX_GPIO_Init+0x17c>)
 8001dd4:	f043 0304 	orr.w	r3, r3, #4
 8001dd8:	6313      	str	r3, [r2, #48]	; 0x30
 8001dda:	4b39      	ldr	r3, [pc, #228]	; (8001ec0 <MX_GPIO_Init+0x17c>)
 8001ddc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dde:	f003 0304 	and.w	r3, r3, #4
 8001de2:	603b      	str	r3, [r7, #0]
 8001de4:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SPI1_CS_GPIO_Port, SPI1_CS_Pin, GPIO_PIN_SET);
 8001de6:	2201      	movs	r2, #1
 8001de8:	2110      	movs	r1, #16
 8001dea:	4836      	ldr	r0, [pc, #216]	; (8001ec4 <MX_GPIO_Init+0x180>)
 8001dec:	f001 fcc0 	bl	8003770 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SPI4_NSS_GPIO_Port, SPI4_NSS_Pin, GPIO_PIN_RESET);
 8001df0:	2200      	movs	r2, #0
 8001df2:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8001df6:	4834      	ldr	r0, [pc, #208]	; (8001ec8 <MX_GPIO_Init+0x184>)
 8001df8:	f001 fcba 	bl	8003770 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, DC_Pin|AD1_Pin|AD0_Pin|NRST_DAC_Pin, GPIO_PIN_RESET);
 8001dfc:	2200      	movs	r2, #0
 8001dfe:	f44f 6170 	mov.w	r1, #3840	; 0xf00
 8001e02:	4832      	ldr	r0, [pc, #200]	; (8001ecc <MX_GPIO_Init+0x188>)
 8001e04:	f001 fcb4 	bl	8003770 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : SPI1_CS_Pin */
  GPIO_InitStruct.Pin = SPI1_CS_Pin;
 8001e08:	2310      	movs	r3, #16
 8001e0a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e0c:	2301      	movs	r3, #1
 8001e0e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e10:	2300      	movs	r3, #0
 8001e12:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e14:	2300      	movs	r3, #0
 8001e16:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(SPI1_CS_GPIO_Port, &GPIO_InitStruct);
 8001e18:	f107 0314 	add.w	r3, r7, #20
 8001e1c:	4619      	mov	r1, r3
 8001e1e:	4829      	ldr	r0, [pc, #164]	; (8001ec4 <MX_GPIO_Init+0x180>)
 8001e20:	f001 fafa 	bl	8003418 <HAL_GPIO_Init>

  /*Configure GPIO pin : SPI4_NSS_Pin */
  GPIO_InitStruct.Pin = SPI4_NSS_Pin;
 8001e24:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001e28:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e2a:	2301      	movs	r3, #1
 8001e2c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e2e:	2300      	movs	r3, #0
 8001e30:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e32:	2300      	movs	r3, #0
 8001e34:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(SPI4_NSS_GPIO_Port, &GPIO_InitStruct);
 8001e36:	f107 0314 	add.w	r3, r7, #20
 8001e3a:	4619      	mov	r1, r3
 8001e3c:	4822      	ldr	r0, [pc, #136]	; (8001ec8 <MX_GPIO_Init+0x184>)
 8001e3e:	f001 faeb 	bl	8003418 <HAL_GPIO_Init>

  /*Configure GPIO pins : DC_Pin AD1_Pin AD0_Pin NRST_DAC_Pin */
  GPIO_InitStruct.Pin = DC_Pin|AD1_Pin|AD0_Pin|NRST_DAC_Pin;
 8001e42:	f44f 6370 	mov.w	r3, #3840	; 0xf00
 8001e46:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e48:	2301      	movs	r3, #1
 8001e4a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e4c:	2300      	movs	r3, #0
 8001e4e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e50:	2300      	movs	r3, #0
 8001e52:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e54:	f107 0314 	add.w	r3, r7, #20
 8001e58:	4619      	mov	r1, r3
 8001e5a:	481c      	ldr	r0, [pc, #112]	; (8001ecc <MX_GPIO_Init+0x188>)
 8001e5c:	f001 fadc 	bl	8003418 <HAL_GPIO_Init>

  /*Configure GPIO pins : PLAY_BUTTON_Pin PAUSE_BUTTON_Pin SKIPF_BUTTON_Pin VOL_UP_BUTTON_Pin */
  GPIO_InitStruct.Pin = PLAY_BUTTON_Pin|PAUSE_BUTTON_Pin|SKIPF_BUTTON_Pin|VOL_UP_BUTTON_Pin;
 8001e60:	f44f 53f0 	mov.w	r3, #7680	; 0x1e00
 8001e64:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001e66:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8001e6a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e6c:	2300      	movs	r3, #0
 8001e6e:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e70:	f107 0314 	add.w	r3, r7, #20
 8001e74:	4619      	mov	r1, r3
 8001e76:	4816      	ldr	r0, [pc, #88]	; (8001ed0 <MX_GPIO_Init+0x18c>)
 8001e78:	f001 face 	bl	8003418 <HAL_GPIO_Init>

  /*Configure GPIO pin : VOL_DOWN_BUTTON_Pin */
  GPIO_InitStruct.Pin = VOL_DOWN_BUTTON_Pin;
 8001e7c:	2301      	movs	r3, #1
 8001e7e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001e80:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8001e84:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e86:	2300      	movs	r3, #0
 8001e88:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(VOL_DOWN_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001e8a:	f107 0314 	add.w	r3, r7, #20
 8001e8e:	4619      	mov	r1, r3
 8001e90:	480e      	ldr	r0, [pc, #56]	; (8001ecc <MX_GPIO_Init+0x188>)
 8001e92:	f001 fac1 	bl	8003418 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8001e96:	2200      	movs	r2, #0
 8001e98:	2100      	movs	r1, #0
 8001e9a:	2017      	movs	r0, #23
 8001e9c:	f000 fe88 	bl	8002bb0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8001ea0:	2017      	movs	r0, #23
 8001ea2:	f000 fea1 	bl	8002be8 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8001ea6:	2200      	movs	r2, #0
 8001ea8:	2100      	movs	r1, #0
 8001eaa:	2028      	movs	r0, #40	; 0x28
 8001eac:	f000 fe80 	bl	8002bb0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8001eb0:	2028      	movs	r0, #40	; 0x28
 8001eb2:	f000 fe99 	bl	8002be8 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001eb6:	bf00      	nop
 8001eb8:	3728      	adds	r7, #40	; 0x28
 8001eba:	46bd      	mov	sp, r7
 8001ebc:	bd80      	pop	{r7, pc}
 8001ebe:	bf00      	nop
 8001ec0:	40023800 	.word	0x40023800
 8001ec4:	40020000 	.word	0x40020000
 8001ec8:	40020400 	.word	0x40020400
 8001ecc:	40020c00 	.word	0x40020c00
 8001ed0:	40020800 	.word	0x40020800

08001ed4 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
extern void touchgfxSignalVSync(void);

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8001ed4:	b580      	push	{r7, lr}
 8001ed6:	b082      	sub	sp, #8
 8001ed8:	af00      	add	r7, sp, #0
 8001eda:	6078      	str	r0, [r7, #4]
	if (htim->Instance == TIM2)
 8001edc:	687b      	ldr	r3, [r7, #4]
 8001ede:	681b      	ldr	r3, [r3, #0]
 8001ee0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001ee4:	d101      	bne.n	8001eea <HAL_TIM_PeriodElapsedCallback+0x16>
	{
		touchgfxSignalVSync();
 8001ee6:	f00f fcd4 	bl	8011892 <touchgfxSignalVSync>
	}
	if (htim->Instance == TIM11) {
 8001eea:	687b      	ldr	r3, [r7, #4]
 8001eec:	681b      	ldr	r3, [r3, #0]
 8001eee:	4a04      	ldr	r2, [pc, #16]	; (8001f00 <HAL_TIM_PeriodElapsedCallback+0x2c>)
 8001ef0:	4293      	cmp	r3, r2
 8001ef2:	d101      	bne.n	8001ef8 <HAL_TIM_PeriodElapsedCallback+0x24>
		HAL_IncTick();
 8001ef4:	f000 fd60 	bl	80029b8 <HAL_IncTick>
	}
}
 8001ef8:	bf00      	nop
 8001efa:	3708      	adds	r7, #8
 8001efc:	46bd      	mov	sp, r7
 8001efe:	bd80      	pop	{r7, pc}
 8001f00:	40014800 	.word	0x40014800

08001f04 <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8001f04:	b580      	push	{r7, lr}
 8001f06:	b082      	sub	sp, #8
 8001f08:	af00      	add	r7, sp, #0
 8001f0a:	4603      	mov	r3, r0
 8001f0c:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin == PLAY_BUTTON_Pin && app_state != APP_STATE_PLAY)
 8001f0e:	88fb      	ldrh	r3, [r7, #6]
 8001f10:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001f14:	d112      	bne.n	8001f3c <HAL_GPIO_EXTI_Callback+0x38>
 8001f16:	4b18      	ldr	r3, [pc, #96]	; (8001f78 <HAL_GPIO_EXTI_Callback+0x74>)
 8001f18:	781b      	ldrb	r3, [r3, #0]
 8001f1a:	b2db      	uxtb	r3, r3
 8001f1c:	2b02      	cmp	r3, #2
 8001f1e:	d00d      	beq.n	8001f3c <HAL_GPIO_EXTI_Callback+0x38>
	{
		/* Resume player if player is paused */
		if (wavplayer_ispaused)
 8001f20:	4b16      	ldr	r3, [pc, #88]	; (8001f7c <HAL_GPIO_EXTI_Callback+0x78>)
 8001f22:	781b      	ldrb	r3, [r3, #0]
 8001f24:	2b00      	cmp	r3, #0
 8001f26:	d006      	beq.n	8001f36 <HAL_GPIO_EXTI_Callback+0x32>
		{
			player_resume(&hi2s2);
 8001f28:	4815      	ldr	r0, [pc, #84]	; (8001f80 <HAL_GPIO_EXTI_Callback+0x7c>)
 8001f2a:	f000 fccd 	bl	80028c8 <player_resume>
			app_state = APP_STATE_RESUME;
 8001f2e:	4b12      	ldr	r3, [pc, #72]	; (8001f78 <HAL_GPIO_EXTI_Callback+0x74>)
 8001f30:	2204      	movs	r2, #4
 8001f32:	701a      	strb	r2, [r3, #0]
			return;
 8001f34:	e01d      	b.n	8001f72 <HAL_GPIO_EXTI_Callback+0x6e>
		}
		/* Otherwise initialize player */
		app_state = APP_STATE_INIT;
 8001f36:	4b10      	ldr	r3, [pc, #64]	; (8001f78 <HAL_GPIO_EXTI_Callback+0x74>)
 8001f38:	2201      	movs	r2, #1
 8001f3a:	701a      	strb	r2, [r3, #0]
	}
	if (GPIO_Pin == PAUSE_BUTTON_Pin && app_state != APP_STATE_PAUSE)
 8001f3c:	88fb      	ldrh	r3, [r7, #6]
 8001f3e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001f42:	d107      	bne.n	8001f54 <HAL_GPIO_EXTI_Callback+0x50>
 8001f44:	4b0c      	ldr	r3, [pc, #48]	; (8001f78 <HAL_GPIO_EXTI_Callback+0x74>)
 8001f46:	781b      	ldrb	r3, [r3, #0]
 8001f48:	b2db      	uxtb	r3, r3
 8001f4a:	2b03      	cmp	r3, #3
 8001f4c:	d002      	beq.n	8001f54 <HAL_GPIO_EXTI_Callback+0x50>
	{
		app_state = APP_STATE_PAUSE;
 8001f4e:	4b0a      	ldr	r3, [pc, #40]	; (8001f78 <HAL_GPIO_EXTI_Callback+0x74>)
 8001f50:	2203      	movs	r2, #3
 8001f52:	701a      	strb	r2, [r3, #0]
	{
//		player_skip(current);
//		current = current->next->next;
//		app_state = APP_STATE_INIT;
	}
	if (GPIO_Pin == VOL_UP_BUTTON_Pin)
 8001f54:	88fb      	ldrh	r3, [r7, #6]
 8001f56:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001f5a:	d102      	bne.n	8001f62 <HAL_GPIO_EXTI_Callback+0x5e>
	{
		CS4350_increase_vol(&codec);
 8001f5c:	4809      	ldr	r0, [pc, #36]	; (8001f84 <HAL_GPIO_EXTI_Callback+0x80>)
 8001f5e:	f7fe fe2d 	bl	8000bbc <CS4350_increase_vol>
	}
	if (GPIO_Pin == VOL_DOWN_BUTTON_Pin)
 8001f62:	88fb      	ldrh	r3, [r7, #6]
 8001f64:	2b01      	cmp	r3, #1
 8001f66:	d103      	bne.n	8001f70 <HAL_GPIO_EXTI_Callback+0x6c>
	{
		CS4350_decrease_vol(&codec);
 8001f68:	4806      	ldr	r0, [pc, #24]	; (8001f84 <HAL_GPIO_EXTI_Callback+0x80>)
 8001f6a:	f7fe fe5d 	bl	8000c28 <CS4350_decrease_vol>
 8001f6e:	e000      	b.n	8001f72 <HAL_GPIO_EXTI_Callback+0x6e>
	}
	else
	{
		__NOP();
 8001f70:	bf00      	nop
	}
}
 8001f72:	3708      	adds	r7, #8
 8001f74:	46bd      	mov	sp, r7
 8001f76:	bd80      	pop	{r7, pc}
 8001f78:	200004c0 	.word	0x200004c0
 8001f7c:	200004c1 	.word	0x200004c1
 8001f80:	20000364 	.word	0x20000364
 8001f84:	200004b4 	.word	0x200004b4

08001f88 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001f88:	b480      	push	{r7}
 8001f8a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001f8c:	b672      	cpsid	i
}
 8001f8e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001f90:	e7fe      	b.n	8001f90 <Error_Handler+0x8>
	...

08001f94 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001f94:	b480      	push	{r7}
 8001f96:	b083      	sub	sp, #12
 8001f98:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001f9a:	2300      	movs	r3, #0
 8001f9c:	607b      	str	r3, [r7, #4]
 8001f9e:	4b10      	ldr	r3, [pc, #64]	; (8001fe0 <HAL_MspInit+0x4c>)
 8001fa0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001fa2:	4a0f      	ldr	r2, [pc, #60]	; (8001fe0 <HAL_MspInit+0x4c>)
 8001fa4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001fa8:	6453      	str	r3, [r2, #68]	; 0x44
 8001faa:	4b0d      	ldr	r3, [pc, #52]	; (8001fe0 <HAL_MspInit+0x4c>)
 8001fac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001fae:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001fb2:	607b      	str	r3, [r7, #4]
 8001fb4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001fb6:	2300      	movs	r3, #0
 8001fb8:	603b      	str	r3, [r7, #0]
 8001fba:	4b09      	ldr	r3, [pc, #36]	; (8001fe0 <HAL_MspInit+0x4c>)
 8001fbc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001fbe:	4a08      	ldr	r2, [pc, #32]	; (8001fe0 <HAL_MspInit+0x4c>)
 8001fc0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001fc4:	6413      	str	r3, [r2, #64]	; 0x40
 8001fc6:	4b06      	ldr	r3, [pc, #24]	; (8001fe0 <HAL_MspInit+0x4c>)
 8001fc8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001fca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001fce:	603b      	str	r3, [r7, #0]
 8001fd0:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001fd2:	bf00      	nop
 8001fd4:	370c      	adds	r7, #12
 8001fd6:	46bd      	mov	sp, r7
 8001fd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fdc:	4770      	bx	lr
 8001fde:	bf00      	nop
 8001fe0:	40023800 	.word	0x40023800

08001fe4 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8001fe4:	b480      	push	{r7}
 8001fe6:	b085      	sub	sp, #20
 8001fe8:	af00      	add	r7, sp, #0
 8001fea:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8001fec:	687b      	ldr	r3, [r7, #4]
 8001fee:	681b      	ldr	r3, [r3, #0]
 8001ff0:	4a0b      	ldr	r2, [pc, #44]	; (8002020 <HAL_CRC_MspInit+0x3c>)
 8001ff2:	4293      	cmp	r3, r2
 8001ff4:	d10d      	bne.n	8002012 <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001ff6:	2300      	movs	r3, #0
 8001ff8:	60fb      	str	r3, [r7, #12]
 8001ffa:	4b0a      	ldr	r3, [pc, #40]	; (8002024 <HAL_CRC_MspInit+0x40>)
 8001ffc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ffe:	4a09      	ldr	r2, [pc, #36]	; (8002024 <HAL_CRC_MspInit+0x40>)
 8002000:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002004:	6313      	str	r3, [r2, #48]	; 0x30
 8002006:	4b07      	ldr	r3, [pc, #28]	; (8002024 <HAL_CRC_MspInit+0x40>)
 8002008:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800200a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800200e:	60fb      	str	r3, [r7, #12]
 8002010:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8002012:	bf00      	nop
 8002014:	3714      	adds	r7, #20
 8002016:	46bd      	mov	sp, r7
 8002018:	f85d 7b04 	ldr.w	r7, [sp], #4
 800201c:	4770      	bx	lr
 800201e:	bf00      	nop
 8002020:	40023000 	.word	0x40023000
 8002024:	40023800 	.word	0x40023800

08002028 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002028:	b580      	push	{r7, lr}
 800202a:	b08c      	sub	sp, #48	; 0x30
 800202c:	af00      	add	r7, sp, #0
 800202e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002030:	f107 031c 	add.w	r3, r7, #28
 8002034:	2200      	movs	r2, #0
 8002036:	601a      	str	r2, [r3, #0]
 8002038:	605a      	str	r2, [r3, #4]
 800203a:	609a      	str	r2, [r3, #8]
 800203c:	60da      	str	r2, [r3, #12]
 800203e:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 8002040:	687b      	ldr	r3, [r7, #4]
 8002042:	681b      	ldr	r3, [r3, #0]
 8002044:	4a32      	ldr	r2, [pc, #200]	; (8002110 <HAL_I2C_MspInit+0xe8>)
 8002046:	4293      	cmp	r3, r2
 8002048:	d12c      	bne.n	80020a4 <HAL_I2C_MspInit+0x7c>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 800204a:	2300      	movs	r3, #0
 800204c:	61bb      	str	r3, [r7, #24]
 800204e:	4b31      	ldr	r3, [pc, #196]	; (8002114 <HAL_I2C_MspInit+0xec>)
 8002050:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002052:	4a30      	ldr	r2, [pc, #192]	; (8002114 <HAL_I2C_MspInit+0xec>)
 8002054:	f043 0302 	orr.w	r3, r3, #2
 8002058:	6313      	str	r3, [r2, #48]	; 0x30
 800205a:	4b2e      	ldr	r3, [pc, #184]	; (8002114 <HAL_I2C_MspInit+0xec>)
 800205c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800205e:	f003 0302 	and.w	r3, r3, #2
 8002062:	61bb      	str	r3, [r7, #24]
 8002064:	69bb      	ldr	r3, [r7, #24]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002066:	23c0      	movs	r3, #192	; 0xc0
 8002068:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800206a:	2312      	movs	r3, #18
 800206c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 800206e:	2301      	movs	r3, #1
 8002070:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002072:	2303      	movs	r3, #3
 8002074:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002076:	2304      	movs	r3, #4
 8002078:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800207a:	f107 031c 	add.w	r3, r7, #28
 800207e:	4619      	mov	r1, r3
 8002080:	4825      	ldr	r0, [pc, #148]	; (8002118 <HAL_I2C_MspInit+0xf0>)
 8002082:	f001 f9c9 	bl	8003418 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8002086:	2300      	movs	r3, #0
 8002088:	617b      	str	r3, [r7, #20]
 800208a:	4b22      	ldr	r3, [pc, #136]	; (8002114 <HAL_I2C_MspInit+0xec>)
 800208c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800208e:	4a21      	ldr	r2, [pc, #132]	; (8002114 <HAL_I2C_MspInit+0xec>)
 8002090:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002094:	6413      	str	r3, [r2, #64]	; 0x40
 8002096:	4b1f      	ldr	r3, [pc, #124]	; (8002114 <HAL_I2C_MspInit+0xec>)
 8002098:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800209a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800209e:	617b      	str	r3, [r7, #20]
 80020a0:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN I2C2_MspInit 1 */

  /* USER CODE END I2C2_MspInit 1 */
  }

}
 80020a2:	e031      	b.n	8002108 <HAL_I2C_MspInit+0xe0>
  else if(hi2c->Instance==I2C2)
 80020a4:	687b      	ldr	r3, [r7, #4]
 80020a6:	681b      	ldr	r3, [r3, #0]
 80020a8:	4a1c      	ldr	r2, [pc, #112]	; (800211c <HAL_I2C_MspInit+0xf4>)
 80020aa:	4293      	cmp	r3, r2
 80020ac:	d12c      	bne.n	8002108 <HAL_I2C_MspInit+0xe0>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80020ae:	2300      	movs	r3, #0
 80020b0:	613b      	str	r3, [r7, #16]
 80020b2:	4b18      	ldr	r3, [pc, #96]	; (8002114 <HAL_I2C_MspInit+0xec>)
 80020b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80020b6:	4a17      	ldr	r2, [pc, #92]	; (8002114 <HAL_I2C_MspInit+0xec>)
 80020b8:	f043 0302 	orr.w	r3, r3, #2
 80020bc:	6313      	str	r3, [r2, #48]	; 0x30
 80020be:	4b15      	ldr	r3, [pc, #84]	; (8002114 <HAL_I2C_MspInit+0xec>)
 80020c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80020c2:	f003 0302 	and.w	r3, r3, #2
 80020c6:	613b      	str	r3, [r7, #16]
 80020c8:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 80020ca:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80020ce:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80020d0:	2312      	movs	r3, #18
 80020d2:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 80020d4:	2301      	movs	r3, #1
 80020d6:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80020d8:	2303      	movs	r3, #3
 80020da:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 80020dc:	2304      	movs	r3, #4
 80020de:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80020e0:	f107 031c 	add.w	r3, r7, #28
 80020e4:	4619      	mov	r1, r3
 80020e6:	480c      	ldr	r0, [pc, #48]	; (8002118 <HAL_I2C_MspInit+0xf0>)
 80020e8:	f001 f996 	bl	8003418 <HAL_GPIO_Init>
    __HAL_RCC_I2C2_CLK_ENABLE();
 80020ec:	2300      	movs	r3, #0
 80020ee:	60fb      	str	r3, [r7, #12]
 80020f0:	4b08      	ldr	r3, [pc, #32]	; (8002114 <HAL_I2C_MspInit+0xec>)
 80020f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020f4:	4a07      	ldr	r2, [pc, #28]	; (8002114 <HAL_I2C_MspInit+0xec>)
 80020f6:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80020fa:	6413      	str	r3, [r2, #64]	; 0x40
 80020fc:	4b05      	ldr	r3, [pc, #20]	; (8002114 <HAL_I2C_MspInit+0xec>)
 80020fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002100:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002104:	60fb      	str	r3, [r7, #12]
 8002106:	68fb      	ldr	r3, [r7, #12]
}
 8002108:	bf00      	nop
 800210a:	3730      	adds	r7, #48	; 0x30
 800210c:	46bd      	mov	sp, r7
 800210e:	bd80      	pop	{r7, pc}
 8002110:	40005400 	.word	0x40005400
 8002114:	40023800 	.word	0x40023800
 8002118:	40020400 	.word	0x40020400
 800211c:	40005800 	.word	0x40005800

08002120 <HAL_I2S_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2s: I2S handle pointer
* @retval None
*/
void HAL_I2S_MspInit(I2S_HandleTypeDef* hi2s)
{
 8002120:	b580      	push	{r7, lr}
 8002122:	b096      	sub	sp, #88	; 0x58
 8002124:	af00      	add	r7, sp, #0
 8002126:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002128:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800212c:	2200      	movs	r2, #0
 800212e:	601a      	str	r2, [r3, #0]
 8002130:	605a      	str	r2, [r3, #4]
 8002132:	609a      	str	r2, [r3, #8]
 8002134:	60da      	str	r2, [r3, #12]
 8002136:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002138:	f107 0314 	add.w	r3, r7, #20
 800213c:	2230      	movs	r2, #48	; 0x30
 800213e:	2100      	movs	r1, #0
 8002140:	4618      	mov	r0, r3
 8002142:	f026 fd6f 	bl	8028c24 <memset>
  if(hi2s->Instance==SPI2)
 8002146:	687b      	ldr	r3, [r7, #4]
 8002148:	681b      	ldr	r3, [r3, #0]
 800214a:	4a3a      	ldr	r2, [pc, #232]	; (8002234 <HAL_I2S_MspInit+0x114>)
 800214c:	4293      	cmp	r3, r2
 800214e:	d16d      	bne.n	800222c <HAL_I2S_MspInit+0x10c>

  /* USER CODE END SPI2_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2S;
 8002150:	2301      	movs	r3, #1
 8002152:	617b      	str	r3, [r7, #20]
    PeriphClkInitStruct.PLLI2S.PLLI2SN = 50;
 8002154:	2332      	movs	r3, #50	; 0x32
 8002156:	61bb      	str	r3, [r7, #24]
    PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 8002158:	2302      	movs	r3, #2
 800215a:	61fb      	str	r3, [r7, #28]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800215c:	f107 0314 	add.w	r3, r7, #20
 8002160:	4618      	mov	r0, r3
 8002162:	f004 f927 	bl	80063b4 <HAL_RCCEx_PeriphCLKConfig>
 8002166:	4603      	mov	r3, r0
 8002168:	2b00      	cmp	r3, #0
 800216a:	d001      	beq.n	8002170 <HAL_I2S_MspInit+0x50>
    {
      Error_Handler();
 800216c:	f7ff ff0c 	bl	8001f88 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 8002170:	2300      	movs	r3, #0
 8002172:	613b      	str	r3, [r7, #16]
 8002174:	4b30      	ldr	r3, [pc, #192]	; (8002238 <HAL_I2S_MspInit+0x118>)
 8002176:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002178:	4a2f      	ldr	r2, [pc, #188]	; (8002238 <HAL_I2S_MspInit+0x118>)
 800217a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800217e:	6413      	str	r3, [r2, #64]	; 0x40
 8002180:	4b2d      	ldr	r3, [pc, #180]	; (8002238 <HAL_I2S_MspInit+0x118>)
 8002182:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002184:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002188:	613b      	str	r3, [r7, #16]
 800218a:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 800218c:	2300      	movs	r3, #0
 800218e:	60fb      	str	r3, [r7, #12]
 8002190:	4b29      	ldr	r3, [pc, #164]	; (8002238 <HAL_I2S_MspInit+0x118>)
 8002192:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002194:	4a28      	ldr	r2, [pc, #160]	; (8002238 <HAL_I2S_MspInit+0x118>)
 8002196:	f043 0302 	orr.w	r3, r3, #2
 800219a:	6313      	str	r3, [r2, #48]	; 0x30
 800219c:	4b26      	ldr	r3, [pc, #152]	; (8002238 <HAL_I2S_MspInit+0x118>)
 800219e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021a0:	f003 0302 	and.w	r3, r3, #2
 80021a4:	60fb      	str	r3, [r7, #12]
 80021a6:	68fb      	ldr	r3, [r7, #12]
    /**I2S2 GPIO Configuration
    PB12     ------> I2S2_WS
    PB13     ------> I2S2_CK
    PB15     ------> I2S2_SD
    */
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_15;
 80021a8:	f44f 4330 	mov.w	r3, #45056	; 0xb000
 80021ac:	647b      	str	r3, [r7, #68]	; 0x44
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021ae:	2302      	movs	r3, #2
 80021b0:	64bb      	str	r3, [r7, #72]	; 0x48
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021b2:	2300      	movs	r3, #0
 80021b4:	64fb      	str	r3, [r7, #76]	; 0x4c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80021b6:	2303      	movs	r3, #3
 80021b8:	653b      	str	r3, [r7, #80]	; 0x50
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 80021ba:	2305      	movs	r3, #5
 80021bc:	657b      	str	r3, [r7, #84]	; 0x54
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80021be:	f107 0344 	add.w	r3, r7, #68	; 0x44
 80021c2:	4619      	mov	r1, r3
 80021c4:	481d      	ldr	r0, [pc, #116]	; (800223c <HAL_I2S_MspInit+0x11c>)
 80021c6:	f001 f927 	bl	8003418 <HAL_GPIO_Init>

    /* I2S2 DMA Init */
    /* SPI2_TX Init */
    hdma_spi2_tx.Instance = DMA1_Stream4;
 80021ca:	4b1d      	ldr	r3, [pc, #116]	; (8002240 <HAL_I2S_MspInit+0x120>)
 80021cc:	4a1d      	ldr	r2, [pc, #116]	; (8002244 <HAL_I2S_MspInit+0x124>)
 80021ce:	601a      	str	r2, [r3, #0]
    hdma_spi2_tx.Init.Channel = DMA_CHANNEL_0;
 80021d0:	4b1b      	ldr	r3, [pc, #108]	; (8002240 <HAL_I2S_MspInit+0x120>)
 80021d2:	2200      	movs	r2, #0
 80021d4:	605a      	str	r2, [r3, #4]
    hdma_spi2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80021d6:	4b1a      	ldr	r3, [pc, #104]	; (8002240 <HAL_I2S_MspInit+0x120>)
 80021d8:	2240      	movs	r2, #64	; 0x40
 80021da:	609a      	str	r2, [r3, #8]
    hdma_spi2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80021dc:	4b18      	ldr	r3, [pc, #96]	; (8002240 <HAL_I2S_MspInit+0x120>)
 80021de:	2200      	movs	r2, #0
 80021e0:	60da      	str	r2, [r3, #12]
    hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
 80021e2:	4b17      	ldr	r3, [pc, #92]	; (8002240 <HAL_I2S_MspInit+0x120>)
 80021e4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80021e8:	611a      	str	r2, [r3, #16]
    hdma_spi2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80021ea:	4b15      	ldr	r3, [pc, #84]	; (8002240 <HAL_I2S_MspInit+0x120>)
 80021ec:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80021f0:	615a      	str	r2, [r3, #20]
    hdma_spi2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 80021f2:	4b13      	ldr	r3, [pc, #76]	; (8002240 <HAL_I2S_MspInit+0x120>)
 80021f4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80021f8:	619a      	str	r2, [r3, #24]
    hdma_spi2_tx.Init.Mode = DMA_CIRCULAR;
 80021fa:	4b11      	ldr	r3, [pc, #68]	; (8002240 <HAL_I2S_MspInit+0x120>)
 80021fc:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002200:	61da      	str	r2, [r3, #28]
    hdma_spi2_tx.Init.Priority = DMA_PRIORITY_HIGH;
 8002202:	4b0f      	ldr	r3, [pc, #60]	; (8002240 <HAL_I2S_MspInit+0x120>)
 8002204:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8002208:	621a      	str	r2, [r3, #32]
    hdma_spi2_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 800220a:	4b0d      	ldr	r3, [pc, #52]	; (8002240 <HAL_I2S_MspInit+0x120>)
 800220c:	2200      	movs	r2, #0
 800220e:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
 8002210:	480b      	ldr	r0, [pc, #44]	; (8002240 <HAL_I2S_MspInit+0x120>)
 8002212:	f000 fd21 	bl	8002c58 <HAL_DMA_Init>
 8002216:	4603      	mov	r3, r0
 8002218:	2b00      	cmp	r3, #0
 800221a:	d001      	beq.n	8002220 <HAL_I2S_MspInit+0x100>
    {
      Error_Handler();
 800221c:	f7ff feb4 	bl	8001f88 <Error_Handler>
    }

    __HAL_LINKDMA(hi2s,hdmatx,hdma_spi2_tx);
 8002220:	687b      	ldr	r3, [r7, #4]
 8002222:	4a07      	ldr	r2, [pc, #28]	; (8002240 <HAL_I2S_MspInit+0x120>)
 8002224:	639a      	str	r2, [r3, #56]	; 0x38
 8002226:	4a06      	ldr	r2, [pc, #24]	; (8002240 <HAL_I2S_MspInit+0x120>)
 8002228:	687b      	ldr	r3, [r7, #4]
 800222a:	6393      	str	r3, [r2, #56]	; 0x38
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }

}
 800222c:	bf00      	nop
 800222e:	3758      	adds	r7, #88	; 0x58
 8002230:	46bd      	mov	sp, r7
 8002232:	bd80      	pop	{r7, pc}
 8002234:	40003800 	.word	0x40003800
 8002238:	40023800 	.word	0x40023800
 800223c:	40020400 	.word	0x40020400
 8002240:	200003ac 	.word	0x200003ac
 8002244:	40026070 	.word	0x40026070

08002248 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002248:	b580      	push	{r7, lr}
 800224a:	b08a      	sub	sp, #40	; 0x28
 800224c:	af00      	add	r7, sp, #0
 800224e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002250:	f107 0314 	add.w	r3, r7, #20
 8002254:	2200      	movs	r2, #0
 8002256:	601a      	str	r2, [r3, #0]
 8002258:	605a      	str	r2, [r3, #4]
 800225a:	609a      	str	r2, [r3, #8]
 800225c:	60da      	str	r2, [r3, #12]
 800225e:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI1)
 8002260:	687b      	ldr	r3, [r7, #4]
 8002262:	681b      	ldr	r3, [r3, #0]
 8002264:	4a19      	ldr	r2, [pc, #100]	; (80022cc <HAL_SPI_MspInit+0x84>)
 8002266:	4293      	cmp	r3, r2
 8002268:	d12b      	bne.n	80022c2 <HAL_SPI_MspInit+0x7a>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 800226a:	2300      	movs	r3, #0
 800226c:	613b      	str	r3, [r7, #16]
 800226e:	4b18      	ldr	r3, [pc, #96]	; (80022d0 <HAL_SPI_MspInit+0x88>)
 8002270:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002272:	4a17      	ldr	r2, [pc, #92]	; (80022d0 <HAL_SPI_MspInit+0x88>)
 8002274:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002278:	6453      	str	r3, [r2, #68]	; 0x44
 800227a:	4b15      	ldr	r3, [pc, #84]	; (80022d0 <HAL_SPI_MspInit+0x88>)
 800227c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800227e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002282:	613b      	str	r3, [r7, #16]
 8002284:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002286:	2300      	movs	r3, #0
 8002288:	60fb      	str	r3, [r7, #12]
 800228a:	4b11      	ldr	r3, [pc, #68]	; (80022d0 <HAL_SPI_MspInit+0x88>)
 800228c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800228e:	4a10      	ldr	r2, [pc, #64]	; (80022d0 <HAL_SPI_MspInit+0x88>)
 8002290:	f043 0301 	orr.w	r3, r3, #1
 8002294:	6313      	str	r3, [r2, #48]	; 0x30
 8002296:	4b0e      	ldr	r3, [pc, #56]	; (80022d0 <HAL_SPI_MspInit+0x88>)
 8002298:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800229a:	f003 0301 	and.w	r3, r3, #1
 800229e:	60fb      	str	r3, [r7, #12]
 80022a0:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 80022a2:	23e0      	movs	r3, #224	; 0xe0
 80022a4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022a6:	2302      	movs	r3, #2
 80022a8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022aa:	2300      	movs	r3, #0
 80022ac:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022ae:	2303      	movs	r3, #3
 80022b0:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80022b2:	2305      	movs	r3, #5
 80022b4:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022b6:	f107 0314 	add.w	r3, r7, #20
 80022ba:	4619      	mov	r1, r3
 80022bc:	4805      	ldr	r0, [pc, #20]	; (80022d4 <HAL_SPI_MspInit+0x8c>)
 80022be:	f001 f8ab 	bl	8003418 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }

}
 80022c2:	bf00      	nop
 80022c4:	3728      	adds	r7, #40	; 0x28
 80022c6:	46bd      	mov	sp, r7
 80022c8:	bd80      	pop	{r7, pc}
 80022ca:	bf00      	nop
 80022cc:	40013000 	.word	0x40013000
 80022d0:	40023800 	.word	0x40023800
 80022d4:	40020000 	.word	0x40020000

080022d8 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80022d8:	b580      	push	{r7, lr}
 80022da:	b084      	sub	sp, #16
 80022dc:	af00      	add	r7, sp, #0
 80022de:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 80022e0:	687b      	ldr	r3, [r7, #4]
 80022e2:	681b      	ldr	r3, [r3, #0]
 80022e4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80022e8:	d115      	bne.n	8002316 <HAL_TIM_Base_MspInit+0x3e>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 80022ea:	2300      	movs	r3, #0
 80022ec:	60fb      	str	r3, [r7, #12]
 80022ee:	4b0c      	ldr	r3, [pc, #48]	; (8002320 <HAL_TIM_Base_MspInit+0x48>)
 80022f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022f2:	4a0b      	ldr	r2, [pc, #44]	; (8002320 <HAL_TIM_Base_MspInit+0x48>)
 80022f4:	f043 0301 	orr.w	r3, r3, #1
 80022f8:	6413      	str	r3, [r2, #64]	; 0x40
 80022fa:	4b09      	ldr	r3, [pc, #36]	; (8002320 <HAL_TIM_Base_MspInit+0x48>)
 80022fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022fe:	f003 0301 	and.w	r3, r3, #1
 8002302:	60fb      	str	r3, [r7, #12]
 8002304:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8002306:	2200      	movs	r2, #0
 8002308:	2100      	movs	r1, #0
 800230a:	201c      	movs	r0, #28
 800230c:	f000 fc50 	bl	8002bb0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002310:	201c      	movs	r0, #28
 8002312:	f000 fc69 	bl	8002be8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 8002316:	bf00      	nop
 8002318:	3710      	adds	r7, #16
 800231a:	46bd      	mov	sp, r7
 800231c:	bd80      	pop	{r7, pc}
 800231e:	bf00      	nop
 8002320:	40023800 	.word	0x40023800

08002324 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002324:	b580      	push	{r7, lr}
 8002326:	b08c      	sub	sp, #48	; 0x30
 8002328:	af00      	add	r7, sp, #0
 800232a:	6078      	str	r0, [r7, #4]
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0U;
 800232c:	2300      	movs	r3, #0
 800232e:	62bb      	str	r3, [r7, #40]	; 0x28

  uint32_t              uwPrescalerValue = 0U;
 8002330:	2300      	movs	r3, #0
 8002332:	627b      	str	r3, [r7, #36]	; 0x24
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM11 clock */
  __HAL_RCC_TIM11_CLK_ENABLE();
 8002334:	2300      	movs	r3, #0
 8002336:	60bb      	str	r3, [r7, #8]
 8002338:	4b2f      	ldr	r3, [pc, #188]	; (80023f8 <HAL_InitTick+0xd4>)
 800233a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800233c:	4a2e      	ldr	r2, [pc, #184]	; (80023f8 <HAL_InitTick+0xd4>)
 800233e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002342:	6453      	str	r3, [r2, #68]	; 0x44
 8002344:	4b2c      	ldr	r3, [pc, #176]	; (80023f8 <HAL_InitTick+0xd4>)
 8002346:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002348:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800234c:	60bb      	str	r3, [r7, #8]
 800234e:	68bb      	ldr	r3, [r7, #8]

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002350:	f107 020c 	add.w	r2, r7, #12
 8002354:	f107 0310 	add.w	r3, r7, #16
 8002358:	4611      	mov	r1, r2
 800235a:	4618      	mov	r0, r3
 800235c:	f003 fff8 	bl	8006350 <HAL_RCC_GetClockConfig>

  /* Compute TIM11 clock */
      uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8002360:	f003 ffe2 	bl	8006328 <HAL_RCC_GetPCLK2Freq>
 8002364:	4603      	mov	r3, r0
 8002366:	005b      	lsls	r3, r3, #1
 8002368:	62bb      	str	r3, [r7, #40]	; 0x28

  /* Compute the prescaler value to have TIM11 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800236a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800236c:	4a23      	ldr	r2, [pc, #140]	; (80023fc <HAL_InitTick+0xd8>)
 800236e:	fba2 2303 	umull	r2, r3, r2, r3
 8002372:	0c9b      	lsrs	r3, r3, #18
 8002374:	3b01      	subs	r3, #1
 8002376:	627b      	str	r3, [r7, #36]	; 0x24

  /* Initialize TIM11 */
  htim11.Instance = TIM11;
 8002378:	4b21      	ldr	r3, [pc, #132]	; (8002400 <HAL_InitTick+0xdc>)
 800237a:	4a22      	ldr	r2, [pc, #136]	; (8002404 <HAL_InitTick+0xe0>)
 800237c:	601a      	str	r2, [r3, #0]
  + Period = [(TIM11CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim11.Init.Period = (1000000U / 1000U) - 1U;
 800237e:	4b20      	ldr	r3, [pc, #128]	; (8002400 <HAL_InitTick+0xdc>)
 8002380:	f240 32e7 	movw	r2, #999	; 0x3e7
 8002384:	60da      	str	r2, [r3, #12]
  htim11.Init.Prescaler = uwPrescalerValue;
 8002386:	4a1e      	ldr	r2, [pc, #120]	; (8002400 <HAL_InitTick+0xdc>)
 8002388:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800238a:	6053      	str	r3, [r2, #4]
  htim11.Init.ClockDivision = 0;
 800238c:	4b1c      	ldr	r3, [pc, #112]	; (8002400 <HAL_InitTick+0xdc>)
 800238e:	2200      	movs	r2, #0
 8002390:	611a      	str	r2, [r3, #16]
  htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002392:	4b1b      	ldr	r3, [pc, #108]	; (8002400 <HAL_InitTick+0xdc>)
 8002394:	2200      	movs	r2, #0
 8002396:	609a      	str	r2, [r3, #8]
  htim11.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002398:	4b19      	ldr	r3, [pc, #100]	; (8002400 <HAL_InitTick+0xdc>)
 800239a:	2200      	movs	r2, #0
 800239c:	619a      	str	r2, [r3, #24]

  status = HAL_TIM_Base_Init(&htim11);
 800239e:	4818      	ldr	r0, [pc, #96]	; (8002400 <HAL_InitTick+0xdc>)
 80023a0:	f004 fe58 	bl	8007054 <HAL_TIM_Base_Init>
 80023a4:	4603      	mov	r3, r0
 80023a6:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
  if (status == HAL_OK)
 80023aa:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80023ae:	2b00      	cmp	r3, #0
 80023b0:	d11b      	bne.n	80023ea <HAL_InitTick+0xc6>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim11);
 80023b2:	4813      	ldr	r0, [pc, #76]	; (8002400 <HAL_InitTick+0xdc>)
 80023b4:	f004 fe9e 	bl	80070f4 <HAL_TIM_Base_Start_IT>
 80023b8:	4603      	mov	r3, r0
 80023ba:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    if (status == HAL_OK)
 80023be:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80023c2:	2b00      	cmp	r3, #0
 80023c4:	d111      	bne.n	80023ea <HAL_InitTick+0xc6>
    {
    /* Enable the TIM11 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM11_IRQn);
 80023c6:	201a      	movs	r0, #26
 80023c8:	f000 fc0e 	bl	8002be8 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80023cc:	687b      	ldr	r3, [r7, #4]
 80023ce:	2b0f      	cmp	r3, #15
 80023d0:	d808      	bhi.n	80023e4 <HAL_InitTick+0xc0>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM1_TRG_COM_TIM11_IRQn, TickPriority, 0U);
 80023d2:	2200      	movs	r2, #0
 80023d4:	6879      	ldr	r1, [r7, #4]
 80023d6:	201a      	movs	r0, #26
 80023d8:	f000 fbea 	bl	8002bb0 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80023dc:	4a0a      	ldr	r2, [pc, #40]	; (8002408 <HAL_InitTick+0xe4>)
 80023de:	687b      	ldr	r3, [r7, #4]
 80023e0:	6013      	str	r3, [r2, #0]
 80023e2:	e002      	b.n	80023ea <HAL_InitTick+0xc6>
      }
      else
      {
        status = HAL_ERROR;
 80023e4:	2301      	movs	r3, #1
 80023e6:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
      }
    }
  }

 /* Return function status */
  return status;
 80023ea:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
}
 80023ee:	4618      	mov	r0, r3
 80023f0:	3730      	adds	r7, #48	; 0x30
 80023f2:	46bd      	mov	sp, r7
 80023f4:	bd80      	pop	{r7, pc}
 80023f6:	bf00      	nop
 80023f8:	40023800 	.word	0x40023800
 80023fc:	431bde83 	.word	0x431bde83
 8002400:	200004c4 	.word	0x200004c4
 8002404:	40014800 	.word	0x40014800
 8002408:	20000034 	.word	0x20000034

0800240c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800240c:	b480      	push	{r7}
 800240e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002410:	e7fe      	b.n	8002410 <NMI_Handler+0x4>

08002412 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002412:	b480      	push	{r7}
 8002414:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002416:	e7fe      	b.n	8002416 <HardFault_Handler+0x4>

08002418 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002418:	b480      	push	{r7}
 800241a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800241c:	e7fe      	b.n	800241c <MemManage_Handler+0x4>

0800241e <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800241e:	b480      	push	{r7}
 8002420:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002422:	e7fe      	b.n	8002422 <BusFault_Handler+0x4>

08002424 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002424:	b480      	push	{r7}
 8002426:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002428:	e7fe      	b.n	8002428 <UsageFault_Handler+0x4>

0800242a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800242a:	b480      	push	{r7}
 800242c:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800242e:	bf00      	nop
 8002430:	46bd      	mov	sp, r7
 8002432:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002436:	4770      	bx	lr

08002438 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002438:	b480      	push	{r7}
 800243a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800243c:	bf00      	nop
 800243e:	46bd      	mov	sp, r7
 8002440:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002444:	4770      	bx	lr

08002446 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002446:	b480      	push	{r7}
 8002448:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800244a:	bf00      	nop
 800244c:	46bd      	mov	sp, r7
 800244e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002452:	4770      	bx	lr

08002454 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002454:	b580      	push	{r7, lr}
 8002456:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

	if(Timer1 > 0)
 8002458:	4b0c      	ldr	r3, [pc, #48]	; (800248c <SysTick_Handler+0x38>)
 800245a:	881b      	ldrh	r3, [r3, #0]
 800245c:	2b00      	cmp	r3, #0
 800245e:	d005      	beq.n	800246c <SysTick_Handler+0x18>
		Timer1--;
 8002460:	4b0a      	ldr	r3, [pc, #40]	; (800248c <SysTick_Handler+0x38>)
 8002462:	881b      	ldrh	r3, [r3, #0]
 8002464:	3b01      	subs	r3, #1
 8002466:	b29a      	uxth	r2, r3
 8002468:	4b08      	ldr	r3, [pc, #32]	; (800248c <SysTick_Handler+0x38>)
 800246a:	801a      	strh	r2, [r3, #0]

	if(Timer2 > 0)
 800246c:	4b08      	ldr	r3, [pc, #32]	; (8002490 <SysTick_Handler+0x3c>)
 800246e:	881b      	ldrh	r3, [r3, #0]
 8002470:	2b00      	cmp	r3, #0
 8002472:	d005      	beq.n	8002480 <SysTick_Handler+0x2c>
		Timer2--;
 8002474:	4b06      	ldr	r3, [pc, #24]	; (8002490 <SysTick_Handler+0x3c>)
 8002476:	881b      	ldrh	r3, [r3, #0]
 8002478:	3b01      	subs	r3, #1
 800247a:	b29a      	uxth	r2, r3
 800247c:	4b04      	ldr	r3, [pc, #16]	; (8002490 <SysTick_Handler+0x3c>)
 800247e:	801a      	strh	r2, [r3, #0]

	HAL_IncTick();
 8002480:	f000 fa9a 	bl	80029b8 <HAL_IncTick>
  /* USER CODE END SysTick_IRQn 0 */

  /* USER CODE BEGIN SysTick_IRQn 1 */
	HAL_SYSTICK_IRQHandler();
 8002484:	f000 fbbe 	bl	8002c04 <HAL_SYSTICK_IRQHandler>
  /* USER CODE END SysTick_IRQn 1 */
}
 8002488:	bf00      	nop
 800248a:	bd80      	pop	{r7, pc}
 800248c:	2000015c 	.word	0x2000015c
 8002490:	2000015e 	.word	0x2000015e

08002494 <DMA1_Stream4_IRQHandler>:

/**
  * @brief This function handles DMA1 stream4 global interrupt.
  */
void DMA1_Stream4_IRQHandler(void)
{
 8002494:	b580      	push	{r7, lr}
 8002496:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */

  /* USER CODE END DMA1_Stream4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi2_tx);
 8002498:	4802      	ldr	r0, [pc, #8]	; (80024a4 <DMA1_Stream4_IRQHandler+0x10>)
 800249a:	f000 fd53 	bl	8002f44 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */

  /* USER CODE END DMA1_Stream4_IRQn 1 */
}
 800249e:	bf00      	nop
 80024a0:	bd80      	pop	{r7, pc}
 80024a2:	bf00      	nop
 80024a4:	200003ac 	.word	0x200003ac

080024a8 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 80024a8:	b580      	push	{r7, lr}
 80024aa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(PLAY_BUTTON_Pin);
 80024ac:	f44f 7000 	mov.w	r0, #512	; 0x200
 80024b0:	f001 f978 	bl	80037a4 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 80024b4:	bf00      	nop
 80024b6:	bd80      	pop	{r7, pc}

080024b8 <TIM1_TRG_COM_TIM11_IRQHandler>:

/**
  * @brief This function handles TIM1 trigger and commutation interrupts and TIM11 global interrupt.
  */
void TIM1_TRG_COM_TIM11_IRQHandler(void)
{
 80024b8:	b580      	push	{r7, lr}
 80024ba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_TRG_COM_TIM11_IRQn 0 */

  /* USER CODE END TIM1_TRG_COM_TIM11_IRQn 0 */
  HAL_TIM_IRQHandler(&htim11);
 80024bc:	4802      	ldr	r0, [pc, #8]	; (80024c8 <TIM1_TRG_COM_TIM11_IRQHandler+0x10>)
 80024be:	f004 fe89 	bl	80071d4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_TRG_COM_TIM11_IRQn 1 */

  /* USER CODE END TIM1_TRG_COM_TIM11_IRQn 1 */
}
 80024c2:	bf00      	nop
 80024c4:	bd80      	pop	{r7, pc}
 80024c6:	bf00      	nop
 80024c8:	200004c4 	.word	0x200004c4

080024cc <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 80024cc:	b580      	push	{r7, lr}
 80024ce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 80024d0:	4802      	ldr	r0, [pc, #8]	; (80024dc <TIM2_IRQHandler+0x10>)
 80024d2:	f004 fe7f 	bl	80071d4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 80024d6:	bf00      	nop
 80024d8:	bd80      	pop	{r7, pc}
 80024da:	bf00      	nop
 80024dc:	20000464 	.word	0x20000464

080024e0 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 80024e0:	b580      	push	{r7, lr}
 80024e2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(PAUSE_BUTTON_Pin);
 80024e4:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80024e8:	f001 f95c 	bl	80037a4 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(SKIPF_BUTTON_Pin);
 80024ec:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80024f0:	f001 f958 	bl	80037a4 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(VOL_UP_BUTTON_Pin);
 80024f4:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 80024f8:	f001 f954 	bl	80037a4 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 80024fc:	bf00      	nop
 80024fe:	bd80      	pop	{r7, pc}

08002500 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002500:	b480      	push	{r7}
 8002502:	af00      	add	r7, sp, #0
  return 1;
 8002504:	2301      	movs	r3, #1
}
 8002506:	4618      	mov	r0, r3
 8002508:	46bd      	mov	sp, r7
 800250a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800250e:	4770      	bx	lr

08002510 <_kill>:

int _kill(int pid, int sig)
{
 8002510:	b580      	push	{r7, lr}
 8002512:	b082      	sub	sp, #8
 8002514:	af00      	add	r7, sp, #0
 8002516:	6078      	str	r0, [r7, #4]
 8002518:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800251a:	f026 fbdf 	bl	8028cdc <__errno>
 800251e:	4603      	mov	r3, r0
 8002520:	2216      	movs	r2, #22
 8002522:	601a      	str	r2, [r3, #0]
  return -1;
 8002524:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8002528:	4618      	mov	r0, r3
 800252a:	3708      	adds	r7, #8
 800252c:	46bd      	mov	sp, r7
 800252e:	bd80      	pop	{r7, pc}

08002530 <_exit>:

void _exit (int status)
{
 8002530:	b580      	push	{r7, lr}
 8002532:	b082      	sub	sp, #8
 8002534:	af00      	add	r7, sp, #0
 8002536:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002538:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800253c:	6878      	ldr	r0, [r7, #4]
 800253e:	f7ff ffe7 	bl	8002510 <_kill>
  while (1) {}    /* Make sure we hang here */
 8002542:	e7fe      	b.n	8002542 <_exit+0x12>

08002544 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002544:	b580      	push	{r7, lr}
 8002546:	b086      	sub	sp, #24
 8002548:	af00      	add	r7, sp, #0
 800254a:	60f8      	str	r0, [r7, #12]
 800254c:	60b9      	str	r1, [r7, #8]
 800254e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002550:	2300      	movs	r3, #0
 8002552:	617b      	str	r3, [r7, #20]
 8002554:	e00a      	b.n	800256c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8002556:	f3af 8000 	nop.w
 800255a:	4601      	mov	r1, r0
 800255c:	68bb      	ldr	r3, [r7, #8]
 800255e:	1c5a      	adds	r2, r3, #1
 8002560:	60ba      	str	r2, [r7, #8]
 8002562:	b2ca      	uxtb	r2, r1
 8002564:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002566:	697b      	ldr	r3, [r7, #20]
 8002568:	3301      	adds	r3, #1
 800256a:	617b      	str	r3, [r7, #20]
 800256c:	697a      	ldr	r2, [r7, #20]
 800256e:	687b      	ldr	r3, [r7, #4]
 8002570:	429a      	cmp	r2, r3
 8002572:	dbf0      	blt.n	8002556 <_read+0x12>
  }

  return len;
 8002574:	687b      	ldr	r3, [r7, #4]
}
 8002576:	4618      	mov	r0, r3
 8002578:	3718      	adds	r7, #24
 800257a:	46bd      	mov	sp, r7
 800257c:	bd80      	pop	{r7, pc}

0800257e <_close>:
  }
  return len;
}

int _close(int file)
{
 800257e:	b480      	push	{r7}
 8002580:	b083      	sub	sp, #12
 8002582:	af00      	add	r7, sp, #0
 8002584:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8002586:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800258a:	4618      	mov	r0, r3
 800258c:	370c      	adds	r7, #12
 800258e:	46bd      	mov	sp, r7
 8002590:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002594:	4770      	bx	lr

08002596 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002596:	b480      	push	{r7}
 8002598:	b083      	sub	sp, #12
 800259a:	af00      	add	r7, sp, #0
 800259c:	6078      	str	r0, [r7, #4]
 800259e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80025a0:	683b      	ldr	r3, [r7, #0]
 80025a2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80025a6:	605a      	str	r2, [r3, #4]
  return 0;
 80025a8:	2300      	movs	r3, #0
}
 80025aa:	4618      	mov	r0, r3
 80025ac:	370c      	adds	r7, #12
 80025ae:	46bd      	mov	sp, r7
 80025b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025b4:	4770      	bx	lr

080025b6 <_isatty>:

int _isatty(int file)
{
 80025b6:	b480      	push	{r7}
 80025b8:	b083      	sub	sp, #12
 80025ba:	af00      	add	r7, sp, #0
 80025bc:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80025be:	2301      	movs	r3, #1
}
 80025c0:	4618      	mov	r0, r3
 80025c2:	370c      	adds	r7, #12
 80025c4:	46bd      	mov	sp, r7
 80025c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025ca:	4770      	bx	lr

080025cc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80025cc:	b480      	push	{r7}
 80025ce:	b085      	sub	sp, #20
 80025d0:	af00      	add	r7, sp, #0
 80025d2:	60f8      	str	r0, [r7, #12]
 80025d4:	60b9      	str	r1, [r7, #8]
 80025d6:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80025d8:	2300      	movs	r3, #0
}
 80025da:	4618      	mov	r0, r3
 80025dc:	3714      	adds	r7, #20
 80025de:	46bd      	mov	sp, r7
 80025e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025e4:	4770      	bx	lr
	...

080025e8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80025e8:	b580      	push	{r7, lr}
 80025ea:	b086      	sub	sp, #24
 80025ec:	af00      	add	r7, sp, #0
 80025ee:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80025f0:	4a14      	ldr	r2, [pc, #80]	; (8002644 <_sbrk+0x5c>)
 80025f2:	4b15      	ldr	r3, [pc, #84]	; (8002648 <_sbrk+0x60>)
 80025f4:	1ad3      	subs	r3, r2, r3
 80025f6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80025f8:	697b      	ldr	r3, [r7, #20]
 80025fa:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80025fc:	4b13      	ldr	r3, [pc, #76]	; (800264c <_sbrk+0x64>)
 80025fe:	681b      	ldr	r3, [r3, #0]
 8002600:	2b00      	cmp	r3, #0
 8002602:	d102      	bne.n	800260a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002604:	4b11      	ldr	r3, [pc, #68]	; (800264c <_sbrk+0x64>)
 8002606:	4a12      	ldr	r2, [pc, #72]	; (8002650 <_sbrk+0x68>)
 8002608:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800260a:	4b10      	ldr	r3, [pc, #64]	; (800264c <_sbrk+0x64>)
 800260c:	681a      	ldr	r2, [r3, #0]
 800260e:	687b      	ldr	r3, [r7, #4]
 8002610:	4413      	add	r3, r2
 8002612:	693a      	ldr	r2, [r7, #16]
 8002614:	429a      	cmp	r2, r3
 8002616:	d207      	bcs.n	8002628 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002618:	f026 fb60 	bl	8028cdc <__errno>
 800261c:	4603      	mov	r3, r0
 800261e:	220c      	movs	r2, #12
 8002620:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002622:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002626:	e009      	b.n	800263c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002628:	4b08      	ldr	r3, [pc, #32]	; (800264c <_sbrk+0x64>)
 800262a:	681b      	ldr	r3, [r3, #0]
 800262c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800262e:	4b07      	ldr	r3, [pc, #28]	; (800264c <_sbrk+0x64>)
 8002630:	681a      	ldr	r2, [r3, #0]
 8002632:	687b      	ldr	r3, [r7, #4]
 8002634:	4413      	add	r3, r2
 8002636:	4a05      	ldr	r2, [pc, #20]	; (800264c <_sbrk+0x64>)
 8002638:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800263a:	68fb      	ldr	r3, [r7, #12]
}
 800263c:	4618      	mov	r0, r3
 800263e:	3718      	adds	r7, #24
 8002640:	46bd      	mov	sp, r7
 8002642:	bd80      	pop	{r7, pc}
 8002644:	20030000 	.word	0x20030000
 8002648:	00004000 	.word	0x00004000
 800264c:	2000050c 	.word	0x2000050c
 8002650:	2000edf8 	.word	0x2000edf8

08002654 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002654:	b480      	push	{r7}
 8002656:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002658:	4b06      	ldr	r3, [pc, #24]	; (8002674 <SystemInit+0x20>)
 800265a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800265e:	4a05      	ldr	r2, [pc, #20]	; (8002674 <SystemInit+0x20>)
 8002660:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002664:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002668:	bf00      	nop
 800266a:	46bd      	mov	sp, r7
 800266c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002670:	4770      	bx	lr
 8002672:	bf00      	nop
 8002674:	e000ed00 	.word	0xe000ed00

08002678 <player_reset>:
HAL_StatusTypeDef status;

static volatile PlayerControlTypeDef player_control_sm = PLAYER_CONTROL_IDLE;

void player_reset(void)
{
 8002678:	b480      	push	{r7}
 800267a:	af00      	add	r7, sp, #0
	bytes_remaining = 0;
 800267c:	4b05      	ldr	r3, [pc, #20]	; (8002694 <player_reset+0x1c>)
 800267e:	2200      	movs	r2, #0
 8002680:	601a      	str	r2, [r3, #0]
	bytes_read = 0;
 8002682:	4b05      	ldr	r3, [pc, #20]	; (8002698 <player_reset+0x20>)
 8002684:	2200      	movs	r2, #0
 8002686:	601a      	str	r2, [r3, #0]
}
 8002688:	bf00      	nop
 800268a:	46bd      	mov	sp, r7
 800268c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002690:	4770      	bx	lr
 8002692:	bf00      	nop
 8002694:	2000af50 	.word	0x2000af50
 8002698:	2000af54 	.word	0x2000af54

0800269c <mount_sd>:

void mount_sd(void)
{
 800269c:	b580      	push	{r7, lr}
 800269e:	af00      	add	r7, sp, #0
	if (f_mount(&fs, "", 0) != FR_OK)
 80026a0:	2200      	movs	r2, #0
 80026a2:	4906      	ldr	r1, [pc, #24]	; (80026bc <mount_sd+0x20>)
 80026a4:	4806      	ldr	r0, [pc, #24]	; (80026c0 <mount_sd+0x24>)
 80026a6:	f007 fd8b 	bl	800a1c0 <f_mount>
 80026aa:	4603      	mov	r3, r0
 80026ac:	2b00      	cmp	r3, #0
 80026ae:	d002      	beq.n	80026b6 <mount_sd+0x1a>
	{
		printf("SD card mounting error!\r\n");
 80026b0:	4804      	ldr	r0, [pc, #16]	; (80026c4 <mount_sd+0x28>)
 80026b2:	f026 fa77 	bl	8028ba4 <puts>
	}
}
 80026b6:	bf00      	nop
 80026b8:	bd80      	pop	{r7, pc}
 80026ba:	bf00      	nop
 80026bc:	08029fdc 	.word	0x08029fdc
 80026c0:	20000510 	.word	0x20000510
 80026c4:	08029fe0 	.word	0x08029fe0

080026c8 <player_song_select>:

void player_song_select(Song* song)
{
 80026c8:	b580      	push	{r7, lr}
 80026ca:	b09c      	sub	sp, #112	; 0x70
 80026cc:	af00      	add	r7, sp, #0
 80026ce:	6078      	str	r0, [r7, #4]
	WavHeaderTypeDef wav_header;
	uint32_t extracted_data;
    uint8_t* data_ptr = NULL;
 80026d0:	2300      	movs	r3, #0
 80026d2:	66fb      	str	r3, [r7, #108]	; 0x6c
    static char path[50];
    strcpy(path, song->path);
 80026d4:	687b      	ldr	r3, [r7, #4]
 80026d6:	4619      	mov	r1, r3
 80026d8:	4818      	ldr	r0, [pc, #96]	; (800273c <player_song_select+0x74>)
 80026da:	f026 fb47 	bl	8028d6c <strcpy>
    printf("Path: %s\r\n", path);
 80026de:	4917      	ldr	r1, [pc, #92]	; (800273c <player_song_select+0x74>)
 80026e0:	4817      	ldr	r0, [pc, #92]	; (8002740 <player_song_select+0x78>)
 80026e2:	f026 f9f9 	bl	8028ad8 <iprintf>

//	assert(f_open(&wavfile, (const TCHAR*) song->path, FA_OPEN_EXISTING | FA_READ) == FR_OK && "Error opening file!\r\n");
//	assert(f_read(&wavfile, wav_header.wav_header_buf, 44, &bytes_read) == FR_OK && "Error reading wav header!\r\n");
    fres = f_open(&wavfile, (const TCHAR*) path, FA_READ);
 80026e6:	2201      	movs	r2, #1
 80026e8:	4914      	ldr	r1, [pc, #80]	; (800273c <player_song_select+0x74>)
 80026ea:	4816      	ldr	r0, [pc, #88]	; (8002744 <player_song_select+0x7c>)
 80026ec:	f007 fdae 	bl	800a24c <f_open>
 80026f0:	4603      	mov	r3, r0
 80026f2:	461a      	mov	r2, r3
 80026f4:	4b14      	ldr	r3, [pc, #80]	; (8002748 <player_song_select+0x80>)
 80026f6:	701a      	strb	r2, [r3, #0]
//    if (f_open(&wavfile, (const TCHAR*) path, FA_READ) != FR_OK) return;
    fres = f_read(&wavfile, wav_header.wav_header_buf, 44, &bytes_read);
 80026f8:	f107 010c 	add.w	r1, r7, #12
 80026fc:	4b13      	ldr	r3, [pc, #76]	; (800274c <player_song_select+0x84>)
 80026fe:	222c      	movs	r2, #44	; 0x2c
 8002700:	4810      	ldr	r0, [pc, #64]	; (8002744 <player_song_select+0x7c>)
 8002702:	f007 ff6f 	bl	800a5e4 <f_read>
 8002706:	4603      	mov	r3, r0
 8002708:	461a      	mov	r2, r3
 800270a:	4b0f      	ldr	r3, [pc, #60]	; (8002748 <player_song_select+0x80>)
 800270c:	701a      	strb	r2, [r3, #0]
//    if (f_read(&wavfile, wav_header.wav_header_buf, 44, &bytes_read) != FR_OK) return;

	data_ptr = &wav_header.wav_header_buf[4];
 800270e:	f107 030c 	add.w	r3, r7, #12
 8002712:	3304      	adds	r3, #4
 8002714:	66fb      	str	r3, [r7, #108]	; 0x6c
 8002716:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002718:	681b      	ldr	r3, [r3, #0]
	memcpy(&extracted_data, data_ptr, sizeof(uint32_t));
 800271a:	60bb      	str	r3, [r7, #8]

	wav_header.file_size = extracted_data;
 800271c:	68bb      	ldr	r3, [r7, #8]
 800271e:	647b      	str	r3, [r7, #68]	; 0x44
	file_length = wav_header.file_size;
 8002720:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002722:	4a0b      	ldr	r2, [pc, #44]	; (8002750 <player_song_select+0x88>)
 8002724:	6013      	str	r3, [r2, #0]
	bytes_remaining = file_length - bytes_read;
 8002726:	4b0a      	ldr	r3, [pc, #40]	; (8002750 <player_song_select+0x88>)
 8002728:	681a      	ldr	r2, [r3, #0]
 800272a:	4b08      	ldr	r3, [pc, #32]	; (800274c <player_song_select+0x84>)
 800272c:	681b      	ldr	r3, [r3, #0]
 800272e:	1ad3      	subs	r3, r2, r3
 8002730:	4a08      	ldr	r2, [pc, #32]	; (8002754 <player_song_select+0x8c>)
 8002732:	6013      	str	r3, [r2, #0]
}
 8002734:	bf00      	nop
 8002736:	3770      	adds	r7, #112	; 0x70
 8002738:	46bd      	mov	sp, r7
 800273a:	bd80      	pop	{r7, pc}
 800273c:	2000af5c 	.word	0x2000af5c
 8002740:	08029ffc 	.word	0x08029ffc
 8002744:	20001548 	.word	0x20001548
 8002748:	20002578 	.word	0x20002578
 800274c:	2000af54 	.word	0x2000af54
 8002750:	2000257c 	.word	0x2000257c
 8002754:	2000af50 	.word	0x2000af50

08002758 <player_play>:

void player_play(I2S_HandleTypeDef* hi2s)
{
 8002758:	b580      	push	{r7, lr}
 800275a:	b082      	sub	sp, #8
 800275c:	af00      	add	r7, sp, #0
 800275e:	6078      	str	r0, [r7, #4]
	/* fill first half of buffer */
	f_read(&wavfile, &dac_buffer[0], AUDIO_BUFFER_SIZE, &bytes_read);
 8002760:	4b0d      	ldr	r3, [pc, #52]	; (8002798 <player_play+0x40>)
 8002762:	f244 42e8 	movw	r2, #17640	; 0x44e8
 8002766:	490d      	ldr	r1, [pc, #52]	; (800279c <player_play+0x44>)
 8002768:	480d      	ldr	r0, [pc, #52]	; (80027a0 <player_play+0x48>)
 800276a:	f007 ff3b 	bl	800a5e4 <f_read>
	bytes_remaining -= bytes_read;
 800276e:	4b0d      	ldr	r3, [pc, #52]	; (80027a4 <player_play+0x4c>)
 8002770:	681a      	ldr	r2, [r3, #0]
 8002772:	4b09      	ldr	r3, [pc, #36]	; (8002798 <player_play+0x40>)
 8002774:	681b      	ldr	r3, [r3, #0]
 8002776:	1ad3      	subs	r3, r2, r3
 8002778:	4a0a      	ldr	r2, [pc, #40]	; (80027a4 <player_play+0x4c>)
 800277a:	6013      	str	r3, [r2, #0]

	/* Begin circular DMA */
	status = HAL_I2S_Transmit_DMA(hi2s, (uint16_t*) dac_buffer, AUDIO_BUFFER_SIZE/2);
 800277c:	f242 2274 	movw	r2, #8820	; 0x2274
 8002780:	4906      	ldr	r1, [pc, #24]	; (800279c <player_play+0x44>)
 8002782:	6878      	ldr	r0, [r7, #4]
 8002784:	f002 f9a0 	bl	8004ac8 <HAL_I2S_Transmit_DMA>
 8002788:	4603      	mov	r3, r0
 800278a:	461a      	mov	r2, r3
 800278c:	4b06      	ldr	r3, [pc, #24]	; (80027a8 <player_play+0x50>)
 800278e:	701a      	strb	r2, [r3, #0]
}
 8002790:	bf00      	nop
 8002792:	3708      	adds	r7, #8
 8002794:	46bd      	mov	sp, r7
 8002796:	bd80      	pop	{r7, pc}
 8002798:	2000af54 	.word	0x2000af54
 800279c:	20002580 	.word	0x20002580
 80027a0:	20001548 	.word	0x20001548
 80027a4:	2000af50 	.word	0x2000af50
 80027a8:	2000af59 	.word	0x2000af59

080027ac <player_process>:

void player_process(void)
{
 80027ac:	b580      	push	{r7, lr}
 80027ae:	af00      	add	r7, sp, #0
	switch (player_control_sm)
 80027b0:	4b32      	ldr	r3, [pc, #200]	; (800287c <player_process+0xd0>)
 80027b2:	781b      	ldrb	r3, [r3, #0]
 80027b4:	b2db      	uxtb	r3, r3
 80027b6:	2b03      	cmp	r3, #3
 80027b8:	d85e      	bhi.n	8002878 <player_process+0xcc>
 80027ba:	a201      	add	r2, pc, #4	; (adr r2, 80027c0 <player_process+0x14>)
 80027bc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80027c0:	08002877 	.word	0x08002877
 80027c4:	080027d1 	.word	0x080027d1
 80027c8:	08002815 	.word	0x08002815
 80027cc:	08002859 	.word	0x08002859
	{
		case PLAYER_CONTROL_IDLE :
			break;

		case PLAYER_CONTROL_HALFBUFFER :
			bytes_read = 0;
 80027d0:	4b2b      	ldr	r3, [pc, #172]	; (8002880 <player_process+0xd4>)
 80027d2:	2200      	movs	r2, #0
 80027d4:	601a      	str	r2, [r3, #0]
			/* Fill first half of buffer */
			f_read(&wavfile, &dac_buffer[0], AUDIO_BUFFER_SIZE, &bytes_read);
 80027d6:	4b2a      	ldr	r3, [pc, #168]	; (8002880 <player_process+0xd4>)
 80027d8:	f244 42e8 	movw	r2, #17640	; 0x44e8
 80027dc:	4929      	ldr	r1, [pc, #164]	; (8002884 <player_process+0xd8>)
 80027de:	482a      	ldr	r0, [pc, #168]	; (8002888 <player_process+0xdc>)
 80027e0:	f007 ff00 	bl	800a5e4 <f_read>
			if (bytes_remaining > AUDIO_BUFFER_SIZE)
 80027e4:	4b29      	ldr	r3, [pc, #164]	; (800288c <player_process+0xe0>)
 80027e6:	681b      	ldr	r3, [r3, #0]
 80027e8:	f244 42e8 	movw	r2, #17640	; 0x44e8
 80027ec:	4293      	cmp	r3, r2
 80027ee:	d907      	bls.n	8002800 <player_process+0x54>
			{
				bytes_remaining -= bytes_read;
 80027f0:	4b26      	ldr	r3, [pc, #152]	; (800288c <player_process+0xe0>)
 80027f2:	681a      	ldr	r2, [r3, #0]
 80027f4:	4b22      	ldr	r3, [pc, #136]	; (8002880 <player_process+0xd4>)
 80027f6:	681b      	ldr	r3, [r3, #0]
 80027f8:	1ad3      	subs	r3, r2, r3
 80027fa:	4a24      	ldr	r2, [pc, #144]	; (800288c <player_process+0xe0>)
 80027fc:	6013      	str	r3, [r2, #0]
 80027fe:	e005      	b.n	800280c <player_process+0x60>
			}
			else
			{
				bytes_remaining = 0;
 8002800:	4b22      	ldr	r3, [pc, #136]	; (800288c <player_process+0xe0>)
 8002802:	2200      	movs	r2, #0
 8002804:	601a      	str	r2, [r3, #0]
				player_control_sm = PLAYER_CONTROL_EOF;
 8002806:	4b1d      	ldr	r3, [pc, #116]	; (800287c <player_process+0xd0>)
 8002808:	2203      	movs	r2, #3
 800280a:	701a      	strb	r2, [r3, #0]
			}
			player_control_sm = PLAYER_CONTROL_IDLE;
 800280c:	4b1b      	ldr	r3, [pc, #108]	; (800287c <player_process+0xd0>)
 800280e:	2200      	movs	r2, #0
 8002810:	701a      	strb	r2, [r3, #0]

			break;
 8002812:	e031      	b.n	8002878 <player_process+0xcc>

		case PLAYER_CONTROL_FULLBUFFER :
			bytes_read = 0;
 8002814:	4b1a      	ldr	r3, [pc, #104]	; (8002880 <player_process+0xd4>)
 8002816:	2200      	movs	r2, #0
 8002818:	601a      	str	r2, [r3, #0]
			/* Fill second half of buffer */
			f_read(&wavfile, &dac_buffer[AUDIO_BUFFER_SIZE/2], AUDIO_BUFFER_SIZE, &bytes_read);
 800281a:	4b19      	ldr	r3, [pc, #100]	; (8002880 <player_process+0xd4>)
 800281c:	f244 42e8 	movw	r2, #17640	; 0x44e8
 8002820:	491b      	ldr	r1, [pc, #108]	; (8002890 <player_process+0xe4>)
 8002822:	4819      	ldr	r0, [pc, #100]	; (8002888 <player_process+0xdc>)
 8002824:	f007 fede 	bl	800a5e4 <f_read>
			if (bytes_remaining > AUDIO_BUFFER_SIZE)
 8002828:	4b18      	ldr	r3, [pc, #96]	; (800288c <player_process+0xe0>)
 800282a:	681b      	ldr	r3, [r3, #0]
 800282c:	f244 42e8 	movw	r2, #17640	; 0x44e8
 8002830:	4293      	cmp	r3, r2
 8002832:	d907      	bls.n	8002844 <player_process+0x98>
			{
				bytes_remaining -= bytes_read;
 8002834:	4b15      	ldr	r3, [pc, #84]	; (800288c <player_process+0xe0>)
 8002836:	681a      	ldr	r2, [r3, #0]
 8002838:	4b11      	ldr	r3, [pc, #68]	; (8002880 <player_process+0xd4>)
 800283a:	681b      	ldr	r3, [r3, #0]
 800283c:	1ad3      	subs	r3, r2, r3
 800283e:	4a13      	ldr	r2, [pc, #76]	; (800288c <player_process+0xe0>)
 8002840:	6013      	str	r3, [r2, #0]
 8002842:	e005      	b.n	8002850 <player_process+0xa4>
			}
			else
			{
				bytes_remaining = 0;
 8002844:	4b11      	ldr	r3, [pc, #68]	; (800288c <player_process+0xe0>)
 8002846:	2200      	movs	r2, #0
 8002848:	601a      	str	r2, [r3, #0]
				player_control_sm = PLAYER_CONTROL_EOF;
 800284a:	4b0c      	ldr	r3, [pc, #48]	; (800287c <player_process+0xd0>)
 800284c:	2203      	movs	r2, #3
 800284e:	701a      	strb	r2, [r3, #0]
			}
			player_control_sm = PLAYER_CONTROL_IDLE;
 8002850:	4b0a      	ldr	r3, [pc, #40]	; (800287c <player_process+0xd0>)
 8002852:	2200      	movs	r2, #0
 8002854:	701a      	strb	r2, [r3, #0]

			break;
 8002856:	e00f      	b.n	8002878 <player_process+0xcc>

		case PLAYER_CONTROL_EOF :
			player_stop(&hi2s2);
 8002858:	480e      	ldr	r0, [pc, #56]	; (8002894 <player_process+0xe8>)
 800285a:	f000 f81f 	bl	800289c <player_stop>
			f_close(&wavfile);
 800285e:	480a      	ldr	r0, [pc, #40]	; (8002888 <player_process+0xdc>)
 8002860:	f008 f89d 	bl	800a99e <f_close>
			player_reset();
 8002864:	f7ff ff08 	bl	8002678 <player_reset>
			wavfile_isfinished = true;
 8002868:	4b0b      	ldr	r3, [pc, #44]	; (8002898 <player_process+0xec>)
 800286a:	2201      	movs	r2, #1
 800286c:	701a      	strb	r2, [r3, #0]
			player_control_sm = PLAYER_CONTROL_IDLE;
 800286e:	4b03      	ldr	r3, [pc, #12]	; (800287c <player_process+0xd0>)
 8002870:	2200      	movs	r2, #0
 8002872:	701a      	strb	r2, [r3, #0]

			break;
 8002874:	e000      	b.n	8002878 <player_process+0xcc>
			break;
 8002876:	bf00      	nop
	}
}
 8002878:	bf00      	nop
 800287a:	bd80      	pop	{r7, pc}
 800287c:	2000af5a 	.word	0x2000af5a
 8002880:	2000af54 	.word	0x2000af54
 8002884:	20002580 	.word	0x20002580
 8002888:	20001548 	.word	0x20001548
 800288c:	2000af50 	.word	0x2000af50
 8002890:	20006a68 	.word	0x20006a68
 8002894:	20000364 	.word	0x20000364
 8002898:	2000af58 	.word	0x2000af58

0800289c <player_stop>:

void player_stop(I2S_HandleTypeDef* hi2s)
{
 800289c:	b580      	push	{r7, lr}
 800289e:	b082      	sub	sp, #8
 80028a0:	af00      	add	r7, sp, #0
 80028a2:	6078      	str	r0, [r7, #4]
	HAL_I2S_DMAStop(hi2s);
 80028a4:	6878      	ldr	r0, [r7, #4]
 80028a6:	f002 faad 	bl	8004e04 <HAL_I2S_DMAStop>
}
 80028aa:	bf00      	nop
 80028ac:	3708      	adds	r7, #8
 80028ae:	46bd      	mov	sp, r7
 80028b0:	bd80      	pop	{r7, pc}

080028b2 <player_pause>:

void player_pause(I2S_HandleTypeDef* hi2s)
{
 80028b2:	b580      	push	{r7, lr}
 80028b4:	b082      	sub	sp, #8
 80028b6:	af00      	add	r7, sp, #0
 80028b8:	6078      	str	r0, [r7, #4]
	HAL_I2S_DMAPause(hi2s);
 80028ba:	6878      	ldr	r0, [r7, #4]
 80028bc:	f002 f9ac 	bl	8004c18 <HAL_I2S_DMAPause>
}
 80028c0:	bf00      	nop
 80028c2:	3708      	adds	r7, #8
 80028c4:	46bd      	mov	sp, r7
 80028c6:	bd80      	pop	{r7, pc}

080028c8 <player_resume>:

void player_resume(I2S_HandleTypeDef* hi2s)
{
 80028c8:	b580      	push	{r7, lr}
 80028ca:	b082      	sub	sp, #8
 80028cc:	af00      	add	r7, sp, #0
 80028ce:	6078      	str	r0, [r7, #4]
	HAL_I2S_DMAResume(hi2s);
 80028d0:	6878      	ldr	r0, [r7, #4]
 80028d2:	f002 fa03 	bl	8004cdc <HAL_I2S_DMAResume>
}
 80028d6:	bf00      	nop
 80028d8:	3708      	adds	r7, #8
 80028da:	46bd      	mov	sp, r7
 80028dc:	bd80      	pop	{r7, pc}
	...

080028e0 <HAL_I2S_TxHalfCpltCallback>:
	player_song_select(current->next->next);
}

/* This function is called when the first half of the buffer has been transferred */
void HAL_I2S_TxHalfCpltCallback(I2S_HandleTypeDef* hi2s)
{
 80028e0:	b480      	push	{r7}
 80028e2:	b083      	sub	sp, #12
 80028e4:	af00      	add	r7, sp, #0
 80028e6:	6078      	str	r0, [r7, #4]
	player_control_sm = PLAYER_CONTROL_HALFBUFFER;
 80028e8:	4b04      	ldr	r3, [pc, #16]	; (80028fc <HAL_I2S_TxHalfCpltCallback+0x1c>)
 80028ea:	2201      	movs	r2, #1
 80028ec:	701a      	strb	r2, [r3, #0]
}
 80028ee:	bf00      	nop
 80028f0:	370c      	adds	r7, #12
 80028f2:	46bd      	mov	sp, r7
 80028f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028f8:	4770      	bx	lr
 80028fa:	bf00      	nop
 80028fc:	2000af5a 	.word	0x2000af5a

08002900 <HAL_I2S_TxCpltCallback>:

/* This function is called when the second half of the buffer has been transferred */
void HAL_I2S_TxCpltCallback(I2S_HandleTypeDef* hi2s)
{
 8002900:	b480      	push	{r7}
 8002902:	b083      	sub	sp, #12
 8002904:	af00      	add	r7, sp, #0
 8002906:	6078      	str	r0, [r7, #4]
	player_control_sm = PLAYER_CONTROL_FULLBUFFER;
 8002908:	4b04      	ldr	r3, [pc, #16]	; (800291c <HAL_I2S_TxCpltCallback+0x1c>)
 800290a:	2202      	movs	r2, #2
 800290c:	701a      	strb	r2, [r3, #0]
}
 800290e:	bf00      	nop
 8002910:	370c      	adds	r7, #12
 8002912:	46bd      	mov	sp, r7
 8002914:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002918:	4770      	bx	lr
 800291a:	bf00      	nop
 800291c:	2000af5a 	.word	0x2000af5a

08002920 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8002920:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002958 <LoopFillZerobss+0x12>
 
/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8002924:	480d      	ldr	r0, [pc, #52]	; (800295c <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8002926:	490e      	ldr	r1, [pc, #56]	; (8002960 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8002928:	4a0e      	ldr	r2, [pc, #56]	; (8002964 <LoopFillZerobss+0x1e>)
  movs r3, #0
 800292a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800292c:	e002      	b.n	8002934 <LoopCopyDataInit>

0800292e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800292e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002930:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002932:	3304      	adds	r3, #4

08002934 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002934:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002936:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002938:	d3f9      	bcc.n	800292e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800293a:	4a0b      	ldr	r2, [pc, #44]	; (8002968 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 800293c:	4c0b      	ldr	r4, [pc, #44]	; (800296c <LoopFillZerobss+0x26>)
  movs r3, #0
 800293e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002940:	e001      	b.n	8002946 <LoopFillZerobss>

08002942 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002942:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002944:	3204      	adds	r2, #4

08002946 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002946:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002948:	d3fb      	bcc.n	8002942 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 800294a:	f7ff fe83 	bl	8002654 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800294e:	f026 f9cb 	bl	8028ce8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8002952:	f7fe ffa1 	bl	8001898 <main>
  bx  lr    
 8002956:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8002958:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 800295c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002960:	20000138 	.word	0x20000138
  ldr r2, =_sidata
 8002964:	0808e790 	.word	0x0808e790
  ldr r2, =_sbss
 8002968:	20000138 	.word	0x20000138
  ldr r4, =_ebss
 800296c:	2000edf8 	.word	0x2000edf8

08002970 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8002970:	e7fe      	b.n	8002970 <ADC_IRQHandler>
	...

08002974 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8002974:	b580      	push	{r7, lr}
 8002976:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8002978:	4b0e      	ldr	r3, [pc, #56]	; (80029b4 <HAL_Init+0x40>)
 800297a:	681b      	ldr	r3, [r3, #0]
 800297c:	4a0d      	ldr	r2, [pc, #52]	; (80029b4 <HAL_Init+0x40>)
 800297e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002982:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8002984:	4b0b      	ldr	r3, [pc, #44]	; (80029b4 <HAL_Init+0x40>)
 8002986:	681b      	ldr	r3, [r3, #0]
 8002988:	4a0a      	ldr	r2, [pc, #40]	; (80029b4 <HAL_Init+0x40>)
 800298a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800298e:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002990:	4b08      	ldr	r3, [pc, #32]	; (80029b4 <HAL_Init+0x40>)
 8002992:	681b      	ldr	r3, [r3, #0]
 8002994:	4a07      	ldr	r2, [pc, #28]	; (80029b4 <HAL_Init+0x40>)
 8002996:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800299a:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800299c:	2003      	movs	r0, #3
 800299e:	f000 f8fc 	bl	8002b9a <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80029a2:	200f      	movs	r0, #15
 80029a4:	f7ff fcbe 	bl	8002324 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80029a8:	f7ff faf4 	bl	8001f94 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80029ac:	2300      	movs	r3, #0
}
 80029ae:	4618      	mov	r0, r3
 80029b0:	bd80      	pop	{r7, pc}
 80029b2:	bf00      	nop
 80029b4:	40023c00 	.word	0x40023c00

080029b8 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80029b8:	b480      	push	{r7}
 80029ba:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80029bc:	4b06      	ldr	r3, [pc, #24]	; (80029d8 <HAL_IncTick+0x20>)
 80029be:	781b      	ldrb	r3, [r3, #0]
 80029c0:	461a      	mov	r2, r3
 80029c2:	4b06      	ldr	r3, [pc, #24]	; (80029dc <HAL_IncTick+0x24>)
 80029c4:	681b      	ldr	r3, [r3, #0]
 80029c6:	4413      	add	r3, r2
 80029c8:	4a04      	ldr	r2, [pc, #16]	; (80029dc <HAL_IncTick+0x24>)
 80029ca:	6013      	str	r3, [r2, #0]
}
 80029cc:	bf00      	nop
 80029ce:	46bd      	mov	sp, r7
 80029d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029d4:	4770      	bx	lr
 80029d6:	bf00      	nop
 80029d8:	20000038 	.word	0x20000038
 80029dc:	2000af90 	.word	0x2000af90

080029e0 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80029e0:	b480      	push	{r7}
 80029e2:	af00      	add	r7, sp, #0
  return uwTick;
 80029e4:	4b03      	ldr	r3, [pc, #12]	; (80029f4 <HAL_GetTick+0x14>)
 80029e6:	681b      	ldr	r3, [r3, #0]
}
 80029e8:	4618      	mov	r0, r3
 80029ea:	46bd      	mov	sp, r7
 80029ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029f0:	4770      	bx	lr
 80029f2:	bf00      	nop
 80029f4:	2000af90 	.word	0x2000af90

080029f8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80029f8:	b580      	push	{r7, lr}
 80029fa:	b084      	sub	sp, #16
 80029fc:	af00      	add	r7, sp, #0
 80029fe:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8002a00:	f7ff ffee 	bl	80029e0 <HAL_GetTick>
 8002a04:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8002a06:	687b      	ldr	r3, [r7, #4]
 8002a08:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002a0a:	68fb      	ldr	r3, [r7, #12]
 8002a0c:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002a10:	d005      	beq.n	8002a1e <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8002a12:	4b0a      	ldr	r3, [pc, #40]	; (8002a3c <HAL_Delay+0x44>)
 8002a14:	781b      	ldrb	r3, [r3, #0]
 8002a16:	461a      	mov	r2, r3
 8002a18:	68fb      	ldr	r3, [r7, #12]
 8002a1a:	4413      	add	r3, r2
 8002a1c:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8002a1e:	bf00      	nop
 8002a20:	f7ff ffde 	bl	80029e0 <HAL_GetTick>
 8002a24:	4602      	mov	r2, r0
 8002a26:	68bb      	ldr	r3, [r7, #8]
 8002a28:	1ad3      	subs	r3, r2, r3
 8002a2a:	68fa      	ldr	r2, [r7, #12]
 8002a2c:	429a      	cmp	r2, r3
 8002a2e:	d8f7      	bhi.n	8002a20 <HAL_Delay+0x28>
  {
  }
}
 8002a30:	bf00      	nop
 8002a32:	bf00      	nop
 8002a34:	3710      	adds	r7, #16
 8002a36:	46bd      	mov	sp, r7
 8002a38:	bd80      	pop	{r7, pc}
 8002a3a:	bf00      	nop
 8002a3c:	20000038 	.word	0x20000038

08002a40 <__NVIC_SetPriorityGrouping>:
{
 8002a40:	b480      	push	{r7}
 8002a42:	b085      	sub	sp, #20
 8002a44:	af00      	add	r7, sp, #0
 8002a46:	6078      	str	r0, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	f003 0307 	and.w	r3, r3, #7
 8002a4e:	60fb      	str	r3, [r7, #12]
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8002a50:	4b0c      	ldr	r3, [pc, #48]	; (8002a84 <__NVIC_SetPriorityGrouping+0x44>)
 8002a52:	68db      	ldr	r3, [r3, #12]
 8002a54:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8002a56:	68ba      	ldr	r2, [r7, #8]
 8002a58:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002a5c:	4013      	ands	r3, r2
 8002a5e:	60bb      	str	r3, [r7, #8]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8002a60:	68fb      	ldr	r3, [r7, #12]
 8002a62:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8002a64:	68bb      	ldr	r3, [r7, #8]
 8002a66:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8002a68:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8002a6c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002a70:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8002a72:	4a04      	ldr	r2, [pc, #16]	; (8002a84 <__NVIC_SetPriorityGrouping+0x44>)
 8002a74:	68bb      	ldr	r3, [r7, #8]
 8002a76:	60d3      	str	r3, [r2, #12]
}
 8002a78:	bf00      	nop
 8002a7a:	3714      	adds	r7, #20
 8002a7c:	46bd      	mov	sp, r7
 8002a7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a82:	4770      	bx	lr
 8002a84:	e000ed00 	.word	0xe000ed00

08002a88 <__NVIC_GetPriorityGrouping>:
{
 8002a88:	b480      	push	{r7}
 8002a8a:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8002a8c:	4b04      	ldr	r3, [pc, #16]	; (8002aa0 <__NVIC_GetPriorityGrouping+0x18>)
 8002a8e:	68db      	ldr	r3, [r3, #12]
 8002a90:	0a1b      	lsrs	r3, r3, #8
 8002a92:	f003 0307 	and.w	r3, r3, #7
}
 8002a96:	4618      	mov	r0, r3
 8002a98:	46bd      	mov	sp, r7
 8002a9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a9e:	4770      	bx	lr
 8002aa0:	e000ed00 	.word	0xe000ed00

08002aa4 <__NVIC_EnableIRQ>:
{
 8002aa4:	b480      	push	{r7}
 8002aa6:	b083      	sub	sp, #12
 8002aa8:	af00      	add	r7, sp, #0
 8002aaa:	4603      	mov	r3, r0
 8002aac:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8002aae:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002ab2:	2b00      	cmp	r3, #0
 8002ab4:	db0b      	blt.n	8002ace <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002ab6:	79fb      	ldrb	r3, [r7, #7]
 8002ab8:	f003 021f 	and.w	r2, r3, #31
 8002abc:	4907      	ldr	r1, [pc, #28]	; (8002adc <__NVIC_EnableIRQ+0x38>)
 8002abe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002ac2:	095b      	lsrs	r3, r3, #5
 8002ac4:	2001      	movs	r0, #1
 8002ac6:	fa00 f202 	lsl.w	r2, r0, r2
 8002aca:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8002ace:	bf00      	nop
 8002ad0:	370c      	adds	r7, #12
 8002ad2:	46bd      	mov	sp, r7
 8002ad4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ad8:	4770      	bx	lr
 8002ada:	bf00      	nop
 8002adc:	e000e100 	.word	0xe000e100

08002ae0 <__NVIC_SetPriority>:
{
 8002ae0:	b480      	push	{r7}
 8002ae2:	b083      	sub	sp, #12
 8002ae4:	af00      	add	r7, sp, #0
 8002ae6:	4603      	mov	r3, r0
 8002ae8:	6039      	str	r1, [r7, #0]
 8002aea:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8002aec:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002af0:	2b00      	cmp	r3, #0
 8002af2:	db0a      	blt.n	8002b0a <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002af4:	683b      	ldr	r3, [r7, #0]
 8002af6:	b2da      	uxtb	r2, r3
 8002af8:	490c      	ldr	r1, [pc, #48]	; (8002b2c <__NVIC_SetPriority+0x4c>)
 8002afa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002afe:	0112      	lsls	r2, r2, #4
 8002b00:	b2d2      	uxtb	r2, r2
 8002b02:	440b      	add	r3, r1
 8002b04:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 8002b08:	e00a      	b.n	8002b20 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002b0a:	683b      	ldr	r3, [r7, #0]
 8002b0c:	b2da      	uxtb	r2, r3
 8002b0e:	4908      	ldr	r1, [pc, #32]	; (8002b30 <__NVIC_SetPriority+0x50>)
 8002b10:	79fb      	ldrb	r3, [r7, #7]
 8002b12:	f003 030f 	and.w	r3, r3, #15
 8002b16:	3b04      	subs	r3, #4
 8002b18:	0112      	lsls	r2, r2, #4
 8002b1a:	b2d2      	uxtb	r2, r2
 8002b1c:	440b      	add	r3, r1
 8002b1e:	761a      	strb	r2, [r3, #24]
}
 8002b20:	bf00      	nop
 8002b22:	370c      	adds	r7, #12
 8002b24:	46bd      	mov	sp, r7
 8002b26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b2a:	4770      	bx	lr
 8002b2c:	e000e100 	.word	0xe000e100
 8002b30:	e000ed00 	.word	0xe000ed00

08002b34 <NVIC_EncodePriority>:
{
 8002b34:	b480      	push	{r7}
 8002b36:	b089      	sub	sp, #36	; 0x24
 8002b38:	af00      	add	r7, sp, #0
 8002b3a:	60f8      	str	r0, [r7, #12]
 8002b3c:	60b9      	str	r1, [r7, #8]
 8002b3e:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8002b40:	68fb      	ldr	r3, [r7, #12]
 8002b42:	f003 0307 	and.w	r3, r3, #7
 8002b46:	61fb      	str	r3, [r7, #28]
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8002b48:	69fb      	ldr	r3, [r7, #28]
 8002b4a:	f1c3 0307 	rsb	r3, r3, #7
 8002b4e:	2b04      	cmp	r3, #4
 8002b50:	bf28      	it	cs
 8002b52:	2304      	movcs	r3, #4
 8002b54:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8002b56:	69fb      	ldr	r3, [r7, #28]
 8002b58:	3304      	adds	r3, #4
 8002b5a:	2b06      	cmp	r3, #6
 8002b5c:	d902      	bls.n	8002b64 <NVIC_EncodePriority+0x30>
 8002b5e:	69fb      	ldr	r3, [r7, #28]
 8002b60:	3b03      	subs	r3, #3
 8002b62:	e000      	b.n	8002b66 <NVIC_EncodePriority+0x32>
 8002b64:	2300      	movs	r3, #0
 8002b66:	617b      	str	r3, [r7, #20]
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8002b68:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002b6c:	69bb      	ldr	r3, [r7, #24]
 8002b6e:	fa02 f303 	lsl.w	r3, r2, r3
 8002b72:	43da      	mvns	r2, r3
 8002b74:	68bb      	ldr	r3, [r7, #8]
 8002b76:	401a      	ands	r2, r3
 8002b78:	697b      	ldr	r3, [r7, #20]
 8002b7a:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8002b7c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002b80:	697b      	ldr	r3, [r7, #20]
 8002b82:	fa01 f303 	lsl.w	r3, r1, r3
 8002b86:	43d9      	mvns	r1, r3
 8002b88:	687b      	ldr	r3, [r7, #4]
 8002b8a:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8002b8c:	4313      	orrs	r3, r2
}
 8002b8e:	4618      	mov	r0, r3
 8002b90:	3724      	adds	r7, #36	; 0x24
 8002b92:	46bd      	mov	sp, r7
 8002b94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b98:	4770      	bx	lr

08002b9a <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8002b9a:	b580      	push	{r7, lr}
 8002b9c:	b082      	sub	sp, #8
 8002b9e:	af00      	add	r7, sp, #0
 8002ba0:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8002ba2:	6878      	ldr	r0, [r7, #4]
 8002ba4:	f7ff ff4c 	bl	8002a40 <__NVIC_SetPriorityGrouping>
}
 8002ba8:	bf00      	nop
 8002baa:	3708      	adds	r7, #8
 8002bac:	46bd      	mov	sp, r7
 8002bae:	bd80      	pop	{r7, pc}

08002bb0 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8002bb0:	b580      	push	{r7, lr}
 8002bb2:	b086      	sub	sp, #24
 8002bb4:	af00      	add	r7, sp, #0
 8002bb6:	4603      	mov	r3, r0
 8002bb8:	60b9      	str	r1, [r7, #8]
 8002bba:	607a      	str	r2, [r7, #4]
 8002bbc:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8002bbe:	2300      	movs	r3, #0
 8002bc0:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8002bc2:	f7ff ff61 	bl	8002a88 <__NVIC_GetPriorityGrouping>
 8002bc6:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8002bc8:	687a      	ldr	r2, [r7, #4]
 8002bca:	68b9      	ldr	r1, [r7, #8]
 8002bcc:	6978      	ldr	r0, [r7, #20]
 8002bce:	f7ff ffb1 	bl	8002b34 <NVIC_EncodePriority>
 8002bd2:	4602      	mov	r2, r0
 8002bd4:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002bd8:	4611      	mov	r1, r2
 8002bda:	4618      	mov	r0, r3
 8002bdc:	f7ff ff80 	bl	8002ae0 <__NVIC_SetPriority>
}
 8002be0:	bf00      	nop
 8002be2:	3718      	adds	r7, #24
 8002be4:	46bd      	mov	sp, r7
 8002be6:	bd80      	pop	{r7, pc}

08002be8 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8002be8:	b580      	push	{r7, lr}
 8002bea:	b082      	sub	sp, #8
 8002bec:	af00      	add	r7, sp, #0
 8002bee:	4603      	mov	r3, r0
 8002bf0:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8002bf2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002bf6:	4618      	mov	r0, r3
 8002bf8:	f7ff ff54 	bl	8002aa4 <__NVIC_EnableIRQ>
}
 8002bfc:	bf00      	nop
 8002bfe:	3708      	adds	r7, #8
 8002c00:	46bd      	mov	sp, r7
 8002c02:	bd80      	pop	{r7, pc}

08002c04 <HAL_SYSTICK_IRQHandler>:
/**
  * @brief  This function handles SYSTICK interrupt request.
  * @retval None
  */
void HAL_SYSTICK_IRQHandler(void)
{
 8002c04:	b580      	push	{r7, lr}
 8002c06:	af00      	add	r7, sp, #0
  HAL_SYSTICK_Callback();
 8002c08:	f000 f802 	bl	8002c10 <HAL_SYSTICK_Callback>
}
 8002c0c:	bf00      	nop
 8002c0e:	bd80      	pop	{r7, pc}

08002c10 <HAL_SYSTICK_Callback>:
/**
  * @brief  SYSTICK callback.
  * @retval None
  */
__weak void HAL_SYSTICK_Callback(void)
{
 8002c10:	b480      	push	{r7}
 8002c12:	af00      	add	r7, sp, #0
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_SYSTICK_Callback could be implemented in the user file
   */
}
 8002c14:	bf00      	nop
 8002c16:	46bd      	mov	sp, r7
 8002c18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c1c:	4770      	bx	lr

08002c1e <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8002c1e:	b580      	push	{r7, lr}
 8002c20:	b082      	sub	sp, #8
 8002c22:	af00      	add	r7, sp, #0
 8002c24:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	2b00      	cmp	r3, #0
 8002c2a:	d101      	bne.n	8002c30 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8002c2c:	2301      	movs	r3, #1
 8002c2e:	e00e      	b.n	8002c4e <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8002c30:	687b      	ldr	r3, [r7, #4]
 8002c32:	795b      	ldrb	r3, [r3, #5]
 8002c34:	b2db      	uxtb	r3, r3
 8002c36:	2b00      	cmp	r3, #0
 8002c38:	d105      	bne.n	8002c46 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8002c3a:	687b      	ldr	r3, [r7, #4]
 8002c3c:	2200      	movs	r2, #0
 8002c3e:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8002c40:	6878      	ldr	r0, [r7, #4]
 8002c42:	f7ff f9cf 	bl	8001fe4 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8002c46:	687b      	ldr	r3, [r7, #4]
 8002c48:	2201      	movs	r2, #1
 8002c4a:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 8002c4c:	2300      	movs	r3, #0
}
 8002c4e:	4618      	mov	r0, r3
 8002c50:	3708      	adds	r7, #8
 8002c52:	46bd      	mov	sp, r7
 8002c54:	bd80      	pop	{r7, pc}
	...

08002c58 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 8002c58:	b580      	push	{r7, lr}
 8002c5a:	b086      	sub	sp, #24
 8002c5c:	af00      	add	r7, sp, #0
 8002c5e:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0U;
 8002c60:	2300      	movs	r3, #0
 8002c62:	617b      	str	r3, [r7, #20]
  uint32_t tickstart = HAL_GetTick();
 8002c64:	f7ff febc 	bl	80029e0 <HAL_GetTick>
 8002c68:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 8002c6a:	687b      	ldr	r3, [r7, #4]
 8002c6c:	2b00      	cmp	r3, #0
 8002c6e:	d101      	bne.n	8002c74 <HAL_DMA_Init+0x1c>
  {
    return HAL_ERROR;
 8002c70:	2301      	movs	r3, #1
 8002c72:	e099      	b.n	8002da8 <HAL_DMA_Init+0x150>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
  }

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	2202      	movs	r2, #2
 8002c78:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 8002c7c:	687b      	ldr	r3, [r7, #4]
 8002c7e:	2200      	movs	r2, #0
 8002c80:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	681b      	ldr	r3, [r3, #0]
 8002c88:	681a      	ldr	r2, [r3, #0]
 8002c8a:	687b      	ldr	r3, [r7, #4]
 8002c8c:	681b      	ldr	r3, [r3, #0]
 8002c8e:	f022 0201 	bic.w	r2, r2, #1
 8002c92:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8002c94:	e00f      	b.n	8002cb6 <HAL_DMA_Init+0x5e>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8002c96:	f7ff fea3 	bl	80029e0 <HAL_GetTick>
 8002c9a:	4602      	mov	r2, r0
 8002c9c:	693b      	ldr	r3, [r7, #16]
 8002c9e:	1ad3      	subs	r3, r2, r3
 8002ca0:	2b05      	cmp	r3, #5
 8002ca2:	d908      	bls.n	8002cb6 <HAL_DMA_Init+0x5e>
    {
      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8002ca4:	687b      	ldr	r3, [r7, #4]
 8002ca6:	2220      	movs	r2, #32
 8002ca8:	655a      	str	r2, [r3, #84]	; 0x54
      
      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8002caa:	687b      	ldr	r3, [r7, #4]
 8002cac:	2203      	movs	r2, #3
 8002cae:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
      
      return HAL_TIMEOUT;
 8002cb2:	2303      	movs	r3, #3
 8002cb4:	e078      	b.n	8002da8 <HAL_DMA_Init+0x150>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8002cb6:	687b      	ldr	r3, [r7, #4]
 8002cb8:	681b      	ldr	r3, [r3, #0]
 8002cba:	681b      	ldr	r3, [r3, #0]
 8002cbc:	f003 0301 	and.w	r3, r3, #1
 8002cc0:	2b00      	cmp	r3, #0
 8002cc2:	d1e8      	bne.n	8002c96 <HAL_DMA_Init+0x3e>
    }
  }
  
  /* Get the CR register value */
  tmp = hdma->Instance->CR;
 8002cc4:	687b      	ldr	r3, [r7, #4]
 8002cc6:	681b      	ldr	r3, [r3, #0]
 8002cc8:	681b      	ldr	r3, [r3, #0]
 8002cca:	617b      	str	r3, [r7, #20]

  /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8002ccc:	697a      	ldr	r2, [r7, #20]
 8002cce:	4b38      	ldr	r3, [pc, #224]	; (8002db0 <HAL_DMA_Init+0x158>)
 8002cd0:	4013      	ands	r3, r2
 8002cd2:	617b      	str	r3, [r7, #20]
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	685a      	ldr	r2, [r3, #4]
 8002cd8:	687b      	ldr	r3, [r7, #4]
 8002cda:	689b      	ldr	r3, [r3, #8]
 8002cdc:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8002cde:	687b      	ldr	r3, [r7, #4]
 8002ce0:	68db      	ldr	r3, [r3, #12]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8002ce2:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	691b      	ldr	r3, [r3, #16]
 8002ce8:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8002cea:	687b      	ldr	r3, [r7, #4]
 8002cec:	695b      	ldr	r3, [r3, #20]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8002cee:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8002cf0:	687b      	ldr	r3, [r7, #4]
 8002cf2:	699b      	ldr	r3, [r3, #24]
 8002cf4:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 8002cf6:	687b      	ldr	r3, [r7, #4]
 8002cf8:	69db      	ldr	r3, [r3, #28]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8002cfa:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 8002cfc:	687b      	ldr	r3, [r7, #4]
 8002cfe:	6a1b      	ldr	r3, [r3, #32]
 8002d00:	4313      	orrs	r3, r2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8002d02:	697a      	ldr	r2, [r7, #20]
 8002d04:	4313      	orrs	r3, r2
 8002d06:	617b      	str	r3, [r7, #20]

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d0c:	2b04      	cmp	r3, #4
 8002d0e:	d107      	bne.n	8002d20 <HAL_DMA_Init+0xc8>
  {
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8002d10:	687b      	ldr	r3, [r7, #4]
 8002d12:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002d18:	4313      	orrs	r3, r2
 8002d1a:	697a      	ldr	r2, [r7, #20]
 8002d1c:	4313      	orrs	r3, r2
 8002d1e:	617b      	str	r3, [r7, #20]
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	681b      	ldr	r3, [r3, #0]
 8002d24:	697a      	ldr	r2, [r7, #20]
 8002d26:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 8002d28:	687b      	ldr	r3, [r7, #4]
 8002d2a:	681b      	ldr	r3, [r3, #0]
 8002d2c:	695b      	ldr	r3, [r3, #20]
 8002d2e:	617b      	str	r3, [r7, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8002d30:	697b      	ldr	r3, [r7, #20]
 8002d32:	f023 0307 	bic.w	r3, r3, #7
 8002d36:	617b      	str	r3, [r7, #20]

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d3c:	697a      	ldr	r2, [r7, #20]
 8002d3e:	4313      	orrs	r3, r2
 8002d40:	617b      	str	r3, [r7, #20]

  /* The FIFO threshold is not used when the FIFO mode is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8002d42:	687b      	ldr	r3, [r7, #4]
 8002d44:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d46:	2b04      	cmp	r3, #4
 8002d48:	d117      	bne.n	8002d7a <HAL_DMA_Init+0x122>
  {
    /* Get the FIFO threshold */
    tmp |= hdma->Init.FIFOThreshold;
 8002d4a:	687b      	ldr	r3, [r7, #4]
 8002d4c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002d4e:	697a      	ldr	r2, [r7, #20]
 8002d50:	4313      	orrs	r3, r2
 8002d52:	617b      	str	r3, [r7, #20]
    
    /* Check compatibility between FIFO threshold level and size of the memory burst */
    /* for INCR4, INCR8, INCR16 bursts */
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d58:	2b00      	cmp	r3, #0
 8002d5a:	d00e      	beq.n	8002d7a <HAL_DMA_Init+0x122>
    {
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 8002d5c:	6878      	ldr	r0, [r7, #4]
 8002d5e:	f000 fadf 	bl	8003320 <DMA_CheckFifoParam>
 8002d62:	4603      	mov	r3, r0
 8002d64:	2b00      	cmp	r3, #0
 8002d66:	d008      	beq.n	8002d7a <HAL_DMA_Init+0x122>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8002d68:	687b      	ldr	r3, [r7, #4]
 8002d6a:	2240      	movs	r2, #64	; 0x40
 8002d6c:	655a      	str	r2, [r3, #84]	; 0x54
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 8002d6e:	687b      	ldr	r3, [r7, #4]
 8002d70:	2201      	movs	r2, #1
 8002d72:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        
        return HAL_ERROR; 
 8002d76:	2301      	movs	r3, #1
 8002d78:	e016      	b.n	8002da8 <HAL_DMA_Init+0x150>
      }
    }
  }
  
  /* Write to DMA Stream FCR */
  hdma->Instance->FCR = tmp;
 8002d7a:	687b      	ldr	r3, [r7, #4]
 8002d7c:	681b      	ldr	r3, [r3, #0]
 8002d7e:	697a      	ldr	r2, [r7, #20]
 8002d80:	615a      	str	r2, [r3, #20]

  /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
     DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8002d82:	6878      	ldr	r0, [r7, #4]
 8002d84:	f000 fa96 	bl	80032b4 <DMA_CalcBaseAndBitshift>
 8002d88:	4603      	mov	r3, r0
 8002d8a:	60fb      	str	r3, [r7, #12]
  
  /* Clear all interrupt flags */
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8002d8c:	687b      	ldr	r3, [r7, #4]
 8002d8e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002d90:	223f      	movs	r2, #63	; 0x3f
 8002d92:	409a      	lsls	r2, r3
 8002d94:	68fb      	ldr	r3, [r7, #12]
 8002d96:	609a      	str	r2, [r3, #8]

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8002d98:	687b      	ldr	r3, [r7, #4]
 8002d9a:	2200      	movs	r2, #0
 8002d9c:	655a      	str	r2, [r3, #84]	; 0x54
                                                                                     
  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	2201      	movs	r2, #1
 8002da2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

  return HAL_OK;
 8002da6:	2300      	movs	r3, #0
}
 8002da8:	4618      	mov	r0, r3
 8002daa:	3718      	adds	r7, #24
 8002dac:	46bd      	mov	sp, r7
 8002dae:	bd80      	pop	{r7, pc}
 8002db0:	f010803f 	.word	0xf010803f

08002db4 <HAL_DMA_Start_IT>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8002db4:	b580      	push	{r7, lr}
 8002db6:	b086      	sub	sp, #24
 8002db8:	af00      	add	r7, sp, #0
 8002dba:	60f8      	str	r0, [r7, #12]
 8002dbc:	60b9      	str	r1, [r7, #8]
 8002dbe:	607a      	str	r2, [r7, #4]
 8002dc0:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8002dc2:	2300      	movs	r3, #0
 8002dc4:	75fb      	strb	r3, [r7, #23]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8002dc6:	68fb      	ldr	r3, [r7, #12]
 8002dc8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002dca:	613b      	str	r3, [r7, #16]
  
  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 
  /* Process locked */
  __HAL_LOCK(hdma);
 8002dcc:	68fb      	ldr	r3, [r7, #12]
 8002dce:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8002dd2:	2b01      	cmp	r3, #1
 8002dd4:	d101      	bne.n	8002dda <HAL_DMA_Start_IT+0x26>
 8002dd6:	2302      	movs	r3, #2
 8002dd8:	e040      	b.n	8002e5c <HAL_DMA_Start_IT+0xa8>
 8002dda:	68fb      	ldr	r3, [r7, #12]
 8002ddc:	2201      	movs	r2, #1
 8002dde:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  
  if(HAL_DMA_STATE_READY == hdma->State)
 8002de2:	68fb      	ldr	r3, [r7, #12]
 8002de4:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8002de8:	b2db      	uxtb	r3, r3
 8002dea:	2b01      	cmp	r3, #1
 8002dec:	d12f      	bne.n	8002e4e <HAL_DMA_Start_IT+0x9a>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8002dee:	68fb      	ldr	r3, [r7, #12]
 8002df0:	2202      	movs	r2, #2
 8002df2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8002df6:	68fb      	ldr	r3, [r7, #12]
 8002df8:	2200      	movs	r2, #0
 8002dfa:	655a      	str	r2, [r3, #84]	; 0x54
    
    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 8002dfc:	683b      	ldr	r3, [r7, #0]
 8002dfe:	687a      	ldr	r2, [r7, #4]
 8002e00:	68b9      	ldr	r1, [r7, #8]
 8002e02:	68f8      	ldr	r0, [r7, #12]
 8002e04:	f000 fa28 	bl	8003258 <DMA_SetConfig>
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8002e08:	68fb      	ldr	r3, [r7, #12]
 8002e0a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002e0c:	223f      	movs	r2, #63	; 0x3f
 8002e0e:	409a      	lsls	r2, r3
 8002e10:	693b      	ldr	r3, [r7, #16]
 8002e12:	609a      	str	r2, [r3, #8]
    
    /* Enable Common interrupts*/
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 8002e14:	68fb      	ldr	r3, [r7, #12]
 8002e16:	681b      	ldr	r3, [r3, #0]
 8002e18:	681a      	ldr	r2, [r3, #0]
 8002e1a:	68fb      	ldr	r3, [r7, #12]
 8002e1c:	681b      	ldr	r3, [r3, #0]
 8002e1e:	f042 0216 	orr.w	r2, r2, #22
 8002e22:	601a      	str	r2, [r3, #0]
    
    if(hdma->XferHalfCpltCallback != NULL)
 8002e24:	68fb      	ldr	r3, [r7, #12]
 8002e26:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e28:	2b00      	cmp	r3, #0
 8002e2a:	d007      	beq.n	8002e3c <HAL_DMA_Start_IT+0x88>
    {
      hdma->Instance->CR  |= DMA_IT_HT;
 8002e2c:	68fb      	ldr	r3, [r7, #12]
 8002e2e:	681b      	ldr	r3, [r3, #0]
 8002e30:	681a      	ldr	r2, [r3, #0]
 8002e32:	68fb      	ldr	r3, [r7, #12]
 8002e34:	681b      	ldr	r3, [r3, #0]
 8002e36:	f042 0208 	orr.w	r2, r2, #8
 8002e3a:	601a      	str	r2, [r3, #0]
    }
    
    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 8002e3c:	68fb      	ldr	r3, [r7, #12]
 8002e3e:	681b      	ldr	r3, [r3, #0]
 8002e40:	681a      	ldr	r2, [r3, #0]
 8002e42:	68fb      	ldr	r3, [r7, #12]
 8002e44:	681b      	ldr	r3, [r3, #0]
 8002e46:	f042 0201 	orr.w	r2, r2, #1
 8002e4a:	601a      	str	r2, [r3, #0]
 8002e4c:	e005      	b.n	8002e5a <HAL_DMA_Start_IT+0xa6>
  }
  else
  {
    /* Process unlocked */
    __HAL_UNLOCK(hdma);	  
 8002e4e:	68fb      	ldr	r3, [r7, #12]
 8002e50:	2200      	movs	r2, #0
 8002e52:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    /* Return error status */
    status = HAL_BUSY;
 8002e56:	2302      	movs	r3, #2
 8002e58:	75fb      	strb	r3, [r7, #23]
  }
  
  return status;
 8002e5a:	7dfb      	ldrb	r3, [r7, #23]
}
 8002e5c:	4618      	mov	r0, r3
 8002e5e:	3718      	adds	r7, #24
 8002e60:	46bd      	mov	sp, r7
 8002e62:	bd80      	pop	{r7, pc}

08002e64 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 8002e64:	b580      	push	{r7, lr}
 8002e66:	b084      	sub	sp, #16
 8002e68:	af00      	add	r7, sp, #0
 8002e6a:	6078      	str	r0, [r7, #4]
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8002e6c:	687b      	ldr	r3, [r7, #4]
 8002e6e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002e70:	60fb      	str	r3, [r7, #12]
  
  uint32_t tickstart = HAL_GetTick();
 8002e72:	f7ff fdb5 	bl	80029e0 <HAL_GetTick>
 8002e76:	60b8      	str	r0, [r7, #8]
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8002e78:	687b      	ldr	r3, [r7, #4]
 8002e7a:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8002e7e:	b2db      	uxtb	r3, r3
 8002e80:	2b02      	cmp	r3, #2
 8002e82:	d008      	beq.n	8002e96 <HAL_DMA_Abort+0x32>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	2280      	movs	r2, #128	; 0x80
 8002e88:	655a      	str	r2, [r3, #84]	; 0x54
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8002e8a:	687b      	ldr	r3, [r7, #4]
 8002e8c:	2200      	movs	r2, #0
 8002e8e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    return HAL_ERROR;
 8002e92:	2301      	movs	r3, #1
 8002e94:	e052      	b.n	8002f3c <HAL_DMA_Abort+0xd8>
  }
  else
  {
    /* Disable all the transfer interrupts */
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8002e96:	687b      	ldr	r3, [r7, #4]
 8002e98:	681b      	ldr	r3, [r3, #0]
 8002e9a:	681a      	ldr	r2, [r3, #0]
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	681b      	ldr	r3, [r3, #0]
 8002ea0:	f022 0216 	bic.w	r2, r2, #22
 8002ea4:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8002ea6:	687b      	ldr	r3, [r7, #4]
 8002ea8:	681b      	ldr	r3, [r3, #0]
 8002eaa:	695a      	ldr	r2, [r3, #20]
 8002eac:	687b      	ldr	r3, [r7, #4]
 8002eae:	681b      	ldr	r3, [r3, #0]
 8002eb0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002eb4:	615a      	str	r2, [r3, #20]
    
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8002eb6:	687b      	ldr	r3, [r7, #4]
 8002eb8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002eba:	2b00      	cmp	r3, #0
 8002ebc:	d103      	bne.n	8002ec6 <HAL_DMA_Abort+0x62>
 8002ebe:	687b      	ldr	r3, [r7, #4]
 8002ec0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002ec2:	2b00      	cmp	r3, #0
 8002ec4:	d007      	beq.n	8002ed6 <HAL_DMA_Abort+0x72>
    {
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8002ec6:	687b      	ldr	r3, [r7, #4]
 8002ec8:	681b      	ldr	r3, [r3, #0]
 8002eca:	681a      	ldr	r2, [r3, #0]
 8002ecc:	687b      	ldr	r3, [r7, #4]
 8002ece:	681b      	ldr	r3, [r3, #0]
 8002ed0:	f022 0208 	bic.w	r2, r2, #8
 8002ed4:	601a      	str	r2, [r3, #0]
    }
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8002ed6:	687b      	ldr	r3, [r7, #4]
 8002ed8:	681b      	ldr	r3, [r3, #0]
 8002eda:	681a      	ldr	r2, [r3, #0]
 8002edc:	687b      	ldr	r3, [r7, #4]
 8002ede:	681b      	ldr	r3, [r3, #0]
 8002ee0:	f022 0201 	bic.w	r2, r2, #1
 8002ee4:	601a      	str	r2, [r3, #0]
    
    /* Check if the DMA Stream is effectively disabled */
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8002ee6:	e013      	b.n	8002f10 <HAL_DMA_Abort+0xac>
    {
      /* Check for the Timeout */
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8002ee8:	f7ff fd7a 	bl	80029e0 <HAL_GetTick>
 8002eec:	4602      	mov	r2, r0
 8002eee:	68bb      	ldr	r3, [r7, #8]
 8002ef0:	1ad3      	subs	r3, r2, r3
 8002ef2:	2b05      	cmp	r3, #5
 8002ef4:	d90c      	bls.n	8002f10 <HAL_DMA_Abort+0xac>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	2220      	movs	r2, #32
 8002efa:	655a      	str	r2, [r3, #84]	; 0x54
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8002efc:	687b      	ldr	r3, [r7, #4]
 8002efe:	2203      	movs	r2, #3
 8002f00:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        
        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8002f04:	687b      	ldr	r3, [r7, #4]
 8002f06:	2200      	movs	r2, #0
 8002f08:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        
        return HAL_TIMEOUT;
 8002f0c:	2303      	movs	r3, #3
 8002f0e:	e015      	b.n	8002f3c <HAL_DMA_Abort+0xd8>
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8002f10:	687b      	ldr	r3, [r7, #4]
 8002f12:	681b      	ldr	r3, [r3, #0]
 8002f14:	681b      	ldr	r3, [r3, #0]
 8002f16:	f003 0301 	and.w	r3, r3, #1
 8002f1a:	2b00      	cmp	r3, #0
 8002f1c:	d1e4      	bne.n	8002ee8 <HAL_DMA_Abort+0x84>
      }
    }
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8002f1e:	687b      	ldr	r3, [r7, #4]
 8002f20:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002f22:	223f      	movs	r2, #63	; 0x3f
 8002f24:	409a      	lsls	r2, r3
 8002f26:	68fb      	ldr	r3, [r7, #12]
 8002f28:	609a      	str	r2, [r3, #8]
    
    /* Change the DMA state*/
    hdma->State = HAL_DMA_STATE_READY;
 8002f2a:	687b      	ldr	r3, [r7, #4]
 8002f2c:	2201      	movs	r2, #1
 8002f2e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8002f32:	687b      	ldr	r3, [r7, #4]
 8002f34:	2200      	movs	r2, #0
 8002f36:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  }
  return HAL_OK;
 8002f3a:	2300      	movs	r3, #0
}
 8002f3c:	4618      	mov	r0, r3
 8002f3e:	3710      	adds	r7, #16
 8002f40:	46bd      	mov	sp, r7
 8002f42:	bd80      	pop	{r7, pc}

08002f44 <HAL_DMA_IRQHandler>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 8002f44:	b580      	push	{r7, lr}
 8002f46:	b086      	sub	sp, #24
 8002f48:	af00      	add	r7, sp, #0
 8002f4a:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr;
  __IO uint32_t count = 0U;
 8002f4c:	2300      	movs	r3, #0
 8002f4e:	60bb      	str	r3, [r7, #8]
  uint32_t timeout = SystemCoreClock / 9600U;
 8002f50:	4b8e      	ldr	r3, [pc, #568]	; (800318c <HAL_DMA_IRQHandler+0x248>)
 8002f52:	681b      	ldr	r3, [r3, #0]
 8002f54:	4a8e      	ldr	r2, [pc, #568]	; (8003190 <HAL_DMA_IRQHandler+0x24c>)
 8002f56:	fba2 2303 	umull	r2, r3, r2, r3
 8002f5a:	0a9b      	lsrs	r3, r3, #10
 8002f5c:	617b      	str	r3, [r7, #20]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002f62:	613b      	str	r3, [r7, #16]

  tmpisr = regs->ISR;
 8002f64:	693b      	ldr	r3, [r7, #16]
 8002f66:	681b      	ldr	r3, [r3, #0]
 8002f68:	60fb      	str	r3, [r7, #12]

  /* Transfer Error Interrupt management ***************************************/
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8002f6a:	687b      	ldr	r3, [r7, #4]
 8002f6c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002f6e:	2208      	movs	r2, #8
 8002f70:	409a      	lsls	r2, r3
 8002f72:	68fb      	ldr	r3, [r7, #12]
 8002f74:	4013      	ands	r3, r2
 8002f76:	2b00      	cmp	r3, #0
 8002f78:	d01a      	beq.n	8002fb0 <HAL_DMA_IRQHandler+0x6c>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	681b      	ldr	r3, [r3, #0]
 8002f7e:	681b      	ldr	r3, [r3, #0]
 8002f80:	f003 0304 	and.w	r3, r3, #4
 8002f84:	2b00      	cmp	r3, #0
 8002f86:	d013      	beq.n	8002fb0 <HAL_DMA_IRQHandler+0x6c>
    {
      /* Disable the transfer error interrupt */
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 8002f88:	687b      	ldr	r3, [r7, #4]
 8002f8a:	681b      	ldr	r3, [r3, #0]
 8002f8c:	681a      	ldr	r2, [r3, #0]
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	681b      	ldr	r3, [r3, #0]
 8002f92:	f022 0204 	bic.w	r2, r2, #4
 8002f96:	601a      	str	r2, [r3, #0]
      
      /* Clear the transfer error flag */
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 8002f98:	687b      	ldr	r3, [r7, #4]
 8002f9a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002f9c:	2208      	movs	r2, #8
 8002f9e:	409a      	lsls	r2, r3
 8002fa0:	693b      	ldr	r3, [r7, #16]
 8002fa2:	609a      	str	r2, [r3, #8]
      
      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8002fa4:	687b      	ldr	r3, [r7, #4]
 8002fa6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002fa8:	f043 0201 	orr.w	r2, r3, #1
 8002fac:	687b      	ldr	r3, [r7, #4]
 8002fae:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* FIFO Error Interrupt management ******************************************/
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002fb4:	2201      	movs	r2, #1
 8002fb6:	409a      	lsls	r2, r3
 8002fb8:	68fb      	ldr	r3, [r7, #12]
 8002fba:	4013      	ands	r3, r2
 8002fbc:	2b00      	cmp	r3, #0
 8002fbe:	d012      	beq.n	8002fe6 <HAL_DMA_IRQHandler+0xa2>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 8002fc0:	687b      	ldr	r3, [r7, #4]
 8002fc2:	681b      	ldr	r3, [r3, #0]
 8002fc4:	695b      	ldr	r3, [r3, #20]
 8002fc6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002fca:	2b00      	cmp	r3, #0
 8002fcc:	d00b      	beq.n	8002fe6 <HAL_DMA_IRQHandler+0xa2>
    {
      /* Clear the FIFO error flag */
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002fd2:	2201      	movs	r2, #1
 8002fd4:	409a      	lsls	r2, r3
 8002fd6:	693b      	ldr	r3, [r7, #16]
 8002fd8:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 8002fda:	687b      	ldr	r3, [r7, #4]
 8002fdc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002fde:	f043 0202 	orr.w	r2, r3, #2
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* Direct Mode Error Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002fea:	2204      	movs	r2, #4
 8002fec:	409a      	lsls	r2, r3
 8002fee:	68fb      	ldr	r3, [r7, #12]
 8002ff0:	4013      	ands	r3, r2
 8002ff2:	2b00      	cmp	r3, #0
 8002ff4:	d012      	beq.n	800301c <HAL_DMA_IRQHandler+0xd8>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	681b      	ldr	r3, [r3, #0]
 8002ffa:	681b      	ldr	r3, [r3, #0]
 8002ffc:	f003 0302 	and.w	r3, r3, #2
 8003000:	2b00      	cmp	r3, #0
 8003002:	d00b      	beq.n	800301c <HAL_DMA_IRQHandler+0xd8>
    {
      /* Clear the direct mode error flag */
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 8003004:	687b      	ldr	r3, [r7, #4]
 8003006:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003008:	2204      	movs	r2, #4
 800300a:	409a      	lsls	r2, r3
 800300c:	693b      	ldr	r3, [r7, #16]
 800300e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8003010:	687b      	ldr	r3, [r7, #4]
 8003012:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003014:	f043 0204 	orr.w	r2, r3, #4
 8003018:	687b      	ldr	r3, [r7, #4]
 800301a:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* Half Transfer Complete Interrupt management ******************************/
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 800301c:	687b      	ldr	r3, [r7, #4]
 800301e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003020:	2210      	movs	r2, #16
 8003022:	409a      	lsls	r2, r3
 8003024:	68fb      	ldr	r3, [r7, #12]
 8003026:	4013      	ands	r3, r2
 8003028:	2b00      	cmp	r3, #0
 800302a:	d043      	beq.n	80030b4 <HAL_DMA_IRQHandler+0x170>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 800302c:	687b      	ldr	r3, [r7, #4]
 800302e:	681b      	ldr	r3, [r3, #0]
 8003030:	681b      	ldr	r3, [r3, #0]
 8003032:	f003 0308 	and.w	r3, r3, #8
 8003036:	2b00      	cmp	r3, #0
 8003038:	d03c      	beq.n	80030b4 <HAL_DMA_IRQHandler+0x170>
    {
      /* Clear the half transfer complete flag */
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800303e:	2210      	movs	r2, #16
 8003040:	409a      	lsls	r2, r3
 8003042:	693b      	ldr	r3, [r7, #16]
 8003044:	609a      	str	r2, [r3, #8]
      
      /* Multi_Buffering mode enabled */
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	681b      	ldr	r3, [r3, #0]
 800304a:	681b      	ldr	r3, [r3, #0]
 800304c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003050:	2b00      	cmp	r3, #0
 8003052:	d018      	beq.n	8003086 <HAL_DMA_IRQHandler+0x142>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	681b      	ldr	r3, [r3, #0]
 8003058:	681b      	ldr	r3, [r3, #0]
 800305a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800305e:	2b00      	cmp	r3, #0
 8003060:	d108      	bne.n	8003074 <HAL_DMA_IRQHandler+0x130>
        {
          if(hdma->XferHalfCpltCallback != NULL)
 8003062:	687b      	ldr	r3, [r7, #4]
 8003064:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003066:	2b00      	cmp	r3, #0
 8003068:	d024      	beq.n	80030b4 <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800306e:	6878      	ldr	r0, [r7, #4]
 8003070:	4798      	blx	r3
 8003072:	e01f      	b.n	80030b4 <HAL_DMA_IRQHandler+0x170>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 8003074:	687b      	ldr	r3, [r7, #4]
 8003076:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003078:	2b00      	cmp	r3, #0
 800307a:	d01b      	beq.n	80030b4 <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferM1HalfCpltCallback(hdma);
 800307c:	687b      	ldr	r3, [r7, #4]
 800307e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003080:	6878      	ldr	r0, [r7, #4]
 8003082:	4798      	blx	r3
 8003084:	e016      	b.n	80030b4 <HAL_DMA_IRQHandler+0x170>
        }
      }
      else
      {
        /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	681b      	ldr	r3, [r3, #0]
 800308a:	681b      	ldr	r3, [r3, #0]
 800308c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003090:	2b00      	cmp	r3, #0
 8003092:	d107      	bne.n	80030a4 <HAL_DMA_IRQHandler+0x160>
        {
          /* Disable the half transfer interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003094:	687b      	ldr	r3, [r7, #4]
 8003096:	681b      	ldr	r3, [r3, #0]
 8003098:	681a      	ldr	r2, [r3, #0]
 800309a:	687b      	ldr	r3, [r7, #4]
 800309c:	681b      	ldr	r3, [r3, #0]
 800309e:	f022 0208 	bic.w	r2, r2, #8
 80030a2:	601a      	str	r2, [r3, #0]
        }
        
        if(hdma->XferHalfCpltCallback != NULL)
 80030a4:	687b      	ldr	r3, [r7, #4]
 80030a6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80030a8:	2b00      	cmp	r3, #0
 80030aa:	d003      	beq.n	80030b4 <HAL_DMA_IRQHandler+0x170>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 80030ac:	687b      	ldr	r3, [r7, #4]
 80030ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80030b0:	6878      	ldr	r0, [r7, #4]
 80030b2:	4798      	blx	r3
        }
      }
    }
  }
  /* Transfer Complete Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 80030b4:	687b      	ldr	r3, [r7, #4]
 80030b6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80030b8:	2220      	movs	r2, #32
 80030ba:	409a      	lsls	r2, r3
 80030bc:	68fb      	ldr	r3, [r7, #12]
 80030be:	4013      	ands	r3, r2
 80030c0:	2b00      	cmp	r3, #0
 80030c2:	f000 808f 	beq.w	80031e4 <HAL_DMA_IRQHandler+0x2a0>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	681b      	ldr	r3, [r3, #0]
 80030ca:	681b      	ldr	r3, [r3, #0]
 80030cc:	f003 0310 	and.w	r3, r3, #16
 80030d0:	2b00      	cmp	r3, #0
 80030d2:	f000 8087 	beq.w	80031e4 <HAL_DMA_IRQHandler+0x2a0>
    {
      /* Clear the transfer complete flag */
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 80030d6:	687b      	ldr	r3, [r7, #4]
 80030d8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80030da:	2220      	movs	r2, #32
 80030dc:	409a      	lsls	r2, r3
 80030de:	693b      	ldr	r3, [r7, #16]
 80030e0:	609a      	str	r2, [r3, #8]
      
      if(HAL_DMA_STATE_ABORT == hdma->State)
 80030e2:	687b      	ldr	r3, [r7, #4]
 80030e4:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80030e8:	b2db      	uxtb	r3, r3
 80030ea:	2b05      	cmp	r3, #5
 80030ec:	d136      	bne.n	800315c <HAL_DMA_IRQHandler+0x218>
      {
        /* Disable all the transfer interrupts */
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 80030ee:	687b      	ldr	r3, [r7, #4]
 80030f0:	681b      	ldr	r3, [r3, #0]
 80030f2:	681a      	ldr	r2, [r3, #0]
 80030f4:	687b      	ldr	r3, [r7, #4]
 80030f6:	681b      	ldr	r3, [r3, #0]
 80030f8:	f022 0216 	bic.w	r2, r2, #22
 80030fc:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 80030fe:	687b      	ldr	r3, [r7, #4]
 8003100:	681b      	ldr	r3, [r3, #0]
 8003102:	695a      	ldr	r2, [r3, #20]
 8003104:	687b      	ldr	r3, [r7, #4]
 8003106:	681b      	ldr	r3, [r3, #0]
 8003108:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800310c:	615a      	str	r2, [r3, #20]
        
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800310e:	687b      	ldr	r3, [r7, #4]
 8003110:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003112:	2b00      	cmp	r3, #0
 8003114:	d103      	bne.n	800311e <HAL_DMA_IRQHandler+0x1da>
 8003116:	687b      	ldr	r3, [r7, #4]
 8003118:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800311a:	2b00      	cmp	r3, #0
 800311c:	d007      	beq.n	800312e <HAL_DMA_IRQHandler+0x1ea>
        {
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 800311e:	687b      	ldr	r3, [r7, #4]
 8003120:	681b      	ldr	r3, [r3, #0]
 8003122:	681a      	ldr	r2, [r3, #0]
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	681b      	ldr	r3, [r3, #0]
 8003128:	f022 0208 	bic.w	r2, r2, #8
 800312c:	601a      	str	r2, [r3, #0]
        }

        /* Clear all interrupt flags at correct offset within the register */
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 800312e:	687b      	ldr	r3, [r7, #4]
 8003130:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003132:	223f      	movs	r2, #63	; 0x3f
 8003134:	409a      	lsls	r2, r3
 8003136:	693b      	ldr	r3, [r7, #16]
 8003138:	609a      	str	r2, [r3, #8]

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 800313a:	687b      	ldr	r3, [r7, #4]
 800313c:	2201      	movs	r2, #1
 800313e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8003142:	687b      	ldr	r3, [r7, #4]
 8003144:	2200      	movs	r2, #0
 8003146:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

        if(hdma->XferAbortCallback != NULL)
 800314a:	687b      	ldr	r3, [r7, #4]
 800314c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800314e:	2b00      	cmp	r3, #0
 8003150:	d07e      	beq.n	8003250 <HAL_DMA_IRQHandler+0x30c>
        {
          hdma->XferAbortCallback(hdma);
 8003152:	687b      	ldr	r3, [r7, #4]
 8003154:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003156:	6878      	ldr	r0, [r7, #4]
 8003158:	4798      	blx	r3
        }
        return;
 800315a:	e079      	b.n	8003250 <HAL_DMA_IRQHandler+0x30c>
      }

      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 800315c:	687b      	ldr	r3, [r7, #4]
 800315e:	681b      	ldr	r3, [r3, #0]
 8003160:	681b      	ldr	r3, [r3, #0]
 8003162:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003166:	2b00      	cmp	r3, #0
 8003168:	d01d      	beq.n	80031a6 <HAL_DMA_IRQHandler+0x262>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 800316a:	687b      	ldr	r3, [r7, #4]
 800316c:	681b      	ldr	r3, [r3, #0]
 800316e:	681b      	ldr	r3, [r3, #0]
 8003170:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8003174:	2b00      	cmp	r3, #0
 8003176:	d10d      	bne.n	8003194 <HAL_DMA_IRQHandler+0x250>
        {
          if(hdma->XferM1CpltCallback != NULL)
 8003178:	687b      	ldr	r3, [r7, #4]
 800317a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800317c:	2b00      	cmp	r3, #0
 800317e:	d031      	beq.n	80031e4 <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory1 */
            hdma->XferM1CpltCallback(hdma);
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003184:	6878      	ldr	r0, [r7, #4]
 8003186:	4798      	blx	r3
 8003188:	e02c      	b.n	80031e4 <HAL_DMA_IRQHandler+0x2a0>
 800318a:	bf00      	nop
 800318c:	20000030 	.word	0x20000030
 8003190:	1b4e81b5 	.word	0x1b4e81b5
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 8003194:	687b      	ldr	r3, [r7, #4]
 8003196:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003198:	2b00      	cmp	r3, #0
 800319a:	d023      	beq.n	80031e4 <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory0 */
            hdma->XferCpltCallback(hdma);
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80031a0:	6878      	ldr	r0, [r7, #4]
 80031a2:	4798      	blx	r3
 80031a4:	e01e      	b.n	80031e4 <HAL_DMA_IRQHandler+0x2a0>
        }
      }
      /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
      else
      {
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 80031a6:	687b      	ldr	r3, [r7, #4]
 80031a8:	681b      	ldr	r3, [r3, #0]
 80031aa:	681b      	ldr	r3, [r3, #0]
 80031ac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80031b0:	2b00      	cmp	r3, #0
 80031b2:	d10f      	bne.n	80031d4 <HAL_DMA_IRQHandler+0x290>
        {
          /* Disable the transfer complete interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 80031b4:	687b      	ldr	r3, [r7, #4]
 80031b6:	681b      	ldr	r3, [r3, #0]
 80031b8:	681a      	ldr	r2, [r3, #0]
 80031ba:	687b      	ldr	r3, [r7, #4]
 80031bc:	681b      	ldr	r3, [r3, #0]
 80031be:	f022 0210 	bic.w	r2, r2, #16
 80031c2:	601a      	str	r2, [r3, #0]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 80031c4:	687b      	ldr	r3, [r7, #4]
 80031c6:	2201      	movs	r2, #1
 80031c8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 80031cc:	687b      	ldr	r3, [r7, #4]
 80031ce:	2200      	movs	r2, #0
 80031d0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        }

        if(hdma->XferCpltCallback != NULL)
 80031d4:	687b      	ldr	r3, [r7, #4]
 80031d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80031d8:	2b00      	cmp	r3, #0
 80031da:	d003      	beq.n	80031e4 <HAL_DMA_IRQHandler+0x2a0>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 80031dc:	687b      	ldr	r3, [r7, #4]
 80031de:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80031e0:	6878      	ldr	r0, [r7, #4]
 80031e2:	4798      	blx	r3
      }
    }
  }
  
  /* manage error case */
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 80031e4:	687b      	ldr	r3, [r7, #4]
 80031e6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80031e8:	2b00      	cmp	r3, #0
 80031ea:	d032      	beq.n	8003252 <HAL_DMA_IRQHandler+0x30e>
  {
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 80031ec:	687b      	ldr	r3, [r7, #4]
 80031ee:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80031f0:	f003 0301 	and.w	r3, r3, #1
 80031f4:	2b00      	cmp	r3, #0
 80031f6:	d022      	beq.n	800323e <HAL_DMA_IRQHandler+0x2fa>
    {
      hdma->State = HAL_DMA_STATE_ABORT;
 80031f8:	687b      	ldr	r3, [r7, #4]
 80031fa:	2205      	movs	r2, #5
 80031fc:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	681b      	ldr	r3, [r3, #0]
 8003204:	681a      	ldr	r2, [r3, #0]
 8003206:	687b      	ldr	r3, [r7, #4]
 8003208:	681b      	ldr	r3, [r3, #0]
 800320a:	f022 0201 	bic.w	r2, r2, #1
 800320e:	601a      	str	r2, [r3, #0]

      do
      {
        if (++count > timeout)
 8003210:	68bb      	ldr	r3, [r7, #8]
 8003212:	3301      	adds	r3, #1
 8003214:	60bb      	str	r3, [r7, #8]
 8003216:	697a      	ldr	r2, [r7, #20]
 8003218:	429a      	cmp	r2, r3
 800321a:	d307      	bcc.n	800322c <HAL_DMA_IRQHandler+0x2e8>
        {
          break;
        }
      }
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 800321c:	687b      	ldr	r3, [r7, #4]
 800321e:	681b      	ldr	r3, [r3, #0]
 8003220:	681b      	ldr	r3, [r3, #0]
 8003222:	f003 0301 	and.w	r3, r3, #1
 8003226:	2b00      	cmp	r3, #0
 8003228:	d1f2      	bne.n	8003210 <HAL_DMA_IRQHandler+0x2cc>
 800322a:	e000      	b.n	800322e <HAL_DMA_IRQHandler+0x2ea>
          break;
 800322c:	bf00      	nop

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 800322e:	687b      	ldr	r3, [r7, #4]
 8003230:	2201      	movs	r2, #1
 8003232:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8003236:	687b      	ldr	r3, [r7, #4]
 8003238:	2200      	movs	r2, #0
 800323a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }

    if(hdma->XferErrorCallback != NULL)
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003242:	2b00      	cmp	r3, #0
 8003244:	d005      	beq.n	8003252 <HAL_DMA_IRQHandler+0x30e>
    {
      /* Transfer error callback */
      hdma->XferErrorCallback(hdma);
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800324a:	6878      	ldr	r0, [r7, #4]
 800324c:	4798      	blx	r3
 800324e:	e000      	b.n	8003252 <HAL_DMA_IRQHandler+0x30e>
        return;
 8003250:	bf00      	nop
    }
  }
}
 8003252:	3718      	adds	r7, #24
 8003254:	46bd      	mov	sp, r7
 8003256:	bd80      	pop	{r7, pc}

08003258 <DMA_SetConfig>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8003258:	b480      	push	{r7}
 800325a:	b085      	sub	sp, #20
 800325c:	af00      	add	r7, sp, #0
 800325e:	60f8      	str	r0, [r7, #12]
 8003260:	60b9      	str	r1, [r7, #8]
 8003262:	607a      	str	r2, [r7, #4]
 8003264:	603b      	str	r3, [r7, #0]
  /* Clear DBM bit */
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8003266:	68fb      	ldr	r3, [r7, #12]
 8003268:	681b      	ldr	r3, [r3, #0]
 800326a:	681a      	ldr	r2, [r3, #0]
 800326c:	68fb      	ldr	r3, [r7, #12]
 800326e:	681b      	ldr	r3, [r3, #0]
 8003270:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003274:	601a      	str	r2, [r3, #0]

  /* Configure DMA Stream data length */
  hdma->Instance->NDTR = DataLength;
 8003276:	68fb      	ldr	r3, [r7, #12]
 8003278:	681b      	ldr	r3, [r3, #0]
 800327a:	683a      	ldr	r2, [r7, #0]
 800327c:	605a      	str	r2, [r3, #4]

  /* Memory to Peripheral */
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 800327e:	68fb      	ldr	r3, [r7, #12]
 8003280:	689b      	ldr	r3, [r3, #8]
 8003282:	2b40      	cmp	r3, #64	; 0x40
 8003284:	d108      	bne.n	8003298 <DMA_SetConfig+0x40>
  {
    /* Configure DMA Stream destination address */
    hdma->Instance->PAR = DstAddress;
 8003286:	68fb      	ldr	r3, [r7, #12]
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	687a      	ldr	r2, [r7, #4]
 800328c:	609a      	str	r2, [r3, #8]

    /* Configure DMA Stream source address */
    hdma->Instance->M0AR = SrcAddress;
 800328e:	68fb      	ldr	r3, [r7, #12]
 8003290:	681b      	ldr	r3, [r3, #0]
 8003292:	68ba      	ldr	r2, [r7, #8]
 8003294:	60da      	str	r2, [r3, #12]
    hdma->Instance->PAR = SrcAddress;

    /* Configure DMA Stream destination address */
    hdma->Instance->M0AR = DstAddress;
  }
}
 8003296:	e007      	b.n	80032a8 <DMA_SetConfig+0x50>
    hdma->Instance->PAR = SrcAddress;
 8003298:	68fb      	ldr	r3, [r7, #12]
 800329a:	681b      	ldr	r3, [r3, #0]
 800329c:	68ba      	ldr	r2, [r7, #8]
 800329e:	609a      	str	r2, [r3, #8]
    hdma->Instance->M0AR = DstAddress;
 80032a0:	68fb      	ldr	r3, [r7, #12]
 80032a2:	681b      	ldr	r3, [r3, #0]
 80032a4:	687a      	ldr	r2, [r7, #4]
 80032a6:	60da      	str	r2, [r3, #12]
}
 80032a8:	bf00      	nop
 80032aa:	3714      	adds	r7, #20
 80032ac:	46bd      	mov	sp, r7
 80032ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032b2:	4770      	bx	lr

080032b4 <DMA_CalcBaseAndBitshift>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 80032b4:	b480      	push	{r7}
 80032b6:	b085      	sub	sp, #20
 80032b8:	af00      	add	r7, sp, #0
 80032ba:	6078      	str	r0, [r7, #4]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	681b      	ldr	r3, [r3, #0]
 80032c0:	b2db      	uxtb	r3, r3
 80032c2:	3b10      	subs	r3, #16
 80032c4:	4a14      	ldr	r2, [pc, #80]	; (8003318 <DMA_CalcBaseAndBitshift+0x64>)
 80032c6:	fba2 2303 	umull	r2, r3, r2, r3
 80032ca:	091b      	lsrs	r3, r3, #4
 80032cc:	60fb      	str	r3, [r7, #12]
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 80032ce:	4a13      	ldr	r2, [pc, #76]	; (800331c <DMA_CalcBaseAndBitshift+0x68>)
 80032d0:	68fb      	ldr	r3, [r7, #12]
 80032d2:	4413      	add	r3, r2
 80032d4:	781b      	ldrb	r3, [r3, #0]
 80032d6:	461a      	mov	r2, r3
 80032d8:	687b      	ldr	r3, [r7, #4]
 80032da:	65da      	str	r2, [r3, #92]	; 0x5c
  
  if (stream_number > 3U)
 80032dc:	68fb      	ldr	r3, [r7, #12]
 80032de:	2b03      	cmp	r3, #3
 80032e0:	d909      	bls.n	80032f6 <DMA_CalcBaseAndBitshift+0x42>
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 80032e2:	687b      	ldr	r3, [r7, #4]
 80032e4:	681b      	ldr	r3, [r3, #0]
 80032e6:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80032ea:	f023 0303 	bic.w	r3, r3, #3
 80032ee:	1d1a      	adds	r2, r3, #4
 80032f0:	687b      	ldr	r3, [r7, #4]
 80032f2:	659a      	str	r2, [r3, #88]	; 0x58
 80032f4:	e007      	b.n	8003306 <DMA_CalcBaseAndBitshift+0x52>
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 80032f6:	687b      	ldr	r3, [r7, #4]
 80032f8:	681b      	ldr	r3, [r3, #0]
 80032fa:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80032fe:	f023 0303 	bic.w	r3, r3, #3
 8003302:	687a      	ldr	r2, [r7, #4]
 8003304:	6593      	str	r3, [r2, #88]	; 0x58
  }
  
  return hdma->StreamBaseAddress;
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	6d9b      	ldr	r3, [r3, #88]	; 0x58
}
 800330a:	4618      	mov	r0, r3
 800330c:	3714      	adds	r7, #20
 800330e:	46bd      	mov	sp, r7
 8003310:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003314:	4770      	bx	lr
 8003316:	bf00      	nop
 8003318:	aaaaaaab 	.word	0xaaaaaaab
 800331c:	0802b214 	.word	0x0802b214

08003320 <DMA_CheckFifoParam>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8003320:	b480      	push	{r7}
 8003322:	b085      	sub	sp, #20
 8003324:	af00      	add	r7, sp, #0
 8003326:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8003328:	2300      	movs	r3, #0
 800332a:	73fb      	strb	r3, [r7, #15]
  uint32_t tmp = hdma->Init.FIFOThreshold;
 800332c:	687b      	ldr	r3, [r7, #4]
 800332e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003330:	60bb      	str	r3, [r7, #8]
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8003332:	687b      	ldr	r3, [r7, #4]
 8003334:	699b      	ldr	r3, [r3, #24]
 8003336:	2b00      	cmp	r3, #0
 8003338:	d11f      	bne.n	800337a <DMA_CheckFifoParam+0x5a>
  {
    switch (tmp)
 800333a:	68bb      	ldr	r3, [r7, #8]
 800333c:	2b03      	cmp	r3, #3
 800333e:	d856      	bhi.n	80033ee <DMA_CheckFifoParam+0xce>
 8003340:	a201      	add	r2, pc, #4	; (adr r2, 8003348 <DMA_CheckFifoParam+0x28>)
 8003342:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003346:	bf00      	nop
 8003348:	08003359 	.word	0x08003359
 800334c:	0800336b 	.word	0x0800336b
 8003350:	08003359 	.word	0x08003359
 8003354:	080033ef 	.word	0x080033ef
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800335c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003360:	2b00      	cmp	r3, #0
 8003362:	d046      	beq.n	80033f2 <DMA_CheckFifoParam+0xd2>
      {
        status = HAL_ERROR;
 8003364:	2301      	movs	r3, #1
 8003366:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003368:	e043      	b.n	80033f2 <DMA_CheckFifoParam+0xd2>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 800336a:	687b      	ldr	r3, [r7, #4]
 800336c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800336e:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8003372:	d140      	bne.n	80033f6 <DMA_CheckFifoParam+0xd6>
      {
        status = HAL_ERROR;
 8003374:	2301      	movs	r3, #1
 8003376:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003378:	e03d      	b.n	80033f6 <DMA_CheckFifoParam+0xd6>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800337a:	687b      	ldr	r3, [r7, #4]
 800337c:	699b      	ldr	r3, [r3, #24]
 800337e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003382:	d121      	bne.n	80033c8 <DMA_CheckFifoParam+0xa8>
  {
    switch (tmp)
 8003384:	68bb      	ldr	r3, [r7, #8]
 8003386:	2b03      	cmp	r3, #3
 8003388:	d837      	bhi.n	80033fa <DMA_CheckFifoParam+0xda>
 800338a:	a201      	add	r2, pc, #4	; (adr r2, 8003390 <DMA_CheckFifoParam+0x70>)
 800338c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003390:	080033a1 	.word	0x080033a1
 8003394:	080033a7 	.word	0x080033a7
 8003398:	080033a1 	.word	0x080033a1
 800339c:	080033b9 	.word	0x080033b9
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
 80033a0:	2301      	movs	r3, #1
 80033a2:	73fb      	strb	r3, [r7, #15]
      break;
 80033a4:	e030      	b.n	8003408 <DMA_CheckFifoParam+0xe8>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 80033a6:	687b      	ldr	r3, [r7, #4]
 80033a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80033aa:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80033ae:	2b00      	cmp	r3, #0
 80033b0:	d025      	beq.n	80033fe <DMA_CheckFifoParam+0xde>
      {
        status = HAL_ERROR;
 80033b2:	2301      	movs	r3, #1
 80033b4:	73fb      	strb	r3, [r7, #15]
      }
      break;
 80033b6:	e022      	b.n	80033fe <DMA_CheckFifoParam+0xde>
    case DMA_FIFO_THRESHOLD_FULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 80033b8:	687b      	ldr	r3, [r7, #4]
 80033ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80033bc:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80033c0:	d11f      	bne.n	8003402 <DMA_CheckFifoParam+0xe2>
      {
        status = HAL_ERROR;
 80033c2:	2301      	movs	r3, #1
 80033c4:	73fb      	strb	r3, [r7, #15]
      }
      break;   
 80033c6:	e01c      	b.n	8003402 <DMA_CheckFifoParam+0xe2>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 80033c8:	68bb      	ldr	r3, [r7, #8]
 80033ca:	2b02      	cmp	r3, #2
 80033cc:	d903      	bls.n	80033d6 <DMA_CheckFifoParam+0xb6>
 80033ce:	68bb      	ldr	r3, [r7, #8]
 80033d0:	2b03      	cmp	r3, #3
 80033d2:	d003      	beq.n	80033dc <DMA_CheckFifoParam+0xbc>
      {
        status = HAL_ERROR;
      }
      break;
    default:
      break;
 80033d4:	e018      	b.n	8003408 <DMA_CheckFifoParam+0xe8>
      status = HAL_ERROR;
 80033d6:	2301      	movs	r3, #1
 80033d8:	73fb      	strb	r3, [r7, #15]
      break;
 80033da:	e015      	b.n	8003408 <DMA_CheckFifoParam+0xe8>
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80033e0:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80033e4:	2b00      	cmp	r3, #0
 80033e6:	d00e      	beq.n	8003406 <DMA_CheckFifoParam+0xe6>
        status = HAL_ERROR;
 80033e8:	2301      	movs	r3, #1
 80033ea:	73fb      	strb	r3, [r7, #15]
      break;
 80033ec:	e00b      	b.n	8003406 <DMA_CheckFifoParam+0xe6>
      break;
 80033ee:	bf00      	nop
 80033f0:	e00a      	b.n	8003408 <DMA_CheckFifoParam+0xe8>
      break;
 80033f2:	bf00      	nop
 80033f4:	e008      	b.n	8003408 <DMA_CheckFifoParam+0xe8>
      break;
 80033f6:	bf00      	nop
 80033f8:	e006      	b.n	8003408 <DMA_CheckFifoParam+0xe8>
      break;
 80033fa:	bf00      	nop
 80033fc:	e004      	b.n	8003408 <DMA_CheckFifoParam+0xe8>
      break;
 80033fe:	bf00      	nop
 8003400:	e002      	b.n	8003408 <DMA_CheckFifoParam+0xe8>
      break;   
 8003402:	bf00      	nop
 8003404:	e000      	b.n	8003408 <DMA_CheckFifoParam+0xe8>
      break;
 8003406:	bf00      	nop
    }
  } 
  
  return status; 
 8003408:	7bfb      	ldrb	r3, [r7, #15]
}
 800340a:	4618      	mov	r0, r3
 800340c:	3714      	adds	r7, #20
 800340e:	46bd      	mov	sp, r7
 8003410:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003414:	4770      	bx	lr
 8003416:	bf00      	nop

08003418 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003418:	b480      	push	{r7}
 800341a:	b089      	sub	sp, #36	; 0x24
 800341c:	af00      	add	r7, sp, #0
 800341e:	6078      	str	r0, [r7, #4]
 8003420:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8003422:	2300      	movs	r3, #0
 8003424:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8003426:	2300      	movs	r3, #0
 8003428:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 800342a:	2300      	movs	r3, #0
 800342c:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 800342e:	2300      	movs	r3, #0
 8003430:	61fb      	str	r3, [r7, #28]
 8003432:	e177      	b.n	8003724 <HAL_GPIO_Init+0x30c>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8003434:	2201      	movs	r2, #1
 8003436:	69fb      	ldr	r3, [r7, #28]
 8003438:	fa02 f303 	lsl.w	r3, r2, r3
 800343c:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800343e:	683b      	ldr	r3, [r7, #0]
 8003440:	681b      	ldr	r3, [r3, #0]
 8003442:	697a      	ldr	r2, [r7, #20]
 8003444:	4013      	ands	r3, r2
 8003446:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8003448:	693a      	ldr	r2, [r7, #16]
 800344a:	697b      	ldr	r3, [r7, #20]
 800344c:	429a      	cmp	r2, r3
 800344e:	f040 8166 	bne.w	800371e <HAL_GPIO_Init+0x306>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003452:	683b      	ldr	r3, [r7, #0]
 8003454:	685b      	ldr	r3, [r3, #4]
 8003456:	f003 0303 	and.w	r3, r3, #3
 800345a:	2b01      	cmp	r3, #1
 800345c:	d005      	beq.n	800346a <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800345e:	683b      	ldr	r3, [r7, #0]
 8003460:	685b      	ldr	r3, [r3, #4]
 8003462:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003466:	2b02      	cmp	r3, #2
 8003468:	d130      	bne.n	80034cc <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 800346a:	687b      	ldr	r3, [r7, #4]
 800346c:	689b      	ldr	r3, [r3, #8]
 800346e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003470:	69fb      	ldr	r3, [r7, #28]
 8003472:	005b      	lsls	r3, r3, #1
 8003474:	2203      	movs	r2, #3
 8003476:	fa02 f303 	lsl.w	r3, r2, r3
 800347a:	43db      	mvns	r3, r3
 800347c:	69ba      	ldr	r2, [r7, #24]
 800347e:	4013      	ands	r3, r2
 8003480:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8003482:	683b      	ldr	r3, [r7, #0]
 8003484:	68da      	ldr	r2, [r3, #12]
 8003486:	69fb      	ldr	r3, [r7, #28]
 8003488:	005b      	lsls	r3, r3, #1
 800348a:	fa02 f303 	lsl.w	r3, r2, r3
 800348e:	69ba      	ldr	r2, [r7, #24]
 8003490:	4313      	orrs	r3, r2
 8003492:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8003494:	687b      	ldr	r3, [r7, #4]
 8003496:	69ba      	ldr	r2, [r7, #24]
 8003498:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 800349a:	687b      	ldr	r3, [r7, #4]
 800349c:	685b      	ldr	r3, [r3, #4]
 800349e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80034a0:	2201      	movs	r2, #1
 80034a2:	69fb      	ldr	r3, [r7, #28]
 80034a4:	fa02 f303 	lsl.w	r3, r2, r3
 80034a8:	43db      	mvns	r3, r3
 80034aa:	69ba      	ldr	r2, [r7, #24]
 80034ac:	4013      	ands	r3, r2
 80034ae:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80034b0:	683b      	ldr	r3, [r7, #0]
 80034b2:	685b      	ldr	r3, [r3, #4]
 80034b4:	091b      	lsrs	r3, r3, #4
 80034b6:	f003 0201 	and.w	r2, r3, #1
 80034ba:	69fb      	ldr	r3, [r7, #28]
 80034bc:	fa02 f303 	lsl.w	r3, r2, r3
 80034c0:	69ba      	ldr	r2, [r7, #24]
 80034c2:	4313      	orrs	r3, r2
 80034c4:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	69ba      	ldr	r2, [r7, #24]
 80034ca:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80034cc:	683b      	ldr	r3, [r7, #0]
 80034ce:	685b      	ldr	r3, [r3, #4]
 80034d0:	f003 0303 	and.w	r3, r3, #3
 80034d4:	2b03      	cmp	r3, #3
 80034d6:	d017      	beq.n	8003508 <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 80034d8:	687b      	ldr	r3, [r7, #4]
 80034da:	68db      	ldr	r3, [r3, #12]
 80034dc:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80034de:	69fb      	ldr	r3, [r7, #28]
 80034e0:	005b      	lsls	r3, r3, #1
 80034e2:	2203      	movs	r2, #3
 80034e4:	fa02 f303 	lsl.w	r3, r2, r3
 80034e8:	43db      	mvns	r3, r3
 80034ea:	69ba      	ldr	r2, [r7, #24]
 80034ec:	4013      	ands	r3, r2
 80034ee:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 80034f0:	683b      	ldr	r3, [r7, #0]
 80034f2:	689a      	ldr	r2, [r3, #8]
 80034f4:	69fb      	ldr	r3, [r7, #28]
 80034f6:	005b      	lsls	r3, r3, #1
 80034f8:	fa02 f303 	lsl.w	r3, r2, r3
 80034fc:	69ba      	ldr	r2, [r7, #24]
 80034fe:	4313      	orrs	r3, r2
 8003500:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 8003502:	687b      	ldr	r3, [r7, #4]
 8003504:	69ba      	ldr	r2, [r7, #24]
 8003506:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003508:	683b      	ldr	r3, [r7, #0]
 800350a:	685b      	ldr	r3, [r3, #4]
 800350c:	f003 0303 	and.w	r3, r3, #3
 8003510:	2b02      	cmp	r3, #2
 8003512:	d123      	bne.n	800355c <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8003514:	69fb      	ldr	r3, [r7, #28]
 8003516:	08da      	lsrs	r2, r3, #3
 8003518:	687b      	ldr	r3, [r7, #4]
 800351a:	3208      	adds	r2, #8
 800351c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003520:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003522:	69fb      	ldr	r3, [r7, #28]
 8003524:	f003 0307 	and.w	r3, r3, #7
 8003528:	009b      	lsls	r3, r3, #2
 800352a:	220f      	movs	r2, #15
 800352c:	fa02 f303 	lsl.w	r3, r2, r3
 8003530:	43db      	mvns	r3, r3
 8003532:	69ba      	ldr	r2, [r7, #24]
 8003534:	4013      	ands	r3, r2
 8003536:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8003538:	683b      	ldr	r3, [r7, #0]
 800353a:	691a      	ldr	r2, [r3, #16]
 800353c:	69fb      	ldr	r3, [r7, #28]
 800353e:	f003 0307 	and.w	r3, r3, #7
 8003542:	009b      	lsls	r3, r3, #2
 8003544:	fa02 f303 	lsl.w	r3, r2, r3
 8003548:	69ba      	ldr	r2, [r7, #24]
 800354a:	4313      	orrs	r3, r2
 800354c:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 800354e:	69fb      	ldr	r3, [r7, #28]
 8003550:	08da      	lsrs	r2, r3, #3
 8003552:	687b      	ldr	r3, [r7, #4]
 8003554:	3208      	adds	r2, #8
 8003556:	69b9      	ldr	r1, [r7, #24]
 8003558:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	681b      	ldr	r3, [r3, #0]
 8003560:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8003562:	69fb      	ldr	r3, [r7, #28]
 8003564:	005b      	lsls	r3, r3, #1
 8003566:	2203      	movs	r2, #3
 8003568:	fa02 f303 	lsl.w	r3, r2, r3
 800356c:	43db      	mvns	r3, r3
 800356e:	69ba      	ldr	r2, [r7, #24]
 8003570:	4013      	ands	r3, r2
 8003572:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003574:	683b      	ldr	r3, [r7, #0]
 8003576:	685b      	ldr	r3, [r3, #4]
 8003578:	f003 0203 	and.w	r2, r3, #3
 800357c:	69fb      	ldr	r3, [r7, #28]
 800357e:	005b      	lsls	r3, r3, #1
 8003580:	fa02 f303 	lsl.w	r3, r2, r3
 8003584:	69ba      	ldr	r2, [r7, #24]
 8003586:	4313      	orrs	r3, r2
 8003588:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 800358a:	687b      	ldr	r3, [r7, #4]
 800358c:	69ba      	ldr	r2, [r7, #24]
 800358e:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8003590:	683b      	ldr	r3, [r7, #0]
 8003592:	685b      	ldr	r3, [r3, #4]
 8003594:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003598:	2b00      	cmp	r3, #0
 800359a:	f000 80c0 	beq.w	800371e <HAL_GPIO_Init+0x306>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800359e:	2300      	movs	r3, #0
 80035a0:	60fb      	str	r3, [r7, #12]
 80035a2:	4b66      	ldr	r3, [pc, #408]	; (800373c <HAL_GPIO_Init+0x324>)
 80035a4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80035a6:	4a65      	ldr	r2, [pc, #404]	; (800373c <HAL_GPIO_Init+0x324>)
 80035a8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80035ac:	6453      	str	r3, [r2, #68]	; 0x44
 80035ae:	4b63      	ldr	r3, [pc, #396]	; (800373c <HAL_GPIO_Init+0x324>)
 80035b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80035b2:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80035b6:	60fb      	str	r3, [r7, #12]
 80035b8:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 80035ba:	4a61      	ldr	r2, [pc, #388]	; (8003740 <HAL_GPIO_Init+0x328>)
 80035bc:	69fb      	ldr	r3, [r7, #28]
 80035be:	089b      	lsrs	r3, r3, #2
 80035c0:	3302      	adds	r3, #2
 80035c2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80035c6:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80035c8:	69fb      	ldr	r3, [r7, #28]
 80035ca:	f003 0303 	and.w	r3, r3, #3
 80035ce:	009b      	lsls	r3, r3, #2
 80035d0:	220f      	movs	r2, #15
 80035d2:	fa02 f303 	lsl.w	r3, r2, r3
 80035d6:	43db      	mvns	r3, r3
 80035d8:	69ba      	ldr	r2, [r7, #24]
 80035da:	4013      	ands	r3, r2
 80035dc:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	4a58      	ldr	r2, [pc, #352]	; (8003744 <HAL_GPIO_Init+0x32c>)
 80035e2:	4293      	cmp	r3, r2
 80035e4:	d037      	beq.n	8003656 <HAL_GPIO_Init+0x23e>
 80035e6:	687b      	ldr	r3, [r7, #4]
 80035e8:	4a57      	ldr	r2, [pc, #348]	; (8003748 <HAL_GPIO_Init+0x330>)
 80035ea:	4293      	cmp	r3, r2
 80035ec:	d031      	beq.n	8003652 <HAL_GPIO_Init+0x23a>
 80035ee:	687b      	ldr	r3, [r7, #4]
 80035f0:	4a56      	ldr	r2, [pc, #344]	; (800374c <HAL_GPIO_Init+0x334>)
 80035f2:	4293      	cmp	r3, r2
 80035f4:	d02b      	beq.n	800364e <HAL_GPIO_Init+0x236>
 80035f6:	687b      	ldr	r3, [r7, #4]
 80035f8:	4a55      	ldr	r2, [pc, #340]	; (8003750 <HAL_GPIO_Init+0x338>)
 80035fa:	4293      	cmp	r3, r2
 80035fc:	d025      	beq.n	800364a <HAL_GPIO_Init+0x232>
 80035fe:	687b      	ldr	r3, [r7, #4]
 8003600:	4a54      	ldr	r2, [pc, #336]	; (8003754 <HAL_GPIO_Init+0x33c>)
 8003602:	4293      	cmp	r3, r2
 8003604:	d01f      	beq.n	8003646 <HAL_GPIO_Init+0x22e>
 8003606:	687b      	ldr	r3, [r7, #4]
 8003608:	4a53      	ldr	r2, [pc, #332]	; (8003758 <HAL_GPIO_Init+0x340>)
 800360a:	4293      	cmp	r3, r2
 800360c:	d019      	beq.n	8003642 <HAL_GPIO_Init+0x22a>
 800360e:	687b      	ldr	r3, [r7, #4]
 8003610:	4a52      	ldr	r2, [pc, #328]	; (800375c <HAL_GPIO_Init+0x344>)
 8003612:	4293      	cmp	r3, r2
 8003614:	d013      	beq.n	800363e <HAL_GPIO_Init+0x226>
 8003616:	687b      	ldr	r3, [r7, #4]
 8003618:	4a51      	ldr	r2, [pc, #324]	; (8003760 <HAL_GPIO_Init+0x348>)
 800361a:	4293      	cmp	r3, r2
 800361c:	d00d      	beq.n	800363a <HAL_GPIO_Init+0x222>
 800361e:	687b      	ldr	r3, [r7, #4]
 8003620:	4a50      	ldr	r2, [pc, #320]	; (8003764 <HAL_GPIO_Init+0x34c>)
 8003622:	4293      	cmp	r3, r2
 8003624:	d007      	beq.n	8003636 <HAL_GPIO_Init+0x21e>
 8003626:	687b      	ldr	r3, [r7, #4]
 8003628:	4a4f      	ldr	r2, [pc, #316]	; (8003768 <HAL_GPIO_Init+0x350>)
 800362a:	4293      	cmp	r3, r2
 800362c:	d101      	bne.n	8003632 <HAL_GPIO_Init+0x21a>
 800362e:	2309      	movs	r3, #9
 8003630:	e012      	b.n	8003658 <HAL_GPIO_Init+0x240>
 8003632:	230a      	movs	r3, #10
 8003634:	e010      	b.n	8003658 <HAL_GPIO_Init+0x240>
 8003636:	2308      	movs	r3, #8
 8003638:	e00e      	b.n	8003658 <HAL_GPIO_Init+0x240>
 800363a:	2307      	movs	r3, #7
 800363c:	e00c      	b.n	8003658 <HAL_GPIO_Init+0x240>
 800363e:	2306      	movs	r3, #6
 8003640:	e00a      	b.n	8003658 <HAL_GPIO_Init+0x240>
 8003642:	2305      	movs	r3, #5
 8003644:	e008      	b.n	8003658 <HAL_GPIO_Init+0x240>
 8003646:	2304      	movs	r3, #4
 8003648:	e006      	b.n	8003658 <HAL_GPIO_Init+0x240>
 800364a:	2303      	movs	r3, #3
 800364c:	e004      	b.n	8003658 <HAL_GPIO_Init+0x240>
 800364e:	2302      	movs	r3, #2
 8003650:	e002      	b.n	8003658 <HAL_GPIO_Init+0x240>
 8003652:	2301      	movs	r3, #1
 8003654:	e000      	b.n	8003658 <HAL_GPIO_Init+0x240>
 8003656:	2300      	movs	r3, #0
 8003658:	69fa      	ldr	r2, [r7, #28]
 800365a:	f002 0203 	and.w	r2, r2, #3
 800365e:	0092      	lsls	r2, r2, #2
 8003660:	4093      	lsls	r3, r2
 8003662:	69ba      	ldr	r2, [r7, #24]
 8003664:	4313      	orrs	r3, r2
 8003666:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8003668:	4935      	ldr	r1, [pc, #212]	; (8003740 <HAL_GPIO_Init+0x328>)
 800366a:	69fb      	ldr	r3, [r7, #28]
 800366c:	089b      	lsrs	r3, r3, #2
 800366e:	3302      	adds	r3, #2
 8003670:	69ba      	ldr	r2, [r7, #24]
 8003672:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8003676:	4b3d      	ldr	r3, [pc, #244]	; (800376c <HAL_GPIO_Init+0x354>)
 8003678:	689b      	ldr	r3, [r3, #8]
 800367a:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800367c:	693b      	ldr	r3, [r7, #16]
 800367e:	43db      	mvns	r3, r3
 8003680:	69ba      	ldr	r2, [r7, #24]
 8003682:	4013      	ands	r3, r2
 8003684:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8003686:	683b      	ldr	r3, [r7, #0]
 8003688:	685b      	ldr	r3, [r3, #4]
 800368a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800368e:	2b00      	cmp	r3, #0
 8003690:	d003      	beq.n	800369a <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 8003692:	69ba      	ldr	r2, [r7, #24]
 8003694:	693b      	ldr	r3, [r7, #16]
 8003696:	4313      	orrs	r3, r2
 8003698:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 800369a:	4a34      	ldr	r2, [pc, #208]	; (800376c <HAL_GPIO_Init+0x354>)
 800369c:	69bb      	ldr	r3, [r7, #24]
 800369e:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 80036a0:	4b32      	ldr	r3, [pc, #200]	; (800376c <HAL_GPIO_Init+0x354>)
 80036a2:	68db      	ldr	r3, [r3, #12]
 80036a4:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80036a6:	693b      	ldr	r3, [r7, #16]
 80036a8:	43db      	mvns	r3, r3
 80036aa:	69ba      	ldr	r2, [r7, #24]
 80036ac:	4013      	ands	r3, r2
 80036ae:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80036b0:	683b      	ldr	r3, [r7, #0]
 80036b2:	685b      	ldr	r3, [r3, #4]
 80036b4:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80036b8:	2b00      	cmp	r3, #0
 80036ba:	d003      	beq.n	80036c4 <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 80036bc:	69ba      	ldr	r2, [r7, #24]
 80036be:	693b      	ldr	r3, [r7, #16]
 80036c0:	4313      	orrs	r3, r2
 80036c2:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 80036c4:	4a29      	ldr	r2, [pc, #164]	; (800376c <HAL_GPIO_Init+0x354>)
 80036c6:	69bb      	ldr	r3, [r7, #24]
 80036c8:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 80036ca:	4b28      	ldr	r3, [pc, #160]	; (800376c <HAL_GPIO_Init+0x354>)
 80036cc:	685b      	ldr	r3, [r3, #4]
 80036ce:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80036d0:	693b      	ldr	r3, [r7, #16]
 80036d2:	43db      	mvns	r3, r3
 80036d4:	69ba      	ldr	r2, [r7, #24]
 80036d6:	4013      	ands	r3, r2
 80036d8:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80036da:	683b      	ldr	r3, [r7, #0]
 80036dc:	685b      	ldr	r3, [r3, #4]
 80036de:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80036e2:	2b00      	cmp	r3, #0
 80036e4:	d003      	beq.n	80036ee <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
 80036e6:	69ba      	ldr	r2, [r7, #24]
 80036e8:	693b      	ldr	r3, [r7, #16]
 80036ea:	4313      	orrs	r3, r2
 80036ec:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 80036ee:	4a1f      	ldr	r2, [pc, #124]	; (800376c <HAL_GPIO_Init+0x354>)
 80036f0:	69bb      	ldr	r3, [r7, #24]
 80036f2:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80036f4:	4b1d      	ldr	r3, [pc, #116]	; (800376c <HAL_GPIO_Init+0x354>)
 80036f6:	681b      	ldr	r3, [r3, #0]
 80036f8:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80036fa:	693b      	ldr	r3, [r7, #16]
 80036fc:	43db      	mvns	r3, r3
 80036fe:	69ba      	ldr	r2, [r7, #24]
 8003700:	4013      	ands	r3, r2
 8003702:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8003704:	683b      	ldr	r3, [r7, #0]
 8003706:	685b      	ldr	r3, [r3, #4]
 8003708:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800370c:	2b00      	cmp	r3, #0
 800370e:	d003      	beq.n	8003718 <HAL_GPIO_Init+0x300>
        {
          temp |= iocurrent;
 8003710:	69ba      	ldr	r2, [r7, #24]
 8003712:	693b      	ldr	r3, [r7, #16]
 8003714:	4313      	orrs	r3, r2
 8003716:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8003718:	4a14      	ldr	r2, [pc, #80]	; (800376c <HAL_GPIO_Init+0x354>)
 800371a:	69bb      	ldr	r3, [r7, #24]
 800371c:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800371e:	69fb      	ldr	r3, [r7, #28]
 8003720:	3301      	adds	r3, #1
 8003722:	61fb      	str	r3, [r7, #28]
 8003724:	69fb      	ldr	r3, [r7, #28]
 8003726:	2b0f      	cmp	r3, #15
 8003728:	f67f ae84 	bls.w	8003434 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 800372c:	bf00      	nop
 800372e:	bf00      	nop
 8003730:	3724      	adds	r7, #36	; 0x24
 8003732:	46bd      	mov	sp, r7
 8003734:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003738:	4770      	bx	lr
 800373a:	bf00      	nop
 800373c:	40023800 	.word	0x40023800
 8003740:	40013800 	.word	0x40013800
 8003744:	40020000 	.word	0x40020000
 8003748:	40020400 	.word	0x40020400
 800374c:	40020800 	.word	0x40020800
 8003750:	40020c00 	.word	0x40020c00
 8003754:	40021000 	.word	0x40021000
 8003758:	40021400 	.word	0x40021400
 800375c:	40021800 	.word	0x40021800
 8003760:	40021c00 	.word	0x40021c00
 8003764:	40022000 	.word	0x40022000
 8003768:	40022400 	.word	0x40022400
 800376c:	40013c00 	.word	0x40013c00

08003770 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8003770:	b480      	push	{r7}
 8003772:	b083      	sub	sp, #12
 8003774:	af00      	add	r7, sp, #0
 8003776:	6078      	str	r0, [r7, #4]
 8003778:	460b      	mov	r3, r1
 800377a:	807b      	strh	r3, [r7, #2]
 800377c:	4613      	mov	r3, r2
 800377e:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8003780:	787b      	ldrb	r3, [r7, #1]
 8003782:	2b00      	cmp	r3, #0
 8003784:	d003      	beq.n	800378e <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8003786:	887a      	ldrh	r2, [r7, #2]
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 800378c:	e003      	b.n	8003796 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800378e:	887b      	ldrh	r3, [r7, #2]
 8003790:	041a      	lsls	r2, r3, #16
 8003792:	687b      	ldr	r3, [r7, #4]
 8003794:	619a      	str	r2, [r3, #24]
}
 8003796:	bf00      	nop
 8003798:	370c      	adds	r7, #12
 800379a:	46bd      	mov	sp, r7
 800379c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037a0:	4770      	bx	lr
	...

080037a4 <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 80037a4:	b580      	push	{r7, lr}
 80037a6:	b082      	sub	sp, #8
 80037a8:	af00      	add	r7, sp, #0
 80037aa:	4603      	mov	r3, r0
 80037ac:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 80037ae:	4b08      	ldr	r3, [pc, #32]	; (80037d0 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80037b0:	695a      	ldr	r2, [r3, #20]
 80037b2:	88fb      	ldrh	r3, [r7, #6]
 80037b4:	4013      	ands	r3, r2
 80037b6:	2b00      	cmp	r3, #0
 80037b8:	d006      	beq.n	80037c8 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 80037ba:	4a05      	ldr	r2, [pc, #20]	; (80037d0 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80037bc:	88fb      	ldrh	r3, [r7, #6]
 80037be:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 80037c0:	88fb      	ldrh	r3, [r7, #6]
 80037c2:	4618      	mov	r0, r3
 80037c4:	f7fe fb9e 	bl	8001f04 <HAL_GPIO_EXTI_Callback>
  }
}
 80037c8:	bf00      	nop
 80037ca:	3708      	adds	r7, #8
 80037cc:	46bd      	mov	sp, r7
 80037ce:	bd80      	pop	{r7, pc}
 80037d0:	40013c00 	.word	0x40013c00

080037d4 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 80037d4:	b580      	push	{r7, lr}
 80037d6:	b084      	sub	sp, #16
 80037d8:	af00      	add	r7, sp, #0
 80037da:	6078      	str	r0, [r7, #4]
  uint32_t freqrange;
  uint32_t pclk1;

  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 80037dc:	687b      	ldr	r3, [r7, #4]
 80037de:	2b00      	cmp	r3, #0
 80037e0:	d101      	bne.n	80037e6 <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 80037e2:	2301      	movs	r3, #1
 80037e4:	e12b      	b.n	8003a3e <HAL_I2C_Init+0x26a>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 80037e6:	687b      	ldr	r3, [r7, #4]
 80037e8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80037ec:	b2db      	uxtb	r3, r3
 80037ee:	2b00      	cmp	r3, #0
 80037f0:	d106      	bne.n	8003800 <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	2200      	movs	r2, #0
 80037f6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 80037fa:	6878      	ldr	r0, [r7, #4]
 80037fc:	f7fe fc14 	bl	8002028 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 8003800:	687b      	ldr	r3, [r7, #4]
 8003802:	2224      	movs	r2, #36	; 0x24
 8003804:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	681b      	ldr	r3, [r3, #0]
 800380c:	681a      	ldr	r2, [r3, #0]
 800380e:	687b      	ldr	r3, [r7, #4]
 8003810:	681b      	ldr	r3, [r3, #0]
 8003812:	f022 0201 	bic.w	r2, r2, #1
 8003816:	601a      	str	r2, [r3, #0]

  /*Reset I2C*/
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	681b      	ldr	r3, [r3, #0]
 800381c:	681a      	ldr	r2, [r3, #0]
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	681b      	ldr	r3, [r3, #0]
 8003822:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8003826:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8003828:	687b      	ldr	r3, [r7, #4]
 800382a:	681b      	ldr	r3, [r3, #0]
 800382c:	681a      	ldr	r2, [r3, #0]
 800382e:	687b      	ldr	r3, [r7, #4]
 8003830:	681b      	ldr	r3, [r3, #0]
 8003832:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8003836:	601a      	str	r2, [r3, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8003838:	f002 fd62 	bl	8006300 <HAL_RCC_GetPCLK1Freq>
 800383c:	60f8      	str	r0, [r7, #12]

  /* Check the minimum allowed PCLK1 frequency */
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800383e:	687b      	ldr	r3, [r7, #4]
 8003840:	685b      	ldr	r3, [r3, #4]
 8003842:	4a81      	ldr	r2, [pc, #516]	; (8003a48 <HAL_I2C_Init+0x274>)
 8003844:	4293      	cmp	r3, r2
 8003846:	d807      	bhi.n	8003858 <HAL_I2C_Init+0x84>
 8003848:	68fb      	ldr	r3, [r7, #12]
 800384a:	4a80      	ldr	r2, [pc, #512]	; (8003a4c <HAL_I2C_Init+0x278>)
 800384c:	4293      	cmp	r3, r2
 800384e:	bf94      	ite	ls
 8003850:	2301      	movls	r3, #1
 8003852:	2300      	movhi	r3, #0
 8003854:	b2db      	uxtb	r3, r3
 8003856:	e006      	b.n	8003866 <HAL_I2C_Init+0x92>
 8003858:	68fb      	ldr	r3, [r7, #12]
 800385a:	4a7d      	ldr	r2, [pc, #500]	; (8003a50 <HAL_I2C_Init+0x27c>)
 800385c:	4293      	cmp	r3, r2
 800385e:	bf94      	ite	ls
 8003860:	2301      	movls	r3, #1
 8003862:	2300      	movhi	r3, #0
 8003864:	b2db      	uxtb	r3, r3
 8003866:	2b00      	cmp	r3, #0
 8003868:	d001      	beq.n	800386e <HAL_I2C_Init+0x9a>
  {
    return HAL_ERROR;
 800386a:	2301      	movs	r3, #1
 800386c:	e0e7      	b.n	8003a3e <HAL_I2C_Init+0x26a>
  }

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 800386e:	68fb      	ldr	r3, [r7, #12]
 8003870:	4a78      	ldr	r2, [pc, #480]	; (8003a54 <HAL_I2C_Init+0x280>)
 8003872:	fba2 2303 	umull	r2, r3, r2, r3
 8003876:	0c9b      	lsrs	r3, r3, #18
 8003878:	60bb      	str	r3, [r7, #8]

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800387a:	687b      	ldr	r3, [r7, #4]
 800387c:	681b      	ldr	r3, [r3, #0]
 800387e:	685b      	ldr	r3, [r3, #4]
 8003880:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8003884:	687b      	ldr	r3, [r7, #4]
 8003886:	681b      	ldr	r3, [r3, #0]
 8003888:	68ba      	ldr	r2, [r7, #8]
 800388a:	430a      	orrs	r2, r1
 800388c:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800388e:	687b      	ldr	r3, [r7, #4]
 8003890:	681b      	ldr	r3, [r3, #0]
 8003892:	6a1b      	ldr	r3, [r3, #32]
 8003894:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	685b      	ldr	r3, [r3, #4]
 800389c:	4a6a      	ldr	r2, [pc, #424]	; (8003a48 <HAL_I2C_Init+0x274>)
 800389e:	4293      	cmp	r3, r2
 80038a0:	d802      	bhi.n	80038a8 <HAL_I2C_Init+0xd4>
 80038a2:	68bb      	ldr	r3, [r7, #8]
 80038a4:	3301      	adds	r3, #1
 80038a6:	e009      	b.n	80038bc <HAL_I2C_Init+0xe8>
 80038a8:	68bb      	ldr	r3, [r7, #8]
 80038aa:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80038ae:	fb02 f303 	mul.w	r3, r2, r3
 80038b2:	4a69      	ldr	r2, [pc, #420]	; (8003a58 <HAL_I2C_Init+0x284>)
 80038b4:	fba2 2303 	umull	r2, r3, r2, r3
 80038b8:	099b      	lsrs	r3, r3, #6
 80038ba:	3301      	adds	r3, #1
 80038bc:	687a      	ldr	r2, [r7, #4]
 80038be:	6812      	ldr	r2, [r2, #0]
 80038c0:	430b      	orrs	r3, r1
 80038c2:	6213      	str	r3, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80038c4:	687b      	ldr	r3, [r7, #4]
 80038c6:	681b      	ldr	r3, [r3, #0]
 80038c8:	69db      	ldr	r3, [r3, #28]
 80038ca:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 80038ce:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80038d2:	687b      	ldr	r3, [r7, #4]
 80038d4:	685b      	ldr	r3, [r3, #4]
 80038d6:	495c      	ldr	r1, [pc, #368]	; (8003a48 <HAL_I2C_Init+0x274>)
 80038d8:	428b      	cmp	r3, r1
 80038da:	d819      	bhi.n	8003910 <HAL_I2C_Init+0x13c>
 80038dc:	68fb      	ldr	r3, [r7, #12]
 80038de:	1e59      	subs	r1, r3, #1
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	685b      	ldr	r3, [r3, #4]
 80038e4:	005b      	lsls	r3, r3, #1
 80038e6:	fbb1 f3f3 	udiv	r3, r1, r3
 80038ea:	1c59      	adds	r1, r3, #1
 80038ec:	f640 73fc 	movw	r3, #4092	; 0xffc
 80038f0:	400b      	ands	r3, r1
 80038f2:	2b00      	cmp	r3, #0
 80038f4:	d00a      	beq.n	800390c <HAL_I2C_Init+0x138>
 80038f6:	68fb      	ldr	r3, [r7, #12]
 80038f8:	1e59      	subs	r1, r3, #1
 80038fa:	687b      	ldr	r3, [r7, #4]
 80038fc:	685b      	ldr	r3, [r3, #4]
 80038fe:	005b      	lsls	r3, r3, #1
 8003900:	fbb1 f3f3 	udiv	r3, r1, r3
 8003904:	3301      	adds	r3, #1
 8003906:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800390a:	e051      	b.n	80039b0 <HAL_I2C_Init+0x1dc>
 800390c:	2304      	movs	r3, #4
 800390e:	e04f      	b.n	80039b0 <HAL_I2C_Init+0x1dc>
 8003910:	687b      	ldr	r3, [r7, #4]
 8003912:	689b      	ldr	r3, [r3, #8]
 8003914:	2b00      	cmp	r3, #0
 8003916:	d111      	bne.n	800393c <HAL_I2C_Init+0x168>
 8003918:	68fb      	ldr	r3, [r7, #12]
 800391a:	1e58      	subs	r0, r3, #1
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	6859      	ldr	r1, [r3, #4]
 8003920:	460b      	mov	r3, r1
 8003922:	005b      	lsls	r3, r3, #1
 8003924:	440b      	add	r3, r1
 8003926:	fbb0 f3f3 	udiv	r3, r0, r3
 800392a:	3301      	adds	r3, #1
 800392c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003930:	2b00      	cmp	r3, #0
 8003932:	bf0c      	ite	eq
 8003934:	2301      	moveq	r3, #1
 8003936:	2300      	movne	r3, #0
 8003938:	b2db      	uxtb	r3, r3
 800393a:	e012      	b.n	8003962 <HAL_I2C_Init+0x18e>
 800393c:	68fb      	ldr	r3, [r7, #12]
 800393e:	1e58      	subs	r0, r3, #1
 8003940:	687b      	ldr	r3, [r7, #4]
 8003942:	6859      	ldr	r1, [r3, #4]
 8003944:	460b      	mov	r3, r1
 8003946:	009b      	lsls	r3, r3, #2
 8003948:	440b      	add	r3, r1
 800394a:	0099      	lsls	r1, r3, #2
 800394c:	440b      	add	r3, r1
 800394e:	fbb0 f3f3 	udiv	r3, r0, r3
 8003952:	3301      	adds	r3, #1
 8003954:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003958:	2b00      	cmp	r3, #0
 800395a:	bf0c      	ite	eq
 800395c:	2301      	moveq	r3, #1
 800395e:	2300      	movne	r3, #0
 8003960:	b2db      	uxtb	r3, r3
 8003962:	2b00      	cmp	r3, #0
 8003964:	d001      	beq.n	800396a <HAL_I2C_Init+0x196>
 8003966:	2301      	movs	r3, #1
 8003968:	e022      	b.n	80039b0 <HAL_I2C_Init+0x1dc>
 800396a:	687b      	ldr	r3, [r7, #4]
 800396c:	689b      	ldr	r3, [r3, #8]
 800396e:	2b00      	cmp	r3, #0
 8003970:	d10e      	bne.n	8003990 <HAL_I2C_Init+0x1bc>
 8003972:	68fb      	ldr	r3, [r7, #12]
 8003974:	1e58      	subs	r0, r3, #1
 8003976:	687b      	ldr	r3, [r7, #4]
 8003978:	6859      	ldr	r1, [r3, #4]
 800397a:	460b      	mov	r3, r1
 800397c:	005b      	lsls	r3, r3, #1
 800397e:	440b      	add	r3, r1
 8003980:	fbb0 f3f3 	udiv	r3, r0, r3
 8003984:	3301      	adds	r3, #1
 8003986:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800398a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800398e:	e00f      	b.n	80039b0 <HAL_I2C_Init+0x1dc>
 8003990:	68fb      	ldr	r3, [r7, #12]
 8003992:	1e58      	subs	r0, r3, #1
 8003994:	687b      	ldr	r3, [r7, #4]
 8003996:	6859      	ldr	r1, [r3, #4]
 8003998:	460b      	mov	r3, r1
 800399a:	009b      	lsls	r3, r3, #2
 800399c:	440b      	add	r3, r1
 800399e:	0099      	lsls	r1, r3, #2
 80039a0:	440b      	add	r3, r1
 80039a2:	fbb0 f3f3 	udiv	r3, r0, r3
 80039a6:	3301      	adds	r3, #1
 80039a8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80039ac:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80039b0:	6879      	ldr	r1, [r7, #4]
 80039b2:	6809      	ldr	r1, [r1, #0]
 80039b4:	4313      	orrs	r3, r2
 80039b6:	61cb      	str	r3, [r1, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80039b8:	687b      	ldr	r3, [r7, #4]
 80039ba:	681b      	ldr	r3, [r3, #0]
 80039bc:	681b      	ldr	r3, [r3, #0]
 80039be:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	69da      	ldr	r2, [r3, #28]
 80039c6:	687b      	ldr	r3, [r7, #4]
 80039c8:	6a1b      	ldr	r3, [r3, #32]
 80039ca:	431a      	orrs	r2, r3
 80039cc:	687b      	ldr	r3, [r7, #4]
 80039ce:	681b      	ldr	r3, [r3, #0]
 80039d0:	430a      	orrs	r2, r1
 80039d2:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80039d4:	687b      	ldr	r3, [r7, #4]
 80039d6:	681b      	ldr	r3, [r3, #0]
 80039d8:	689b      	ldr	r3, [r3, #8]
 80039da:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 80039de:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 80039e2:	687a      	ldr	r2, [r7, #4]
 80039e4:	6911      	ldr	r1, [r2, #16]
 80039e6:	687a      	ldr	r2, [r7, #4]
 80039e8:	68d2      	ldr	r2, [r2, #12]
 80039ea:	4311      	orrs	r1, r2
 80039ec:	687a      	ldr	r2, [r7, #4]
 80039ee:	6812      	ldr	r2, [r2, #0]
 80039f0:	430b      	orrs	r3, r1
 80039f2:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80039f4:	687b      	ldr	r3, [r7, #4]
 80039f6:	681b      	ldr	r3, [r3, #0]
 80039f8:	68db      	ldr	r3, [r3, #12]
 80039fa:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 80039fe:	687b      	ldr	r3, [r7, #4]
 8003a00:	695a      	ldr	r2, [r3, #20]
 8003a02:	687b      	ldr	r3, [r7, #4]
 8003a04:	699b      	ldr	r3, [r3, #24]
 8003a06:	431a      	orrs	r2, r3
 8003a08:	687b      	ldr	r3, [r7, #4]
 8003a0a:	681b      	ldr	r3, [r3, #0]
 8003a0c:	430a      	orrs	r2, r1
 8003a0e:	60da      	str	r2, [r3, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	681b      	ldr	r3, [r3, #0]
 8003a14:	681a      	ldr	r2, [r3, #0]
 8003a16:	687b      	ldr	r3, [r7, #4]
 8003a18:	681b      	ldr	r3, [r3, #0]
 8003a1a:	f042 0201 	orr.w	r2, r2, #1
 8003a1e:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003a20:	687b      	ldr	r3, [r7, #4]
 8003a22:	2200      	movs	r2, #0
 8003a24:	641a      	str	r2, [r3, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8003a26:	687b      	ldr	r3, [r7, #4]
 8003a28:	2220      	movs	r2, #32
 8003a2a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8003a2e:	687b      	ldr	r3, [r7, #4]
 8003a30:	2200      	movs	r2, #0
 8003a32:	631a      	str	r2, [r3, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8003a34:	687b      	ldr	r3, [r7, #4]
 8003a36:	2200      	movs	r2, #0
 8003a38:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

  return HAL_OK;
 8003a3c:	2300      	movs	r3, #0
}
 8003a3e:	4618      	mov	r0, r3
 8003a40:	3710      	adds	r7, #16
 8003a42:	46bd      	mov	sp, r7
 8003a44:	bd80      	pop	{r7, pc}
 8003a46:	bf00      	nop
 8003a48:	000186a0 	.word	0x000186a0
 8003a4c:	001e847f 	.word	0x001e847f
 8003a50:	003d08ff 	.word	0x003d08ff
 8003a54:	431bde83 	.word	0x431bde83
 8003a58:	10624dd3 	.word	0x10624dd3

08003a5c <HAL_I2C_Mem_Write>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8003a5c:	b580      	push	{r7, lr}
 8003a5e:	b088      	sub	sp, #32
 8003a60:	af02      	add	r7, sp, #8
 8003a62:	60f8      	str	r0, [r7, #12]
 8003a64:	4608      	mov	r0, r1
 8003a66:	4611      	mov	r1, r2
 8003a68:	461a      	mov	r2, r3
 8003a6a:	4603      	mov	r3, r0
 8003a6c:	817b      	strh	r3, [r7, #10]
 8003a6e:	460b      	mov	r3, r1
 8003a70:	813b      	strh	r3, [r7, #8]
 8003a72:	4613      	mov	r3, r2
 8003a74:	80fb      	strh	r3, [r7, #6]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8003a76:	f7fe ffb3 	bl	80029e0 <HAL_GetTick>
 8003a7a:	6178      	str	r0, [r7, #20]

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8003a7c:	68fb      	ldr	r3, [r7, #12]
 8003a7e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003a82:	b2db      	uxtb	r3, r3
 8003a84:	2b20      	cmp	r3, #32
 8003a86:	f040 80d9 	bne.w	8003c3c <HAL_I2C_Mem_Write+0x1e0>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8003a8a:	697b      	ldr	r3, [r7, #20]
 8003a8c:	9300      	str	r3, [sp, #0]
 8003a8e:	2319      	movs	r3, #25
 8003a90:	2201      	movs	r2, #1
 8003a92:	496d      	ldr	r1, [pc, #436]	; (8003c48 <HAL_I2C_Mem_Write+0x1ec>)
 8003a94:	68f8      	ldr	r0, [r7, #12]
 8003a96:	f000 fc7f 	bl	8004398 <I2C_WaitOnFlagUntilTimeout>
 8003a9a:	4603      	mov	r3, r0
 8003a9c:	2b00      	cmp	r3, #0
 8003a9e:	d001      	beq.n	8003aa4 <HAL_I2C_Mem_Write+0x48>
    {
      return HAL_BUSY;
 8003aa0:	2302      	movs	r3, #2
 8003aa2:	e0cc      	b.n	8003c3e <HAL_I2C_Mem_Write+0x1e2>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8003aa4:	68fb      	ldr	r3, [r7, #12]
 8003aa6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003aaa:	2b01      	cmp	r3, #1
 8003aac:	d101      	bne.n	8003ab2 <HAL_I2C_Mem_Write+0x56>
 8003aae:	2302      	movs	r3, #2
 8003ab0:	e0c5      	b.n	8003c3e <HAL_I2C_Mem_Write+0x1e2>
 8003ab2:	68fb      	ldr	r3, [r7, #12]
 8003ab4:	2201      	movs	r2, #1
 8003ab6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8003aba:	68fb      	ldr	r3, [r7, #12]
 8003abc:	681b      	ldr	r3, [r3, #0]
 8003abe:	681b      	ldr	r3, [r3, #0]
 8003ac0:	f003 0301 	and.w	r3, r3, #1
 8003ac4:	2b01      	cmp	r3, #1
 8003ac6:	d007      	beq.n	8003ad8 <HAL_I2C_Mem_Write+0x7c>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8003ac8:	68fb      	ldr	r3, [r7, #12]
 8003aca:	681b      	ldr	r3, [r3, #0]
 8003acc:	681a      	ldr	r2, [r3, #0]
 8003ace:	68fb      	ldr	r3, [r7, #12]
 8003ad0:	681b      	ldr	r3, [r3, #0]
 8003ad2:	f042 0201 	orr.w	r2, r2, #1
 8003ad6:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8003ad8:	68fb      	ldr	r3, [r7, #12]
 8003ada:	681b      	ldr	r3, [r3, #0]
 8003adc:	681a      	ldr	r2, [r3, #0]
 8003ade:	68fb      	ldr	r3, [r7, #12]
 8003ae0:	681b      	ldr	r3, [r3, #0]
 8003ae2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003ae6:	601a      	str	r2, [r3, #0]

    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8003ae8:	68fb      	ldr	r3, [r7, #12]
 8003aea:	2221      	movs	r2, #33	; 0x21
 8003aec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8003af0:	68fb      	ldr	r3, [r7, #12]
 8003af2:	2240      	movs	r2, #64	; 0x40
 8003af4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003af8:	68fb      	ldr	r3, [r7, #12]
 8003afa:	2200      	movs	r2, #0
 8003afc:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 8003afe:	68fb      	ldr	r3, [r7, #12]
 8003b00:	6a3a      	ldr	r2, [r7, #32]
 8003b02:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 8003b04:	68fb      	ldr	r3, [r7, #12]
 8003b06:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8003b08:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8003b0a:	68fb      	ldr	r3, [r7, #12]
 8003b0c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003b0e:	b29a      	uxth	r2, r3
 8003b10:	68fb      	ldr	r3, [r7, #12]
 8003b12:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8003b14:	68fb      	ldr	r3, [r7, #12]
 8003b16:	4a4d      	ldr	r2, [pc, #308]	; (8003c4c <HAL_I2C_Mem_Write+0x1f0>)
 8003b18:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8003b1a:	88f8      	ldrh	r0, [r7, #6]
 8003b1c:	893a      	ldrh	r2, [r7, #8]
 8003b1e:	8979      	ldrh	r1, [r7, #10]
 8003b20:	697b      	ldr	r3, [r7, #20]
 8003b22:	9301      	str	r3, [sp, #4]
 8003b24:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003b26:	9300      	str	r3, [sp, #0]
 8003b28:	4603      	mov	r3, r0
 8003b2a:	68f8      	ldr	r0, [r7, #12]
 8003b2c:	f000 fab6 	bl	800409c <I2C_RequestMemoryWrite>
 8003b30:	4603      	mov	r3, r0
 8003b32:	2b00      	cmp	r3, #0
 8003b34:	d052      	beq.n	8003bdc <HAL_I2C_Mem_Write+0x180>
    {
      return HAL_ERROR;
 8003b36:	2301      	movs	r3, #1
 8003b38:	e081      	b.n	8003c3e <HAL_I2C_Mem_Write+0x1e2>
    }

    while (hi2c->XferSize > 0U)
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003b3a:	697a      	ldr	r2, [r7, #20]
 8003b3c:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003b3e:	68f8      	ldr	r0, [r7, #12]
 8003b40:	f000 fd00 	bl	8004544 <I2C_WaitOnTXEFlagUntilTimeout>
 8003b44:	4603      	mov	r3, r0
 8003b46:	2b00      	cmp	r3, #0
 8003b48:	d00d      	beq.n	8003b66 <HAL_I2C_Mem_Write+0x10a>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003b4a:	68fb      	ldr	r3, [r7, #12]
 8003b4c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b4e:	2b04      	cmp	r3, #4
 8003b50:	d107      	bne.n	8003b62 <HAL_I2C_Mem_Write+0x106>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003b52:	68fb      	ldr	r3, [r7, #12]
 8003b54:	681b      	ldr	r3, [r3, #0]
 8003b56:	681a      	ldr	r2, [r3, #0]
 8003b58:	68fb      	ldr	r3, [r7, #12]
 8003b5a:	681b      	ldr	r3, [r3, #0]
 8003b5c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003b60:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 8003b62:	2301      	movs	r3, #1
 8003b64:	e06b      	b.n	8003c3e <HAL_I2C_Mem_Write+0x1e2>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8003b66:	68fb      	ldr	r3, [r7, #12]
 8003b68:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b6a:	781a      	ldrb	r2, [r3, #0]
 8003b6c:	68fb      	ldr	r3, [r7, #12]
 8003b6e:	681b      	ldr	r3, [r3, #0]
 8003b70:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8003b72:	68fb      	ldr	r3, [r7, #12]
 8003b74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b76:	1c5a      	adds	r2, r3, #1
 8003b78:	68fb      	ldr	r3, [r7, #12]
 8003b7a:	625a      	str	r2, [r3, #36]	; 0x24

      /* Update counter */
      hi2c->XferSize--;
 8003b7c:	68fb      	ldr	r3, [r7, #12]
 8003b7e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003b80:	3b01      	subs	r3, #1
 8003b82:	b29a      	uxth	r2, r3
 8003b84:	68fb      	ldr	r3, [r7, #12]
 8003b86:	851a      	strh	r2, [r3, #40]	; 0x28
      hi2c->XferCount--;
 8003b88:	68fb      	ldr	r3, [r7, #12]
 8003b8a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003b8c:	b29b      	uxth	r3, r3
 8003b8e:	3b01      	subs	r3, #1
 8003b90:	b29a      	uxth	r2, r3
 8003b92:	68fb      	ldr	r3, [r7, #12]
 8003b94:	855a      	strh	r2, [r3, #42]	; 0x2a

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8003b96:	68fb      	ldr	r3, [r7, #12]
 8003b98:	681b      	ldr	r3, [r3, #0]
 8003b9a:	695b      	ldr	r3, [r3, #20]
 8003b9c:	f003 0304 	and.w	r3, r3, #4
 8003ba0:	2b04      	cmp	r3, #4
 8003ba2:	d11b      	bne.n	8003bdc <HAL_I2C_Mem_Write+0x180>
 8003ba4:	68fb      	ldr	r3, [r7, #12]
 8003ba6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003ba8:	2b00      	cmp	r3, #0
 8003baa:	d017      	beq.n	8003bdc <HAL_I2C_Mem_Write+0x180>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8003bac:	68fb      	ldr	r3, [r7, #12]
 8003bae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003bb0:	781a      	ldrb	r2, [r3, #0]
 8003bb2:	68fb      	ldr	r3, [r7, #12]
 8003bb4:	681b      	ldr	r3, [r3, #0]
 8003bb6:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8003bb8:	68fb      	ldr	r3, [r7, #12]
 8003bba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003bbc:	1c5a      	adds	r2, r3, #1
 8003bbe:	68fb      	ldr	r3, [r7, #12]
 8003bc0:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferSize--;
 8003bc2:	68fb      	ldr	r3, [r7, #12]
 8003bc4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003bc6:	3b01      	subs	r3, #1
 8003bc8:	b29a      	uxth	r2, r3
 8003bca:	68fb      	ldr	r3, [r7, #12]
 8003bcc:	851a      	strh	r2, [r3, #40]	; 0x28
        hi2c->XferCount--;
 8003bce:	68fb      	ldr	r3, [r7, #12]
 8003bd0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003bd2:	b29b      	uxth	r3, r3
 8003bd4:	3b01      	subs	r3, #1
 8003bd6:	b29a      	uxth	r2, r3
 8003bd8:	68fb      	ldr	r3, [r7, #12]
 8003bda:	855a      	strh	r2, [r3, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8003bdc:	68fb      	ldr	r3, [r7, #12]
 8003bde:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003be0:	2b00      	cmp	r3, #0
 8003be2:	d1aa      	bne.n	8003b3a <HAL_I2C_Mem_Write+0xde>
      }
    }

    /* Wait until BTF flag is set */
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003be4:	697a      	ldr	r2, [r7, #20]
 8003be6:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003be8:	68f8      	ldr	r0, [r7, #12]
 8003bea:	f000 fcec 	bl	80045c6 <I2C_WaitOnBTFFlagUntilTimeout>
 8003bee:	4603      	mov	r3, r0
 8003bf0:	2b00      	cmp	r3, #0
 8003bf2:	d00d      	beq.n	8003c10 <HAL_I2C_Mem_Write+0x1b4>
    {
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003bf4:	68fb      	ldr	r3, [r7, #12]
 8003bf6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003bf8:	2b04      	cmp	r3, #4
 8003bfa:	d107      	bne.n	8003c0c <HAL_I2C_Mem_Write+0x1b0>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003bfc:	68fb      	ldr	r3, [r7, #12]
 8003bfe:	681b      	ldr	r3, [r3, #0]
 8003c00:	681a      	ldr	r2, [r3, #0]
 8003c02:	68fb      	ldr	r3, [r7, #12]
 8003c04:	681b      	ldr	r3, [r3, #0]
 8003c06:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003c0a:	601a      	str	r2, [r3, #0]
      }
      return HAL_ERROR;
 8003c0c:	2301      	movs	r3, #1
 8003c0e:	e016      	b.n	8003c3e <HAL_I2C_Mem_Write+0x1e2>
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003c10:	68fb      	ldr	r3, [r7, #12]
 8003c12:	681b      	ldr	r3, [r3, #0]
 8003c14:	681a      	ldr	r2, [r3, #0]
 8003c16:	68fb      	ldr	r3, [r7, #12]
 8003c18:	681b      	ldr	r3, [r3, #0]
 8003c1a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003c1e:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8003c20:	68fb      	ldr	r3, [r7, #12]
 8003c22:	2220      	movs	r2, #32
 8003c24:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8003c28:	68fb      	ldr	r3, [r7, #12]
 8003c2a:	2200      	movs	r2, #0
 8003c2c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003c30:	68fb      	ldr	r3, [r7, #12]
 8003c32:	2200      	movs	r2, #0
 8003c34:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 8003c38:	2300      	movs	r3, #0
 8003c3a:	e000      	b.n	8003c3e <HAL_I2C_Mem_Write+0x1e2>
  }
  else
  {
    return HAL_BUSY;
 8003c3c:	2302      	movs	r3, #2
  }
}
 8003c3e:	4618      	mov	r0, r3
 8003c40:	3718      	adds	r7, #24
 8003c42:	46bd      	mov	sp, r7
 8003c44:	bd80      	pop	{r7, pc}
 8003c46:	bf00      	nop
 8003c48:	00100002 	.word	0x00100002
 8003c4c:	ffff0000 	.word	0xffff0000

08003c50 <HAL_I2C_Mem_Read>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8003c50:	b580      	push	{r7, lr}
 8003c52:	b08c      	sub	sp, #48	; 0x30
 8003c54:	af02      	add	r7, sp, #8
 8003c56:	60f8      	str	r0, [r7, #12]
 8003c58:	4608      	mov	r0, r1
 8003c5a:	4611      	mov	r1, r2
 8003c5c:	461a      	mov	r2, r3
 8003c5e:	4603      	mov	r3, r0
 8003c60:	817b      	strh	r3, [r7, #10]
 8003c62:	460b      	mov	r3, r1
 8003c64:	813b      	strh	r3, [r7, #8]
 8003c66:	4613      	mov	r3, r2
 8003c68:	80fb      	strh	r3, [r7, #6]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8003c6a:	f7fe feb9 	bl	80029e0 <HAL_GetTick>
 8003c6e:	6278      	str	r0, [r7, #36]	; 0x24

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8003c70:	68fb      	ldr	r3, [r7, #12]
 8003c72:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003c76:	b2db      	uxtb	r3, r3
 8003c78:	2b20      	cmp	r3, #32
 8003c7a:	f040 8208 	bne.w	800408e <HAL_I2C_Mem_Read+0x43e>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8003c7e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c80:	9300      	str	r3, [sp, #0]
 8003c82:	2319      	movs	r3, #25
 8003c84:	2201      	movs	r2, #1
 8003c86:	497b      	ldr	r1, [pc, #492]	; (8003e74 <HAL_I2C_Mem_Read+0x224>)
 8003c88:	68f8      	ldr	r0, [r7, #12]
 8003c8a:	f000 fb85 	bl	8004398 <I2C_WaitOnFlagUntilTimeout>
 8003c8e:	4603      	mov	r3, r0
 8003c90:	2b00      	cmp	r3, #0
 8003c92:	d001      	beq.n	8003c98 <HAL_I2C_Mem_Read+0x48>
    {
      return HAL_BUSY;
 8003c94:	2302      	movs	r3, #2
 8003c96:	e1fb      	b.n	8004090 <HAL_I2C_Mem_Read+0x440>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8003c98:	68fb      	ldr	r3, [r7, #12]
 8003c9a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003c9e:	2b01      	cmp	r3, #1
 8003ca0:	d101      	bne.n	8003ca6 <HAL_I2C_Mem_Read+0x56>
 8003ca2:	2302      	movs	r3, #2
 8003ca4:	e1f4      	b.n	8004090 <HAL_I2C_Mem_Read+0x440>
 8003ca6:	68fb      	ldr	r3, [r7, #12]
 8003ca8:	2201      	movs	r2, #1
 8003caa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8003cae:	68fb      	ldr	r3, [r7, #12]
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	681b      	ldr	r3, [r3, #0]
 8003cb4:	f003 0301 	and.w	r3, r3, #1
 8003cb8:	2b01      	cmp	r3, #1
 8003cba:	d007      	beq.n	8003ccc <HAL_I2C_Mem_Read+0x7c>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8003cbc:	68fb      	ldr	r3, [r7, #12]
 8003cbe:	681b      	ldr	r3, [r3, #0]
 8003cc0:	681a      	ldr	r2, [r3, #0]
 8003cc2:	68fb      	ldr	r3, [r7, #12]
 8003cc4:	681b      	ldr	r3, [r3, #0]
 8003cc6:	f042 0201 	orr.w	r2, r2, #1
 8003cca:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8003ccc:	68fb      	ldr	r3, [r7, #12]
 8003cce:	681b      	ldr	r3, [r3, #0]
 8003cd0:	681a      	ldr	r2, [r3, #0]
 8003cd2:	68fb      	ldr	r3, [r7, #12]
 8003cd4:	681b      	ldr	r3, [r3, #0]
 8003cd6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003cda:	601a      	str	r2, [r3, #0]

    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8003cdc:	68fb      	ldr	r3, [r7, #12]
 8003cde:	2222      	movs	r2, #34	; 0x22
 8003ce0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8003ce4:	68fb      	ldr	r3, [r7, #12]
 8003ce6:	2240      	movs	r2, #64	; 0x40
 8003ce8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003cec:	68fb      	ldr	r3, [r7, #12]
 8003cee:	2200      	movs	r2, #0
 8003cf0:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 8003cf2:	68fb      	ldr	r3, [r7, #12]
 8003cf4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003cf6:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 8003cf8:	68fb      	ldr	r3, [r7, #12]
 8003cfa:	8eba      	ldrh	r2, [r7, #52]	; 0x34
 8003cfc:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8003cfe:	68fb      	ldr	r3, [r7, #12]
 8003d00:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003d02:	b29a      	uxth	r2, r3
 8003d04:	68fb      	ldr	r3, [r7, #12]
 8003d06:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8003d08:	68fb      	ldr	r3, [r7, #12]
 8003d0a:	4a5b      	ldr	r2, [pc, #364]	; (8003e78 <HAL_I2C_Mem_Read+0x228>)
 8003d0c:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8003d0e:	88f8      	ldrh	r0, [r7, #6]
 8003d10:	893a      	ldrh	r2, [r7, #8]
 8003d12:	8979      	ldrh	r1, [r7, #10]
 8003d14:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003d16:	9301      	str	r3, [sp, #4]
 8003d18:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003d1a:	9300      	str	r3, [sp, #0]
 8003d1c:	4603      	mov	r3, r0
 8003d1e:	68f8      	ldr	r0, [r7, #12]
 8003d20:	f000 fa52 	bl	80041c8 <I2C_RequestMemoryRead>
 8003d24:	4603      	mov	r3, r0
 8003d26:	2b00      	cmp	r3, #0
 8003d28:	d001      	beq.n	8003d2e <HAL_I2C_Mem_Read+0xde>
    {
      return HAL_ERROR;
 8003d2a:	2301      	movs	r3, #1
 8003d2c:	e1b0      	b.n	8004090 <HAL_I2C_Mem_Read+0x440>
    }

    if (hi2c->XferSize == 0U)
 8003d2e:	68fb      	ldr	r3, [r7, #12]
 8003d30:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003d32:	2b00      	cmp	r3, #0
 8003d34:	d113      	bne.n	8003d5e <HAL_I2C_Mem_Read+0x10e>
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003d36:	2300      	movs	r3, #0
 8003d38:	623b      	str	r3, [r7, #32]
 8003d3a:	68fb      	ldr	r3, [r7, #12]
 8003d3c:	681b      	ldr	r3, [r3, #0]
 8003d3e:	695b      	ldr	r3, [r3, #20]
 8003d40:	623b      	str	r3, [r7, #32]
 8003d42:	68fb      	ldr	r3, [r7, #12]
 8003d44:	681b      	ldr	r3, [r3, #0]
 8003d46:	699b      	ldr	r3, [r3, #24]
 8003d48:	623b      	str	r3, [r7, #32]
 8003d4a:	6a3b      	ldr	r3, [r7, #32]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003d4c:	68fb      	ldr	r3, [r7, #12]
 8003d4e:	681b      	ldr	r3, [r3, #0]
 8003d50:	681a      	ldr	r2, [r3, #0]
 8003d52:	68fb      	ldr	r3, [r7, #12]
 8003d54:	681b      	ldr	r3, [r3, #0]
 8003d56:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003d5a:	601a      	str	r2, [r3, #0]
 8003d5c:	e184      	b.n	8004068 <HAL_I2C_Mem_Read+0x418>
    }
    else if (hi2c->XferSize == 1U)
 8003d5e:	68fb      	ldr	r3, [r7, #12]
 8003d60:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003d62:	2b01      	cmp	r3, #1
 8003d64:	d11b      	bne.n	8003d9e <HAL_I2C_Mem_Read+0x14e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003d66:	68fb      	ldr	r3, [r7, #12]
 8003d68:	681b      	ldr	r3, [r3, #0]
 8003d6a:	681a      	ldr	r2, [r3, #0]
 8003d6c:	68fb      	ldr	r3, [r7, #12]
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003d74:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003d76:	2300      	movs	r3, #0
 8003d78:	61fb      	str	r3, [r7, #28]
 8003d7a:	68fb      	ldr	r3, [r7, #12]
 8003d7c:	681b      	ldr	r3, [r3, #0]
 8003d7e:	695b      	ldr	r3, [r3, #20]
 8003d80:	61fb      	str	r3, [r7, #28]
 8003d82:	68fb      	ldr	r3, [r7, #12]
 8003d84:	681b      	ldr	r3, [r3, #0]
 8003d86:	699b      	ldr	r3, [r3, #24]
 8003d88:	61fb      	str	r3, [r7, #28]
 8003d8a:	69fb      	ldr	r3, [r7, #28]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003d8c:	68fb      	ldr	r3, [r7, #12]
 8003d8e:	681b      	ldr	r3, [r3, #0]
 8003d90:	681a      	ldr	r2, [r3, #0]
 8003d92:	68fb      	ldr	r3, [r7, #12]
 8003d94:	681b      	ldr	r3, [r3, #0]
 8003d96:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003d9a:	601a      	str	r2, [r3, #0]
 8003d9c:	e164      	b.n	8004068 <HAL_I2C_Mem_Read+0x418>
    }
    else if (hi2c->XferSize == 2U)
 8003d9e:	68fb      	ldr	r3, [r7, #12]
 8003da0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003da2:	2b02      	cmp	r3, #2
 8003da4:	d11b      	bne.n	8003dde <HAL_I2C_Mem_Read+0x18e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003da6:	68fb      	ldr	r3, [r7, #12]
 8003da8:	681b      	ldr	r3, [r3, #0]
 8003daa:	681a      	ldr	r2, [r3, #0]
 8003dac:	68fb      	ldr	r3, [r7, #12]
 8003dae:	681b      	ldr	r3, [r3, #0]
 8003db0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003db4:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8003db6:	68fb      	ldr	r3, [r7, #12]
 8003db8:	681b      	ldr	r3, [r3, #0]
 8003dba:	681a      	ldr	r2, [r3, #0]
 8003dbc:	68fb      	ldr	r3, [r7, #12]
 8003dbe:	681b      	ldr	r3, [r3, #0]
 8003dc0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8003dc4:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003dc6:	2300      	movs	r3, #0
 8003dc8:	61bb      	str	r3, [r7, #24]
 8003dca:	68fb      	ldr	r3, [r7, #12]
 8003dcc:	681b      	ldr	r3, [r3, #0]
 8003dce:	695b      	ldr	r3, [r3, #20]
 8003dd0:	61bb      	str	r3, [r7, #24]
 8003dd2:	68fb      	ldr	r3, [r7, #12]
 8003dd4:	681b      	ldr	r3, [r3, #0]
 8003dd6:	699b      	ldr	r3, [r3, #24]
 8003dd8:	61bb      	str	r3, [r7, #24]
 8003dda:	69bb      	ldr	r3, [r7, #24]
 8003ddc:	e144      	b.n	8004068 <HAL_I2C_Mem_Read+0x418>
    }
    else
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003dde:	2300      	movs	r3, #0
 8003de0:	617b      	str	r3, [r7, #20]
 8003de2:	68fb      	ldr	r3, [r7, #12]
 8003de4:	681b      	ldr	r3, [r3, #0]
 8003de6:	695b      	ldr	r3, [r3, #20]
 8003de8:	617b      	str	r3, [r7, #20]
 8003dea:	68fb      	ldr	r3, [r7, #12]
 8003dec:	681b      	ldr	r3, [r3, #0]
 8003dee:	699b      	ldr	r3, [r3, #24]
 8003df0:	617b      	str	r3, [r7, #20]
 8003df2:	697b      	ldr	r3, [r7, #20]
    }

    while (hi2c->XferSize > 0U)
 8003df4:	e138      	b.n	8004068 <HAL_I2C_Mem_Read+0x418>
    {
      if (hi2c->XferSize <= 3U)
 8003df6:	68fb      	ldr	r3, [r7, #12]
 8003df8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003dfa:	2b03      	cmp	r3, #3
 8003dfc:	f200 80f1 	bhi.w	8003fe2 <HAL_I2C_Mem_Read+0x392>
      {
        /* One byte */
        if (hi2c->XferSize == 1U)
 8003e00:	68fb      	ldr	r3, [r7, #12]
 8003e02:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003e04:	2b01      	cmp	r3, #1
 8003e06:	d123      	bne.n	8003e50 <HAL_I2C_Mem_Read+0x200>
        {
          /* Wait until RXNE flag is set */
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003e08:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003e0a:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8003e0c:	68f8      	ldr	r0, [r7, #12]
 8003e0e:	f000 fc1b 	bl	8004648 <I2C_WaitOnRXNEFlagUntilTimeout>
 8003e12:	4603      	mov	r3, r0
 8003e14:	2b00      	cmp	r3, #0
 8003e16:	d001      	beq.n	8003e1c <HAL_I2C_Mem_Read+0x1cc>
          {
            return HAL_ERROR;
 8003e18:	2301      	movs	r3, #1
 8003e1a:	e139      	b.n	8004090 <HAL_I2C_Mem_Read+0x440>
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003e1c:	68fb      	ldr	r3, [r7, #12]
 8003e1e:	681b      	ldr	r3, [r3, #0]
 8003e20:	691a      	ldr	r2, [r3, #16]
 8003e22:	68fb      	ldr	r3, [r7, #12]
 8003e24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e26:	b2d2      	uxtb	r2, r2
 8003e28:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003e2a:	68fb      	ldr	r3, [r7, #12]
 8003e2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e2e:	1c5a      	adds	r2, r3, #1
 8003e30:	68fb      	ldr	r3, [r7, #12]
 8003e32:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003e34:	68fb      	ldr	r3, [r7, #12]
 8003e36:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003e38:	3b01      	subs	r3, #1
 8003e3a:	b29a      	uxth	r2, r3
 8003e3c:	68fb      	ldr	r3, [r7, #12]
 8003e3e:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8003e40:	68fb      	ldr	r3, [r7, #12]
 8003e42:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003e44:	b29b      	uxth	r3, r3
 8003e46:	3b01      	subs	r3, #1
 8003e48:	b29a      	uxth	r2, r3
 8003e4a:	68fb      	ldr	r3, [r7, #12]
 8003e4c:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003e4e:	e10b      	b.n	8004068 <HAL_I2C_Mem_Read+0x418>
        }
        /* Two bytes */
        else if (hi2c->XferSize == 2U)
 8003e50:	68fb      	ldr	r3, [r7, #12]
 8003e52:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003e54:	2b02      	cmp	r3, #2
 8003e56:	d14e      	bne.n	8003ef6 <HAL_I2C_Mem_Read+0x2a6>
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8003e58:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003e5a:	9300      	str	r3, [sp, #0]
 8003e5c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003e5e:	2200      	movs	r2, #0
 8003e60:	4906      	ldr	r1, [pc, #24]	; (8003e7c <HAL_I2C_Mem_Read+0x22c>)
 8003e62:	68f8      	ldr	r0, [r7, #12]
 8003e64:	f000 fa98 	bl	8004398 <I2C_WaitOnFlagUntilTimeout>
 8003e68:	4603      	mov	r3, r0
 8003e6a:	2b00      	cmp	r3, #0
 8003e6c:	d008      	beq.n	8003e80 <HAL_I2C_Mem_Read+0x230>
          {
            return HAL_ERROR;
 8003e6e:	2301      	movs	r3, #1
 8003e70:	e10e      	b.n	8004090 <HAL_I2C_Mem_Read+0x440>
 8003e72:	bf00      	nop
 8003e74:	00100002 	.word	0x00100002
 8003e78:	ffff0000 	.word	0xffff0000
 8003e7c:	00010004 	.word	0x00010004
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003e80:	68fb      	ldr	r3, [r7, #12]
 8003e82:	681b      	ldr	r3, [r3, #0]
 8003e84:	681a      	ldr	r2, [r3, #0]
 8003e86:	68fb      	ldr	r3, [r7, #12]
 8003e88:	681b      	ldr	r3, [r3, #0]
 8003e8a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003e8e:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003e90:	68fb      	ldr	r3, [r7, #12]
 8003e92:	681b      	ldr	r3, [r3, #0]
 8003e94:	691a      	ldr	r2, [r3, #16]
 8003e96:	68fb      	ldr	r3, [r7, #12]
 8003e98:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e9a:	b2d2      	uxtb	r2, r2
 8003e9c:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003e9e:	68fb      	ldr	r3, [r7, #12]
 8003ea0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ea2:	1c5a      	adds	r2, r3, #1
 8003ea4:	68fb      	ldr	r3, [r7, #12]
 8003ea6:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003ea8:	68fb      	ldr	r3, [r7, #12]
 8003eaa:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003eac:	3b01      	subs	r3, #1
 8003eae:	b29a      	uxth	r2, r3
 8003eb0:	68fb      	ldr	r3, [r7, #12]
 8003eb2:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8003eb4:	68fb      	ldr	r3, [r7, #12]
 8003eb6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003eb8:	b29b      	uxth	r3, r3
 8003eba:	3b01      	subs	r3, #1
 8003ebc:	b29a      	uxth	r2, r3
 8003ebe:	68fb      	ldr	r3, [r7, #12]
 8003ec0:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003ec2:	68fb      	ldr	r3, [r7, #12]
 8003ec4:	681b      	ldr	r3, [r3, #0]
 8003ec6:	691a      	ldr	r2, [r3, #16]
 8003ec8:	68fb      	ldr	r3, [r7, #12]
 8003eca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ecc:	b2d2      	uxtb	r2, r2
 8003ece:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003ed0:	68fb      	ldr	r3, [r7, #12]
 8003ed2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ed4:	1c5a      	adds	r2, r3, #1
 8003ed6:	68fb      	ldr	r3, [r7, #12]
 8003ed8:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003eda:	68fb      	ldr	r3, [r7, #12]
 8003edc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003ede:	3b01      	subs	r3, #1
 8003ee0:	b29a      	uxth	r2, r3
 8003ee2:	68fb      	ldr	r3, [r7, #12]
 8003ee4:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8003ee6:	68fb      	ldr	r3, [r7, #12]
 8003ee8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003eea:	b29b      	uxth	r3, r3
 8003eec:	3b01      	subs	r3, #1
 8003eee:	b29a      	uxth	r2, r3
 8003ef0:	68fb      	ldr	r3, [r7, #12]
 8003ef2:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003ef4:	e0b8      	b.n	8004068 <HAL_I2C_Mem_Read+0x418>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8003ef6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ef8:	9300      	str	r3, [sp, #0]
 8003efa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003efc:	2200      	movs	r2, #0
 8003efe:	4966      	ldr	r1, [pc, #408]	; (8004098 <HAL_I2C_Mem_Read+0x448>)
 8003f00:	68f8      	ldr	r0, [r7, #12]
 8003f02:	f000 fa49 	bl	8004398 <I2C_WaitOnFlagUntilTimeout>
 8003f06:	4603      	mov	r3, r0
 8003f08:	2b00      	cmp	r3, #0
 8003f0a:	d001      	beq.n	8003f10 <HAL_I2C_Mem_Read+0x2c0>
          {
            return HAL_ERROR;
 8003f0c:	2301      	movs	r3, #1
 8003f0e:	e0bf      	b.n	8004090 <HAL_I2C_Mem_Read+0x440>
          }

          /* Disable Acknowledge */
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003f10:	68fb      	ldr	r3, [r7, #12]
 8003f12:	681b      	ldr	r3, [r3, #0]
 8003f14:	681a      	ldr	r2, [r3, #0]
 8003f16:	68fb      	ldr	r3, [r7, #12]
 8003f18:	681b      	ldr	r3, [r3, #0]
 8003f1a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003f1e:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003f20:	68fb      	ldr	r3, [r7, #12]
 8003f22:	681b      	ldr	r3, [r3, #0]
 8003f24:	691a      	ldr	r2, [r3, #16]
 8003f26:	68fb      	ldr	r3, [r7, #12]
 8003f28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f2a:	b2d2      	uxtb	r2, r2
 8003f2c:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003f2e:	68fb      	ldr	r3, [r7, #12]
 8003f30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f32:	1c5a      	adds	r2, r3, #1
 8003f34:	68fb      	ldr	r3, [r7, #12]
 8003f36:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003f38:	68fb      	ldr	r3, [r7, #12]
 8003f3a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003f3c:	3b01      	subs	r3, #1
 8003f3e:	b29a      	uxth	r2, r3
 8003f40:	68fb      	ldr	r3, [r7, #12]
 8003f42:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8003f44:	68fb      	ldr	r3, [r7, #12]
 8003f46:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003f48:	b29b      	uxth	r3, r3
 8003f4a:	3b01      	subs	r3, #1
 8003f4c:	b29a      	uxth	r2, r3
 8003f4e:	68fb      	ldr	r3, [r7, #12]
 8003f50:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8003f52:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003f54:	9300      	str	r3, [sp, #0]
 8003f56:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003f58:	2200      	movs	r2, #0
 8003f5a:	494f      	ldr	r1, [pc, #316]	; (8004098 <HAL_I2C_Mem_Read+0x448>)
 8003f5c:	68f8      	ldr	r0, [r7, #12]
 8003f5e:	f000 fa1b 	bl	8004398 <I2C_WaitOnFlagUntilTimeout>
 8003f62:	4603      	mov	r3, r0
 8003f64:	2b00      	cmp	r3, #0
 8003f66:	d001      	beq.n	8003f6c <HAL_I2C_Mem_Read+0x31c>
          {
            return HAL_ERROR;
 8003f68:	2301      	movs	r3, #1
 8003f6a:	e091      	b.n	8004090 <HAL_I2C_Mem_Read+0x440>
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003f6c:	68fb      	ldr	r3, [r7, #12]
 8003f6e:	681b      	ldr	r3, [r3, #0]
 8003f70:	681a      	ldr	r2, [r3, #0]
 8003f72:	68fb      	ldr	r3, [r7, #12]
 8003f74:	681b      	ldr	r3, [r3, #0]
 8003f76:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003f7a:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003f7c:	68fb      	ldr	r3, [r7, #12]
 8003f7e:	681b      	ldr	r3, [r3, #0]
 8003f80:	691a      	ldr	r2, [r3, #16]
 8003f82:	68fb      	ldr	r3, [r7, #12]
 8003f84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f86:	b2d2      	uxtb	r2, r2
 8003f88:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003f8a:	68fb      	ldr	r3, [r7, #12]
 8003f8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f8e:	1c5a      	adds	r2, r3, #1
 8003f90:	68fb      	ldr	r3, [r7, #12]
 8003f92:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003f94:	68fb      	ldr	r3, [r7, #12]
 8003f96:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003f98:	3b01      	subs	r3, #1
 8003f9a:	b29a      	uxth	r2, r3
 8003f9c:	68fb      	ldr	r3, [r7, #12]
 8003f9e:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8003fa0:	68fb      	ldr	r3, [r7, #12]
 8003fa2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003fa4:	b29b      	uxth	r3, r3
 8003fa6:	3b01      	subs	r3, #1
 8003fa8:	b29a      	uxth	r2, r3
 8003faa:	68fb      	ldr	r3, [r7, #12]
 8003fac:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003fae:	68fb      	ldr	r3, [r7, #12]
 8003fb0:	681b      	ldr	r3, [r3, #0]
 8003fb2:	691a      	ldr	r2, [r3, #16]
 8003fb4:	68fb      	ldr	r3, [r7, #12]
 8003fb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003fb8:	b2d2      	uxtb	r2, r2
 8003fba:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003fbc:	68fb      	ldr	r3, [r7, #12]
 8003fbe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003fc0:	1c5a      	adds	r2, r3, #1
 8003fc2:	68fb      	ldr	r3, [r7, #12]
 8003fc4:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003fc6:	68fb      	ldr	r3, [r7, #12]
 8003fc8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003fca:	3b01      	subs	r3, #1
 8003fcc:	b29a      	uxth	r2, r3
 8003fce:	68fb      	ldr	r3, [r7, #12]
 8003fd0:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8003fd2:	68fb      	ldr	r3, [r7, #12]
 8003fd4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003fd6:	b29b      	uxth	r3, r3
 8003fd8:	3b01      	subs	r3, #1
 8003fda:	b29a      	uxth	r2, r3
 8003fdc:	68fb      	ldr	r3, [r7, #12]
 8003fde:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003fe0:	e042      	b.n	8004068 <HAL_I2C_Mem_Read+0x418>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003fe2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003fe4:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8003fe6:	68f8      	ldr	r0, [r7, #12]
 8003fe8:	f000 fb2e 	bl	8004648 <I2C_WaitOnRXNEFlagUntilTimeout>
 8003fec:	4603      	mov	r3, r0
 8003fee:	2b00      	cmp	r3, #0
 8003ff0:	d001      	beq.n	8003ff6 <HAL_I2C_Mem_Read+0x3a6>
        {
          return HAL_ERROR;
 8003ff2:	2301      	movs	r3, #1
 8003ff4:	e04c      	b.n	8004090 <HAL_I2C_Mem_Read+0x440>
        }

        /* Read data from DR */
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003ff6:	68fb      	ldr	r3, [r7, #12]
 8003ff8:	681b      	ldr	r3, [r3, #0]
 8003ffa:	691a      	ldr	r2, [r3, #16]
 8003ffc:	68fb      	ldr	r3, [r7, #12]
 8003ffe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004000:	b2d2      	uxtb	r2, r2
 8004002:	701a      	strb	r2, [r3, #0]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8004004:	68fb      	ldr	r3, [r7, #12]
 8004006:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004008:	1c5a      	adds	r2, r3, #1
 800400a:	68fb      	ldr	r3, [r7, #12]
 800400c:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferSize--;
 800400e:	68fb      	ldr	r3, [r7, #12]
 8004010:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004012:	3b01      	subs	r3, #1
 8004014:	b29a      	uxth	r2, r3
 8004016:	68fb      	ldr	r3, [r7, #12]
 8004018:	851a      	strh	r2, [r3, #40]	; 0x28
        hi2c->XferCount--;
 800401a:	68fb      	ldr	r3, [r7, #12]
 800401c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800401e:	b29b      	uxth	r3, r3
 8004020:	3b01      	subs	r3, #1
 8004022:	b29a      	uxth	r2, r3
 8004024:	68fb      	ldr	r3, [r7, #12]
 8004026:	855a      	strh	r2, [r3, #42]	; 0x2a

        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004028:	68fb      	ldr	r3, [r7, #12]
 800402a:	681b      	ldr	r3, [r3, #0]
 800402c:	695b      	ldr	r3, [r3, #20]
 800402e:	f003 0304 	and.w	r3, r3, #4
 8004032:	2b04      	cmp	r3, #4
 8004034:	d118      	bne.n	8004068 <HAL_I2C_Mem_Read+0x418>
        {
          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004036:	68fb      	ldr	r3, [r7, #12]
 8004038:	681b      	ldr	r3, [r3, #0]
 800403a:	691a      	ldr	r2, [r3, #16]
 800403c:	68fb      	ldr	r3, [r7, #12]
 800403e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004040:	b2d2      	uxtb	r2, r2
 8004042:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004044:	68fb      	ldr	r3, [r7, #12]
 8004046:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004048:	1c5a      	adds	r2, r3, #1
 800404a:	68fb      	ldr	r3, [r7, #12]
 800404c:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 800404e:	68fb      	ldr	r3, [r7, #12]
 8004050:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004052:	3b01      	subs	r3, #1
 8004054:	b29a      	uxth	r2, r3
 8004056:	68fb      	ldr	r3, [r7, #12]
 8004058:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 800405a:	68fb      	ldr	r3, [r7, #12]
 800405c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800405e:	b29b      	uxth	r3, r3
 8004060:	3b01      	subs	r3, #1
 8004062:	b29a      	uxth	r2, r3
 8004064:	68fb      	ldr	r3, [r7, #12]
 8004066:	855a      	strh	r2, [r3, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8004068:	68fb      	ldr	r3, [r7, #12]
 800406a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800406c:	2b00      	cmp	r3, #0
 800406e:	f47f aec2 	bne.w	8003df6 <HAL_I2C_Mem_Read+0x1a6>
        }
      }
    }

    hi2c->State = HAL_I2C_STATE_READY;
 8004072:	68fb      	ldr	r3, [r7, #12]
 8004074:	2220      	movs	r2, #32
 8004076:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800407a:	68fb      	ldr	r3, [r7, #12]
 800407c:	2200      	movs	r2, #0
 800407e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004082:	68fb      	ldr	r3, [r7, #12]
 8004084:	2200      	movs	r2, #0
 8004086:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 800408a:	2300      	movs	r3, #0
 800408c:	e000      	b.n	8004090 <HAL_I2C_Mem_Read+0x440>
  }
  else
  {
    return HAL_BUSY;
 800408e:	2302      	movs	r3, #2
  }
}
 8004090:	4618      	mov	r0, r3
 8004092:	3728      	adds	r7, #40	; 0x28
 8004094:	46bd      	mov	sp, r7
 8004096:	bd80      	pop	{r7, pc}
 8004098:	00010004 	.word	0x00010004

0800409c <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800409c:	b580      	push	{r7, lr}
 800409e:	b088      	sub	sp, #32
 80040a0:	af02      	add	r7, sp, #8
 80040a2:	60f8      	str	r0, [r7, #12]
 80040a4:	4608      	mov	r0, r1
 80040a6:	4611      	mov	r1, r2
 80040a8:	461a      	mov	r2, r3
 80040aa:	4603      	mov	r3, r0
 80040ac:	817b      	strh	r3, [r7, #10]
 80040ae:	460b      	mov	r3, r1
 80040b0:	813b      	strh	r3, [r7, #8]
 80040b2:	4613      	mov	r3, r2
 80040b4:	80fb      	strh	r3, [r7, #6]
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80040b6:	68fb      	ldr	r3, [r7, #12]
 80040b8:	681b      	ldr	r3, [r3, #0]
 80040ba:	681a      	ldr	r2, [r3, #0]
 80040bc:	68fb      	ldr	r3, [r7, #12]
 80040be:	681b      	ldr	r3, [r3, #0]
 80040c0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80040c4:	601a      	str	r2, [r3, #0]

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80040c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80040c8:	9300      	str	r3, [sp, #0]
 80040ca:	6a3b      	ldr	r3, [r7, #32]
 80040cc:	2200      	movs	r2, #0
 80040ce:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80040d2:	68f8      	ldr	r0, [r7, #12]
 80040d4:	f000 f960 	bl	8004398 <I2C_WaitOnFlagUntilTimeout>
 80040d8:	4603      	mov	r3, r0
 80040da:	2b00      	cmp	r3, #0
 80040dc:	d00d      	beq.n	80040fa <I2C_RequestMemoryWrite+0x5e>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80040de:	68fb      	ldr	r3, [r7, #12]
 80040e0:	681b      	ldr	r3, [r3, #0]
 80040e2:	681b      	ldr	r3, [r3, #0]
 80040e4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80040e8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80040ec:	d103      	bne.n	80040f6 <I2C_RequestMemoryWrite+0x5a>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80040ee:	68fb      	ldr	r3, [r7, #12]
 80040f0:	f44f 7200 	mov.w	r2, #512	; 0x200
 80040f4:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 80040f6:	2303      	movs	r3, #3
 80040f8:	e05f      	b.n	80041ba <I2C_RequestMemoryWrite+0x11e>
  }

  /* Send slave address */
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80040fa:	897b      	ldrh	r3, [r7, #10]
 80040fc:	b2db      	uxtb	r3, r3
 80040fe:	461a      	mov	r2, r3
 8004100:	68fb      	ldr	r3, [r7, #12]
 8004102:	681b      	ldr	r3, [r3, #0]
 8004104:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8004108:	611a      	str	r2, [r3, #16]

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800410a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800410c:	6a3a      	ldr	r2, [r7, #32]
 800410e:	492d      	ldr	r1, [pc, #180]	; (80041c4 <I2C_RequestMemoryWrite+0x128>)
 8004110:	68f8      	ldr	r0, [r7, #12]
 8004112:	f000 f998 	bl	8004446 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004116:	4603      	mov	r3, r0
 8004118:	2b00      	cmp	r3, #0
 800411a:	d001      	beq.n	8004120 <I2C_RequestMemoryWrite+0x84>
  {
    return HAL_ERROR;
 800411c:	2301      	movs	r3, #1
 800411e:	e04c      	b.n	80041ba <I2C_RequestMemoryWrite+0x11e>
  }

  /* Clear ADDR flag */
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004120:	2300      	movs	r3, #0
 8004122:	617b      	str	r3, [r7, #20]
 8004124:	68fb      	ldr	r3, [r7, #12]
 8004126:	681b      	ldr	r3, [r3, #0]
 8004128:	695b      	ldr	r3, [r3, #20]
 800412a:	617b      	str	r3, [r7, #20]
 800412c:	68fb      	ldr	r3, [r7, #12]
 800412e:	681b      	ldr	r3, [r3, #0]
 8004130:	699b      	ldr	r3, [r3, #24]
 8004132:	617b      	str	r3, [r7, #20]
 8004134:	697b      	ldr	r3, [r7, #20]

  /* Wait until TXE flag is set */
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004136:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004138:	6a39      	ldr	r1, [r7, #32]
 800413a:	68f8      	ldr	r0, [r7, #12]
 800413c:	f000 fa02 	bl	8004544 <I2C_WaitOnTXEFlagUntilTimeout>
 8004140:	4603      	mov	r3, r0
 8004142:	2b00      	cmp	r3, #0
 8004144:	d00d      	beq.n	8004162 <I2C_RequestMemoryWrite+0xc6>
  {
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004146:	68fb      	ldr	r3, [r7, #12]
 8004148:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800414a:	2b04      	cmp	r3, #4
 800414c:	d107      	bne.n	800415e <I2C_RequestMemoryWrite+0xc2>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800414e:	68fb      	ldr	r3, [r7, #12]
 8004150:	681b      	ldr	r3, [r3, #0]
 8004152:	681a      	ldr	r2, [r3, #0]
 8004154:	68fb      	ldr	r3, [r7, #12]
 8004156:	681b      	ldr	r3, [r3, #0]
 8004158:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800415c:	601a      	str	r2, [r3, #0]
    }
    return HAL_ERROR;
 800415e:	2301      	movs	r3, #1
 8004160:	e02b      	b.n	80041ba <I2C_RequestMemoryWrite+0x11e>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004162:	88fb      	ldrh	r3, [r7, #6]
 8004164:	2b01      	cmp	r3, #1
 8004166:	d105      	bne.n	8004174 <I2C_RequestMemoryWrite+0xd8>
  {
    /* Send Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004168:	893b      	ldrh	r3, [r7, #8]
 800416a:	b2da      	uxtb	r2, r3
 800416c:	68fb      	ldr	r3, [r7, #12]
 800416e:	681b      	ldr	r3, [r3, #0]
 8004170:	611a      	str	r2, [r3, #16]
 8004172:	e021      	b.n	80041b8 <I2C_RequestMemoryWrite+0x11c>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004174:	893b      	ldrh	r3, [r7, #8]
 8004176:	0a1b      	lsrs	r3, r3, #8
 8004178:	b29b      	uxth	r3, r3
 800417a:	b2da      	uxtb	r2, r3
 800417c:	68fb      	ldr	r3, [r7, #12]
 800417e:	681b      	ldr	r3, [r3, #0]
 8004180:	611a      	str	r2, [r3, #16]

    /* Wait until TXE flag is set */
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004182:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004184:	6a39      	ldr	r1, [r7, #32]
 8004186:	68f8      	ldr	r0, [r7, #12]
 8004188:	f000 f9dc 	bl	8004544 <I2C_WaitOnTXEFlagUntilTimeout>
 800418c:	4603      	mov	r3, r0
 800418e:	2b00      	cmp	r3, #0
 8004190:	d00d      	beq.n	80041ae <I2C_RequestMemoryWrite+0x112>
    {
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004192:	68fb      	ldr	r3, [r7, #12]
 8004194:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004196:	2b04      	cmp	r3, #4
 8004198:	d107      	bne.n	80041aa <I2C_RequestMemoryWrite+0x10e>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800419a:	68fb      	ldr	r3, [r7, #12]
 800419c:	681b      	ldr	r3, [r3, #0]
 800419e:	681a      	ldr	r2, [r3, #0]
 80041a0:	68fb      	ldr	r3, [r7, #12]
 80041a2:	681b      	ldr	r3, [r3, #0]
 80041a4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80041a8:	601a      	str	r2, [r3, #0]
      }
      return HAL_ERROR;
 80041aa:	2301      	movs	r3, #1
 80041ac:	e005      	b.n	80041ba <I2C_RequestMemoryWrite+0x11e>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80041ae:	893b      	ldrh	r3, [r7, #8]
 80041b0:	b2da      	uxtb	r2, r3
 80041b2:	68fb      	ldr	r3, [r7, #12]
 80041b4:	681b      	ldr	r3, [r3, #0]
 80041b6:	611a      	str	r2, [r3, #16]
  }

  return HAL_OK;
 80041b8:	2300      	movs	r3, #0
}
 80041ba:	4618      	mov	r0, r3
 80041bc:	3718      	adds	r7, #24
 80041be:	46bd      	mov	sp, r7
 80041c0:	bd80      	pop	{r7, pc}
 80041c2:	bf00      	nop
 80041c4:	00010002 	.word	0x00010002

080041c8 <I2C_RequestMemoryRead>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 80041c8:	b580      	push	{r7, lr}
 80041ca:	b088      	sub	sp, #32
 80041cc:	af02      	add	r7, sp, #8
 80041ce:	60f8      	str	r0, [r7, #12]
 80041d0:	4608      	mov	r0, r1
 80041d2:	4611      	mov	r1, r2
 80041d4:	461a      	mov	r2, r3
 80041d6:	4603      	mov	r3, r0
 80041d8:	817b      	strh	r3, [r7, #10]
 80041da:	460b      	mov	r3, r1
 80041dc:	813b      	strh	r3, [r7, #8]
 80041de:	4613      	mov	r3, r2
 80041e0:	80fb      	strh	r3, [r7, #6]
  /* Enable Acknowledge */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80041e2:	68fb      	ldr	r3, [r7, #12]
 80041e4:	681b      	ldr	r3, [r3, #0]
 80041e6:	681a      	ldr	r2, [r3, #0]
 80041e8:	68fb      	ldr	r3, [r7, #12]
 80041ea:	681b      	ldr	r3, [r3, #0]
 80041ec:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80041f0:	601a      	str	r2, [r3, #0]

  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80041f2:	68fb      	ldr	r3, [r7, #12]
 80041f4:	681b      	ldr	r3, [r3, #0]
 80041f6:	681a      	ldr	r2, [r3, #0]
 80041f8:	68fb      	ldr	r3, [r7, #12]
 80041fa:	681b      	ldr	r3, [r3, #0]
 80041fc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004200:	601a      	str	r2, [r3, #0]

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004202:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004204:	9300      	str	r3, [sp, #0]
 8004206:	6a3b      	ldr	r3, [r7, #32]
 8004208:	2200      	movs	r2, #0
 800420a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800420e:	68f8      	ldr	r0, [r7, #12]
 8004210:	f000 f8c2 	bl	8004398 <I2C_WaitOnFlagUntilTimeout>
 8004214:	4603      	mov	r3, r0
 8004216:	2b00      	cmp	r3, #0
 8004218:	d00d      	beq.n	8004236 <I2C_RequestMemoryRead+0x6e>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800421a:	68fb      	ldr	r3, [r7, #12]
 800421c:	681b      	ldr	r3, [r3, #0]
 800421e:	681b      	ldr	r3, [r3, #0]
 8004220:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004224:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8004228:	d103      	bne.n	8004232 <I2C_RequestMemoryRead+0x6a>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800422a:	68fb      	ldr	r3, [r7, #12]
 800422c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004230:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8004232:	2303      	movs	r3, #3
 8004234:	e0aa      	b.n	800438c <I2C_RequestMemoryRead+0x1c4>
  }

  /* Send slave address */
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004236:	897b      	ldrh	r3, [r7, #10]
 8004238:	b2db      	uxtb	r3, r3
 800423a:	461a      	mov	r2, r3
 800423c:	68fb      	ldr	r3, [r7, #12]
 800423e:	681b      	ldr	r3, [r3, #0]
 8004240:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8004244:	611a      	str	r2, [r3, #16]

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004246:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004248:	6a3a      	ldr	r2, [r7, #32]
 800424a:	4952      	ldr	r1, [pc, #328]	; (8004394 <I2C_RequestMemoryRead+0x1cc>)
 800424c:	68f8      	ldr	r0, [r7, #12]
 800424e:	f000 f8fa 	bl	8004446 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004252:	4603      	mov	r3, r0
 8004254:	2b00      	cmp	r3, #0
 8004256:	d001      	beq.n	800425c <I2C_RequestMemoryRead+0x94>
  {
    return HAL_ERROR;
 8004258:	2301      	movs	r3, #1
 800425a:	e097      	b.n	800438c <I2C_RequestMemoryRead+0x1c4>
  }

  /* Clear ADDR flag */
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800425c:	2300      	movs	r3, #0
 800425e:	617b      	str	r3, [r7, #20]
 8004260:	68fb      	ldr	r3, [r7, #12]
 8004262:	681b      	ldr	r3, [r3, #0]
 8004264:	695b      	ldr	r3, [r3, #20]
 8004266:	617b      	str	r3, [r7, #20]
 8004268:	68fb      	ldr	r3, [r7, #12]
 800426a:	681b      	ldr	r3, [r3, #0]
 800426c:	699b      	ldr	r3, [r3, #24]
 800426e:	617b      	str	r3, [r7, #20]
 8004270:	697b      	ldr	r3, [r7, #20]

  /* Wait until TXE flag is set */
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004272:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004274:	6a39      	ldr	r1, [r7, #32]
 8004276:	68f8      	ldr	r0, [r7, #12]
 8004278:	f000 f964 	bl	8004544 <I2C_WaitOnTXEFlagUntilTimeout>
 800427c:	4603      	mov	r3, r0
 800427e:	2b00      	cmp	r3, #0
 8004280:	d00d      	beq.n	800429e <I2C_RequestMemoryRead+0xd6>
  {
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004282:	68fb      	ldr	r3, [r7, #12]
 8004284:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004286:	2b04      	cmp	r3, #4
 8004288:	d107      	bne.n	800429a <I2C_RequestMemoryRead+0xd2>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800428a:	68fb      	ldr	r3, [r7, #12]
 800428c:	681b      	ldr	r3, [r3, #0]
 800428e:	681a      	ldr	r2, [r3, #0]
 8004290:	68fb      	ldr	r3, [r7, #12]
 8004292:	681b      	ldr	r3, [r3, #0]
 8004294:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004298:	601a      	str	r2, [r3, #0]
    }
    return HAL_ERROR;
 800429a:	2301      	movs	r3, #1
 800429c:	e076      	b.n	800438c <I2C_RequestMemoryRead+0x1c4>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800429e:	88fb      	ldrh	r3, [r7, #6]
 80042a0:	2b01      	cmp	r3, #1
 80042a2:	d105      	bne.n	80042b0 <I2C_RequestMemoryRead+0xe8>
  {
    /* Send Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80042a4:	893b      	ldrh	r3, [r7, #8]
 80042a6:	b2da      	uxtb	r2, r3
 80042a8:	68fb      	ldr	r3, [r7, #12]
 80042aa:	681b      	ldr	r3, [r3, #0]
 80042ac:	611a      	str	r2, [r3, #16]
 80042ae:	e021      	b.n	80042f4 <I2C_RequestMemoryRead+0x12c>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80042b0:	893b      	ldrh	r3, [r7, #8]
 80042b2:	0a1b      	lsrs	r3, r3, #8
 80042b4:	b29b      	uxth	r3, r3
 80042b6:	b2da      	uxtb	r2, r3
 80042b8:	68fb      	ldr	r3, [r7, #12]
 80042ba:	681b      	ldr	r3, [r3, #0]
 80042bc:	611a      	str	r2, [r3, #16]

    /* Wait until TXE flag is set */
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80042be:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80042c0:	6a39      	ldr	r1, [r7, #32]
 80042c2:	68f8      	ldr	r0, [r7, #12]
 80042c4:	f000 f93e 	bl	8004544 <I2C_WaitOnTXEFlagUntilTimeout>
 80042c8:	4603      	mov	r3, r0
 80042ca:	2b00      	cmp	r3, #0
 80042cc:	d00d      	beq.n	80042ea <I2C_RequestMemoryRead+0x122>
    {
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80042ce:	68fb      	ldr	r3, [r7, #12]
 80042d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80042d2:	2b04      	cmp	r3, #4
 80042d4:	d107      	bne.n	80042e6 <I2C_RequestMemoryRead+0x11e>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80042d6:	68fb      	ldr	r3, [r7, #12]
 80042d8:	681b      	ldr	r3, [r3, #0]
 80042da:	681a      	ldr	r2, [r3, #0]
 80042dc:	68fb      	ldr	r3, [r7, #12]
 80042de:	681b      	ldr	r3, [r3, #0]
 80042e0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80042e4:	601a      	str	r2, [r3, #0]
      }
      return HAL_ERROR;
 80042e6:	2301      	movs	r3, #1
 80042e8:	e050      	b.n	800438c <I2C_RequestMemoryRead+0x1c4>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80042ea:	893b      	ldrh	r3, [r7, #8]
 80042ec:	b2da      	uxtb	r2, r3
 80042ee:	68fb      	ldr	r3, [r7, #12]
 80042f0:	681b      	ldr	r3, [r3, #0]
 80042f2:	611a      	str	r2, [r3, #16]
  }

  /* Wait until TXE flag is set */
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80042f4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80042f6:	6a39      	ldr	r1, [r7, #32]
 80042f8:	68f8      	ldr	r0, [r7, #12]
 80042fa:	f000 f923 	bl	8004544 <I2C_WaitOnTXEFlagUntilTimeout>
 80042fe:	4603      	mov	r3, r0
 8004300:	2b00      	cmp	r3, #0
 8004302:	d00d      	beq.n	8004320 <I2C_RequestMemoryRead+0x158>
  {
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004304:	68fb      	ldr	r3, [r7, #12]
 8004306:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004308:	2b04      	cmp	r3, #4
 800430a:	d107      	bne.n	800431c <I2C_RequestMemoryRead+0x154>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800430c:	68fb      	ldr	r3, [r7, #12]
 800430e:	681b      	ldr	r3, [r3, #0]
 8004310:	681a      	ldr	r2, [r3, #0]
 8004312:	68fb      	ldr	r3, [r7, #12]
 8004314:	681b      	ldr	r3, [r3, #0]
 8004316:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800431a:	601a      	str	r2, [r3, #0]
    }
    return HAL_ERROR;
 800431c:	2301      	movs	r3, #1
 800431e:	e035      	b.n	800438c <I2C_RequestMemoryRead+0x1c4>
  }

  /* Generate Restart */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004320:	68fb      	ldr	r3, [r7, #12]
 8004322:	681b      	ldr	r3, [r3, #0]
 8004324:	681a      	ldr	r2, [r3, #0]
 8004326:	68fb      	ldr	r3, [r7, #12]
 8004328:	681b      	ldr	r3, [r3, #0]
 800432a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800432e:	601a      	str	r2, [r3, #0]

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004330:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004332:	9300      	str	r3, [sp, #0]
 8004334:	6a3b      	ldr	r3, [r7, #32]
 8004336:	2200      	movs	r2, #0
 8004338:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800433c:	68f8      	ldr	r0, [r7, #12]
 800433e:	f000 f82b 	bl	8004398 <I2C_WaitOnFlagUntilTimeout>
 8004342:	4603      	mov	r3, r0
 8004344:	2b00      	cmp	r3, #0
 8004346:	d00d      	beq.n	8004364 <I2C_RequestMemoryRead+0x19c>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004348:	68fb      	ldr	r3, [r7, #12]
 800434a:	681b      	ldr	r3, [r3, #0]
 800434c:	681b      	ldr	r3, [r3, #0]
 800434e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004352:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8004356:	d103      	bne.n	8004360 <I2C_RequestMemoryRead+0x198>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004358:	68fb      	ldr	r3, [r7, #12]
 800435a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800435e:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8004360:	2303      	movs	r3, #3
 8004362:	e013      	b.n	800438c <I2C_RequestMemoryRead+0x1c4>
  }

  /* Send slave address */
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004364:	897b      	ldrh	r3, [r7, #10]
 8004366:	b2db      	uxtb	r3, r3
 8004368:	f043 0301 	orr.w	r3, r3, #1
 800436c:	b2da      	uxtb	r2, r3
 800436e:	68fb      	ldr	r3, [r7, #12]
 8004370:	681b      	ldr	r3, [r3, #0]
 8004372:	611a      	str	r2, [r3, #16]

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004374:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004376:	6a3a      	ldr	r2, [r7, #32]
 8004378:	4906      	ldr	r1, [pc, #24]	; (8004394 <I2C_RequestMemoryRead+0x1cc>)
 800437a:	68f8      	ldr	r0, [r7, #12]
 800437c:	f000 f863 	bl	8004446 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004380:	4603      	mov	r3, r0
 8004382:	2b00      	cmp	r3, #0
 8004384:	d001      	beq.n	800438a <I2C_RequestMemoryRead+0x1c2>
  {
    return HAL_ERROR;
 8004386:	2301      	movs	r3, #1
 8004388:	e000      	b.n	800438c <I2C_RequestMemoryRead+0x1c4>
  }

  return HAL_OK;
 800438a:	2300      	movs	r3, #0
}
 800438c:	4618      	mov	r0, r3
 800438e:	3718      	adds	r7, #24
 8004390:	46bd      	mov	sp, r7
 8004392:	bd80      	pop	{r7, pc}
 8004394:	00010002 	.word	0x00010002

08004398 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
{
 8004398:	b580      	push	{r7, lr}
 800439a:	b084      	sub	sp, #16
 800439c:	af00      	add	r7, sp, #0
 800439e:	60f8      	str	r0, [r7, #12]
 80043a0:	60b9      	str	r1, [r7, #8]
 80043a2:	603b      	str	r3, [r7, #0]
 80043a4:	4613      	mov	r3, r2
 80043a6:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80043a8:	e025      	b.n	80043f6 <I2C_WaitOnFlagUntilTimeout+0x5e>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80043aa:	683b      	ldr	r3, [r7, #0]
 80043ac:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80043b0:	d021      	beq.n	80043f6 <I2C_WaitOnFlagUntilTimeout+0x5e>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80043b2:	f7fe fb15 	bl	80029e0 <HAL_GetTick>
 80043b6:	4602      	mov	r2, r0
 80043b8:	69bb      	ldr	r3, [r7, #24]
 80043ba:	1ad3      	subs	r3, r2, r3
 80043bc:	683a      	ldr	r2, [r7, #0]
 80043be:	429a      	cmp	r2, r3
 80043c0:	d302      	bcc.n	80043c8 <I2C_WaitOnFlagUntilTimeout+0x30>
 80043c2:	683b      	ldr	r3, [r7, #0]
 80043c4:	2b00      	cmp	r3, #0
 80043c6:	d116      	bne.n	80043f6 <I2C_WaitOnFlagUntilTimeout+0x5e>
      {
        hi2c->PreviousState     = I2C_STATE_NONE;
 80043c8:	68fb      	ldr	r3, [r7, #12]
 80043ca:	2200      	movs	r2, #0
 80043cc:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80043ce:	68fb      	ldr	r3, [r7, #12]
 80043d0:	2220      	movs	r2, #32
 80043d2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80043d6:	68fb      	ldr	r3, [r7, #12]
 80043d8:	2200      	movs	r2, #0
 80043da:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80043de:	68fb      	ldr	r3, [r7, #12]
 80043e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80043e2:	f043 0220 	orr.w	r2, r3, #32
 80043e6:	68fb      	ldr	r3, [r7, #12]
 80043e8:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80043ea:	68fb      	ldr	r3, [r7, #12]
 80043ec:	2200      	movs	r2, #0
 80043ee:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 80043f2:	2301      	movs	r3, #1
 80043f4:	e023      	b.n	800443e <I2C_WaitOnFlagUntilTimeout+0xa6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80043f6:	68bb      	ldr	r3, [r7, #8]
 80043f8:	0c1b      	lsrs	r3, r3, #16
 80043fa:	b2db      	uxtb	r3, r3
 80043fc:	2b01      	cmp	r3, #1
 80043fe:	d10d      	bne.n	800441c <I2C_WaitOnFlagUntilTimeout+0x84>
 8004400:	68fb      	ldr	r3, [r7, #12]
 8004402:	681b      	ldr	r3, [r3, #0]
 8004404:	695b      	ldr	r3, [r3, #20]
 8004406:	43da      	mvns	r2, r3
 8004408:	68bb      	ldr	r3, [r7, #8]
 800440a:	4013      	ands	r3, r2
 800440c:	b29b      	uxth	r3, r3
 800440e:	2b00      	cmp	r3, #0
 8004410:	bf0c      	ite	eq
 8004412:	2301      	moveq	r3, #1
 8004414:	2300      	movne	r3, #0
 8004416:	b2db      	uxtb	r3, r3
 8004418:	461a      	mov	r2, r3
 800441a:	e00c      	b.n	8004436 <I2C_WaitOnFlagUntilTimeout+0x9e>
 800441c:	68fb      	ldr	r3, [r7, #12]
 800441e:	681b      	ldr	r3, [r3, #0]
 8004420:	699b      	ldr	r3, [r3, #24]
 8004422:	43da      	mvns	r2, r3
 8004424:	68bb      	ldr	r3, [r7, #8]
 8004426:	4013      	ands	r3, r2
 8004428:	b29b      	uxth	r3, r3
 800442a:	2b00      	cmp	r3, #0
 800442c:	bf0c      	ite	eq
 800442e:	2301      	moveq	r3, #1
 8004430:	2300      	movne	r3, #0
 8004432:	b2db      	uxtb	r3, r3
 8004434:	461a      	mov	r2, r3
 8004436:	79fb      	ldrb	r3, [r7, #7]
 8004438:	429a      	cmp	r2, r3
 800443a:	d0b6      	beq.n	80043aa <I2C_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 800443c:	2300      	movs	r3, #0
}
 800443e:	4618      	mov	r0, r3
 8004440:	3710      	adds	r7, #16
 8004442:	46bd      	mov	sp, r7
 8004444:	bd80      	pop	{r7, pc}

08004446 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
{
 8004446:	b580      	push	{r7, lr}
 8004448:	b084      	sub	sp, #16
 800444a:	af00      	add	r7, sp, #0
 800444c:	60f8      	str	r0, [r7, #12]
 800444e:	60b9      	str	r1, [r7, #8]
 8004450:	607a      	str	r2, [r7, #4]
 8004452:	603b      	str	r3, [r7, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004454:	e051      	b.n	80044fa <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004456:	68fb      	ldr	r3, [r7, #12]
 8004458:	681b      	ldr	r3, [r3, #0]
 800445a:	695b      	ldr	r3, [r3, #20]
 800445c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004460:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004464:	d123      	bne.n	80044ae <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004466:	68fb      	ldr	r3, [r7, #12]
 8004468:	681b      	ldr	r3, [r3, #0]
 800446a:	681a      	ldr	r2, [r3, #0]
 800446c:	68fb      	ldr	r3, [r7, #12]
 800446e:	681b      	ldr	r3, [r3, #0]
 8004470:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004474:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004476:	68fb      	ldr	r3, [r7, #12]
 8004478:	681b      	ldr	r3, [r3, #0]
 800447a:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 800447e:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 8004480:	68fb      	ldr	r3, [r7, #12]
 8004482:	2200      	movs	r2, #0
 8004484:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004486:	68fb      	ldr	r3, [r7, #12]
 8004488:	2220      	movs	r2, #32
 800448a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800448e:	68fb      	ldr	r3, [r7, #12]
 8004490:	2200      	movs	r2, #0
 8004492:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004496:	68fb      	ldr	r3, [r7, #12]
 8004498:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800449a:	f043 0204 	orr.w	r2, r3, #4
 800449e:	68fb      	ldr	r3, [r7, #12]
 80044a0:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 80044a2:	68fb      	ldr	r3, [r7, #12]
 80044a4:	2200      	movs	r2, #0
 80044a6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 80044aa:	2301      	movs	r3, #1
 80044ac:	e046      	b.n	800453c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80044ae:	687b      	ldr	r3, [r7, #4]
 80044b0:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80044b4:	d021      	beq.n	80044fa <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80044b6:	f7fe fa93 	bl	80029e0 <HAL_GetTick>
 80044ba:	4602      	mov	r2, r0
 80044bc:	683b      	ldr	r3, [r7, #0]
 80044be:	1ad3      	subs	r3, r2, r3
 80044c0:	687a      	ldr	r2, [r7, #4]
 80044c2:	429a      	cmp	r2, r3
 80044c4:	d302      	bcc.n	80044cc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	2b00      	cmp	r3, #0
 80044ca:	d116      	bne.n	80044fa <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 80044cc:	68fb      	ldr	r3, [r7, #12]
 80044ce:	2200      	movs	r2, #0
 80044d0:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80044d2:	68fb      	ldr	r3, [r7, #12]
 80044d4:	2220      	movs	r2, #32
 80044d6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80044da:	68fb      	ldr	r3, [r7, #12]
 80044dc:	2200      	movs	r2, #0
 80044de:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80044e2:	68fb      	ldr	r3, [r7, #12]
 80044e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80044e6:	f043 0220 	orr.w	r2, r3, #32
 80044ea:	68fb      	ldr	r3, [r7, #12]
 80044ec:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80044ee:	68fb      	ldr	r3, [r7, #12]
 80044f0:	2200      	movs	r2, #0
 80044f2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 80044f6:	2301      	movs	r3, #1
 80044f8:	e020      	b.n	800453c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80044fa:	68bb      	ldr	r3, [r7, #8]
 80044fc:	0c1b      	lsrs	r3, r3, #16
 80044fe:	b2db      	uxtb	r3, r3
 8004500:	2b01      	cmp	r3, #1
 8004502:	d10c      	bne.n	800451e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8004504:	68fb      	ldr	r3, [r7, #12]
 8004506:	681b      	ldr	r3, [r3, #0]
 8004508:	695b      	ldr	r3, [r3, #20]
 800450a:	43da      	mvns	r2, r3
 800450c:	68bb      	ldr	r3, [r7, #8]
 800450e:	4013      	ands	r3, r2
 8004510:	b29b      	uxth	r3, r3
 8004512:	2b00      	cmp	r3, #0
 8004514:	bf14      	ite	ne
 8004516:	2301      	movne	r3, #1
 8004518:	2300      	moveq	r3, #0
 800451a:	b2db      	uxtb	r3, r3
 800451c:	e00b      	b.n	8004536 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 800451e:	68fb      	ldr	r3, [r7, #12]
 8004520:	681b      	ldr	r3, [r3, #0]
 8004522:	699b      	ldr	r3, [r3, #24]
 8004524:	43da      	mvns	r2, r3
 8004526:	68bb      	ldr	r3, [r7, #8]
 8004528:	4013      	ands	r3, r2
 800452a:	b29b      	uxth	r3, r3
 800452c:	2b00      	cmp	r3, #0
 800452e:	bf14      	ite	ne
 8004530:	2301      	movne	r3, #1
 8004532:	2300      	moveq	r3, #0
 8004534:	b2db      	uxtb	r3, r3
 8004536:	2b00      	cmp	r3, #0
 8004538:	d18d      	bne.n	8004456 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
      }
    }
  }
  return HAL_OK;
 800453a:	2300      	movs	r3, #0
}
 800453c:	4618      	mov	r0, r3
 800453e:	3710      	adds	r7, #16
 8004540:	46bd      	mov	sp, r7
 8004542:	bd80      	pop	{r7, pc}

08004544 <I2C_WaitOnTXEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8004544:	b580      	push	{r7, lr}
 8004546:	b084      	sub	sp, #16
 8004548:	af00      	add	r7, sp, #0
 800454a:	60f8      	str	r0, [r7, #12]
 800454c:	60b9      	str	r1, [r7, #8]
 800454e:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004550:	e02d      	b.n	80045ae <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004552:	68f8      	ldr	r0, [r7, #12]
 8004554:	f000 f8ce 	bl	80046f4 <I2C_IsAcknowledgeFailed>
 8004558:	4603      	mov	r3, r0
 800455a:	2b00      	cmp	r3, #0
 800455c:	d001      	beq.n	8004562 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 800455e:	2301      	movs	r3, #1
 8004560:	e02d      	b.n	80045be <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004562:	68bb      	ldr	r3, [r7, #8]
 8004564:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8004568:	d021      	beq.n	80045ae <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800456a:	f7fe fa39 	bl	80029e0 <HAL_GetTick>
 800456e:	4602      	mov	r2, r0
 8004570:	687b      	ldr	r3, [r7, #4]
 8004572:	1ad3      	subs	r3, r2, r3
 8004574:	68ba      	ldr	r2, [r7, #8]
 8004576:	429a      	cmp	r2, r3
 8004578:	d302      	bcc.n	8004580 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 800457a:	68bb      	ldr	r3, [r7, #8]
 800457c:	2b00      	cmp	r3, #0
 800457e:	d116      	bne.n	80045ae <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004580:	68fb      	ldr	r3, [r7, #12]
 8004582:	2200      	movs	r2, #0
 8004584:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004586:	68fb      	ldr	r3, [r7, #12]
 8004588:	2220      	movs	r2, #32
 800458a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800458e:	68fb      	ldr	r3, [r7, #12]
 8004590:	2200      	movs	r2, #0
 8004592:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004596:	68fb      	ldr	r3, [r7, #12]
 8004598:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800459a:	f043 0220 	orr.w	r2, r3, #32
 800459e:	68fb      	ldr	r3, [r7, #12]
 80045a0:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80045a2:	68fb      	ldr	r3, [r7, #12]
 80045a4:	2200      	movs	r2, #0
 80045a6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 80045aa:	2301      	movs	r3, #1
 80045ac:	e007      	b.n	80045be <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80045ae:	68fb      	ldr	r3, [r7, #12]
 80045b0:	681b      	ldr	r3, [r3, #0]
 80045b2:	695b      	ldr	r3, [r3, #20]
 80045b4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80045b8:	2b80      	cmp	r3, #128	; 0x80
 80045ba:	d1ca      	bne.n	8004552 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 80045bc:	2300      	movs	r3, #0
}
 80045be:	4618      	mov	r0, r3
 80045c0:	3710      	adds	r7, #16
 80045c2:	46bd      	mov	sp, r7
 80045c4:	bd80      	pop	{r7, pc}

080045c6 <I2C_WaitOnBTFFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 80045c6:	b580      	push	{r7, lr}
 80045c8:	b084      	sub	sp, #16
 80045ca:	af00      	add	r7, sp, #0
 80045cc:	60f8      	str	r0, [r7, #12]
 80045ce:	60b9      	str	r1, [r7, #8]
 80045d0:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80045d2:	e02d      	b.n	8004630 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80045d4:	68f8      	ldr	r0, [r7, #12]
 80045d6:	f000 f88d 	bl	80046f4 <I2C_IsAcknowledgeFailed>
 80045da:	4603      	mov	r3, r0
 80045dc:	2b00      	cmp	r3, #0
 80045de:	d001      	beq.n	80045e4 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 80045e0:	2301      	movs	r3, #1
 80045e2:	e02d      	b.n	8004640 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80045e4:	68bb      	ldr	r3, [r7, #8]
 80045e6:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80045ea:	d021      	beq.n	8004630 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80045ec:	f7fe f9f8 	bl	80029e0 <HAL_GetTick>
 80045f0:	4602      	mov	r2, r0
 80045f2:	687b      	ldr	r3, [r7, #4]
 80045f4:	1ad3      	subs	r3, r2, r3
 80045f6:	68ba      	ldr	r2, [r7, #8]
 80045f8:	429a      	cmp	r2, r3
 80045fa:	d302      	bcc.n	8004602 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 80045fc:	68bb      	ldr	r3, [r7, #8]
 80045fe:	2b00      	cmp	r3, #0
 8004600:	d116      	bne.n	8004630 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004602:	68fb      	ldr	r3, [r7, #12]
 8004604:	2200      	movs	r2, #0
 8004606:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004608:	68fb      	ldr	r3, [r7, #12]
 800460a:	2220      	movs	r2, #32
 800460c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004610:	68fb      	ldr	r3, [r7, #12]
 8004612:	2200      	movs	r2, #0
 8004614:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004618:	68fb      	ldr	r3, [r7, #12]
 800461a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800461c:	f043 0220 	orr.w	r2, r3, #32
 8004620:	68fb      	ldr	r3, [r7, #12]
 8004622:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8004624:	68fb      	ldr	r3, [r7, #12]
 8004626:	2200      	movs	r2, #0
 8004628:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 800462c:	2301      	movs	r3, #1
 800462e:	e007      	b.n	8004640 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004630:	68fb      	ldr	r3, [r7, #12]
 8004632:	681b      	ldr	r3, [r3, #0]
 8004634:	695b      	ldr	r3, [r3, #20]
 8004636:	f003 0304 	and.w	r3, r3, #4
 800463a:	2b04      	cmp	r3, #4
 800463c:	d1ca      	bne.n	80045d4 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 800463e:	2300      	movs	r3, #0
}
 8004640:	4618      	mov	r0, r3
 8004642:	3710      	adds	r7, #16
 8004644:	46bd      	mov	sp, r7
 8004646:	bd80      	pop	{r7, pc}

08004648 <I2C_WaitOnRXNEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8004648:	b580      	push	{r7, lr}
 800464a:	b084      	sub	sp, #16
 800464c:	af00      	add	r7, sp, #0
 800464e:	60f8      	str	r0, [r7, #12]
 8004650:	60b9      	str	r1, [r7, #8]
 8004652:	607a      	str	r2, [r7, #4]

  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004654:	e042      	b.n	80046dc <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
  {
    /* Check if a STOPF is detected */
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8004656:	68fb      	ldr	r3, [r7, #12]
 8004658:	681b      	ldr	r3, [r3, #0]
 800465a:	695b      	ldr	r3, [r3, #20]
 800465c:	f003 0310 	and.w	r3, r3, #16
 8004660:	2b10      	cmp	r3, #16
 8004662:	d119      	bne.n	8004698 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004664:	68fb      	ldr	r3, [r7, #12]
 8004666:	681b      	ldr	r3, [r3, #0]
 8004668:	f06f 0210 	mvn.w	r2, #16
 800466c:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 800466e:	68fb      	ldr	r3, [r7, #12]
 8004670:	2200      	movs	r2, #0
 8004672:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004674:	68fb      	ldr	r3, [r7, #12]
 8004676:	2220      	movs	r2, #32
 8004678:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800467c:	68fb      	ldr	r3, [r7, #12]
 800467e:	2200      	movs	r2, #0
 8004680:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8004684:	68fb      	ldr	r3, [r7, #12]
 8004686:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004688:	68fb      	ldr	r3, [r7, #12]
 800468a:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 800468c:	68fb      	ldr	r3, [r7, #12]
 800468e:	2200      	movs	r2, #0
 8004690:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 8004694:	2301      	movs	r3, #1
 8004696:	e029      	b.n	80046ec <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004698:	f7fe f9a2 	bl	80029e0 <HAL_GetTick>
 800469c:	4602      	mov	r2, r0
 800469e:	687b      	ldr	r3, [r7, #4]
 80046a0:	1ad3      	subs	r3, r2, r3
 80046a2:	68ba      	ldr	r2, [r7, #8]
 80046a4:	429a      	cmp	r2, r3
 80046a6:	d302      	bcc.n	80046ae <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 80046a8:	68bb      	ldr	r3, [r7, #8]
 80046aa:	2b00      	cmp	r3, #0
 80046ac:	d116      	bne.n	80046dc <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
    {
      hi2c->PreviousState       = I2C_STATE_NONE;
 80046ae:	68fb      	ldr	r3, [r7, #12]
 80046b0:	2200      	movs	r2, #0
 80046b2:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80046b4:	68fb      	ldr	r3, [r7, #12]
 80046b6:	2220      	movs	r2, #32
 80046b8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80046bc:	68fb      	ldr	r3, [r7, #12]
 80046be:	2200      	movs	r2, #0
 80046c0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80046c4:	68fb      	ldr	r3, [r7, #12]
 80046c6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80046c8:	f043 0220 	orr.w	r2, r3, #32
 80046cc:	68fb      	ldr	r3, [r7, #12]
 80046ce:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 80046d0:	68fb      	ldr	r3, [r7, #12]
 80046d2:	2200      	movs	r2, #0
 80046d4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 80046d8:	2301      	movs	r3, #1
 80046da:	e007      	b.n	80046ec <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80046dc:	68fb      	ldr	r3, [r7, #12]
 80046de:	681b      	ldr	r3, [r3, #0]
 80046e0:	695b      	ldr	r3, [r3, #20]
 80046e2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80046e6:	2b40      	cmp	r3, #64	; 0x40
 80046e8:	d1b5      	bne.n	8004656 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
    }
  }
  return HAL_OK;
 80046ea:	2300      	movs	r3, #0
}
 80046ec:	4618      	mov	r0, r3
 80046ee:	3710      	adds	r7, #16
 80046f0:	46bd      	mov	sp, r7
 80046f2:	bd80      	pop	{r7, pc}

080046f4 <I2C_IsAcknowledgeFailed>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
 80046f4:	b480      	push	{r7}
 80046f6:	b083      	sub	sp, #12
 80046f8:	af00      	add	r7, sp, #0
 80046fa:	6078      	str	r0, [r7, #4]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80046fc:	687b      	ldr	r3, [r7, #4]
 80046fe:	681b      	ldr	r3, [r3, #0]
 8004700:	695b      	ldr	r3, [r3, #20]
 8004702:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004706:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800470a:	d11b      	bne.n	8004744 <I2C_IsAcknowledgeFailed+0x50>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800470c:	687b      	ldr	r3, [r7, #4]
 800470e:	681b      	ldr	r3, [r3, #0]
 8004710:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8004714:	615a      	str	r2, [r3, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
 8004716:	687b      	ldr	r3, [r7, #4]
 8004718:	2200      	movs	r2, #0
 800471a:	631a      	str	r2, [r3, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	2220      	movs	r2, #32
 8004720:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004724:	687b      	ldr	r3, [r7, #4]
 8004726:	2200      	movs	r2, #0
 8004728:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800472c:	687b      	ldr	r3, [r7, #4]
 800472e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004730:	f043 0204 	orr.w	r2, r3, #4
 8004734:	687b      	ldr	r3, [r7, #4]
 8004736:	641a      	str	r2, [r3, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004738:	687b      	ldr	r3, [r7, #4]
 800473a:	2200      	movs	r2, #0
 800473c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_ERROR;
 8004740:	2301      	movs	r3, #1
 8004742:	e000      	b.n	8004746 <I2C_IsAcknowledgeFailed+0x52>
  }
  return HAL_OK;
 8004744:	2300      	movs	r3, #0
}
 8004746:	4618      	mov	r0, r3
 8004748:	370c      	adds	r7, #12
 800474a:	46bd      	mov	sp, r7
 800474c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004750:	4770      	bx	lr

08004752 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8004752:	b480      	push	{r7}
 8004754:	b083      	sub	sp, #12
 8004756:	af00      	add	r7, sp, #0
 8004758:	6078      	str	r0, [r7, #4]
 800475a:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800475c:	687b      	ldr	r3, [r7, #4]
 800475e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004762:	b2db      	uxtb	r3, r3
 8004764:	2b20      	cmp	r3, #32
 8004766:	d129      	bne.n	80047bc <HAL_I2CEx_ConfigAnalogFilter+0x6a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	2224      	movs	r2, #36	; 0x24
 800476c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004770:	687b      	ldr	r3, [r7, #4]
 8004772:	681b      	ldr	r3, [r3, #0]
 8004774:	681a      	ldr	r2, [r3, #0]
 8004776:	687b      	ldr	r3, [r7, #4]
 8004778:	681b      	ldr	r3, [r3, #0]
 800477a:	f022 0201 	bic.w	r2, r2, #1
 800477e:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8004780:	687b      	ldr	r3, [r7, #4]
 8004782:	681b      	ldr	r3, [r3, #0]
 8004784:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004786:	687b      	ldr	r3, [r7, #4]
 8004788:	681b      	ldr	r3, [r3, #0]
 800478a:	f022 0210 	bic.w	r2, r2, #16
 800478e:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8004790:	687b      	ldr	r3, [r7, #4]
 8004792:	681b      	ldr	r3, [r3, #0]
 8004794:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8004796:	687b      	ldr	r3, [r7, #4]
 8004798:	681b      	ldr	r3, [r3, #0]
 800479a:	683a      	ldr	r2, [r7, #0]
 800479c:	430a      	orrs	r2, r1
 800479e:	625a      	str	r2, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 80047a0:	687b      	ldr	r3, [r7, #4]
 80047a2:	681b      	ldr	r3, [r3, #0]
 80047a4:	681a      	ldr	r2, [r3, #0]
 80047a6:	687b      	ldr	r3, [r7, #4]
 80047a8:	681b      	ldr	r3, [r3, #0]
 80047aa:	f042 0201 	orr.w	r2, r2, #1
 80047ae:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80047b0:	687b      	ldr	r3, [r7, #4]
 80047b2:	2220      	movs	r2, #32
 80047b4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    return HAL_OK;
 80047b8:	2300      	movs	r3, #0
 80047ba:	e000      	b.n	80047be <HAL_I2CEx_ConfigAnalogFilter+0x6c>
  }
  else
  {
    return HAL_BUSY;
 80047bc:	2302      	movs	r3, #2
  }
}
 80047be:	4618      	mov	r0, r3
 80047c0:	370c      	adds	r7, #12
 80047c2:	46bd      	mov	sp, r7
 80047c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047c8:	4770      	bx	lr

080047ca <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80047ca:	b480      	push	{r7}
 80047cc:	b085      	sub	sp, #20
 80047ce:	af00      	add	r7, sp, #0
 80047d0:	6078      	str	r0, [r7, #4]
 80047d2:	6039      	str	r1, [r7, #0]
  uint16_t tmpreg = 0;
 80047d4:	2300      	movs	r3, #0
 80047d6:	81fb      	strh	r3, [r7, #14]

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80047d8:	687b      	ldr	r3, [r7, #4]
 80047da:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80047de:	b2db      	uxtb	r3, r3
 80047e0:	2b20      	cmp	r3, #32
 80047e2:	d12a      	bne.n	800483a <HAL_I2CEx_ConfigDigitalFilter+0x70>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 80047e4:	687b      	ldr	r3, [r7, #4]
 80047e6:	2224      	movs	r2, #36	; 0x24
 80047e8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80047ec:	687b      	ldr	r3, [r7, #4]
 80047ee:	681b      	ldr	r3, [r3, #0]
 80047f0:	681a      	ldr	r2, [r3, #0]
 80047f2:	687b      	ldr	r3, [r7, #4]
 80047f4:	681b      	ldr	r3, [r3, #0]
 80047f6:	f022 0201 	bic.w	r2, r2, #1
 80047fa:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 80047fc:	687b      	ldr	r3, [r7, #4]
 80047fe:	681b      	ldr	r3, [r3, #0]
 8004800:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004802:	81fb      	strh	r3, [r7, #14]

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8004804:	89fb      	ldrh	r3, [r7, #14]
 8004806:	f023 030f 	bic.w	r3, r3, #15
 800480a:	81fb      	strh	r3, [r7, #14]

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 800480c:	683b      	ldr	r3, [r7, #0]
 800480e:	b29a      	uxth	r2, r3
 8004810:	89fb      	ldrh	r3, [r7, #14]
 8004812:	4313      	orrs	r3, r2
 8004814:	81fb      	strh	r3, [r7, #14]

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8004816:	687b      	ldr	r3, [r7, #4]
 8004818:	681b      	ldr	r3, [r3, #0]
 800481a:	89fa      	ldrh	r2, [r7, #14]
 800481c:	625a      	str	r2, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 800481e:	687b      	ldr	r3, [r7, #4]
 8004820:	681b      	ldr	r3, [r3, #0]
 8004822:	681a      	ldr	r2, [r3, #0]
 8004824:	687b      	ldr	r3, [r7, #4]
 8004826:	681b      	ldr	r3, [r3, #0]
 8004828:	f042 0201 	orr.w	r2, r2, #1
 800482c:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800482e:	687b      	ldr	r3, [r7, #4]
 8004830:	2220      	movs	r2, #32
 8004832:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    return HAL_OK;
 8004836:	2300      	movs	r3, #0
 8004838:	e000      	b.n	800483c <HAL_I2CEx_ConfigDigitalFilter+0x72>
  }
  else
  {
    return HAL_BUSY;
 800483a:	2302      	movs	r3, #2
  }
}
 800483c:	4618      	mov	r0, r3
 800483e:	3714      	adds	r7, #20
 8004840:	46bd      	mov	sp, r7
 8004842:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004846:	4770      	bx	lr

08004848 <HAL_I2S_Init>:
  * @param  hi2s pointer to a I2S_HandleTypeDef structure that contains
  *         the configuration information for I2S module
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2S_Init(I2S_HandleTypeDef *hi2s)
{
 8004848:	b580      	push	{r7, lr}
 800484a:	b088      	sub	sp, #32
 800484c:	af00      	add	r7, sp, #0
 800484e:	6078      	str	r0, [r7, #4]
#if defined (SPI_I2S_FULLDUPLEX_SUPPORT)
  uint16_t tmpreg;
#endif

  /* Check the I2S handle allocation */
  if (hi2s == NULL)
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	2b00      	cmp	r3, #0
 8004854:	d101      	bne.n	800485a <HAL_I2S_Init+0x12>
  {
    return HAL_ERROR;
 8004856:	2301      	movs	r3, #1
 8004858:	e128      	b.n	8004aac <HAL_I2S_Init+0x264>
  assert_param(IS_I2S_MCLK_OUTPUT(hi2s->Init.MCLKOutput));
  assert_param(IS_I2S_AUDIO_FREQ(hi2s->Init.AudioFreq));
  assert_param(IS_I2S_CPOL(hi2s->Init.CPOL));
  assert_param(IS_I2S_CLOCKSOURCE(hi2s->Init.ClockSource));

  if (hi2s->State == HAL_I2S_STATE_RESET)
 800485a:	687b      	ldr	r3, [r7, #4]
 800485c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004860:	b2db      	uxtb	r3, r3
 8004862:	2b00      	cmp	r3, #0
 8004864:	d109      	bne.n	800487a <HAL_I2S_Init+0x32>
  {
    /* Allocate lock resource and initialize it */
    hi2s->Lock = HAL_UNLOCKED;
 8004866:	687b      	ldr	r3, [r7, #4]
 8004868:	2200      	movs	r2, #0
 800486a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    /* Initialize Default I2S IrqHandler ISR */
    hi2s->IrqHandlerISR = I2S_IRQHandler;
 800486e:	687b      	ldr	r3, [r7, #4]
 8004870:	4a90      	ldr	r2, [pc, #576]	; (8004ab4 <HAL_I2S_Init+0x26c>)
 8004872:	635a      	str	r2, [r3, #52]	; 0x34

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hi2s->MspInitCallback(hi2s);
#else
    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    HAL_I2S_MspInit(hi2s);
 8004874:	6878      	ldr	r0, [r7, #4]
 8004876:	f7fd fc53 	bl	8002120 <HAL_I2S_MspInit>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
  }

  hi2s->State = HAL_I2S_STATE_BUSY;
 800487a:	687b      	ldr	r3, [r7, #4]
 800487c:	2202      	movs	r2, #2
 800487e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

  /*----------------------- SPIx I2SCFGR & I2SPR Configuration ----------------*/
  /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
  CLEAR_BIT(hi2s->Instance->I2SCFGR, (SPI_I2SCFGR_CHLEN | SPI_I2SCFGR_DATLEN | SPI_I2SCFGR_CKPOL | \
 8004882:	687b      	ldr	r3, [r7, #4]
 8004884:	681b      	ldr	r3, [r3, #0]
 8004886:	69db      	ldr	r3, [r3, #28]
 8004888:	687a      	ldr	r2, [r7, #4]
 800488a:	6812      	ldr	r2, [r2, #0]
 800488c:	f423 637b 	bic.w	r3, r3, #4016	; 0xfb0
 8004890:	f023 030f 	bic.w	r3, r3, #15
 8004894:	61d3      	str	r3, [r2, #28]
                                      SPI_I2SCFGR_I2SSTD | SPI_I2SCFGR_PCMSYNC | SPI_I2SCFGR_I2SCFG | \
                                      SPI_I2SCFGR_I2SE | SPI_I2SCFGR_I2SMOD));
  hi2s->Instance->I2SPR = 0x0002U;
 8004896:	687b      	ldr	r3, [r7, #4]
 8004898:	681b      	ldr	r3, [r3, #0]
 800489a:	2202      	movs	r2, #2
 800489c:	621a      	str	r2, [r3, #32]

  /*----------------------- I2SPR: I2SDIV and ODD Calculation -----------------*/
  /* If the requested audio frequency is not the default, compute the prescaler */
  if (hi2s->Init.AudioFreq != I2S_AUDIOFREQ_DEFAULT)
 800489e:	687b      	ldr	r3, [r7, #4]
 80048a0:	695b      	ldr	r3, [r3, #20]
 80048a2:	2b02      	cmp	r3, #2
 80048a4:	d060      	beq.n	8004968 <HAL_I2S_Init+0x120>
  {
    /* Check the frame length (For the Prescaler computing) ********************/
    if (hi2s->Init.DataFormat == I2S_DATAFORMAT_16B)
 80048a6:	687b      	ldr	r3, [r7, #4]
 80048a8:	68db      	ldr	r3, [r3, #12]
 80048aa:	2b00      	cmp	r3, #0
 80048ac:	d102      	bne.n	80048b4 <HAL_I2S_Init+0x6c>
    {
      /* Packet length is 16 bits */
      packetlength = 16U;
 80048ae:	2310      	movs	r3, #16
 80048b0:	617b      	str	r3, [r7, #20]
 80048b2:	e001      	b.n	80048b8 <HAL_I2S_Init+0x70>
    }
    else
    {
      /* Packet length is 32 bits */
      packetlength = 32U;
 80048b4:	2320      	movs	r3, #32
 80048b6:	617b      	str	r3, [r7, #20]
    }

    /* I2S standard */
    if (hi2s->Init.Standard <= I2S_STANDARD_LSB)
 80048b8:	687b      	ldr	r3, [r7, #4]
 80048ba:	689b      	ldr	r3, [r3, #8]
 80048bc:	2b20      	cmp	r3, #32
 80048be:	d802      	bhi.n	80048c6 <HAL_I2S_Init+0x7e>
    {
      /* In I2S standard packet length is multiplied by 2 */
      packetlength = packetlength * 2U;
 80048c0:	697b      	ldr	r3, [r7, #20]
 80048c2:	005b      	lsls	r3, r3, #1
 80048c4:	617b      	str	r3, [r7, #20]
    else
    {
      i2sclk = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_I2S_APB2);
    }
#else
    i2sclk = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_I2S);
 80048c6:	2001      	movs	r0, #1
 80048c8:	f001 ff34 	bl	8006734 <HAL_RCCEx_GetPeriphCLKFreq>
 80048cc:	60f8      	str	r0, [r7, #12]
#endif /* I2S_APB1_APB2_FEATURE */

    /* Compute the Real divider depending on the MCLK output state, with a floating point */
    if (hi2s->Init.MCLKOutput == I2S_MCLKOUTPUT_ENABLE)
 80048ce:	687b      	ldr	r3, [r7, #4]
 80048d0:	691b      	ldr	r3, [r3, #16]
 80048d2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80048d6:	d125      	bne.n	8004924 <HAL_I2S_Init+0xdc>
    {
      /* MCLK output is enabled */
      if (hi2s->Init.DataFormat != I2S_DATAFORMAT_16B)
 80048d8:	687b      	ldr	r3, [r7, #4]
 80048da:	68db      	ldr	r3, [r3, #12]
 80048dc:	2b00      	cmp	r3, #0
 80048de:	d010      	beq.n	8004902 <HAL_I2S_Init+0xba>
      {
        tmp = (uint32_t)(((((i2sclk / (packetlength * 4U)) * 10U) / hi2s->Init.AudioFreq)) + 5U);
 80048e0:	697b      	ldr	r3, [r7, #20]
 80048e2:	009b      	lsls	r3, r3, #2
 80048e4:	68fa      	ldr	r2, [r7, #12]
 80048e6:	fbb2 f2f3 	udiv	r2, r2, r3
 80048ea:	4613      	mov	r3, r2
 80048ec:	009b      	lsls	r3, r3, #2
 80048ee:	4413      	add	r3, r2
 80048f0:	005b      	lsls	r3, r3, #1
 80048f2:	461a      	mov	r2, r3
 80048f4:	687b      	ldr	r3, [r7, #4]
 80048f6:	695b      	ldr	r3, [r3, #20]
 80048f8:	fbb2 f3f3 	udiv	r3, r2, r3
 80048fc:	3305      	adds	r3, #5
 80048fe:	613b      	str	r3, [r7, #16]
 8004900:	e01f      	b.n	8004942 <HAL_I2S_Init+0xfa>
      }
      else
      {
        tmp = (uint32_t)(((((i2sclk / (packetlength * 8U)) * 10U) / hi2s->Init.AudioFreq)) + 5U);
 8004902:	697b      	ldr	r3, [r7, #20]
 8004904:	00db      	lsls	r3, r3, #3
 8004906:	68fa      	ldr	r2, [r7, #12]
 8004908:	fbb2 f2f3 	udiv	r2, r2, r3
 800490c:	4613      	mov	r3, r2
 800490e:	009b      	lsls	r3, r3, #2
 8004910:	4413      	add	r3, r2
 8004912:	005b      	lsls	r3, r3, #1
 8004914:	461a      	mov	r2, r3
 8004916:	687b      	ldr	r3, [r7, #4]
 8004918:	695b      	ldr	r3, [r3, #20]
 800491a:	fbb2 f3f3 	udiv	r3, r2, r3
 800491e:	3305      	adds	r3, #5
 8004920:	613b      	str	r3, [r7, #16]
 8004922:	e00e      	b.n	8004942 <HAL_I2S_Init+0xfa>
      }
    }
    else
    {
      /* MCLK output is disabled */
      tmp = (uint32_t)(((((i2sclk / packetlength) * 10U) / hi2s->Init.AudioFreq)) + 5U);
 8004924:	68fa      	ldr	r2, [r7, #12]
 8004926:	697b      	ldr	r3, [r7, #20]
 8004928:	fbb2 f2f3 	udiv	r2, r2, r3
 800492c:	4613      	mov	r3, r2
 800492e:	009b      	lsls	r3, r3, #2
 8004930:	4413      	add	r3, r2
 8004932:	005b      	lsls	r3, r3, #1
 8004934:	461a      	mov	r2, r3
 8004936:	687b      	ldr	r3, [r7, #4]
 8004938:	695b      	ldr	r3, [r3, #20]
 800493a:	fbb2 f3f3 	udiv	r3, r2, r3
 800493e:	3305      	adds	r3, #5
 8004940:	613b      	str	r3, [r7, #16]
    }

    /* Remove the flatting point */
    tmp = tmp / 10U;
 8004942:	693b      	ldr	r3, [r7, #16]
 8004944:	4a5c      	ldr	r2, [pc, #368]	; (8004ab8 <HAL_I2S_Init+0x270>)
 8004946:	fba2 2303 	umull	r2, r3, r2, r3
 800494a:	08db      	lsrs	r3, r3, #3
 800494c:	613b      	str	r3, [r7, #16]

    /* Check the parity of the divider */
    i2sodd = (uint32_t)(tmp & (uint32_t)1U);
 800494e:	693b      	ldr	r3, [r7, #16]
 8004950:	f003 0301 	and.w	r3, r3, #1
 8004954:	61bb      	str	r3, [r7, #24]

    /* Compute the i2sdiv prescaler */
    i2sdiv = (uint32_t)((tmp - i2sodd) / 2U);
 8004956:	693a      	ldr	r2, [r7, #16]
 8004958:	69bb      	ldr	r3, [r7, #24]
 800495a:	1ad3      	subs	r3, r2, r3
 800495c:	085b      	lsrs	r3, r3, #1
 800495e:	61fb      	str	r3, [r7, #28]

    /* Get the Mask for the Odd bit (SPI_I2SPR[8]) register */
    i2sodd = (uint32_t)(i2sodd << 8U);
 8004960:	69bb      	ldr	r3, [r7, #24]
 8004962:	021b      	lsls	r3, r3, #8
 8004964:	61bb      	str	r3, [r7, #24]
 8004966:	e003      	b.n	8004970 <HAL_I2S_Init+0x128>
  }
  else
  {
    /* Set the default values */
    i2sdiv = 2U;
 8004968:	2302      	movs	r3, #2
 800496a:	61fb      	str	r3, [r7, #28]
    i2sodd = 0U;
 800496c:	2300      	movs	r3, #0
 800496e:	61bb      	str	r3, [r7, #24]
  }

  /* Test if the divider is 1 or 0 or greater than 0xFF */
  if ((i2sdiv < 2U) || (i2sdiv > 0xFFU))
 8004970:	69fb      	ldr	r3, [r7, #28]
 8004972:	2b01      	cmp	r3, #1
 8004974:	d902      	bls.n	800497c <HAL_I2S_Init+0x134>
 8004976:	69fb      	ldr	r3, [r7, #28]
 8004978:	2bff      	cmp	r3, #255	; 0xff
 800497a:	d907      	bls.n	800498c <HAL_I2S_Init+0x144>
  {
    /* Set the error code and execute error callback*/
    SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_PRESCALER);
 800497c:	687b      	ldr	r3, [r7, #4]
 800497e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004980:	f043 0210 	orr.w	r2, r3, #16
 8004984:	687b      	ldr	r3, [r7, #4]
 8004986:	645a      	str	r2, [r3, #68]	; 0x44
    return  HAL_ERROR;
 8004988:	2301      	movs	r3, #1
 800498a:	e08f      	b.n	8004aac <HAL_I2S_Init+0x264>
  }

  /*----------------------- SPIx I2SCFGR & I2SPR Configuration ----------------*/

  /* Write to SPIx I2SPR register the computed value */
  hi2s->Instance->I2SPR = (uint32_t)((uint32_t)i2sdiv | (uint32_t)(i2sodd | (uint32_t)hi2s->Init.MCLKOutput));
 800498c:	687b      	ldr	r3, [r7, #4]
 800498e:	691a      	ldr	r2, [r3, #16]
 8004990:	69bb      	ldr	r3, [r7, #24]
 8004992:	ea42 0103 	orr.w	r1, r2, r3
 8004996:	687b      	ldr	r3, [r7, #4]
 8004998:	681b      	ldr	r3, [r3, #0]
 800499a:	69fa      	ldr	r2, [r7, #28]
 800499c:	430a      	orrs	r2, r1
 800499e:	621a      	str	r2, [r3, #32]

  /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
  /* And configure the I2S with the I2S_InitStruct values                      */
  MODIFY_REG(hi2s->Instance->I2SCFGR, (SPI_I2SCFGR_CHLEN | SPI_I2SCFGR_DATLEN | \
 80049a0:	687b      	ldr	r3, [r7, #4]
 80049a2:	681b      	ldr	r3, [r3, #0]
 80049a4:	69db      	ldr	r3, [r3, #28]
 80049a6:	f423 637b 	bic.w	r3, r3, #4016	; 0xfb0
 80049aa:	f023 030f 	bic.w	r3, r3, #15
 80049ae:	687a      	ldr	r2, [r7, #4]
 80049b0:	6851      	ldr	r1, [r2, #4]
 80049b2:	687a      	ldr	r2, [r7, #4]
 80049b4:	6892      	ldr	r2, [r2, #8]
 80049b6:	4311      	orrs	r1, r2
 80049b8:	687a      	ldr	r2, [r7, #4]
 80049ba:	68d2      	ldr	r2, [r2, #12]
 80049bc:	4311      	orrs	r1, r2
 80049be:	687a      	ldr	r2, [r7, #4]
 80049c0:	6992      	ldr	r2, [r2, #24]
 80049c2:	430a      	orrs	r2, r1
 80049c4:	431a      	orrs	r2, r3
 80049c6:	687b      	ldr	r3, [r7, #4]
 80049c8:	681b      	ldr	r3, [r3, #0]
 80049ca:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80049ce:	61da      	str	r2, [r3, #28]
#if defined (SPI_I2S_FULLDUPLEX_SUPPORT)

  /* Configure the I2S extended if the full duplex mode is enabled */
  assert_param(IS_I2S_FULLDUPLEX_MODE(hi2s->Init.FullDuplexMode));

  if (hi2s->Init.FullDuplexMode == I2S_FULLDUPLEXMODE_ENABLE)
 80049d0:	687b      	ldr	r3, [r7, #4]
 80049d2:	6a1b      	ldr	r3, [r3, #32]
 80049d4:	2b01      	cmp	r3, #1
 80049d6:	d161      	bne.n	8004a9c <HAL_I2S_Init+0x254>
  {
    /* Set FullDuplex I2S IrqHandler ISR if FULLDUPLEXMODE is enabled */
    hi2s->IrqHandlerISR = HAL_I2SEx_FullDuplex_IRQHandler;
 80049d8:	687b      	ldr	r3, [r7, #4]
 80049da:	4a38      	ldr	r2, [pc, #224]	; (8004abc <HAL_I2S_Init+0x274>)
 80049dc:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
    CLEAR_BIT(I2SxEXT(hi2s->Instance)->I2SCFGR, (SPI_I2SCFGR_CHLEN | SPI_I2SCFGR_DATLEN | SPI_I2SCFGR_CKPOL | \
 80049de:	687b      	ldr	r3, [r7, #4]
 80049e0:	681b      	ldr	r3, [r3, #0]
 80049e2:	4a37      	ldr	r2, [pc, #220]	; (8004ac0 <HAL_I2S_Init+0x278>)
 80049e4:	4293      	cmp	r3, r2
 80049e6:	d101      	bne.n	80049ec <HAL_I2S_Init+0x1a4>
 80049e8:	4b36      	ldr	r3, [pc, #216]	; (8004ac4 <HAL_I2S_Init+0x27c>)
 80049ea:	e001      	b.n	80049f0 <HAL_I2S_Init+0x1a8>
 80049ec:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 80049f0:	69db      	ldr	r3, [r3, #28]
 80049f2:	687a      	ldr	r2, [r7, #4]
 80049f4:	6812      	ldr	r2, [r2, #0]
 80049f6:	4932      	ldr	r1, [pc, #200]	; (8004ac0 <HAL_I2S_Init+0x278>)
 80049f8:	428a      	cmp	r2, r1
 80049fa:	d101      	bne.n	8004a00 <HAL_I2S_Init+0x1b8>
 80049fc:	4a31      	ldr	r2, [pc, #196]	; (8004ac4 <HAL_I2S_Init+0x27c>)
 80049fe:	e001      	b.n	8004a04 <HAL_I2S_Init+0x1bc>
 8004a00:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
 8004a04:	f423 637b 	bic.w	r3, r3, #4016	; 0xfb0
 8004a08:	f023 030f 	bic.w	r3, r3, #15
 8004a0c:	61d3      	str	r3, [r2, #28]
                                                 SPI_I2SCFGR_I2SSTD | SPI_I2SCFGR_PCMSYNC | SPI_I2SCFGR_I2SCFG | \
                                                 SPI_I2SCFGR_I2SE | SPI_I2SCFGR_I2SMOD));
    I2SxEXT(hi2s->Instance)->I2SPR = 2U;
 8004a0e:	687b      	ldr	r3, [r7, #4]
 8004a10:	681b      	ldr	r3, [r3, #0]
 8004a12:	4a2b      	ldr	r2, [pc, #172]	; (8004ac0 <HAL_I2S_Init+0x278>)
 8004a14:	4293      	cmp	r3, r2
 8004a16:	d101      	bne.n	8004a1c <HAL_I2S_Init+0x1d4>
 8004a18:	4b2a      	ldr	r3, [pc, #168]	; (8004ac4 <HAL_I2S_Init+0x27c>)
 8004a1a:	e001      	b.n	8004a20 <HAL_I2S_Init+0x1d8>
 8004a1c:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8004a20:	2202      	movs	r2, #2
 8004a22:	621a      	str	r2, [r3, #32]

    /* Get the I2SCFGR register value */
    tmpreg = I2SxEXT(hi2s->Instance)->I2SCFGR;
 8004a24:	687b      	ldr	r3, [r7, #4]
 8004a26:	681b      	ldr	r3, [r3, #0]
 8004a28:	4a25      	ldr	r2, [pc, #148]	; (8004ac0 <HAL_I2S_Init+0x278>)
 8004a2a:	4293      	cmp	r3, r2
 8004a2c:	d101      	bne.n	8004a32 <HAL_I2S_Init+0x1ea>
 8004a2e:	4b25      	ldr	r3, [pc, #148]	; (8004ac4 <HAL_I2S_Init+0x27c>)
 8004a30:	e001      	b.n	8004a36 <HAL_I2S_Init+0x1ee>
 8004a32:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8004a36:	69db      	ldr	r3, [r3, #28]
 8004a38:	817b      	strh	r3, [r7, #10]

    /* Get the mode to be configured for the extended I2S */
    if ((hi2s->Init.Mode == I2S_MODE_MASTER_TX) || (hi2s->Init.Mode == I2S_MODE_SLAVE_TX))
 8004a3a:	687b      	ldr	r3, [r7, #4]
 8004a3c:	685b      	ldr	r3, [r3, #4]
 8004a3e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004a42:	d003      	beq.n	8004a4c <HAL_I2S_Init+0x204>
 8004a44:	687b      	ldr	r3, [r7, #4]
 8004a46:	685b      	ldr	r3, [r3, #4]
 8004a48:	2b00      	cmp	r3, #0
 8004a4a:	d103      	bne.n	8004a54 <HAL_I2S_Init+0x20c>
    {
      tmp = I2S_MODE_SLAVE_RX;
 8004a4c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004a50:	613b      	str	r3, [r7, #16]
 8004a52:	e001      	b.n	8004a58 <HAL_I2S_Init+0x210>
    }
    else /* I2S_MODE_MASTER_RX ||  I2S_MODE_SLAVE_RX */
    {
      tmp = I2S_MODE_SLAVE_TX;
 8004a54:	2300      	movs	r3, #0
 8004a56:	613b      	str	r3, [r7, #16]
    }

    /* Configure the I2S Slave with the I2S Master parameter values */
    tmpreg |= (uint16_t)((uint16_t)SPI_I2SCFGR_I2SMOD    | \
                         (uint16_t)tmp                   | \
 8004a58:	693b      	ldr	r3, [r7, #16]
 8004a5a:	b29a      	uxth	r2, r3
                         (uint16_t)hi2s->Init.Standard   | \
 8004a5c:	687b      	ldr	r3, [r7, #4]
 8004a5e:	689b      	ldr	r3, [r3, #8]
 8004a60:	b29b      	uxth	r3, r3
    tmpreg |= (uint16_t)((uint16_t)SPI_I2SCFGR_I2SMOD    | \
 8004a62:	4313      	orrs	r3, r2
 8004a64:	b29a      	uxth	r2, r3
                         (uint16_t)hi2s->Init.DataFormat | \
 8004a66:	687b      	ldr	r3, [r7, #4]
 8004a68:	68db      	ldr	r3, [r3, #12]
 8004a6a:	b29b      	uxth	r3, r3
    tmpreg |= (uint16_t)((uint16_t)SPI_I2SCFGR_I2SMOD    | \
 8004a6c:	4313      	orrs	r3, r2
 8004a6e:	b29a      	uxth	r2, r3
                         (uint16_t)hi2s->Init.CPOL);
 8004a70:	687b      	ldr	r3, [r7, #4]
 8004a72:	699b      	ldr	r3, [r3, #24]
 8004a74:	b29b      	uxth	r3, r3
    tmpreg |= (uint16_t)((uint16_t)SPI_I2SCFGR_I2SMOD    | \
 8004a76:	4313      	orrs	r3, r2
 8004a78:	b29a      	uxth	r2, r3
 8004a7a:	897b      	ldrh	r3, [r7, #10]
 8004a7c:	4313      	orrs	r3, r2
 8004a7e:	b29b      	uxth	r3, r3
 8004a80:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8004a84:	817b      	strh	r3, [r7, #10]

    /* Write to SPIx I2SCFGR */
    WRITE_REG(I2SxEXT(hi2s->Instance)->I2SCFGR, tmpreg);
 8004a86:	687b      	ldr	r3, [r7, #4]
 8004a88:	681b      	ldr	r3, [r3, #0]
 8004a8a:	4a0d      	ldr	r2, [pc, #52]	; (8004ac0 <HAL_I2S_Init+0x278>)
 8004a8c:	4293      	cmp	r3, r2
 8004a8e:	d101      	bne.n	8004a94 <HAL_I2S_Init+0x24c>
 8004a90:	4b0c      	ldr	r3, [pc, #48]	; (8004ac4 <HAL_I2S_Init+0x27c>)
 8004a92:	e001      	b.n	8004a98 <HAL_I2S_Init+0x250>
 8004a94:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8004a98:	897a      	ldrh	r2, [r7, #10]
 8004a9a:	61da      	str	r2, [r3, #28]
  }
#endif /* SPI_I2S_FULLDUPLEX_SUPPORT */

  hi2s->ErrorCode = HAL_I2S_ERROR_NONE;
 8004a9c:	687b      	ldr	r3, [r7, #4]
 8004a9e:	2200      	movs	r2, #0
 8004aa0:	645a      	str	r2, [r3, #68]	; 0x44
  hi2s->State     = HAL_I2S_STATE_READY;
 8004aa2:	687b      	ldr	r3, [r7, #4]
 8004aa4:	2201      	movs	r2, #1
 8004aa6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

  return HAL_OK;
 8004aaa:	2300      	movs	r3, #0
}
 8004aac:	4618      	mov	r0, r3
 8004aae:	3720      	adds	r7, #32
 8004ab0:	46bd      	mov	sp, r7
 8004ab2:	bd80      	pop	{r7, pc}
 8004ab4:	08005345 	.word	0x08005345
 8004ab8:	cccccccd 	.word	0xcccccccd
 8004abc:	080054cd 	.word	0x080054cd
 8004ac0:	40003800 	.word	0x40003800
 8004ac4:	40003400 	.word	0x40003400

08004ac8 <HAL_I2S_Transmit_DMA>:
  * @note   The I2S is kept enabled at the end of transaction to avoid the clock de-synchronization
  *         between Master and Slave(example: audio streaming).
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2S_Transmit_DMA(I2S_HandleTypeDef *hi2s, uint16_t *pData, uint16_t Size)
{
 8004ac8:	b580      	push	{r7, lr}
 8004aca:	b086      	sub	sp, #24
 8004acc:	af00      	add	r7, sp, #0
 8004ace:	60f8      	str	r0, [r7, #12]
 8004ad0:	60b9      	str	r1, [r7, #8]
 8004ad2:	4613      	mov	r3, r2
 8004ad4:	80fb      	strh	r3, [r7, #6]
  uint32_t tmpreg_cfgr;

  if ((pData == NULL) || (Size == 0U))
 8004ad6:	68bb      	ldr	r3, [r7, #8]
 8004ad8:	2b00      	cmp	r3, #0
 8004ada:	d002      	beq.n	8004ae2 <HAL_I2S_Transmit_DMA+0x1a>
 8004adc:	88fb      	ldrh	r3, [r7, #6]
 8004ade:	2b00      	cmp	r3, #0
 8004ae0:	d101      	bne.n	8004ae6 <HAL_I2S_Transmit_DMA+0x1e>
  {
    return  HAL_ERROR;
 8004ae2:	2301      	movs	r3, #1
 8004ae4:	e08e      	b.n	8004c04 <HAL_I2S_Transmit_DMA+0x13c>
  }

  /* Process Locked */
  __HAL_LOCK(hi2s);
 8004ae6:	68fb      	ldr	r3, [r7, #12]
 8004ae8:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8004aec:	b2db      	uxtb	r3, r3
 8004aee:	2b01      	cmp	r3, #1
 8004af0:	d101      	bne.n	8004af6 <HAL_I2S_Transmit_DMA+0x2e>
 8004af2:	2302      	movs	r3, #2
 8004af4:	e086      	b.n	8004c04 <HAL_I2S_Transmit_DMA+0x13c>
 8004af6:	68fb      	ldr	r3, [r7, #12]
 8004af8:	2201      	movs	r2, #1
 8004afa:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  if (hi2s->State != HAL_I2S_STATE_READY)
 8004afe:	68fb      	ldr	r3, [r7, #12]
 8004b00:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004b04:	b2db      	uxtb	r3, r3
 8004b06:	2b01      	cmp	r3, #1
 8004b08:	d005      	beq.n	8004b16 <HAL_I2S_Transmit_DMA+0x4e>
  {
    __HAL_UNLOCK(hi2s);
 8004b0a:	68fb      	ldr	r3, [r7, #12]
 8004b0c:	2200      	movs	r2, #0
 8004b0e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
    return HAL_BUSY;
 8004b12:	2302      	movs	r3, #2
 8004b14:	e076      	b.n	8004c04 <HAL_I2S_Transmit_DMA+0x13c>
  }

  /* Set state and reset error code */
  hi2s->State = HAL_I2S_STATE_BUSY_TX;
 8004b16:	68fb      	ldr	r3, [r7, #12]
 8004b18:	2203      	movs	r2, #3
 8004b1a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  hi2s->ErrorCode = HAL_I2S_ERROR_NONE;
 8004b1e:	68fb      	ldr	r3, [r7, #12]
 8004b20:	2200      	movs	r2, #0
 8004b22:	645a      	str	r2, [r3, #68]	; 0x44
  hi2s->pTxBuffPtr = pData;
 8004b24:	68fb      	ldr	r3, [r7, #12]
 8004b26:	68ba      	ldr	r2, [r7, #8]
 8004b28:	625a      	str	r2, [r3, #36]	; 0x24

  tmpreg_cfgr = hi2s->Instance->I2SCFGR & (SPI_I2SCFGR_DATLEN | SPI_I2SCFGR_CHLEN);
 8004b2a:	68fb      	ldr	r3, [r7, #12]
 8004b2c:	681b      	ldr	r3, [r3, #0]
 8004b2e:	69db      	ldr	r3, [r3, #28]
 8004b30:	f003 0307 	and.w	r3, r3, #7
 8004b34:	617b      	str	r3, [r7, #20]

  if ((tmpreg_cfgr == I2S_DATAFORMAT_24B) || (tmpreg_cfgr == I2S_DATAFORMAT_32B))
 8004b36:	697b      	ldr	r3, [r7, #20]
 8004b38:	2b03      	cmp	r3, #3
 8004b3a:	d002      	beq.n	8004b42 <HAL_I2S_Transmit_DMA+0x7a>
 8004b3c:	697b      	ldr	r3, [r7, #20]
 8004b3e:	2b05      	cmp	r3, #5
 8004b40:	d10a      	bne.n	8004b58 <HAL_I2S_Transmit_DMA+0x90>
  {
    hi2s->TxXferSize = (Size << 1U);
 8004b42:	88fb      	ldrh	r3, [r7, #6]
 8004b44:	005b      	lsls	r3, r3, #1
 8004b46:	b29a      	uxth	r2, r3
 8004b48:	68fb      	ldr	r3, [r7, #12]
 8004b4a:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2s->TxXferCount = (Size << 1U);
 8004b4c:	88fb      	ldrh	r3, [r7, #6]
 8004b4e:	005b      	lsls	r3, r3, #1
 8004b50:	b29a      	uxth	r2, r3
 8004b52:	68fb      	ldr	r3, [r7, #12]
 8004b54:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004b56:	e005      	b.n	8004b64 <HAL_I2S_Transmit_DMA+0x9c>
  }
  else
  {
    hi2s->TxXferSize = Size;
 8004b58:	68fb      	ldr	r3, [r7, #12]
 8004b5a:	88fa      	ldrh	r2, [r7, #6]
 8004b5c:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2s->TxXferCount = Size;
 8004b5e:	68fb      	ldr	r3, [r7, #12]
 8004b60:	88fa      	ldrh	r2, [r7, #6]
 8004b62:	855a      	strh	r2, [r3, #42]	; 0x2a
  }

  /* Set the I2S Tx DMA Half transfer complete callback */
  hi2s->hdmatx->XferHalfCpltCallback = I2S_DMATxHalfCplt;
 8004b64:	68fb      	ldr	r3, [r7, #12]
 8004b66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004b68:	4a28      	ldr	r2, [pc, #160]	; (8004c0c <HAL_I2S_Transmit_DMA+0x144>)
 8004b6a:	641a      	str	r2, [r3, #64]	; 0x40

  /* Set the I2S Tx DMA transfer complete callback */
  hi2s->hdmatx->XferCpltCallback = I2S_DMATxCplt;
 8004b6c:	68fb      	ldr	r3, [r7, #12]
 8004b6e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004b70:	4a27      	ldr	r2, [pc, #156]	; (8004c10 <HAL_I2S_Transmit_DMA+0x148>)
 8004b72:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Set the DMA error callback */
  hi2s->hdmatx->XferErrorCallback = I2S_DMAError;
 8004b74:	68fb      	ldr	r3, [r7, #12]
 8004b76:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004b78:	4a26      	ldr	r2, [pc, #152]	; (8004c14 <HAL_I2S_Transmit_DMA+0x14c>)
 8004b7a:	64da      	str	r2, [r3, #76]	; 0x4c

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hi2s->hdmatx,
 8004b7c:	68fb      	ldr	r3, [r7, #12]
 8004b7e:	6b98      	ldr	r0, [r3, #56]	; 0x38
                                 (uint32_t)hi2s->pTxBuffPtr,
 8004b80:	68fb      	ldr	r3, [r7, #12]
 8004b82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
  if (HAL_OK != HAL_DMA_Start_IT(hi2s->hdmatx,
 8004b84:	4619      	mov	r1, r3
                                 (uint32_t)&hi2s->Instance->DR,
 8004b86:	68fb      	ldr	r3, [r7, #12]
 8004b88:	681b      	ldr	r3, [r3, #0]
 8004b8a:	330c      	adds	r3, #12
  if (HAL_OK != HAL_DMA_Start_IT(hi2s->hdmatx,
 8004b8c:	461a      	mov	r2, r3
                                 hi2s->TxXferSize))
 8004b8e:	68fb      	ldr	r3, [r7, #12]
 8004b90:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004b92:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hi2s->hdmatx,
 8004b94:	f7fe f90e 	bl	8002db4 <HAL_DMA_Start_IT>
 8004b98:	4603      	mov	r3, r0
 8004b9a:	2b00      	cmp	r3, #0
 8004b9c:	d00f      	beq.n	8004bbe <HAL_I2S_Transmit_DMA+0xf6>
  {
    /* Update SPI error code */
    SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_DMA);
 8004b9e:	68fb      	ldr	r3, [r7, #12]
 8004ba0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004ba2:	f043 0208 	orr.w	r2, r3, #8
 8004ba6:	68fb      	ldr	r3, [r7, #12]
 8004ba8:	645a      	str	r2, [r3, #68]	; 0x44
    hi2s->State = HAL_I2S_STATE_READY;
 8004baa:	68fb      	ldr	r3, [r7, #12]
 8004bac:	2201      	movs	r2, #1
 8004bae:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    __HAL_UNLOCK(hi2s);
 8004bb2:	68fb      	ldr	r3, [r7, #12]
 8004bb4:	2200      	movs	r2, #0
 8004bb6:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
    return HAL_ERROR;
 8004bba:	2301      	movs	r3, #1
 8004bbc:	e022      	b.n	8004c04 <HAL_I2S_Transmit_DMA+0x13c>
  }

  /* Check if the I2S is already enabled */
  if (HAL_IS_BIT_CLR(hi2s->Instance->I2SCFGR, SPI_I2SCFGR_I2SE))
 8004bbe:	68fb      	ldr	r3, [r7, #12]
 8004bc0:	681b      	ldr	r3, [r3, #0]
 8004bc2:	69db      	ldr	r3, [r3, #28]
 8004bc4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004bc8:	2b00      	cmp	r3, #0
 8004bca:	d107      	bne.n	8004bdc <HAL_I2S_Transmit_DMA+0x114>
  {
    /* Enable I2S peripheral */
    __HAL_I2S_ENABLE(hi2s);
 8004bcc:	68fb      	ldr	r3, [r7, #12]
 8004bce:	681b      	ldr	r3, [r3, #0]
 8004bd0:	69da      	ldr	r2, [r3, #28]
 8004bd2:	68fb      	ldr	r3, [r7, #12]
 8004bd4:	681b      	ldr	r3, [r3, #0]
 8004bd6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004bda:	61da      	str	r2, [r3, #28]
  }

  /* Check if the I2S Tx request is already enabled */
  if (HAL_IS_BIT_CLR(hi2s->Instance->CR2, SPI_CR2_TXDMAEN))
 8004bdc:	68fb      	ldr	r3, [r7, #12]
 8004bde:	681b      	ldr	r3, [r3, #0]
 8004be0:	685b      	ldr	r3, [r3, #4]
 8004be2:	f003 0302 	and.w	r3, r3, #2
 8004be6:	2b00      	cmp	r3, #0
 8004be8:	d107      	bne.n	8004bfa <HAL_I2S_Transmit_DMA+0x132>
  {
    /* Enable Tx DMA Request */
    SET_BIT(hi2s->Instance->CR2, SPI_CR2_TXDMAEN);
 8004bea:	68fb      	ldr	r3, [r7, #12]
 8004bec:	681b      	ldr	r3, [r3, #0]
 8004bee:	685a      	ldr	r2, [r3, #4]
 8004bf0:	68fb      	ldr	r3, [r7, #12]
 8004bf2:	681b      	ldr	r3, [r3, #0]
 8004bf4:	f042 0202 	orr.w	r2, r2, #2
 8004bf8:	605a      	str	r2, [r3, #4]
  }

  __HAL_UNLOCK(hi2s);
 8004bfa:	68fb      	ldr	r3, [r7, #12]
 8004bfc:	2200      	movs	r2, #0
 8004bfe:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
  return HAL_OK;
 8004c02:	2300      	movs	r3, #0
}
 8004c04:	4618      	mov	r0, r3
 8004c06:	3718      	adds	r7, #24
 8004c08:	46bd      	mov	sp, r7
 8004c0a:	bd80      	pop	{r7, pc}
 8004c0c:	08005223 	.word	0x08005223
 8004c10:	080051e1 	.word	0x080051e1
 8004c14:	0800523f 	.word	0x0800523f

08004c18 <HAL_I2S_DMAPause>:
  * @param  hi2s pointer to a I2S_HandleTypeDef structure that contains
  *         the configuration information for I2S module
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2S_DMAPause(I2S_HandleTypeDef *hi2s)
{
 8004c18:	b480      	push	{r7}
 8004c1a:	b083      	sub	sp, #12
 8004c1c:	af00      	add	r7, sp, #0
 8004c1e:	6078      	str	r0, [r7, #4]
  /* Process Locked */
  __HAL_LOCK(hi2s);
 8004c20:	687b      	ldr	r3, [r7, #4]
 8004c22:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8004c26:	b2db      	uxtb	r3, r3
 8004c28:	2b01      	cmp	r3, #1
 8004c2a:	d101      	bne.n	8004c30 <HAL_I2S_DMAPause+0x18>
 8004c2c:	2302      	movs	r3, #2
 8004c2e:	e04a      	b.n	8004cc6 <HAL_I2S_DMAPause+0xae>
 8004c30:	687b      	ldr	r3, [r7, #4]
 8004c32:	2201      	movs	r2, #1
 8004c34:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  if (hi2s->State == HAL_I2S_STATE_BUSY_TX)
 8004c38:	687b      	ldr	r3, [r7, #4]
 8004c3a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004c3e:	b2db      	uxtb	r3, r3
 8004c40:	2b03      	cmp	r3, #3
 8004c42:	d108      	bne.n	8004c56 <HAL_I2S_DMAPause+0x3e>
  {
    /* Disable the I2S DMA Tx request */
    CLEAR_BIT(hi2s->Instance->CR2, SPI_CR2_TXDMAEN);
 8004c44:	687b      	ldr	r3, [r7, #4]
 8004c46:	681b      	ldr	r3, [r3, #0]
 8004c48:	685a      	ldr	r2, [r3, #4]
 8004c4a:	687b      	ldr	r3, [r7, #4]
 8004c4c:	681b      	ldr	r3, [r3, #0]
 8004c4e:	f022 0202 	bic.w	r2, r2, #2
 8004c52:	605a      	str	r2, [r3, #4]
 8004c54:	e032      	b.n	8004cbc <HAL_I2S_DMAPause+0xa4>
  }
  else if (hi2s->State == HAL_I2S_STATE_BUSY_RX)
 8004c56:	687b      	ldr	r3, [r7, #4]
 8004c58:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004c5c:	b2db      	uxtb	r3, r3
 8004c5e:	2b04      	cmp	r3, #4
 8004c60:	d108      	bne.n	8004c74 <HAL_I2S_DMAPause+0x5c>
  {
    /* Disable the I2S DMA Rx request */
    CLEAR_BIT(hi2s->Instance->CR2, SPI_CR2_RXDMAEN);
 8004c62:	687b      	ldr	r3, [r7, #4]
 8004c64:	681b      	ldr	r3, [r3, #0]
 8004c66:	685a      	ldr	r2, [r3, #4]
 8004c68:	687b      	ldr	r3, [r7, #4]
 8004c6a:	681b      	ldr	r3, [r3, #0]
 8004c6c:	f022 0201 	bic.w	r2, r2, #1
 8004c70:	605a      	str	r2, [r3, #4]
 8004c72:	e023      	b.n	8004cbc <HAL_I2S_DMAPause+0xa4>
  }
#if defined (SPI_I2S_FULLDUPLEX_SUPPORT)
  else if (hi2s->State == HAL_I2S_STATE_BUSY_TX_RX)
 8004c74:	687b      	ldr	r3, [r7, #4]
 8004c76:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004c7a:	b2db      	uxtb	r3, r3
 8004c7c:	2b05      	cmp	r3, #5
 8004c7e:	d11d      	bne.n	8004cbc <HAL_I2S_DMAPause+0xa4>
  {
    /* Pause the audio file playing by disabling the I2S DMA request */
    CLEAR_BIT(hi2s->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 8004c80:	687b      	ldr	r3, [r7, #4]
 8004c82:	681b      	ldr	r3, [r3, #0]
 8004c84:	685a      	ldr	r2, [r3, #4]
 8004c86:	687b      	ldr	r3, [r7, #4]
 8004c88:	681b      	ldr	r3, [r3, #0]
 8004c8a:	f022 0203 	bic.w	r2, r2, #3
 8004c8e:	605a      	str	r2, [r3, #4]
    CLEAR_BIT(I2SxEXT(hi2s->Instance)->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 8004c90:	687b      	ldr	r3, [r7, #4]
 8004c92:	681b      	ldr	r3, [r3, #0]
 8004c94:	4a0f      	ldr	r2, [pc, #60]	; (8004cd4 <HAL_I2S_DMAPause+0xbc>)
 8004c96:	4293      	cmp	r3, r2
 8004c98:	d101      	bne.n	8004c9e <HAL_I2S_DMAPause+0x86>
 8004c9a:	4b0f      	ldr	r3, [pc, #60]	; (8004cd8 <HAL_I2S_DMAPause+0xc0>)
 8004c9c:	e001      	b.n	8004ca2 <HAL_I2S_DMAPause+0x8a>
 8004c9e:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8004ca2:	685a      	ldr	r2, [r3, #4]
 8004ca4:	687b      	ldr	r3, [r7, #4]
 8004ca6:	681b      	ldr	r3, [r3, #0]
 8004ca8:	490a      	ldr	r1, [pc, #40]	; (8004cd4 <HAL_I2S_DMAPause+0xbc>)
 8004caa:	428b      	cmp	r3, r1
 8004cac:	d101      	bne.n	8004cb2 <HAL_I2S_DMAPause+0x9a>
 8004cae:	4b0a      	ldr	r3, [pc, #40]	; (8004cd8 <HAL_I2S_DMAPause+0xc0>)
 8004cb0:	e001      	b.n	8004cb6 <HAL_I2S_DMAPause+0x9e>
 8004cb2:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8004cb6:	f022 0203 	bic.w	r2, r2, #3
 8004cba:	605a      	str	r2, [r3, #4]
  {
    /* nothing to do */
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hi2s);
 8004cbc:	687b      	ldr	r3, [r7, #4]
 8004cbe:	2200      	movs	r2, #0
 8004cc0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  return HAL_OK;
 8004cc4:	2300      	movs	r3, #0
}
 8004cc6:	4618      	mov	r0, r3
 8004cc8:	370c      	adds	r7, #12
 8004cca:	46bd      	mov	sp, r7
 8004ccc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004cd0:	4770      	bx	lr
 8004cd2:	bf00      	nop
 8004cd4:	40003800 	.word	0x40003800
 8004cd8:	40003400 	.word	0x40003400

08004cdc <HAL_I2S_DMAResume>:
  * @param  hi2s pointer to a I2S_HandleTypeDef structure that contains
  *         the configuration information for I2S module
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2S_DMAResume(I2S_HandleTypeDef *hi2s)
{
 8004cdc:	b480      	push	{r7}
 8004cde:	b083      	sub	sp, #12
 8004ce0:	af00      	add	r7, sp, #0
 8004ce2:	6078      	str	r0, [r7, #4]
  /* Process Locked */
  __HAL_LOCK(hi2s);
 8004ce4:	687b      	ldr	r3, [r7, #4]
 8004ce6:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8004cea:	b2db      	uxtb	r3, r3
 8004cec:	2b01      	cmp	r3, #1
 8004cee:	d101      	bne.n	8004cf4 <HAL_I2S_DMAResume+0x18>
 8004cf0:	2302      	movs	r3, #2
 8004cf2:	e07d      	b.n	8004df0 <HAL_I2S_DMAResume+0x114>
 8004cf4:	687b      	ldr	r3, [r7, #4]
 8004cf6:	2201      	movs	r2, #1
 8004cf8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  if (hi2s->State == HAL_I2S_STATE_BUSY_TX)
 8004cfc:	687b      	ldr	r3, [r7, #4]
 8004cfe:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004d02:	b2db      	uxtb	r3, r3
 8004d04:	2b03      	cmp	r3, #3
 8004d06:	d108      	bne.n	8004d1a <HAL_I2S_DMAResume+0x3e>
  {
    /* Enable the I2S DMA Tx request */
    SET_BIT(hi2s->Instance->CR2, SPI_CR2_TXDMAEN);
 8004d08:	687b      	ldr	r3, [r7, #4]
 8004d0a:	681b      	ldr	r3, [r3, #0]
 8004d0c:	685a      	ldr	r2, [r3, #4]
 8004d0e:	687b      	ldr	r3, [r7, #4]
 8004d10:	681b      	ldr	r3, [r3, #0]
 8004d12:	f042 0202 	orr.w	r2, r2, #2
 8004d16:	605a      	str	r2, [r3, #4]
 8004d18:	e056      	b.n	8004dc8 <HAL_I2S_DMAResume+0xec>
  }
  else if (hi2s->State == HAL_I2S_STATE_BUSY_RX)
 8004d1a:	687b      	ldr	r3, [r7, #4]
 8004d1c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004d20:	b2db      	uxtb	r3, r3
 8004d22:	2b04      	cmp	r3, #4
 8004d24:	d108      	bne.n	8004d38 <HAL_I2S_DMAResume+0x5c>
  {
    /* Enable the I2S DMA Rx request */
    SET_BIT(hi2s->Instance->CR2, SPI_CR2_RXDMAEN);
 8004d26:	687b      	ldr	r3, [r7, #4]
 8004d28:	681b      	ldr	r3, [r3, #0]
 8004d2a:	685a      	ldr	r2, [r3, #4]
 8004d2c:	687b      	ldr	r3, [r7, #4]
 8004d2e:	681b      	ldr	r3, [r3, #0]
 8004d30:	f042 0201 	orr.w	r2, r2, #1
 8004d34:	605a      	str	r2, [r3, #4]
 8004d36:	e047      	b.n	8004dc8 <HAL_I2S_DMAResume+0xec>
  }
#if defined (SPI_I2S_FULLDUPLEX_SUPPORT)
  else if (hi2s->State == HAL_I2S_STATE_BUSY_TX_RX)
 8004d38:	687b      	ldr	r3, [r7, #4]
 8004d3a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004d3e:	b2db      	uxtb	r3, r3
 8004d40:	2b05      	cmp	r3, #5
 8004d42:	d141      	bne.n	8004dc8 <HAL_I2S_DMAResume+0xec>
  {
    /* Pause the audio file playing by disabling the I2S DMA request */
    SET_BIT(hi2s->Instance->CR2, (SPI_CR2_RXDMAEN | SPI_CR2_TXDMAEN));
 8004d44:	687b      	ldr	r3, [r7, #4]
 8004d46:	681b      	ldr	r3, [r3, #0]
 8004d48:	685a      	ldr	r2, [r3, #4]
 8004d4a:	687b      	ldr	r3, [r7, #4]
 8004d4c:	681b      	ldr	r3, [r3, #0]
 8004d4e:	f042 0203 	orr.w	r2, r2, #3
 8004d52:	605a      	str	r2, [r3, #4]
    SET_BIT(I2SxEXT(hi2s->Instance)->CR2, (SPI_CR2_RXDMAEN | SPI_CR2_TXDMAEN));
 8004d54:	687b      	ldr	r3, [r7, #4]
 8004d56:	681b      	ldr	r3, [r3, #0]
 8004d58:	4a28      	ldr	r2, [pc, #160]	; (8004dfc <HAL_I2S_DMAResume+0x120>)
 8004d5a:	4293      	cmp	r3, r2
 8004d5c:	d101      	bne.n	8004d62 <HAL_I2S_DMAResume+0x86>
 8004d5e:	4b28      	ldr	r3, [pc, #160]	; (8004e00 <HAL_I2S_DMAResume+0x124>)
 8004d60:	e001      	b.n	8004d66 <HAL_I2S_DMAResume+0x8a>
 8004d62:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8004d66:	685a      	ldr	r2, [r3, #4]
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	681b      	ldr	r3, [r3, #0]
 8004d6c:	4923      	ldr	r1, [pc, #140]	; (8004dfc <HAL_I2S_DMAResume+0x120>)
 8004d6e:	428b      	cmp	r3, r1
 8004d70:	d101      	bne.n	8004d76 <HAL_I2S_DMAResume+0x9a>
 8004d72:	4b23      	ldr	r3, [pc, #140]	; (8004e00 <HAL_I2S_DMAResume+0x124>)
 8004d74:	e001      	b.n	8004d7a <HAL_I2S_DMAResume+0x9e>
 8004d76:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8004d7a:	f042 0203 	orr.w	r2, r2, #3
 8004d7e:	605a      	str	r2, [r3, #4]

    /* If the I2Sext peripheral is still not enabled, enable it */
    if ((I2SxEXT(hi2s->Instance)->I2SCFGR & SPI_I2SCFGR_I2SE) == 0U)
 8004d80:	687b      	ldr	r3, [r7, #4]
 8004d82:	681b      	ldr	r3, [r3, #0]
 8004d84:	4a1d      	ldr	r2, [pc, #116]	; (8004dfc <HAL_I2S_DMAResume+0x120>)
 8004d86:	4293      	cmp	r3, r2
 8004d88:	d101      	bne.n	8004d8e <HAL_I2S_DMAResume+0xb2>
 8004d8a:	4b1d      	ldr	r3, [pc, #116]	; (8004e00 <HAL_I2S_DMAResume+0x124>)
 8004d8c:	e001      	b.n	8004d92 <HAL_I2S_DMAResume+0xb6>
 8004d8e:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8004d92:	69db      	ldr	r3, [r3, #28]
 8004d94:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004d98:	2b00      	cmp	r3, #0
 8004d9a:	d115      	bne.n	8004dc8 <HAL_I2S_DMAResume+0xec>
    {
      /* Enable I2Sext peripheral */
      __HAL_I2SEXT_ENABLE(hi2s);
 8004d9c:	687b      	ldr	r3, [r7, #4]
 8004d9e:	681b      	ldr	r3, [r3, #0]
 8004da0:	4a16      	ldr	r2, [pc, #88]	; (8004dfc <HAL_I2S_DMAResume+0x120>)
 8004da2:	4293      	cmp	r3, r2
 8004da4:	d101      	bne.n	8004daa <HAL_I2S_DMAResume+0xce>
 8004da6:	4b16      	ldr	r3, [pc, #88]	; (8004e00 <HAL_I2S_DMAResume+0x124>)
 8004da8:	e001      	b.n	8004dae <HAL_I2S_DMAResume+0xd2>
 8004daa:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8004dae:	69da      	ldr	r2, [r3, #28]
 8004db0:	687b      	ldr	r3, [r7, #4]
 8004db2:	681b      	ldr	r3, [r3, #0]
 8004db4:	4911      	ldr	r1, [pc, #68]	; (8004dfc <HAL_I2S_DMAResume+0x120>)
 8004db6:	428b      	cmp	r3, r1
 8004db8:	d101      	bne.n	8004dbe <HAL_I2S_DMAResume+0xe2>
 8004dba:	4b11      	ldr	r3, [pc, #68]	; (8004e00 <HAL_I2S_DMAResume+0x124>)
 8004dbc:	e001      	b.n	8004dc2 <HAL_I2S_DMAResume+0xe6>
 8004dbe:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8004dc2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004dc6:	61da      	str	r2, [r3, #28]
  {
    /* nothing to do */
  }

  /* If the I2S peripheral is still not enabled, enable it */
  if (HAL_IS_BIT_CLR(hi2s->Instance->I2SCFGR, SPI_I2SCFGR_I2SE))
 8004dc8:	687b      	ldr	r3, [r7, #4]
 8004dca:	681b      	ldr	r3, [r3, #0]
 8004dcc:	69db      	ldr	r3, [r3, #28]
 8004dce:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004dd2:	2b00      	cmp	r3, #0
 8004dd4:	d107      	bne.n	8004de6 <HAL_I2S_DMAResume+0x10a>
  {
    /* Enable I2S peripheral */
    __HAL_I2S_ENABLE(hi2s);
 8004dd6:	687b      	ldr	r3, [r7, #4]
 8004dd8:	681b      	ldr	r3, [r3, #0]
 8004dda:	69da      	ldr	r2, [r3, #28]
 8004ddc:	687b      	ldr	r3, [r7, #4]
 8004dde:	681b      	ldr	r3, [r3, #0]
 8004de0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004de4:	61da      	str	r2, [r3, #28]
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hi2s);
 8004de6:	687b      	ldr	r3, [r7, #4]
 8004de8:	2200      	movs	r2, #0
 8004dea:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  return HAL_OK;
 8004dee:	2300      	movs	r3, #0
}
 8004df0:	4618      	mov	r0, r3
 8004df2:	370c      	adds	r7, #12
 8004df4:	46bd      	mov	sp, r7
 8004df6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004dfa:	4770      	bx	lr
 8004dfc:	40003800 	.word	0x40003800
 8004e00:	40003400 	.word	0x40003400

08004e04 <HAL_I2S_DMAStop>:
  * @param  hi2s pointer to a I2S_HandleTypeDef structure that contains
  *         the configuration information for I2S module
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2S_DMAStop(I2S_HandleTypeDef *hi2s)
{
 8004e04:	b580      	push	{r7, lr}
 8004e06:	b088      	sub	sp, #32
 8004e08:	af00      	add	r7, sp, #0
 8004e0a:	6078      	str	r0, [r7, #4]
#if defined (SPI_I2S_FULLDUPLEX_SUPPORT)
  uint32_t tickstart;
#endif /* SPI_I2S_FULLDUPLEX_SUPPORT */
  HAL_StatusTypeDef errorcode = HAL_OK;
 8004e0c:	2300      	movs	r3, #0
 8004e0e:	77fb      	strb	r3, [r7, #31]
     to call the HAL SPI API under callbacks HAL_I2S_TxCpltCallback() or HAL_I2S_RxCpltCallback()
     when calling HAL_DMA_Abort() API the DMA TX or RX Transfer complete interrupt is generated
     and the correspond call back is executed HAL_I2S_TxCpltCallback() or HAL_I2S_RxCpltCallback()
     */

  if ((hi2s->Init.Mode == I2S_MODE_MASTER_TX) || (hi2s->Init.Mode == I2S_MODE_SLAVE_TX))
 8004e10:	687b      	ldr	r3, [r7, #4]
 8004e12:	685b      	ldr	r3, [r3, #4]
 8004e14:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004e18:	d004      	beq.n	8004e24 <HAL_I2S_DMAStop+0x20>
 8004e1a:	687b      	ldr	r3, [r7, #4]
 8004e1c:	685b      	ldr	r3, [r3, #4]
 8004e1e:	2b00      	cmp	r3, #0
 8004e20:	f040 80d1 	bne.w	8004fc6 <HAL_I2S_DMAStop+0x1c2>
  {
    /* Abort the I2S DMA tx Stream/Channel */
    if (hi2s->hdmatx != NULL)
 8004e24:	687b      	ldr	r3, [r7, #4]
 8004e26:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004e28:	2b00      	cmp	r3, #0
 8004e2a:	d00f      	beq.n	8004e4c <HAL_I2S_DMAStop+0x48>
    {
      /* Disable the I2S DMA tx Stream/Channel */
      if (HAL_OK != HAL_DMA_Abort(hi2s->hdmatx))
 8004e2c:	687b      	ldr	r3, [r7, #4]
 8004e2e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004e30:	4618      	mov	r0, r3
 8004e32:	f7fe f817 	bl	8002e64 <HAL_DMA_Abort>
 8004e36:	4603      	mov	r3, r0
 8004e38:	2b00      	cmp	r3, #0
 8004e3a:	d007      	beq.n	8004e4c <HAL_I2S_DMAStop+0x48>
      {
        SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_DMA);
 8004e3c:	687b      	ldr	r3, [r7, #4]
 8004e3e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004e40:	f043 0208 	orr.w	r2, r3, #8
 8004e44:	687b      	ldr	r3, [r7, #4]
 8004e46:	645a      	str	r2, [r3, #68]	; 0x44
        errorcode = HAL_ERROR;
 8004e48:	2301      	movs	r3, #1
 8004e4a:	77fb      	strb	r3, [r7, #31]
      }
    }

    /* Wait until TXE flag is set */
    if (I2S_WaitFlagStateUntilTimeout(hi2s, I2S_FLAG_TXE, SET, I2S_TIMEOUT_FLAG) != HAL_OK)
 8004e4c:	2364      	movs	r3, #100	; 0x64
 8004e4e:	2201      	movs	r2, #1
 8004e50:	2102      	movs	r1, #2
 8004e52:	6878      	ldr	r0, [r7, #4]
 8004e54:	f000 fb00 	bl	8005458 <I2S_WaitFlagStateUntilTimeout>
 8004e58:	4603      	mov	r3, r0
 8004e5a:	2b00      	cmp	r3, #0
 8004e5c:	d00b      	beq.n	8004e76 <HAL_I2S_DMAStop+0x72>
    {
      /* Set the error code */
      SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_TIMEOUT);
 8004e5e:	687b      	ldr	r3, [r7, #4]
 8004e60:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004e62:	f043 0201 	orr.w	r2, r3, #1
 8004e66:	687b      	ldr	r3, [r7, #4]
 8004e68:	645a      	str	r2, [r3, #68]	; 0x44
      hi2s->State = HAL_I2S_STATE_READY;
 8004e6a:	687b      	ldr	r3, [r7, #4]
 8004e6c:	2201      	movs	r2, #1
 8004e6e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
      errorcode   = HAL_ERROR;
 8004e72:	2301      	movs	r3, #1
 8004e74:	77fb      	strb	r3, [r7, #31]
    }

    /* Wait until BSY flag is Reset */
    if (I2S_WaitFlagStateUntilTimeout(hi2s, I2S_FLAG_BSY, RESET, I2S_TIMEOUT_FLAG) != HAL_OK)
 8004e76:	2364      	movs	r3, #100	; 0x64
 8004e78:	2200      	movs	r2, #0
 8004e7a:	2180      	movs	r1, #128	; 0x80
 8004e7c:	6878      	ldr	r0, [r7, #4]
 8004e7e:	f000 faeb 	bl	8005458 <I2S_WaitFlagStateUntilTimeout>
 8004e82:	4603      	mov	r3, r0
 8004e84:	2b00      	cmp	r3, #0
 8004e86:	d00b      	beq.n	8004ea0 <HAL_I2S_DMAStop+0x9c>
    {
      /* Set the error code */
      SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_TIMEOUT);
 8004e88:	687b      	ldr	r3, [r7, #4]
 8004e8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004e8c:	f043 0201 	orr.w	r2, r3, #1
 8004e90:	687b      	ldr	r3, [r7, #4]
 8004e92:	645a      	str	r2, [r3, #68]	; 0x44
      hi2s->State = HAL_I2S_STATE_READY;
 8004e94:	687b      	ldr	r3, [r7, #4]
 8004e96:	2201      	movs	r2, #1
 8004e98:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
      errorcode   = HAL_ERROR;
 8004e9c:	2301      	movs	r3, #1
 8004e9e:	77fb      	strb	r3, [r7, #31]
    }

    /* Disable I2S peripheral */
    __HAL_I2S_DISABLE(hi2s);
 8004ea0:	687b      	ldr	r3, [r7, #4]
 8004ea2:	681b      	ldr	r3, [r3, #0]
 8004ea4:	69da      	ldr	r2, [r3, #28]
 8004ea6:	687b      	ldr	r3, [r7, #4]
 8004ea8:	681b      	ldr	r3, [r3, #0]
 8004eaa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004eae:	61da      	str	r2, [r3, #28]

    /* Clear UDR flag */
    __HAL_I2S_CLEAR_UDRFLAG(hi2s);
 8004eb0:	2300      	movs	r3, #0
 8004eb2:	617b      	str	r3, [r7, #20]
 8004eb4:	687b      	ldr	r3, [r7, #4]
 8004eb6:	681b      	ldr	r3, [r3, #0]
 8004eb8:	689b      	ldr	r3, [r3, #8]
 8004eba:	617b      	str	r3, [r7, #20]
 8004ebc:	697b      	ldr	r3, [r7, #20]

    /* Disable the I2S Tx DMA requests */
    CLEAR_BIT(hi2s->Instance->CR2, SPI_CR2_TXDMAEN);
 8004ebe:	687b      	ldr	r3, [r7, #4]
 8004ec0:	681b      	ldr	r3, [r3, #0]
 8004ec2:	685a      	ldr	r2, [r3, #4]
 8004ec4:	687b      	ldr	r3, [r7, #4]
 8004ec6:	681b      	ldr	r3, [r3, #0]
 8004ec8:	f022 0202 	bic.w	r2, r2, #2
 8004ecc:	605a      	str	r2, [r3, #4]

#if defined (SPI_I2S_FULLDUPLEX_SUPPORT)

    if (hi2s->State == HAL_I2S_STATE_BUSY_TX_RX)
 8004ece:	687b      	ldr	r3, [r7, #4]
 8004ed0:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004ed4:	b2db      	uxtb	r3, r3
 8004ed6:	2b05      	cmp	r3, #5
 8004ed8:	f040 8165 	bne.w	80051a6 <HAL_I2S_DMAStop+0x3a2>
    {
      /* Abort the I2S DMA rx Stream/Channel */
      if (hi2s->hdmarx != NULL)
 8004edc:	687b      	ldr	r3, [r7, #4]
 8004ede:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004ee0:	2b00      	cmp	r3, #0
 8004ee2:	d00f      	beq.n	8004f04 <HAL_I2S_DMAStop+0x100>
      {
        /* Disable the I2S DMA rx Stream/Channel */
        if (HAL_OK != HAL_DMA_Abort(hi2s->hdmarx))
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004ee8:	4618      	mov	r0, r3
 8004eea:	f7fd ffbb 	bl	8002e64 <HAL_DMA_Abort>
 8004eee:	4603      	mov	r3, r0
 8004ef0:	2b00      	cmp	r3, #0
 8004ef2:	d007      	beq.n	8004f04 <HAL_I2S_DMAStop+0x100>
        {
          SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_DMA);
 8004ef4:	687b      	ldr	r3, [r7, #4]
 8004ef6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004ef8:	f043 0208 	orr.w	r2, r3, #8
 8004efc:	687b      	ldr	r3, [r7, #4]
 8004efe:	645a      	str	r2, [r3, #68]	; 0x44
          errorcode = HAL_ERROR;
 8004f00:	2301      	movs	r3, #1
 8004f02:	77fb      	strb	r3, [r7, #31]
        }
      }

      /* Disable I2Sext peripheral */
      __HAL_I2SEXT_DISABLE(hi2s);
 8004f04:	687b      	ldr	r3, [r7, #4]
 8004f06:	681b      	ldr	r3, [r3, #0]
 8004f08:	4a8a      	ldr	r2, [pc, #552]	; (8005134 <HAL_I2S_DMAStop+0x330>)
 8004f0a:	4293      	cmp	r3, r2
 8004f0c:	d101      	bne.n	8004f12 <HAL_I2S_DMAStop+0x10e>
 8004f0e:	4b8a      	ldr	r3, [pc, #552]	; (8005138 <HAL_I2S_DMAStop+0x334>)
 8004f10:	e001      	b.n	8004f16 <HAL_I2S_DMAStop+0x112>
 8004f12:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8004f16:	69da      	ldr	r2, [r3, #28]
 8004f18:	687b      	ldr	r3, [r7, #4]
 8004f1a:	681b      	ldr	r3, [r3, #0]
 8004f1c:	4985      	ldr	r1, [pc, #532]	; (8005134 <HAL_I2S_DMAStop+0x330>)
 8004f1e:	428b      	cmp	r3, r1
 8004f20:	d101      	bne.n	8004f26 <HAL_I2S_DMAStop+0x122>
 8004f22:	4b85      	ldr	r3, [pc, #532]	; (8005138 <HAL_I2S_DMAStop+0x334>)
 8004f24:	e001      	b.n	8004f2a <HAL_I2S_DMAStop+0x126>
 8004f26:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8004f2a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004f2e:	61da      	str	r2, [r3, #28]

      /* Clear OVR flag */
      __HAL_I2SEXT_CLEAR_OVRFLAG(hi2s);
 8004f30:	2300      	movs	r3, #0
 8004f32:	613b      	str	r3, [r7, #16]
 8004f34:	687b      	ldr	r3, [r7, #4]
 8004f36:	681b      	ldr	r3, [r3, #0]
 8004f38:	4a7e      	ldr	r2, [pc, #504]	; (8005134 <HAL_I2S_DMAStop+0x330>)
 8004f3a:	4293      	cmp	r3, r2
 8004f3c:	d101      	bne.n	8004f42 <HAL_I2S_DMAStop+0x13e>
 8004f3e:	4b7e      	ldr	r3, [pc, #504]	; (8005138 <HAL_I2S_DMAStop+0x334>)
 8004f40:	e001      	b.n	8004f46 <HAL_I2S_DMAStop+0x142>
 8004f42:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8004f46:	68db      	ldr	r3, [r3, #12]
 8004f48:	613b      	str	r3, [r7, #16]
 8004f4a:	687b      	ldr	r3, [r7, #4]
 8004f4c:	681b      	ldr	r3, [r3, #0]
 8004f4e:	4a79      	ldr	r2, [pc, #484]	; (8005134 <HAL_I2S_DMAStop+0x330>)
 8004f50:	4293      	cmp	r3, r2
 8004f52:	d101      	bne.n	8004f58 <HAL_I2S_DMAStop+0x154>
 8004f54:	4b78      	ldr	r3, [pc, #480]	; (8005138 <HAL_I2S_DMAStop+0x334>)
 8004f56:	e001      	b.n	8004f5c <HAL_I2S_DMAStop+0x158>
 8004f58:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8004f5c:	689b      	ldr	r3, [r3, #8]
 8004f5e:	613b      	str	r3, [r7, #16]
 8004f60:	693b      	ldr	r3, [r7, #16]

      /* Disable the I2SxEXT DMA request */
      CLEAR_BIT(I2SxEXT(hi2s->Instance)->CR2, SPI_CR2_RXDMAEN);
 8004f62:	687b      	ldr	r3, [r7, #4]
 8004f64:	681b      	ldr	r3, [r3, #0]
 8004f66:	4a73      	ldr	r2, [pc, #460]	; (8005134 <HAL_I2S_DMAStop+0x330>)
 8004f68:	4293      	cmp	r3, r2
 8004f6a:	d101      	bne.n	8004f70 <HAL_I2S_DMAStop+0x16c>
 8004f6c:	4b72      	ldr	r3, [pc, #456]	; (8005138 <HAL_I2S_DMAStop+0x334>)
 8004f6e:	e001      	b.n	8004f74 <HAL_I2S_DMAStop+0x170>
 8004f70:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8004f74:	685a      	ldr	r2, [r3, #4]
 8004f76:	687b      	ldr	r3, [r7, #4]
 8004f78:	681b      	ldr	r3, [r3, #0]
 8004f7a:	496e      	ldr	r1, [pc, #440]	; (8005134 <HAL_I2S_DMAStop+0x330>)
 8004f7c:	428b      	cmp	r3, r1
 8004f7e:	d101      	bne.n	8004f84 <HAL_I2S_DMAStop+0x180>
 8004f80:	4b6d      	ldr	r3, [pc, #436]	; (8005138 <HAL_I2S_DMAStop+0x334>)
 8004f82:	e001      	b.n	8004f88 <HAL_I2S_DMAStop+0x184>
 8004f84:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8004f88:	f022 0201 	bic.w	r2, r2, #1
 8004f8c:	605a      	str	r2, [r3, #4]

      if (hi2s->Init.Mode == I2S_MODE_SLAVE_TX)
 8004f8e:	687b      	ldr	r3, [r7, #4]
 8004f90:	685b      	ldr	r3, [r3, #4]
 8004f92:	2b00      	cmp	r3, #0
 8004f94:	d10c      	bne.n	8004fb0 <HAL_I2S_DMAStop+0x1ac>
      {
        /* Set the error code */
        SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_BUSY_LINE_RX);
 8004f96:	687b      	ldr	r3, [r7, #4]
 8004f98:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004f9a:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8004f9e:	687b      	ldr	r3, [r7, #4]
 8004fa0:	645a      	str	r2, [r3, #68]	; 0x44

        /* Set the I2S State ready */
        hi2s->State = HAL_I2S_STATE_READY;
 8004fa2:	687b      	ldr	r3, [r7, #4]
 8004fa4:	2201      	movs	r2, #1
 8004fa6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
        errorcode = HAL_ERROR;
 8004faa:	2301      	movs	r3, #1
 8004fac:	77fb      	strb	r3, [r7, #31]
    if (hi2s->State == HAL_I2S_STATE_BUSY_TX_RX)
 8004fae:	e0fa      	b.n	80051a6 <HAL_I2S_DMAStop+0x3a2>
      }
      else
      {
        /* Read DR to Flush RX Data */
        READ_REG(I2SxEXT(hi2s->Instance)->DR);
 8004fb0:	687b      	ldr	r3, [r7, #4]
 8004fb2:	681b      	ldr	r3, [r3, #0]
 8004fb4:	4a5f      	ldr	r2, [pc, #380]	; (8005134 <HAL_I2S_DMAStop+0x330>)
 8004fb6:	4293      	cmp	r3, r2
 8004fb8:	d101      	bne.n	8004fbe <HAL_I2S_DMAStop+0x1ba>
 8004fba:	4b5f      	ldr	r3, [pc, #380]	; (8005138 <HAL_I2S_DMAStop+0x334>)
 8004fbc:	e001      	b.n	8004fc2 <HAL_I2S_DMAStop+0x1be>
 8004fbe:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8004fc2:	68db      	ldr	r3, [r3, #12]
    if (hi2s->State == HAL_I2S_STATE_BUSY_TX_RX)
 8004fc4:	e0ef      	b.n	80051a6 <HAL_I2S_DMAStop+0x3a2>
      }
    }
#endif /* SPI_I2S_FULLDUPLEX_SUPPORT */
  }

  else if ((hi2s->Init.Mode == I2S_MODE_MASTER_RX) || (hi2s->Init.Mode == I2S_MODE_SLAVE_RX))
 8004fc6:	687b      	ldr	r3, [r7, #4]
 8004fc8:	685b      	ldr	r3, [r3, #4]
 8004fca:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8004fce:	d005      	beq.n	8004fdc <HAL_I2S_DMAStop+0x1d8>
 8004fd0:	687b      	ldr	r3, [r7, #4]
 8004fd2:	685b      	ldr	r3, [r3, #4]
 8004fd4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8004fd8:	f040 80e5 	bne.w	80051a6 <HAL_I2S_DMAStop+0x3a2>
  {
    /* Abort the I2S DMA rx Stream/Channel */
    if (hi2s->hdmarx != NULL)
 8004fdc:	687b      	ldr	r3, [r7, #4]
 8004fde:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004fe0:	2b00      	cmp	r3, #0
 8004fe2:	d00f      	beq.n	8005004 <HAL_I2S_DMAStop+0x200>
    {
      /* Disable the I2S DMA rx Stream/Channel */
      if (HAL_OK != HAL_DMA_Abort(hi2s->hdmarx))
 8004fe4:	687b      	ldr	r3, [r7, #4]
 8004fe6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004fe8:	4618      	mov	r0, r3
 8004fea:	f7fd ff3b 	bl	8002e64 <HAL_DMA_Abort>
 8004fee:	4603      	mov	r3, r0
 8004ff0:	2b00      	cmp	r3, #0
 8004ff2:	d007      	beq.n	8005004 <HAL_I2S_DMAStop+0x200>
      {
        SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_DMA);
 8004ff4:	687b      	ldr	r3, [r7, #4]
 8004ff6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004ff8:	f043 0208 	orr.w	r2, r3, #8
 8004ffc:	687b      	ldr	r3, [r7, #4]
 8004ffe:	645a      	str	r2, [r3, #68]	; 0x44
        errorcode = HAL_ERROR;
 8005000:	2301      	movs	r3, #1
 8005002:	77fb      	strb	r3, [r7, #31]
      }
    }
#if defined (SPI_I2S_FULLDUPLEX_SUPPORT)

    if (hi2s->State == HAL_I2S_STATE_BUSY_TX_RX)
 8005004:	687b      	ldr	r3, [r7, #4]
 8005006:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800500a:	b2db      	uxtb	r3, r3
 800500c:	2b05      	cmp	r3, #5
 800500e:	f040 809a 	bne.w	8005146 <HAL_I2S_DMAStop+0x342>
    {
      /* Abort the I2S DMA tx Stream/Channel */
      if (hi2s->hdmatx != NULL)
 8005012:	687b      	ldr	r3, [r7, #4]
 8005014:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005016:	2b00      	cmp	r3, #0
 8005018:	d00f      	beq.n	800503a <HAL_I2S_DMAStop+0x236>
      {
        /* Disable the I2S DMA tx Stream/Channel */
        if (HAL_OK != HAL_DMA_Abort(hi2s->hdmatx))
 800501a:	687b      	ldr	r3, [r7, #4]
 800501c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800501e:	4618      	mov	r0, r3
 8005020:	f7fd ff20 	bl	8002e64 <HAL_DMA_Abort>
 8005024:	4603      	mov	r3, r0
 8005026:	2b00      	cmp	r3, #0
 8005028:	d007      	beq.n	800503a <HAL_I2S_DMAStop+0x236>
        {
          SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_DMA);
 800502a:	687b      	ldr	r3, [r7, #4]
 800502c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800502e:	f043 0208 	orr.w	r2, r3, #8
 8005032:	687b      	ldr	r3, [r7, #4]
 8005034:	645a      	str	r2, [r3, #68]	; 0x44
          errorcode = HAL_ERROR;
 8005036:	2301      	movs	r3, #1
 8005038:	77fb      	strb	r3, [r7, #31]
        }
      }

      tickstart = HAL_GetTick();
 800503a:	f7fd fcd1 	bl	80029e0 <HAL_GetTick>
 800503e:	61b8      	str	r0, [r7, #24]

      /* Wait until TXE flag is set */
      while (__HAL_I2SEXT_GET_FLAG(hi2s, I2S_FLAG_TXE) != SET)
 8005040:	e012      	b.n	8005068 <HAL_I2S_DMAStop+0x264>
      {
        if (((HAL_GetTick() - tickstart) > I2S_TIMEOUT_FLAG))
 8005042:	f7fd fccd 	bl	80029e0 <HAL_GetTick>
 8005046:	4602      	mov	r2, r0
 8005048:	69bb      	ldr	r3, [r7, #24]
 800504a:	1ad3      	subs	r3, r2, r3
 800504c:	2b64      	cmp	r3, #100	; 0x64
 800504e:	d90b      	bls.n	8005068 <HAL_I2S_DMAStop+0x264>
        {
          /* Set the error code */
          SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_TIMEOUT);
 8005050:	687b      	ldr	r3, [r7, #4]
 8005052:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005054:	f043 0201 	orr.w	r2, r3, #1
 8005058:	687b      	ldr	r3, [r7, #4]
 800505a:	645a      	str	r2, [r3, #68]	; 0x44

          /* Set the I2S State ready */
          hi2s->State = HAL_I2S_STATE_READY;
 800505c:	687b      	ldr	r3, [r7, #4]
 800505e:	2201      	movs	r2, #1
 8005060:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
          errorcode   = HAL_ERROR;
 8005064:	2301      	movs	r3, #1
 8005066:	77fb      	strb	r3, [r7, #31]
      while (__HAL_I2SEXT_GET_FLAG(hi2s, I2S_FLAG_TXE) != SET)
 8005068:	687b      	ldr	r3, [r7, #4]
 800506a:	681b      	ldr	r3, [r3, #0]
 800506c:	4a31      	ldr	r2, [pc, #196]	; (8005134 <HAL_I2S_DMAStop+0x330>)
 800506e:	4293      	cmp	r3, r2
 8005070:	d101      	bne.n	8005076 <HAL_I2S_DMAStop+0x272>
 8005072:	4b31      	ldr	r3, [pc, #196]	; (8005138 <HAL_I2S_DMAStop+0x334>)
 8005074:	e001      	b.n	800507a <HAL_I2S_DMAStop+0x276>
 8005076:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 800507a:	689b      	ldr	r3, [r3, #8]
 800507c:	f003 0302 	and.w	r3, r3, #2
 8005080:	2b02      	cmp	r3, #2
 8005082:	d1de      	bne.n	8005042 <HAL_I2S_DMAStop+0x23e>
        }
      }

      /* Wait until BSY flag is Reset */
      while (__HAL_I2SEXT_GET_FLAG(hi2s, I2S_FLAG_BSY) != RESET)
 8005084:	e012      	b.n	80050ac <HAL_I2S_DMAStop+0x2a8>
      {
        if (((HAL_GetTick() - tickstart) > I2S_TIMEOUT_FLAG))
 8005086:	f7fd fcab 	bl	80029e0 <HAL_GetTick>
 800508a:	4602      	mov	r2, r0
 800508c:	69bb      	ldr	r3, [r7, #24]
 800508e:	1ad3      	subs	r3, r2, r3
 8005090:	2b64      	cmp	r3, #100	; 0x64
 8005092:	d90b      	bls.n	80050ac <HAL_I2S_DMAStop+0x2a8>
        {
          /* Set the error code */
          SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_TIMEOUT);
 8005094:	687b      	ldr	r3, [r7, #4]
 8005096:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005098:	f043 0201 	orr.w	r2, r3, #1
 800509c:	687b      	ldr	r3, [r7, #4]
 800509e:	645a      	str	r2, [r3, #68]	; 0x44

          /* Set the I2S State ready */
          hi2s->State = HAL_I2S_STATE_READY;
 80050a0:	687b      	ldr	r3, [r7, #4]
 80050a2:	2201      	movs	r2, #1
 80050a4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
          errorcode   = HAL_ERROR;
 80050a8:	2301      	movs	r3, #1
 80050aa:	77fb      	strb	r3, [r7, #31]
      while (__HAL_I2SEXT_GET_FLAG(hi2s, I2S_FLAG_BSY) != RESET)
 80050ac:	687b      	ldr	r3, [r7, #4]
 80050ae:	681b      	ldr	r3, [r3, #0]
 80050b0:	4a20      	ldr	r2, [pc, #128]	; (8005134 <HAL_I2S_DMAStop+0x330>)
 80050b2:	4293      	cmp	r3, r2
 80050b4:	d101      	bne.n	80050ba <HAL_I2S_DMAStop+0x2b6>
 80050b6:	4b20      	ldr	r3, [pc, #128]	; (8005138 <HAL_I2S_DMAStop+0x334>)
 80050b8:	e001      	b.n	80050be <HAL_I2S_DMAStop+0x2ba>
 80050ba:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 80050be:	689b      	ldr	r3, [r3, #8]
 80050c0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80050c4:	2b80      	cmp	r3, #128	; 0x80
 80050c6:	d0de      	beq.n	8005086 <HAL_I2S_DMAStop+0x282>
        }
      }

      /* Disable I2Sext peripheral */
      __HAL_I2SEXT_DISABLE(hi2s);
 80050c8:	687b      	ldr	r3, [r7, #4]
 80050ca:	681b      	ldr	r3, [r3, #0]
 80050cc:	4a19      	ldr	r2, [pc, #100]	; (8005134 <HAL_I2S_DMAStop+0x330>)
 80050ce:	4293      	cmp	r3, r2
 80050d0:	d101      	bne.n	80050d6 <HAL_I2S_DMAStop+0x2d2>
 80050d2:	4b19      	ldr	r3, [pc, #100]	; (8005138 <HAL_I2S_DMAStop+0x334>)
 80050d4:	e001      	b.n	80050da <HAL_I2S_DMAStop+0x2d6>
 80050d6:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 80050da:	69da      	ldr	r2, [r3, #28]
 80050dc:	687b      	ldr	r3, [r7, #4]
 80050de:	681b      	ldr	r3, [r3, #0]
 80050e0:	4914      	ldr	r1, [pc, #80]	; (8005134 <HAL_I2S_DMAStop+0x330>)
 80050e2:	428b      	cmp	r3, r1
 80050e4:	d101      	bne.n	80050ea <HAL_I2S_DMAStop+0x2e6>
 80050e6:	4b14      	ldr	r3, [pc, #80]	; (8005138 <HAL_I2S_DMAStop+0x334>)
 80050e8:	e001      	b.n	80050ee <HAL_I2S_DMAStop+0x2ea>
 80050ea:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 80050ee:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80050f2:	61da      	str	r2, [r3, #28]

      /* Clear UDR flag */
      __HAL_I2SEXT_CLEAR_UDRFLAG(hi2s);
 80050f4:	2300      	movs	r3, #0
 80050f6:	60fb      	str	r3, [r7, #12]
 80050f8:	687b      	ldr	r3, [r7, #4]
 80050fa:	681b      	ldr	r3, [r3, #0]
 80050fc:	4a0d      	ldr	r2, [pc, #52]	; (8005134 <HAL_I2S_DMAStop+0x330>)
 80050fe:	4293      	cmp	r3, r2
 8005100:	d101      	bne.n	8005106 <HAL_I2S_DMAStop+0x302>
 8005102:	4b0d      	ldr	r3, [pc, #52]	; (8005138 <HAL_I2S_DMAStop+0x334>)
 8005104:	e001      	b.n	800510a <HAL_I2S_DMAStop+0x306>
 8005106:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 800510a:	689b      	ldr	r3, [r3, #8]
 800510c:	60fb      	str	r3, [r7, #12]
 800510e:	68fb      	ldr	r3, [r7, #12]

      /* Disable the I2SxEXT DMA request */
      CLEAR_BIT(I2SxEXT(hi2s->Instance)->CR2, SPI_CR2_TXDMAEN);
 8005110:	687b      	ldr	r3, [r7, #4]
 8005112:	681b      	ldr	r3, [r3, #0]
 8005114:	4a07      	ldr	r2, [pc, #28]	; (8005134 <HAL_I2S_DMAStop+0x330>)
 8005116:	4293      	cmp	r3, r2
 8005118:	d101      	bne.n	800511e <HAL_I2S_DMAStop+0x31a>
 800511a:	4b07      	ldr	r3, [pc, #28]	; (8005138 <HAL_I2S_DMAStop+0x334>)
 800511c:	e001      	b.n	8005122 <HAL_I2S_DMAStop+0x31e>
 800511e:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8005122:	685a      	ldr	r2, [r3, #4]
 8005124:	687b      	ldr	r3, [r7, #4]
 8005126:	681b      	ldr	r3, [r3, #0]
 8005128:	4902      	ldr	r1, [pc, #8]	; (8005134 <HAL_I2S_DMAStop+0x330>)
 800512a:	428b      	cmp	r3, r1
 800512c:	d106      	bne.n	800513c <HAL_I2S_DMAStop+0x338>
 800512e:	4b02      	ldr	r3, [pc, #8]	; (8005138 <HAL_I2S_DMAStop+0x334>)
 8005130:	e006      	b.n	8005140 <HAL_I2S_DMAStop+0x33c>
 8005132:	bf00      	nop
 8005134:	40003800 	.word	0x40003800
 8005138:	40003400 	.word	0x40003400
 800513c:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8005140:	f022 0202 	bic.w	r2, r2, #2
 8005144:	605a      	str	r2, [r3, #4]
    }
#endif /* SPI_I2S_FULLDUPLEX_SUPPORT */

    /* Disable I2S peripheral */
    __HAL_I2S_DISABLE(hi2s);
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	681b      	ldr	r3, [r3, #0]
 800514a:	69da      	ldr	r2, [r3, #28]
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	681b      	ldr	r3, [r3, #0]
 8005150:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005154:	61da      	str	r2, [r3, #28]

    /* Clear OVR flag */
    __HAL_I2S_CLEAR_OVRFLAG(hi2s);
 8005156:	2300      	movs	r3, #0
 8005158:	60bb      	str	r3, [r7, #8]
 800515a:	687b      	ldr	r3, [r7, #4]
 800515c:	681b      	ldr	r3, [r3, #0]
 800515e:	68db      	ldr	r3, [r3, #12]
 8005160:	60bb      	str	r3, [r7, #8]
 8005162:	687b      	ldr	r3, [r7, #4]
 8005164:	681b      	ldr	r3, [r3, #0]
 8005166:	689b      	ldr	r3, [r3, #8]
 8005168:	60bb      	str	r3, [r7, #8]
 800516a:	68bb      	ldr	r3, [r7, #8]

    /* Disable the I2S Rx DMA request */
    CLEAR_BIT(hi2s->Instance->CR2, SPI_CR2_RXDMAEN);
 800516c:	687b      	ldr	r3, [r7, #4]
 800516e:	681b      	ldr	r3, [r3, #0]
 8005170:	685a      	ldr	r2, [r3, #4]
 8005172:	687b      	ldr	r3, [r7, #4]
 8005174:	681b      	ldr	r3, [r3, #0]
 8005176:	f022 0201 	bic.w	r2, r2, #1
 800517a:	605a      	str	r2, [r3, #4]

    if (hi2s->Init.Mode == I2S_MODE_SLAVE_RX)
 800517c:	687b      	ldr	r3, [r7, #4]
 800517e:	685b      	ldr	r3, [r3, #4]
 8005180:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005184:	d10c      	bne.n	80051a0 <HAL_I2S_DMAStop+0x39c>
    {
      /* Set the error code */
      SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_BUSY_LINE_RX);
 8005186:	687b      	ldr	r3, [r7, #4]
 8005188:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800518a:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800518e:	687b      	ldr	r3, [r7, #4]
 8005190:	645a      	str	r2, [r3, #68]	; 0x44

      /* Set the I2S State ready */
      hi2s->State = HAL_I2S_STATE_READY;
 8005192:	687b      	ldr	r3, [r7, #4]
 8005194:	2201      	movs	r2, #1
 8005196:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
      errorcode = HAL_ERROR;
 800519a:	2301      	movs	r3, #1
 800519c:	77fb      	strb	r3, [r7, #31]
 800519e:	e002      	b.n	80051a6 <HAL_I2S_DMAStop+0x3a2>
    }
    else
    {
      /* Read DR to Flush RX Data */
      READ_REG((hi2s->Instance)->DR);
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	681b      	ldr	r3, [r3, #0]
 80051a4:	68db      	ldr	r3, [r3, #12]
    }
  }

  hi2s->State = HAL_I2S_STATE_READY;
 80051a6:	687b      	ldr	r3, [r7, #4]
 80051a8:	2201      	movs	r2, #1
 80051aa:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

  return errorcode;
 80051ae:	7ffb      	ldrb	r3, [r7, #31]
}
 80051b0:	4618      	mov	r0, r3
 80051b2:	3720      	adds	r7, #32
 80051b4:	46bd      	mov	sp, r7
 80051b6:	bd80      	pop	{r7, pc}

080051b8 <HAL_I2S_RxCpltCallback>:
  * @param  hi2s pointer to a I2S_HandleTypeDef structure that contains
  *         the configuration information for I2S module
  * @retval None
  */
__weak void HAL_I2S_RxCpltCallback(I2S_HandleTypeDef *hi2s)
{
 80051b8:	b480      	push	{r7}
 80051ba:	b083      	sub	sp, #12
 80051bc:	af00      	add	r7, sp, #0
 80051be:	6078      	str	r0, [r7, #4]
  UNUSED(hi2s);

  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_I2S_RxCpltCallback could be implemented in the user file
   */
}
 80051c0:	bf00      	nop
 80051c2:	370c      	adds	r7, #12
 80051c4:	46bd      	mov	sp, r7
 80051c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051ca:	4770      	bx	lr

080051cc <HAL_I2S_ErrorCallback>:
  * @param  hi2s pointer to a I2S_HandleTypeDef structure that contains
  *         the configuration information for I2S module
  * @retval None
  */
__weak void HAL_I2S_ErrorCallback(I2S_HandleTypeDef *hi2s)
{
 80051cc:	b480      	push	{r7}
 80051ce:	b083      	sub	sp, #12
 80051d0:	af00      	add	r7, sp, #0
 80051d2:	6078      	str	r0, [r7, #4]
  UNUSED(hi2s);

  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_I2S_ErrorCallback could be implemented in the user file
   */
}
 80051d4:	bf00      	nop
 80051d6:	370c      	adds	r7, #12
 80051d8:	46bd      	mov	sp, r7
 80051da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051de:	4770      	bx	lr

080051e0 <I2S_DMATxCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void I2S_DMATxCplt(DMA_HandleTypeDef *hdma)
{
 80051e0:	b580      	push	{r7, lr}
 80051e2:	b084      	sub	sp, #16
 80051e4:	af00      	add	r7, sp, #0
 80051e6:	6078      	str	r0, [r7, #4]
  I2S_HandleTypeDef *hi2s = (I2S_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 80051e8:	687b      	ldr	r3, [r7, #4]
 80051ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80051ec:	60fb      	str	r3, [r7, #12]

  /* if DMA is configured in DMA_NORMAL Mode */
  if (hdma->Init.Mode == DMA_NORMAL)
 80051ee:	687b      	ldr	r3, [r7, #4]
 80051f0:	69db      	ldr	r3, [r3, #28]
 80051f2:	2b00      	cmp	r3, #0
 80051f4:	d10e      	bne.n	8005214 <I2S_DMATxCplt+0x34>
  {
    /* Disable Tx DMA Request */
    CLEAR_BIT(hi2s->Instance->CR2, SPI_CR2_TXDMAEN);
 80051f6:	68fb      	ldr	r3, [r7, #12]
 80051f8:	681b      	ldr	r3, [r3, #0]
 80051fa:	685a      	ldr	r2, [r3, #4]
 80051fc:	68fb      	ldr	r3, [r7, #12]
 80051fe:	681b      	ldr	r3, [r3, #0]
 8005200:	f022 0202 	bic.w	r2, r2, #2
 8005204:	605a      	str	r2, [r3, #4]

    hi2s->TxXferCount = 0U;
 8005206:	68fb      	ldr	r3, [r7, #12]
 8005208:	2200      	movs	r2, #0
 800520a:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2s->State = HAL_I2S_STATE_READY;
 800520c:	68fb      	ldr	r3, [r7, #12]
 800520e:	2201      	movs	r2, #1
 8005210:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  }
  /* Call user Tx complete callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
  hi2s->TxCpltCallback(hi2s);
#else
  HAL_I2S_TxCpltCallback(hi2s);
 8005214:	68f8      	ldr	r0, [r7, #12]
 8005216:	f7fd fb73 	bl	8002900 <HAL_I2S_TxCpltCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
}
 800521a:	bf00      	nop
 800521c:	3710      	adds	r7, #16
 800521e:	46bd      	mov	sp, r7
 8005220:	bd80      	pop	{r7, pc}

08005222 <I2S_DMATxHalfCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void I2S_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
{
 8005222:	b580      	push	{r7, lr}
 8005224:	b084      	sub	sp, #16
 8005226:	af00      	add	r7, sp, #0
 8005228:	6078      	str	r0, [r7, #4]
  I2S_HandleTypeDef *hi2s = (I2S_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800522a:	687b      	ldr	r3, [r7, #4]
 800522c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800522e:	60fb      	str	r3, [r7, #12]

  /* Call user Tx half complete callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
  hi2s->TxHalfCpltCallback(hi2s);
#else
  HAL_I2S_TxHalfCpltCallback(hi2s);
 8005230:	68f8      	ldr	r0, [r7, #12]
 8005232:	f7fd fb55 	bl	80028e0 <HAL_I2S_TxHalfCpltCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
}
 8005236:	bf00      	nop
 8005238:	3710      	adds	r7, #16
 800523a:	46bd      	mov	sp, r7
 800523c:	bd80      	pop	{r7, pc}

0800523e <I2S_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void I2S_DMAError(DMA_HandleTypeDef *hdma)
{
 800523e:	b580      	push	{r7, lr}
 8005240:	b084      	sub	sp, #16
 8005242:	af00      	add	r7, sp, #0
 8005244:	6078      	str	r0, [r7, #4]
  I2S_HandleTypeDef *hi2s = (I2S_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 8005246:	687b      	ldr	r3, [r7, #4]
 8005248:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800524a:	60fb      	str	r3, [r7, #12]

  /* Disable Rx and Tx DMA Request */
  CLEAR_BIT(hi2s->Instance->CR2, (SPI_CR2_RXDMAEN | SPI_CR2_TXDMAEN));
 800524c:	68fb      	ldr	r3, [r7, #12]
 800524e:	681b      	ldr	r3, [r3, #0]
 8005250:	685a      	ldr	r2, [r3, #4]
 8005252:	68fb      	ldr	r3, [r7, #12]
 8005254:	681b      	ldr	r3, [r3, #0]
 8005256:	f022 0203 	bic.w	r2, r2, #3
 800525a:	605a      	str	r2, [r3, #4]
  hi2s->TxXferCount = 0U;
 800525c:	68fb      	ldr	r3, [r7, #12]
 800525e:	2200      	movs	r2, #0
 8005260:	855a      	strh	r2, [r3, #42]	; 0x2a
  hi2s->RxXferCount = 0U;
 8005262:	68fb      	ldr	r3, [r7, #12]
 8005264:	2200      	movs	r2, #0
 8005266:	865a      	strh	r2, [r3, #50]	; 0x32

  hi2s->State = HAL_I2S_STATE_READY;
 8005268:	68fb      	ldr	r3, [r7, #12]
 800526a:	2201      	movs	r2, #1
 800526c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

  /* Set the error code and execute error callback*/
  SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_DMA);
 8005270:	68fb      	ldr	r3, [r7, #12]
 8005272:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005274:	f043 0208 	orr.w	r2, r3, #8
 8005278:	68fb      	ldr	r3, [r7, #12]
 800527a:	645a      	str	r2, [r3, #68]	; 0x44
  /* Call user error callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
  hi2s->ErrorCallback(hi2s);
#else
  HAL_I2S_ErrorCallback(hi2s);
 800527c:	68f8      	ldr	r0, [r7, #12]
 800527e:	f7ff ffa5 	bl	80051cc <HAL_I2S_ErrorCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
}
 8005282:	bf00      	nop
 8005284:	3710      	adds	r7, #16
 8005286:	46bd      	mov	sp, r7
 8005288:	bd80      	pop	{r7, pc}

0800528a <I2S_Transmit_IT>:
  * @param  hi2s pointer to a I2S_HandleTypeDef structure that contains
  *         the configuration information for I2S module
  * @retval None
  */
static void I2S_Transmit_IT(I2S_HandleTypeDef *hi2s)
{
 800528a:	b580      	push	{r7, lr}
 800528c:	b082      	sub	sp, #8
 800528e:	af00      	add	r7, sp, #0
 8005290:	6078      	str	r0, [r7, #4]
  /* Transmit data */
  hi2s->Instance->DR = (*hi2s->pTxBuffPtr);
 8005292:	687b      	ldr	r3, [r7, #4]
 8005294:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005296:	881a      	ldrh	r2, [r3, #0]
 8005298:	687b      	ldr	r3, [r7, #4]
 800529a:	681b      	ldr	r3, [r3, #0]
 800529c:	60da      	str	r2, [r3, #12]
  hi2s->pTxBuffPtr++;
 800529e:	687b      	ldr	r3, [r7, #4]
 80052a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052a2:	1c9a      	adds	r2, r3, #2
 80052a4:	687b      	ldr	r3, [r7, #4]
 80052a6:	625a      	str	r2, [r3, #36]	; 0x24
  hi2s->TxXferCount--;
 80052a8:	687b      	ldr	r3, [r7, #4]
 80052aa:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80052ac:	b29b      	uxth	r3, r3
 80052ae:	3b01      	subs	r3, #1
 80052b0:	b29a      	uxth	r2, r3
 80052b2:	687b      	ldr	r3, [r7, #4]
 80052b4:	855a      	strh	r2, [r3, #42]	; 0x2a

  if (hi2s->TxXferCount == 0U)
 80052b6:	687b      	ldr	r3, [r7, #4]
 80052b8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80052ba:	b29b      	uxth	r3, r3
 80052bc:	2b00      	cmp	r3, #0
 80052be:	d10e      	bne.n	80052de <I2S_Transmit_IT+0x54>
  {
    /* Disable TXE and ERR interrupt */
    __HAL_I2S_DISABLE_IT(hi2s, (I2S_IT_TXE | I2S_IT_ERR));
 80052c0:	687b      	ldr	r3, [r7, #4]
 80052c2:	681b      	ldr	r3, [r3, #0]
 80052c4:	685a      	ldr	r2, [r3, #4]
 80052c6:	687b      	ldr	r3, [r7, #4]
 80052c8:	681b      	ldr	r3, [r3, #0]
 80052ca:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 80052ce:	605a      	str	r2, [r3, #4]

    hi2s->State = HAL_I2S_STATE_READY;
 80052d0:	687b      	ldr	r3, [r7, #4]
 80052d2:	2201      	movs	r2, #1
 80052d4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    /* Call user Tx complete callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
    hi2s->TxCpltCallback(hi2s);
#else
    HAL_I2S_TxCpltCallback(hi2s);
 80052d8:	6878      	ldr	r0, [r7, #4]
 80052da:	f7fd fb11 	bl	8002900 <HAL_I2S_TxCpltCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
  }
}
 80052de:	bf00      	nop
 80052e0:	3708      	adds	r7, #8
 80052e2:	46bd      	mov	sp, r7
 80052e4:	bd80      	pop	{r7, pc}

080052e6 <I2S_Receive_IT>:
  * @param  hi2s pointer to a I2S_HandleTypeDef structure that contains
  *         the configuration information for I2S module
  * @retval None
  */
static void I2S_Receive_IT(I2S_HandleTypeDef *hi2s)
{
 80052e6:	b580      	push	{r7, lr}
 80052e8:	b082      	sub	sp, #8
 80052ea:	af00      	add	r7, sp, #0
 80052ec:	6078      	str	r0, [r7, #4]
  /* Receive data */
  (*hi2s->pRxBuffPtr) = (uint16_t)hi2s->Instance->DR;
 80052ee:	687b      	ldr	r3, [r7, #4]
 80052f0:	681b      	ldr	r3, [r3, #0]
 80052f2:	68da      	ldr	r2, [r3, #12]
 80052f4:	687b      	ldr	r3, [r7, #4]
 80052f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80052f8:	b292      	uxth	r2, r2
 80052fa:	801a      	strh	r2, [r3, #0]
  hi2s->pRxBuffPtr++;
 80052fc:	687b      	ldr	r3, [r7, #4]
 80052fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005300:	1c9a      	adds	r2, r3, #2
 8005302:	687b      	ldr	r3, [r7, #4]
 8005304:	62da      	str	r2, [r3, #44]	; 0x2c
  hi2s->RxXferCount--;
 8005306:	687b      	ldr	r3, [r7, #4]
 8005308:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 800530a:	b29b      	uxth	r3, r3
 800530c:	3b01      	subs	r3, #1
 800530e:	b29a      	uxth	r2, r3
 8005310:	687b      	ldr	r3, [r7, #4]
 8005312:	865a      	strh	r2, [r3, #50]	; 0x32

  if (hi2s->RxXferCount == 0U)
 8005314:	687b      	ldr	r3, [r7, #4]
 8005316:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 8005318:	b29b      	uxth	r3, r3
 800531a:	2b00      	cmp	r3, #0
 800531c:	d10e      	bne.n	800533c <I2S_Receive_IT+0x56>
  {
    /* Disable RXNE and ERR interrupt */
    __HAL_I2S_DISABLE_IT(hi2s, (I2S_IT_RXNE | I2S_IT_ERR));
 800531e:	687b      	ldr	r3, [r7, #4]
 8005320:	681b      	ldr	r3, [r3, #0]
 8005322:	685a      	ldr	r2, [r3, #4]
 8005324:	687b      	ldr	r3, [r7, #4]
 8005326:	681b      	ldr	r3, [r3, #0]
 8005328:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800532c:	605a      	str	r2, [r3, #4]

    hi2s->State = HAL_I2S_STATE_READY;
 800532e:	687b      	ldr	r3, [r7, #4]
 8005330:	2201      	movs	r2, #1
 8005332:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    /* Call user Rx complete callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
    hi2s->RxCpltCallback(hi2s);
#else
    HAL_I2S_RxCpltCallback(hi2s);
 8005336:	6878      	ldr	r0, [r7, #4]
 8005338:	f7ff ff3e 	bl	80051b8 <HAL_I2S_RxCpltCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
  }
}
 800533c:	bf00      	nop
 800533e:	3708      	adds	r7, #8
 8005340:	46bd      	mov	sp, r7
 8005342:	bd80      	pop	{r7, pc}

08005344 <I2S_IRQHandler>:
  * @param  hi2s: pointer to a I2S_HandleTypeDef structure that contains
  *         the configuration information for I2S module
  * @retval None
  */
static void I2S_IRQHandler(I2S_HandleTypeDef *hi2s)
{
 8005344:	b580      	push	{r7, lr}
 8005346:	b086      	sub	sp, #24
 8005348:	af00      	add	r7, sp, #0
 800534a:	6078      	str	r0, [r7, #4]
  __IO uint32_t i2ssr = hi2s->Instance->SR;
 800534c:	687b      	ldr	r3, [r7, #4]
 800534e:	681b      	ldr	r3, [r3, #0]
 8005350:	689b      	ldr	r3, [r3, #8]
 8005352:	617b      	str	r3, [r7, #20]

  if (hi2s->State == HAL_I2S_STATE_BUSY_RX)
 8005354:	687b      	ldr	r3, [r7, #4]
 8005356:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800535a:	b2db      	uxtb	r3, r3
 800535c:	2b04      	cmp	r3, #4
 800535e:	d13a      	bne.n	80053d6 <I2S_IRQHandler+0x92>
  {
    /* I2S in mode Receiver ------------------------------------------------*/
    if (((i2ssr & I2S_FLAG_RXNE) == I2S_FLAG_RXNE) && (__HAL_I2S_GET_IT_SOURCE(hi2s, I2S_IT_RXNE) != RESET))
 8005360:	697b      	ldr	r3, [r7, #20]
 8005362:	f003 0301 	and.w	r3, r3, #1
 8005366:	2b01      	cmp	r3, #1
 8005368:	d109      	bne.n	800537e <I2S_IRQHandler+0x3a>
 800536a:	687b      	ldr	r3, [r7, #4]
 800536c:	681b      	ldr	r3, [r3, #0]
 800536e:	685b      	ldr	r3, [r3, #4]
 8005370:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005374:	2b40      	cmp	r3, #64	; 0x40
 8005376:	d102      	bne.n	800537e <I2S_IRQHandler+0x3a>
    {
      I2S_Receive_IT(hi2s);
 8005378:	6878      	ldr	r0, [r7, #4]
 800537a:	f7ff ffb4 	bl	80052e6 <I2S_Receive_IT>
    }

    /* I2S Overrun error interrupt occurred -------------------------------------*/
    if (((i2ssr & I2S_FLAG_OVR) == I2S_FLAG_OVR) && (__HAL_I2S_GET_IT_SOURCE(hi2s, I2S_IT_ERR) != RESET))
 800537e:	697b      	ldr	r3, [r7, #20]
 8005380:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005384:	2b40      	cmp	r3, #64	; 0x40
 8005386:	d126      	bne.n	80053d6 <I2S_IRQHandler+0x92>
 8005388:	687b      	ldr	r3, [r7, #4]
 800538a:	681b      	ldr	r3, [r3, #0]
 800538c:	685b      	ldr	r3, [r3, #4]
 800538e:	f003 0320 	and.w	r3, r3, #32
 8005392:	2b20      	cmp	r3, #32
 8005394:	d11f      	bne.n	80053d6 <I2S_IRQHandler+0x92>
    {
      /* Disable RXNE and ERR interrupt */
      __HAL_I2S_DISABLE_IT(hi2s, (I2S_IT_RXNE | I2S_IT_ERR));
 8005396:	687b      	ldr	r3, [r7, #4]
 8005398:	681b      	ldr	r3, [r3, #0]
 800539a:	685a      	ldr	r2, [r3, #4]
 800539c:	687b      	ldr	r3, [r7, #4]
 800539e:	681b      	ldr	r3, [r3, #0]
 80053a0:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80053a4:	605a      	str	r2, [r3, #4]

      /* Clear Overrun flag */
      __HAL_I2S_CLEAR_OVRFLAG(hi2s);
 80053a6:	2300      	movs	r3, #0
 80053a8:	613b      	str	r3, [r7, #16]
 80053aa:	687b      	ldr	r3, [r7, #4]
 80053ac:	681b      	ldr	r3, [r3, #0]
 80053ae:	68db      	ldr	r3, [r3, #12]
 80053b0:	613b      	str	r3, [r7, #16]
 80053b2:	687b      	ldr	r3, [r7, #4]
 80053b4:	681b      	ldr	r3, [r3, #0]
 80053b6:	689b      	ldr	r3, [r3, #8]
 80053b8:	613b      	str	r3, [r7, #16]
 80053ba:	693b      	ldr	r3, [r7, #16]

      /* Set the I2S State ready */
      hi2s->State = HAL_I2S_STATE_READY;
 80053bc:	687b      	ldr	r3, [r7, #4]
 80053be:	2201      	movs	r2, #1
 80053c0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41


      /* Set the error code and execute error callback*/
      SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_OVR);
 80053c4:	687b      	ldr	r3, [r7, #4]
 80053c6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80053c8:	f043 0202 	orr.w	r2, r3, #2
 80053cc:	687b      	ldr	r3, [r7, #4]
 80053ce:	645a      	str	r2, [r3, #68]	; 0x44
      /* Call user error callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
      hi2s->ErrorCallback(hi2s);
#else
      HAL_I2S_ErrorCallback(hi2s);
 80053d0:	6878      	ldr	r0, [r7, #4]
 80053d2:	f7ff fefb 	bl	80051cc <HAL_I2S_ErrorCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
    }
  }

  if (hi2s->State == HAL_I2S_STATE_BUSY_TX)
 80053d6:	687b      	ldr	r3, [r7, #4]
 80053d8:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80053dc:	b2db      	uxtb	r3, r3
 80053de:	2b03      	cmp	r3, #3
 80053e0:	d136      	bne.n	8005450 <I2S_IRQHandler+0x10c>
  {
    /* I2S in mode Transmitter -----------------------------------------------*/
    if (((i2ssr & I2S_FLAG_TXE) == I2S_FLAG_TXE) && (__HAL_I2S_GET_IT_SOURCE(hi2s, I2S_IT_TXE) != RESET))
 80053e2:	697b      	ldr	r3, [r7, #20]
 80053e4:	f003 0302 	and.w	r3, r3, #2
 80053e8:	2b02      	cmp	r3, #2
 80053ea:	d109      	bne.n	8005400 <I2S_IRQHandler+0xbc>
 80053ec:	687b      	ldr	r3, [r7, #4]
 80053ee:	681b      	ldr	r3, [r3, #0]
 80053f0:	685b      	ldr	r3, [r3, #4]
 80053f2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80053f6:	2b80      	cmp	r3, #128	; 0x80
 80053f8:	d102      	bne.n	8005400 <I2S_IRQHandler+0xbc>
    {
      I2S_Transmit_IT(hi2s);
 80053fa:	6878      	ldr	r0, [r7, #4]
 80053fc:	f7ff ff45 	bl	800528a <I2S_Transmit_IT>
    }

    /* I2S Underrun error interrupt occurred --------------------------------*/
    if (((i2ssr & I2S_FLAG_UDR) == I2S_FLAG_UDR) && (__HAL_I2S_GET_IT_SOURCE(hi2s, I2S_IT_ERR) != RESET))
 8005400:	697b      	ldr	r3, [r7, #20]
 8005402:	f003 0308 	and.w	r3, r3, #8
 8005406:	2b08      	cmp	r3, #8
 8005408:	d122      	bne.n	8005450 <I2S_IRQHandler+0x10c>
 800540a:	687b      	ldr	r3, [r7, #4]
 800540c:	681b      	ldr	r3, [r3, #0]
 800540e:	685b      	ldr	r3, [r3, #4]
 8005410:	f003 0320 	and.w	r3, r3, #32
 8005414:	2b20      	cmp	r3, #32
 8005416:	d11b      	bne.n	8005450 <I2S_IRQHandler+0x10c>
    {
      /* Disable TXE and ERR interrupt */
      __HAL_I2S_DISABLE_IT(hi2s, (I2S_IT_TXE | I2S_IT_ERR));
 8005418:	687b      	ldr	r3, [r7, #4]
 800541a:	681b      	ldr	r3, [r3, #0]
 800541c:	685a      	ldr	r2, [r3, #4]
 800541e:	687b      	ldr	r3, [r7, #4]
 8005420:	681b      	ldr	r3, [r3, #0]
 8005422:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 8005426:	605a      	str	r2, [r3, #4]

      /* Clear Underrun flag */
      __HAL_I2S_CLEAR_UDRFLAG(hi2s);
 8005428:	2300      	movs	r3, #0
 800542a:	60fb      	str	r3, [r7, #12]
 800542c:	687b      	ldr	r3, [r7, #4]
 800542e:	681b      	ldr	r3, [r3, #0]
 8005430:	689b      	ldr	r3, [r3, #8]
 8005432:	60fb      	str	r3, [r7, #12]
 8005434:	68fb      	ldr	r3, [r7, #12]

      /* Set the I2S State ready */
      hi2s->State = HAL_I2S_STATE_READY;
 8005436:	687b      	ldr	r3, [r7, #4]
 8005438:	2201      	movs	r2, #1
 800543a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

      /* Set the error code and execute error callback*/
      SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_UDR);
 800543e:	687b      	ldr	r3, [r7, #4]
 8005440:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005442:	f043 0204 	orr.w	r2, r3, #4
 8005446:	687b      	ldr	r3, [r7, #4]
 8005448:	645a      	str	r2, [r3, #68]	; 0x44
      /* Call user error callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
      hi2s->ErrorCallback(hi2s);
#else
      HAL_I2S_ErrorCallback(hi2s);
 800544a:	6878      	ldr	r0, [r7, #4]
 800544c:	f7ff febe 	bl	80051cc <HAL_I2S_ErrorCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
    }
  }
}
 8005450:	bf00      	nop
 8005452:	3718      	adds	r7, #24
 8005454:	46bd      	mov	sp, r7
 8005456:	bd80      	pop	{r7, pc}

08005458 <I2S_WaitFlagStateUntilTimeout>:
  * @param  Timeout Duration of the timeout
  * @retval HAL status
  */
static HAL_StatusTypeDef I2S_WaitFlagStateUntilTimeout(I2S_HandleTypeDef *hi2s, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout)
{
 8005458:	b580      	push	{r7, lr}
 800545a:	b086      	sub	sp, #24
 800545c:	af00      	add	r7, sp, #0
 800545e:	60f8      	str	r0, [r7, #12]
 8005460:	60b9      	str	r1, [r7, #8]
 8005462:	603b      	str	r3, [r7, #0]
 8005464:	4613      	mov	r3, r2
 8005466:	71fb      	strb	r3, [r7, #7]
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 8005468:	f7fd faba 	bl	80029e0 <HAL_GetTick>
 800546c:	6178      	str	r0, [r7, #20]

  /* Wait until flag is set to status*/
  while (((__HAL_I2S_GET_FLAG(hi2s, Flag)) ? SET : RESET) != State)
 800546e:	e018      	b.n	80054a2 <I2S_WaitFlagStateUntilTimeout+0x4a>
  {
    if (Timeout != HAL_MAX_DELAY)
 8005470:	683b      	ldr	r3, [r7, #0]
 8005472:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8005476:	d014      	beq.n	80054a2 <I2S_WaitFlagStateUntilTimeout+0x4a>
    {
      if (((HAL_GetTick() - tickstart) >= Timeout) || (Timeout == 0U))
 8005478:	f7fd fab2 	bl	80029e0 <HAL_GetTick>
 800547c:	4602      	mov	r2, r0
 800547e:	697b      	ldr	r3, [r7, #20]
 8005480:	1ad3      	subs	r3, r2, r3
 8005482:	683a      	ldr	r2, [r7, #0]
 8005484:	429a      	cmp	r2, r3
 8005486:	d902      	bls.n	800548e <I2S_WaitFlagStateUntilTimeout+0x36>
 8005488:	683b      	ldr	r3, [r7, #0]
 800548a:	2b00      	cmp	r3, #0
 800548c:	d109      	bne.n	80054a2 <I2S_WaitFlagStateUntilTimeout+0x4a>
      {
        /* Set the I2S State ready */
        hi2s->State = HAL_I2S_STATE_READY;
 800548e:	68fb      	ldr	r3, [r7, #12]
 8005490:	2201      	movs	r2, #1
 8005492:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

        /* Process Unlocked */
        __HAL_UNLOCK(hi2s);
 8005496:	68fb      	ldr	r3, [r7, #12]
 8005498:	2200      	movs	r2, #0
 800549a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

        return HAL_TIMEOUT;
 800549e:	2303      	movs	r3, #3
 80054a0:	e00f      	b.n	80054c2 <I2S_WaitFlagStateUntilTimeout+0x6a>
  while (((__HAL_I2S_GET_FLAG(hi2s, Flag)) ? SET : RESET) != State)
 80054a2:	68fb      	ldr	r3, [r7, #12]
 80054a4:	681b      	ldr	r3, [r3, #0]
 80054a6:	689a      	ldr	r2, [r3, #8]
 80054a8:	68bb      	ldr	r3, [r7, #8]
 80054aa:	4013      	ands	r3, r2
 80054ac:	68ba      	ldr	r2, [r7, #8]
 80054ae:	429a      	cmp	r2, r3
 80054b0:	bf0c      	ite	eq
 80054b2:	2301      	moveq	r3, #1
 80054b4:	2300      	movne	r3, #0
 80054b6:	b2db      	uxtb	r3, r3
 80054b8:	461a      	mov	r2, r3
 80054ba:	79fb      	ldrb	r3, [r7, #7]
 80054bc:	429a      	cmp	r2, r3
 80054be:	d1d7      	bne.n	8005470 <I2S_WaitFlagStateUntilTimeout+0x18>
      }
    }
  }
  return HAL_OK;
 80054c0:	2300      	movs	r3, #0
}
 80054c2:	4618      	mov	r0, r3
 80054c4:	3718      	adds	r7, #24
 80054c6:	46bd      	mov	sp, r7
 80054c8:	bd80      	pop	{r7, pc}
	...

080054cc <HAL_I2SEx_FullDuplex_IRQHandler>:
  * @brief  This function handles I2S/I2Sext interrupt requests in full-duplex mode.
  * @param  hi2s I2S handle
  * @retval HAL status
  */
void HAL_I2SEx_FullDuplex_IRQHandler(I2S_HandleTypeDef *hi2s)
{
 80054cc:	b580      	push	{r7, lr}
 80054ce:	b088      	sub	sp, #32
 80054d0:	af00      	add	r7, sp, #0
 80054d2:	6078      	str	r0, [r7, #4]
  __IO uint32_t i2ssr     = hi2s->Instance->SR;
 80054d4:	687b      	ldr	r3, [r7, #4]
 80054d6:	681b      	ldr	r3, [r3, #0]
 80054d8:	689b      	ldr	r3, [r3, #8]
 80054da:	61fb      	str	r3, [r7, #28]
  __IO uint32_t i2sextsr  = I2SxEXT(hi2s->Instance)->SR;
 80054dc:	687b      	ldr	r3, [r7, #4]
 80054de:	681b      	ldr	r3, [r3, #0]
 80054e0:	4a92      	ldr	r2, [pc, #584]	; (800572c <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 80054e2:	4293      	cmp	r3, r2
 80054e4:	d101      	bne.n	80054ea <HAL_I2SEx_FullDuplex_IRQHandler+0x1e>
 80054e6:	4b92      	ldr	r3, [pc, #584]	; (8005730 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 80054e8:	e001      	b.n	80054ee <HAL_I2SEx_FullDuplex_IRQHandler+0x22>
 80054ea:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 80054ee:	689b      	ldr	r3, [r3, #8]
 80054f0:	61bb      	str	r3, [r7, #24]
  __IO uint32_t i2scr2    = hi2s->Instance->CR2;
 80054f2:	687b      	ldr	r3, [r7, #4]
 80054f4:	681b      	ldr	r3, [r3, #0]
 80054f6:	685b      	ldr	r3, [r3, #4]
 80054f8:	617b      	str	r3, [r7, #20]
  __IO uint32_t i2sextcr2 = I2SxEXT(hi2s->Instance)->CR2;
 80054fa:	687b      	ldr	r3, [r7, #4]
 80054fc:	681b      	ldr	r3, [r3, #0]
 80054fe:	4a8b      	ldr	r2, [pc, #556]	; (800572c <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 8005500:	4293      	cmp	r3, r2
 8005502:	d101      	bne.n	8005508 <HAL_I2SEx_FullDuplex_IRQHandler+0x3c>
 8005504:	4b8a      	ldr	r3, [pc, #552]	; (8005730 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 8005506:	e001      	b.n	800550c <HAL_I2SEx_FullDuplex_IRQHandler+0x40>
 8005508:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 800550c:	685b      	ldr	r3, [r3, #4]
 800550e:	613b      	str	r3, [r7, #16]

  /* Check if the I2S_MODE_MASTER_TX or I2S_MODE_SLAVE_TX Mode is selected */
  if ((hi2s->Init.Mode == I2S_MODE_MASTER_TX) || (hi2s->Init.Mode == I2S_MODE_SLAVE_TX))
 8005510:	687b      	ldr	r3, [r7, #4]
 8005512:	685b      	ldr	r3, [r3, #4]
 8005514:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8005518:	d004      	beq.n	8005524 <HAL_I2SEx_FullDuplex_IRQHandler+0x58>
 800551a:	687b      	ldr	r3, [r7, #4]
 800551c:	685b      	ldr	r3, [r3, #4]
 800551e:	2b00      	cmp	r3, #0
 8005520:	f040 8099 	bne.w	8005656 <HAL_I2SEx_FullDuplex_IRQHandler+0x18a>
  {
    /* I2S in mode Transmitter -------------------------------------------------*/
    if (((i2ssr & I2S_FLAG_TXE) == I2S_FLAG_TXE) && ((i2scr2 & I2S_IT_TXE) != RESET))
 8005524:	69fb      	ldr	r3, [r7, #28]
 8005526:	f003 0302 	and.w	r3, r3, #2
 800552a:	2b02      	cmp	r3, #2
 800552c:	d107      	bne.n	800553e <HAL_I2SEx_FullDuplex_IRQHandler+0x72>
 800552e:	697b      	ldr	r3, [r7, #20]
 8005530:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005534:	2b00      	cmp	r3, #0
 8005536:	d002      	beq.n	800553e <HAL_I2SEx_FullDuplex_IRQHandler+0x72>
    {
      /* When the I2S mode is configured as I2S_MODE_MASTER_TX or I2S_MODE_SLAVE_TX,
      the I2S TXE interrupt will be generated to manage the full-duplex transmit phase. */
      I2SEx_TxISR_I2S(hi2s);
 8005538:	6878      	ldr	r0, [r7, #4]
 800553a:	f000 f925 	bl	8005788 <I2SEx_TxISR_I2S>
    }

    /* I2Sext in mode Receiver -----------------------------------------------*/
    if (((i2sextsr & I2S_FLAG_RXNE) == I2S_FLAG_RXNE) && ((i2sextcr2 & I2S_IT_RXNE) != RESET))
 800553e:	69bb      	ldr	r3, [r7, #24]
 8005540:	f003 0301 	and.w	r3, r3, #1
 8005544:	2b01      	cmp	r3, #1
 8005546:	d107      	bne.n	8005558 <HAL_I2SEx_FullDuplex_IRQHandler+0x8c>
 8005548:	693b      	ldr	r3, [r7, #16]
 800554a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800554e:	2b00      	cmp	r3, #0
 8005550:	d002      	beq.n	8005558 <HAL_I2SEx_FullDuplex_IRQHandler+0x8c>
    {
      /* When the I2S mode is configured as I2S_MODE_MASTER_TX or I2S_MODE_SLAVE_TX,
      the I2Sext RXNE interrupt will be generated to manage the full-duplex receive phase. */
      I2SEx_RxISR_I2SExt(hi2s);
 8005552:	6878      	ldr	r0, [r7, #4]
 8005554:	f000 f9c8 	bl	80058e8 <I2SEx_RxISR_I2SExt>
    }

    /* I2Sext Overrun error interrupt occurred --------------------------------*/
    if (((i2sextsr & I2S_FLAG_OVR) == I2S_FLAG_OVR) && ((i2sextcr2 & I2S_IT_ERR) != RESET))
 8005558:	69bb      	ldr	r3, [r7, #24]
 800555a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800555e:	2b40      	cmp	r3, #64	; 0x40
 8005560:	d13a      	bne.n	80055d8 <HAL_I2SEx_FullDuplex_IRQHandler+0x10c>
 8005562:	693b      	ldr	r3, [r7, #16]
 8005564:	f003 0320 	and.w	r3, r3, #32
 8005568:	2b00      	cmp	r3, #0
 800556a:	d035      	beq.n	80055d8 <HAL_I2SEx_FullDuplex_IRQHandler+0x10c>
    {
      /* Disable RXNE and ERR interrupt */
      __HAL_I2SEXT_DISABLE_IT(hi2s, (I2S_IT_RXNE | I2S_IT_ERR));
 800556c:	687b      	ldr	r3, [r7, #4]
 800556e:	681b      	ldr	r3, [r3, #0]
 8005570:	4a6e      	ldr	r2, [pc, #440]	; (800572c <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 8005572:	4293      	cmp	r3, r2
 8005574:	d101      	bne.n	800557a <HAL_I2SEx_FullDuplex_IRQHandler+0xae>
 8005576:	4b6e      	ldr	r3, [pc, #440]	; (8005730 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 8005578:	e001      	b.n	800557e <HAL_I2SEx_FullDuplex_IRQHandler+0xb2>
 800557a:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 800557e:	685a      	ldr	r2, [r3, #4]
 8005580:	687b      	ldr	r3, [r7, #4]
 8005582:	681b      	ldr	r3, [r3, #0]
 8005584:	4969      	ldr	r1, [pc, #420]	; (800572c <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 8005586:	428b      	cmp	r3, r1
 8005588:	d101      	bne.n	800558e <HAL_I2SEx_FullDuplex_IRQHandler+0xc2>
 800558a:	4b69      	ldr	r3, [pc, #420]	; (8005730 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 800558c:	e001      	b.n	8005592 <HAL_I2SEx_FullDuplex_IRQHandler+0xc6>
 800558e:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8005592:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8005596:	605a      	str	r2, [r3, #4]

      /* Disable TXE and ERR interrupt */
      __HAL_I2S_DISABLE_IT(hi2s, (I2S_IT_TXE | I2S_IT_ERR));
 8005598:	687b      	ldr	r3, [r7, #4]
 800559a:	681b      	ldr	r3, [r3, #0]
 800559c:	685a      	ldr	r2, [r3, #4]
 800559e:	687b      	ldr	r3, [r7, #4]
 80055a0:	681b      	ldr	r3, [r3, #0]
 80055a2:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 80055a6:	605a      	str	r2, [r3, #4]

      /* Clear Overrun flag */
      __HAL_I2S_CLEAR_OVRFLAG(hi2s);
 80055a8:	2300      	movs	r3, #0
 80055aa:	60fb      	str	r3, [r7, #12]
 80055ac:	687b      	ldr	r3, [r7, #4]
 80055ae:	681b      	ldr	r3, [r3, #0]
 80055b0:	68db      	ldr	r3, [r3, #12]
 80055b2:	60fb      	str	r3, [r7, #12]
 80055b4:	687b      	ldr	r3, [r7, #4]
 80055b6:	681b      	ldr	r3, [r3, #0]
 80055b8:	689b      	ldr	r3, [r3, #8]
 80055ba:	60fb      	str	r3, [r7, #12]
 80055bc:	68fb      	ldr	r3, [r7, #12]

      /* Set the I2S State ready */
      hi2s->State = HAL_I2S_STATE_READY;
 80055be:	687b      	ldr	r3, [r7, #4]
 80055c0:	2201      	movs	r2, #1
 80055c2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

      /* Set the error code and execute error callback*/
      SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_OVR);
 80055c6:	687b      	ldr	r3, [r7, #4]
 80055c8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80055ca:	f043 0202 	orr.w	r2, r3, #2
 80055ce:	687b      	ldr	r3, [r7, #4]
 80055d0:	645a      	str	r2, [r3, #68]	; 0x44
      /* Call user error callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
      hi2s->ErrorCallback(hi2s);
#else
      HAL_I2S_ErrorCallback(hi2s);
 80055d2:	6878      	ldr	r0, [r7, #4]
 80055d4:	f7ff fdfa 	bl	80051cc <HAL_I2S_ErrorCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
    }

    /* I2S Underrun error interrupt occurred ----------------------------------*/
    if (((i2ssr & I2S_FLAG_UDR) == I2S_FLAG_UDR) && ((i2scr2 & I2S_IT_ERR) != RESET))
 80055d8:	69fb      	ldr	r3, [r7, #28]
 80055da:	f003 0308 	and.w	r3, r3, #8
 80055de:	2b08      	cmp	r3, #8
 80055e0:	f040 80c3 	bne.w	800576a <HAL_I2SEx_FullDuplex_IRQHandler+0x29e>
 80055e4:	697b      	ldr	r3, [r7, #20]
 80055e6:	f003 0320 	and.w	r3, r3, #32
 80055ea:	2b00      	cmp	r3, #0
 80055ec:	f000 80bd 	beq.w	800576a <HAL_I2SEx_FullDuplex_IRQHandler+0x29e>
    {
      /* Disable TXE and ERR interrupt */
      __HAL_I2S_DISABLE_IT(hi2s, (I2S_IT_TXE | I2S_IT_ERR));
 80055f0:	687b      	ldr	r3, [r7, #4]
 80055f2:	681b      	ldr	r3, [r3, #0]
 80055f4:	685a      	ldr	r2, [r3, #4]
 80055f6:	687b      	ldr	r3, [r7, #4]
 80055f8:	681b      	ldr	r3, [r3, #0]
 80055fa:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 80055fe:	605a      	str	r2, [r3, #4]

      /* Disable RXNE and ERR interrupt */
      __HAL_I2SEXT_DISABLE_IT(hi2s, (I2S_IT_RXNE | I2S_IT_ERR));
 8005600:	687b      	ldr	r3, [r7, #4]
 8005602:	681b      	ldr	r3, [r3, #0]
 8005604:	4a49      	ldr	r2, [pc, #292]	; (800572c <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 8005606:	4293      	cmp	r3, r2
 8005608:	d101      	bne.n	800560e <HAL_I2SEx_FullDuplex_IRQHandler+0x142>
 800560a:	4b49      	ldr	r3, [pc, #292]	; (8005730 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 800560c:	e001      	b.n	8005612 <HAL_I2SEx_FullDuplex_IRQHandler+0x146>
 800560e:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8005612:	685a      	ldr	r2, [r3, #4]
 8005614:	687b      	ldr	r3, [r7, #4]
 8005616:	681b      	ldr	r3, [r3, #0]
 8005618:	4944      	ldr	r1, [pc, #272]	; (800572c <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 800561a:	428b      	cmp	r3, r1
 800561c:	d101      	bne.n	8005622 <HAL_I2SEx_FullDuplex_IRQHandler+0x156>
 800561e:	4b44      	ldr	r3, [pc, #272]	; (8005730 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 8005620:	e001      	b.n	8005626 <HAL_I2SEx_FullDuplex_IRQHandler+0x15a>
 8005622:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8005626:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800562a:	605a      	str	r2, [r3, #4]

      /* Clear underrun flag */
      __HAL_I2S_CLEAR_UDRFLAG(hi2s);
 800562c:	2300      	movs	r3, #0
 800562e:	60bb      	str	r3, [r7, #8]
 8005630:	687b      	ldr	r3, [r7, #4]
 8005632:	681b      	ldr	r3, [r3, #0]
 8005634:	689b      	ldr	r3, [r3, #8]
 8005636:	60bb      	str	r3, [r7, #8]
 8005638:	68bb      	ldr	r3, [r7, #8]

      /* Set the I2S State ready */
      hi2s->State = HAL_I2S_STATE_READY;
 800563a:	687b      	ldr	r3, [r7, #4]
 800563c:	2201      	movs	r2, #1
 800563e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

      /* Set the error code and execute error callback*/
      SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_UDR);
 8005642:	687b      	ldr	r3, [r7, #4]
 8005644:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005646:	f043 0204 	orr.w	r2, r3, #4
 800564a:	687b      	ldr	r3, [r7, #4]
 800564c:	645a      	str	r2, [r3, #68]	; 0x44
      /* Call user error callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
      hi2s->ErrorCallback(hi2s);
#else
      HAL_I2S_ErrorCallback(hi2s);
 800564e:	6878      	ldr	r0, [r7, #4]
 8005650:	f7ff fdbc 	bl	80051cc <HAL_I2S_ErrorCallback>
    if (((i2ssr & I2S_FLAG_UDR) == I2S_FLAG_UDR) && ((i2scr2 & I2S_IT_ERR) != RESET))
 8005654:	e089      	b.n	800576a <HAL_I2SEx_FullDuplex_IRQHandler+0x29e>
  }
  /* The I2S_MODE_MASTER_RX or I2S_MODE_SLAVE_RX Mode is selected */
  else
  {
    /* I2Sext in mode Transmitter ----------------------------------------------*/
    if (((i2sextsr & I2S_FLAG_TXE) == I2S_FLAG_TXE) && ((i2sextcr2 & I2S_IT_TXE) != RESET))
 8005656:	69bb      	ldr	r3, [r7, #24]
 8005658:	f003 0302 	and.w	r3, r3, #2
 800565c:	2b02      	cmp	r3, #2
 800565e:	d107      	bne.n	8005670 <HAL_I2SEx_FullDuplex_IRQHandler+0x1a4>
 8005660:	693b      	ldr	r3, [r7, #16]
 8005662:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005666:	2b00      	cmp	r3, #0
 8005668:	d002      	beq.n	8005670 <HAL_I2SEx_FullDuplex_IRQHandler+0x1a4>
    {
      /* When the I2S mode is configured as I2S_MODE_MASTER_RX or I2S_MODE_SLAVE_RX,
      the I2Sext TXE interrupt will be generated to manage the full-duplex transmit phase. */
      I2SEx_TxISR_I2SExt(hi2s);
 800566a:	6878      	ldr	r0, [r7, #4]
 800566c:	f000 f8be 	bl	80057ec <I2SEx_TxISR_I2SExt>
    }

    /* I2S in mode Receiver --------------------------------------------------*/
    if (((i2ssr & I2S_FLAG_RXNE) == I2S_FLAG_RXNE) && ((i2scr2 & I2S_IT_RXNE) != RESET))
 8005670:	69fb      	ldr	r3, [r7, #28]
 8005672:	f003 0301 	and.w	r3, r3, #1
 8005676:	2b01      	cmp	r3, #1
 8005678:	d107      	bne.n	800568a <HAL_I2SEx_FullDuplex_IRQHandler+0x1be>
 800567a:	697b      	ldr	r3, [r7, #20]
 800567c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005680:	2b00      	cmp	r3, #0
 8005682:	d002      	beq.n	800568a <HAL_I2SEx_FullDuplex_IRQHandler+0x1be>
    {
      /* When the I2S mode is configured as I2S_MODE_MASTER_RX or I2S_MODE_SLAVE_RX,
      the I2S RXNE interrupt will be generated to manage the full-duplex receive phase. */
      I2SEx_RxISR_I2S(hi2s);
 8005684:	6878      	ldr	r0, [r7, #4]
 8005686:	f000 f8fd 	bl	8005884 <I2SEx_RxISR_I2S>
    }

    /* I2S Overrun error interrupt occurred -------------------------------------*/
    if (((i2ssr & I2S_FLAG_OVR) == I2S_FLAG_OVR) && ((i2scr2 & I2S_IT_ERR) != RESET))
 800568a:	69fb      	ldr	r3, [r7, #28]
 800568c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005690:	2b40      	cmp	r3, #64	; 0x40
 8005692:	d12f      	bne.n	80056f4 <HAL_I2SEx_FullDuplex_IRQHandler+0x228>
 8005694:	697b      	ldr	r3, [r7, #20]
 8005696:	f003 0320 	and.w	r3, r3, #32
 800569a:	2b00      	cmp	r3, #0
 800569c:	d02a      	beq.n	80056f4 <HAL_I2SEx_FullDuplex_IRQHandler+0x228>
    {
      /* Disable RXNE and ERR interrupt */
      __HAL_I2S_DISABLE_IT(hi2s, (I2S_IT_RXNE | I2S_IT_ERR));
 800569e:	687b      	ldr	r3, [r7, #4]
 80056a0:	681b      	ldr	r3, [r3, #0]
 80056a2:	685a      	ldr	r2, [r3, #4]
 80056a4:	687b      	ldr	r3, [r7, #4]
 80056a6:	681b      	ldr	r3, [r3, #0]
 80056a8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80056ac:	605a      	str	r2, [r3, #4]

      /* Disable TXE and ERR interrupt */
      __HAL_I2SEXT_DISABLE_IT(hi2s, (I2S_IT_TXE | I2S_IT_ERR));
 80056ae:	687b      	ldr	r3, [r7, #4]
 80056b0:	681b      	ldr	r3, [r3, #0]
 80056b2:	4a1e      	ldr	r2, [pc, #120]	; (800572c <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 80056b4:	4293      	cmp	r3, r2
 80056b6:	d101      	bne.n	80056bc <HAL_I2SEx_FullDuplex_IRQHandler+0x1f0>
 80056b8:	4b1d      	ldr	r3, [pc, #116]	; (8005730 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 80056ba:	e001      	b.n	80056c0 <HAL_I2SEx_FullDuplex_IRQHandler+0x1f4>
 80056bc:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 80056c0:	685a      	ldr	r2, [r3, #4]
 80056c2:	687b      	ldr	r3, [r7, #4]
 80056c4:	681b      	ldr	r3, [r3, #0]
 80056c6:	4919      	ldr	r1, [pc, #100]	; (800572c <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 80056c8:	428b      	cmp	r3, r1
 80056ca:	d101      	bne.n	80056d0 <HAL_I2SEx_FullDuplex_IRQHandler+0x204>
 80056cc:	4b18      	ldr	r3, [pc, #96]	; (8005730 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 80056ce:	e001      	b.n	80056d4 <HAL_I2SEx_FullDuplex_IRQHandler+0x208>
 80056d0:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 80056d4:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 80056d8:	605a      	str	r2, [r3, #4]

      /* Set the I2S State ready */
      hi2s->State = HAL_I2S_STATE_READY;
 80056da:	687b      	ldr	r3, [r7, #4]
 80056dc:	2201      	movs	r2, #1
 80056de:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

      /* Set the error code and execute error callback*/
      SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_OVR);
 80056e2:	687b      	ldr	r3, [r7, #4]
 80056e4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80056e6:	f043 0202 	orr.w	r2, r3, #2
 80056ea:	687b      	ldr	r3, [r7, #4]
 80056ec:	645a      	str	r2, [r3, #68]	; 0x44
      /* Call user error callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
      hi2s->ErrorCallback(hi2s);
#else
      HAL_I2S_ErrorCallback(hi2s);
 80056ee:	6878      	ldr	r0, [r7, #4]
 80056f0:	f7ff fd6c 	bl	80051cc <HAL_I2S_ErrorCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
    }

    /* I2Sext Underrun error interrupt occurred -------------------------------*/
    if (((i2sextsr & I2S_FLAG_UDR) == I2S_FLAG_UDR) && ((i2sextcr2 & I2S_IT_ERR) != RESET))
 80056f4:	69bb      	ldr	r3, [r7, #24]
 80056f6:	f003 0308 	and.w	r3, r3, #8
 80056fa:	2b08      	cmp	r3, #8
 80056fc:	d136      	bne.n	800576c <HAL_I2SEx_FullDuplex_IRQHandler+0x2a0>
 80056fe:	693b      	ldr	r3, [r7, #16]
 8005700:	f003 0320 	and.w	r3, r3, #32
 8005704:	2b00      	cmp	r3, #0
 8005706:	d031      	beq.n	800576c <HAL_I2SEx_FullDuplex_IRQHandler+0x2a0>
    {
      /* Disable TXE and ERR interrupt */
      __HAL_I2SEXT_DISABLE_IT(hi2s, (I2S_IT_TXE | I2S_IT_ERR));
 8005708:	687b      	ldr	r3, [r7, #4]
 800570a:	681b      	ldr	r3, [r3, #0]
 800570c:	4a07      	ldr	r2, [pc, #28]	; (800572c <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 800570e:	4293      	cmp	r3, r2
 8005710:	d101      	bne.n	8005716 <HAL_I2SEx_FullDuplex_IRQHandler+0x24a>
 8005712:	4b07      	ldr	r3, [pc, #28]	; (8005730 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 8005714:	e001      	b.n	800571a <HAL_I2SEx_FullDuplex_IRQHandler+0x24e>
 8005716:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 800571a:	685a      	ldr	r2, [r3, #4]
 800571c:	687b      	ldr	r3, [r7, #4]
 800571e:	681b      	ldr	r3, [r3, #0]
 8005720:	4902      	ldr	r1, [pc, #8]	; (800572c <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 8005722:	428b      	cmp	r3, r1
 8005724:	d106      	bne.n	8005734 <HAL_I2SEx_FullDuplex_IRQHandler+0x268>
 8005726:	4b02      	ldr	r3, [pc, #8]	; (8005730 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 8005728:	e006      	b.n	8005738 <HAL_I2SEx_FullDuplex_IRQHandler+0x26c>
 800572a:	bf00      	nop
 800572c:	40003800 	.word	0x40003800
 8005730:	40003400 	.word	0x40003400
 8005734:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8005738:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 800573c:	605a      	str	r2, [r3, #4]

      /* Disable RXNE and ERR interrupt */
      __HAL_I2S_DISABLE_IT(hi2s, (I2S_IT_RXNE | I2S_IT_ERR));
 800573e:	687b      	ldr	r3, [r7, #4]
 8005740:	681b      	ldr	r3, [r3, #0]
 8005742:	685a      	ldr	r2, [r3, #4]
 8005744:	687b      	ldr	r3, [r7, #4]
 8005746:	681b      	ldr	r3, [r3, #0]
 8005748:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800574c:	605a      	str	r2, [r3, #4]

      /* Set the I2S State ready */
      hi2s->State = HAL_I2S_STATE_READY;
 800574e:	687b      	ldr	r3, [r7, #4]
 8005750:	2201      	movs	r2, #1
 8005752:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

      /* Set the error code and execute error callback*/
      SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_UDR);
 8005756:	687b      	ldr	r3, [r7, #4]
 8005758:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800575a:	f043 0204 	orr.w	r2, r3, #4
 800575e:	687b      	ldr	r3, [r7, #4]
 8005760:	645a      	str	r2, [r3, #68]	; 0x44
      /* Call user error callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
      hi2s->ErrorCallback(hi2s);
#else
      HAL_I2S_ErrorCallback(hi2s);
 8005762:	6878      	ldr	r0, [r7, #4]
 8005764:	f7ff fd32 	bl	80051cc <HAL_I2S_ErrorCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
    }
  }
}
 8005768:	e000      	b.n	800576c <HAL_I2SEx_FullDuplex_IRQHandler+0x2a0>
    if (((i2ssr & I2S_FLAG_UDR) == I2S_FLAG_UDR) && ((i2scr2 & I2S_IT_ERR) != RESET))
 800576a:	bf00      	nop
}
 800576c:	bf00      	nop
 800576e:	3720      	adds	r7, #32
 8005770:	46bd      	mov	sp, r7
 8005772:	bd80      	pop	{r7, pc}

08005774 <HAL_I2SEx_TxRxCpltCallback>:
  * @brief  Tx and Rx Transfer completed callback
  * @param  hi2s I2S handle
  * @retval None
  */
__weak void HAL_I2SEx_TxRxCpltCallback(I2S_HandleTypeDef *hi2s)
{
 8005774:	b480      	push	{r7}
 8005776:	b083      	sub	sp, #12
 8005778:	af00      	add	r7, sp, #0
 800577a:	6078      	str	r0, [r7, #4]
  UNUSED(hi2s);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_I2SEx_TxRxCpltCallback could be implemented in the user file
   */
}
 800577c:	bf00      	nop
 800577e:	370c      	adds	r7, #12
 8005780:	46bd      	mov	sp, r7
 8005782:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005786:	4770      	bx	lr

08005788 <I2SEx_TxISR_I2S>:
  * @brief  I2S Full-Duplex IT handler transmit function
  * @param  hi2s I2S handle
  * @retval None
  */
static void I2SEx_TxISR_I2S(I2S_HandleTypeDef *hi2s)
{
 8005788:	b580      	push	{r7, lr}
 800578a:	b082      	sub	sp, #8
 800578c:	af00      	add	r7, sp, #0
 800578e:	6078      	str	r0, [r7, #4]
  /* Write Data on DR register */
  hi2s->Instance->DR = (*hi2s->pTxBuffPtr++);
 8005790:	687b      	ldr	r3, [r7, #4]
 8005792:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005794:	1c99      	adds	r1, r3, #2
 8005796:	687a      	ldr	r2, [r7, #4]
 8005798:	6251      	str	r1, [r2, #36]	; 0x24
 800579a:	881a      	ldrh	r2, [r3, #0]
 800579c:	687b      	ldr	r3, [r7, #4]
 800579e:	681b      	ldr	r3, [r3, #0]
 80057a0:	60da      	str	r2, [r3, #12]
  hi2s->TxXferCount--;
 80057a2:	687b      	ldr	r3, [r7, #4]
 80057a4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80057a6:	b29b      	uxth	r3, r3
 80057a8:	3b01      	subs	r3, #1
 80057aa:	b29a      	uxth	r2, r3
 80057ac:	687b      	ldr	r3, [r7, #4]
 80057ae:	855a      	strh	r2, [r3, #42]	; 0x2a

  if (hi2s->TxXferCount == 0U)
 80057b0:	687b      	ldr	r3, [r7, #4]
 80057b2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80057b4:	b29b      	uxth	r3, r3
 80057b6:	2b00      	cmp	r3, #0
 80057b8:	d113      	bne.n	80057e2 <I2SEx_TxISR_I2S+0x5a>
  {
    /* Disable TXE and ERR interrupt */
    __HAL_I2S_DISABLE_IT(hi2s, (I2S_IT_TXE | I2S_IT_ERR));
 80057ba:	687b      	ldr	r3, [r7, #4]
 80057bc:	681b      	ldr	r3, [r3, #0]
 80057be:	685a      	ldr	r2, [r3, #4]
 80057c0:	687b      	ldr	r3, [r7, #4]
 80057c2:	681b      	ldr	r3, [r3, #0]
 80057c4:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 80057c8:	605a      	str	r2, [r3, #4]

    if (hi2s->RxXferCount == 0U)
 80057ca:	687b      	ldr	r3, [r7, #4]
 80057cc:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 80057ce:	b29b      	uxth	r3, r3
 80057d0:	2b00      	cmp	r3, #0
 80057d2:	d106      	bne.n	80057e2 <I2SEx_TxISR_I2S+0x5a>
    {
      hi2s->State = HAL_I2S_STATE_READY;
 80057d4:	687b      	ldr	r3, [r7, #4]
 80057d6:	2201      	movs	r2, #1
 80057d8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
      /* Call user TxRx complete callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
      hi2s->TxRxCpltCallback(hi2s);
#else
      HAL_I2SEx_TxRxCpltCallback(hi2s);
 80057dc:	6878      	ldr	r0, [r7, #4]
 80057de:	f7ff ffc9 	bl	8005774 <HAL_I2SEx_TxRxCpltCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
    }
  }
}
 80057e2:	bf00      	nop
 80057e4:	3708      	adds	r7, #8
 80057e6:	46bd      	mov	sp, r7
 80057e8:	bd80      	pop	{r7, pc}
	...

080057ec <I2SEx_TxISR_I2SExt>:
  * @brief  I2SExt Full-Duplex IT handler transmit function
  * @param  hi2s I2S handle
  * @retval None
  */
static void I2SEx_TxISR_I2SExt(I2S_HandleTypeDef *hi2s)
{
 80057ec:	b580      	push	{r7, lr}
 80057ee:	b082      	sub	sp, #8
 80057f0:	af00      	add	r7, sp, #0
 80057f2:	6078      	str	r0, [r7, #4]
  /* Write Data on DR register */
  I2SxEXT(hi2s->Instance)->DR = (*hi2s->pTxBuffPtr++);
 80057f4:	687b      	ldr	r3, [r7, #4]
 80057f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057f8:	1c99      	adds	r1, r3, #2
 80057fa:	687a      	ldr	r2, [r7, #4]
 80057fc:	6251      	str	r1, [r2, #36]	; 0x24
 80057fe:	8819      	ldrh	r1, [r3, #0]
 8005800:	687b      	ldr	r3, [r7, #4]
 8005802:	681b      	ldr	r3, [r3, #0]
 8005804:	4a1d      	ldr	r2, [pc, #116]	; (800587c <I2SEx_TxISR_I2SExt+0x90>)
 8005806:	4293      	cmp	r3, r2
 8005808:	d101      	bne.n	800580e <I2SEx_TxISR_I2SExt+0x22>
 800580a:	4b1d      	ldr	r3, [pc, #116]	; (8005880 <I2SEx_TxISR_I2SExt+0x94>)
 800580c:	e001      	b.n	8005812 <I2SEx_TxISR_I2SExt+0x26>
 800580e:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8005812:	460a      	mov	r2, r1
 8005814:	60da      	str	r2, [r3, #12]
  hi2s->TxXferCount--;
 8005816:	687b      	ldr	r3, [r7, #4]
 8005818:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800581a:	b29b      	uxth	r3, r3
 800581c:	3b01      	subs	r3, #1
 800581e:	b29a      	uxth	r2, r3
 8005820:	687b      	ldr	r3, [r7, #4]
 8005822:	855a      	strh	r2, [r3, #42]	; 0x2a

  if (hi2s->TxXferCount == 0U)
 8005824:	687b      	ldr	r3, [r7, #4]
 8005826:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005828:	b29b      	uxth	r3, r3
 800582a:	2b00      	cmp	r3, #0
 800582c:	d121      	bne.n	8005872 <I2SEx_TxISR_I2SExt+0x86>
  {
    /* Disable I2Sext TXE and ERR interrupt */
    __HAL_I2SEXT_DISABLE_IT(hi2s, (I2S_IT_TXE | I2S_IT_ERR));
 800582e:	687b      	ldr	r3, [r7, #4]
 8005830:	681b      	ldr	r3, [r3, #0]
 8005832:	4a12      	ldr	r2, [pc, #72]	; (800587c <I2SEx_TxISR_I2SExt+0x90>)
 8005834:	4293      	cmp	r3, r2
 8005836:	d101      	bne.n	800583c <I2SEx_TxISR_I2SExt+0x50>
 8005838:	4b11      	ldr	r3, [pc, #68]	; (8005880 <I2SEx_TxISR_I2SExt+0x94>)
 800583a:	e001      	b.n	8005840 <I2SEx_TxISR_I2SExt+0x54>
 800583c:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8005840:	685a      	ldr	r2, [r3, #4]
 8005842:	687b      	ldr	r3, [r7, #4]
 8005844:	681b      	ldr	r3, [r3, #0]
 8005846:	490d      	ldr	r1, [pc, #52]	; (800587c <I2SEx_TxISR_I2SExt+0x90>)
 8005848:	428b      	cmp	r3, r1
 800584a:	d101      	bne.n	8005850 <I2SEx_TxISR_I2SExt+0x64>
 800584c:	4b0c      	ldr	r3, [pc, #48]	; (8005880 <I2SEx_TxISR_I2SExt+0x94>)
 800584e:	e001      	b.n	8005854 <I2SEx_TxISR_I2SExt+0x68>
 8005850:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8005854:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 8005858:	605a      	str	r2, [r3, #4]

    if (hi2s->RxXferCount == 0U)
 800585a:	687b      	ldr	r3, [r7, #4]
 800585c:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 800585e:	b29b      	uxth	r3, r3
 8005860:	2b00      	cmp	r3, #0
 8005862:	d106      	bne.n	8005872 <I2SEx_TxISR_I2SExt+0x86>
    {
      hi2s->State = HAL_I2S_STATE_READY;
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	2201      	movs	r2, #1
 8005868:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
      /* Call user TxRx complete callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
      hi2s->TxRxCpltCallback(hi2s);
#else
      HAL_I2SEx_TxRxCpltCallback(hi2s);
 800586c:	6878      	ldr	r0, [r7, #4]
 800586e:	f7ff ff81 	bl	8005774 <HAL_I2SEx_TxRxCpltCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
    }
  }
}
 8005872:	bf00      	nop
 8005874:	3708      	adds	r7, #8
 8005876:	46bd      	mov	sp, r7
 8005878:	bd80      	pop	{r7, pc}
 800587a:	bf00      	nop
 800587c:	40003800 	.word	0x40003800
 8005880:	40003400 	.word	0x40003400

08005884 <I2SEx_RxISR_I2S>:
  * @brief  I2S Full-Duplex IT handler receive function
  * @param  hi2s I2S handle
  * @retval None
  */
static void I2SEx_RxISR_I2S(I2S_HandleTypeDef *hi2s)
{
 8005884:	b580      	push	{r7, lr}
 8005886:	b082      	sub	sp, #8
 8005888:	af00      	add	r7, sp, #0
 800588a:	6078      	str	r0, [r7, #4]
  /* Read Data from DR register */
  (*hi2s->pRxBuffPtr++) = hi2s->Instance->DR;
 800588c:	687b      	ldr	r3, [r7, #4]
 800588e:	681b      	ldr	r3, [r3, #0]
 8005890:	68d8      	ldr	r0, [r3, #12]
 8005892:	687b      	ldr	r3, [r7, #4]
 8005894:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005896:	1c99      	adds	r1, r3, #2
 8005898:	687a      	ldr	r2, [r7, #4]
 800589a:	62d1      	str	r1, [r2, #44]	; 0x2c
 800589c:	b282      	uxth	r2, r0
 800589e:	801a      	strh	r2, [r3, #0]
  hi2s->RxXferCount--;
 80058a0:	687b      	ldr	r3, [r7, #4]
 80058a2:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 80058a4:	b29b      	uxth	r3, r3
 80058a6:	3b01      	subs	r3, #1
 80058a8:	b29a      	uxth	r2, r3
 80058aa:	687b      	ldr	r3, [r7, #4]
 80058ac:	865a      	strh	r2, [r3, #50]	; 0x32

  if (hi2s->RxXferCount == 0U)
 80058ae:	687b      	ldr	r3, [r7, #4]
 80058b0:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 80058b2:	b29b      	uxth	r3, r3
 80058b4:	2b00      	cmp	r3, #0
 80058b6:	d113      	bne.n	80058e0 <I2SEx_RxISR_I2S+0x5c>
  {
    /* Disable RXNE and ERR interrupt */
    __HAL_I2S_DISABLE_IT(hi2s, (I2S_IT_RXNE | I2S_IT_ERR));
 80058b8:	687b      	ldr	r3, [r7, #4]
 80058ba:	681b      	ldr	r3, [r3, #0]
 80058bc:	685a      	ldr	r2, [r3, #4]
 80058be:	687b      	ldr	r3, [r7, #4]
 80058c0:	681b      	ldr	r3, [r3, #0]
 80058c2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80058c6:	605a      	str	r2, [r3, #4]

    if (hi2s->TxXferCount == 0U)
 80058c8:	687b      	ldr	r3, [r7, #4]
 80058ca:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80058cc:	b29b      	uxth	r3, r3
 80058ce:	2b00      	cmp	r3, #0
 80058d0:	d106      	bne.n	80058e0 <I2SEx_RxISR_I2S+0x5c>
    {
      hi2s->State = HAL_I2S_STATE_READY;
 80058d2:	687b      	ldr	r3, [r7, #4]
 80058d4:	2201      	movs	r2, #1
 80058d6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
      /* Call user TxRx complete callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
      hi2s->TxRxCpltCallback(hi2s);
#else
      HAL_I2SEx_TxRxCpltCallback(hi2s);
 80058da:	6878      	ldr	r0, [r7, #4]
 80058dc:	f7ff ff4a 	bl	8005774 <HAL_I2SEx_TxRxCpltCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
    }
  }
}
 80058e0:	bf00      	nop
 80058e2:	3708      	adds	r7, #8
 80058e4:	46bd      	mov	sp, r7
 80058e6:	bd80      	pop	{r7, pc}

080058e8 <I2SEx_RxISR_I2SExt>:
  * @brief  I2SExt Full-Duplex IT handler receive function
  * @param  hi2s I2S handle
  * @retval None
  */
static void I2SEx_RxISR_I2SExt(I2S_HandleTypeDef *hi2s)
{
 80058e8:	b580      	push	{r7, lr}
 80058ea:	b082      	sub	sp, #8
 80058ec:	af00      	add	r7, sp, #0
 80058ee:	6078      	str	r0, [r7, #4]
  /* Read Data from DR register */
  (*hi2s->pRxBuffPtr++) = I2SxEXT(hi2s->Instance)->DR;
 80058f0:	687b      	ldr	r3, [r7, #4]
 80058f2:	681b      	ldr	r3, [r3, #0]
 80058f4:	4a20      	ldr	r2, [pc, #128]	; (8005978 <I2SEx_RxISR_I2SExt+0x90>)
 80058f6:	4293      	cmp	r3, r2
 80058f8:	d101      	bne.n	80058fe <I2SEx_RxISR_I2SExt+0x16>
 80058fa:	4b20      	ldr	r3, [pc, #128]	; (800597c <I2SEx_RxISR_I2SExt+0x94>)
 80058fc:	e001      	b.n	8005902 <I2SEx_RxISR_I2SExt+0x1a>
 80058fe:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8005902:	68d8      	ldr	r0, [r3, #12]
 8005904:	687b      	ldr	r3, [r7, #4]
 8005906:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005908:	1c99      	adds	r1, r3, #2
 800590a:	687a      	ldr	r2, [r7, #4]
 800590c:	62d1      	str	r1, [r2, #44]	; 0x2c
 800590e:	b282      	uxth	r2, r0
 8005910:	801a      	strh	r2, [r3, #0]
  hi2s->RxXferCount--;
 8005912:	687b      	ldr	r3, [r7, #4]
 8005914:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 8005916:	b29b      	uxth	r3, r3
 8005918:	3b01      	subs	r3, #1
 800591a:	b29a      	uxth	r2, r3
 800591c:	687b      	ldr	r3, [r7, #4]
 800591e:	865a      	strh	r2, [r3, #50]	; 0x32

  if (hi2s->RxXferCount == 0U)
 8005920:	687b      	ldr	r3, [r7, #4]
 8005922:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 8005924:	b29b      	uxth	r3, r3
 8005926:	2b00      	cmp	r3, #0
 8005928:	d121      	bne.n	800596e <I2SEx_RxISR_I2SExt+0x86>
  {
    /* Disable I2Sext RXNE and ERR interrupt */
    __HAL_I2SEXT_DISABLE_IT(hi2s, (I2S_IT_RXNE | I2S_IT_ERR));
 800592a:	687b      	ldr	r3, [r7, #4]
 800592c:	681b      	ldr	r3, [r3, #0]
 800592e:	4a12      	ldr	r2, [pc, #72]	; (8005978 <I2SEx_RxISR_I2SExt+0x90>)
 8005930:	4293      	cmp	r3, r2
 8005932:	d101      	bne.n	8005938 <I2SEx_RxISR_I2SExt+0x50>
 8005934:	4b11      	ldr	r3, [pc, #68]	; (800597c <I2SEx_RxISR_I2SExt+0x94>)
 8005936:	e001      	b.n	800593c <I2SEx_RxISR_I2SExt+0x54>
 8005938:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 800593c:	685a      	ldr	r2, [r3, #4]
 800593e:	687b      	ldr	r3, [r7, #4]
 8005940:	681b      	ldr	r3, [r3, #0]
 8005942:	490d      	ldr	r1, [pc, #52]	; (8005978 <I2SEx_RxISR_I2SExt+0x90>)
 8005944:	428b      	cmp	r3, r1
 8005946:	d101      	bne.n	800594c <I2SEx_RxISR_I2SExt+0x64>
 8005948:	4b0c      	ldr	r3, [pc, #48]	; (800597c <I2SEx_RxISR_I2SExt+0x94>)
 800594a:	e001      	b.n	8005950 <I2SEx_RxISR_I2SExt+0x68>
 800594c:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8005950:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8005954:	605a      	str	r2, [r3, #4]

    if (hi2s->TxXferCount == 0U)
 8005956:	687b      	ldr	r3, [r7, #4]
 8005958:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800595a:	b29b      	uxth	r3, r3
 800595c:	2b00      	cmp	r3, #0
 800595e:	d106      	bne.n	800596e <I2SEx_RxISR_I2SExt+0x86>
    {
      hi2s->State = HAL_I2S_STATE_READY;
 8005960:	687b      	ldr	r3, [r7, #4]
 8005962:	2201      	movs	r2, #1
 8005964:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
      /* Call user TxRx complete callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
      hi2s->TxRxCpltCallback(hi2s);
#else
      HAL_I2SEx_TxRxCpltCallback(hi2s);
 8005968:	6878      	ldr	r0, [r7, #4]
 800596a:	f7ff ff03 	bl	8005774 <HAL_I2SEx_TxRxCpltCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
    }
  }
}
 800596e:	bf00      	nop
 8005970:	3708      	adds	r7, #8
 8005972:	46bd      	mov	sp, r7
 8005974:	bd80      	pop	{r7, pc}
 8005976:	bf00      	nop
 8005978:	40003800 	.word	0x40003800
 800597c:	40003400 	.word	0x40003400

08005980 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8005980:	b580      	push	{r7, lr}
 8005982:	b082      	sub	sp, #8
 8005984:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0U;
 8005986:	2300      	movs	r3, #0
 8005988:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 800598a:	2300      	movs	r3, #0
 800598c:	603b      	str	r3, [r7, #0]
 800598e:	4b20      	ldr	r3, [pc, #128]	; (8005a10 <HAL_PWREx_EnableOverDrive+0x90>)
 8005990:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005992:	4a1f      	ldr	r2, [pc, #124]	; (8005a10 <HAL_PWREx_EnableOverDrive+0x90>)
 8005994:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005998:	6413      	str	r3, [r2, #64]	; 0x40
 800599a:	4b1d      	ldr	r3, [pc, #116]	; (8005a10 <HAL_PWREx_EnableOverDrive+0x90>)
 800599c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800599e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80059a2:	603b      	str	r3, [r7, #0]
 80059a4:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 180 Mhz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 80059a6:	4b1b      	ldr	r3, [pc, #108]	; (8005a14 <HAL_PWREx_EnableOverDrive+0x94>)
 80059a8:	2201      	movs	r2, #1
 80059aa:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80059ac:	f7fd f818 	bl	80029e0 <HAL_GetTick>
 80059b0:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80059b2:	e009      	b.n	80059c8 <HAL_PWREx_EnableOverDrive+0x48>
  {
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80059b4:	f7fd f814 	bl	80029e0 <HAL_GetTick>
 80059b8:	4602      	mov	r2, r0
 80059ba:	687b      	ldr	r3, [r7, #4]
 80059bc:	1ad3      	subs	r3, r2, r3
 80059be:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80059c2:	d901      	bls.n	80059c8 <HAL_PWREx_EnableOverDrive+0x48>
    {
      return HAL_TIMEOUT;
 80059c4:	2303      	movs	r3, #3
 80059c6:	e01f      	b.n	8005a08 <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80059c8:	4b13      	ldr	r3, [pc, #76]	; (8005a18 <HAL_PWREx_EnableOverDrive+0x98>)
 80059ca:	685b      	ldr	r3, [r3, #4]
 80059cc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80059d0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80059d4:	d1ee      	bne.n	80059b4 <HAL_PWREx_EnableOverDrive+0x34>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80059d6:	4b11      	ldr	r3, [pc, #68]	; (8005a1c <HAL_PWREx_EnableOverDrive+0x9c>)
 80059d8:	2201      	movs	r2, #1
 80059da:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80059dc:	f7fd f800 	bl	80029e0 <HAL_GetTick>
 80059e0:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80059e2:	e009      	b.n	80059f8 <HAL_PWREx_EnableOverDrive+0x78>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80059e4:	f7fc fffc 	bl	80029e0 <HAL_GetTick>
 80059e8:	4602      	mov	r2, r0
 80059ea:	687b      	ldr	r3, [r7, #4]
 80059ec:	1ad3      	subs	r3, r2, r3
 80059ee:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80059f2:	d901      	bls.n	80059f8 <HAL_PWREx_EnableOverDrive+0x78>
    {
      return HAL_TIMEOUT;
 80059f4:	2303      	movs	r3, #3
 80059f6:	e007      	b.n	8005a08 <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80059f8:	4b07      	ldr	r3, [pc, #28]	; (8005a18 <HAL_PWREx_EnableOverDrive+0x98>)
 80059fa:	685b      	ldr	r3, [r3, #4]
 80059fc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005a00:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8005a04:	d1ee      	bne.n	80059e4 <HAL_PWREx_EnableOverDrive+0x64>
    }
  } 
  return HAL_OK;
 8005a06:	2300      	movs	r3, #0
}
 8005a08:	4618      	mov	r0, r3
 8005a0a:	3708      	adds	r7, #8
 8005a0c:	46bd      	mov	sp, r7
 8005a0e:	bd80      	pop	{r7, pc}
 8005a10:	40023800 	.word	0x40023800
 8005a14:	420e0040 	.word	0x420e0040
 8005a18:	40007000 	.word	0x40007000
 8005a1c:	420e0044 	.word	0x420e0044

08005a20 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005a20:	b580      	push	{r7, lr}
 8005a22:	b086      	sub	sp, #24
 8005a24:	af00      	add	r7, sp, #0
 8005a26:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8005a28:	687b      	ldr	r3, [r7, #4]
 8005a2a:	2b00      	cmp	r3, #0
 8005a2c:	d101      	bne.n	8005a32 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8005a2e:	2301      	movs	r3, #1
 8005a30:	e267      	b.n	8005f02 <HAL_RCC_OscConfig+0x4e2>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005a32:	687b      	ldr	r3, [r7, #4]
 8005a34:	681b      	ldr	r3, [r3, #0]
 8005a36:	f003 0301 	and.w	r3, r3, #1
 8005a3a:	2b00      	cmp	r3, #0
 8005a3c:	d075      	beq.n	8005b2a <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8005a3e:	4b88      	ldr	r3, [pc, #544]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005a40:	689b      	ldr	r3, [r3, #8]
 8005a42:	f003 030c 	and.w	r3, r3, #12
 8005a46:	2b04      	cmp	r3, #4
 8005a48:	d00c      	beq.n	8005a64 <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005a4a:	4b85      	ldr	r3, [pc, #532]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005a4c:	689b      	ldr	r3, [r3, #8]
 8005a4e:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8005a52:	2b08      	cmp	r3, #8
 8005a54:	d112      	bne.n	8005a7c <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005a56:	4b82      	ldr	r3, [pc, #520]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005a58:	685b      	ldr	r3, [r3, #4]
 8005a5a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005a5e:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8005a62:	d10b      	bne.n	8005a7c <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005a64:	4b7e      	ldr	r3, [pc, #504]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005a66:	681b      	ldr	r3, [r3, #0]
 8005a68:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005a6c:	2b00      	cmp	r3, #0
 8005a6e:	d05b      	beq.n	8005b28 <HAL_RCC_OscConfig+0x108>
 8005a70:	687b      	ldr	r3, [r7, #4]
 8005a72:	685b      	ldr	r3, [r3, #4]
 8005a74:	2b00      	cmp	r3, #0
 8005a76:	d157      	bne.n	8005b28 <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 8005a78:	2301      	movs	r3, #1
 8005a7a:	e242      	b.n	8005f02 <HAL_RCC_OscConfig+0x4e2>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005a7c:	687b      	ldr	r3, [r7, #4]
 8005a7e:	685b      	ldr	r3, [r3, #4]
 8005a80:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005a84:	d106      	bne.n	8005a94 <HAL_RCC_OscConfig+0x74>
 8005a86:	4b76      	ldr	r3, [pc, #472]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005a88:	681b      	ldr	r3, [r3, #0]
 8005a8a:	4a75      	ldr	r2, [pc, #468]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005a8c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005a90:	6013      	str	r3, [r2, #0]
 8005a92:	e01d      	b.n	8005ad0 <HAL_RCC_OscConfig+0xb0>
 8005a94:	687b      	ldr	r3, [r7, #4]
 8005a96:	685b      	ldr	r3, [r3, #4]
 8005a98:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8005a9c:	d10c      	bne.n	8005ab8 <HAL_RCC_OscConfig+0x98>
 8005a9e:	4b70      	ldr	r3, [pc, #448]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005aa0:	681b      	ldr	r3, [r3, #0]
 8005aa2:	4a6f      	ldr	r2, [pc, #444]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005aa4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005aa8:	6013      	str	r3, [r2, #0]
 8005aaa:	4b6d      	ldr	r3, [pc, #436]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005aac:	681b      	ldr	r3, [r3, #0]
 8005aae:	4a6c      	ldr	r2, [pc, #432]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005ab0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005ab4:	6013      	str	r3, [r2, #0]
 8005ab6:	e00b      	b.n	8005ad0 <HAL_RCC_OscConfig+0xb0>
 8005ab8:	4b69      	ldr	r3, [pc, #420]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005aba:	681b      	ldr	r3, [r3, #0]
 8005abc:	4a68      	ldr	r2, [pc, #416]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005abe:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005ac2:	6013      	str	r3, [r2, #0]
 8005ac4:	4b66      	ldr	r3, [pc, #408]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005ac6:	681b      	ldr	r3, [r3, #0]
 8005ac8:	4a65      	ldr	r2, [pc, #404]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005aca:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8005ace:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005ad0:	687b      	ldr	r3, [r7, #4]
 8005ad2:	685b      	ldr	r3, [r3, #4]
 8005ad4:	2b00      	cmp	r3, #0
 8005ad6:	d013      	beq.n	8005b00 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005ad8:	f7fc ff82 	bl	80029e0 <HAL_GetTick>
 8005adc:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005ade:	e008      	b.n	8005af2 <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8005ae0:	f7fc ff7e 	bl	80029e0 <HAL_GetTick>
 8005ae4:	4602      	mov	r2, r0
 8005ae6:	693b      	ldr	r3, [r7, #16]
 8005ae8:	1ad3      	subs	r3, r2, r3
 8005aea:	2b64      	cmp	r3, #100	; 0x64
 8005aec:	d901      	bls.n	8005af2 <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 8005aee:	2303      	movs	r3, #3
 8005af0:	e207      	b.n	8005f02 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005af2:	4b5b      	ldr	r3, [pc, #364]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005af4:	681b      	ldr	r3, [r3, #0]
 8005af6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005afa:	2b00      	cmp	r3, #0
 8005afc:	d0f0      	beq.n	8005ae0 <HAL_RCC_OscConfig+0xc0>
 8005afe:	e014      	b.n	8005b2a <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005b00:	f7fc ff6e 	bl	80029e0 <HAL_GetTick>
 8005b04:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005b06:	e008      	b.n	8005b1a <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8005b08:	f7fc ff6a 	bl	80029e0 <HAL_GetTick>
 8005b0c:	4602      	mov	r2, r0
 8005b0e:	693b      	ldr	r3, [r7, #16]
 8005b10:	1ad3      	subs	r3, r2, r3
 8005b12:	2b64      	cmp	r3, #100	; 0x64
 8005b14:	d901      	bls.n	8005b1a <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8005b16:	2303      	movs	r3, #3
 8005b18:	e1f3      	b.n	8005f02 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005b1a:	4b51      	ldr	r3, [pc, #324]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005b1c:	681b      	ldr	r3, [r3, #0]
 8005b1e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005b22:	2b00      	cmp	r3, #0
 8005b24:	d1f0      	bne.n	8005b08 <HAL_RCC_OscConfig+0xe8>
 8005b26:	e000      	b.n	8005b2a <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005b28:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005b2a:	687b      	ldr	r3, [r7, #4]
 8005b2c:	681b      	ldr	r3, [r3, #0]
 8005b2e:	f003 0302 	and.w	r3, r3, #2
 8005b32:	2b00      	cmp	r3, #0
 8005b34:	d063      	beq.n	8005bfe <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8005b36:	4b4a      	ldr	r3, [pc, #296]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005b38:	689b      	ldr	r3, [r3, #8]
 8005b3a:	f003 030c 	and.w	r3, r3, #12
 8005b3e:	2b00      	cmp	r3, #0
 8005b40:	d00b      	beq.n	8005b5a <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005b42:	4b47      	ldr	r3, [pc, #284]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005b44:	689b      	ldr	r3, [r3, #8]
 8005b46:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8005b4a:	2b08      	cmp	r3, #8
 8005b4c:	d11c      	bne.n	8005b88 <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005b4e:	4b44      	ldr	r3, [pc, #272]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005b50:	685b      	ldr	r3, [r3, #4]
 8005b52:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005b56:	2b00      	cmp	r3, #0
 8005b58:	d116      	bne.n	8005b88 <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005b5a:	4b41      	ldr	r3, [pc, #260]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005b5c:	681b      	ldr	r3, [r3, #0]
 8005b5e:	f003 0302 	and.w	r3, r3, #2
 8005b62:	2b00      	cmp	r3, #0
 8005b64:	d005      	beq.n	8005b72 <HAL_RCC_OscConfig+0x152>
 8005b66:	687b      	ldr	r3, [r7, #4]
 8005b68:	68db      	ldr	r3, [r3, #12]
 8005b6a:	2b01      	cmp	r3, #1
 8005b6c:	d001      	beq.n	8005b72 <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 8005b6e:	2301      	movs	r3, #1
 8005b70:	e1c7      	b.n	8005f02 <HAL_RCC_OscConfig+0x4e2>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005b72:	4b3b      	ldr	r3, [pc, #236]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005b74:	681b      	ldr	r3, [r3, #0]
 8005b76:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8005b7a:	687b      	ldr	r3, [r7, #4]
 8005b7c:	691b      	ldr	r3, [r3, #16]
 8005b7e:	00db      	lsls	r3, r3, #3
 8005b80:	4937      	ldr	r1, [pc, #220]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005b82:	4313      	orrs	r3, r2
 8005b84:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005b86:	e03a      	b.n	8005bfe <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8005b88:	687b      	ldr	r3, [r7, #4]
 8005b8a:	68db      	ldr	r3, [r3, #12]
 8005b8c:	2b00      	cmp	r3, #0
 8005b8e:	d020      	beq.n	8005bd2 <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8005b90:	4b34      	ldr	r3, [pc, #208]	; (8005c64 <HAL_RCC_OscConfig+0x244>)
 8005b92:	2201      	movs	r2, #1
 8005b94:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005b96:	f7fc ff23 	bl	80029e0 <HAL_GetTick>
 8005b9a:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005b9c:	e008      	b.n	8005bb0 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8005b9e:	f7fc ff1f 	bl	80029e0 <HAL_GetTick>
 8005ba2:	4602      	mov	r2, r0
 8005ba4:	693b      	ldr	r3, [r7, #16]
 8005ba6:	1ad3      	subs	r3, r2, r3
 8005ba8:	2b02      	cmp	r3, #2
 8005baa:	d901      	bls.n	8005bb0 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8005bac:	2303      	movs	r3, #3
 8005bae:	e1a8      	b.n	8005f02 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005bb0:	4b2b      	ldr	r3, [pc, #172]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005bb2:	681b      	ldr	r3, [r3, #0]
 8005bb4:	f003 0302 	and.w	r3, r3, #2
 8005bb8:	2b00      	cmp	r3, #0
 8005bba:	d0f0      	beq.n	8005b9e <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005bbc:	4b28      	ldr	r3, [pc, #160]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005bbe:	681b      	ldr	r3, [r3, #0]
 8005bc0:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8005bc4:	687b      	ldr	r3, [r7, #4]
 8005bc6:	691b      	ldr	r3, [r3, #16]
 8005bc8:	00db      	lsls	r3, r3, #3
 8005bca:	4925      	ldr	r1, [pc, #148]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005bcc:	4313      	orrs	r3, r2
 8005bce:	600b      	str	r3, [r1, #0]
 8005bd0:	e015      	b.n	8005bfe <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8005bd2:	4b24      	ldr	r3, [pc, #144]	; (8005c64 <HAL_RCC_OscConfig+0x244>)
 8005bd4:	2200      	movs	r2, #0
 8005bd6:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005bd8:	f7fc ff02 	bl	80029e0 <HAL_GetTick>
 8005bdc:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005bde:	e008      	b.n	8005bf2 <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8005be0:	f7fc fefe 	bl	80029e0 <HAL_GetTick>
 8005be4:	4602      	mov	r2, r0
 8005be6:	693b      	ldr	r3, [r7, #16]
 8005be8:	1ad3      	subs	r3, r2, r3
 8005bea:	2b02      	cmp	r3, #2
 8005bec:	d901      	bls.n	8005bf2 <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 8005bee:	2303      	movs	r3, #3
 8005bf0:	e187      	b.n	8005f02 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005bf2:	4b1b      	ldr	r3, [pc, #108]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005bf4:	681b      	ldr	r3, [r3, #0]
 8005bf6:	f003 0302 	and.w	r3, r3, #2
 8005bfa:	2b00      	cmp	r3, #0
 8005bfc:	d1f0      	bne.n	8005be0 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005bfe:	687b      	ldr	r3, [r7, #4]
 8005c00:	681b      	ldr	r3, [r3, #0]
 8005c02:	f003 0308 	and.w	r3, r3, #8
 8005c06:	2b00      	cmp	r3, #0
 8005c08:	d036      	beq.n	8005c78 <HAL_RCC_OscConfig+0x258>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8005c0a:	687b      	ldr	r3, [r7, #4]
 8005c0c:	695b      	ldr	r3, [r3, #20]
 8005c0e:	2b00      	cmp	r3, #0
 8005c10:	d016      	beq.n	8005c40 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8005c12:	4b15      	ldr	r3, [pc, #84]	; (8005c68 <HAL_RCC_OscConfig+0x248>)
 8005c14:	2201      	movs	r2, #1
 8005c16:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005c18:	f7fc fee2 	bl	80029e0 <HAL_GetTick>
 8005c1c:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005c1e:	e008      	b.n	8005c32 <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8005c20:	f7fc fede 	bl	80029e0 <HAL_GetTick>
 8005c24:	4602      	mov	r2, r0
 8005c26:	693b      	ldr	r3, [r7, #16]
 8005c28:	1ad3      	subs	r3, r2, r3
 8005c2a:	2b02      	cmp	r3, #2
 8005c2c:	d901      	bls.n	8005c32 <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 8005c2e:	2303      	movs	r3, #3
 8005c30:	e167      	b.n	8005f02 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005c32:	4b0b      	ldr	r3, [pc, #44]	; (8005c60 <HAL_RCC_OscConfig+0x240>)
 8005c34:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005c36:	f003 0302 	and.w	r3, r3, #2
 8005c3a:	2b00      	cmp	r3, #0
 8005c3c:	d0f0      	beq.n	8005c20 <HAL_RCC_OscConfig+0x200>
 8005c3e:	e01b      	b.n	8005c78 <HAL_RCC_OscConfig+0x258>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8005c40:	4b09      	ldr	r3, [pc, #36]	; (8005c68 <HAL_RCC_OscConfig+0x248>)
 8005c42:	2200      	movs	r2, #0
 8005c44:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8005c46:	f7fc fecb 	bl	80029e0 <HAL_GetTick>
 8005c4a:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005c4c:	e00e      	b.n	8005c6c <HAL_RCC_OscConfig+0x24c>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8005c4e:	f7fc fec7 	bl	80029e0 <HAL_GetTick>
 8005c52:	4602      	mov	r2, r0
 8005c54:	693b      	ldr	r3, [r7, #16]
 8005c56:	1ad3      	subs	r3, r2, r3
 8005c58:	2b02      	cmp	r3, #2
 8005c5a:	d907      	bls.n	8005c6c <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 8005c5c:	2303      	movs	r3, #3
 8005c5e:	e150      	b.n	8005f02 <HAL_RCC_OscConfig+0x4e2>
 8005c60:	40023800 	.word	0x40023800
 8005c64:	42470000 	.word	0x42470000
 8005c68:	42470e80 	.word	0x42470e80
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005c6c:	4b88      	ldr	r3, [pc, #544]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005c6e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005c70:	f003 0302 	and.w	r3, r3, #2
 8005c74:	2b00      	cmp	r3, #0
 8005c76:	d1ea      	bne.n	8005c4e <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005c78:	687b      	ldr	r3, [r7, #4]
 8005c7a:	681b      	ldr	r3, [r3, #0]
 8005c7c:	f003 0304 	and.w	r3, r3, #4
 8005c80:	2b00      	cmp	r3, #0
 8005c82:	f000 8097 	beq.w	8005db4 <HAL_RCC_OscConfig+0x394>
  {
    FlagStatus       pwrclkchanged = RESET;
 8005c86:	2300      	movs	r3, #0
 8005c88:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005c8a:	4b81      	ldr	r3, [pc, #516]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005c8c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005c8e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005c92:	2b00      	cmp	r3, #0
 8005c94:	d10f      	bne.n	8005cb6 <HAL_RCC_OscConfig+0x296>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8005c96:	2300      	movs	r3, #0
 8005c98:	60bb      	str	r3, [r7, #8]
 8005c9a:	4b7d      	ldr	r3, [pc, #500]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005c9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005c9e:	4a7c      	ldr	r2, [pc, #496]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005ca0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005ca4:	6413      	str	r3, [r2, #64]	; 0x40
 8005ca6:	4b7a      	ldr	r3, [pc, #488]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005ca8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005caa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005cae:	60bb      	str	r3, [r7, #8]
 8005cb0:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8005cb2:	2301      	movs	r3, #1
 8005cb4:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005cb6:	4b77      	ldr	r3, [pc, #476]	; (8005e94 <HAL_RCC_OscConfig+0x474>)
 8005cb8:	681b      	ldr	r3, [r3, #0]
 8005cba:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005cbe:	2b00      	cmp	r3, #0
 8005cc0:	d118      	bne.n	8005cf4 <HAL_RCC_OscConfig+0x2d4>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8005cc2:	4b74      	ldr	r3, [pc, #464]	; (8005e94 <HAL_RCC_OscConfig+0x474>)
 8005cc4:	681b      	ldr	r3, [r3, #0]
 8005cc6:	4a73      	ldr	r2, [pc, #460]	; (8005e94 <HAL_RCC_OscConfig+0x474>)
 8005cc8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005ccc:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8005cce:	f7fc fe87 	bl	80029e0 <HAL_GetTick>
 8005cd2:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005cd4:	e008      	b.n	8005ce8 <HAL_RCC_OscConfig+0x2c8>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005cd6:	f7fc fe83 	bl	80029e0 <HAL_GetTick>
 8005cda:	4602      	mov	r2, r0
 8005cdc:	693b      	ldr	r3, [r7, #16]
 8005cde:	1ad3      	subs	r3, r2, r3
 8005ce0:	2b02      	cmp	r3, #2
 8005ce2:	d901      	bls.n	8005ce8 <HAL_RCC_OscConfig+0x2c8>
        {
          return HAL_TIMEOUT;
 8005ce4:	2303      	movs	r3, #3
 8005ce6:	e10c      	b.n	8005f02 <HAL_RCC_OscConfig+0x4e2>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005ce8:	4b6a      	ldr	r3, [pc, #424]	; (8005e94 <HAL_RCC_OscConfig+0x474>)
 8005cea:	681b      	ldr	r3, [r3, #0]
 8005cec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005cf0:	2b00      	cmp	r3, #0
 8005cf2:	d0f0      	beq.n	8005cd6 <HAL_RCC_OscConfig+0x2b6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005cf4:	687b      	ldr	r3, [r7, #4]
 8005cf6:	689b      	ldr	r3, [r3, #8]
 8005cf8:	2b01      	cmp	r3, #1
 8005cfa:	d106      	bne.n	8005d0a <HAL_RCC_OscConfig+0x2ea>
 8005cfc:	4b64      	ldr	r3, [pc, #400]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005cfe:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005d00:	4a63      	ldr	r2, [pc, #396]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005d02:	f043 0301 	orr.w	r3, r3, #1
 8005d06:	6713      	str	r3, [r2, #112]	; 0x70
 8005d08:	e01c      	b.n	8005d44 <HAL_RCC_OscConfig+0x324>
 8005d0a:	687b      	ldr	r3, [r7, #4]
 8005d0c:	689b      	ldr	r3, [r3, #8]
 8005d0e:	2b05      	cmp	r3, #5
 8005d10:	d10c      	bne.n	8005d2c <HAL_RCC_OscConfig+0x30c>
 8005d12:	4b5f      	ldr	r3, [pc, #380]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005d14:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005d16:	4a5e      	ldr	r2, [pc, #376]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005d18:	f043 0304 	orr.w	r3, r3, #4
 8005d1c:	6713      	str	r3, [r2, #112]	; 0x70
 8005d1e:	4b5c      	ldr	r3, [pc, #368]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005d20:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005d22:	4a5b      	ldr	r2, [pc, #364]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005d24:	f043 0301 	orr.w	r3, r3, #1
 8005d28:	6713      	str	r3, [r2, #112]	; 0x70
 8005d2a:	e00b      	b.n	8005d44 <HAL_RCC_OscConfig+0x324>
 8005d2c:	4b58      	ldr	r3, [pc, #352]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005d2e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005d30:	4a57      	ldr	r2, [pc, #348]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005d32:	f023 0301 	bic.w	r3, r3, #1
 8005d36:	6713      	str	r3, [r2, #112]	; 0x70
 8005d38:	4b55      	ldr	r3, [pc, #340]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005d3a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005d3c:	4a54      	ldr	r2, [pc, #336]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005d3e:	f023 0304 	bic.w	r3, r3, #4
 8005d42:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005d44:	687b      	ldr	r3, [r7, #4]
 8005d46:	689b      	ldr	r3, [r3, #8]
 8005d48:	2b00      	cmp	r3, #0
 8005d4a:	d015      	beq.n	8005d78 <HAL_RCC_OscConfig+0x358>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005d4c:	f7fc fe48 	bl	80029e0 <HAL_GetTick>
 8005d50:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005d52:	e00a      	b.n	8005d6a <HAL_RCC_OscConfig+0x34a>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005d54:	f7fc fe44 	bl	80029e0 <HAL_GetTick>
 8005d58:	4602      	mov	r2, r0
 8005d5a:	693b      	ldr	r3, [r7, #16]
 8005d5c:	1ad3      	subs	r3, r2, r3
 8005d5e:	f241 3288 	movw	r2, #5000	; 0x1388
 8005d62:	4293      	cmp	r3, r2
 8005d64:	d901      	bls.n	8005d6a <HAL_RCC_OscConfig+0x34a>
        {
          return HAL_TIMEOUT;
 8005d66:	2303      	movs	r3, #3
 8005d68:	e0cb      	b.n	8005f02 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005d6a:	4b49      	ldr	r3, [pc, #292]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005d6c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005d6e:	f003 0302 	and.w	r3, r3, #2
 8005d72:	2b00      	cmp	r3, #0
 8005d74:	d0ee      	beq.n	8005d54 <HAL_RCC_OscConfig+0x334>
 8005d76:	e014      	b.n	8005da2 <HAL_RCC_OscConfig+0x382>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8005d78:	f7fc fe32 	bl	80029e0 <HAL_GetTick>
 8005d7c:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005d7e:	e00a      	b.n	8005d96 <HAL_RCC_OscConfig+0x376>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005d80:	f7fc fe2e 	bl	80029e0 <HAL_GetTick>
 8005d84:	4602      	mov	r2, r0
 8005d86:	693b      	ldr	r3, [r7, #16]
 8005d88:	1ad3      	subs	r3, r2, r3
 8005d8a:	f241 3288 	movw	r2, #5000	; 0x1388
 8005d8e:	4293      	cmp	r3, r2
 8005d90:	d901      	bls.n	8005d96 <HAL_RCC_OscConfig+0x376>
        {
          return HAL_TIMEOUT;
 8005d92:	2303      	movs	r3, #3
 8005d94:	e0b5      	b.n	8005f02 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005d96:	4b3e      	ldr	r3, [pc, #248]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005d98:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005d9a:	f003 0302 	and.w	r3, r3, #2
 8005d9e:	2b00      	cmp	r3, #0
 8005da0:	d1ee      	bne.n	8005d80 <HAL_RCC_OscConfig+0x360>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8005da2:	7dfb      	ldrb	r3, [r7, #23]
 8005da4:	2b01      	cmp	r3, #1
 8005da6:	d105      	bne.n	8005db4 <HAL_RCC_OscConfig+0x394>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8005da8:	4b39      	ldr	r3, [pc, #228]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005daa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005dac:	4a38      	ldr	r2, [pc, #224]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005dae:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005db2:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005db4:	687b      	ldr	r3, [r7, #4]
 8005db6:	699b      	ldr	r3, [r3, #24]
 8005db8:	2b00      	cmp	r3, #0
 8005dba:	f000 80a1 	beq.w	8005f00 <HAL_RCC_OscConfig+0x4e0>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8005dbe:	4b34      	ldr	r3, [pc, #208]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005dc0:	689b      	ldr	r3, [r3, #8]
 8005dc2:	f003 030c 	and.w	r3, r3, #12
 8005dc6:	2b08      	cmp	r3, #8
 8005dc8:	d05c      	beq.n	8005e84 <HAL_RCC_OscConfig+0x464>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005dca:	687b      	ldr	r3, [r7, #4]
 8005dcc:	699b      	ldr	r3, [r3, #24]
 8005dce:	2b02      	cmp	r3, #2
 8005dd0:	d141      	bne.n	8005e56 <HAL_RCC_OscConfig+0x436>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005dd2:	4b31      	ldr	r3, [pc, #196]	; (8005e98 <HAL_RCC_OscConfig+0x478>)
 8005dd4:	2200      	movs	r2, #0
 8005dd6:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005dd8:	f7fc fe02 	bl	80029e0 <HAL_GetTick>
 8005ddc:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005dde:	e008      	b.n	8005df2 <HAL_RCC_OscConfig+0x3d2>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005de0:	f7fc fdfe 	bl	80029e0 <HAL_GetTick>
 8005de4:	4602      	mov	r2, r0
 8005de6:	693b      	ldr	r3, [r7, #16]
 8005de8:	1ad3      	subs	r3, r2, r3
 8005dea:	2b02      	cmp	r3, #2
 8005dec:	d901      	bls.n	8005df2 <HAL_RCC_OscConfig+0x3d2>
          {
            return HAL_TIMEOUT;
 8005dee:	2303      	movs	r3, #3
 8005df0:	e087      	b.n	8005f02 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005df2:	4b27      	ldr	r3, [pc, #156]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005df4:	681b      	ldr	r3, [r3, #0]
 8005df6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005dfa:	2b00      	cmp	r3, #0
 8005dfc:	d1f0      	bne.n	8005de0 <HAL_RCC_OscConfig+0x3c0>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8005dfe:	687b      	ldr	r3, [r7, #4]
 8005e00:	69da      	ldr	r2, [r3, #28]
 8005e02:	687b      	ldr	r3, [r7, #4]
 8005e04:	6a1b      	ldr	r3, [r3, #32]
 8005e06:	431a      	orrs	r2, r3
 8005e08:	687b      	ldr	r3, [r7, #4]
 8005e0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e0c:	019b      	lsls	r3, r3, #6
 8005e0e:	431a      	orrs	r2, r3
 8005e10:	687b      	ldr	r3, [r7, #4]
 8005e12:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005e14:	085b      	lsrs	r3, r3, #1
 8005e16:	3b01      	subs	r3, #1
 8005e18:	041b      	lsls	r3, r3, #16
 8005e1a:	431a      	orrs	r2, r3
 8005e1c:	687b      	ldr	r3, [r7, #4]
 8005e1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005e20:	061b      	lsls	r3, r3, #24
 8005e22:	491b      	ldr	r1, [pc, #108]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005e24:	4313      	orrs	r3, r2
 8005e26:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8005e28:	4b1b      	ldr	r3, [pc, #108]	; (8005e98 <HAL_RCC_OscConfig+0x478>)
 8005e2a:	2201      	movs	r2, #1
 8005e2c:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005e2e:	f7fc fdd7 	bl	80029e0 <HAL_GetTick>
 8005e32:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005e34:	e008      	b.n	8005e48 <HAL_RCC_OscConfig+0x428>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005e36:	f7fc fdd3 	bl	80029e0 <HAL_GetTick>
 8005e3a:	4602      	mov	r2, r0
 8005e3c:	693b      	ldr	r3, [r7, #16]
 8005e3e:	1ad3      	subs	r3, r2, r3
 8005e40:	2b02      	cmp	r3, #2
 8005e42:	d901      	bls.n	8005e48 <HAL_RCC_OscConfig+0x428>
          {
            return HAL_TIMEOUT;
 8005e44:	2303      	movs	r3, #3
 8005e46:	e05c      	b.n	8005f02 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005e48:	4b11      	ldr	r3, [pc, #68]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005e4a:	681b      	ldr	r3, [r3, #0]
 8005e4c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005e50:	2b00      	cmp	r3, #0
 8005e52:	d0f0      	beq.n	8005e36 <HAL_RCC_OscConfig+0x416>
 8005e54:	e054      	b.n	8005f00 <HAL_RCC_OscConfig+0x4e0>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005e56:	4b10      	ldr	r3, [pc, #64]	; (8005e98 <HAL_RCC_OscConfig+0x478>)
 8005e58:	2200      	movs	r2, #0
 8005e5a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005e5c:	f7fc fdc0 	bl	80029e0 <HAL_GetTick>
 8005e60:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005e62:	e008      	b.n	8005e76 <HAL_RCC_OscConfig+0x456>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005e64:	f7fc fdbc 	bl	80029e0 <HAL_GetTick>
 8005e68:	4602      	mov	r2, r0
 8005e6a:	693b      	ldr	r3, [r7, #16]
 8005e6c:	1ad3      	subs	r3, r2, r3
 8005e6e:	2b02      	cmp	r3, #2
 8005e70:	d901      	bls.n	8005e76 <HAL_RCC_OscConfig+0x456>
          {
            return HAL_TIMEOUT;
 8005e72:	2303      	movs	r3, #3
 8005e74:	e045      	b.n	8005f02 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005e76:	4b06      	ldr	r3, [pc, #24]	; (8005e90 <HAL_RCC_OscConfig+0x470>)
 8005e78:	681b      	ldr	r3, [r3, #0]
 8005e7a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005e7e:	2b00      	cmp	r3, #0
 8005e80:	d1f0      	bne.n	8005e64 <HAL_RCC_OscConfig+0x444>
 8005e82:	e03d      	b.n	8005f00 <HAL_RCC_OscConfig+0x4e0>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8005e84:	687b      	ldr	r3, [r7, #4]
 8005e86:	699b      	ldr	r3, [r3, #24]
 8005e88:	2b01      	cmp	r3, #1
 8005e8a:	d107      	bne.n	8005e9c <HAL_RCC_OscConfig+0x47c>
      {
        return HAL_ERROR;
 8005e8c:	2301      	movs	r3, #1
 8005e8e:	e038      	b.n	8005f02 <HAL_RCC_OscConfig+0x4e2>
 8005e90:	40023800 	.word	0x40023800
 8005e94:	40007000 	.word	0x40007000
 8005e98:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8005e9c:	4b1b      	ldr	r3, [pc, #108]	; (8005f0c <HAL_RCC_OscConfig+0x4ec>)
 8005e9e:	685b      	ldr	r3, [r3, #4]
 8005ea0:	60fb      	str	r3, [r7, #12]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005ea2:	687b      	ldr	r3, [r7, #4]
 8005ea4:	699b      	ldr	r3, [r3, #24]
 8005ea6:	2b01      	cmp	r3, #1
 8005ea8:	d028      	beq.n	8005efc <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005eaa:	68fb      	ldr	r3, [r7, #12]
 8005eac:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8005eb0:	687b      	ldr	r3, [r7, #4]
 8005eb2:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005eb4:	429a      	cmp	r2, r3
 8005eb6:	d121      	bne.n	8005efc <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005eb8:	68fb      	ldr	r3, [r7, #12]
 8005eba:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8005ebe:	687b      	ldr	r3, [r7, #4]
 8005ec0:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005ec2:	429a      	cmp	r2, r3
 8005ec4:	d11a      	bne.n	8005efc <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005ec6:	68fa      	ldr	r2, [r7, #12]
 8005ec8:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8005ecc:	4013      	ands	r3, r2
 8005ece:	687a      	ldr	r2, [r7, #4]
 8005ed0:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8005ed2:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005ed4:	4293      	cmp	r3, r2
 8005ed6:	d111      	bne.n	8005efc <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005ed8:	68fb      	ldr	r3, [r7, #12]
 8005eda:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8005ede:	687b      	ldr	r3, [r7, #4]
 8005ee0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005ee2:	085b      	lsrs	r3, r3, #1
 8005ee4:	3b01      	subs	r3, #1
 8005ee6:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005ee8:	429a      	cmp	r2, r3
 8005eea:	d107      	bne.n	8005efc <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8005eec:	68fb      	ldr	r3, [r7, #12]
 8005eee:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8005ef2:	687b      	ldr	r3, [r7, #4]
 8005ef4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005ef6:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005ef8:	429a      	cmp	r2, r3
 8005efa:	d001      	beq.n	8005f00 <HAL_RCC_OscConfig+0x4e0>
#endif
        {
          return HAL_ERROR;
 8005efc:	2301      	movs	r3, #1
 8005efe:	e000      	b.n	8005f02 <HAL_RCC_OscConfig+0x4e2>
        }
      }
    }
  }
  return HAL_OK;
 8005f00:	2300      	movs	r3, #0
}
 8005f02:	4618      	mov	r0, r3
 8005f04:	3718      	adds	r7, #24
 8005f06:	46bd      	mov	sp, r7
 8005f08:	bd80      	pop	{r7, pc}
 8005f0a:	bf00      	nop
 8005f0c:	40023800 	.word	0x40023800

08005f10 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8005f10:	b580      	push	{r7, lr}
 8005f12:	b084      	sub	sp, #16
 8005f14:	af00      	add	r7, sp, #0
 8005f16:	6078      	str	r0, [r7, #4]
 8005f18:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8005f1a:	687b      	ldr	r3, [r7, #4]
 8005f1c:	2b00      	cmp	r3, #0
 8005f1e:	d101      	bne.n	8005f24 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8005f20:	2301      	movs	r3, #1
 8005f22:	e0cc      	b.n	80060be <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8005f24:	4b68      	ldr	r3, [pc, #416]	; (80060c8 <HAL_RCC_ClockConfig+0x1b8>)
 8005f26:	681b      	ldr	r3, [r3, #0]
 8005f28:	f003 030f 	and.w	r3, r3, #15
 8005f2c:	683a      	ldr	r2, [r7, #0]
 8005f2e:	429a      	cmp	r2, r3
 8005f30:	d90c      	bls.n	8005f4c <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005f32:	4b65      	ldr	r3, [pc, #404]	; (80060c8 <HAL_RCC_ClockConfig+0x1b8>)
 8005f34:	683a      	ldr	r2, [r7, #0]
 8005f36:	b2d2      	uxtb	r2, r2
 8005f38:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005f3a:	4b63      	ldr	r3, [pc, #396]	; (80060c8 <HAL_RCC_ClockConfig+0x1b8>)
 8005f3c:	681b      	ldr	r3, [r3, #0]
 8005f3e:	f003 030f 	and.w	r3, r3, #15
 8005f42:	683a      	ldr	r2, [r7, #0]
 8005f44:	429a      	cmp	r2, r3
 8005f46:	d001      	beq.n	8005f4c <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 8005f48:	2301      	movs	r3, #1
 8005f4a:	e0b8      	b.n	80060be <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005f4c:	687b      	ldr	r3, [r7, #4]
 8005f4e:	681b      	ldr	r3, [r3, #0]
 8005f50:	f003 0302 	and.w	r3, r3, #2
 8005f54:	2b00      	cmp	r3, #0
 8005f56:	d020      	beq.n	8005f9a <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005f58:	687b      	ldr	r3, [r7, #4]
 8005f5a:	681b      	ldr	r3, [r3, #0]
 8005f5c:	f003 0304 	and.w	r3, r3, #4
 8005f60:	2b00      	cmp	r3, #0
 8005f62:	d005      	beq.n	8005f70 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005f64:	4b59      	ldr	r3, [pc, #356]	; (80060cc <HAL_RCC_ClockConfig+0x1bc>)
 8005f66:	689b      	ldr	r3, [r3, #8]
 8005f68:	4a58      	ldr	r2, [pc, #352]	; (80060cc <HAL_RCC_ClockConfig+0x1bc>)
 8005f6a:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8005f6e:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005f70:	687b      	ldr	r3, [r7, #4]
 8005f72:	681b      	ldr	r3, [r3, #0]
 8005f74:	f003 0308 	and.w	r3, r3, #8
 8005f78:	2b00      	cmp	r3, #0
 8005f7a:	d005      	beq.n	8005f88 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005f7c:	4b53      	ldr	r3, [pc, #332]	; (80060cc <HAL_RCC_ClockConfig+0x1bc>)
 8005f7e:	689b      	ldr	r3, [r3, #8]
 8005f80:	4a52      	ldr	r2, [pc, #328]	; (80060cc <HAL_RCC_ClockConfig+0x1bc>)
 8005f82:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8005f86:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005f88:	4b50      	ldr	r3, [pc, #320]	; (80060cc <HAL_RCC_ClockConfig+0x1bc>)
 8005f8a:	689b      	ldr	r3, [r3, #8]
 8005f8c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8005f90:	687b      	ldr	r3, [r7, #4]
 8005f92:	689b      	ldr	r3, [r3, #8]
 8005f94:	494d      	ldr	r1, [pc, #308]	; (80060cc <HAL_RCC_ClockConfig+0x1bc>)
 8005f96:	4313      	orrs	r3, r2
 8005f98:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005f9a:	687b      	ldr	r3, [r7, #4]
 8005f9c:	681b      	ldr	r3, [r3, #0]
 8005f9e:	f003 0301 	and.w	r3, r3, #1
 8005fa2:	2b00      	cmp	r3, #0
 8005fa4:	d044      	beq.n	8006030 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005fa6:	687b      	ldr	r3, [r7, #4]
 8005fa8:	685b      	ldr	r3, [r3, #4]
 8005faa:	2b01      	cmp	r3, #1
 8005fac:	d107      	bne.n	8005fbe <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005fae:	4b47      	ldr	r3, [pc, #284]	; (80060cc <HAL_RCC_ClockConfig+0x1bc>)
 8005fb0:	681b      	ldr	r3, [r3, #0]
 8005fb2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005fb6:	2b00      	cmp	r3, #0
 8005fb8:	d119      	bne.n	8005fee <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8005fba:	2301      	movs	r3, #1
 8005fbc:	e07f      	b.n	80060be <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005fbe:	687b      	ldr	r3, [r7, #4]
 8005fc0:	685b      	ldr	r3, [r3, #4]
 8005fc2:	2b02      	cmp	r3, #2
 8005fc4:	d003      	beq.n	8005fce <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 8005fc6:	687b      	ldr	r3, [r7, #4]
 8005fc8:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005fca:	2b03      	cmp	r3, #3
 8005fcc:	d107      	bne.n	8005fde <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005fce:	4b3f      	ldr	r3, [pc, #252]	; (80060cc <HAL_RCC_ClockConfig+0x1bc>)
 8005fd0:	681b      	ldr	r3, [r3, #0]
 8005fd2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005fd6:	2b00      	cmp	r3, #0
 8005fd8:	d109      	bne.n	8005fee <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8005fda:	2301      	movs	r3, #1
 8005fdc:	e06f      	b.n	80060be <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005fde:	4b3b      	ldr	r3, [pc, #236]	; (80060cc <HAL_RCC_ClockConfig+0x1bc>)
 8005fe0:	681b      	ldr	r3, [r3, #0]
 8005fe2:	f003 0302 	and.w	r3, r3, #2
 8005fe6:	2b00      	cmp	r3, #0
 8005fe8:	d101      	bne.n	8005fee <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8005fea:	2301      	movs	r3, #1
 8005fec:	e067      	b.n	80060be <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005fee:	4b37      	ldr	r3, [pc, #220]	; (80060cc <HAL_RCC_ClockConfig+0x1bc>)
 8005ff0:	689b      	ldr	r3, [r3, #8]
 8005ff2:	f023 0203 	bic.w	r2, r3, #3
 8005ff6:	687b      	ldr	r3, [r7, #4]
 8005ff8:	685b      	ldr	r3, [r3, #4]
 8005ffa:	4934      	ldr	r1, [pc, #208]	; (80060cc <HAL_RCC_ClockConfig+0x1bc>)
 8005ffc:	4313      	orrs	r3, r2
 8005ffe:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8006000:	f7fc fcee 	bl	80029e0 <HAL_GetTick>
 8006004:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006006:	e00a      	b.n	800601e <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006008:	f7fc fcea 	bl	80029e0 <HAL_GetTick>
 800600c:	4602      	mov	r2, r0
 800600e:	68fb      	ldr	r3, [r7, #12]
 8006010:	1ad3      	subs	r3, r2, r3
 8006012:	f241 3288 	movw	r2, #5000	; 0x1388
 8006016:	4293      	cmp	r3, r2
 8006018:	d901      	bls.n	800601e <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 800601a:	2303      	movs	r3, #3
 800601c:	e04f      	b.n	80060be <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800601e:	4b2b      	ldr	r3, [pc, #172]	; (80060cc <HAL_RCC_ClockConfig+0x1bc>)
 8006020:	689b      	ldr	r3, [r3, #8]
 8006022:	f003 020c 	and.w	r2, r3, #12
 8006026:	687b      	ldr	r3, [r7, #4]
 8006028:	685b      	ldr	r3, [r3, #4]
 800602a:	009b      	lsls	r3, r3, #2
 800602c:	429a      	cmp	r2, r3
 800602e:	d1eb      	bne.n	8006008 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8006030:	4b25      	ldr	r3, [pc, #148]	; (80060c8 <HAL_RCC_ClockConfig+0x1b8>)
 8006032:	681b      	ldr	r3, [r3, #0]
 8006034:	f003 030f 	and.w	r3, r3, #15
 8006038:	683a      	ldr	r2, [r7, #0]
 800603a:	429a      	cmp	r2, r3
 800603c:	d20c      	bcs.n	8006058 <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800603e:	4b22      	ldr	r3, [pc, #136]	; (80060c8 <HAL_RCC_ClockConfig+0x1b8>)
 8006040:	683a      	ldr	r2, [r7, #0]
 8006042:	b2d2      	uxtb	r2, r2
 8006044:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006046:	4b20      	ldr	r3, [pc, #128]	; (80060c8 <HAL_RCC_ClockConfig+0x1b8>)
 8006048:	681b      	ldr	r3, [r3, #0]
 800604a:	f003 030f 	and.w	r3, r3, #15
 800604e:	683a      	ldr	r2, [r7, #0]
 8006050:	429a      	cmp	r2, r3
 8006052:	d001      	beq.n	8006058 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8006054:	2301      	movs	r3, #1
 8006056:	e032      	b.n	80060be <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006058:	687b      	ldr	r3, [r7, #4]
 800605a:	681b      	ldr	r3, [r3, #0]
 800605c:	f003 0304 	and.w	r3, r3, #4
 8006060:	2b00      	cmp	r3, #0
 8006062:	d008      	beq.n	8006076 <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8006064:	4b19      	ldr	r3, [pc, #100]	; (80060cc <HAL_RCC_ClockConfig+0x1bc>)
 8006066:	689b      	ldr	r3, [r3, #8]
 8006068:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 800606c:	687b      	ldr	r3, [r7, #4]
 800606e:	68db      	ldr	r3, [r3, #12]
 8006070:	4916      	ldr	r1, [pc, #88]	; (80060cc <HAL_RCC_ClockConfig+0x1bc>)
 8006072:	4313      	orrs	r3, r2
 8006074:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006076:	687b      	ldr	r3, [r7, #4]
 8006078:	681b      	ldr	r3, [r3, #0]
 800607a:	f003 0308 	and.w	r3, r3, #8
 800607e:	2b00      	cmp	r3, #0
 8006080:	d009      	beq.n	8006096 <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8006082:	4b12      	ldr	r3, [pc, #72]	; (80060cc <HAL_RCC_ClockConfig+0x1bc>)
 8006084:	689b      	ldr	r3, [r3, #8]
 8006086:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 800608a:	687b      	ldr	r3, [r7, #4]
 800608c:	691b      	ldr	r3, [r3, #16]
 800608e:	00db      	lsls	r3, r3, #3
 8006090:	490e      	ldr	r1, [pc, #56]	; (80060cc <HAL_RCC_ClockConfig+0x1bc>)
 8006092:	4313      	orrs	r3, r2
 8006094:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8006096:	f000 f821 	bl	80060dc <HAL_RCC_GetSysClockFreq>
 800609a:	4602      	mov	r2, r0
 800609c:	4b0b      	ldr	r3, [pc, #44]	; (80060cc <HAL_RCC_ClockConfig+0x1bc>)
 800609e:	689b      	ldr	r3, [r3, #8]
 80060a0:	091b      	lsrs	r3, r3, #4
 80060a2:	f003 030f 	and.w	r3, r3, #15
 80060a6:	490a      	ldr	r1, [pc, #40]	; (80060d0 <HAL_RCC_ClockConfig+0x1c0>)
 80060a8:	5ccb      	ldrb	r3, [r1, r3]
 80060aa:	fa22 f303 	lsr.w	r3, r2, r3
 80060ae:	4a09      	ldr	r2, [pc, #36]	; (80060d4 <HAL_RCC_ClockConfig+0x1c4>)
 80060b0:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 80060b2:	4b09      	ldr	r3, [pc, #36]	; (80060d8 <HAL_RCC_ClockConfig+0x1c8>)
 80060b4:	681b      	ldr	r3, [r3, #0]
 80060b6:	4618      	mov	r0, r3
 80060b8:	f7fc f934 	bl	8002324 <HAL_InitTick>

  return HAL_OK;
 80060bc:	2300      	movs	r3, #0
}
 80060be:	4618      	mov	r0, r3
 80060c0:	3710      	adds	r7, #16
 80060c2:	46bd      	mov	sp, r7
 80060c4:	bd80      	pop	{r7, pc}
 80060c6:	bf00      	nop
 80060c8:	40023c00 	.word	0x40023c00
 80060cc:	40023800 	.word	0x40023800
 80060d0:	0802b1fc 	.word	0x0802b1fc
 80060d4:	20000030 	.word	0x20000030
 80060d8:	20000034 	.word	0x20000034

080060dc <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80060dc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80060e0:	b094      	sub	sp, #80	; 0x50
 80060e2:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 80060e4:	2300      	movs	r3, #0
 80060e6:	647b      	str	r3, [r7, #68]	; 0x44
 80060e8:	2300      	movs	r3, #0
 80060ea:	64fb      	str	r3, [r7, #76]	; 0x4c
 80060ec:	2300      	movs	r3, #0
 80060ee:	643b      	str	r3, [r7, #64]	; 0x40
  uint32_t sysclockfreq = 0U;
 80060f0:	2300      	movs	r3, #0
 80060f2:	64bb      	str	r3, [r7, #72]	; 0x48

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80060f4:	4b79      	ldr	r3, [pc, #484]	; (80062dc <HAL_RCC_GetSysClockFreq+0x200>)
 80060f6:	689b      	ldr	r3, [r3, #8]
 80060f8:	f003 030c 	and.w	r3, r3, #12
 80060fc:	2b08      	cmp	r3, #8
 80060fe:	d00d      	beq.n	800611c <HAL_RCC_GetSysClockFreq+0x40>
 8006100:	2b08      	cmp	r3, #8
 8006102:	f200 80e1 	bhi.w	80062c8 <HAL_RCC_GetSysClockFreq+0x1ec>
 8006106:	2b00      	cmp	r3, #0
 8006108:	d002      	beq.n	8006110 <HAL_RCC_GetSysClockFreq+0x34>
 800610a:	2b04      	cmp	r3, #4
 800610c:	d003      	beq.n	8006116 <HAL_RCC_GetSysClockFreq+0x3a>
 800610e:	e0db      	b.n	80062c8 <HAL_RCC_GetSysClockFreq+0x1ec>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8006110:	4b73      	ldr	r3, [pc, #460]	; (80062e0 <HAL_RCC_GetSysClockFreq+0x204>)
 8006112:	64bb      	str	r3, [r7, #72]	; 0x48
       break;
 8006114:	e0db      	b.n	80062ce <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8006116:	4b73      	ldr	r3, [pc, #460]	; (80062e4 <HAL_RCC_GetSysClockFreq+0x208>)
 8006118:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 800611a:	e0d8      	b.n	80062ce <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800611c:	4b6f      	ldr	r3, [pc, #444]	; (80062dc <HAL_RCC_GetSysClockFreq+0x200>)
 800611e:	685b      	ldr	r3, [r3, #4]
 8006120:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8006124:	647b      	str	r3, [r7, #68]	; 0x44
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006126:	4b6d      	ldr	r3, [pc, #436]	; (80062dc <HAL_RCC_GetSysClockFreq+0x200>)
 8006128:	685b      	ldr	r3, [r3, #4]
 800612a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800612e:	2b00      	cmp	r3, #0
 8006130:	d063      	beq.n	80061fa <HAL_RCC_GetSysClockFreq+0x11e>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006132:	4b6a      	ldr	r3, [pc, #424]	; (80062dc <HAL_RCC_GetSysClockFreq+0x200>)
 8006134:	685b      	ldr	r3, [r3, #4]
 8006136:	099b      	lsrs	r3, r3, #6
 8006138:	2200      	movs	r2, #0
 800613a:	63bb      	str	r3, [r7, #56]	; 0x38
 800613c:	63fa      	str	r2, [r7, #60]	; 0x3c
 800613e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006140:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006144:	633b      	str	r3, [r7, #48]	; 0x30
 8006146:	2300      	movs	r3, #0
 8006148:	637b      	str	r3, [r7, #52]	; 0x34
 800614a:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 800614e:	4622      	mov	r2, r4
 8006150:	462b      	mov	r3, r5
 8006152:	f04f 0000 	mov.w	r0, #0
 8006156:	f04f 0100 	mov.w	r1, #0
 800615a:	0159      	lsls	r1, r3, #5
 800615c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8006160:	0150      	lsls	r0, r2, #5
 8006162:	4602      	mov	r2, r0
 8006164:	460b      	mov	r3, r1
 8006166:	4621      	mov	r1, r4
 8006168:	1a51      	subs	r1, r2, r1
 800616a:	6139      	str	r1, [r7, #16]
 800616c:	4629      	mov	r1, r5
 800616e:	eb63 0301 	sbc.w	r3, r3, r1
 8006172:	617b      	str	r3, [r7, #20]
 8006174:	f04f 0200 	mov.w	r2, #0
 8006178:	f04f 0300 	mov.w	r3, #0
 800617c:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8006180:	4659      	mov	r1, fp
 8006182:	018b      	lsls	r3, r1, #6
 8006184:	4651      	mov	r1, sl
 8006186:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800618a:	4651      	mov	r1, sl
 800618c:	018a      	lsls	r2, r1, #6
 800618e:	4651      	mov	r1, sl
 8006190:	ebb2 0801 	subs.w	r8, r2, r1
 8006194:	4659      	mov	r1, fp
 8006196:	eb63 0901 	sbc.w	r9, r3, r1
 800619a:	f04f 0200 	mov.w	r2, #0
 800619e:	f04f 0300 	mov.w	r3, #0
 80061a2:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80061a6:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80061aa:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80061ae:	4690      	mov	r8, r2
 80061b0:	4699      	mov	r9, r3
 80061b2:	4623      	mov	r3, r4
 80061b4:	eb18 0303 	adds.w	r3, r8, r3
 80061b8:	60bb      	str	r3, [r7, #8]
 80061ba:	462b      	mov	r3, r5
 80061bc:	eb49 0303 	adc.w	r3, r9, r3
 80061c0:	60fb      	str	r3, [r7, #12]
 80061c2:	f04f 0200 	mov.w	r2, #0
 80061c6:	f04f 0300 	mov.w	r3, #0
 80061ca:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 80061ce:	4629      	mov	r1, r5
 80061d0:	024b      	lsls	r3, r1, #9
 80061d2:	4621      	mov	r1, r4
 80061d4:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80061d8:	4621      	mov	r1, r4
 80061da:	024a      	lsls	r2, r1, #9
 80061dc:	4610      	mov	r0, r2
 80061de:	4619      	mov	r1, r3
 80061e0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80061e2:	2200      	movs	r2, #0
 80061e4:	62bb      	str	r3, [r7, #40]	; 0x28
 80061e6:	62fa      	str	r2, [r7, #44]	; 0x2c
 80061e8:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 80061ec:	f7fa f850 	bl	8000290 <__aeabi_uldivmod>
 80061f0:	4602      	mov	r2, r0
 80061f2:	460b      	mov	r3, r1
 80061f4:	4613      	mov	r3, r2
 80061f6:	64fb      	str	r3, [r7, #76]	; 0x4c
 80061f8:	e058      	b.n	80062ac <HAL_RCC_GetSysClockFreq+0x1d0>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80061fa:	4b38      	ldr	r3, [pc, #224]	; (80062dc <HAL_RCC_GetSysClockFreq+0x200>)
 80061fc:	685b      	ldr	r3, [r3, #4]
 80061fe:	099b      	lsrs	r3, r3, #6
 8006200:	2200      	movs	r2, #0
 8006202:	4618      	mov	r0, r3
 8006204:	4611      	mov	r1, r2
 8006206:	f3c0 0308 	ubfx	r3, r0, #0, #9
 800620a:	623b      	str	r3, [r7, #32]
 800620c:	2300      	movs	r3, #0
 800620e:	627b      	str	r3, [r7, #36]	; 0x24
 8006210:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8006214:	4642      	mov	r2, r8
 8006216:	464b      	mov	r3, r9
 8006218:	f04f 0000 	mov.w	r0, #0
 800621c:	f04f 0100 	mov.w	r1, #0
 8006220:	0159      	lsls	r1, r3, #5
 8006222:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8006226:	0150      	lsls	r0, r2, #5
 8006228:	4602      	mov	r2, r0
 800622a:	460b      	mov	r3, r1
 800622c:	4641      	mov	r1, r8
 800622e:	ebb2 0a01 	subs.w	sl, r2, r1
 8006232:	4649      	mov	r1, r9
 8006234:	eb63 0b01 	sbc.w	fp, r3, r1
 8006238:	f04f 0200 	mov.w	r2, #0
 800623c:	f04f 0300 	mov.w	r3, #0
 8006240:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8006244:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8006248:	ea4f 128a 	mov.w	r2, sl, lsl #6
 800624c:	ebb2 040a 	subs.w	r4, r2, sl
 8006250:	eb63 050b 	sbc.w	r5, r3, fp
 8006254:	f04f 0200 	mov.w	r2, #0
 8006258:	f04f 0300 	mov.w	r3, #0
 800625c:	00eb      	lsls	r3, r5, #3
 800625e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8006262:	00e2      	lsls	r2, r4, #3
 8006264:	4614      	mov	r4, r2
 8006266:	461d      	mov	r5, r3
 8006268:	4643      	mov	r3, r8
 800626a:	18e3      	adds	r3, r4, r3
 800626c:	603b      	str	r3, [r7, #0]
 800626e:	464b      	mov	r3, r9
 8006270:	eb45 0303 	adc.w	r3, r5, r3
 8006274:	607b      	str	r3, [r7, #4]
 8006276:	f04f 0200 	mov.w	r2, #0
 800627a:	f04f 0300 	mov.w	r3, #0
 800627e:	e9d7 4500 	ldrd	r4, r5, [r7]
 8006282:	4629      	mov	r1, r5
 8006284:	028b      	lsls	r3, r1, #10
 8006286:	4621      	mov	r1, r4
 8006288:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 800628c:	4621      	mov	r1, r4
 800628e:	028a      	lsls	r2, r1, #10
 8006290:	4610      	mov	r0, r2
 8006292:	4619      	mov	r1, r3
 8006294:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8006296:	2200      	movs	r2, #0
 8006298:	61bb      	str	r3, [r7, #24]
 800629a:	61fa      	str	r2, [r7, #28]
 800629c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80062a0:	f7f9 fff6 	bl	8000290 <__aeabi_uldivmod>
 80062a4:	4602      	mov	r2, r0
 80062a6:	460b      	mov	r3, r1
 80062a8:	4613      	mov	r3, r2
 80062aa:	64fb      	str	r3, [r7, #76]	; 0x4c
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 80062ac:	4b0b      	ldr	r3, [pc, #44]	; (80062dc <HAL_RCC_GetSysClockFreq+0x200>)
 80062ae:	685b      	ldr	r3, [r3, #4]
 80062b0:	0c1b      	lsrs	r3, r3, #16
 80062b2:	f003 0303 	and.w	r3, r3, #3
 80062b6:	3301      	adds	r3, #1
 80062b8:	005b      	lsls	r3, r3, #1
 80062ba:	643b      	str	r3, [r7, #64]	; 0x40

      sysclockfreq = pllvco/pllp;
 80062bc:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80062be:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80062c0:	fbb2 f3f3 	udiv	r3, r2, r3
 80062c4:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 80062c6:	e002      	b.n	80062ce <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 80062c8:	4b05      	ldr	r3, [pc, #20]	; (80062e0 <HAL_RCC_GetSysClockFreq+0x204>)
 80062ca:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 80062cc:	bf00      	nop
    }
  }
  return sysclockfreq;
 80062ce:	6cbb      	ldr	r3, [r7, #72]	; 0x48
}
 80062d0:	4618      	mov	r0, r3
 80062d2:	3750      	adds	r7, #80	; 0x50
 80062d4:	46bd      	mov	sp, r7
 80062d6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80062da:	bf00      	nop
 80062dc:	40023800 	.word	0x40023800
 80062e0:	00f42400 	.word	0x00f42400
 80062e4:	007a1200 	.word	0x007a1200

080062e8 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 80062e8:	b480      	push	{r7}
 80062ea:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 80062ec:	4b03      	ldr	r3, [pc, #12]	; (80062fc <HAL_RCC_GetHCLKFreq+0x14>)
 80062ee:	681b      	ldr	r3, [r3, #0]
}
 80062f0:	4618      	mov	r0, r3
 80062f2:	46bd      	mov	sp, r7
 80062f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062f8:	4770      	bx	lr
 80062fa:	bf00      	nop
 80062fc:	20000030 	.word	0x20000030

08006300 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8006300:	b580      	push	{r7, lr}
 8006302:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8006304:	f7ff fff0 	bl	80062e8 <HAL_RCC_GetHCLKFreq>
 8006308:	4602      	mov	r2, r0
 800630a:	4b05      	ldr	r3, [pc, #20]	; (8006320 <HAL_RCC_GetPCLK1Freq+0x20>)
 800630c:	689b      	ldr	r3, [r3, #8]
 800630e:	0a9b      	lsrs	r3, r3, #10
 8006310:	f003 0307 	and.w	r3, r3, #7
 8006314:	4903      	ldr	r1, [pc, #12]	; (8006324 <HAL_RCC_GetPCLK1Freq+0x24>)
 8006316:	5ccb      	ldrb	r3, [r1, r3]
 8006318:	fa22 f303 	lsr.w	r3, r2, r3
}
 800631c:	4618      	mov	r0, r3
 800631e:	bd80      	pop	{r7, pc}
 8006320:	40023800 	.word	0x40023800
 8006324:	0802b20c 	.word	0x0802b20c

08006328 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8006328:	b580      	push	{r7, lr}
 800632a:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 800632c:	f7ff ffdc 	bl	80062e8 <HAL_RCC_GetHCLKFreq>
 8006330:	4602      	mov	r2, r0
 8006332:	4b05      	ldr	r3, [pc, #20]	; (8006348 <HAL_RCC_GetPCLK2Freq+0x20>)
 8006334:	689b      	ldr	r3, [r3, #8]
 8006336:	0b5b      	lsrs	r3, r3, #13
 8006338:	f003 0307 	and.w	r3, r3, #7
 800633c:	4903      	ldr	r1, [pc, #12]	; (800634c <HAL_RCC_GetPCLK2Freq+0x24>)
 800633e:	5ccb      	ldrb	r3, [r1, r3]
 8006340:	fa22 f303 	lsr.w	r3, r2, r3
}
 8006344:	4618      	mov	r0, r3
 8006346:	bd80      	pop	{r7, pc}
 8006348:	40023800 	.word	0x40023800
 800634c:	0802b20c 	.word	0x0802b20c

08006350 <HAL_RCC_GetClockConfig>:
  * will be configured.
  * @param  pFLatency Pointer on the Flash Latency.
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
 8006350:	b480      	push	{r7}
 8006352:	b083      	sub	sp, #12
 8006354:	af00      	add	r7, sp, #0
 8006356:	6078      	str	r0, [r7, #4]
 8006358:	6039      	str	r1, [r7, #0]
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800635a:	687b      	ldr	r3, [r7, #4]
 800635c:	220f      	movs	r2, #15
 800635e:	601a      	str	r2, [r3, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8006360:	4b12      	ldr	r3, [pc, #72]	; (80063ac <HAL_RCC_GetClockConfig+0x5c>)
 8006362:	689b      	ldr	r3, [r3, #8]
 8006364:	f003 0203 	and.w	r2, r3, #3
 8006368:	687b      	ldr	r3, [r7, #4]
 800636a:	605a      	str	r2, [r3, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800636c:	4b0f      	ldr	r3, [pc, #60]	; (80063ac <HAL_RCC_GetClockConfig+0x5c>)
 800636e:	689b      	ldr	r3, [r3, #8]
 8006370:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8006374:	687b      	ldr	r3, [r7, #4]
 8006376:	609a      	str	r2, [r3, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8006378:	4b0c      	ldr	r3, [pc, #48]	; (80063ac <HAL_RCC_GetClockConfig+0x5c>)
 800637a:	689b      	ldr	r3, [r3, #8]
 800637c:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8006380:	687b      	ldr	r3, [r7, #4]
 8006382:	60da      	str	r2, [r3, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8006384:	4b09      	ldr	r3, [pc, #36]	; (80063ac <HAL_RCC_GetClockConfig+0x5c>)
 8006386:	689b      	ldr	r3, [r3, #8]
 8006388:	08db      	lsrs	r3, r3, #3
 800638a:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 800638e:	687b      	ldr	r3, [r7, #4]
 8006390:	611a      	str	r2, [r3, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8006392:	4b07      	ldr	r3, [pc, #28]	; (80063b0 <HAL_RCC_GetClockConfig+0x60>)
 8006394:	681b      	ldr	r3, [r3, #0]
 8006396:	f003 020f 	and.w	r2, r3, #15
 800639a:	683b      	ldr	r3, [r7, #0]
 800639c:	601a      	str	r2, [r3, #0]
}
 800639e:	bf00      	nop
 80063a0:	370c      	adds	r7, #12
 80063a2:	46bd      	mov	sp, r7
 80063a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063a8:	4770      	bx	lr
 80063aa:	bf00      	nop
 80063ac:	40023800 	.word	0x40023800
 80063b0:	40023c00 	.word	0x40023c00

080063b4 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80063b4:	b580      	push	{r7, lr}
 80063b6:	b086      	sub	sp, #24
 80063b8:	af00      	add	r7, sp, #0
 80063ba:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 80063bc:	2300      	movs	r3, #0
 80063be:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg1 = 0U;
 80063c0:	2300      	movs	r3, #0
 80063c2:	613b      	str	r3, [r7, #16]

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80063c4:	687b      	ldr	r3, [r7, #4]
 80063c6:	681b      	ldr	r3, [r3, #0]
 80063c8:	f003 0301 	and.w	r3, r3, #1
 80063cc:	2b00      	cmp	r3, #0
 80063ce:	d10b      	bne.n	80063e8 <HAL_RCCEx_PeriphCLKConfig+0x34>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 80063d0:	687b      	ldr	r3, [r7, #4]
 80063d2:	681b      	ldr	r3, [r3, #0]
 80063d4:	f003 0302 	and.w	r3, r3, #2
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80063d8:	2b00      	cmp	r3, #0
 80063da:	d105      	bne.n	80063e8 <HAL_RCCEx_PeriphCLKConfig+0x34>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 80063dc:	687b      	ldr	r3, [r7, #4]
 80063de:	681b      	ldr	r3, [r3, #0]
 80063e0:	f003 0340 	and.w	r3, r3, #64	; 0x40
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 80063e4:	2b00      	cmp	r3, #0
 80063e6:	d075      	beq.n	80064d4 <HAL_RCCEx_PeriphCLKConfig+0x120>
  {
    /* check for Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 80063e8:	4b91      	ldr	r3, [pc, #580]	; (8006630 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 80063ea:	2200      	movs	r2, #0
 80063ec:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 80063ee:	f7fc faf7 	bl	80029e0 <HAL_GetTick>
 80063f2:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80063f4:	e008      	b.n	8006408 <HAL_RCCEx_PeriphCLKConfig+0x54>
    {
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80063f6:	f7fc faf3 	bl	80029e0 <HAL_GetTick>
 80063fa:	4602      	mov	r2, r0
 80063fc:	697b      	ldr	r3, [r7, #20]
 80063fe:	1ad3      	subs	r3, r2, r3
 8006400:	2b02      	cmp	r3, #2
 8006402:	d901      	bls.n	8006408 <HAL_RCCEx_PeriphCLKConfig+0x54>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8006404:	2303      	movs	r3, #3
 8006406:	e189      	b.n	800671c <HAL_RCCEx_PeriphCLKConfig+0x368>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006408:	4b8a      	ldr	r3, [pc, #552]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800640a:	681b      	ldr	r3, [r3, #0]
 800640c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8006410:	2b00      	cmp	r3, #0
 8006412:	d1f0      	bne.n	80063f6 <HAL_RCCEx_PeriphCLKConfig+0x42>
    }

    /*---------------------------- I2S configuration -------------------------*/
    /* In Case of I2S Clock Configuration through PLLI2S, PLLI2SR must be added
      only for I2S configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006414:	687b      	ldr	r3, [r7, #4]
 8006416:	681b      	ldr	r3, [r3, #0]
 8006418:	f003 0301 	and.w	r3, r3, #1
 800641c:	2b00      	cmp	r3, #0
 800641e:	d009      	beq.n	8006434 <HAL_RCCEx_PeriphCLKConfig+0x80>
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8006420:	687b      	ldr	r3, [r7, #4]
 8006422:	685b      	ldr	r3, [r3, #4]
 8006424:	019a      	lsls	r2, r3, #6
 8006426:	687b      	ldr	r3, [r7, #4]
 8006428:	689b      	ldr	r3, [r3, #8]
 800642a:	071b      	lsls	r3, r3, #28
 800642c:	4981      	ldr	r1, [pc, #516]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800642e:	4313      	orrs	r3, r2
 8006430:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLI2S, PLLI2SQ and PLLI2S_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8006434:	687b      	ldr	r3, [r7, #4]
 8006436:	681b      	ldr	r3, [r3, #0]
 8006438:	f003 0302 	and.w	r3, r3, #2
 800643c:	2b00      	cmp	r3, #0
 800643e:	d01f      	beq.n	8006480 <HAL_RCCEx_PeriphCLKConfig+0xcc>
      /* Check the PLLI2S division factors */
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SR value from PLLI2SCFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006440:	4b7c      	ldr	r3, [pc, #496]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8006442:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006446:	0f1b      	lsrs	r3, r3, #28
 8006448:	f003 0307 	and.w	r3, r3, #7
 800644c:	613b      	str	r3, [r7, #16]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800644e:	687b      	ldr	r3, [r7, #4]
 8006450:	685b      	ldr	r3, [r3, #4]
 8006452:	019a      	lsls	r2, r3, #6
 8006454:	687b      	ldr	r3, [r7, #4]
 8006456:	68db      	ldr	r3, [r3, #12]
 8006458:	061b      	lsls	r3, r3, #24
 800645a:	431a      	orrs	r2, r3
 800645c:	693b      	ldr	r3, [r7, #16]
 800645e:	071b      	lsls	r3, r3, #28
 8006460:	4974      	ldr	r1, [pc, #464]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8006462:	4313      	orrs	r3, r2
 8006464:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006468:	4b72      	ldr	r3, [pc, #456]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800646a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800646e:	f023 021f 	bic.w	r2, r3, #31
 8006472:	687b      	ldr	r3, [r7, #4]
 8006474:	69db      	ldr	r3, [r3, #28]
 8006476:	3b01      	subs	r3, #1
 8006478:	496e      	ldr	r1, [pc, #440]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800647a:	4313      	orrs	r3, r2
 800647c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006480:	687b      	ldr	r3, [r7, #4]
 8006482:	681b      	ldr	r3, [r3, #0]
 8006484:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006488:	2b00      	cmp	r3, #0
 800648a:	d00d      	beq.n	80064a8 <HAL_RCCEx_PeriphCLKConfig+0xf4>
      /* Check for Parameters */
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Configure the PLLI2S multiplication and division factors */
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	685b      	ldr	r3, [r3, #4]
 8006490:	019a      	lsls	r2, r3, #6
 8006492:	687b      	ldr	r3, [r7, #4]
 8006494:	68db      	ldr	r3, [r3, #12]
 8006496:	061b      	lsls	r3, r3, #24
 8006498:	431a      	orrs	r2, r3
 800649a:	687b      	ldr	r3, [r7, #4]
 800649c:	689b      	ldr	r3, [r3, #8]
 800649e:	071b      	lsls	r3, r3, #28
 80064a0:	4964      	ldr	r1, [pc, #400]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80064a2:	4313      	orrs	r3, r2
 80064a4:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 80064a8:	4b61      	ldr	r3, [pc, #388]	; (8006630 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 80064aa:	2201      	movs	r2, #1
 80064ac:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 80064ae:	f7fc fa97 	bl	80029e0 <HAL_GetTick>
 80064b2:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80064b4:	e008      	b.n	80064c8 <HAL_RCCEx_PeriphCLKConfig+0x114>
    {
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80064b6:	f7fc fa93 	bl	80029e0 <HAL_GetTick>
 80064ba:	4602      	mov	r2, r0
 80064bc:	697b      	ldr	r3, [r7, #20]
 80064be:	1ad3      	subs	r3, r2, r3
 80064c0:	2b02      	cmp	r3, #2
 80064c2:	d901      	bls.n	80064c8 <HAL_RCCEx_PeriphCLKConfig+0x114>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 80064c4:	2303      	movs	r3, #3
 80064c6:	e129      	b.n	800671c <HAL_RCCEx_PeriphCLKConfig+0x368>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80064c8:	4b5a      	ldr	r3, [pc, #360]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80064ca:	681b      	ldr	r3, [r3, #0]
 80064cc:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80064d0:	2b00      	cmp	r3, #0
 80064d2:	d0f0      	beq.n	80064b6 <HAL_RCCEx_PeriphCLKConfig+0x102>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 80064d4:	687b      	ldr	r3, [r7, #4]
 80064d6:	681b      	ldr	r3, [r3, #0]
 80064d8:	f003 0304 	and.w	r3, r3, #4
 80064dc:	2b00      	cmp	r3, #0
 80064de:	d105      	bne.n	80064ec <HAL_RCCEx_PeriphCLKConfig+0x138>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC))
 80064e0:	687b      	ldr	r3, [r7, #4]
 80064e2:	681b      	ldr	r3, [r3, #0]
 80064e4:	f003 0308 	and.w	r3, r3, #8
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 80064e8:	2b00      	cmp	r3, #0
 80064ea:	d079      	beq.n	80065e0 <HAL_RCCEx_PeriphCLKConfig+0x22c>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 80064ec:	4b52      	ldr	r3, [pc, #328]	; (8006638 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 80064ee:	2200      	movs	r2, #0
 80064f0:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 80064f2:	f7fc fa75 	bl	80029e0 <HAL_GetTick>
 80064f6:	6178      	str	r0, [r7, #20]
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80064f8:	e008      	b.n	800650c <HAL_RCCEx_PeriphCLKConfig+0x158>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80064fa:	f7fc fa71 	bl	80029e0 <HAL_GetTick>
 80064fe:	4602      	mov	r2, r0
 8006500:	697b      	ldr	r3, [r7, #20]
 8006502:	1ad3      	subs	r3, r2, r3
 8006504:	2b02      	cmp	r3, #2
 8006506:	d901      	bls.n	800650c <HAL_RCCEx_PeriphCLKConfig+0x158>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8006508:	2303      	movs	r3, #3
 800650a:	e107      	b.n	800671c <HAL_RCCEx_PeriphCLKConfig+0x368>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800650c:	4b49      	ldr	r3, [pc, #292]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800650e:	681b      	ldr	r3, [r3, #0]
 8006510:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8006514:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8006518:	d0ef      	beq.n	80064fa <HAL_RCCEx_PeriphCLKConfig+0x146>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800651a:	687b      	ldr	r3, [r7, #4]
 800651c:	681b      	ldr	r3, [r3, #0]
 800651e:	f003 0304 	and.w	r3, r3, #4
 8006522:	2b00      	cmp	r3, #0
 8006524:	d020      	beq.n	8006568 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006526:	4b43      	ldr	r3, [pc, #268]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8006528:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800652c:	0f1b      	lsrs	r3, r3, #28
 800652e:	f003 0307 	and.w	r3, r3, #7
 8006532:	613b      	str	r3, [r7, #16]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006534:	687b      	ldr	r3, [r7, #4]
 8006536:	691b      	ldr	r3, [r3, #16]
 8006538:	019a      	lsls	r2, r3, #6
 800653a:	687b      	ldr	r3, [r7, #4]
 800653c:	695b      	ldr	r3, [r3, #20]
 800653e:	061b      	lsls	r3, r3, #24
 8006540:	431a      	orrs	r2, r3
 8006542:	693b      	ldr	r3, [r7, #16]
 8006544:	071b      	lsls	r3, r3, #28
 8006546:	493b      	ldr	r1, [pc, #236]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8006548:	4313      	orrs	r3, r2
 800654a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800654e:	4b39      	ldr	r3, [pc, #228]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8006550:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8006554:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8006558:	687b      	ldr	r3, [r7, #4]
 800655a:	6a1b      	ldr	r3, [r3, #32]
 800655c:	3b01      	subs	r3, #1
 800655e:	021b      	lsls	r3, r3, #8
 8006560:	4934      	ldr	r1, [pc, #208]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8006562:	4313      	orrs	r3, r2
 8006564:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006568:	687b      	ldr	r3, [r7, #4]
 800656a:	681b      	ldr	r3, [r3, #0]
 800656c:	f003 0308 	and.w	r3, r3, #8
 8006570:	2b00      	cmp	r3, #0
 8006572:	d01e      	beq.n	80065b2 <HAL_RCCEx_PeriphCLKConfig+0x1fe>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006574:	4b2f      	ldr	r3, [pc, #188]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8006576:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800657a:	0e1b      	lsrs	r3, r3, #24
 800657c:	f003 030f 	and.w	r3, r3, #15
 8006580:	613b      	str	r3, [r7, #16]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8006582:	687b      	ldr	r3, [r7, #4]
 8006584:	691b      	ldr	r3, [r3, #16]
 8006586:	019a      	lsls	r2, r3, #6
 8006588:	693b      	ldr	r3, [r7, #16]
 800658a:	061b      	lsls	r3, r3, #24
 800658c:	431a      	orrs	r2, r3
 800658e:	687b      	ldr	r3, [r7, #4]
 8006590:	699b      	ldr	r3, [r3, #24]
 8006592:	071b      	lsls	r3, r3, #28
 8006594:	4927      	ldr	r1, [pc, #156]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8006596:	4313      	orrs	r3, r2
 8006598:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800659c:	4b25      	ldr	r3, [pc, #148]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800659e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80065a2:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80065a6:	687b      	ldr	r3, [r7, #4]
 80065a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80065aa:	4922      	ldr	r1, [pc, #136]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80065ac:	4313      	orrs	r3, r2
 80065ae:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80065b2:	4b21      	ldr	r3, [pc, #132]	; (8006638 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 80065b4:	2201      	movs	r2, #1
 80065b6:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 80065b8:	f7fc fa12 	bl	80029e0 <HAL_GetTick>
 80065bc:	6178      	str	r0, [r7, #20]
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80065be:	e008      	b.n	80065d2 <HAL_RCCEx_PeriphCLKConfig+0x21e>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80065c0:	f7fc fa0e 	bl	80029e0 <HAL_GetTick>
 80065c4:	4602      	mov	r2, r0
 80065c6:	697b      	ldr	r3, [r7, #20]
 80065c8:	1ad3      	subs	r3, r2, r3
 80065ca:	2b02      	cmp	r3, #2
 80065cc:	d901      	bls.n	80065d2 <HAL_RCCEx_PeriphCLKConfig+0x21e>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 80065ce:	2303      	movs	r3, #3
 80065d0:	e0a4      	b.n	800671c <HAL_RCCEx_PeriphCLKConfig+0x368>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80065d2:	4b18      	ldr	r3, [pc, #96]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80065d4:	681b      	ldr	r3, [r3, #0]
 80065d6:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80065da:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80065de:	d1ef      	bne.n	80065c0 <HAL_RCCEx_PeriphCLKConfig+0x20c>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80065e0:	687b      	ldr	r3, [r7, #4]
 80065e2:	681b      	ldr	r3, [r3, #0]
 80065e4:	f003 0320 	and.w	r3, r3, #32
 80065e8:	2b00      	cmp	r3, #0
 80065ea:	f000 808b 	beq.w	8006704 <HAL_RCCEx_PeriphCLKConfig+0x350>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80065ee:	2300      	movs	r3, #0
 80065f0:	60fb      	str	r3, [r7, #12]
 80065f2:	4b10      	ldr	r3, [pc, #64]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80065f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80065f6:	4a0f      	ldr	r2, [pc, #60]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80065f8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80065fc:	6413      	str	r3, [r2, #64]	; 0x40
 80065fe:	4b0d      	ldr	r3, [pc, #52]	; (8006634 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8006600:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006602:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006606:	60fb      	str	r3, [r7, #12]
 8006608:	68fb      	ldr	r3, [r7, #12]

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800660a:	4b0c      	ldr	r3, [pc, #48]	; (800663c <HAL_RCCEx_PeriphCLKConfig+0x288>)
 800660c:	681b      	ldr	r3, [r3, #0]
 800660e:	4a0b      	ldr	r2, [pc, #44]	; (800663c <HAL_RCCEx_PeriphCLKConfig+0x288>)
 8006610:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006614:	6013      	str	r3, [r2, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8006616:	f7fc f9e3 	bl	80029e0 <HAL_GetTick>
 800661a:	6178      	str	r0, [r7, #20]

    while((PWR->CR & PWR_CR_DBP) == RESET)
 800661c:	e010      	b.n	8006640 <HAL_RCCEx_PeriphCLKConfig+0x28c>
    {
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800661e:	f7fc f9df 	bl	80029e0 <HAL_GetTick>
 8006622:	4602      	mov	r2, r0
 8006624:	697b      	ldr	r3, [r7, #20]
 8006626:	1ad3      	subs	r3, r2, r3
 8006628:	2b02      	cmp	r3, #2
 800662a:	d909      	bls.n	8006640 <HAL_RCCEx_PeriphCLKConfig+0x28c>
      {
        return HAL_TIMEOUT;
 800662c:	2303      	movs	r3, #3
 800662e:	e075      	b.n	800671c <HAL_RCCEx_PeriphCLKConfig+0x368>
 8006630:	42470068 	.word	0x42470068
 8006634:	40023800 	.word	0x40023800
 8006638:	42470070 	.word	0x42470070
 800663c:	40007000 	.word	0x40007000
    while((PWR->CR & PWR_CR_DBP) == RESET)
 8006640:	4b38      	ldr	r3, [pc, #224]	; (8006724 <HAL_RCCEx_PeriphCLKConfig+0x370>)
 8006642:	681b      	ldr	r3, [r3, #0]
 8006644:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006648:	2b00      	cmp	r3, #0
 800664a:	d0e8      	beq.n	800661e <HAL_RCCEx_PeriphCLKConfig+0x26a>
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800664c:	4b36      	ldr	r3, [pc, #216]	; (8006728 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 800664e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006650:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006654:	613b      	str	r3, [r7, #16]
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006656:	693b      	ldr	r3, [r7, #16]
 8006658:	2b00      	cmp	r3, #0
 800665a:	d02f      	beq.n	80066bc <HAL_RCCEx_PeriphCLKConfig+0x308>
 800665c:	687b      	ldr	r3, [r7, #4]
 800665e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006660:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006664:	693a      	ldr	r2, [r7, #16]
 8006666:	429a      	cmp	r2, r3
 8006668:	d028      	beq.n	80066bc <HAL_RCCEx_PeriphCLKConfig+0x308>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800666a:	4b2f      	ldr	r3, [pc, #188]	; (8006728 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 800666c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800666e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006672:	613b      	str	r3, [r7, #16]
      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 8006674:	4b2d      	ldr	r3, [pc, #180]	; (800672c <HAL_RCCEx_PeriphCLKConfig+0x378>)
 8006676:	2201      	movs	r2, #1
 8006678:	601a      	str	r2, [r3, #0]
      __HAL_RCC_BACKUPRESET_RELEASE();
 800667a:	4b2c      	ldr	r3, [pc, #176]	; (800672c <HAL_RCCEx_PeriphCLKConfig+0x378>)
 800667c:	2200      	movs	r2, #0
 800667e:	601a      	str	r2, [r3, #0]
      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg1;
 8006680:	4a29      	ldr	r2, [pc, #164]	; (8006728 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8006682:	693b      	ldr	r3, [r7, #16]
 8006684:	6713      	str	r3, [r2, #112]	; 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8006686:	4b28      	ldr	r3, [pc, #160]	; (8006728 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8006688:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800668a:	f003 0301 	and.w	r3, r3, #1
 800668e:	2b01      	cmp	r3, #1
 8006690:	d114      	bne.n	80066bc <HAL_RCCEx_PeriphCLKConfig+0x308>
      {
        /* Get tick */
        tickstart = HAL_GetTick();
 8006692:	f7fc f9a5 	bl	80029e0 <HAL_GetTick>
 8006696:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006698:	e00a      	b.n	80066b0 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800669a:	f7fc f9a1 	bl	80029e0 <HAL_GetTick>
 800669e:	4602      	mov	r2, r0
 80066a0:	697b      	ldr	r3, [r7, #20]
 80066a2:	1ad3      	subs	r3, r2, r3
 80066a4:	f241 3288 	movw	r2, #5000	; 0x1388
 80066a8:	4293      	cmp	r3, r2
 80066aa:	d901      	bls.n	80066b0 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
          {
            return HAL_TIMEOUT;
 80066ac:	2303      	movs	r3, #3
 80066ae:	e035      	b.n	800671c <HAL_RCCEx_PeriphCLKConfig+0x368>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80066b0:	4b1d      	ldr	r3, [pc, #116]	; (8006728 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80066b2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80066b4:	f003 0302 	and.w	r3, r3, #2
 80066b8:	2b00      	cmp	r3, #0
 80066ba:	d0ee      	beq.n	800669a <HAL_RCCEx_PeriphCLKConfig+0x2e6>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80066bc:	687b      	ldr	r3, [r7, #4]
 80066be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80066c0:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80066c4:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80066c8:	d10d      	bne.n	80066e6 <HAL_RCCEx_PeriphCLKConfig+0x332>
 80066ca:	4b17      	ldr	r3, [pc, #92]	; (8006728 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80066cc:	689b      	ldr	r3, [r3, #8]
 80066ce:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 80066d2:	687b      	ldr	r3, [r7, #4]
 80066d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80066d6:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 80066da:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80066de:	4912      	ldr	r1, [pc, #72]	; (8006728 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80066e0:	4313      	orrs	r3, r2
 80066e2:	608b      	str	r3, [r1, #8]
 80066e4:	e005      	b.n	80066f2 <HAL_RCCEx_PeriphCLKConfig+0x33e>
 80066e6:	4b10      	ldr	r3, [pc, #64]	; (8006728 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80066e8:	689b      	ldr	r3, [r3, #8]
 80066ea:	4a0f      	ldr	r2, [pc, #60]	; (8006728 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80066ec:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 80066f0:	6093      	str	r3, [r2, #8]
 80066f2:	4b0d      	ldr	r3, [pc, #52]	; (8006728 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80066f4:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80066f6:	687b      	ldr	r3, [r7, #4]
 80066f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80066fa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80066fe:	490a      	ldr	r1, [pc, #40]	; (8006728 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8006700:	4313      	orrs	r3, r2
 8006702:	670b      	str	r3, [r1, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8006704:	687b      	ldr	r3, [r7, #4]
 8006706:	681b      	ldr	r3, [r3, #0]
 8006708:	f003 0310 	and.w	r3, r3, #16
 800670c:	2b00      	cmp	r3, #0
 800670e:	d004      	beq.n	800671a <HAL_RCCEx_PeriphCLKConfig+0x366>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8006710:	687b      	ldr	r3, [r7, #4]
 8006712:	f893 202c 	ldrb.w	r2, [r3, #44]	; 0x2c
 8006716:	4b06      	ldr	r3, [pc, #24]	; (8006730 <HAL_RCCEx_PeriphCLKConfig+0x37c>)
 8006718:	601a      	str	r2, [r3, #0]
  }
  return HAL_OK;
 800671a:	2300      	movs	r3, #0
}
 800671c:	4618      	mov	r0, r3
 800671e:	3718      	adds	r7, #24
 8006720:	46bd      	mov	sp, r7
 8006722:	bd80      	pop	{r7, pc}
 8006724:	40007000 	.word	0x40007000
 8006728:	40023800 	.word	0x40023800
 800672c:	42470e40 	.word	0x42470e40
 8006730:	424711e0 	.word	0x424711e0

08006734 <HAL_RCCEx_GetPeriphCLKFreq>:
  *         This parameter can be one of the following values:
  *            @arg RCC_PERIPHCLK_I2S: I2S peripheral clock
  * @retval Frequency in KHz
  */
uint32_t HAL_RCCEx_GetPeriphCLKFreq(uint32_t PeriphClk)
{
 8006734:	b480      	push	{r7}
 8006736:	b087      	sub	sp, #28
 8006738:	af00      	add	r7, sp, #0
 800673a:	6078      	str	r0, [r7, #4]
  /* This variable used to store the I2S clock frequency (value in Hz) */
  uint32_t frequency = 0U;
 800673c:	2300      	movs	r3, #0
 800673e:	617b      	str	r3, [r7, #20]
  /* This variable used to store the VCO Input (value in Hz) */
  uint32_t vcoinput = 0U;
 8006740:	2300      	movs	r3, #0
 8006742:	613b      	str	r3, [r7, #16]
  uint32_t srcclk = 0U;
 8006744:	2300      	movs	r3, #0
 8006746:	60fb      	str	r3, [r7, #12]
  /* This variable used to store the VCO Output (value in Hz) */
  uint32_t vcooutput = 0U;
 8006748:	2300      	movs	r3, #0
 800674a:	60bb      	str	r3, [r7, #8]
  switch (PeriphClk)
 800674c:	687b      	ldr	r3, [r7, #4]
 800674e:	2b01      	cmp	r3, #1
 8006750:	d13e      	bne.n	80067d0 <HAL_RCCEx_GetPeriphCLKFreq+0x9c>
  {
  case RCC_PERIPHCLK_I2S:
    {
      /* Get the current I2S source */
      srcclk = __HAL_RCC_GET_I2S_SOURCE();
 8006752:	4b23      	ldr	r3, [pc, #140]	; (80067e0 <HAL_RCCEx_GetPeriphCLKFreq+0xac>)
 8006754:	689b      	ldr	r3, [r3, #8]
 8006756:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800675a:	60fb      	str	r3, [r7, #12]
 800675c:	68fb      	ldr	r3, [r7, #12]
 800675e:	2b00      	cmp	r3, #0
 8006760:	d005      	beq.n	800676e <HAL_RCCEx_GetPeriphCLKFreq+0x3a>
 8006762:	68fb      	ldr	r3, [r7, #12]
 8006764:	2b01      	cmp	r3, #1
 8006766:	d12f      	bne.n	80067c8 <HAL_RCCEx_GetPeriphCLKFreq+0x94>
      {
      /* Check if I2S clock selection is External clock mapped on the I2S_CKIN pin used as I2S clock */
      case RCC_I2SCLKSOURCE_EXT:
        {
          /* Set the I2S clock to the external clock  value */
          frequency = EXTERNAL_CLOCK_VALUE;
 8006768:	4b1e      	ldr	r3, [pc, #120]	; (80067e4 <HAL_RCCEx_GetPeriphCLKFreq+0xb0>)
 800676a:	617b      	str	r3, [r7, #20]
          break;
 800676c:	e02f      	b.n	80067ce <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
      /* Check if I2S clock selection is PLLI2S VCO output clock divided by PLLI2SR used as I2S clock */
      case RCC_I2SCLKSOURCE_PLLI2S:
        {
          /* Configure the PLLI2S division factor */
          /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
          if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 800676e:	4b1c      	ldr	r3, [pc, #112]	; (80067e0 <HAL_RCCEx_GetPeriphCLKFreq+0xac>)
 8006770:	685b      	ldr	r3, [r3, #4]
 8006772:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006776:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800677a:	d108      	bne.n	800678e <HAL_RCCEx_GetPeriphCLKFreq+0x5a>
          {
            /* Get the I2S source clock value */
            vcoinput = (uint32_t)(HSE_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
 800677c:	4b18      	ldr	r3, [pc, #96]	; (80067e0 <HAL_RCCEx_GetPeriphCLKFreq+0xac>)
 800677e:	685b      	ldr	r3, [r3, #4]
 8006780:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8006784:	4a18      	ldr	r2, [pc, #96]	; (80067e8 <HAL_RCCEx_GetPeriphCLKFreq+0xb4>)
 8006786:	fbb2 f3f3 	udiv	r3, r2, r3
 800678a:	613b      	str	r3, [r7, #16]
 800678c:	e007      	b.n	800679e <HAL_RCCEx_GetPeriphCLKFreq+0x6a>
          }
          else
          {
            /* Get the I2S source clock value */
            vcoinput = (uint32_t)(HSI_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
 800678e:	4b14      	ldr	r3, [pc, #80]	; (80067e0 <HAL_RCCEx_GetPeriphCLKFreq+0xac>)
 8006790:	685b      	ldr	r3, [r3, #4]
 8006792:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8006796:	4a15      	ldr	r2, [pc, #84]	; (80067ec <HAL_RCCEx_GetPeriphCLKFreq+0xb8>)
 8006798:	fbb2 f3f3 	udiv	r3, r2, r3
 800679c:	613b      	str	r3, [r7, #16]
          }

          /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
          vcooutput = (uint32_t)(vcoinput * (((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> 6U) & (RCC_PLLI2SCFGR_PLLI2SN >> 6U)));
 800679e:	4b10      	ldr	r3, [pc, #64]	; (80067e0 <HAL_RCCEx_GetPeriphCLKFreq+0xac>)
 80067a0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80067a4:	099b      	lsrs	r3, r3, #6
 80067a6:	f3c3 0208 	ubfx	r2, r3, #0, #9
 80067aa:	693b      	ldr	r3, [r7, #16]
 80067ac:	fb02 f303 	mul.w	r3, r2, r3
 80067b0:	60bb      	str	r3, [r7, #8]
          /* I2S_CLK = PLLI2S_VCO Output/PLLI2SR */
          frequency = (uint32_t)(vcooutput /(((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> 28U) & (RCC_PLLI2SCFGR_PLLI2SR >> 28U)));
 80067b2:	4b0b      	ldr	r3, [pc, #44]	; (80067e0 <HAL_RCCEx_GetPeriphCLKFreq+0xac>)
 80067b4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80067b8:	0f1b      	lsrs	r3, r3, #28
 80067ba:	f003 0307 	and.w	r3, r3, #7
 80067be:	68ba      	ldr	r2, [r7, #8]
 80067c0:	fbb2 f3f3 	udiv	r3, r2, r3
 80067c4:	617b      	str	r3, [r7, #20]
          break;
 80067c6:	e002      	b.n	80067ce <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        }
        /* Clock not enabled for I2S*/
      default:
        {
          frequency = 0U;
 80067c8:	2300      	movs	r3, #0
 80067ca:	617b      	str	r3, [r7, #20]
          break;
 80067cc:	bf00      	nop
        }
      }
      break;
 80067ce:	bf00      	nop
    }
  }
  return frequency;
 80067d0:	697b      	ldr	r3, [r7, #20]
}
 80067d2:	4618      	mov	r0, r3
 80067d4:	371c      	adds	r7, #28
 80067d6:	46bd      	mov	sp, r7
 80067d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067dc:	4770      	bx	lr
 80067de:	bf00      	nop
 80067e0:	40023800 	.word	0x40023800
 80067e4:	00bb8000 	.word	0x00bb8000
 80067e8:	007a1200 	.word	0x007a1200
 80067ec:	00f42400 	.word	0x00f42400

080067f0 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 80067f0:	b580      	push	{r7, lr}
 80067f2:	b082      	sub	sp, #8
 80067f4:	af00      	add	r7, sp, #0
 80067f6:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 80067f8:	687b      	ldr	r3, [r7, #4]
 80067fa:	2b00      	cmp	r3, #0
 80067fc:	d101      	bne.n	8006802 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 80067fe:	2301      	movs	r3, #1
 8006800:	e07b      	b.n	80068fa <HAL_SPI_Init+0x10a>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8006802:	687b      	ldr	r3, [r7, #4]
 8006804:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006806:	2b00      	cmp	r3, #0
 8006808:	d108      	bne.n	800681c <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800680a:	687b      	ldr	r3, [r7, #4]
 800680c:	685b      	ldr	r3, [r3, #4]
 800680e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006812:	d009      	beq.n	8006828 <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8006814:	687b      	ldr	r3, [r7, #4]
 8006816:	2200      	movs	r2, #0
 8006818:	61da      	str	r2, [r3, #28]
 800681a:	e005      	b.n	8006828 <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800681c:	687b      	ldr	r3, [r7, #4]
 800681e:	2200      	movs	r2, #0
 8006820:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8006822:	687b      	ldr	r3, [r7, #4]
 8006824:	2200      	movs	r2, #0
 8006826:	615a      	str	r2, [r3, #20]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8006828:	687b      	ldr	r3, [r7, #4]
 800682a:	2200      	movs	r2, #0
 800682c:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 800682e:	687b      	ldr	r3, [r7, #4]
 8006830:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8006834:	b2db      	uxtb	r3, r3
 8006836:	2b00      	cmp	r3, #0
 8006838:	d106      	bne.n	8006848 <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 800683a:	687b      	ldr	r3, [r7, #4]
 800683c:	2200      	movs	r2, #0
 800683e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8006842:	6878      	ldr	r0, [r7, #4]
 8006844:	f7fb fd00 	bl	8002248 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8006848:	687b      	ldr	r3, [r7, #4]
 800684a:	2202      	movs	r2, #2
 800684c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8006850:	687b      	ldr	r3, [r7, #4]
 8006852:	681b      	ldr	r3, [r3, #0]
 8006854:	681a      	ldr	r2, [r3, #0]
 8006856:	687b      	ldr	r3, [r7, #4]
 8006858:	681b      	ldr	r3, [r3, #0]
 800685a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800685e:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006860:	687b      	ldr	r3, [r7, #4]
 8006862:	685b      	ldr	r3, [r3, #4]
 8006864:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8006868:	687b      	ldr	r3, [r7, #4]
 800686a:	689b      	ldr	r3, [r3, #8]
 800686c:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8006870:	431a      	orrs	r2, r3
 8006872:	687b      	ldr	r3, [r7, #4]
 8006874:	68db      	ldr	r3, [r3, #12]
 8006876:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800687a:	431a      	orrs	r2, r3
 800687c:	687b      	ldr	r3, [r7, #4]
 800687e:	691b      	ldr	r3, [r3, #16]
 8006880:	f003 0302 	and.w	r3, r3, #2
 8006884:	431a      	orrs	r2, r3
 8006886:	687b      	ldr	r3, [r7, #4]
 8006888:	695b      	ldr	r3, [r3, #20]
 800688a:	f003 0301 	and.w	r3, r3, #1
 800688e:	431a      	orrs	r2, r3
 8006890:	687b      	ldr	r3, [r7, #4]
 8006892:	699b      	ldr	r3, [r3, #24]
 8006894:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8006898:	431a      	orrs	r2, r3
 800689a:	687b      	ldr	r3, [r7, #4]
 800689c:	69db      	ldr	r3, [r3, #28]
 800689e:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80068a2:	431a      	orrs	r2, r3
 80068a4:	687b      	ldr	r3, [r7, #4]
 80068a6:	6a1b      	ldr	r3, [r3, #32]
 80068a8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80068ac:	ea42 0103 	orr.w	r1, r2, r3
 80068b0:	687b      	ldr	r3, [r7, #4]
 80068b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80068b4:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 80068b8:	687b      	ldr	r3, [r7, #4]
 80068ba:	681b      	ldr	r3, [r3, #0]
 80068bc:	430a      	orrs	r2, r1
 80068be:	601a      	str	r2, [r3, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 80068c0:	687b      	ldr	r3, [r7, #4]
 80068c2:	699b      	ldr	r3, [r3, #24]
 80068c4:	0c1b      	lsrs	r3, r3, #16
 80068c6:	f003 0104 	and.w	r1, r3, #4
 80068ca:	687b      	ldr	r3, [r7, #4]
 80068cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80068ce:	f003 0210 	and.w	r2, r3, #16
 80068d2:	687b      	ldr	r3, [r7, #4]
 80068d4:	681b      	ldr	r3, [r3, #0]
 80068d6:	430a      	orrs	r2, r1
 80068d8:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80068da:	687b      	ldr	r3, [r7, #4]
 80068dc:	681b      	ldr	r3, [r3, #0]
 80068de:	69da      	ldr	r2, [r3, #28]
 80068e0:	687b      	ldr	r3, [r7, #4]
 80068e2:	681b      	ldr	r3, [r3, #0]
 80068e4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80068e8:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80068ea:	687b      	ldr	r3, [r7, #4]
 80068ec:	2200      	movs	r2, #0
 80068ee:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 80068f0:	687b      	ldr	r3, [r7, #4]
 80068f2:	2201      	movs	r2, #1
 80068f4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  return HAL_OK;
 80068f8:	2300      	movs	r3, #0
}
 80068fa:	4618      	mov	r0, r3
 80068fc:	3708      	adds	r7, #8
 80068fe:	46bd      	mov	sp, r7
 8006900:	bd80      	pop	{r7, pc}

08006902 <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8006902:	b580      	push	{r7, lr}
 8006904:	b088      	sub	sp, #32
 8006906:	af00      	add	r7, sp, #0
 8006908:	60f8      	str	r0, [r7, #12]
 800690a:	60b9      	str	r1, [r7, #8]
 800690c:	603b      	str	r3, [r7, #0]
 800690e:	4613      	mov	r3, r2
 8006910:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 8006912:	2300      	movs	r3, #0
 8006914:	77fb      	strb	r3, [r7, #31]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8006916:	68fb      	ldr	r3, [r7, #12]
 8006918:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 800691c:	2b01      	cmp	r3, #1
 800691e:	d101      	bne.n	8006924 <HAL_SPI_Transmit+0x22>
 8006920:	2302      	movs	r3, #2
 8006922:	e126      	b.n	8006b72 <HAL_SPI_Transmit+0x270>
 8006924:	68fb      	ldr	r3, [r7, #12]
 8006926:	2201      	movs	r2, #1
 8006928:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 800692c:	f7fc f858 	bl	80029e0 <HAL_GetTick>
 8006930:	61b8      	str	r0, [r7, #24]
  initial_TxXferCount = Size;
 8006932:	88fb      	ldrh	r3, [r7, #6]
 8006934:	82fb      	strh	r3, [r7, #22]

  if (hspi->State != HAL_SPI_STATE_READY)
 8006936:	68fb      	ldr	r3, [r7, #12]
 8006938:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800693c:	b2db      	uxtb	r3, r3
 800693e:	2b01      	cmp	r3, #1
 8006940:	d002      	beq.n	8006948 <HAL_SPI_Transmit+0x46>
  {
    errorcode = HAL_BUSY;
 8006942:	2302      	movs	r3, #2
 8006944:	77fb      	strb	r3, [r7, #31]
    goto error;
 8006946:	e10b      	b.n	8006b60 <HAL_SPI_Transmit+0x25e>
  }

  if ((pData == NULL) || (Size == 0U))
 8006948:	68bb      	ldr	r3, [r7, #8]
 800694a:	2b00      	cmp	r3, #0
 800694c:	d002      	beq.n	8006954 <HAL_SPI_Transmit+0x52>
 800694e:	88fb      	ldrh	r3, [r7, #6]
 8006950:	2b00      	cmp	r3, #0
 8006952:	d102      	bne.n	800695a <HAL_SPI_Transmit+0x58>
  {
    errorcode = HAL_ERROR;
 8006954:	2301      	movs	r3, #1
 8006956:	77fb      	strb	r3, [r7, #31]
    goto error;
 8006958:	e102      	b.n	8006b60 <HAL_SPI_Transmit+0x25e>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800695a:	68fb      	ldr	r3, [r7, #12]
 800695c:	2203      	movs	r2, #3
 800695e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006962:	68fb      	ldr	r3, [r7, #12]
 8006964:	2200      	movs	r2, #0
 8006966:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8006968:	68fb      	ldr	r3, [r7, #12]
 800696a:	68ba      	ldr	r2, [r7, #8]
 800696c:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800696e:	68fb      	ldr	r3, [r7, #12]
 8006970:	88fa      	ldrh	r2, [r7, #6]
 8006972:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 8006974:	68fb      	ldr	r3, [r7, #12]
 8006976:	88fa      	ldrh	r2, [r7, #6]
 8006978:	86da      	strh	r2, [r3, #54]	; 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800697a:	68fb      	ldr	r3, [r7, #12]
 800697c:	2200      	movs	r2, #0
 800697e:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 8006980:	68fb      	ldr	r3, [r7, #12]
 8006982:	2200      	movs	r2, #0
 8006984:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8006986:	68fb      	ldr	r3, [r7, #12]
 8006988:	2200      	movs	r2, #0
 800698a:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxISR       = NULL;
 800698c:	68fb      	ldr	r3, [r7, #12]
 800698e:	2200      	movs	r2, #0
 8006990:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 8006992:	68fb      	ldr	r3, [r7, #12]
 8006994:	2200      	movs	r2, #0
 8006996:	641a      	str	r2, [r3, #64]	; 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006998:	68fb      	ldr	r3, [r7, #12]
 800699a:	689b      	ldr	r3, [r3, #8]
 800699c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80069a0:	d10f      	bne.n	80069c2 <HAL_SPI_Transmit+0xc0>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 80069a2:	68fb      	ldr	r3, [r7, #12]
 80069a4:	681b      	ldr	r3, [r3, #0]
 80069a6:	681a      	ldr	r2, [r3, #0]
 80069a8:	68fb      	ldr	r3, [r7, #12]
 80069aa:	681b      	ldr	r3, [r3, #0]
 80069ac:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80069b0:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 80069b2:	68fb      	ldr	r3, [r7, #12]
 80069b4:	681b      	ldr	r3, [r3, #0]
 80069b6:	681a      	ldr	r2, [r3, #0]
 80069b8:	68fb      	ldr	r3, [r7, #12]
 80069ba:	681b      	ldr	r3, [r3, #0]
 80069bc:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80069c0:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80069c2:	68fb      	ldr	r3, [r7, #12]
 80069c4:	681b      	ldr	r3, [r3, #0]
 80069c6:	681b      	ldr	r3, [r3, #0]
 80069c8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80069cc:	2b40      	cmp	r3, #64	; 0x40
 80069ce:	d007      	beq.n	80069e0 <HAL_SPI_Transmit+0xde>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 80069d0:	68fb      	ldr	r3, [r7, #12]
 80069d2:	681b      	ldr	r3, [r3, #0]
 80069d4:	681a      	ldr	r2, [r3, #0]
 80069d6:	68fb      	ldr	r3, [r7, #12]
 80069d8:	681b      	ldr	r3, [r3, #0]
 80069da:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80069de:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80069e0:	68fb      	ldr	r3, [r7, #12]
 80069e2:	68db      	ldr	r3, [r3, #12]
 80069e4:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80069e8:	d14b      	bne.n	8006a82 <HAL_SPI_Transmit+0x180>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80069ea:	68fb      	ldr	r3, [r7, #12]
 80069ec:	685b      	ldr	r3, [r3, #4]
 80069ee:	2b00      	cmp	r3, #0
 80069f0:	d002      	beq.n	80069f8 <HAL_SPI_Transmit+0xf6>
 80069f2:	8afb      	ldrh	r3, [r7, #22]
 80069f4:	2b01      	cmp	r3, #1
 80069f6:	d13e      	bne.n	8006a76 <HAL_SPI_Transmit+0x174>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80069f8:	68fb      	ldr	r3, [r7, #12]
 80069fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80069fc:	881a      	ldrh	r2, [r3, #0]
 80069fe:	68fb      	ldr	r3, [r7, #12]
 8006a00:	681b      	ldr	r3, [r3, #0]
 8006a02:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006a04:	68fb      	ldr	r3, [r7, #12]
 8006a06:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006a08:	1c9a      	adds	r2, r3, #2
 8006a0a:	68fb      	ldr	r3, [r7, #12]
 8006a0c:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8006a0e:	68fb      	ldr	r3, [r7, #12]
 8006a10:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006a12:	b29b      	uxth	r3, r3
 8006a14:	3b01      	subs	r3, #1
 8006a16:	b29a      	uxth	r2, r3
 8006a18:	68fb      	ldr	r3, [r7, #12]
 8006a1a:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8006a1c:	e02b      	b.n	8006a76 <HAL_SPI_Transmit+0x174>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006a1e:	68fb      	ldr	r3, [r7, #12]
 8006a20:	681b      	ldr	r3, [r3, #0]
 8006a22:	689b      	ldr	r3, [r3, #8]
 8006a24:	f003 0302 	and.w	r3, r3, #2
 8006a28:	2b02      	cmp	r3, #2
 8006a2a:	d112      	bne.n	8006a52 <HAL_SPI_Transmit+0x150>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006a2c:	68fb      	ldr	r3, [r7, #12]
 8006a2e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006a30:	881a      	ldrh	r2, [r3, #0]
 8006a32:	68fb      	ldr	r3, [r7, #12]
 8006a34:	681b      	ldr	r3, [r3, #0]
 8006a36:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006a38:	68fb      	ldr	r3, [r7, #12]
 8006a3a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006a3c:	1c9a      	adds	r2, r3, #2
 8006a3e:	68fb      	ldr	r3, [r7, #12]
 8006a40:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8006a42:	68fb      	ldr	r3, [r7, #12]
 8006a44:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006a46:	b29b      	uxth	r3, r3
 8006a48:	3b01      	subs	r3, #1
 8006a4a:	b29a      	uxth	r2, r3
 8006a4c:	68fb      	ldr	r3, [r7, #12]
 8006a4e:	86da      	strh	r2, [r3, #54]	; 0x36
 8006a50:	e011      	b.n	8006a76 <HAL_SPI_Transmit+0x174>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006a52:	f7fb ffc5 	bl	80029e0 <HAL_GetTick>
 8006a56:	4602      	mov	r2, r0
 8006a58:	69bb      	ldr	r3, [r7, #24]
 8006a5a:	1ad3      	subs	r3, r2, r3
 8006a5c:	683a      	ldr	r2, [r7, #0]
 8006a5e:	429a      	cmp	r2, r3
 8006a60:	d803      	bhi.n	8006a6a <HAL_SPI_Transmit+0x168>
 8006a62:	683b      	ldr	r3, [r7, #0]
 8006a64:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8006a68:	d102      	bne.n	8006a70 <HAL_SPI_Transmit+0x16e>
 8006a6a:	683b      	ldr	r3, [r7, #0]
 8006a6c:	2b00      	cmp	r3, #0
 8006a6e:	d102      	bne.n	8006a76 <HAL_SPI_Transmit+0x174>
        {
          errorcode = HAL_TIMEOUT;
 8006a70:	2303      	movs	r3, #3
 8006a72:	77fb      	strb	r3, [r7, #31]
          goto error;
 8006a74:	e074      	b.n	8006b60 <HAL_SPI_Transmit+0x25e>
    while (hspi->TxXferCount > 0U)
 8006a76:	68fb      	ldr	r3, [r7, #12]
 8006a78:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006a7a:	b29b      	uxth	r3, r3
 8006a7c:	2b00      	cmp	r3, #0
 8006a7e:	d1ce      	bne.n	8006a1e <HAL_SPI_Transmit+0x11c>
 8006a80:	e04c      	b.n	8006b1c <HAL_SPI_Transmit+0x21a>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006a82:	68fb      	ldr	r3, [r7, #12]
 8006a84:	685b      	ldr	r3, [r3, #4]
 8006a86:	2b00      	cmp	r3, #0
 8006a88:	d002      	beq.n	8006a90 <HAL_SPI_Transmit+0x18e>
 8006a8a:	8afb      	ldrh	r3, [r7, #22]
 8006a8c:	2b01      	cmp	r3, #1
 8006a8e:	d140      	bne.n	8006b12 <HAL_SPI_Transmit+0x210>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006a90:	68fb      	ldr	r3, [r7, #12]
 8006a92:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006a94:	68fb      	ldr	r3, [r7, #12]
 8006a96:	681b      	ldr	r3, [r3, #0]
 8006a98:	330c      	adds	r3, #12
 8006a9a:	7812      	ldrb	r2, [r2, #0]
 8006a9c:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006a9e:	68fb      	ldr	r3, [r7, #12]
 8006aa0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006aa2:	1c5a      	adds	r2, r3, #1
 8006aa4:	68fb      	ldr	r3, [r7, #12]
 8006aa6:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8006aa8:	68fb      	ldr	r3, [r7, #12]
 8006aaa:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006aac:	b29b      	uxth	r3, r3
 8006aae:	3b01      	subs	r3, #1
 8006ab0:	b29a      	uxth	r2, r3
 8006ab2:	68fb      	ldr	r3, [r7, #12]
 8006ab4:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while (hspi->TxXferCount > 0U)
 8006ab6:	e02c      	b.n	8006b12 <HAL_SPI_Transmit+0x210>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006ab8:	68fb      	ldr	r3, [r7, #12]
 8006aba:	681b      	ldr	r3, [r3, #0]
 8006abc:	689b      	ldr	r3, [r3, #8]
 8006abe:	f003 0302 	and.w	r3, r3, #2
 8006ac2:	2b02      	cmp	r3, #2
 8006ac4:	d113      	bne.n	8006aee <HAL_SPI_Transmit+0x1ec>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006ac6:	68fb      	ldr	r3, [r7, #12]
 8006ac8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006aca:	68fb      	ldr	r3, [r7, #12]
 8006acc:	681b      	ldr	r3, [r3, #0]
 8006ace:	330c      	adds	r3, #12
 8006ad0:	7812      	ldrb	r2, [r2, #0]
 8006ad2:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8006ad4:	68fb      	ldr	r3, [r7, #12]
 8006ad6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006ad8:	1c5a      	adds	r2, r3, #1
 8006ada:	68fb      	ldr	r3, [r7, #12]
 8006adc:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8006ade:	68fb      	ldr	r3, [r7, #12]
 8006ae0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006ae2:	b29b      	uxth	r3, r3
 8006ae4:	3b01      	subs	r3, #1
 8006ae6:	b29a      	uxth	r2, r3
 8006ae8:	68fb      	ldr	r3, [r7, #12]
 8006aea:	86da      	strh	r2, [r3, #54]	; 0x36
 8006aec:	e011      	b.n	8006b12 <HAL_SPI_Transmit+0x210>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006aee:	f7fb ff77 	bl	80029e0 <HAL_GetTick>
 8006af2:	4602      	mov	r2, r0
 8006af4:	69bb      	ldr	r3, [r7, #24]
 8006af6:	1ad3      	subs	r3, r2, r3
 8006af8:	683a      	ldr	r2, [r7, #0]
 8006afa:	429a      	cmp	r2, r3
 8006afc:	d803      	bhi.n	8006b06 <HAL_SPI_Transmit+0x204>
 8006afe:	683b      	ldr	r3, [r7, #0]
 8006b00:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8006b04:	d102      	bne.n	8006b0c <HAL_SPI_Transmit+0x20a>
 8006b06:	683b      	ldr	r3, [r7, #0]
 8006b08:	2b00      	cmp	r3, #0
 8006b0a:	d102      	bne.n	8006b12 <HAL_SPI_Transmit+0x210>
        {
          errorcode = HAL_TIMEOUT;
 8006b0c:	2303      	movs	r3, #3
 8006b0e:	77fb      	strb	r3, [r7, #31]
          goto error;
 8006b10:	e026      	b.n	8006b60 <HAL_SPI_Transmit+0x25e>
    while (hspi->TxXferCount > 0U)
 8006b12:	68fb      	ldr	r3, [r7, #12]
 8006b14:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006b16:	b29b      	uxth	r3, r3
 8006b18:	2b00      	cmp	r3, #0
 8006b1a:	d1cd      	bne.n	8006ab8 <HAL_SPI_Transmit+0x1b6>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006b1c:	69ba      	ldr	r2, [r7, #24]
 8006b1e:	6839      	ldr	r1, [r7, #0]
 8006b20:	68f8      	ldr	r0, [r7, #12]
 8006b22:	f000 fa55 	bl	8006fd0 <SPI_EndRxTxTransaction>
 8006b26:	4603      	mov	r3, r0
 8006b28:	2b00      	cmp	r3, #0
 8006b2a:	d002      	beq.n	8006b32 <HAL_SPI_Transmit+0x230>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006b2c:	68fb      	ldr	r3, [r7, #12]
 8006b2e:	2220      	movs	r2, #32
 8006b30:	655a      	str	r2, [r3, #84]	; 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006b32:	68fb      	ldr	r3, [r7, #12]
 8006b34:	689b      	ldr	r3, [r3, #8]
 8006b36:	2b00      	cmp	r3, #0
 8006b38:	d10a      	bne.n	8006b50 <HAL_SPI_Transmit+0x24e>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006b3a:	2300      	movs	r3, #0
 8006b3c:	613b      	str	r3, [r7, #16]
 8006b3e:	68fb      	ldr	r3, [r7, #12]
 8006b40:	681b      	ldr	r3, [r3, #0]
 8006b42:	68db      	ldr	r3, [r3, #12]
 8006b44:	613b      	str	r3, [r7, #16]
 8006b46:	68fb      	ldr	r3, [r7, #12]
 8006b48:	681b      	ldr	r3, [r3, #0]
 8006b4a:	689b      	ldr	r3, [r3, #8]
 8006b4c:	613b      	str	r3, [r7, #16]
 8006b4e:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006b50:	68fb      	ldr	r3, [r7, #12]
 8006b52:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006b54:	2b00      	cmp	r3, #0
 8006b56:	d002      	beq.n	8006b5e <HAL_SPI_Transmit+0x25c>
  {
    errorcode = HAL_ERROR;
 8006b58:	2301      	movs	r3, #1
 8006b5a:	77fb      	strb	r3, [r7, #31]
 8006b5c:	e000      	b.n	8006b60 <HAL_SPI_Transmit+0x25e>
  }

error:
 8006b5e:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 8006b60:	68fb      	ldr	r3, [r7, #12]
 8006b62:	2201      	movs	r2, #1
 8006b64:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8006b68:	68fb      	ldr	r3, [r7, #12]
 8006b6a:	2200      	movs	r2, #0
 8006b6c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 8006b70:	7ffb      	ldrb	r3, [r7, #31]
}
 8006b72:	4618      	mov	r0, r3
 8006b74:	3720      	adds	r7, #32
 8006b76:	46bd      	mov	sp, r7
 8006b78:	bd80      	pop	{r7, pc}

08006b7a <HAL_SPI_TransmitReceive>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxData, uint16_t Size,
                                          uint32_t Timeout)
{
 8006b7a:	b580      	push	{r7, lr}
 8006b7c:	b08c      	sub	sp, #48	; 0x30
 8006b7e:	af00      	add	r7, sp, #0
 8006b80:	60f8      	str	r0, [r7, #12]
 8006b82:	60b9      	str	r1, [r7, #8]
 8006b84:	607a      	str	r2, [r7, #4]
 8006b86:	807b      	strh	r3, [r7, #2]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */

  /* Variable used to alternate Rx and Tx during transfer */
  uint32_t             txallowed = 1U;
 8006b88:	2301      	movs	r3, #1
 8006b8a:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_StatusTypeDef    errorcode = HAL_OK;
 8006b8c:	2300      	movs	r3, #0
 8006b8e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8006b92:	68fb      	ldr	r3, [r7, #12]
 8006b94:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8006b98:	2b01      	cmp	r3, #1
 8006b9a:	d101      	bne.n	8006ba0 <HAL_SPI_TransmitReceive+0x26>
 8006b9c:	2302      	movs	r3, #2
 8006b9e:	e18a      	b.n	8006eb6 <HAL_SPI_TransmitReceive+0x33c>
 8006ba0:	68fb      	ldr	r3, [r7, #12]
 8006ba2:	2201      	movs	r2, #1
 8006ba4:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8006ba8:	f7fb ff1a 	bl	80029e0 <HAL_GetTick>
 8006bac:	6278      	str	r0, [r7, #36]	; 0x24

  /* Init temporary variables */
  tmp_state           = hspi->State;
 8006bae:	68fb      	ldr	r3, [r7, #12]
 8006bb0:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8006bb4:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
  tmp_mode            = hspi->Init.Mode;
 8006bb8:	68fb      	ldr	r3, [r7, #12]
 8006bba:	685b      	ldr	r3, [r3, #4]
 8006bbc:	61fb      	str	r3, [r7, #28]
  initial_TxXferCount = Size;
 8006bbe:	887b      	ldrh	r3, [r7, #2]
 8006bc0:	837b      	strh	r3, [r7, #26]

  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006bc2:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8006bc6:	2b01      	cmp	r3, #1
 8006bc8:	d00f      	beq.n	8006bea <HAL_SPI_TransmitReceive+0x70>
 8006bca:	69fb      	ldr	r3, [r7, #28]
 8006bcc:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006bd0:	d107      	bne.n	8006be2 <HAL_SPI_TransmitReceive+0x68>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8006bd2:	68fb      	ldr	r3, [r7, #12]
 8006bd4:	689b      	ldr	r3, [r3, #8]
 8006bd6:	2b00      	cmp	r3, #0
 8006bd8:	d103      	bne.n	8006be2 <HAL_SPI_TransmitReceive+0x68>
 8006bda:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8006bde:	2b04      	cmp	r3, #4
 8006be0:	d003      	beq.n	8006bea <HAL_SPI_TransmitReceive+0x70>
  {
    errorcode = HAL_BUSY;
 8006be2:	2302      	movs	r3, #2
 8006be4:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    goto error;
 8006be8:	e15b      	b.n	8006ea2 <HAL_SPI_TransmitReceive+0x328>
  }

  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8006bea:	68bb      	ldr	r3, [r7, #8]
 8006bec:	2b00      	cmp	r3, #0
 8006bee:	d005      	beq.n	8006bfc <HAL_SPI_TransmitReceive+0x82>
 8006bf0:	687b      	ldr	r3, [r7, #4]
 8006bf2:	2b00      	cmp	r3, #0
 8006bf4:	d002      	beq.n	8006bfc <HAL_SPI_TransmitReceive+0x82>
 8006bf6:	887b      	ldrh	r3, [r7, #2]
 8006bf8:	2b00      	cmp	r3, #0
 8006bfa:	d103      	bne.n	8006c04 <HAL_SPI_TransmitReceive+0x8a>
  {
    errorcode = HAL_ERROR;
 8006bfc:	2301      	movs	r3, #1
 8006bfe:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    goto error;
 8006c02:	e14e      	b.n	8006ea2 <HAL_SPI_TransmitReceive+0x328>
  }

  /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006c04:	68fb      	ldr	r3, [r7, #12]
 8006c06:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8006c0a:	b2db      	uxtb	r3, r3
 8006c0c:	2b04      	cmp	r3, #4
 8006c0e:	d003      	beq.n	8006c18 <HAL_SPI_TransmitReceive+0x9e>
  {
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8006c10:	68fb      	ldr	r3, [r7, #12]
 8006c12:	2205      	movs	r2, #5
 8006c14:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  }

  /* Set the transaction information */
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006c18:	68fb      	ldr	r3, [r7, #12]
 8006c1a:	2200      	movs	r2, #0
 8006c1c:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8006c1e:	68fb      	ldr	r3, [r7, #12]
 8006c20:	687a      	ldr	r2, [r7, #4]
 8006c22:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferCount = Size;
 8006c24:	68fb      	ldr	r3, [r7, #12]
 8006c26:	887a      	ldrh	r2, [r7, #2]
 8006c28:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->RxXferSize  = Size;
 8006c2a:	68fb      	ldr	r3, [r7, #12]
 8006c2c:	887a      	ldrh	r2, [r7, #2]
 8006c2e:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8006c30:	68fb      	ldr	r3, [r7, #12]
 8006c32:	68ba      	ldr	r2, [r7, #8]
 8006c34:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferCount = Size;
 8006c36:	68fb      	ldr	r3, [r7, #12]
 8006c38:	887a      	ldrh	r2, [r7, #2]
 8006c3a:	86da      	strh	r2, [r3, #54]	; 0x36
  hspi->TxXferSize  = Size;
 8006c3c:	68fb      	ldr	r3, [r7, #12]
 8006c3e:	887a      	ldrh	r2, [r7, #2]
 8006c40:	869a      	strh	r2, [r3, #52]	; 0x34

  /*Init field not used in handle to zero */
  hspi->RxISR       = NULL;
 8006c42:	68fb      	ldr	r3, [r7, #12]
 8006c44:	2200      	movs	r2, #0
 8006c46:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->TxISR       = NULL;
 8006c48:	68fb      	ldr	r3, [r7, #12]
 8006c4a:	2200      	movs	r2, #0
 8006c4c:	645a      	str	r2, [r3, #68]	; 0x44
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006c4e:	68fb      	ldr	r3, [r7, #12]
 8006c50:	681b      	ldr	r3, [r3, #0]
 8006c52:	681b      	ldr	r3, [r3, #0]
 8006c54:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006c58:	2b40      	cmp	r3, #64	; 0x40
 8006c5a:	d007      	beq.n	8006c6c <HAL_SPI_TransmitReceive+0xf2>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8006c5c:	68fb      	ldr	r3, [r7, #12]
 8006c5e:	681b      	ldr	r3, [r3, #0]
 8006c60:	681a      	ldr	r2, [r3, #0]
 8006c62:	68fb      	ldr	r3, [r7, #12]
 8006c64:	681b      	ldr	r3, [r3, #0]
 8006c66:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8006c6a:	601a      	str	r2, [r3, #0]
  }

  /* Transmit and Receive data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006c6c:	68fb      	ldr	r3, [r7, #12]
 8006c6e:	68db      	ldr	r3, [r3, #12]
 8006c70:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006c74:	d178      	bne.n	8006d68 <HAL_SPI_TransmitReceive+0x1ee>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006c76:	68fb      	ldr	r3, [r7, #12]
 8006c78:	685b      	ldr	r3, [r3, #4]
 8006c7a:	2b00      	cmp	r3, #0
 8006c7c:	d002      	beq.n	8006c84 <HAL_SPI_TransmitReceive+0x10a>
 8006c7e:	8b7b      	ldrh	r3, [r7, #26]
 8006c80:	2b01      	cmp	r3, #1
 8006c82:	d166      	bne.n	8006d52 <HAL_SPI_TransmitReceive+0x1d8>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006c84:	68fb      	ldr	r3, [r7, #12]
 8006c86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006c88:	881a      	ldrh	r2, [r3, #0]
 8006c8a:	68fb      	ldr	r3, [r7, #12]
 8006c8c:	681b      	ldr	r3, [r3, #0]
 8006c8e:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006c90:	68fb      	ldr	r3, [r7, #12]
 8006c92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006c94:	1c9a      	adds	r2, r3, #2
 8006c96:	68fb      	ldr	r3, [r7, #12]
 8006c98:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8006c9a:	68fb      	ldr	r3, [r7, #12]
 8006c9c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006c9e:	b29b      	uxth	r3, r3
 8006ca0:	3b01      	subs	r3, #1
 8006ca2:	b29a      	uxth	r2, r3
 8006ca4:	68fb      	ldr	r3, [r7, #12]
 8006ca6:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006ca8:	e053      	b.n	8006d52 <HAL_SPI_TransmitReceive+0x1d8>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006caa:	68fb      	ldr	r3, [r7, #12]
 8006cac:	681b      	ldr	r3, [r3, #0]
 8006cae:	689b      	ldr	r3, [r3, #8]
 8006cb0:	f003 0302 	and.w	r3, r3, #2
 8006cb4:	2b02      	cmp	r3, #2
 8006cb6:	d11b      	bne.n	8006cf0 <HAL_SPI_TransmitReceive+0x176>
 8006cb8:	68fb      	ldr	r3, [r7, #12]
 8006cba:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006cbc:	b29b      	uxth	r3, r3
 8006cbe:	2b00      	cmp	r3, #0
 8006cc0:	d016      	beq.n	8006cf0 <HAL_SPI_TransmitReceive+0x176>
 8006cc2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006cc4:	2b01      	cmp	r3, #1
 8006cc6:	d113      	bne.n	8006cf0 <HAL_SPI_TransmitReceive+0x176>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006cc8:	68fb      	ldr	r3, [r7, #12]
 8006cca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006ccc:	881a      	ldrh	r2, [r3, #0]
 8006cce:	68fb      	ldr	r3, [r7, #12]
 8006cd0:	681b      	ldr	r3, [r3, #0]
 8006cd2:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006cd4:	68fb      	ldr	r3, [r7, #12]
 8006cd6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006cd8:	1c9a      	adds	r2, r3, #2
 8006cda:	68fb      	ldr	r3, [r7, #12]
 8006cdc:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8006cde:	68fb      	ldr	r3, [r7, #12]
 8006ce0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006ce2:	b29b      	uxth	r3, r3
 8006ce4:	3b01      	subs	r3, #1
 8006ce6:	b29a      	uxth	r2, r3
 8006ce8:	68fb      	ldr	r3, [r7, #12]
 8006cea:	86da      	strh	r2, [r3, #54]	; 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8006cec:	2300      	movs	r3, #0
 8006cee:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
#endif /* USE_SPI_CRC */
      }

      /* Check RXNE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006cf0:	68fb      	ldr	r3, [r7, #12]
 8006cf2:	681b      	ldr	r3, [r3, #0]
 8006cf4:	689b      	ldr	r3, [r3, #8]
 8006cf6:	f003 0301 	and.w	r3, r3, #1
 8006cfa:	2b01      	cmp	r3, #1
 8006cfc:	d119      	bne.n	8006d32 <HAL_SPI_TransmitReceive+0x1b8>
 8006cfe:	68fb      	ldr	r3, [r7, #12]
 8006d00:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006d02:	b29b      	uxth	r3, r3
 8006d04:	2b00      	cmp	r3, #0
 8006d06:	d014      	beq.n	8006d32 <HAL_SPI_TransmitReceive+0x1b8>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006d08:	68fb      	ldr	r3, [r7, #12]
 8006d0a:	681b      	ldr	r3, [r3, #0]
 8006d0c:	68da      	ldr	r2, [r3, #12]
 8006d0e:	68fb      	ldr	r3, [r7, #12]
 8006d10:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006d12:	b292      	uxth	r2, r2
 8006d14:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006d16:	68fb      	ldr	r3, [r7, #12]
 8006d18:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006d1a:	1c9a      	adds	r2, r3, #2
 8006d1c:	68fb      	ldr	r3, [r7, #12]
 8006d1e:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 8006d20:	68fb      	ldr	r3, [r7, #12]
 8006d22:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006d24:	b29b      	uxth	r3, r3
 8006d26:	3b01      	subs	r3, #1
 8006d28:	b29a      	uxth	r2, r3
 8006d2a:	68fb      	ldr	r3, [r7, #12]
 8006d2c:	87da      	strh	r2, [r3, #62]	; 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8006d2e:	2301      	movs	r3, #1
 8006d30:	62fb      	str	r3, [r7, #44]	; 0x2c
      }
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8006d32:	f7fb fe55 	bl	80029e0 <HAL_GetTick>
 8006d36:	4602      	mov	r2, r0
 8006d38:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006d3a:	1ad3      	subs	r3, r2, r3
 8006d3c:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8006d3e:	429a      	cmp	r2, r3
 8006d40:	d807      	bhi.n	8006d52 <HAL_SPI_TransmitReceive+0x1d8>
 8006d42:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006d44:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8006d48:	d003      	beq.n	8006d52 <HAL_SPI_TransmitReceive+0x1d8>
      {
        errorcode = HAL_TIMEOUT;
 8006d4a:	2303      	movs	r3, #3
 8006d4c:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
        goto error;
 8006d50:	e0a7      	b.n	8006ea2 <HAL_SPI_TransmitReceive+0x328>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006d52:	68fb      	ldr	r3, [r7, #12]
 8006d54:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006d56:	b29b      	uxth	r3, r3
 8006d58:	2b00      	cmp	r3, #0
 8006d5a:	d1a6      	bne.n	8006caa <HAL_SPI_TransmitReceive+0x130>
 8006d5c:	68fb      	ldr	r3, [r7, #12]
 8006d5e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006d60:	b29b      	uxth	r3, r3
 8006d62:	2b00      	cmp	r3, #0
 8006d64:	d1a1      	bne.n	8006caa <HAL_SPI_TransmitReceive+0x130>
 8006d66:	e07c      	b.n	8006e62 <HAL_SPI_TransmitReceive+0x2e8>
    }
  }
  /* Transmit and Receive data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006d68:	68fb      	ldr	r3, [r7, #12]
 8006d6a:	685b      	ldr	r3, [r3, #4]
 8006d6c:	2b00      	cmp	r3, #0
 8006d6e:	d002      	beq.n	8006d76 <HAL_SPI_TransmitReceive+0x1fc>
 8006d70:	8b7b      	ldrh	r3, [r7, #26]
 8006d72:	2b01      	cmp	r3, #1
 8006d74:	d16b      	bne.n	8006e4e <HAL_SPI_TransmitReceive+0x2d4>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006d76:	68fb      	ldr	r3, [r7, #12]
 8006d78:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006d7a:	68fb      	ldr	r3, [r7, #12]
 8006d7c:	681b      	ldr	r3, [r3, #0]
 8006d7e:	330c      	adds	r3, #12
 8006d80:	7812      	ldrb	r2, [r2, #0]
 8006d82:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006d84:	68fb      	ldr	r3, [r7, #12]
 8006d86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006d88:	1c5a      	adds	r2, r3, #1
 8006d8a:	68fb      	ldr	r3, [r7, #12]
 8006d8c:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8006d8e:	68fb      	ldr	r3, [r7, #12]
 8006d90:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006d92:	b29b      	uxth	r3, r3
 8006d94:	3b01      	subs	r3, #1
 8006d96:	b29a      	uxth	r2, r3
 8006d98:	68fb      	ldr	r3, [r7, #12]
 8006d9a:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006d9c:	e057      	b.n	8006e4e <HAL_SPI_TransmitReceive+0x2d4>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006d9e:	68fb      	ldr	r3, [r7, #12]
 8006da0:	681b      	ldr	r3, [r3, #0]
 8006da2:	689b      	ldr	r3, [r3, #8]
 8006da4:	f003 0302 	and.w	r3, r3, #2
 8006da8:	2b02      	cmp	r3, #2
 8006daa:	d11c      	bne.n	8006de6 <HAL_SPI_TransmitReceive+0x26c>
 8006dac:	68fb      	ldr	r3, [r7, #12]
 8006dae:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006db0:	b29b      	uxth	r3, r3
 8006db2:	2b00      	cmp	r3, #0
 8006db4:	d017      	beq.n	8006de6 <HAL_SPI_TransmitReceive+0x26c>
 8006db6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006db8:	2b01      	cmp	r3, #1
 8006dba:	d114      	bne.n	8006de6 <HAL_SPI_TransmitReceive+0x26c>
      {
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8006dbc:	68fb      	ldr	r3, [r7, #12]
 8006dbe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006dc0:	68fb      	ldr	r3, [r7, #12]
 8006dc2:	681b      	ldr	r3, [r3, #0]
 8006dc4:	330c      	adds	r3, #12
 8006dc6:	7812      	ldrb	r2, [r2, #0]
 8006dc8:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr++;
 8006dca:	68fb      	ldr	r3, [r7, #12]
 8006dcc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006dce:	1c5a      	adds	r2, r3, #1
 8006dd0:	68fb      	ldr	r3, [r7, #12]
 8006dd2:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8006dd4:	68fb      	ldr	r3, [r7, #12]
 8006dd6:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006dd8:	b29b      	uxth	r3, r3
 8006dda:	3b01      	subs	r3, #1
 8006ddc:	b29a      	uxth	r2, r3
 8006dde:	68fb      	ldr	r3, [r7, #12]
 8006de0:	86da      	strh	r2, [r3, #54]	; 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8006de2:	2300      	movs	r3, #0
 8006de4:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
#endif /* USE_SPI_CRC */
      }

      /* Wait until RXNE flag is reset */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006de6:	68fb      	ldr	r3, [r7, #12]
 8006de8:	681b      	ldr	r3, [r3, #0]
 8006dea:	689b      	ldr	r3, [r3, #8]
 8006dec:	f003 0301 	and.w	r3, r3, #1
 8006df0:	2b01      	cmp	r3, #1
 8006df2:	d119      	bne.n	8006e28 <HAL_SPI_TransmitReceive+0x2ae>
 8006df4:	68fb      	ldr	r3, [r7, #12]
 8006df6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006df8:	b29b      	uxth	r3, r3
 8006dfa:	2b00      	cmp	r3, #0
 8006dfc:	d014      	beq.n	8006e28 <HAL_SPI_TransmitReceive+0x2ae>
      {
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8006dfe:	68fb      	ldr	r3, [r7, #12]
 8006e00:	681b      	ldr	r3, [r3, #0]
 8006e02:	68da      	ldr	r2, [r3, #12]
 8006e04:	68fb      	ldr	r3, [r7, #12]
 8006e06:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006e08:	b2d2      	uxtb	r2, r2
 8006e0a:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8006e0c:	68fb      	ldr	r3, [r7, #12]
 8006e0e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006e10:	1c5a      	adds	r2, r3, #1
 8006e12:	68fb      	ldr	r3, [r7, #12]
 8006e14:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 8006e16:	68fb      	ldr	r3, [r7, #12]
 8006e18:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006e1a:	b29b      	uxth	r3, r3
 8006e1c:	3b01      	subs	r3, #1
 8006e1e:	b29a      	uxth	r2, r3
 8006e20:	68fb      	ldr	r3, [r7, #12]
 8006e22:	87da      	strh	r2, [r3, #62]	; 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8006e24:	2301      	movs	r3, #1
 8006e26:	62fb      	str	r3, [r7, #44]	; 0x2c
      }
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8006e28:	f7fb fdda 	bl	80029e0 <HAL_GetTick>
 8006e2c:	4602      	mov	r2, r0
 8006e2e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006e30:	1ad3      	subs	r3, r2, r3
 8006e32:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8006e34:	429a      	cmp	r2, r3
 8006e36:	d803      	bhi.n	8006e40 <HAL_SPI_TransmitReceive+0x2c6>
 8006e38:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006e3a:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8006e3e:	d102      	bne.n	8006e46 <HAL_SPI_TransmitReceive+0x2cc>
 8006e40:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006e42:	2b00      	cmp	r3, #0
 8006e44:	d103      	bne.n	8006e4e <HAL_SPI_TransmitReceive+0x2d4>
      {
        errorcode = HAL_TIMEOUT;
 8006e46:	2303      	movs	r3, #3
 8006e48:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
        goto error;
 8006e4c:	e029      	b.n	8006ea2 <HAL_SPI_TransmitReceive+0x328>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006e4e:	68fb      	ldr	r3, [r7, #12]
 8006e50:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006e52:	b29b      	uxth	r3, r3
 8006e54:	2b00      	cmp	r3, #0
 8006e56:	d1a2      	bne.n	8006d9e <HAL_SPI_TransmitReceive+0x224>
 8006e58:	68fb      	ldr	r3, [r7, #12]
 8006e5a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006e5c:	b29b      	uxth	r3, r3
 8006e5e:	2b00      	cmp	r3, #0
 8006e60:	d19d      	bne.n	8006d9e <HAL_SPI_TransmitReceive+0x224>
    errorcode = HAL_ERROR;
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006e62:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006e64:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8006e66:	68f8      	ldr	r0, [r7, #12]
 8006e68:	f000 f8b2 	bl	8006fd0 <SPI_EndRxTxTransaction>
 8006e6c:	4603      	mov	r3, r0
 8006e6e:	2b00      	cmp	r3, #0
 8006e70:	d006      	beq.n	8006e80 <HAL_SPI_TransmitReceive+0x306>
  {
    errorcode = HAL_ERROR;
 8006e72:	2301      	movs	r3, #1
 8006e74:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006e78:	68fb      	ldr	r3, [r7, #12]
 8006e7a:	2220      	movs	r2, #32
 8006e7c:	655a      	str	r2, [r3, #84]	; 0x54
    goto error;
 8006e7e:	e010      	b.n	8006ea2 <HAL_SPI_TransmitReceive+0x328>
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006e80:	68fb      	ldr	r3, [r7, #12]
 8006e82:	689b      	ldr	r3, [r3, #8]
 8006e84:	2b00      	cmp	r3, #0
 8006e86:	d10b      	bne.n	8006ea0 <HAL_SPI_TransmitReceive+0x326>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006e88:	2300      	movs	r3, #0
 8006e8a:	617b      	str	r3, [r7, #20]
 8006e8c:	68fb      	ldr	r3, [r7, #12]
 8006e8e:	681b      	ldr	r3, [r3, #0]
 8006e90:	68db      	ldr	r3, [r3, #12]
 8006e92:	617b      	str	r3, [r7, #20]
 8006e94:	68fb      	ldr	r3, [r7, #12]
 8006e96:	681b      	ldr	r3, [r3, #0]
 8006e98:	689b      	ldr	r3, [r3, #8]
 8006e9a:	617b      	str	r3, [r7, #20]
 8006e9c:	697b      	ldr	r3, [r7, #20]
 8006e9e:	e000      	b.n	8006ea2 <HAL_SPI_TransmitReceive+0x328>
  }

error :
 8006ea0:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 8006ea2:	68fb      	ldr	r3, [r7, #12]
 8006ea4:	2201      	movs	r2, #1
 8006ea6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8006eaa:	68fb      	ldr	r3, [r7, #12]
 8006eac:	2200      	movs	r2, #0
 8006eae:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 8006eb2:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
}
 8006eb6:	4618      	mov	r0, r3
 8006eb8:	3730      	adds	r7, #48	; 0x30
 8006eba:	46bd      	mov	sp, r7
 8006ebc:	bd80      	pop	{r7, pc}
	...

08006ec0 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8006ec0:	b580      	push	{r7, lr}
 8006ec2:	b088      	sub	sp, #32
 8006ec4:	af00      	add	r7, sp, #0
 8006ec6:	60f8      	str	r0, [r7, #12]
 8006ec8:	60b9      	str	r1, [r7, #8]
 8006eca:	603b      	str	r3, [r7, #0]
 8006ecc:	4613      	mov	r3, r2
 8006ece:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8006ed0:	f7fb fd86 	bl	80029e0 <HAL_GetTick>
 8006ed4:	4602      	mov	r2, r0
 8006ed6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006ed8:	1a9b      	subs	r3, r3, r2
 8006eda:	683a      	ldr	r2, [r7, #0]
 8006edc:	4413      	add	r3, r2
 8006ede:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8006ee0:	f7fb fd7e 	bl	80029e0 <HAL_GetTick>
 8006ee4:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8006ee6:	4b39      	ldr	r3, [pc, #228]	; (8006fcc <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8006ee8:	681b      	ldr	r3, [r3, #0]
 8006eea:	015b      	lsls	r3, r3, #5
 8006eec:	0d1b      	lsrs	r3, r3, #20
 8006eee:	69fa      	ldr	r2, [r7, #28]
 8006ef0:	fb02 f303 	mul.w	r3, r2, r3
 8006ef4:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006ef6:	e054      	b.n	8006fa2 <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 8006ef8:	683b      	ldr	r3, [r7, #0]
 8006efa:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8006efe:	d050      	beq.n	8006fa2 <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8006f00:	f7fb fd6e 	bl	80029e0 <HAL_GetTick>
 8006f04:	4602      	mov	r2, r0
 8006f06:	69bb      	ldr	r3, [r7, #24]
 8006f08:	1ad3      	subs	r3, r2, r3
 8006f0a:	69fa      	ldr	r2, [r7, #28]
 8006f0c:	429a      	cmp	r2, r3
 8006f0e:	d902      	bls.n	8006f16 <SPI_WaitFlagStateUntilTimeout+0x56>
 8006f10:	69fb      	ldr	r3, [r7, #28]
 8006f12:	2b00      	cmp	r3, #0
 8006f14:	d13d      	bne.n	8006f92 <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8006f16:	68fb      	ldr	r3, [r7, #12]
 8006f18:	681b      	ldr	r3, [r3, #0]
 8006f1a:	685a      	ldr	r2, [r3, #4]
 8006f1c:	68fb      	ldr	r3, [r7, #12]
 8006f1e:	681b      	ldr	r3, [r3, #0]
 8006f20:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8006f24:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006f26:	68fb      	ldr	r3, [r7, #12]
 8006f28:	685b      	ldr	r3, [r3, #4]
 8006f2a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006f2e:	d111      	bne.n	8006f54 <SPI_WaitFlagStateUntilTimeout+0x94>
 8006f30:	68fb      	ldr	r3, [r7, #12]
 8006f32:	689b      	ldr	r3, [r3, #8]
 8006f34:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8006f38:	d004      	beq.n	8006f44 <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006f3a:	68fb      	ldr	r3, [r7, #12]
 8006f3c:	689b      	ldr	r3, [r3, #8]
 8006f3e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8006f42:	d107      	bne.n	8006f54 <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8006f44:	68fb      	ldr	r3, [r7, #12]
 8006f46:	681b      	ldr	r3, [r3, #0]
 8006f48:	681a      	ldr	r2, [r3, #0]
 8006f4a:	68fb      	ldr	r3, [r7, #12]
 8006f4c:	681b      	ldr	r3, [r3, #0]
 8006f4e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006f52:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8006f54:	68fb      	ldr	r3, [r7, #12]
 8006f56:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006f58:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006f5c:	d10f      	bne.n	8006f7e <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 8006f5e:	68fb      	ldr	r3, [r7, #12]
 8006f60:	681b      	ldr	r3, [r3, #0]
 8006f62:	681a      	ldr	r2, [r3, #0]
 8006f64:	68fb      	ldr	r3, [r7, #12]
 8006f66:	681b      	ldr	r3, [r3, #0]
 8006f68:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8006f6c:	601a      	str	r2, [r3, #0]
 8006f6e:	68fb      	ldr	r3, [r7, #12]
 8006f70:	681b      	ldr	r3, [r3, #0]
 8006f72:	681a      	ldr	r2, [r3, #0]
 8006f74:	68fb      	ldr	r3, [r7, #12]
 8006f76:	681b      	ldr	r3, [r3, #0]
 8006f78:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006f7c:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8006f7e:	68fb      	ldr	r3, [r7, #12]
 8006f80:	2201      	movs	r2, #1
 8006f82:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8006f86:	68fb      	ldr	r3, [r7, #12]
 8006f88:	2200      	movs	r2, #0
 8006f8a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

        return HAL_TIMEOUT;
 8006f8e:	2303      	movs	r3, #3
 8006f90:	e017      	b.n	8006fc2 <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8006f92:	697b      	ldr	r3, [r7, #20]
 8006f94:	2b00      	cmp	r3, #0
 8006f96:	d101      	bne.n	8006f9c <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 8006f98:	2300      	movs	r3, #0
 8006f9a:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8006f9c:	697b      	ldr	r3, [r7, #20]
 8006f9e:	3b01      	subs	r3, #1
 8006fa0:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006fa2:	68fb      	ldr	r3, [r7, #12]
 8006fa4:	681b      	ldr	r3, [r3, #0]
 8006fa6:	689a      	ldr	r2, [r3, #8]
 8006fa8:	68bb      	ldr	r3, [r7, #8]
 8006faa:	4013      	ands	r3, r2
 8006fac:	68ba      	ldr	r2, [r7, #8]
 8006fae:	429a      	cmp	r2, r3
 8006fb0:	bf0c      	ite	eq
 8006fb2:	2301      	moveq	r3, #1
 8006fb4:	2300      	movne	r3, #0
 8006fb6:	b2db      	uxtb	r3, r3
 8006fb8:	461a      	mov	r2, r3
 8006fba:	79fb      	ldrb	r3, [r7, #7]
 8006fbc:	429a      	cmp	r2, r3
 8006fbe:	d19b      	bne.n	8006ef8 <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 8006fc0:	2300      	movs	r3, #0
}
 8006fc2:	4618      	mov	r0, r3
 8006fc4:	3720      	adds	r7, #32
 8006fc6:	46bd      	mov	sp, r7
 8006fc8:	bd80      	pop	{r7, pc}
 8006fca:	bf00      	nop
 8006fcc:	20000030 	.word	0x20000030

08006fd0 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8006fd0:	b580      	push	{r7, lr}
 8006fd2:	b088      	sub	sp, #32
 8006fd4:	af02      	add	r7, sp, #8
 8006fd6:	60f8      	str	r0, [r7, #12]
 8006fd8:	60b9      	str	r1, [r7, #8]
 8006fda:	607a      	str	r2, [r7, #4]
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006fdc:	4b1b      	ldr	r3, [pc, #108]	; (800704c <SPI_EndRxTxTransaction+0x7c>)
 8006fde:	681b      	ldr	r3, [r3, #0]
 8006fe0:	4a1b      	ldr	r2, [pc, #108]	; (8007050 <SPI_EndRxTxTransaction+0x80>)
 8006fe2:	fba2 2303 	umull	r2, r3, r2, r3
 8006fe6:	0d5b      	lsrs	r3, r3, #21
 8006fe8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8006fec:	fb02 f303 	mul.w	r3, r2, r3
 8006ff0:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006ff2:	68fb      	ldr	r3, [r7, #12]
 8006ff4:	685b      	ldr	r3, [r3, #4]
 8006ff6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006ffa:	d112      	bne.n	8007022 <SPI_EndRxTxTransaction+0x52>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006ffc:	687b      	ldr	r3, [r7, #4]
 8006ffe:	9300      	str	r3, [sp, #0]
 8007000:	68bb      	ldr	r3, [r7, #8]
 8007002:	2200      	movs	r2, #0
 8007004:	2180      	movs	r1, #128	; 0x80
 8007006:	68f8      	ldr	r0, [r7, #12]
 8007008:	f7ff ff5a 	bl	8006ec0 <SPI_WaitFlagStateUntilTimeout>
 800700c:	4603      	mov	r3, r0
 800700e:	2b00      	cmp	r3, #0
 8007010:	d016      	beq.n	8007040 <SPI_EndRxTxTransaction+0x70>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007012:	68fb      	ldr	r3, [r7, #12]
 8007014:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007016:	f043 0220 	orr.w	r2, r3, #32
 800701a:	68fb      	ldr	r3, [r7, #12]
 800701c:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 800701e:	2303      	movs	r3, #3
 8007020:	e00f      	b.n	8007042 <SPI_EndRxTxTransaction+0x72>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 8007022:	697b      	ldr	r3, [r7, #20]
 8007024:	2b00      	cmp	r3, #0
 8007026:	d00a      	beq.n	800703e <SPI_EndRxTxTransaction+0x6e>
      {
        break;
      }
      count--;
 8007028:	697b      	ldr	r3, [r7, #20]
 800702a:	3b01      	subs	r3, #1
 800702c:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800702e:	68fb      	ldr	r3, [r7, #12]
 8007030:	681b      	ldr	r3, [r3, #0]
 8007032:	689b      	ldr	r3, [r3, #8]
 8007034:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007038:	2b80      	cmp	r3, #128	; 0x80
 800703a:	d0f2      	beq.n	8007022 <SPI_EndRxTxTransaction+0x52>
 800703c:	e000      	b.n	8007040 <SPI_EndRxTxTransaction+0x70>
        break;
 800703e:	bf00      	nop
  }

  return HAL_OK;
 8007040:	2300      	movs	r3, #0
}
 8007042:	4618      	mov	r0, r3
 8007044:	3718      	adds	r7, #24
 8007046:	46bd      	mov	sp, r7
 8007048:	bd80      	pop	{r7, pc}
 800704a:	bf00      	nop
 800704c:	20000030 	.word	0x20000030
 8007050:	165e9f81 	.word	0x165e9f81

08007054 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8007054:	b580      	push	{r7, lr}
 8007056:	b082      	sub	sp, #8
 8007058:	af00      	add	r7, sp, #0
 800705a:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800705c:	687b      	ldr	r3, [r7, #4]
 800705e:	2b00      	cmp	r3, #0
 8007060:	d101      	bne.n	8007066 <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8007062:	2301      	movs	r3, #1
 8007064:	e041      	b.n	80070ea <HAL_TIM_Base_Init+0x96>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8007066:	687b      	ldr	r3, [r7, #4]
 8007068:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800706c:	b2db      	uxtb	r3, r3
 800706e:	2b00      	cmp	r3, #0
 8007070:	d106      	bne.n	8007080 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8007072:	687b      	ldr	r3, [r7, #4]
 8007074:	2200      	movs	r2, #0
 8007076:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 800707a:	6878      	ldr	r0, [r7, #4]
 800707c:	f7fb f92c 	bl	80022d8 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007080:	687b      	ldr	r3, [r7, #4]
 8007082:	2202      	movs	r2, #2
 8007084:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007088:	687b      	ldr	r3, [r7, #4]
 800708a:	681a      	ldr	r2, [r3, #0]
 800708c:	687b      	ldr	r3, [r7, #4]
 800708e:	3304      	adds	r3, #4
 8007090:	4619      	mov	r1, r3
 8007092:	4610      	mov	r0, r2
 8007094:	f000 fa96 	bl	80075c4 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8007098:	687b      	ldr	r3, [r7, #4]
 800709a:	2201      	movs	r2, #1
 800709c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80070a0:	687b      	ldr	r3, [r7, #4]
 80070a2:	2201      	movs	r2, #1
 80070a4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80070a8:	687b      	ldr	r3, [r7, #4]
 80070aa:	2201      	movs	r2, #1
 80070ac:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80070b0:	687b      	ldr	r3, [r7, #4]
 80070b2:	2201      	movs	r2, #1
 80070b4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80070b8:	687b      	ldr	r3, [r7, #4]
 80070ba:	2201      	movs	r2, #1
 80070bc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80070c0:	687b      	ldr	r3, [r7, #4]
 80070c2:	2201      	movs	r2, #1
 80070c4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80070c8:	687b      	ldr	r3, [r7, #4]
 80070ca:	2201      	movs	r2, #1
 80070cc:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80070d0:	687b      	ldr	r3, [r7, #4]
 80070d2:	2201      	movs	r2, #1
 80070d4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80070d8:	687b      	ldr	r3, [r7, #4]
 80070da:	2201      	movs	r2, #1
 80070dc:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 80070e0:	687b      	ldr	r3, [r7, #4]
 80070e2:	2201      	movs	r2, #1
 80070e4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 80070e8:	2300      	movs	r3, #0
}
 80070ea:	4618      	mov	r0, r3
 80070ec:	3708      	adds	r7, #8
 80070ee:	46bd      	mov	sp, r7
 80070f0:	bd80      	pop	{r7, pc}
	...

080070f4 <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 80070f4:	b480      	push	{r7}
 80070f6:	b085      	sub	sp, #20
 80070f8:	af00      	add	r7, sp, #0
 80070fa:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80070fc:	687b      	ldr	r3, [r7, #4]
 80070fe:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007102:	b2db      	uxtb	r3, r3
 8007104:	2b01      	cmp	r3, #1
 8007106:	d001      	beq.n	800710c <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 8007108:	2301      	movs	r3, #1
 800710a:	e04e      	b.n	80071aa <HAL_TIM_Base_Start_IT+0xb6>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800710c:	687b      	ldr	r3, [r7, #4]
 800710e:	2202      	movs	r2, #2
 8007110:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8007114:	687b      	ldr	r3, [r7, #4]
 8007116:	681b      	ldr	r3, [r3, #0]
 8007118:	68da      	ldr	r2, [r3, #12]
 800711a:	687b      	ldr	r3, [r7, #4]
 800711c:	681b      	ldr	r3, [r3, #0]
 800711e:	f042 0201 	orr.w	r2, r2, #1
 8007122:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007124:	687b      	ldr	r3, [r7, #4]
 8007126:	681b      	ldr	r3, [r3, #0]
 8007128:	4a23      	ldr	r2, [pc, #140]	; (80071b8 <HAL_TIM_Base_Start_IT+0xc4>)
 800712a:	4293      	cmp	r3, r2
 800712c:	d022      	beq.n	8007174 <HAL_TIM_Base_Start_IT+0x80>
 800712e:	687b      	ldr	r3, [r7, #4]
 8007130:	681b      	ldr	r3, [r3, #0]
 8007132:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007136:	d01d      	beq.n	8007174 <HAL_TIM_Base_Start_IT+0x80>
 8007138:	687b      	ldr	r3, [r7, #4]
 800713a:	681b      	ldr	r3, [r3, #0]
 800713c:	4a1f      	ldr	r2, [pc, #124]	; (80071bc <HAL_TIM_Base_Start_IT+0xc8>)
 800713e:	4293      	cmp	r3, r2
 8007140:	d018      	beq.n	8007174 <HAL_TIM_Base_Start_IT+0x80>
 8007142:	687b      	ldr	r3, [r7, #4]
 8007144:	681b      	ldr	r3, [r3, #0]
 8007146:	4a1e      	ldr	r2, [pc, #120]	; (80071c0 <HAL_TIM_Base_Start_IT+0xcc>)
 8007148:	4293      	cmp	r3, r2
 800714a:	d013      	beq.n	8007174 <HAL_TIM_Base_Start_IT+0x80>
 800714c:	687b      	ldr	r3, [r7, #4]
 800714e:	681b      	ldr	r3, [r3, #0]
 8007150:	4a1c      	ldr	r2, [pc, #112]	; (80071c4 <HAL_TIM_Base_Start_IT+0xd0>)
 8007152:	4293      	cmp	r3, r2
 8007154:	d00e      	beq.n	8007174 <HAL_TIM_Base_Start_IT+0x80>
 8007156:	687b      	ldr	r3, [r7, #4]
 8007158:	681b      	ldr	r3, [r3, #0]
 800715a:	4a1b      	ldr	r2, [pc, #108]	; (80071c8 <HAL_TIM_Base_Start_IT+0xd4>)
 800715c:	4293      	cmp	r3, r2
 800715e:	d009      	beq.n	8007174 <HAL_TIM_Base_Start_IT+0x80>
 8007160:	687b      	ldr	r3, [r7, #4]
 8007162:	681b      	ldr	r3, [r3, #0]
 8007164:	4a19      	ldr	r2, [pc, #100]	; (80071cc <HAL_TIM_Base_Start_IT+0xd8>)
 8007166:	4293      	cmp	r3, r2
 8007168:	d004      	beq.n	8007174 <HAL_TIM_Base_Start_IT+0x80>
 800716a:	687b      	ldr	r3, [r7, #4]
 800716c:	681b      	ldr	r3, [r3, #0]
 800716e:	4a18      	ldr	r2, [pc, #96]	; (80071d0 <HAL_TIM_Base_Start_IT+0xdc>)
 8007170:	4293      	cmp	r3, r2
 8007172:	d111      	bne.n	8007198 <HAL_TIM_Base_Start_IT+0xa4>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007174:	687b      	ldr	r3, [r7, #4]
 8007176:	681b      	ldr	r3, [r3, #0]
 8007178:	689b      	ldr	r3, [r3, #8]
 800717a:	f003 0307 	and.w	r3, r3, #7
 800717e:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007180:	68fb      	ldr	r3, [r7, #12]
 8007182:	2b06      	cmp	r3, #6
 8007184:	d010      	beq.n	80071a8 <HAL_TIM_Base_Start_IT+0xb4>
    {
      __HAL_TIM_ENABLE(htim);
 8007186:	687b      	ldr	r3, [r7, #4]
 8007188:	681b      	ldr	r3, [r3, #0]
 800718a:	681a      	ldr	r2, [r3, #0]
 800718c:	687b      	ldr	r3, [r7, #4]
 800718e:	681b      	ldr	r3, [r3, #0]
 8007190:	f042 0201 	orr.w	r2, r2, #1
 8007194:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007196:	e007      	b.n	80071a8 <HAL_TIM_Base_Start_IT+0xb4>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8007198:	687b      	ldr	r3, [r7, #4]
 800719a:	681b      	ldr	r3, [r3, #0]
 800719c:	681a      	ldr	r2, [r3, #0]
 800719e:	687b      	ldr	r3, [r7, #4]
 80071a0:	681b      	ldr	r3, [r3, #0]
 80071a2:	f042 0201 	orr.w	r2, r2, #1
 80071a6:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80071a8:	2300      	movs	r3, #0
}
 80071aa:	4618      	mov	r0, r3
 80071ac:	3714      	adds	r7, #20
 80071ae:	46bd      	mov	sp, r7
 80071b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071b4:	4770      	bx	lr
 80071b6:	bf00      	nop
 80071b8:	40010000 	.word	0x40010000
 80071bc:	40000400 	.word	0x40000400
 80071c0:	40000800 	.word	0x40000800
 80071c4:	40000c00 	.word	0x40000c00
 80071c8:	40010400 	.word	0x40010400
 80071cc:	40014000 	.word	0x40014000
 80071d0:	40001800 	.word	0x40001800

080071d4 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 80071d4:	b580      	push	{r7, lr}
 80071d6:	b082      	sub	sp, #8
 80071d8:	af00      	add	r7, sp, #0
 80071da:	6078      	str	r0, [r7, #4]
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80071dc:	687b      	ldr	r3, [r7, #4]
 80071de:	681b      	ldr	r3, [r3, #0]
 80071e0:	691b      	ldr	r3, [r3, #16]
 80071e2:	f003 0302 	and.w	r3, r3, #2
 80071e6:	2b02      	cmp	r3, #2
 80071e8:	d122      	bne.n	8007230 <HAL_TIM_IRQHandler+0x5c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80071ea:	687b      	ldr	r3, [r7, #4]
 80071ec:	681b      	ldr	r3, [r3, #0]
 80071ee:	68db      	ldr	r3, [r3, #12]
 80071f0:	f003 0302 	and.w	r3, r3, #2
 80071f4:	2b02      	cmp	r3, #2
 80071f6:	d11b      	bne.n	8007230 <HAL_TIM_IRQHandler+0x5c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80071f8:	687b      	ldr	r3, [r7, #4]
 80071fa:	681b      	ldr	r3, [r3, #0]
 80071fc:	f06f 0202 	mvn.w	r2, #2
 8007200:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007202:	687b      	ldr	r3, [r7, #4]
 8007204:	2201      	movs	r2, #1
 8007206:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007208:	687b      	ldr	r3, [r7, #4]
 800720a:	681b      	ldr	r3, [r3, #0]
 800720c:	699b      	ldr	r3, [r3, #24]
 800720e:	f003 0303 	and.w	r3, r3, #3
 8007212:	2b00      	cmp	r3, #0
 8007214:	d003      	beq.n	800721e <HAL_TIM_IRQHandler+0x4a>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8007216:	6878      	ldr	r0, [r7, #4]
 8007218:	f000 f9b5 	bl	8007586 <HAL_TIM_IC_CaptureCallback>
 800721c:	e005      	b.n	800722a <HAL_TIM_IRQHandler+0x56>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800721e:	6878      	ldr	r0, [r7, #4]
 8007220:	f000 f9a7 	bl	8007572 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007224:	6878      	ldr	r0, [r7, #4]
 8007226:	f000 f9b8 	bl	800759a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800722a:	687b      	ldr	r3, [r7, #4]
 800722c:	2200      	movs	r2, #0
 800722e:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8007230:	687b      	ldr	r3, [r7, #4]
 8007232:	681b      	ldr	r3, [r3, #0]
 8007234:	691b      	ldr	r3, [r3, #16]
 8007236:	f003 0304 	and.w	r3, r3, #4
 800723a:	2b04      	cmp	r3, #4
 800723c:	d122      	bne.n	8007284 <HAL_TIM_IRQHandler+0xb0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800723e:	687b      	ldr	r3, [r7, #4]
 8007240:	681b      	ldr	r3, [r3, #0]
 8007242:	68db      	ldr	r3, [r3, #12]
 8007244:	f003 0304 	and.w	r3, r3, #4
 8007248:	2b04      	cmp	r3, #4
 800724a:	d11b      	bne.n	8007284 <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800724c:	687b      	ldr	r3, [r7, #4]
 800724e:	681b      	ldr	r3, [r3, #0]
 8007250:	f06f 0204 	mvn.w	r2, #4
 8007254:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8007256:	687b      	ldr	r3, [r7, #4]
 8007258:	2202      	movs	r2, #2
 800725a:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800725c:	687b      	ldr	r3, [r7, #4]
 800725e:	681b      	ldr	r3, [r3, #0]
 8007260:	699b      	ldr	r3, [r3, #24]
 8007262:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8007266:	2b00      	cmp	r3, #0
 8007268:	d003      	beq.n	8007272 <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800726a:	6878      	ldr	r0, [r7, #4]
 800726c:	f000 f98b 	bl	8007586 <HAL_TIM_IC_CaptureCallback>
 8007270:	e005      	b.n	800727e <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007272:	6878      	ldr	r0, [r7, #4]
 8007274:	f000 f97d 	bl	8007572 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007278:	6878      	ldr	r0, [r7, #4]
 800727a:	f000 f98e 	bl	800759a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800727e:	687b      	ldr	r3, [r7, #4]
 8007280:	2200      	movs	r2, #0
 8007282:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8007284:	687b      	ldr	r3, [r7, #4]
 8007286:	681b      	ldr	r3, [r3, #0]
 8007288:	691b      	ldr	r3, [r3, #16]
 800728a:	f003 0308 	and.w	r3, r3, #8
 800728e:	2b08      	cmp	r3, #8
 8007290:	d122      	bne.n	80072d8 <HAL_TIM_IRQHandler+0x104>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8007292:	687b      	ldr	r3, [r7, #4]
 8007294:	681b      	ldr	r3, [r3, #0]
 8007296:	68db      	ldr	r3, [r3, #12]
 8007298:	f003 0308 	and.w	r3, r3, #8
 800729c:	2b08      	cmp	r3, #8
 800729e:	d11b      	bne.n	80072d8 <HAL_TIM_IRQHandler+0x104>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80072a0:	687b      	ldr	r3, [r7, #4]
 80072a2:	681b      	ldr	r3, [r3, #0]
 80072a4:	f06f 0208 	mvn.w	r2, #8
 80072a8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80072aa:	687b      	ldr	r3, [r7, #4]
 80072ac:	2204      	movs	r2, #4
 80072ae:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80072b0:	687b      	ldr	r3, [r7, #4]
 80072b2:	681b      	ldr	r3, [r3, #0]
 80072b4:	69db      	ldr	r3, [r3, #28]
 80072b6:	f003 0303 	and.w	r3, r3, #3
 80072ba:	2b00      	cmp	r3, #0
 80072bc:	d003      	beq.n	80072c6 <HAL_TIM_IRQHandler+0xf2>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80072be:	6878      	ldr	r0, [r7, #4]
 80072c0:	f000 f961 	bl	8007586 <HAL_TIM_IC_CaptureCallback>
 80072c4:	e005      	b.n	80072d2 <HAL_TIM_IRQHandler+0xfe>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80072c6:	6878      	ldr	r0, [r7, #4]
 80072c8:	f000 f953 	bl	8007572 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80072cc:	6878      	ldr	r0, [r7, #4]
 80072ce:	f000 f964 	bl	800759a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80072d2:	687b      	ldr	r3, [r7, #4]
 80072d4:	2200      	movs	r2, #0
 80072d6:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80072d8:	687b      	ldr	r3, [r7, #4]
 80072da:	681b      	ldr	r3, [r3, #0]
 80072dc:	691b      	ldr	r3, [r3, #16]
 80072de:	f003 0310 	and.w	r3, r3, #16
 80072e2:	2b10      	cmp	r3, #16
 80072e4:	d122      	bne.n	800732c <HAL_TIM_IRQHandler+0x158>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80072e6:	687b      	ldr	r3, [r7, #4]
 80072e8:	681b      	ldr	r3, [r3, #0]
 80072ea:	68db      	ldr	r3, [r3, #12]
 80072ec:	f003 0310 	and.w	r3, r3, #16
 80072f0:	2b10      	cmp	r3, #16
 80072f2:	d11b      	bne.n	800732c <HAL_TIM_IRQHandler+0x158>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80072f4:	687b      	ldr	r3, [r7, #4]
 80072f6:	681b      	ldr	r3, [r3, #0]
 80072f8:	f06f 0210 	mvn.w	r2, #16
 80072fc:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80072fe:	687b      	ldr	r3, [r7, #4]
 8007300:	2208      	movs	r2, #8
 8007302:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007304:	687b      	ldr	r3, [r7, #4]
 8007306:	681b      	ldr	r3, [r3, #0]
 8007308:	69db      	ldr	r3, [r3, #28]
 800730a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800730e:	2b00      	cmp	r3, #0
 8007310:	d003      	beq.n	800731a <HAL_TIM_IRQHandler+0x146>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007312:	6878      	ldr	r0, [r7, #4]
 8007314:	f000 f937 	bl	8007586 <HAL_TIM_IC_CaptureCallback>
 8007318:	e005      	b.n	8007326 <HAL_TIM_IRQHandler+0x152>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800731a:	6878      	ldr	r0, [r7, #4]
 800731c:	f000 f929 	bl	8007572 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007320:	6878      	ldr	r0, [r7, #4]
 8007322:	f000 f93a 	bl	800759a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007326:	687b      	ldr	r3, [r7, #4]
 8007328:	2200      	movs	r2, #0
 800732a:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800732c:	687b      	ldr	r3, [r7, #4]
 800732e:	681b      	ldr	r3, [r3, #0]
 8007330:	691b      	ldr	r3, [r3, #16]
 8007332:	f003 0301 	and.w	r3, r3, #1
 8007336:	2b01      	cmp	r3, #1
 8007338:	d10e      	bne.n	8007358 <HAL_TIM_IRQHandler+0x184>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800733a:	687b      	ldr	r3, [r7, #4]
 800733c:	681b      	ldr	r3, [r3, #0]
 800733e:	68db      	ldr	r3, [r3, #12]
 8007340:	f003 0301 	and.w	r3, r3, #1
 8007344:	2b01      	cmp	r3, #1
 8007346:	d107      	bne.n	8007358 <HAL_TIM_IRQHandler+0x184>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8007348:	687b      	ldr	r3, [r7, #4]
 800734a:	681b      	ldr	r3, [r3, #0]
 800734c:	f06f 0201 	mvn.w	r2, #1
 8007350:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8007352:	6878      	ldr	r0, [r7, #4]
 8007354:	f7fa fdbe 	bl	8001ed4 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8007358:	687b      	ldr	r3, [r7, #4]
 800735a:	681b      	ldr	r3, [r3, #0]
 800735c:	691b      	ldr	r3, [r3, #16]
 800735e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007362:	2b80      	cmp	r3, #128	; 0x80
 8007364:	d10e      	bne.n	8007384 <HAL_TIM_IRQHandler+0x1b0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8007366:	687b      	ldr	r3, [r7, #4]
 8007368:	681b      	ldr	r3, [r3, #0]
 800736a:	68db      	ldr	r3, [r3, #12]
 800736c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007370:	2b80      	cmp	r3, #128	; 0x80
 8007372:	d107      	bne.n	8007384 <HAL_TIM_IRQHandler+0x1b0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8007374:	687b      	ldr	r3, [r7, #4]
 8007376:	681b      	ldr	r3, [r3, #0]
 8007378:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800737c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800737e:	6878      	ldr	r0, [r7, #4]
 8007380:	f000 fae0 	bl	8007944 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8007384:	687b      	ldr	r3, [r7, #4]
 8007386:	681b      	ldr	r3, [r3, #0]
 8007388:	691b      	ldr	r3, [r3, #16]
 800738a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800738e:	2b40      	cmp	r3, #64	; 0x40
 8007390:	d10e      	bne.n	80073b0 <HAL_TIM_IRQHandler+0x1dc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8007392:	687b      	ldr	r3, [r7, #4]
 8007394:	681b      	ldr	r3, [r3, #0]
 8007396:	68db      	ldr	r3, [r3, #12]
 8007398:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800739c:	2b40      	cmp	r3, #64	; 0x40
 800739e:	d107      	bne.n	80073b0 <HAL_TIM_IRQHandler+0x1dc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80073a0:	687b      	ldr	r3, [r7, #4]
 80073a2:	681b      	ldr	r3, [r3, #0]
 80073a4:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80073a8:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 80073aa:	6878      	ldr	r0, [r7, #4]
 80073ac:	f000 f8ff 	bl	80075ae <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80073b0:	687b      	ldr	r3, [r7, #4]
 80073b2:	681b      	ldr	r3, [r3, #0]
 80073b4:	691b      	ldr	r3, [r3, #16]
 80073b6:	f003 0320 	and.w	r3, r3, #32
 80073ba:	2b20      	cmp	r3, #32
 80073bc:	d10e      	bne.n	80073dc <HAL_TIM_IRQHandler+0x208>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80073be:	687b      	ldr	r3, [r7, #4]
 80073c0:	681b      	ldr	r3, [r3, #0]
 80073c2:	68db      	ldr	r3, [r3, #12]
 80073c4:	f003 0320 	and.w	r3, r3, #32
 80073c8:	2b20      	cmp	r3, #32
 80073ca:	d107      	bne.n	80073dc <HAL_TIM_IRQHandler+0x208>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80073cc:	687b      	ldr	r3, [r7, #4]
 80073ce:	681b      	ldr	r3, [r3, #0]
 80073d0:	f06f 0220 	mvn.w	r2, #32
 80073d4:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 80073d6:	6878      	ldr	r0, [r7, #4]
 80073d8:	f000 faaa 	bl	8007930 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 80073dc:	bf00      	nop
 80073de:	3708      	adds	r7, #8
 80073e0:	46bd      	mov	sp, r7
 80073e2:	bd80      	pop	{r7, pc}

080073e4 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 80073e4:	b580      	push	{r7, lr}
 80073e6:	b084      	sub	sp, #16
 80073e8:	af00      	add	r7, sp, #0
 80073ea:	6078      	str	r0, [r7, #4]
 80073ec:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80073ee:	2300      	movs	r3, #0
 80073f0:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 80073f2:	687b      	ldr	r3, [r7, #4]
 80073f4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80073f8:	2b01      	cmp	r3, #1
 80073fa:	d101      	bne.n	8007400 <HAL_TIM_ConfigClockSource+0x1c>
 80073fc:	2302      	movs	r3, #2
 80073fe:	e0b4      	b.n	800756a <HAL_TIM_ConfigClockSource+0x186>
 8007400:	687b      	ldr	r3, [r7, #4]
 8007402:	2201      	movs	r2, #1
 8007404:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8007408:	687b      	ldr	r3, [r7, #4]
 800740a:	2202      	movs	r2, #2
 800740c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 8007410:	687b      	ldr	r3, [r7, #4]
 8007412:	681b      	ldr	r3, [r3, #0]
 8007414:	689b      	ldr	r3, [r3, #8]
 8007416:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 8007418:	68bb      	ldr	r3, [r7, #8]
 800741a:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800741e:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007420:	68bb      	ldr	r3, [r7, #8]
 8007422:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8007426:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 8007428:	687b      	ldr	r3, [r7, #4]
 800742a:	681b      	ldr	r3, [r3, #0]
 800742c:	68ba      	ldr	r2, [r7, #8]
 800742e:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 8007430:	683b      	ldr	r3, [r7, #0]
 8007432:	681b      	ldr	r3, [r3, #0]
 8007434:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007438:	d03e      	beq.n	80074b8 <HAL_TIM_ConfigClockSource+0xd4>
 800743a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800743e:	f200 8087 	bhi.w	8007550 <HAL_TIM_ConfigClockSource+0x16c>
 8007442:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007446:	f000 8086 	beq.w	8007556 <HAL_TIM_ConfigClockSource+0x172>
 800744a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800744e:	d87f      	bhi.n	8007550 <HAL_TIM_ConfigClockSource+0x16c>
 8007450:	2b70      	cmp	r3, #112	; 0x70
 8007452:	d01a      	beq.n	800748a <HAL_TIM_ConfigClockSource+0xa6>
 8007454:	2b70      	cmp	r3, #112	; 0x70
 8007456:	d87b      	bhi.n	8007550 <HAL_TIM_ConfigClockSource+0x16c>
 8007458:	2b60      	cmp	r3, #96	; 0x60
 800745a:	d050      	beq.n	80074fe <HAL_TIM_ConfigClockSource+0x11a>
 800745c:	2b60      	cmp	r3, #96	; 0x60
 800745e:	d877      	bhi.n	8007550 <HAL_TIM_ConfigClockSource+0x16c>
 8007460:	2b50      	cmp	r3, #80	; 0x50
 8007462:	d03c      	beq.n	80074de <HAL_TIM_ConfigClockSource+0xfa>
 8007464:	2b50      	cmp	r3, #80	; 0x50
 8007466:	d873      	bhi.n	8007550 <HAL_TIM_ConfigClockSource+0x16c>
 8007468:	2b40      	cmp	r3, #64	; 0x40
 800746a:	d058      	beq.n	800751e <HAL_TIM_ConfigClockSource+0x13a>
 800746c:	2b40      	cmp	r3, #64	; 0x40
 800746e:	d86f      	bhi.n	8007550 <HAL_TIM_ConfigClockSource+0x16c>
 8007470:	2b30      	cmp	r3, #48	; 0x30
 8007472:	d064      	beq.n	800753e <HAL_TIM_ConfigClockSource+0x15a>
 8007474:	2b30      	cmp	r3, #48	; 0x30
 8007476:	d86b      	bhi.n	8007550 <HAL_TIM_ConfigClockSource+0x16c>
 8007478:	2b20      	cmp	r3, #32
 800747a:	d060      	beq.n	800753e <HAL_TIM_ConfigClockSource+0x15a>
 800747c:	2b20      	cmp	r3, #32
 800747e:	d867      	bhi.n	8007550 <HAL_TIM_ConfigClockSource+0x16c>
 8007480:	2b00      	cmp	r3, #0
 8007482:	d05c      	beq.n	800753e <HAL_TIM_ConfigClockSource+0x15a>
 8007484:	2b10      	cmp	r3, #16
 8007486:	d05a      	beq.n	800753e <HAL_TIM_ConfigClockSource+0x15a>
 8007488:	e062      	b.n	8007550 <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 800748a:	687b      	ldr	r3, [r7, #4]
 800748c:	6818      	ldr	r0, [r3, #0]
 800748e:	683b      	ldr	r3, [r7, #0]
 8007490:	6899      	ldr	r1, [r3, #8]
 8007492:	683b      	ldr	r3, [r7, #0]
 8007494:	685a      	ldr	r2, [r3, #4]
 8007496:	683b      	ldr	r3, [r7, #0]
 8007498:	68db      	ldr	r3, [r3, #12]
 800749a:	f000 f9ad 	bl	80077f8 <TIM_ETR_SetConfig>
                        sClockSourceConfig->ClockPrescaler,
                        sClockSourceConfig->ClockPolarity,
                        sClockSourceConfig->ClockFilter);

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 800749e:	687b      	ldr	r3, [r7, #4]
 80074a0:	681b      	ldr	r3, [r3, #0]
 80074a2:	689b      	ldr	r3, [r3, #8]
 80074a4:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 80074a6:	68bb      	ldr	r3, [r7, #8]
 80074a8:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80074ac:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 80074ae:	687b      	ldr	r3, [r7, #4]
 80074b0:	681b      	ldr	r3, [r3, #0]
 80074b2:	68ba      	ldr	r2, [r7, #8]
 80074b4:	609a      	str	r2, [r3, #8]
      break;
 80074b6:	e04f      	b.n	8007558 <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 80074b8:	687b      	ldr	r3, [r7, #4]
 80074ba:	6818      	ldr	r0, [r3, #0]
 80074bc:	683b      	ldr	r3, [r7, #0]
 80074be:	6899      	ldr	r1, [r3, #8]
 80074c0:	683b      	ldr	r3, [r7, #0]
 80074c2:	685a      	ldr	r2, [r3, #4]
 80074c4:	683b      	ldr	r3, [r7, #0]
 80074c6:	68db      	ldr	r3, [r3, #12]
 80074c8:	f000 f996 	bl	80077f8 <TIM_ETR_SetConfig>
                        sClockSourceConfig->ClockPrescaler,
                        sClockSourceConfig->ClockPolarity,
                        sClockSourceConfig->ClockFilter);
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 80074cc:	687b      	ldr	r3, [r7, #4]
 80074ce:	681b      	ldr	r3, [r3, #0]
 80074d0:	689a      	ldr	r2, [r3, #8]
 80074d2:	687b      	ldr	r3, [r7, #4]
 80074d4:	681b      	ldr	r3, [r3, #0]
 80074d6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80074da:	609a      	str	r2, [r3, #8]
      break;
 80074dc:	e03c      	b.n	8007558 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 80074de:	687b      	ldr	r3, [r7, #4]
 80074e0:	6818      	ldr	r0, [r3, #0]
 80074e2:	683b      	ldr	r3, [r7, #0]
 80074e4:	6859      	ldr	r1, [r3, #4]
 80074e6:	683b      	ldr	r3, [r7, #0]
 80074e8:	68db      	ldr	r3, [r3, #12]
 80074ea:	461a      	mov	r2, r3
 80074ec:	f000 f90a 	bl	8007704 <TIM_TI1_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 80074f0:	687b      	ldr	r3, [r7, #4]
 80074f2:	681b      	ldr	r3, [r3, #0]
 80074f4:	2150      	movs	r1, #80	; 0x50
 80074f6:	4618      	mov	r0, r3
 80074f8:	f000 f963 	bl	80077c2 <TIM_ITRx_SetConfig>
      break;
 80074fc:	e02c      	b.n	8007558 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 80074fe:	687b      	ldr	r3, [r7, #4]
 8007500:	6818      	ldr	r0, [r3, #0]
 8007502:	683b      	ldr	r3, [r7, #0]
 8007504:	6859      	ldr	r1, [r3, #4]
 8007506:	683b      	ldr	r3, [r7, #0]
 8007508:	68db      	ldr	r3, [r3, #12]
 800750a:	461a      	mov	r2, r3
 800750c:	f000 f929 	bl	8007762 <TIM_TI2_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 8007510:	687b      	ldr	r3, [r7, #4]
 8007512:	681b      	ldr	r3, [r3, #0]
 8007514:	2160      	movs	r1, #96	; 0x60
 8007516:	4618      	mov	r0, r3
 8007518:	f000 f953 	bl	80077c2 <TIM_ITRx_SetConfig>
      break;
 800751c:	e01c      	b.n	8007558 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 800751e:	687b      	ldr	r3, [r7, #4]
 8007520:	6818      	ldr	r0, [r3, #0]
 8007522:	683b      	ldr	r3, [r7, #0]
 8007524:	6859      	ldr	r1, [r3, #4]
 8007526:	683b      	ldr	r3, [r7, #0]
 8007528:	68db      	ldr	r3, [r3, #12]
 800752a:	461a      	mov	r2, r3
 800752c:	f000 f8ea 	bl	8007704 <TIM_TI1_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 8007530:	687b      	ldr	r3, [r7, #4]
 8007532:	681b      	ldr	r3, [r3, #0]
 8007534:	2140      	movs	r1, #64	; 0x40
 8007536:	4618      	mov	r0, r3
 8007538:	f000 f943 	bl	80077c2 <TIM_ITRx_SetConfig>
      break;
 800753c:	e00c      	b.n	8007558 <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 800753e:	687b      	ldr	r3, [r7, #4]
 8007540:	681a      	ldr	r2, [r3, #0]
 8007542:	683b      	ldr	r3, [r7, #0]
 8007544:	681b      	ldr	r3, [r3, #0]
 8007546:	4619      	mov	r1, r3
 8007548:	4610      	mov	r0, r2
 800754a:	f000 f93a 	bl	80077c2 <TIM_ITRx_SetConfig>
      break;
 800754e:	e003      	b.n	8007558 <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 8007550:	2301      	movs	r3, #1
 8007552:	73fb      	strb	r3, [r7, #15]
      break;
 8007554:	e000      	b.n	8007558 <HAL_TIM_ConfigClockSource+0x174>
      break;
 8007556:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 8007558:	687b      	ldr	r3, [r7, #4]
 800755a:	2201      	movs	r2, #1
 800755c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8007560:	687b      	ldr	r3, [r7, #4]
 8007562:	2200      	movs	r2, #0
 8007564:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 8007568:	7bfb      	ldrb	r3, [r7, #15]
}
 800756a:	4618      	mov	r0, r3
 800756c:	3710      	adds	r7, #16
 800756e:	46bd      	mov	sp, r7
 8007570:	bd80      	pop	{r7, pc}

08007572 <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 8007572:	b480      	push	{r7}
 8007574:	b083      	sub	sp, #12
 8007576:	af00      	add	r7, sp, #0
 8007578:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 800757a:	bf00      	nop
 800757c:	370c      	adds	r7, #12
 800757e:	46bd      	mov	sp, r7
 8007580:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007584:	4770      	bx	lr

08007586 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 8007586:	b480      	push	{r7}
 8007588:	b083      	sub	sp, #12
 800758a:	af00      	add	r7, sp, #0
 800758c:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 800758e:	bf00      	nop
 8007590:	370c      	adds	r7, #12
 8007592:	46bd      	mov	sp, r7
 8007594:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007598:	4770      	bx	lr

0800759a <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 800759a:	b480      	push	{r7}
 800759c:	b083      	sub	sp, #12
 800759e:	af00      	add	r7, sp, #0
 80075a0:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 80075a2:	bf00      	nop
 80075a4:	370c      	adds	r7, #12
 80075a6:	46bd      	mov	sp, r7
 80075a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075ac:	4770      	bx	lr

080075ae <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 80075ae:	b480      	push	{r7}
 80075b0:	b083      	sub	sp, #12
 80075b2:	af00      	add	r7, sp, #0
 80075b4:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 80075b6:	bf00      	nop
 80075b8:	370c      	adds	r7, #12
 80075ba:	46bd      	mov	sp, r7
 80075bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075c0:	4770      	bx	lr
	...

080075c4 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
 80075c4:	b480      	push	{r7}
 80075c6:	b085      	sub	sp, #20
 80075c8:	af00      	add	r7, sp, #0
 80075ca:	6078      	str	r0, [r7, #4]
 80075cc:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 80075ce:	687b      	ldr	r3, [r7, #4]
 80075d0:	681b      	ldr	r3, [r3, #0]
 80075d2:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80075d4:	687b      	ldr	r3, [r7, #4]
 80075d6:	4a40      	ldr	r2, [pc, #256]	; (80076d8 <TIM_Base_SetConfig+0x114>)
 80075d8:	4293      	cmp	r3, r2
 80075da:	d013      	beq.n	8007604 <TIM_Base_SetConfig+0x40>
 80075dc:	687b      	ldr	r3, [r7, #4]
 80075de:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80075e2:	d00f      	beq.n	8007604 <TIM_Base_SetConfig+0x40>
 80075e4:	687b      	ldr	r3, [r7, #4]
 80075e6:	4a3d      	ldr	r2, [pc, #244]	; (80076dc <TIM_Base_SetConfig+0x118>)
 80075e8:	4293      	cmp	r3, r2
 80075ea:	d00b      	beq.n	8007604 <TIM_Base_SetConfig+0x40>
 80075ec:	687b      	ldr	r3, [r7, #4]
 80075ee:	4a3c      	ldr	r2, [pc, #240]	; (80076e0 <TIM_Base_SetConfig+0x11c>)
 80075f0:	4293      	cmp	r3, r2
 80075f2:	d007      	beq.n	8007604 <TIM_Base_SetConfig+0x40>
 80075f4:	687b      	ldr	r3, [r7, #4]
 80075f6:	4a3b      	ldr	r2, [pc, #236]	; (80076e4 <TIM_Base_SetConfig+0x120>)
 80075f8:	4293      	cmp	r3, r2
 80075fa:	d003      	beq.n	8007604 <TIM_Base_SetConfig+0x40>
 80075fc:	687b      	ldr	r3, [r7, #4]
 80075fe:	4a3a      	ldr	r2, [pc, #232]	; (80076e8 <TIM_Base_SetConfig+0x124>)
 8007600:	4293      	cmp	r3, r2
 8007602:	d108      	bne.n	8007616 <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007604:	68fb      	ldr	r3, [r7, #12]
 8007606:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800760a:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 800760c:	683b      	ldr	r3, [r7, #0]
 800760e:	685b      	ldr	r3, [r3, #4]
 8007610:	68fa      	ldr	r2, [r7, #12]
 8007612:	4313      	orrs	r3, r2
 8007614:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007616:	687b      	ldr	r3, [r7, #4]
 8007618:	4a2f      	ldr	r2, [pc, #188]	; (80076d8 <TIM_Base_SetConfig+0x114>)
 800761a:	4293      	cmp	r3, r2
 800761c:	d02b      	beq.n	8007676 <TIM_Base_SetConfig+0xb2>
 800761e:	687b      	ldr	r3, [r7, #4]
 8007620:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007624:	d027      	beq.n	8007676 <TIM_Base_SetConfig+0xb2>
 8007626:	687b      	ldr	r3, [r7, #4]
 8007628:	4a2c      	ldr	r2, [pc, #176]	; (80076dc <TIM_Base_SetConfig+0x118>)
 800762a:	4293      	cmp	r3, r2
 800762c:	d023      	beq.n	8007676 <TIM_Base_SetConfig+0xb2>
 800762e:	687b      	ldr	r3, [r7, #4]
 8007630:	4a2b      	ldr	r2, [pc, #172]	; (80076e0 <TIM_Base_SetConfig+0x11c>)
 8007632:	4293      	cmp	r3, r2
 8007634:	d01f      	beq.n	8007676 <TIM_Base_SetConfig+0xb2>
 8007636:	687b      	ldr	r3, [r7, #4]
 8007638:	4a2a      	ldr	r2, [pc, #168]	; (80076e4 <TIM_Base_SetConfig+0x120>)
 800763a:	4293      	cmp	r3, r2
 800763c:	d01b      	beq.n	8007676 <TIM_Base_SetConfig+0xb2>
 800763e:	687b      	ldr	r3, [r7, #4]
 8007640:	4a29      	ldr	r2, [pc, #164]	; (80076e8 <TIM_Base_SetConfig+0x124>)
 8007642:	4293      	cmp	r3, r2
 8007644:	d017      	beq.n	8007676 <TIM_Base_SetConfig+0xb2>
 8007646:	687b      	ldr	r3, [r7, #4]
 8007648:	4a28      	ldr	r2, [pc, #160]	; (80076ec <TIM_Base_SetConfig+0x128>)
 800764a:	4293      	cmp	r3, r2
 800764c:	d013      	beq.n	8007676 <TIM_Base_SetConfig+0xb2>
 800764e:	687b      	ldr	r3, [r7, #4]
 8007650:	4a27      	ldr	r2, [pc, #156]	; (80076f0 <TIM_Base_SetConfig+0x12c>)
 8007652:	4293      	cmp	r3, r2
 8007654:	d00f      	beq.n	8007676 <TIM_Base_SetConfig+0xb2>
 8007656:	687b      	ldr	r3, [r7, #4]
 8007658:	4a26      	ldr	r2, [pc, #152]	; (80076f4 <TIM_Base_SetConfig+0x130>)
 800765a:	4293      	cmp	r3, r2
 800765c:	d00b      	beq.n	8007676 <TIM_Base_SetConfig+0xb2>
 800765e:	687b      	ldr	r3, [r7, #4]
 8007660:	4a25      	ldr	r2, [pc, #148]	; (80076f8 <TIM_Base_SetConfig+0x134>)
 8007662:	4293      	cmp	r3, r2
 8007664:	d007      	beq.n	8007676 <TIM_Base_SetConfig+0xb2>
 8007666:	687b      	ldr	r3, [r7, #4]
 8007668:	4a24      	ldr	r2, [pc, #144]	; (80076fc <TIM_Base_SetConfig+0x138>)
 800766a:	4293      	cmp	r3, r2
 800766c:	d003      	beq.n	8007676 <TIM_Base_SetConfig+0xb2>
 800766e:	687b      	ldr	r3, [r7, #4]
 8007670:	4a23      	ldr	r2, [pc, #140]	; (8007700 <TIM_Base_SetConfig+0x13c>)
 8007672:	4293      	cmp	r3, r2
 8007674:	d108      	bne.n	8007688 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8007676:	68fb      	ldr	r3, [r7, #12]
 8007678:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800767c:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800767e:	683b      	ldr	r3, [r7, #0]
 8007680:	68db      	ldr	r3, [r3, #12]
 8007682:	68fa      	ldr	r2, [r7, #12]
 8007684:	4313      	orrs	r3, r2
 8007686:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007688:	68fb      	ldr	r3, [r7, #12]
 800768a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800768e:	683b      	ldr	r3, [r7, #0]
 8007690:	695b      	ldr	r3, [r3, #20]
 8007692:	4313      	orrs	r3, r2
 8007694:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8007696:	687b      	ldr	r3, [r7, #4]
 8007698:	68fa      	ldr	r2, [r7, #12]
 800769a:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800769c:	683b      	ldr	r3, [r7, #0]
 800769e:	689a      	ldr	r2, [r3, #8]
 80076a0:	687b      	ldr	r3, [r7, #4]
 80076a2:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80076a4:	683b      	ldr	r3, [r7, #0]
 80076a6:	681a      	ldr	r2, [r3, #0]
 80076a8:	687b      	ldr	r3, [r7, #4]
 80076aa:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80076ac:	687b      	ldr	r3, [r7, #4]
 80076ae:	4a0a      	ldr	r2, [pc, #40]	; (80076d8 <TIM_Base_SetConfig+0x114>)
 80076b0:	4293      	cmp	r3, r2
 80076b2:	d003      	beq.n	80076bc <TIM_Base_SetConfig+0xf8>
 80076b4:	687b      	ldr	r3, [r7, #4]
 80076b6:	4a0c      	ldr	r2, [pc, #48]	; (80076e8 <TIM_Base_SetConfig+0x124>)
 80076b8:	4293      	cmp	r3, r2
 80076ba:	d103      	bne.n	80076c4 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80076bc:	683b      	ldr	r3, [r7, #0]
 80076be:	691a      	ldr	r2, [r3, #16]
 80076c0:	687b      	ldr	r3, [r7, #4]
 80076c2:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80076c4:	687b      	ldr	r3, [r7, #4]
 80076c6:	2201      	movs	r2, #1
 80076c8:	615a      	str	r2, [r3, #20]
}
 80076ca:	bf00      	nop
 80076cc:	3714      	adds	r7, #20
 80076ce:	46bd      	mov	sp, r7
 80076d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076d4:	4770      	bx	lr
 80076d6:	bf00      	nop
 80076d8:	40010000 	.word	0x40010000
 80076dc:	40000400 	.word	0x40000400
 80076e0:	40000800 	.word	0x40000800
 80076e4:	40000c00 	.word	0x40000c00
 80076e8:	40010400 	.word	0x40010400
 80076ec:	40014000 	.word	0x40014000
 80076f0:	40014400 	.word	0x40014400
 80076f4:	40014800 	.word	0x40014800
 80076f8:	40001800 	.word	0x40001800
 80076fc:	40001c00 	.word	0x40001c00
 8007700:	40002000 	.word	0x40002000

08007704 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8007704:	b480      	push	{r7}
 8007706:	b087      	sub	sp, #28
 8007708:	af00      	add	r7, sp, #0
 800770a:	60f8      	str	r0, [r7, #12]
 800770c:	60b9      	str	r1, [r7, #8]
 800770e:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8007710:	68fb      	ldr	r3, [r7, #12]
 8007712:	6a1b      	ldr	r3, [r3, #32]
 8007714:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8007716:	68fb      	ldr	r3, [r7, #12]
 8007718:	6a1b      	ldr	r3, [r3, #32]
 800771a:	f023 0201 	bic.w	r2, r3, #1
 800771e:	68fb      	ldr	r3, [r7, #12]
 8007720:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007722:	68fb      	ldr	r3, [r7, #12]
 8007724:	699b      	ldr	r3, [r3, #24]
 8007726:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8007728:	693b      	ldr	r3, [r7, #16]
 800772a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800772e:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8007730:	687b      	ldr	r3, [r7, #4]
 8007732:	011b      	lsls	r3, r3, #4
 8007734:	693a      	ldr	r2, [r7, #16]
 8007736:	4313      	orrs	r3, r2
 8007738:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800773a:	697b      	ldr	r3, [r7, #20]
 800773c:	f023 030a 	bic.w	r3, r3, #10
 8007740:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8007742:	697a      	ldr	r2, [r7, #20]
 8007744:	68bb      	ldr	r3, [r7, #8]
 8007746:	4313      	orrs	r3, r2
 8007748:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800774a:	68fb      	ldr	r3, [r7, #12]
 800774c:	693a      	ldr	r2, [r7, #16]
 800774e:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8007750:	68fb      	ldr	r3, [r7, #12]
 8007752:	697a      	ldr	r2, [r7, #20]
 8007754:	621a      	str	r2, [r3, #32]
}
 8007756:	bf00      	nop
 8007758:	371c      	adds	r7, #28
 800775a:	46bd      	mov	sp, r7
 800775c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007760:	4770      	bx	lr

08007762 <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8007762:	b480      	push	{r7}
 8007764:	b087      	sub	sp, #28
 8007766:	af00      	add	r7, sp, #0
 8007768:	60f8      	str	r0, [r7, #12]
 800776a:	60b9      	str	r1, [r7, #8]
 800776c:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800776e:	68fb      	ldr	r3, [r7, #12]
 8007770:	6a1b      	ldr	r3, [r3, #32]
 8007772:	f023 0210 	bic.w	r2, r3, #16
 8007776:	68fb      	ldr	r3, [r7, #12]
 8007778:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 800777a:	68fb      	ldr	r3, [r7, #12]
 800777c:	699b      	ldr	r3, [r3, #24]
 800777e:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 8007780:	68fb      	ldr	r3, [r7, #12]
 8007782:	6a1b      	ldr	r3, [r3, #32]
 8007784:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8007786:	697b      	ldr	r3, [r7, #20]
 8007788:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800778c:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800778e:	687b      	ldr	r3, [r7, #4]
 8007790:	031b      	lsls	r3, r3, #12
 8007792:	697a      	ldr	r2, [r7, #20]
 8007794:	4313      	orrs	r3, r2
 8007796:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8007798:	693b      	ldr	r3, [r7, #16]
 800779a:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800779e:	613b      	str	r3, [r7, #16]
  tmpccer |= (TIM_ICPolarity << 4U);
 80077a0:	68bb      	ldr	r3, [r7, #8]
 80077a2:	011b      	lsls	r3, r3, #4
 80077a4:	693a      	ldr	r2, [r7, #16]
 80077a6:	4313      	orrs	r3, r2
 80077a8:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 80077aa:	68fb      	ldr	r3, [r7, #12]
 80077ac:	697a      	ldr	r2, [r7, #20]
 80077ae:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 80077b0:	68fb      	ldr	r3, [r7, #12]
 80077b2:	693a      	ldr	r2, [r7, #16]
 80077b4:	621a      	str	r2, [r3, #32]
}
 80077b6:	bf00      	nop
 80077b8:	371c      	adds	r7, #28
 80077ba:	46bd      	mov	sp, r7
 80077bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077c0:	4770      	bx	lr

080077c2 <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 80077c2:	b480      	push	{r7}
 80077c4:	b085      	sub	sp, #20
 80077c6:	af00      	add	r7, sp, #0
 80077c8:	6078      	str	r0, [r7, #4]
 80077ca:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 80077cc:	687b      	ldr	r3, [r7, #4]
 80077ce:	689b      	ldr	r3, [r3, #8]
 80077d0:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 80077d2:	68fb      	ldr	r3, [r7, #12]
 80077d4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80077d8:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80077da:	683a      	ldr	r2, [r7, #0]
 80077dc:	68fb      	ldr	r3, [r7, #12]
 80077de:	4313      	orrs	r3, r2
 80077e0:	f043 0307 	orr.w	r3, r3, #7
 80077e4:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 80077e6:	687b      	ldr	r3, [r7, #4]
 80077e8:	68fa      	ldr	r2, [r7, #12]
 80077ea:	609a      	str	r2, [r3, #8]
}
 80077ec:	bf00      	nop
 80077ee:	3714      	adds	r7, #20
 80077f0:	46bd      	mov	sp, r7
 80077f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077f6:	4770      	bx	lr

080077f8 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 80077f8:	b480      	push	{r7}
 80077fa:	b087      	sub	sp, #28
 80077fc:	af00      	add	r7, sp, #0
 80077fe:	60f8      	str	r0, [r7, #12]
 8007800:	60b9      	str	r1, [r7, #8]
 8007802:	607a      	str	r2, [r7, #4]
 8007804:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8007806:	68fb      	ldr	r3, [r7, #12]
 8007808:	689b      	ldr	r3, [r3, #8]
 800780a:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800780c:	697b      	ldr	r3, [r7, #20]
 800780e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8007812:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8007814:	683b      	ldr	r3, [r7, #0]
 8007816:	021a      	lsls	r2, r3, #8
 8007818:	687b      	ldr	r3, [r7, #4]
 800781a:	431a      	orrs	r2, r3
 800781c:	68bb      	ldr	r3, [r7, #8]
 800781e:	4313      	orrs	r3, r2
 8007820:	697a      	ldr	r2, [r7, #20]
 8007822:	4313      	orrs	r3, r2
 8007824:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8007826:	68fb      	ldr	r3, [r7, #12]
 8007828:	697a      	ldr	r2, [r7, #20]
 800782a:	609a      	str	r2, [r3, #8]
}
 800782c:	bf00      	nop
 800782e:	371c      	adds	r7, #28
 8007830:	46bd      	mov	sp, r7
 8007832:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007836:	4770      	bx	lr

08007838 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8007838:	b480      	push	{r7}
 800783a:	b085      	sub	sp, #20
 800783c:	af00      	add	r7, sp, #0
 800783e:	6078      	str	r0, [r7, #4]
 8007840:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8007842:	687b      	ldr	r3, [r7, #4]
 8007844:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007848:	2b01      	cmp	r3, #1
 800784a:	d101      	bne.n	8007850 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800784c:	2302      	movs	r3, #2
 800784e:	e05a      	b.n	8007906 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8007850:	687b      	ldr	r3, [r7, #4]
 8007852:	2201      	movs	r2, #1
 8007854:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007858:	687b      	ldr	r3, [r7, #4]
 800785a:	2202      	movs	r2, #2
 800785c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8007860:	687b      	ldr	r3, [r7, #4]
 8007862:	681b      	ldr	r3, [r3, #0]
 8007864:	685b      	ldr	r3, [r3, #4]
 8007866:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8007868:	687b      	ldr	r3, [r7, #4]
 800786a:	681b      	ldr	r3, [r3, #0]
 800786c:	689b      	ldr	r3, [r3, #8]
 800786e:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8007870:	68fb      	ldr	r3, [r7, #12]
 8007872:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007876:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007878:	683b      	ldr	r3, [r7, #0]
 800787a:	681b      	ldr	r3, [r3, #0]
 800787c:	68fa      	ldr	r2, [r7, #12]
 800787e:	4313      	orrs	r3, r2
 8007880:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8007882:	687b      	ldr	r3, [r7, #4]
 8007884:	681b      	ldr	r3, [r3, #0]
 8007886:	68fa      	ldr	r2, [r7, #12]
 8007888:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800788a:	687b      	ldr	r3, [r7, #4]
 800788c:	681b      	ldr	r3, [r3, #0]
 800788e:	4a21      	ldr	r2, [pc, #132]	; (8007914 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8007890:	4293      	cmp	r3, r2
 8007892:	d022      	beq.n	80078da <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007894:	687b      	ldr	r3, [r7, #4]
 8007896:	681b      	ldr	r3, [r3, #0]
 8007898:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800789c:	d01d      	beq.n	80078da <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800789e:	687b      	ldr	r3, [r7, #4]
 80078a0:	681b      	ldr	r3, [r3, #0]
 80078a2:	4a1d      	ldr	r2, [pc, #116]	; (8007918 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 80078a4:	4293      	cmp	r3, r2
 80078a6:	d018      	beq.n	80078da <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80078a8:	687b      	ldr	r3, [r7, #4]
 80078aa:	681b      	ldr	r3, [r3, #0]
 80078ac:	4a1b      	ldr	r2, [pc, #108]	; (800791c <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 80078ae:	4293      	cmp	r3, r2
 80078b0:	d013      	beq.n	80078da <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80078b2:	687b      	ldr	r3, [r7, #4]
 80078b4:	681b      	ldr	r3, [r3, #0]
 80078b6:	4a1a      	ldr	r2, [pc, #104]	; (8007920 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 80078b8:	4293      	cmp	r3, r2
 80078ba:	d00e      	beq.n	80078da <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80078bc:	687b      	ldr	r3, [r7, #4]
 80078be:	681b      	ldr	r3, [r3, #0]
 80078c0:	4a18      	ldr	r2, [pc, #96]	; (8007924 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 80078c2:	4293      	cmp	r3, r2
 80078c4:	d009      	beq.n	80078da <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80078c6:	687b      	ldr	r3, [r7, #4]
 80078c8:	681b      	ldr	r3, [r3, #0]
 80078ca:	4a17      	ldr	r2, [pc, #92]	; (8007928 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 80078cc:	4293      	cmp	r3, r2
 80078ce:	d004      	beq.n	80078da <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80078d0:	687b      	ldr	r3, [r7, #4]
 80078d2:	681b      	ldr	r3, [r3, #0]
 80078d4:	4a15      	ldr	r2, [pc, #84]	; (800792c <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 80078d6:	4293      	cmp	r3, r2
 80078d8:	d10c      	bne.n	80078f4 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 80078da:	68bb      	ldr	r3, [r7, #8]
 80078dc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80078e0:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80078e2:	683b      	ldr	r3, [r7, #0]
 80078e4:	685b      	ldr	r3, [r3, #4]
 80078e6:	68ba      	ldr	r2, [r7, #8]
 80078e8:	4313      	orrs	r3, r2
 80078ea:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 80078ec:	687b      	ldr	r3, [r7, #4]
 80078ee:	681b      	ldr	r3, [r3, #0]
 80078f0:	68ba      	ldr	r2, [r7, #8]
 80078f2:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 80078f4:	687b      	ldr	r3, [r7, #4]
 80078f6:	2201      	movs	r2, #1
 80078f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 80078fc:	687b      	ldr	r3, [r7, #4]
 80078fe:	2200      	movs	r2, #0
 8007900:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8007904:	2300      	movs	r3, #0
}
 8007906:	4618      	mov	r0, r3
 8007908:	3714      	adds	r7, #20
 800790a:	46bd      	mov	sp, r7
 800790c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007910:	4770      	bx	lr
 8007912:	bf00      	nop
 8007914:	40010000 	.word	0x40010000
 8007918:	40000400 	.word	0x40000400
 800791c:	40000800 	.word	0x40000800
 8007920:	40000c00 	.word	0x40000c00
 8007924:	40010400 	.word	0x40010400
 8007928:	40014000 	.word	0x40014000
 800792c:	40001800 	.word	0x40001800

08007930 <HAL_TIMEx_CommutCallback>:
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 8007930:	b480      	push	{r7}
 8007932:	b083      	sub	sp, #12
 8007934:	af00      	add	r7, sp, #0
 8007936:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 8007938:	bf00      	nop
 800793a:	370c      	adds	r7, #12
 800793c:	46bd      	mov	sp, r7
 800793e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007942:	4770      	bx	lr

08007944 <HAL_TIMEx_BreakCallback>:
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8007944:	b480      	push	{r7}
 8007946:	b083      	sub	sp, #12
 8007948:	af00      	add	r7, sp, #0
 800794a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 800794c:	bf00      	nop
 800794e:	370c      	adds	r7, #12
 8007950:	46bd      	mov	sp, r7
 8007952:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007956:	4770      	bx	lr

08007958 <MX_FATFS_Init>:
/* USER CODE BEGIN Variables */

/* USER CODE END Variables */

void MX_FATFS_Init(void)
{
 8007958:	b580      	push	{r7, lr}
 800795a:	af00      	add	r7, sp, #0
  /*## FatFS: Link the USER driver ###########################*/
  retUSER = FATFS_LinkDriver(&USER_Driver, USERPath);
 800795c:	4904      	ldr	r1, [pc, #16]	; (8007970 <MX_FATFS_Init+0x18>)
 800795e:	4805      	ldr	r0, [pc, #20]	; (8007974 <MX_FATFS_Init+0x1c>)
 8007960:	f003 fa50 	bl	800ae04 <FATFS_LinkDriver>
 8007964:	4603      	mov	r3, r0
 8007966:	461a      	mov	r2, r3
 8007968:	4b03      	ldr	r3, [pc, #12]	; (8007978 <MX_FATFS_Init+0x20>)
 800796a:	701a      	strb	r2, [r3, #0]

  /* USER CODE BEGIN Init */
  /* additional user code for init */
  /* USER CODE END Init */
}
 800796c:	bf00      	nop
 800796e:	bd80      	pop	{r7, pc}
 8007970:	2000af98 	.word	0x2000af98
 8007974:	2000003c 	.word	0x2000003c
 8007978:	2000af94 	.word	0x2000af94

0800797c <get_fattime>:
  * @brief  Gets Time from RTC
  * @param  None
  * @retval Time in DWORD
  */
DWORD get_fattime(void)
{
 800797c:	b480      	push	{r7}
 800797e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN get_fattime */
  return 0;
 8007980:	2300      	movs	r3, #0
  /* USER CODE END get_fattime */
}
 8007982:	4618      	mov	r0, r3
 8007984:	46bd      	mov	sp, r7
 8007986:	f85d 7b04 	ldr.w	r7, [sp], #4
 800798a:	4770      	bx	lr

0800798c <USER_initialize>:
  * @retval DSTATUS: Operation status
  */
DSTATUS USER_initialize (
	BYTE pdrv           /* Physical drive nmuber to identify the drive */
)
{
 800798c:	b580      	push	{r7, lr}
 800798e:	b082      	sub	sp, #8
 8007990:	af00      	add	r7, sp, #0
 8007992:	4603      	mov	r3, r0
 8007994:	71fb      	strb	r3, [r7, #7]
  /* USER CODE BEGIN INIT */
    //Stat = STA_NOINIT;
    //return Stat;
	return SD_disk_initialize(pdrv);
 8007996:	79fb      	ldrb	r3, [r7, #7]
 8007998:	4618      	mov	r0, r3
 800799a:	f7f9 fb67 	bl	800106c <SD_disk_initialize>
 800799e:	4603      	mov	r3, r0
 80079a0:	b2db      	uxtb	r3, r3
  /* USER CODE END INIT */
}
 80079a2:	4618      	mov	r0, r3
 80079a4:	3708      	adds	r7, #8
 80079a6:	46bd      	mov	sp, r7
 80079a8:	bd80      	pop	{r7, pc}

080079aa <USER_status>:
  * @retval DSTATUS: Operation status
  */
DSTATUS USER_status (
	BYTE pdrv       /* Physical drive number to identify the drive */
)
{
 80079aa:	b580      	push	{r7, lr}
 80079ac:	b082      	sub	sp, #8
 80079ae:	af00      	add	r7, sp, #0
 80079b0:	4603      	mov	r3, r0
 80079b2:	71fb      	strb	r3, [r7, #7]
  /* USER CODE BEGIN STATUS */
//    Stat = STA_NOINIT;
//    return Stat;
	return SD_disk_status(pdrv);
 80079b4:	79fb      	ldrb	r3, [r7, #7]
 80079b6:	4618      	mov	r0, r3
 80079b8:	f7f9 fc3e 	bl	8001238 <SD_disk_status>
 80079bc:	4603      	mov	r3, r0
 80079be:	b2db      	uxtb	r3, r3
  /* USER CODE END STATUS */
}
 80079c0:	4618      	mov	r0, r3
 80079c2:	3708      	adds	r7, #8
 80079c4:	46bd      	mov	sp, r7
 80079c6:	bd80      	pop	{r7, pc}

080079c8 <USER_read>:
	BYTE pdrv,      /* Physical drive nmuber to identify the drive */
	BYTE *buff,     /* Data buffer to store read data */
	DWORD sector,   /* Sector address in LBA */
	UINT count      /* Number of sectors to read */
)
{
 80079c8:	b580      	push	{r7, lr}
 80079ca:	b084      	sub	sp, #16
 80079cc:	af00      	add	r7, sp, #0
 80079ce:	60b9      	str	r1, [r7, #8]
 80079d0:	607a      	str	r2, [r7, #4]
 80079d2:	603b      	str	r3, [r7, #0]
 80079d4:	4603      	mov	r3, r0
 80079d6:	73fb      	strb	r3, [r7, #15]
  /* USER CODE BEGIN READ */
//    return RES_OK;
	return SD_disk_read(pdrv, buff, sector, count);
 80079d8:	7bf8      	ldrb	r0, [r7, #15]
 80079da:	683b      	ldr	r3, [r7, #0]
 80079dc:	687a      	ldr	r2, [r7, #4]
 80079de:	68b9      	ldr	r1, [r7, #8]
 80079e0:	f7f9 fc40 	bl	8001264 <SD_disk_read>
 80079e4:	4603      	mov	r3, r0
 80079e6:	b2db      	uxtb	r3, r3
  /* USER CODE END READ */
}
 80079e8:	4618      	mov	r0, r3
 80079ea:	3710      	adds	r7, #16
 80079ec:	46bd      	mov	sp, r7
 80079ee:	bd80      	pop	{r7, pc}

080079f0 <USER_write>:
	BYTE pdrv,          /* Physical drive nmuber to identify the drive */
	const BYTE *buff,   /* Data to be written */
	DWORD sector,       /* Sector address in LBA */
	UINT count          /* Number of sectors to write */
)
{
 80079f0:	b580      	push	{r7, lr}
 80079f2:	b084      	sub	sp, #16
 80079f4:	af00      	add	r7, sp, #0
 80079f6:	60b9      	str	r1, [r7, #8]
 80079f8:	607a      	str	r2, [r7, #4]
 80079fa:	603b      	str	r3, [r7, #0]
 80079fc:	4603      	mov	r3, r0
 80079fe:	73fb      	strb	r3, [r7, #15]
  /* USER CODE BEGIN WRITE */
  /* USER CODE HERE */
	return SD_disk_write(pdrv, buff, sector, count);
 8007a00:	7bf8      	ldrb	r0, [r7, #15]
 8007a02:	683b      	ldr	r3, [r7, #0]
 8007a04:	687a      	ldr	r2, [r7, #4]
 8007a06:	68b9      	ldr	r1, [r7, #8]
 8007a08:	f7f9 fc96 	bl	8001338 <SD_disk_write>
 8007a0c:	4603      	mov	r3, r0
 8007a0e:	b2db      	uxtb	r3, r3
  /* USER CODE END WRITE */
}
 8007a10:	4618      	mov	r0, r3
 8007a12:	3710      	adds	r7, #16
 8007a14:	46bd      	mov	sp, r7
 8007a16:	bd80      	pop	{r7, pc}

08007a18 <USER_ioctl>:
DRESULT USER_ioctl (
	BYTE pdrv,      /* Physical drive nmuber (0..) */
	BYTE cmd,       /* Control code */
	void *buff      /* Buffer to send/receive control data */
)
{
 8007a18:	b580      	push	{r7, lr}
 8007a1a:	b082      	sub	sp, #8
 8007a1c:	af00      	add	r7, sp, #0
 8007a1e:	4603      	mov	r3, r0
 8007a20:	603a      	str	r2, [r7, #0]
 8007a22:	71fb      	strb	r3, [r7, #7]
 8007a24:	460b      	mov	r3, r1
 8007a26:	71bb      	strb	r3, [r7, #6]
  /* USER CODE BEGIN IOCTL */
//    DRESULT res = RES_ERROR;
//    return res;
	return SD_disk_ioctl(pdrv, cmd, buff);
 8007a28:	79fb      	ldrb	r3, [r7, #7]
 8007a2a:	79b9      	ldrb	r1, [r7, #6]
 8007a2c:	683a      	ldr	r2, [r7, #0]
 8007a2e:	4618      	mov	r0, r3
 8007a30:	f7f9 fd06 	bl	8001440 <SD_disk_ioctl>
 8007a34:	4603      	mov	r3, r0
 8007a36:	b2db      	uxtb	r3, r3
  /* USER CODE END IOCTL */
}
 8007a38:	4618      	mov	r0, r3
 8007a3a:	3708      	adds	r7, #8
 8007a3c:	46bd      	mov	sp, r7
 8007a3e:	bd80      	pop	{r7, pc}

08007a40 <disk_status>:
  * @retval DSTATUS: Operation status
  */
DSTATUS disk_status (
	BYTE pdrv		/* Physical drive number to identify the drive */
)
{
 8007a40:	b580      	push	{r7, lr}
 8007a42:	b084      	sub	sp, #16
 8007a44:	af00      	add	r7, sp, #0
 8007a46:	4603      	mov	r3, r0
 8007a48:	71fb      	strb	r3, [r7, #7]
  DSTATUS stat;

  stat = disk.drv[pdrv]->disk_status(disk.lun[pdrv]);
 8007a4a:	79fb      	ldrb	r3, [r7, #7]
 8007a4c:	4a08      	ldr	r2, [pc, #32]	; (8007a70 <disk_status+0x30>)
 8007a4e:	009b      	lsls	r3, r3, #2
 8007a50:	4413      	add	r3, r2
 8007a52:	685b      	ldr	r3, [r3, #4]
 8007a54:	685b      	ldr	r3, [r3, #4]
 8007a56:	79fa      	ldrb	r2, [r7, #7]
 8007a58:	4905      	ldr	r1, [pc, #20]	; (8007a70 <disk_status+0x30>)
 8007a5a:	440a      	add	r2, r1
 8007a5c:	7a12      	ldrb	r2, [r2, #8]
 8007a5e:	4610      	mov	r0, r2
 8007a60:	4798      	blx	r3
 8007a62:	4603      	mov	r3, r0
 8007a64:	73fb      	strb	r3, [r7, #15]
  return stat;
 8007a66:	7bfb      	ldrb	r3, [r7, #15]
}
 8007a68:	4618      	mov	r0, r3
 8007a6a:	3710      	adds	r7, #16
 8007a6c:	46bd      	mov	sp, r7
 8007a6e:	bd80      	pop	{r7, pc}
 8007a70:	2000b1c4 	.word	0x2000b1c4

08007a74 <disk_initialize>:
  * @retval DSTATUS: Operation status
  */
DSTATUS disk_initialize (
	BYTE pdrv				/* Physical drive nmuber to identify the drive */
)
{
 8007a74:	b580      	push	{r7, lr}
 8007a76:	b084      	sub	sp, #16
 8007a78:	af00      	add	r7, sp, #0
 8007a7a:	4603      	mov	r3, r0
 8007a7c:	71fb      	strb	r3, [r7, #7]
  DSTATUS stat = RES_OK;
 8007a7e:	2300      	movs	r3, #0
 8007a80:	73fb      	strb	r3, [r7, #15]

  if(disk.is_initialized[pdrv] == 0)
 8007a82:	79fb      	ldrb	r3, [r7, #7]
 8007a84:	4a0d      	ldr	r2, [pc, #52]	; (8007abc <disk_initialize+0x48>)
 8007a86:	5cd3      	ldrb	r3, [r2, r3]
 8007a88:	2b00      	cmp	r3, #0
 8007a8a:	d111      	bne.n	8007ab0 <disk_initialize+0x3c>
  {
    disk.is_initialized[pdrv] = 1;
 8007a8c:	79fb      	ldrb	r3, [r7, #7]
 8007a8e:	4a0b      	ldr	r2, [pc, #44]	; (8007abc <disk_initialize+0x48>)
 8007a90:	2101      	movs	r1, #1
 8007a92:	54d1      	strb	r1, [r2, r3]
    stat = disk.drv[pdrv]->disk_initialize(disk.lun[pdrv]);
 8007a94:	79fb      	ldrb	r3, [r7, #7]
 8007a96:	4a09      	ldr	r2, [pc, #36]	; (8007abc <disk_initialize+0x48>)
 8007a98:	009b      	lsls	r3, r3, #2
 8007a9a:	4413      	add	r3, r2
 8007a9c:	685b      	ldr	r3, [r3, #4]
 8007a9e:	681b      	ldr	r3, [r3, #0]
 8007aa0:	79fa      	ldrb	r2, [r7, #7]
 8007aa2:	4906      	ldr	r1, [pc, #24]	; (8007abc <disk_initialize+0x48>)
 8007aa4:	440a      	add	r2, r1
 8007aa6:	7a12      	ldrb	r2, [r2, #8]
 8007aa8:	4610      	mov	r0, r2
 8007aaa:	4798      	blx	r3
 8007aac:	4603      	mov	r3, r0
 8007aae:	73fb      	strb	r3, [r7, #15]
  }
  return stat;
 8007ab0:	7bfb      	ldrb	r3, [r7, #15]
}
 8007ab2:	4618      	mov	r0, r3
 8007ab4:	3710      	adds	r7, #16
 8007ab6:	46bd      	mov	sp, r7
 8007ab8:	bd80      	pop	{r7, pc}
 8007aba:	bf00      	nop
 8007abc:	2000b1c4 	.word	0x2000b1c4

08007ac0 <disk_read>:
	BYTE pdrv,		/* Physical drive nmuber to identify the drive */
	BYTE *buff,		/* Data buffer to store read data */
	DWORD sector,	        /* Sector address in LBA */
	UINT count		/* Number of sectors to read */
)
{
 8007ac0:	b590      	push	{r4, r7, lr}
 8007ac2:	b087      	sub	sp, #28
 8007ac4:	af00      	add	r7, sp, #0
 8007ac6:	60b9      	str	r1, [r7, #8]
 8007ac8:	607a      	str	r2, [r7, #4]
 8007aca:	603b      	str	r3, [r7, #0]
 8007acc:	4603      	mov	r3, r0
 8007ace:	73fb      	strb	r3, [r7, #15]
  DRESULT res;

  res = disk.drv[pdrv]->disk_read(disk.lun[pdrv], buff, sector, count); // This is the issue for skip
 8007ad0:	7bfb      	ldrb	r3, [r7, #15]
 8007ad2:	4a0a      	ldr	r2, [pc, #40]	; (8007afc <disk_read+0x3c>)
 8007ad4:	009b      	lsls	r3, r3, #2
 8007ad6:	4413      	add	r3, r2
 8007ad8:	685b      	ldr	r3, [r3, #4]
 8007ada:	689c      	ldr	r4, [r3, #8]
 8007adc:	7bfb      	ldrb	r3, [r7, #15]
 8007ade:	4a07      	ldr	r2, [pc, #28]	; (8007afc <disk_read+0x3c>)
 8007ae0:	4413      	add	r3, r2
 8007ae2:	7a18      	ldrb	r0, [r3, #8]
 8007ae4:	683b      	ldr	r3, [r7, #0]
 8007ae6:	687a      	ldr	r2, [r7, #4]
 8007ae8:	68b9      	ldr	r1, [r7, #8]
 8007aea:	47a0      	blx	r4
 8007aec:	4603      	mov	r3, r0
 8007aee:	75fb      	strb	r3, [r7, #23]
  return res;
 8007af0:	7dfb      	ldrb	r3, [r7, #23]
}
 8007af2:	4618      	mov	r0, r3
 8007af4:	371c      	adds	r7, #28
 8007af6:	46bd      	mov	sp, r7
 8007af8:	bd90      	pop	{r4, r7, pc}
 8007afa:	bf00      	nop
 8007afc:	2000b1c4 	.word	0x2000b1c4

08007b00 <disk_write>:
	BYTE pdrv,		/* Physical drive nmuber to identify the drive */
	const BYTE *buff,	/* Data to be written */
	DWORD sector,		/* Sector address in LBA */
	UINT count        	/* Number of sectors to write */
)
{
 8007b00:	b590      	push	{r4, r7, lr}
 8007b02:	b087      	sub	sp, #28
 8007b04:	af00      	add	r7, sp, #0
 8007b06:	60b9      	str	r1, [r7, #8]
 8007b08:	607a      	str	r2, [r7, #4]
 8007b0a:	603b      	str	r3, [r7, #0]
 8007b0c:	4603      	mov	r3, r0
 8007b0e:	73fb      	strb	r3, [r7, #15]
  DRESULT res;

  res = disk.drv[pdrv]->disk_write(disk.lun[pdrv], buff, sector, count);
 8007b10:	7bfb      	ldrb	r3, [r7, #15]
 8007b12:	4a0a      	ldr	r2, [pc, #40]	; (8007b3c <disk_write+0x3c>)
 8007b14:	009b      	lsls	r3, r3, #2
 8007b16:	4413      	add	r3, r2
 8007b18:	685b      	ldr	r3, [r3, #4]
 8007b1a:	68dc      	ldr	r4, [r3, #12]
 8007b1c:	7bfb      	ldrb	r3, [r7, #15]
 8007b1e:	4a07      	ldr	r2, [pc, #28]	; (8007b3c <disk_write+0x3c>)
 8007b20:	4413      	add	r3, r2
 8007b22:	7a18      	ldrb	r0, [r3, #8]
 8007b24:	683b      	ldr	r3, [r7, #0]
 8007b26:	687a      	ldr	r2, [r7, #4]
 8007b28:	68b9      	ldr	r1, [r7, #8]
 8007b2a:	47a0      	blx	r4
 8007b2c:	4603      	mov	r3, r0
 8007b2e:	75fb      	strb	r3, [r7, #23]
  return res;
 8007b30:	7dfb      	ldrb	r3, [r7, #23]
}
 8007b32:	4618      	mov	r0, r3
 8007b34:	371c      	adds	r7, #28
 8007b36:	46bd      	mov	sp, r7
 8007b38:	bd90      	pop	{r4, r7, pc}
 8007b3a:	bf00      	nop
 8007b3c:	2000b1c4 	.word	0x2000b1c4

08007b40 <disk_ioctl>:
DRESULT disk_ioctl (
	BYTE pdrv,		/* Physical drive nmuber (0..) */
	BYTE cmd,		/* Control code */
	void *buff		/* Buffer to send/receive control data */
)
{
 8007b40:	b580      	push	{r7, lr}
 8007b42:	b084      	sub	sp, #16
 8007b44:	af00      	add	r7, sp, #0
 8007b46:	4603      	mov	r3, r0
 8007b48:	603a      	str	r2, [r7, #0]
 8007b4a:	71fb      	strb	r3, [r7, #7]
 8007b4c:	460b      	mov	r3, r1
 8007b4e:	71bb      	strb	r3, [r7, #6]
  DRESULT res;

  res = disk.drv[pdrv]->disk_ioctl(disk.lun[pdrv], cmd, buff);
 8007b50:	79fb      	ldrb	r3, [r7, #7]
 8007b52:	4a09      	ldr	r2, [pc, #36]	; (8007b78 <disk_ioctl+0x38>)
 8007b54:	009b      	lsls	r3, r3, #2
 8007b56:	4413      	add	r3, r2
 8007b58:	685b      	ldr	r3, [r3, #4]
 8007b5a:	691b      	ldr	r3, [r3, #16]
 8007b5c:	79fa      	ldrb	r2, [r7, #7]
 8007b5e:	4906      	ldr	r1, [pc, #24]	; (8007b78 <disk_ioctl+0x38>)
 8007b60:	440a      	add	r2, r1
 8007b62:	7a10      	ldrb	r0, [r2, #8]
 8007b64:	79b9      	ldrb	r1, [r7, #6]
 8007b66:	683a      	ldr	r2, [r7, #0]
 8007b68:	4798      	blx	r3
 8007b6a:	4603      	mov	r3, r0
 8007b6c:	73fb      	strb	r3, [r7, #15]
  return res;
 8007b6e:	7bfb      	ldrb	r3, [r7, #15]
}
 8007b70:	4618      	mov	r0, r3
 8007b72:	3710      	adds	r7, #16
 8007b74:	46bd      	mov	sp, r7
 8007b76:	bd80      	pop	{r7, pc}
 8007b78:	2000b1c4 	.word	0x2000b1c4

08007b7c <ld_word>:
/* Load/Store multi-byte word in the FAT structure                       */
/*-----------------------------------------------------------------------*/

static
WORD ld_word (const BYTE* ptr)	/*	 Load a 2-byte little-endian word */
{
 8007b7c:	b480      	push	{r7}
 8007b7e:	b085      	sub	sp, #20
 8007b80:	af00      	add	r7, sp, #0
 8007b82:	6078      	str	r0, [r7, #4]
	WORD rv;

	rv = ptr[1];
 8007b84:	687b      	ldr	r3, [r7, #4]
 8007b86:	3301      	adds	r3, #1
 8007b88:	781b      	ldrb	r3, [r3, #0]
 8007b8a:	81fb      	strh	r3, [r7, #14]
	rv = rv << 8 | ptr[0];
 8007b8c:	89fb      	ldrh	r3, [r7, #14]
 8007b8e:	021b      	lsls	r3, r3, #8
 8007b90:	b21a      	sxth	r2, r3
 8007b92:	687b      	ldr	r3, [r7, #4]
 8007b94:	781b      	ldrb	r3, [r3, #0]
 8007b96:	b21b      	sxth	r3, r3
 8007b98:	4313      	orrs	r3, r2
 8007b9a:	b21b      	sxth	r3, r3
 8007b9c:	81fb      	strh	r3, [r7, #14]
	return rv;
 8007b9e:	89fb      	ldrh	r3, [r7, #14]
}
 8007ba0:	4618      	mov	r0, r3
 8007ba2:	3714      	adds	r7, #20
 8007ba4:	46bd      	mov	sp, r7
 8007ba6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007baa:	4770      	bx	lr

08007bac <ld_dword>:

static
DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
{
 8007bac:	b480      	push	{r7}
 8007bae:	b085      	sub	sp, #20
 8007bb0:	af00      	add	r7, sp, #0
 8007bb2:	6078      	str	r0, [r7, #4]
	DWORD rv;

	rv = ptr[3];
 8007bb4:	687b      	ldr	r3, [r7, #4]
 8007bb6:	3303      	adds	r3, #3
 8007bb8:	781b      	ldrb	r3, [r3, #0]
 8007bba:	60fb      	str	r3, [r7, #12]
	rv = rv << 8 | ptr[2];
 8007bbc:	68fb      	ldr	r3, [r7, #12]
 8007bbe:	021b      	lsls	r3, r3, #8
 8007bc0:	687a      	ldr	r2, [r7, #4]
 8007bc2:	3202      	adds	r2, #2
 8007bc4:	7812      	ldrb	r2, [r2, #0]
 8007bc6:	4313      	orrs	r3, r2
 8007bc8:	60fb      	str	r3, [r7, #12]
	rv = rv << 8 | ptr[1];
 8007bca:	68fb      	ldr	r3, [r7, #12]
 8007bcc:	021b      	lsls	r3, r3, #8
 8007bce:	687a      	ldr	r2, [r7, #4]
 8007bd0:	3201      	adds	r2, #1
 8007bd2:	7812      	ldrb	r2, [r2, #0]
 8007bd4:	4313      	orrs	r3, r2
 8007bd6:	60fb      	str	r3, [r7, #12]
	rv = rv << 8 | ptr[0];
 8007bd8:	68fb      	ldr	r3, [r7, #12]
 8007bda:	021b      	lsls	r3, r3, #8
 8007bdc:	687a      	ldr	r2, [r7, #4]
 8007bde:	7812      	ldrb	r2, [r2, #0]
 8007be0:	4313      	orrs	r3, r2
 8007be2:	60fb      	str	r3, [r7, #12]
	return rv;
 8007be4:	68fb      	ldr	r3, [r7, #12]
}
 8007be6:	4618      	mov	r0, r3
 8007be8:	3714      	adds	r7, #20
 8007bea:	46bd      	mov	sp, r7
 8007bec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bf0:	4770      	bx	lr

08007bf2 <st_word>:
#endif

#if !_FS_READONLY
static
void st_word (BYTE* ptr, WORD val)	/* Store a 2-byte word in little-endian */
{
 8007bf2:	b480      	push	{r7}
 8007bf4:	b083      	sub	sp, #12
 8007bf6:	af00      	add	r7, sp, #0
 8007bf8:	6078      	str	r0, [r7, #4]
 8007bfa:	460b      	mov	r3, r1
 8007bfc:	807b      	strh	r3, [r7, #2]
	*ptr++ = (BYTE)val; val >>= 8;
 8007bfe:	687b      	ldr	r3, [r7, #4]
 8007c00:	1c5a      	adds	r2, r3, #1
 8007c02:	607a      	str	r2, [r7, #4]
 8007c04:	887a      	ldrh	r2, [r7, #2]
 8007c06:	b2d2      	uxtb	r2, r2
 8007c08:	701a      	strb	r2, [r3, #0]
 8007c0a:	887b      	ldrh	r3, [r7, #2]
 8007c0c:	0a1b      	lsrs	r3, r3, #8
 8007c0e:	807b      	strh	r3, [r7, #2]
	*ptr++ = (BYTE)val;
 8007c10:	687b      	ldr	r3, [r7, #4]
 8007c12:	1c5a      	adds	r2, r3, #1
 8007c14:	607a      	str	r2, [r7, #4]
 8007c16:	887a      	ldrh	r2, [r7, #2]
 8007c18:	b2d2      	uxtb	r2, r2
 8007c1a:	701a      	strb	r2, [r3, #0]
}
 8007c1c:	bf00      	nop
 8007c1e:	370c      	adds	r7, #12
 8007c20:	46bd      	mov	sp, r7
 8007c22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c26:	4770      	bx	lr

08007c28 <st_dword>:

static
void st_dword (BYTE* ptr, DWORD val)	/* Store a 4-byte word in little-endian */
{
 8007c28:	b480      	push	{r7}
 8007c2a:	b083      	sub	sp, #12
 8007c2c:	af00      	add	r7, sp, #0
 8007c2e:	6078      	str	r0, [r7, #4]
 8007c30:	6039      	str	r1, [r7, #0]
	*ptr++ = (BYTE)val; val >>= 8;
 8007c32:	687b      	ldr	r3, [r7, #4]
 8007c34:	1c5a      	adds	r2, r3, #1
 8007c36:	607a      	str	r2, [r7, #4]
 8007c38:	683a      	ldr	r2, [r7, #0]
 8007c3a:	b2d2      	uxtb	r2, r2
 8007c3c:	701a      	strb	r2, [r3, #0]
 8007c3e:	683b      	ldr	r3, [r7, #0]
 8007c40:	0a1b      	lsrs	r3, r3, #8
 8007c42:	603b      	str	r3, [r7, #0]
	*ptr++ = (BYTE)val; val >>= 8;
 8007c44:	687b      	ldr	r3, [r7, #4]
 8007c46:	1c5a      	adds	r2, r3, #1
 8007c48:	607a      	str	r2, [r7, #4]
 8007c4a:	683a      	ldr	r2, [r7, #0]
 8007c4c:	b2d2      	uxtb	r2, r2
 8007c4e:	701a      	strb	r2, [r3, #0]
 8007c50:	683b      	ldr	r3, [r7, #0]
 8007c52:	0a1b      	lsrs	r3, r3, #8
 8007c54:	603b      	str	r3, [r7, #0]
	*ptr++ = (BYTE)val; val >>= 8;
 8007c56:	687b      	ldr	r3, [r7, #4]
 8007c58:	1c5a      	adds	r2, r3, #1
 8007c5a:	607a      	str	r2, [r7, #4]
 8007c5c:	683a      	ldr	r2, [r7, #0]
 8007c5e:	b2d2      	uxtb	r2, r2
 8007c60:	701a      	strb	r2, [r3, #0]
 8007c62:	683b      	ldr	r3, [r7, #0]
 8007c64:	0a1b      	lsrs	r3, r3, #8
 8007c66:	603b      	str	r3, [r7, #0]
	*ptr++ = (BYTE)val;
 8007c68:	687b      	ldr	r3, [r7, #4]
 8007c6a:	1c5a      	adds	r2, r3, #1
 8007c6c:	607a      	str	r2, [r7, #4]
 8007c6e:	683a      	ldr	r2, [r7, #0]
 8007c70:	b2d2      	uxtb	r2, r2
 8007c72:	701a      	strb	r2, [r3, #0]
}
 8007c74:	bf00      	nop
 8007c76:	370c      	adds	r7, #12
 8007c78:	46bd      	mov	sp, r7
 8007c7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c7e:	4770      	bx	lr

08007c80 <mem_cpy>:
/* String functions                                                      */
/*-----------------------------------------------------------------------*/

/* Copy memory to memory */
static
void mem_cpy (void* dst, const void* src, UINT cnt) {
 8007c80:	b480      	push	{r7}
 8007c82:	b087      	sub	sp, #28
 8007c84:	af00      	add	r7, sp, #0
 8007c86:	60f8      	str	r0, [r7, #12]
 8007c88:	60b9      	str	r1, [r7, #8]
 8007c8a:	607a      	str	r2, [r7, #4]
	BYTE *d = (BYTE*)dst;
 8007c8c:	68fb      	ldr	r3, [r7, #12]
 8007c8e:	617b      	str	r3, [r7, #20]
	const BYTE *s = (const BYTE*)src;
 8007c90:	68bb      	ldr	r3, [r7, #8]
 8007c92:	613b      	str	r3, [r7, #16]

	if (cnt) {
 8007c94:	687b      	ldr	r3, [r7, #4]
 8007c96:	2b00      	cmp	r3, #0
 8007c98:	d00d      	beq.n	8007cb6 <mem_cpy+0x36>
		do {
			*d++ = *s++;
 8007c9a:	693a      	ldr	r2, [r7, #16]
 8007c9c:	1c53      	adds	r3, r2, #1
 8007c9e:	613b      	str	r3, [r7, #16]
 8007ca0:	697b      	ldr	r3, [r7, #20]
 8007ca2:	1c59      	adds	r1, r3, #1
 8007ca4:	6179      	str	r1, [r7, #20]
 8007ca6:	7812      	ldrb	r2, [r2, #0]
 8007ca8:	701a      	strb	r2, [r3, #0]
		} while (--cnt);
 8007caa:	687b      	ldr	r3, [r7, #4]
 8007cac:	3b01      	subs	r3, #1
 8007cae:	607b      	str	r3, [r7, #4]
 8007cb0:	687b      	ldr	r3, [r7, #4]
 8007cb2:	2b00      	cmp	r3, #0
 8007cb4:	d1f1      	bne.n	8007c9a <mem_cpy+0x1a>
	}
}
 8007cb6:	bf00      	nop
 8007cb8:	371c      	adds	r7, #28
 8007cba:	46bd      	mov	sp, r7
 8007cbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cc0:	4770      	bx	lr

08007cc2 <mem_set>:

/* Fill memory block */
static
void mem_set (void* dst, int val, UINT cnt) {
 8007cc2:	b480      	push	{r7}
 8007cc4:	b087      	sub	sp, #28
 8007cc6:	af00      	add	r7, sp, #0
 8007cc8:	60f8      	str	r0, [r7, #12]
 8007cca:	60b9      	str	r1, [r7, #8]
 8007ccc:	607a      	str	r2, [r7, #4]
	BYTE *d = (BYTE*)dst;
 8007cce:	68fb      	ldr	r3, [r7, #12]
 8007cd0:	617b      	str	r3, [r7, #20]

	do {
		*d++ = (BYTE)val;
 8007cd2:	697b      	ldr	r3, [r7, #20]
 8007cd4:	1c5a      	adds	r2, r3, #1
 8007cd6:	617a      	str	r2, [r7, #20]
 8007cd8:	68ba      	ldr	r2, [r7, #8]
 8007cda:	b2d2      	uxtb	r2, r2
 8007cdc:	701a      	strb	r2, [r3, #0]
	} while (--cnt);
 8007cde:	687b      	ldr	r3, [r7, #4]
 8007ce0:	3b01      	subs	r3, #1
 8007ce2:	607b      	str	r3, [r7, #4]
 8007ce4:	687b      	ldr	r3, [r7, #4]
 8007ce6:	2b00      	cmp	r3, #0
 8007ce8:	d1f3      	bne.n	8007cd2 <mem_set+0x10>
}
 8007cea:	bf00      	nop
 8007cec:	bf00      	nop
 8007cee:	371c      	adds	r7, #28
 8007cf0:	46bd      	mov	sp, r7
 8007cf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cf6:	4770      	bx	lr

08007cf8 <mem_cmp>:

/* Compare memory block */
static
int mem_cmp (const void* dst, const void* src, UINT cnt) {	/* ZR:same, NZ:different */
 8007cf8:	b480      	push	{r7}
 8007cfa:	b089      	sub	sp, #36	; 0x24
 8007cfc:	af00      	add	r7, sp, #0
 8007cfe:	60f8      	str	r0, [r7, #12]
 8007d00:	60b9      	str	r1, [r7, #8]
 8007d02:	607a      	str	r2, [r7, #4]
	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 8007d04:	68fb      	ldr	r3, [r7, #12]
 8007d06:	61fb      	str	r3, [r7, #28]
 8007d08:	68bb      	ldr	r3, [r7, #8]
 8007d0a:	61bb      	str	r3, [r7, #24]
	int r = 0;
 8007d0c:	2300      	movs	r3, #0
 8007d0e:	617b      	str	r3, [r7, #20]

	do {
		r = *d++ - *s++;
 8007d10:	69fb      	ldr	r3, [r7, #28]
 8007d12:	1c5a      	adds	r2, r3, #1
 8007d14:	61fa      	str	r2, [r7, #28]
 8007d16:	781b      	ldrb	r3, [r3, #0]
 8007d18:	4619      	mov	r1, r3
 8007d1a:	69bb      	ldr	r3, [r7, #24]
 8007d1c:	1c5a      	adds	r2, r3, #1
 8007d1e:	61ba      	str	r2, [r7, #24]
 8007d20:	781b      	ldrb	r3, [r3, #0]
 8007d22:	1acb      	subs	r3, r1, r3
 8007d24:	617b      	str	r3, [r7, #20]
	} while (--cnt && r == 0);
 8007d26:	687b      	ldr	r3, [r7, #4]
 8007d28:	3b01      	subs	r3, #1
 8007d2a:	607b      	str	r3, [r7, #4]
 8007d2c:	687b      	ldr	r3, [r7, #4]
 8007d2e:	2b00      	cmp	r3, #0
 8007d30:	d002      	beq.n	8007d38 <mem_cmp+0x40>
 8007d32:	697b      	ldr	r3, [r7, #20]
 8007d34:	2b00      	cmp	r3, #0
 8007d36:	d0eb      	beq.n	8007d10 <mem_cmp+0x18>

	return r;
 8007d38:	697b      	ldr	r3, [r7, #20]
}
 8007d3a:	4618      	mov	r0, r3
 8007d3c:	3724      	adds	r7, #36	; 0x24
 8007d3e:	46bd      	mov	sp, r7
 8007d40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d44:	4770      	bx	lr

08007d46 <chk_chr>:

/* Check if chr is contained in the string */
static
int chk_chr (const char* str, int chr) {	/* NZ:contained, ZR:not contained */
 8007d46:	b480      	push	{r7}
 8007d48:	b083      	sub	sp, #12
 8007d4a:	af00      	add	r7, sp, #0
 8007d4c:	6078      	str	r0, [r7, #4]
 8007d4e:	6039      	str	r1, [r7, #0]
	while (*str && *str != chr) str++;
 8007d50:	e002      	b.n	8007d58 <chk_chr+0x12>
 8007d52:	687b      	ldr	r3, [r7, #4]
 8007d54:	3301      	adds	r3, #1
 8007d56:	607b      	str	r3, [r7, #4]
 8007d58:	687b      	ldr	r3, [r7, #4]
 8007d5a:	781b      	ldrb	r3, [r3, #0]
 8007d5c:	2b00      	cmp	r3, #0
 8007d5e:	d005      	beq.n	8007d6c <chk_chr+0x26>
 8007d60:	687b      	ldr	r3, [r7, #4]
 8007d62:	781b      	ldrb	r3, [r3, #0]
 8007d64:	461a      	mov	r2, r3
 8007d66:	683b      	ldr	r3, [r7, #0]
 8007d68:	4293      	cmp	r3, r2
 8007d6a:	d1f2      	bne.n	8007d52 <chk_chr+0xc>
	return *str;
 8007d6c:	687b      	ldr	r3, [r7, #4]
 8007d6e:	781b      	ldrb	r3, [r3, #0]
}
 8007d70:	4618      	mov	r0, r3
 8007d72:	370c      	adds	r7, #12
 8007d74:	46bd      	mov	sp, r7
 8007d76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d7a:	4770      	bx	lr

08007d7c <chk_lock>:
static
FRESULT chk_lock (	/* Check if the file can be accessed */
	DIR* dp,		/* Directory object pointing the file to be checked */
	int acc			/* Desired access type (0:Read, 1:Write, 2:Delete/Rename) */
)
{
 8007d7c:	b480      	push	{r7}
 8007d7e:	b085      	sub	sp, #20
 8007d80:	af00      	add	r7, sp, #0
 8007d82:	6078      	str	r0, [r7, #4]
 8007d84:	6039      	str	r1, [r7, #0]
	UINT i, be;

	/* Search file semaphore table */
	for (i = be = 0; i < _FS_LOCK; i++) {
 8007d86:	2300      	movs	r3, #0
 8007d88:	60bb      	str	r3, [r7, #8]
 8007d8a:	68bb      	ldr	r3, [r7, #8]
 8007d8c:	60fb      	str	r3, [r7, #12]
 8007d8e:	e029      	b.n	8007de4 <chk_lock+0x68>
		if (Files[i].fs) {	/* Existing entry */
 8007d90:	4a27      	ldr	r2, [pc, #156]	; (8007e30 <chk_lock+0xb4>)
 8007d92:	68fb      	ldr	r3, [r7, #12]
 8007d94:	011b      	lsls	r3, r3, #4
 8007d96:	4413      	add	r3, r2
 8007d98:	681b      	ldr	r3, [r3, #0]
 8007d9a:	2b00      	cmp	r3, #0
 8007d9c:	d01d      	beq.n	8007dda <chk_lock+0x5e>
			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matched with an open object */
 8007d9e:	4a24      	ldr	r2, [pc, #144]	; (8007e30 <chk_lock+0xb4>)
 8007da0:	68fb      	ldr	r3, [r7, #12]
 8007da2:	011b      	lsls	r3, r3, #4
 8007da4:	4413      	add	r3, r2
 8007da6:	681a      	ldr	r2, [r3, #0]
 8007da8:	687b      	ldr	r3, [r7, #4]
 8007daa:	681b      	ldr	r3, [r3, #0]
 8007dac:	429a      	cmp	r2, r3
 8007dae:	d116      	bne.n	8007dde <chk_lock+0x62>
				Files[i].clu == dp->obj.sclust &&
 8007db0:	4a1f      	ldr	r2, [pc, #124]	; (8007e30 <chk_lock+0xb4>)
 8007db2:	68fb      	ldr	r3, [r7, #12]
 8007db4:	011b      	lsls	r3, r3, #4
 8007db6:	4413      	add	r3, r2
 8007db8:	3304      	adds	r3, #4
 8007dba:	681a      	ldr	r2, [r3, #0]
 8007dbc:	687b      	ldr	r3, [r7, #4]
 8007dbe:	689b      	ldr	r3, [r3, #8]
			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matched with an open object */
 8007dc0:	429a      	cmp	r2, r3
 8007dc2:	d10c      	bne.n	8007dde <chk_lock+0x62>
				Files[i].ofs == dp->dptr) break;
 8007dc4:	4a1a      	ldr	r2, [pc, #104]	; (8007e30 <chk_lock+0xb4>)
 8007dc6:	68fb      	ldr	r3, [r7, #12]
 8007dc8:	011b      	lsls	r3, r3, #4
 8007dca:	4413      	add	r3, r2
 8007dcc:	3308      	adds	r3, #8
 8007dce:	681a      	ldr	r2, [r3, #0]
 8007dd0:	687b      	ldr	r3, [r7, #4]
 8007dd2:	695b      	ldr	r3, [r3, #20]
				Files[i].clu == dp->obj.sclust &&
 8007dd4:	429a      	cmp	r2, r3
 8007dd6:	d102      	bne.n	8007dde <chk_lock+0x62>
				Files[i].ofs == dp->dptr) break;
 8007dd8:	e007      	b.n	8007dea <chk_lock+0x6e>
		} else {			/* Blank entry */
			be = 1;
 8007dda:	2301      	movs	r3, #1
 8007ddc:	60bb      	str	r3, [r7, #8]
	for (i = be = 0; i < _FS_LOCK; i++) {
 8007dde:	68fb      	ldr	r3, [r7, #12]
 8007de0:	3301      	adds	r3, #1
 8007de2:	60fb      	str	r3, [r7, #12]
 8007de4:	68fb      	ldr	r3, [r7, #12]
 8007de6:	2b01      	cmp	r3, #1
 8007de8:	d9d2      	bls.n	8007d90 <chk_lock+0x14>
		}
	}
	if (i == _FS_LOCK) {	/* The object is not opened */
 8007dea:	68fb      	ldr	r3, [r7, #12]
 8007dec:	2b02      	cmp	r3, #2
 8007dee:	d109      	bne.n	8007e04 <chk_lock+0x88>
		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new object? */
 8007df0:	68bb      	ldr	r3, [r7, #8]
 8007df2:	2b00      	cmp	r3, #0
 8007df4:	d102      	bne.n	8007dfc <chk_lock+0x80>
 8007df6:	683b      	ldr	r3, [r7, #0]
 8007df8:	2b02      	cmp	r3, #2
 8007dfa:	d101      	bne.n	8007e00 <chk_lock+0x84>
 8007dfc:	2300      	movs	r3, #0
 8007dfe:	e010      	b.n	8007e22 <chk_lock+0xa6>
 8007e00:	2312      	movs	r3, #18
 8007e02:	e00e      	b.n	8007e22 <chk_lock+0xa6>
	}

	/* The object has been opened. Reject any open against writing file and all write mode open */
	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 8007e04:	683b      	ldr	r3, [r7, #0]
 8007e06:	2b00      	cmp	r3, #0
 8007e08:	d108      	bne.n	8007e1c <chk_lock+0xa0>
 8007e0a:	4a09      	ldr	r2, [pc, #36]	; (8007e30 <chk_lock+0xb4>)
 8007e0c:	68fb      	ldr	r3, [r7, #12]
 8007e0e:	011b      	lsls	r3, r3, #4
 8007e10:	4413      	add	r3, r2
 8007e12:	330c      	adds	r3, #12
 8007e14:	881b      	ldrh	r3, [r3, #0]
 8007e16:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007e1a:	d101      	bne.n	8007e20 <chk_lock+0xa4>
 8007e1c:	2310      	movs	r3, #16
 8007e1e:	e000      	b.n	8007e22 <chk_lock+0xa6>
 8007e20:	2300      	movs	r3, #0
}
 8007e22:	4618      	mov	r0, r3
 8007e24:	3714      	adds	r7, #20
 8007e26:	46bd      	mov	sp, r7
 8007e28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e2c:	4770      	bx	lr
 8007e2e:	bf00      	nop
 8007e30:	2000afa4 	.word	0x2000afa4

08007e34 <enq_lock>:


static
int enq_lock (void)	/* Check if an entry is available for a new object */
{
 8007e34:	b480      	push	{r7}
 8007e36:	b083      	sub	sp, #12
 8007e38:	af00      	add	r7, sp, #0
	UINT i;

	for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 8007e3a:	2300      	movs	r3, #0
 8007e3c:	607b      	str	r3, [r7, #4]
 8007e3e:	e002      	b.n	8007e46 <enq_lock+0x12>
 8007e40:	687b      	ldr	r3, [r7, #4]
 8007e42:	3301      	adds	r3, #1
 8007e44:	607b      	str	r3, [r7, #4]
 8007e46:	687b      	ldr	r3, [r7, #4]
 8007e48:	2b01      	cmp	r3, #1
 8007e4a:	d806      	bhi.n	8007e5a <enq_lock+0x26>
 8007e4c:	4a09      	ldr	r2, [pc, #36]	; (8007e74 <enq_lock+0x40>)
 8007e4e:	687b      	ldr	r3, [r7, #4]
 8007e50:	011b      	lsls	r3, r3, #4
 8007e52:	4413      	add	r3, r2
 8007e54:	681b      	ldr	r3, [r3, #0]
 8007e56:	2b00      	cmp	r3, #0
 8007e58:	d1f2      	bne.n	8007e40 <enq_lock+0xc>
	return (i == _FS_LOCK) ? 0 : 1;
 8007e5a:	687b      	ldr	r3, [r7, #4]
 8007e5c:	2b02      	cmp	r3, #2
 8007e5e:	bf14      	ite	ne
 8007e60:	2301      	movne	r3, #1
 8007e62:	2300      	moveq	r3, #0
 8007e64:	b2db      	uxtb	r3, r3
}
 8007e66:	4618      	mov	r0, r3
 8007e68:	370c      	adds	r7, #12
 8007e6a:	46bd      	mov	sp, r7
 8007e6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e70:	4770      	bx	lr
 8007e72:	bf00      	nop
 8007e74:	2000afa4 	.word	0x2000afa4

08007e78 <inc_lock>:
static
UINT inc_lock (	/* Increment object open counter and returns its index (0:Internal error) */
	DIR* dp,	/* Directory object pointing the file to register or increment */
	int acc		/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
)
{
 8007e78:	b480      	push	{r7}
 8007e7a:	b085      	sub	sp, #20
 8007e7c:	af00      	add	r7, sp, #0
 8007e7e:	6078      	str	r0, [r7, #4]
 8007e80:	6039      	str	r1, [r7, #0]
	UINT i;


	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
 8007e82:	2300      	movs	r3, #0
 8007e84:	60fb      	str	r3, [r7, #12]
 8007e86:	e01f      	b.n	8007ec8 <inc_lock+0x50>
		if (Files[i].fs == dp->obj.fs &&
 8007e88:	4a41      	ldr	r2, [pc, #260]	; (8007f90 <inc_lock+0x118>)
 8007e8a:	68fb      	ldr	r3, [r7, #12]
 8007e8c:	011b      	lsls	r3, r3, #4
 8007e8e:	4413      	add	r3, r2
 8007e90:	681a      	ldr	r2, [r3, #0]
 8007e92:	687b      	ldr	r3, [r7, #4]
 8007e94:	681b      	ldr	r3, [r3, #0]
 8007e96:	429a      	cmp	r2, r3
 8007e98:	d113      	bne.n	8007ec2 <inc_lock+0x4a>
			Files[i].clu == dp->obj.sclust &&
 8007e9a:	4a3d      	ldr	r2, [pc, #244]	; (8007f90 <inc_lock+0x118>)
 8007e9c:	68fb      	ldr	r3, [r7, #12]
 8007e9e:	011b      	lsls	r3, r3, #4
 8007ea0:	4413      	add	r3, r2
 8007ea2:	3304      	adds	r3, #4
 8007ea4:	681a      	ldr	r2, [r3, #0]
 8007ea6:	687b      	ldr	r3, [r7, #4]
 8007ea8:	689b      	ldr	r3, [r3, #8]
		if (Files[i].fs == dp->obj.fs &&
 8007eaa:	429a      	cmp	r2, r3
 8007eac:	d109      	bne.n	8007ec2 <inc_lock+0x4a>
			Files[i].ofs == dp->dptr) break;
 8007eae:	4a38      	ldr	r2, [pc, #224]	; (8007f90 <inc_lock+0x118>)
 8007eb0:	68fb      	ldr	r3, [r7, #12]
 8007eb2:	011b      	lsls	r3, r3, #4
 8007eb4:	4413      	add	r3, r2
 8007eb6:	3308      	adds	r3, #8
 8007eb8:	681a      	ldr	r2, [r3, #0]
 8007eba:	687b      	ldr	r3, [r7, #4]
 8007ebc:	695b      	ldr	r3, [r3, #20]
			Files[i].clu == dp->obj.sclust &&
 8007ebe:	429a      	cmp	r2, r3
 8007ec0:	d006      	beq.n	8007ed0 <inc_lock+0x58>
	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
 8007ec2:	68fb      	ldr	r3, [r7, #12]
 8007ec4:	3301      	adds	r3, #1
 8007ec6:	60fb      	str	r3, [r7, #12]
 8007ec8:	68fb      	ldr	r3, [r7, #12]
 8007eca:	2b01      	cmp	r3, #1
 8007ecc:	d9dc      	bls.n	8007e88 <inc_lock+0x10>
 8007ece:	e000      	b.n	8007ed2 <inc_lock+0x5a>
			Files[i].ofs == dp->dptr) break;
 8007ed0:	bf00      	nop
	}

	if (i == _FS_LOCK) {				/* Not opened. Register it as new. */
 8007ed2:	68fb      	ldr	r3, [r7, #12]
 8007ed4:	2b02      	cmp	r3, #2
 8007ed6:	d132      	bne.n	8007f3e <inc_lock+0xc6>
		for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 8007ed8:	2300      	movs	r3, #0
 8007eda:	60fb      	str	r3, [r7, #12]
 8007edc:	e002      	b.n	8007ee4 <inc_lock+0x6c>
 8007ede:	68fb      	ldr	r3, [r7, #12]
 8007ee0:	3301      	adds	r3, #1
 8007ee2:	60fb      	str	r3, [r7, #12]
 8007ee4:	68fb      	ldr	r3, [r7, #12]
 8007ee6:	2b01      	cmp	r3, #1
 8007ee8:	d806      	bhi.n	8007ef8 <inc_lock+0x80>
 8007eea:	4a29      	ldr	r2, [pc, #164]	; (8007f90 <inc_lock+0x118>)
 8007eec:	68fb      	ldr	r3, [r7, #12]
 8007eee:	011b      	lsls	r3, r3, #4
 8007ef0:	4413      	add	r3, r2
 8007ef2:	681b      	ldr	r3, [r3, #0]
 8007ef4:	2b00      	cmp	r3, #0
 8007ef6:	d1f2      	bne.n	8007ede <inc_lock+0x66>
		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 8007ef8:	68fb      	ldr	r3, [r7, #12]
 8007efa:	2b02      	cmp	r3, #2
 8007efc:	d101      	bne.n	8007f02 <inc_lock+0x8a>
 8007efe:	2300      	movs	r3, #0
 8007f00:	e040      	b.n	8007f84 <inc_lock+0x10c>
		Files[i].fs = dp->obj.fs;
 8007f02:	687b      	ldr	r3, [r7, #4]
 8007f04:	681a      	ldr	r2, [r3, #0]
 8007f06:	4922      	ldr	r1, [pc, #136]	; (8007f90 <inc_lock+0x118>)
 8007f08:	68fb      	ldr	r3, [r7, #12]
 8007f0a:	011b      	lsls	r3, r3, #4
 8007f0c:	440b      	add	r3, r1
 8007f0e:	601a      	str	r2, [r3, #0]
		Files[i].clu = dp->obj.sclust;
 8007f10:	687b      	ldr	r3, [r7, #4]
 8007f12:	689a      	ldr	r2, [r3, #8]
 8007f14:	491e      	ldr	r1, [pc, #120]	; (8007f90 <inc_lock+0x118>)
 8007f16:	68fb      	ldr	r3, [r7, #12]
 8007f18:	011b      	lsls	r3, r3, #4
 8007f1a:	440b      	add	r3, r1
 8007f1c:	3304      	adds	r3, #4
 8007f1e:	601a      	str	r2, [r3, #0]
		Files[i].ofs = dp->dptr;
 8007f20:	687b      	ldr	r3, [r7, #4]
 8007f22:	695a      	ldr	r2, [r3, #20]
 8007f24:	491a      	ldr	r1, [pc, #104]	; (8007f90 <inc_lock+0x118>)
 8007f26:	68fb      	ldr	r3, [r7, #12]
 8007f28:	011b      	lsls	r3, r3, #4
 8007f2a:	440b      	add	r3, r1
 8007f2c:	3308      	adds	r3, #8
 8007f2e:	601a      	str	r2, [r3, #0]
		Files[i].ctr = 0;
 8007f30:	4a17      	ldr	r2, [pc, #92]	; (8007f90 <inc_lock+0x118>)
 8007f32:	68fb      	ldr	r3, [r7, #12]
 8007f34:	011b      	lsls	r3, r3, #4
 8007f36:	4413      	add	r3, r2
 8007f38:	330c      	adds	r3, #12
 8007f3a:	2200      	movs	r2, #0
 8007f3c:	801a      	strh	r2, [r3, #0]
	}

	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 8007f3e:	683b      	ldr	r3, [r7, #0]
 8007f40:	2b00      	cmp	r3, #0
 8007f42:	d009      	beq.n	8007f58 <inc_lock+0xe0>
 8007f44:	4a12      	ldr	r2, [pc, #72]	; (8007f90 <inc_lock+0x118>)
 8007f46:	68fb      	ldr	r3, [r7, #12]
 8007f48:	011b      	lsls	r3, r3, #4
 8007f4a:	4413      	add	r3, r2
 8007f4c:	330c      	adds	r3, #12
 8007f4e:	881b      	ldrh	r3, [r3, #0]
 8007f50:	2b00      	cmp	r3, #0
 8007f52:	d001      	beq.n	8007f58 <inc_lock+0xe0>
 8007f54:	2300      	movs	r3, #0
 8007f56:	e015      	b.n	8007f84 <inc_lock+0x10c>

	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 8007f58:	683b      	ldr	r3, [r7, #0]
 8007f5a:	2b00      	cmp	r3, #0
 8007f5c:	d108      	bne.n	8007f70 <inc_lock+0xf8>
 8007f5e:	4a0c      	ldr	r2, [pc, #48]	; (8007f90 <inc_lock+0x118>)
 8007f60:	68fb      	ldr	r3, [r7, #12]
 8007f62:	011b      	lsls	r3, r3, #4
 8007f64:	4413      	add	r3, r2
 8007f66:	330c      	adds	r3, #12
 8007f68:	881b      	ldrh	r3, [r3, #0]
 8007f6a:	3301      	adds	r3, #1
 8007f6c:	b29a      	uxth	r2, r3
 8007f6e:	e001      	b.n	8007f74 <inc_lock+0xfc>
 8007f70:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007f74:	4906      	ldr	r1, [pc, #24]	; (8007f90 <inc_lock+0x118>)
 8007f76:	68fb      	ldr	r3, [r7, #12]
 8007f78:	011b      	lsls	r3, r3, #4
 8007f7a:	440b      	add	r3, r1
 8007f7c:	330c      	adds	r3, #12
 8007f7e:	801a      	strh	r2, [r3, #0]

	return i + 1;
 8007f80:	68fb      	ldr	r3, [r7, #12]
 8007f82:	3301      	adds	r3, #1
}
 8007f84:	4618      	mov	r0, r3
 8007f86:	3714      	adds	r7, #20
 8007f88:	46bd      	mov	sp, r7
 8007f8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f8e:	4770      	bx	lr
 8007f90:	2000afa4 	.word	0x2000afa4

08007f94 <dec_lock>:

static
FRESULT dec_lock (	/* Decrement object open counter */
	UINT i			/* Semaphore index (1..) */
)
{
 8007f94:	b480      	push	{r7}
 8007f96:	b085      	sub	sp, #20
 8007f98:	af00      	add	r7, sp, #0
 8007f9a:	6078      	str	r0, [r7, #4]
	WORD n;
	FRESULT res;


	if (--i < _FS_LOCK) {	/* Shift index number origin from 0 */
 8007f9c:	687b      	ldr	r3, [r7, #4]
 8007f9e:	3b01      	subs	r3, #1
 8007fa0:	607b      	str	r3, [r7, #4]
 8007fa2:	687b      	ldr	r3, [r7, #4]
 8007fa4:	2b01      	cmp	r3, #1
 8007fa6:	d825      	bhi.n	8007ff4 <dec_lock+0x60>
		n = Files[i].ctr;
 8007fa8:	4a17      	ldr	r2, [pc, #92]	; (8008008 <dec_lock+0x74>)
 8007faa:	687b      	ldr	r3, [r7, #4]
 8007fac:	011b      	lsls	r3, r3, #4
 8007fae:	4413      	add	r3, r2
 8007fb0:	330c      	adds	r3, #12
 8007fb2:	881b      	ldrh	r3, [r3, #0]
 8007fb4:	81fb      	strh	r3, [r7, #14]
		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 8007fb6:	89fb      	ldrh	r3, [r7, #14]
 8007fb8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007fbc:	d101      	bne.n	8007fc2 <dec_lock+0x2e>
 8007fbe:	2300      	movs	r3, #0
 8007fc0:	81fb      	strh	r3, [r7, #14]
		if (n > 0) n--;				/* Decrement read mode open count */
 8007fc2:	89fb      	ldrh	r3, [r7, #14]
 8007fc4:	2b00      	cmp	r3, #0
 8007fc6:	d002      	beq.n	8007fce <dec_lock+0x3a>
 8007fc8:	89fb      	ldrh	r3, [r7, #14]
 8007fca:	3b01      	subs	r3, #1
 8007fcc:	81fb      	strh	r3, [r7, #14]
		Files[i].ctr = n;
 8007fce:	4a0e      	ldr	r2, [pc, #56]	; (8008008 <dec_lock+0x74>)
 8007fd0:	687b      	ldr	r3, [r7, #4]
 8007fd2:	011b      	lsls	r3, r3, #4
 8007fd4:	4413      	add	r3, r2
 8007fd6:	330c      	adds	r3, #12
 8007fd8:	89fa      	ldrh	r2, [r7, #14]
 8007fda:	801a      	strh	r2, [r3, #0]
		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 8007fdc:	89fb      	ldrh	r3, [r7, #14]
 8007fde:	2b00      	cmp	r3, #0
 8007fe0:	d105      	bne.n	8007fee <dec_lock+0x5a>
 8007fe2:	4a09      	ldr	r2, [pc, #36]	; (8008008 <dec_lock+0x74>)
 8007fe4:	687b      	ldr	r3, [r7, #4]
 8007fe6:	011b      	lsls	r3, r3, #4
 8007fe8:	4413      	add	r3, r2
 8007fea:	2200      	movs	r2, #0
 8007fec:	601a      	str	r2, [r3, #0]
		res = FR_OK;
 8007fee:	2300      	movs	r3, #0
 8007ff0:	737b      	strb	r3, [r7, #13]
 8007ff2:	e001      	b.n	8007ff8 <dec_lock+0x64>
	} else {
		res = FR_INT_ERR;			/* Invalid index nunber */
 8007ff4:	2302      	movs	r3, #2
 8007ff6:	737b      	strb	r3, [r7, #13]
	}
	return res;
 8007ff8:	7b7b      	ldrb	r3, [r7, #13]
}
 8007ffa:	4618      	mov	r0, r3
 8007ffc:	3714      	adds	r7, #20
 8007ffe:	46bd      	mov	sp, r7
 8008000:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008004:	4770      	bx	lr
 8008006:	bf00      	nop
 8008008:	2000afa4 	.word	0x2000afa4

0800800c <clear_lock>:

static
void clear_lock (	/* Clear lock entries of the volume */
	FATFS *fs
)
{
 800800c:	b480      	push	{r7}
 800800e:	b085      	sub	sp, #20
 8008010:	af00      	add	r7, sp, #0
 8008012:	6078      	str	r0, [r7, #4]
	UINT i;

	for (i = 0; i < _FS_LOCK; i++) {
 8008014:	2300      	movs	r3, #0
 8008016:	60fb      	str	r3, [r7, #12]
 8008018:	e010      	b.n	800803c <clear_lock+0x30>
		if (Files[i].fs == fs) Files[i].fs = 0;
 800801a:	4a0d      	ldr	r2, [pc, #52]	; (8008050 <clear_lock+0x44>)
 800801c:	68fb      	ldr	r3, [r7, #12]
 800801e:	011b      	lsls	r3, r3, #4
 8008020:	4413      	add	r3, r2
 8008022:	681b      	ldr	r3, [r3, #0]
 8008024:	687a      	ldr	r2, [r7, #4]
 8008026:	429a      	cmp	r2, r3
 8008028:	d105      	bne.n	8008036 <clear_lock+0x2a>
 800802a:	4a09      	ldr	r2, [pc, #36]	; (8008050 <clear_lock+0x44>)
 800802c:	68fb      	ldr	r3, [r7, #12]
 800802e:	011b      	lsls	r3, r3, #4
 8008030:	4413      	add	r3, r2
 8008032:	2200      	movs	r2, #0
 8008034:	601a      	str	r2, [r3, #0]
	for (i = 0; i < _FS_LOCK; i++) {
 8008036:	68fb      	ldr	r3, [r7, #12]
 8008038:	3301      	adds	r3, #1
 800803a:	60fb      	str	r3, [r7, #12]
 800803c:	68fb      	ldr	r3, [r7, #12]
 800803e:	2b01      	cmp	r3, #1
 8008040:	d9eb      	bls.n	800801a <clear_lock+0xe>
	}
}
 8008042:	bf00      	nop
 8008044:	bf00      	nop
 8008046:	3714      	adds	r7, #20
 8008048:	46bd      	mov	sp, r7
 800804a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800804e:	4770      	bx	lr
 8008050:	2000afa4 	.word	0x2000afa4

08008054 <sync_window>:
#if !_FS_READONLY
static
FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERROR */
	FATFS* fs			/* File system object */
)
{
 8008054:	b580      	push	{r7, lr}
 8008056:	b086      	sub	sp, #24
 8008058:	af00      	add	r7, sp, #0
 800805a:	6078      	str	r0, [r7, #4]
	DWORD wsect;
	UINT nf;
	FRESULT res = FR_OK;
 800805c:	2300      	movs	r3, #0
 800805e:	73fb      	strb	r3, [r7, #15]


	if (fs->wflag) {	/* Write back the sector if it is dirty */
 8008060:	687b      	ldr	r3, [r7, #4]
 8008062:	78db      	ldrb	r3, [r3, #3]
 8008064:	2b00      	cmp	r3, #0
 8008066:	d034      	beq.n	80080d2 <sync_window+0x7e>
		wsect = fs->winsect;	/* Current sector number */
 8008068:	687b      	ldr	r3, [r7, #4]
 800806a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800806c:	617b      	str	r3, [r7, #20]
		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 800806e:	687b      	ldr	r3, [r7, #4]
 8008070:	7858      	ldrb	r0, [r3, #1]
 8008072:	687b      	ldr	r3, [r7, #4]
 8008074:	f103 0138 	add.w	r1, r3, #56	; 0x38
 8008078:	2301      	movs	r3, #1
 800807a:	697a      	ldr	r2, [r7, #20]
 800807c:	f7ff fd40 	bl	8007b00 <disk_write>
 8008080:	4603      	mov	r3, r0
 8008082:	2b00      	cmp	r3, #0
 8008084:	d002      	beq.n	800808c <sync_window+0x38>
			res = FR_DISK_ERR;
 8008086:	2301      	movs	r3, #1
 8008088:	73fb      	strb	r3, [r7, #15]
 800808a:	e022      	b.n	80080d2 <sync_window+0x7e>
		} else {
			fs->wflag = 0;
 800808c:	687b      	ldr	r3, [r7, #4]
 800808e:	2200      	movs	r2, #0
 8008090:	70da      	strb	r2, [r3, #3]
			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 8008092:	687b      	ldr	r3, [r7, #4]
 8008094:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008096:	697a      	ldr	r2, [r7, #20]
 8008098:	1ad2      	subs	r2, r2, r3
 800809a:	687b      	ldr	r3, [r7, #4]
 800809c:	6a1b      	ldr	r3, [r3, #32]
 800809e:	429a      	cmp	r2, r3
 80080a0:	d217      	bcs.n	80080d2 <sync_window+0x7e>
				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 80080a2:	687b      	ldr	r3, [r7, #4]
 80080a4:	789b      	ldrb	r3, [r3, #2]
 80080a6:	613b      	str	r3, [r7, #16]
 80080a8:	e010      	b.n	80080cc <sync_window+0x78>
					wsect += fs->fsize;
 80080aa:	687b      	ldr	r3, [r7, #4]
 80080ac:	6a1b      	ldr	r3, [r3, #32]
 80080ae:	697a      	ldr	r2, [r7, #20]
 80080b0:	4413      	add	r3, r2
 80080b2:	617b      	str	r3, [r7, #20]
					disk_write(fs->drv, fs->win, wsect, 1);
 80080b4:	687b      	ldr	r3, [r7, #4]
 80080b6:	7858      	ldrb	r0, [r3, #1]
 80080b8:	687b      	ldr	r3, [r7, #4]
 80080ba:	f103 0138 	add.w	r1, r3, #56	; 0x38
 80080be:	2301      	movs	r3, #1
 80080c0:	697a      	ldr	r2, [r7, #20]
 80080c2:	f7ff fd1d 	bl	8007b00 <disk_write>
				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 80080c6:	693b      	ldr	r3, [r7, #16]
 80080c8:	3b01      	subs	r3, #1
 80080ca:	613b      	str	r3, [r7, #16]
 80080cc:	693b      	ldr	r3, [r7, #16]
 80080ce:	2b01      	cmp	r3, #1
 80080d0:	d8eb      	bhi.n	80080aa <sync_window+0x56>
				}
			}
		}
	}
	return res;
 80080d2:	7bfb      	ldrb	r3, [r7, #15]
}
 80080d4:	4618      	mov	r0, r3
 80080d6:	3718      	adds	r7, #24
 80080d8:	46bd      	mov	sp, r7
 80080da:	bd80      	pop	{r7, pc}

080080dc <move_window>:
static
FRESULT move_window (	/* Returns FR_OK or FR_DISK_ERROR */
	FATFS* fs,			/* File system object */
	DWORD sector		/* Sector number to make appearance in the fs->win[] */
)
{
 80080dc:	b580      	push	{r7, lr}
 80080de:	b084      	sub	sp, #16
 80080e0:	af00      	add	r7, sp, #0
 80080e2:	6078      	str	r0, [r7, #4]
 80080e4:	6039      	str	r1, [r7, #0]
	FRESULT res = FR_OK;
 80080e6:	2300      	movs	r3, #0
 80080e8:	73fb      	strb	r3, [r7, #15]


	if (sector != fs->winsect) {	/* Window offset changed? */
 80080ea:	687b      	ldr	r3, [r7, #4]
 80080ec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80080ee:	683a      	ldr	r2, [r7, #0]
 80080f0:	429a      	cmp	r2, r3
 80080f2:	d01b      	beq.n	800812c <move_window+0x50>
#if !_FS_READONLY
		res = sync_window(fs);		/* Write-back changes */
 80080f4:	6878      	ldr	r0, [r7, #4]
 80080f6:	f7ff ffad 	bl	8008054 <sync_window>
 80080fa:	4603      	mov	r3, r0
 80080fc:	73fb      	strb	r3, [r7, #15]
#endif
		if (res == FR_OK) {			/* Fill sector window with new data */
 80080fe:	7bfb      	ldrb	r3, [r7, #15]
 8008100:	2b00      	cmp	r3, #0
 8008102:	d113      	bne.n	800812c <move_window+0x50>
			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 8008104:	687b      	ldr	r3, [r7, #4]
 8008106:	7858      	ldrb	r0, [r3, #1]
 8008108:	687b      	ldr	r3, [r7, #4]
 800810a:	f103 0138 	add.w	r1, r3, #56	; 0x38
 800810e:	2301      	movs	r3, #1
 8008110:	683a      	ldr	r2, [r7, #0]
 8008112:	f7ff fcd5 	bl	8007ac0 <disk_read>
 8008116:	4603      	mov	r3, r0
 8008118:	2b00      	cmp	r3, #0
 800811a:	d004      	beq.n	8008126 <move_window+0x4a>
				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 800811c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008120:	603b      	str	r3, [r7, #0]
				res = FR_DISK_ERR;
 8008122:	2301      	movs	r3, #1
 8008124:	73fb      	strb	r3, [r7, #15]
			}
			fs->winsect = sector;
 8008126:	687b      	ldr	r3, [r7, #4]
 8008128:	683a      	ldr	r2, [r7, #0]
 800812a:	635a      	str	r2, [r3, #52]	; 0x34
		}
	}
	return res;
 800812c:	7bfb      	ldrb	r3, [r7, #15]
}
 800812e:	4618      	mov	r0, r3
 8008130:	3710      	adds	r7, #16
 8008132:	46bd      	mov	sp, r7
 8008134:	bd80      	pop	{r7, pc}
	...

08008138 <sync_fs>:

static
FRESULT sync_fs (	/* FR_OK:succeeded, !=0:error */
	FATFS* fs		/* File system object */
)
{
 8008138:	b580      	push	{r7, lr}
 800813a:	b084      	sub	sp, #16
 800813c:	af00      	add	r7, sp, #0
 800813e:	6078      	str	r0, [r7, #4]
	FRESULT res;


	res = sync_window(fs);
 8008140:	6878      	ldr	r0, [r7, #4]
 8008142:	f7ff ff87 	bl	8008054 <sync_window>
 8008146:	4603      	mov	r3, r0
 8008148:	73fb      	strb	r3, [r7, #15]
	if (res == FR_OK) {
 800814a:	7bfb      	ldrb	r3, [r7, #15]
 800814c:	2b00      	cmp	r3, #0
 800814e:	d159      	bne.n	8008204 <sync_fs+0xcc>
		/* Update FSInfo sector if needed */
		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
 8008150:	687b      	ldr	r3, [r7, #4]
 8008152:	781b      	ldrb	r3, [r3, #0]
 8008154:	2b03      	cmp	r3, #3
 8008156:	d149      	bne.n	80081ec <sync_fs+0xb4>
 8008158:	687b      	ldr	r3, [r7, #4]
 800815a:	791b      	ldrb	r3, [r3, #4]
 800815c:	2b01      	cmp	r3, #1
 800815e:	d145      	bne.n	80081ec <sync_fs+0xb4>
			/* Create FSInfo structure */
			mem_set(fs->win, 0, SS(fs));
 8008160:	687b      	ldr	r3, [r7, #4]
 8008162:	f103 0038 	add.w	r0, r3, #56	; 0x38
 8008166:	687b      	ldr	r3, [r7, #4]
 8008168:	899b      	ldrh	r3, [r3, #12]
 800816a:	461a      	mov	r2, r3
 800816c:	2100      	movs	r1, #0
 800816e:	f7ff fda8 	bl	8007cc2 <mem_set>
			st_word(fs->win + BS_55AA, 0xAA55);
 8008172:	687b      	ldr	r3, [r7, #4]
 8008174:	3338      	adds	r3, #56	; 0x38
 8008176:	f503 73ff 	add.w	r3, r3, #510	; 0x1fe
 800817a:	f64a 2155 	movw	r1, #43605	; 0xaa55
 800817e:	4618      	mov	r0, r3
 8008180:	f7ff fd37 	bl	8007bf2 <st_word>
			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 8008184:	687b      	ldr	r3, [r7, #4]
 8008186:	3338      	adds	r3, #56	; 0x38
 8008188:	4921      	ldr	r1, [pc, #132]	; (8008210 <sync_fs+0xd8>)
 800818a:	4618      	mov	r0, r3
 800818c:	f7ff fd4c 	bl	8007c28 <st_dword>
			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 8008190:	687b      	ldr	r3, [r7, #4]
 8008192:	3338      	adds	r3, #56	; 0x38
 8008194:	f503 73f2 	add.w	r3, r3, #484	; 0x1e4
 8008198:	491e      	ldr	r1, [pc, #120]	; (8008214 <sync_fs+0xdc>)
 800819a:	4618      	mov	r0, r3
 800819c:	f7ff fd44 	bl	8007c28 <st_dword>
			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 80081a0:	687b      	ldr	r3, [r7, #4]
 80081a2:	3338      	adds	r3, #56	; 0x38
 80081a4:	f503 72f4 	add.w	r2, r3, #488	; 0x1e8
 80081a8:	687b      	ldr	r3, [r7, #4]
 80081aa:	699b      	ldr	r3, [r3, #24]
 80081ac:	4619      	mov	r1, r3
 80081ae:	4610      	mov	r0, r2
 80081b0:	f7ff fd3a 	bl	8007c28 <st_dword>
			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 80081b4:	687b      	ldr	r3, [r7, #4]
 80081b6:	3338      	adds	r3, #56	; 0x38
 80081b8:	f503 72f6 	add.w	r2, r3, #492	; 0x1ec
 80081bc:	687b      	ldr	r3, [r7, #4]
 80081be:	695b      	ldr	r3, [r3, #20]
 80081c0:	4619      	mov	r1, r3
 80081c2:	4610      	mov	r0, r2
 80081c4:	f7ff fd30 	bl	8007c28 <st_dword>
			/* Write it into the FSInfo sector */
			fs->winsect = fs->volbase + 1;
 80081c8:	687b      	ldr	r3, [r7, #4]
 80081ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80081cc:	1c5a      	adds	r2, r3, #1
 80081ce:	687b      	ldr	r3, [r7, #4]
 80081d0:	635a      	str	r2, [r3, #52]	; 0x34
			disk_write(fs->drv, fs->win, fs->winsect, 1);
 80081d2:	687b      	ldr	r3, [r7, #4]
 80081d4:	7858      	ldrb	r0, [r3, #1]
 80081d6:	687b      	ldr	r3, [r7, #4]
 80081d8:	f103 0138 	add.w	r1, r3, #56	; 0x38
 80081dc:	687b      	ldr	r3, [r7, #4]
 80081de:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80081e0:	2301      	movs	r3, #1
 80081e2:	f7ff fc8d 	bl	8007b00 <disk_write>
			fs->fsi_flag = 0;
 80081e6:	687b      	ldr	r3, [r7, #4]
 80081e8:	2200      	movs	r2, #0
 80081ea:	711a      	strb	r2, [r3, #4]
		}
		/* Make sure that no pending write process in the physical drive */
		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK) res = FR_DISK_ERR;
 80081ec:	687b      	ldr	r3, [r7, #4]
 80081ee:	785b      	ldrb	r3, [r3, #1]
 80081f0:	2200      	movs	r2, #0
 80081f2:	2100      	movs	r1, #0
 80081f4:	4618      	mov	r0, r3
 80081f6:	f7ff fca3 	bl	8007b40 <disk_ioctl>
 80081fa:	4603      	mov	r3, r0
 80081fc:	2b00      	cmp	r3, #0
 80081fe:	d001      	beq.n	8008204 <sync_fs+0xcc>
 8008200:	2301      	movs	r3, #1
 8008202:	73fb      	strb	r3, [r7, #15]
	}

	return res;
 8008204:	7bfb      	ldrb	r3, [r7, #15]
}
 8008206:	4618      	mov	r0, r3
 8008208:	3710      	adds	r7, #16
 800820a:	46bd      	mov	sp, r7
 800820c:	bd80      	pop	{r7, pc}
 800820e:	bf00      	nop
 8008210:	41615252 	.word	0x41615252
 8008214:	61417272 	.word	0x61417272

08008218 <clust2sect>:
static
DWORD clust2sect (	/* !=0:Sector number, 0:Failed (invalid cluster#) */
	FATFS* fs,		/* File system object */
	DWORD clst		/* Cluster# to be converted */
)
{
 8008218:	b480      	push	{r7}
 800821a:	b083      	sub	sp, #12
 800821c:	af00      	add	r7, sp, #0
 800821e:	6078      	str	r0, [r7, #4]
 8008220:	6039      	str	r1, [r7, #0]
	clst -= 2;
 8008222:	683b      	ldr	r3, [r7, #0]
 8008224:	3b02      	subs	r3, #2
 8008226:	603b      	str	r3, [r7, #0]
	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 8008228:	687b      	ldr	r3, [r7, #4]
 800822a:	69db      	ldr	r3, [r3, #28]
 800822c:	3b02      	subs	r3, #2
 800822e:	683a      	ldr	r2, [r7, #0]
 8008230:	429a      	cmp	r2, r3
 8008232:	d301      	bcc.n	8008238 <clust2sect+0x20>
 8008234:	2300      	movs	r3, #0
 8008236:	e008      	b.n	800824a <clust2sect+0x32>
	return clst * fs->csize + fs->database;
 8008238:	687b      	ldr	r3, [r7, #4]
 800823a:	895b      	ldrh	r3, [r3, #10]
 800823c:	461a      	mov	r2, r3
 800823e:	683b      	ldr	r3, [r7, #0]
 8008240:	fb03 f202 	mul.w	r2, r3, r2
 8008244:	687b      	ldr	r3, [r7, #4]
 8008246:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008248:	4413      	add	r3, r2
}
 800824a:	4618      	mov	r0, r3
 800824c:	370c      	adds	r7, #12
 800824e:	46bd      	mov	sp, r7
 8008250:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008254:	4770      	bx	lr

08008256 <get_fat>:
static
DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x7FFFFFFF:Cluster status */
	_FDID* obj,	/* Corresponding object */
	DWORD clst	/* Cluster number to get the value */
)
{
 8008256:	b580      	push	{r7, lr}
 8008258:	b086      	sub	sp, #24
 800825a:	af00      	add	r7, sp, #0
 800825c:	6078      	str	r0, [r7, #4]
 800825e:	6039      	str	r1, [r7, #0]
	UINT wc, bc;
	DWORD val;
	FATFS *fs = obj->fs;
 8008260:	687b      	ldr	r3, [r7, #4]
 8008262:	681b      	ldr	r3, [r3, #0]
 8008264:	613b      	str	r3, [r7, #16]


	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
 8008266:	683b      	ldr	r3, [r7, #0]
 8008268:	2b01      	cmp	r3, #1
 800826a:	d904      	bls.n	8008276 <get_fat+0x20>
 800826c:	693b      	ldr	r3, [r7, #16]
 800826e:	69db      	ldr	r3, [r3, #28]
 8008270:	683a      	ldr	r2, [r7, #0]
 8008272:	429a      	cmp	r2, r3
 8008274:	d302      	bcc.n	800827c <get_fat+0x26>
		val = 1;	/* Internal error */
 8008276:	2301      	movs	r3, #1
 8008278:	617b      	str	r3, [r7, #20]
 800827a:	e0bb      	b.n	80083f4 <get_fat+0x19e>

	} else {
		val = 0xFFFFFFFF;	/* Default value falls on disk error */
 800827c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008280:	617b      	str	r3, [r7, #20]

		switch (fs->fs_type) {
 8008282:	693b      	ldr	r3, [r7, #16]
 8008284:	781b      	ldrb	r3, [r3, #0]
 8008286:	2b03      	cmp	r3, #3
 8008288:	f000 8083 	beq.w	8008392 <get_fat+0x13c>
 800828c:	2b03      	cmp	r3, #3
 800828e:	f300 80a7 	bgt.w	80083e0 <get_fat+0x18a>
 8008292:	2b01      	cmp	r3, #1
 8008294:	d002      	beq.n	800829c <get_fat+0x46>
 8008296:	2b02      	cmp	r3, #2
 8008298:	d056      	beq.n	8008348 <get_fat+0xf2>
 800829a:	e0a1      	b.n	80083e0 <get_fat+0x18a>
		case FS_FAT12 :
			bc = (UINT)clst; bc += bc / 2;
 800829c:	683b      	ldr	r3, [r7, #0]
 800829e:	60fb      	str	r3, [r7, #12]
 80082a0:	68fb      	ldr	r3, [r7, #12]
 80082a2:	085b      	lsrs	r3, r3, #1
 80082a4:	68fa      	ldr	r2, [r7, #12]
 80082a6:	4413      	add	r3, r2
 80082a8:	60fb      	str	r3, [r7, #12]
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 80082aa:	693b      	ldr	r3, [r7, #16]
 80082ac:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80082ae:	693b      	ldr	r3, [r7, #16]
 80082b0:	899b      	ldrh	r3, [r3, #12]
 80082b2:	4619      	mov	r1, r3
 80082b4:	68fb      	ldr	r3, [r7, #12]
 80082b6:	fbb3 f3f1 	udiv	r3, r3, r1
 80082ba:	4413      	add	r3, r2
 80082bc:	4619      	mov	r1, r3
 80082be:	6938      	ldr	r0, [r7, #16]
 80082c0:	f7ff ff0c 	bl	80080dc <move_window>
 80082c4:	4603      	mov	r3, r0
 80082c6:	2b00      	cmp	r3, #0
 80082c8:	f040 808d 	bne.w	80083e6 <get_fat+0x190>
			wc = fs->win[bc++ % SS(fs)];
 80082cc:	68fb      	ldr	r3, [r7, #12]
 80082ce:	1c5a      	adds	r2, r3, #1
 80082d0:	60fa      	str	r2, [r7, #12]
 80082d2:	693a      	ldr	r2, [r7, #16]
 80082d4:	8992      	ldrh	r2, [r2, #12]
 80082d6:	fbb3 f1f2 	udiv	r1, r3, r2
 80082da:	fb01 f202 	mul.w	r2, r1, r2
 80082de:	1a9b      	subs	r3, r3, r2
 80082e0:	693a      	ldr	r2, [r7, #16]
 80082e2:	4413      	add	r3, r2
 80082e4:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 80082e8:	60bb      	str	r3, [r7, #8]
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 80082ea:	693b      	ldr	r3, [r7, #16]
 80082ec:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80082ee:	693b      	ldr	r3, [r7, #16]
 80082f0:	899b      	ldrh	r3, [r3, #12]
 80082f2:	4619      	mov	r1, r3
 80082f4:	68fb      	ldr	r3, [r7, #12]
 80082f6:	fbb3 f3f1 	udiv	r3, r3, r1
 80082fa:	4413      	add	r3, r2
 80082fc:	4619      	mov	r1, r3
 80082fe:	6938      	ldr	r0, [r7, #16]
 8008300:	f7ff feec 	bl	80080dc <move_window>
 8008304:	4603      	mov	r3, r0
 8008306:	2b00      	cmp	r3, #0
 8008308:	d16f      	bne.n	80083ea <get_fat+0x194>
			wc |= fs->win[bc % SS(fs)] << 8;
 800830a:	693b      	ldr	r3, [r7, #16]
 800830c:	899b      	ldrh	r3, [r3, #12]
 800830e:	461a      	mov	r2, r3
 8008310:	68fb      	ldr	r3, [r7, #12]
 8008312:	fbb3 f1f2 	udiv	r1, r3, r2
 8008316:	fb01 f202 	mul.w	r2, r1, r2
 800831a:	1a9b      	subs	r3, r3, r2
 800831c:	693a      	ldr	r2, [r7, #16]
 800831e:	4413      	add	r3, r2
 8008320:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8008324:	021b      	lsls	r3, r3, #8
 8008326:	461a      	mov	r2, r3
 8008328:	68bb      	ldr	r3, [r7, #8]
 800832a:	4313      	orrs	r3, r2
 800832c:	60bb      	str	r3, [r7, #8]
			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 800832e:	683b      	ldr	r3, [r7, #0]
 8008330:	f003 0301 	and.w	r3, r3, #1
 8008334:	2b00      	cmp	r3, #0
 8008336:	d002      	beq.n	800833e <get_fat+0xe8>
 8008338:	68bb      	ldr	r3, [r7, #8]
 800833a:	091b      	lsrs	r3, r3, #4
 800833c:	e002      	b.n	8008344 <get_fat+0xee>
 800833e:	68bb      	ldr	r3, [r7, #8]
 8008340:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008344:	617b      	str	r3, [r7, #20]
			break;
 8008346:	e055      	b.n	80083f4 <get_fat+0x19e>

		case FS_FAT16 :
			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
 8008348:	693b      	ldr	r3, [r7, #16]
 800834a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800834c:	693b      	ldr	r3, [r7, #16]
 800834e:	899b      	ldrh	r3, [r3, #12]
 8008350:	085b      	lsrs	r3, r3, #1
 8008352:	b29b      	uxth	r3, r3
 8008354:	4619      	mov	r1, r3
 8008356:	683b      	ldr	r3, [r7, #0]
 8008358:	fbb3 f3f1 	udiv	r3, r3, r1
 800835c:	4413      	add	r3, r2
 800835e:	4619      	mov	r1, r3
 8008360:	6938      	ldr	r0, [r7, #16]
 8008362:	f7ff febb 	bl	80080dc <move_window>
 8008366:	4603      	mov	r3, r0
 8008368:	2b00      	cmp	r3, #0
 800836a:	d140      	bne.n	80083ee <get_fat+0x198>
			val = ld_word(fs->win + clst * 2 % SS(fs));
 800836c:	693b      	ldr	r3, [r7, #16]
 800836e:	f103 0138 	add.w	r1, r3, #56	; 0x38
 8008372:	683b      	ldr	r3, [r7, #0]
 8008374:	005b      	lsls	r3, r3, #1
 8008376:	693a      	ldr	r2, [r7, #16]
 8008378:	8992      	ldrh	r2, [r2, #12]
 800837a:	fbb3 f0f2 	udiv	r0, r3, r2
 800837e:	fb00 f202 	mul.w	r2, r0, r2
 8008382:	1a9b      	subs	r3, r3, r2
 8008384:	440b      	add	r3, r1
 8008386:	4618      	mov	r0, r3
 8008388:	f7ff fbf8 	bl	8007b7c <ld_word>
 800838c:	4603      	mov	r3, r0
 800838e:	617b      	str	r3, [r7, #20]
			break;
 8008390:	e030      	b.n	80083f4 <get_fat+0x19e>

		case FS_FAT32 :
			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
 8008392:	693b      	ldr	r3, [r7, #16]
 8008394:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8008396:	693b      	ldr	r3, [r7, #16]
 8008398:	899b      	ldrh	r3, [r3, #12]
 800839a:	089b      	lsrs	r3, r3, #2
 800839c:	b29b      	uxth	r3, r3
 800839e:	4619      	mov	r1, r3
 80083a0:	683b      	ldr	r3, [r7, #0]
 80083a2:	fbb3 f3f1 	udiv	r3, r3, r1
 80083a6:	4413      	add	r3, r2
 80083a8:	4619      	mov	r1, r3
 80083aa:	6938      	ldr	r0, [r7, #16]
 80083ac:	f7ff fe96 	bl	80080dc <move_window>
 80083b0:	4603      	mov	r3, r0
 80083b2:	2b00      	cmp	r3, #0
 80083b4:	d11d      	bne.n	80083f2 <get_fat+0x19c>
			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
 80083b6:	693b      	ldr	r3, [r7, #16]
 80083b8:	f103 0138 	add.w	r1, r3, #56	; 0x38
 80083bc:	683b      	ldr	r3, [r7, #0]
 80083be:	009b      	lsls	r3, r3, #2
 80083c0:	693a      	ldr	r2, [r7, #16]
 80083c2:	8992      	ldrh	r2, [r2, #12]
 80083c4:	fbb3 f0f2 	udiv	r0, r3, r2
 80083c8:	fb00 f202 	mul.w	r2, r0, r2
 80083cc:	1a9b      	subs	r3, r3, r2
 80083ce:	440b      	add	r3, r1
 80083d0:	4618      	mov	r0, r3
 80083d2:	f7ff fbeb 	bl	8007bac <ld_dword>
 80083d6:	4603      	mov	r3, r0
 80083d8:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 80083dc:	617b      	str	r3, [r7, #20]
			break;
 80083de:	e009      	b.n	80083f4 <get_fat+0x19e>
				}
			}
			/* go to default */
#endif
		default:
			val = 1;	/* Internal error */
 80083e0:	2301      	movs	r3, #1
 80083e2:	617b      	str	r3, [r7, #20]
 80083e4:	e006      	b.n	80083f4 <get_fat+0x19e>
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 80083e6:	bf00      	nop
 80083e8:	e004      	b.n	80083f4 <get_fat+0x19e>
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 80083ea:	bf00      	nop
 80083ec:	e002      	b.n	80083f4 <get_fat+0x19e>
			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
 80083ee:	bf00      	nop
 80083f0:	e000      	b.n	80083f4 <get_fat+0x19e>
			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
 80083f2:	bf00      	nop
		}
	}

	return val;
 80083f4:	697b      	ldr	r3, [r7, #20]
}
 80083f6:	4618      	mov	r0, r3
 80083f8:	3718      	adds	r7, #24
 80083fa:	46bd      	mov	sp, r7
 80083fc:	bd80      	pop	{r7, pc}

080083fe <put_fat>:
FRESULT put_fat (	/* FR_OK(0):succeeded, !=0:error */
	FATFS* fs,		/* Corresponding file system object */
	DWORD clst,		/* FAT index number (cluster number) to be changed */
	DWORD val		/* New value to be set to the entry */
)
{
 80083fe:	b590      	push	{r4, r7, lr}
 8008400:	b089      	sub	sp, #36	; 0x24
 8008402:	af00      	add	r7, sp, #0
 8008404:	60f8      	str	r0, [r7, #12]
 8008406:	60b9      	str	r1, [r7, #8]
 8008408:	607a      	str	r2, [r7, #4]
	UINT bc;
	BYTE *p;
	FRESULT res = FR_INT_ERR;
 800840a:	2302      	movs	r3, #2
 800840c:	77fb      	strb	r3, [r7, #31]

	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
 800840e:	68bb      	ldr	r3, [r7, #8]
 8008410:	2b01      	cmp	r3, #1
 8008412:	f240 8109 	bls.w	8008628 <put_fat+0x22a>
 8008416:	68fb      	ldr	r3, [r7, #12]
 8008418:	69db      	ldr	r3, [r3, #28]
 800841a:	68ba      	ldr	r2, [r7, #8]
 800841c:	429a      	cmp	r2, r3
 800841e:	f080 8103 	bcs.w	8008628 <put_fat+0x22a>
		switch (fs->fs_type) {
 8008422:	68fb      	ldr	r3, [r7, #12]
 8008424:	781b      	ldrb	r3, [r3, #0]
 8008426:	2b03      	cmp	r3, #3
 8008428:	f000 80b6 	beq.w	8008598 <put_fat+0x19a>
 800842c:	2b03      	cmp	r3, #3
 800842e:	f300 80fb 	bgt.w	8008628 <put_fat+0x22a>
 8008432:	2b01      	cmp	r3, #1
 8008434:	d003      	beq.n	800843e <put_fat+0x40>
 8008436:	2b02      	cmp	r3, #2
 8008438:	f000 8083 	beq.w	8008542 <put_fat+0x144>
 800843c:	e0f4      	b.n	8008628 <put_fat+0x22a>
		case FS_FAT12 :	/* Bitfield items */
			bc = (UINT)clst; bc += bc / 2;
 800843e:	68bb      	ldr	r3, [r7, #8]
 8008440:	61bb      	str	r3, [r7, #24]
 8008442:	69bb      	ldr	r3, [r7, #24]
 8008444:	085b      	lsrs	r3, r3, #1
 8008446:	69ba      	ldr	r2, [r7, #24]
 8008448:	4413      	add	r3, r2
 800844a:	61bb      	str	r3, [r7, #24]
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 800844c:	68fb      	ldr	r3, [r7, #12]
 800844e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8008450:	68fb      	ldr	r3, [r7, #12]
 8008452:	899b      	ldrh	r3, [r3, #12]
 8008454:	4619      	mov	r1, r3
 8008456:	69bb      	ldr	r3, [r7, #24]
 8008458:	fbb3 f3f1 	udiv	r3, r3, r1
 800845c:	4413      	add	r3, r2
 800845e:	4619      	mov	r1, r3
 8008460:	68f8      	ldr	r0, [r7, #12]
 8008462:	f7ff fe3b 	bl	80080dc <move_window>
 8008466:	4603      	mov	r3, r0
 8008468:	77fb      	strb	r3, [r7, #31]
			if (res != FR_OK) break;
 800846a:	7ffb      	ldrb	r3, [r7, #31]
 800846c:	2b00      	cmp	r3, #0
 800846e:	f040 80d4 	bne.w	800861a <put_fat+0x21c>
			p = fs->win + bc++ % SS(fs);
 8008472:	68fb      	ldr	r3, [r7, #12]
 8008474:	f103 0138 	add.w	r1, r3, #56	; 0x38
 8008478:	69bb      	ldr	r3, [r7, #24]
 800847a:	1c5a      	adds	r2, r3, #1
 800847c:	61ba      	str	r2, [r7, #24]
 800847e:	68fa      	ldr	r2, [r7, #12]
 8008480:	8992      	ldrh	r2, [r2, #12]
 8008482:	fbb3 f0f2 	udiv	r0, r3, r2
 8008486:	fb00 f202 	mul.w	r2, r0, r2
 800848a:	1a9b      	subs	r3, r3, r2
 800848c:	440b      	add	r3, r1
 800848e:	617b      	str	r3, [r7, #20]
			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 8008490:	68bb      	ldr	r3, [r7, #8]
 8008492:	f003 0301 	and.w	r3, r3, #1
 8008496:	2b00      	cmp	r3, #0
 8008498:	d00d      	beq.n	80084b6 <put_fat+0xb8>
 800849a:	697b      	ldr	r3, [r7, #20]
 800849c:	781b      	ldrb	r3, [r3, #0]
 800849e:	b25b      	sxtb	r3, r3
 80084a0:	f003 030f 	and.w	r3, r3, #15
 80084a4:	b25a      	sxtb	r2, r3
 80084a6:	687b      	ldr	r3, [r7, #4]
 80084a8:	b2db      	uxtb	r3, r3
 80084aa:	011b      	lsls	r3, r3, #4
 80084ac:	b25b      	sxtb	r3, r3
 80084ae:	4313      	orrs	r3, r2
 80084b0:	b25b      	sxtb	r3, r3
 80084b2:	b2db      	uxtb	r3, r3
 80084b4:	e001      	b.n	80084ba <put_fat+0xbc>
 80084b6:	687b      	ldr	r3, [r7, #4]
 80084b8:	b2db      	uxtb	r3, r3
 80084ba:	697a      	ldr	r2, [r7, #20]
 80084bc:	7013      	strb	r3, [r2, #0]
			fs->wflag = 1;
 80084be:	68fb      	ldr	r3, [r7, #12]
 80084c0:	2201      	movs	r2, #1
 80084c2:	70da      	strb	r2, [r3, #3]
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 80084c4:	68fb      	ldr	r3, [r7, #12]
 80084c6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80084c8:	68fb      	ldr	r3, [r7, #12]
 80084ca:	899b      	ldrh	r3, [r3, #12]
 80084cc:	4619      	mov	r1, r3
 80084ce:	69bb      	ldr	r3, [r7, #24]
 80084d0:	fbb3 f3f1 	udiv	r3, r3, r1
 80084d4:	4413      	add	r3, r2
 80084d6:	4619      	mov	r1, r3
 80084d8:	68f8      	ldr	r0, [r7, #12]
 80084da:	f7ff fdff 	bl	80080dc <move_window>
 80084de:	4603      	mov	r3, r0
 80084e0:	77fb      	strb	r3, [r7, #31]
			if (res != FR_OK) break;
 80084e2:	7ffb      	ldrb	r3, [r7, #31]
 80084e4:	2b00      	cmp	r3, #0
 80084e6:	f040 809a 	bne.w	800861e <put_fat+0x220>
			p = fs->win + bc % SS(fs);
 80084ea:	68fb      	ldr	r3, [r7, #12]
 80084ec:	f103 0138 	add.w	r1, r3, #56	; 0x38
 80084f0:	68fb      	ldr	r3, [r7, #12]
 80084f2:	899b      	ldrh	r3, [r3, #12]
 80084f4:	461a      	mov	r2, r3
 80084f6:	69bb      	ldr	r3, [r7, #24]
 80084f8:	fbb3 f0f2 	udiv	r0, r3, r2
 80084fc:	fb00 f202 	mul.w	r2, r0, r2
 8008500:	1a9b      	subs	r3, r3, r2
 8008502:	440b      	add	r3, r1
 8008504:	617b      	str	r3, [r7, #20]
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 8008506:	68bb      	ldr	r3, [r7, #8]
 8008508:	f003 0301 	and.w	r3, r3, #1
 800850c:	2b00      	cmp	r3, #0
 800850e:	d003      	beq.n	8008518 <put_fat+0x11a>
 8008510:	687b      	ldr	r3, [r7, #4]
 8008512:	091b      	lsrs	r3, r3, #4
 8008514:	b2db      	uxtb	r3, r3
 8008516:	e00e      	b.n	8008536 <put_fat+0x138>
 8008518:	697b      	ldr	r3, [r7, #20]
 800851a:	781b      	ldrb	r3, [r3, #0]
 800851c:	b25b      	sxtb	r3, r3
 800851e:	f023 030f 	bic.w	r3, r3, #15
 8008522:	b25a      	sxtb	r2, r3
 8008524:	687b      	ldr	r3, [r7, #4]
 8008526:	0a1b      	lsrs	r3, r3, #8
 8008528:	b25b      	sxtb	r3, r3
 800852a:	f003 030f 	and.w	r3, r3, #15
 800852e:	b25b      	sxtb	r3, r3
 8008530:	4313      	orrs	r3, r2
 8008532:	b25b      	sxtb	r3, r3
 8008534:	b2db      	uxtb	r3, r3
 8008536:	697a      	ldr	r2, [r7, #20]
 8008538:	7013      	strb	r3, [r2, #0]
			fs->wflag = 1;
 800853a:	68fb      	ldr	r3, [r7, #12]
 800853c:	2201      	movs	r2, #1
 800853e:	70da      	strb	r2, [r3, #3]
			break;
 8008540:	e072      	b.n	8008628 <put_fat+0x22a>

		case FS_FAT16 :	/* WORD aligned items */
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
 8008542:	68fb      	ldr	r3, [r7, #12]
 8008544:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8008546:	68fb      	ldr	r3, [r7, #12]
 8008548:	899b      	ldrh	r3, [r3, #12]
 800854a:	085b      	lsrs	r3, r3, #1
 800854c:	b29b      	uxth	r3, r3
 800854e:	4619      	mov	r1, r3
 8008550:	68bb      	ldr	r3, [r7, #8]
 8008552:	fbb3 f3f1 	udiv	r3, r3, r1
 8008556:	4413      	add	r3, r2
 8008558:	4619      	mov	r1, r3
 800855a:	68f8      	ldr	r0, [r7, #12]
 800855c:	f7ff fdbe 	bl	80080dc <move_window>
 8008560:	4603      	mov	r3, r0
 8008562:	77fb      	strb	r3, [r7, #31]
			if (res != FR_OK) break;
 8008564:	7ffb      	ldrb	r3, [r7, #31]
 8008566:	2b00      	cmp	r3, #0
 8008568:	d15b      	bne.n	8008622 <put_fat+0x224>
			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
 800856a:	68fb      	ldr	r3, [r7, #12]
 800856c:	f103 0138 	add.w	r1, r3, #56	; 0x38
 8008570:	68bb      	ldr	r3, [r7, #8]
 8008572:	005b      	lsls	r3, r3, #1
 8008574:	68fa      	ldr	r2, [r7, #12]
 8008576:	8992      	ldrh	r2, [r2, #12]
 8008578:	fbb3 f0f2 	udiv	r0, r3, r2
 800857c:	fb00 f202 	mul.w	r2, r0, r2
 8008580:	1a9b      	subs	r3, r3, r2
 8008582:	440b      	add	r3, r1
 8008584:	687a      	ldr	r2, [r7, #4]
 8008586:	b292      	uxth	r2, r2
 8008588:	4611      	mov	r1, r2
 800858a:	4618      	mov	r0, r3
 800858c:	f7ff fb31 	bl	8007bf2 <st_word>
			fs->wflag = 1;
 8008590:	68fb      	ldr	r3, [r7, #12]
 8008592:	2201      	movs	r2, #1
 8008594:	70da      	strb	r2, [r3, #3]
			break;
 8008596:	e047      	b.n	8008628 <put_fat+0x22a>

		case FS_FAT32 :	/* DWORD aligned items */
#if _FS_EXFAT
		case FS_EXFAT :
#endif
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
 8008598:	68fb      	ldr	r3, [r7, #12]
 800859a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800859c:	68fb      	ldr	r3, [r7, #12]
 800859e:	899b      	ldrh	r3, [r3, #12]
 80085a0:	089b      	lsrs	r3, r3, #2
 80085a2:	b29b      	uxth	r3, r3
 80085a4:	4619      	mov	r1, r3
 80085a6:	68bb      	ldr	r3, [r7, #8]
 80085a8:	fbb3 f3f1 	udiv	r3, r3, r1
 80085ac:	4413      	add	r3, r2
 80085ae:	4619      	mov	r1, r3
 80085b0:	68f8      	ldr	r0, [r7, #12]
 80085b2:	f7ff fd93 	bl	80080dc <move_window>
 80085b6:	4603      	mov	r3, r0
 80085b8:	77fb      	strb	r3, [r7, #31]
			if (res != FR_OK) break;
 80085ba:	7ffb      	ldrb	r3, [r7, #31]
 80085bc:	2b00      	cmp	r3, #0
 80085be:	d132      	bne.n	8008626 <put_fat+0x228>
			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
 80085c0:	687b      	ldr	r3, [r7, #4]
 80085c2:	f023 4470 	bic.w	r4, r3, #4026531840	; 0xf0000000
 80085c6:	68fb      	ldr	r3, [r7, #12]
 80085c8:	f103 0138 	add.w	r1, r3, #56	; 0x38
 80085cc:	68bb      	ldr	r3, [r7, #8]
 80085ce:	009b      	lsls	r3, r3, #2
 80085d0:	68fa      	ldr	r2, [r7, #12]
 80085d2:	8992      	ldrh	r2, [r2, #12]
 80085d4:	fbb3 f0f2 	udiv	r0, r3, r2
 80085d8:	fb00 f202 	mul.w	r2, r0, r2
 80085dc:	1a9b      	subs	r3, r3, r2
 80085de:	440b      	add	r3, r1
 80085e0:	4618      	mov	r0, r3
 80085e2:	f7ff fae3 	bl	8007bac <ld_dword>
 80085e6:	4603      	mov	r3, r0
 80085e8:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 80085ec:	4323      	orrs	r3, r4
 80085ee:	607b      	str	r3, [r7, #4]
			}
			st_dword(fs->win + clst * 4 % SS(fs), val);
 80085f0:	68fb      	ldr	r3, [r7, #12]
 80085f2:	f103 0138 	add.w	r1, r3, #56	; 0x38
 80085f6:	68bb      	ldr	r3, [r7, #8]
 80085f8:	009b      	lsls	r3, r3, #2
 80085fa:	68fa      	ldr	r2, [r7, #12]
 80085fc:	8992      	ldrh	r2, [r2, #12]
 80085fe:	fbb3 f0f2 	udiv	r0, r3, r2
 8008602:	fb00 f202 	mul.w	r2, r0, r2
 8008606:	1a9b      	subs	r3, r3, r2
 8008608:	440b      	add	r3, r1
 800860a:	6879      	ldr	r1, [r7, #4]
 800860c:	4618      	mov	r0, r3
 800860e:	f7ff fb0b 	bl	8007c28 <st_dword>
			fs->wflag = 1;
 8008612:	68fb      	ldr	r3, [r7, #12]
 8008614:	2201      	movs	r2, #1
 8008616:	70da      	strb	r2, [r3, #3]
			break;
 8008618:	e006      	b.n	8008628 <put_fat+0x22a>
			if (res != FR_OK) break;
 800861a:	bf00      	nop
 800861c:	e004      	b.n	8008628 <put_fat+0x22a>
			if (res != FR_OK) break;
 800861e:	bf00      	nop
 8008620:	e002      	b.n	8008628 <put_fat+0x22a>
			if (res != FR_OK) break;
 8008622:	bf00      	nop
 8008624:	e000      	b.n	8008628 <put_fat+0x22a>
			if (res != FR_OK) break;
 8008626:	bf00      	nop
		}
	}
	return res;
 8008628:	7ffb      	ldrb	r3, [r7, #31]
}
 800862a:	4618      	mov	r0, r3
 800862c:	3724      	adds	r7, #36	; 0x24
 800862e:	46bd      	mov	sp, r7
 8008630:	bd90      	pop	{r4, r7, pc}

08008632 <remove_chain>:
FRESULT remove_chain (	/* FR_OK(0):succeeded, !=0:error */
	_FDID* obj,			/* Corresponding object */
	DWORD clst,			/* Cluster to remove a chain from */
	DWORD pclst			/* Previous cluster of clst (0:an entire chain) */
)
{
 8008632:	b580      	push	{r7, lr}
 8008634:	b088      	sub	sp, #32
 8008636:	af00      	add	r7, sp, #0
 8008638:	60f8      	str	r0, [r7, #12]
 800863a:	60b9      	str	r1, [r7, #8]
 800863c:	607a      	str	r2, [r7, #4]
	FRESULT res = FR_OK;
 800863e:	2300      	movs	r3, #0
 8008640:	77fb      	strb	r3, [r7, #31]
	DWORD nxt;
	FATFS *fs = obj->fs;
 8008642:	68fb      	ldr	r3, [r7, #12]
 8008644:	681b      	ldr	r3, [r3, #0]
 8008646:	61bb      	str	r3, [r7, #24]
#endif
#if _USE_TRIM
	DWORD rt[2];
#endif

	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
 8008648:	68bb      	ldr	r3, [r7, #8]
 800864a:	2b01      	cmp	r3, #1
 800864c:	d904      	bls.n	8008658 <remove_chain+0x26>
 800864e:	69bb      	ldr	r3, [r7, #24]
 8008650:	69db      	ldr	r3, [r3, #28]
 8008652:	68ba      	ldr	r2, [r7, #8]
 8008654:	429a      	cmp	r2, r3
 8008656:	d301      	bcc.n	800865c <remove_chain+0x2a>
 8008658:	2302      	movs	r3, #2
 800865a:	e04b      	b.n	80086f4 <remove_chain+0xc2>

	/* Mark the previous cluster 'EOC' on the FAT if it exists */
	if (pclst && (!_FS_EXFAT || fs->fs_type != FS_EXFAT || obj->stat != 2)) {
 800865c:	687b      	ldr	r3, [r7, #4]
 800865e:	2b00      	cmp	r3, #0
 8008660:	d00c      	beq.n	800867c <remove_chain+0x4a>
		res = put_fat(fs, pclst, 0xFFFFFFFF);
 8008662:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8008666:	6879      	ldr	r1, [r7, #4]
 8008668:	69b8      	ldr	r0, [r7, #24]
 800866a:	f7ff fec8 	bl	80083fe <put_fat>
 800866e:	4603      	mov	r3, r0
 8008670:	77fb      	strb	r3, [r7, #31]
		if (res != FR_OK) return res;
 8008672:	7ffb      	ldrb	r3, [r7, #31]
 8008674:	2b00      	cmp	r3, #0
 8008676:	d001      	beq.n	800867c <remove_chain+0x4a>
 8008678:	7ffb      	ldrb	r3, [r7, #31]
 800867a:	e03b      	b.n	80086f4 <remove_chain+0xc2>
	}

	/* Remove the chain */
	do {
		nxt = get_fat(obj, clst);			/* Get cluster status */
 800867c:	68b9      	ldr	r1, [r7, #8]
 800867e:	68f8      	ldr	r0, [r7, #12]
 8008680:	f7ff fde9 	bl	8008256 <get_fat>
 8008684:	6178      	str	r0, [r7, #20]
		if (nxt == 0) break;				/* Empty cluster? */
 8008686:	697b      	ldr	r3, [r7, #20]
 8008688:	2b00      	cmp	r3, #0
 800868a:	d031      	beq.n	80086f0 <remove_chain+0xbe>
		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
 800868c:	697b      	ldr	r3, [r7, #20]
 800868e:	2b01      	cmp	r3, #1
 8008690:	d101      	bne.n	8008696 <remove_chain+0x64>
 8008692:	2302      	movs	r3, #2
 8008694:	e02e      	b.n	80086f4 <remove_chain+0xc2>
		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 8008696:	697b      	ldr	r3, [r7, #20]
 8008698:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800869c:	d101      	bne.n	80086a2 <remove_chain+0x70>
 800869e:	2301      	movs	r3, #1
 80086a0:	e028      	b.n	80086f4 <remove_chain+0xc2>
		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
			res = put_fat(fs, clst, 0);		/* Mark the cluster 'free' on the FAT */
 80086a2:	2200      	movs	r2, #0
 80086a4:	68b9      	ldr	r1, [r7, #8]
 80086a6:	69b8      	ldr	r0, [r7, #24]
 80086a8:	f7ff fea9 	bl	80083fe <put_fat>
 80086ac:	4603      	mov	r3, r0
 80086ae:	77fb      	strb	r3, [r7, #31]
			if (res != FR_OK) return res;
 80086b0:	7ffb      	ldrb	r3, [r7, #31]
 80086b2:	2b00      	cmp	r3, #0
 80086b4:	d001      	beq.n	80086ba <remove_chain+0x88>
 80086b6:	7ffb      	ldrb	r3, [r7, #31]
 80086b8:	e01c      	b.n	80086f4 <remove_chain+0xc2>
		}
		if (fs->free_clst < fs->n_fatent - 2) {	/* Update FSINFO */
 80086ba:	69bb      	ldr	r3, [r7, #24]
 80086bc:	699a      	ldr	r2, [r3, #24]
 80086be:	69bb      	ldr	r3, [r7, #24]
 80086c0:	69db      	ldr	r3, [r3, #28]
 80086c2:	3b02      	subs	r3, #2
 80086c4:	429a      	cmp	r2, r3
 80086c6:	d20b      	bcs.n	80086e0 <remove_chain+0xae>
			fs->free_clst++;
 80086c8:	69bb      	ldr	r3, [r7, #24]
 80086ca:	699b      	ldr	r3, [r3, #24]
 80086cc:	1c5a      	adds	r2, r3, #1
 80086ce:	69bb      	ldr	r3, [r7, #24]
 80086d0:	619a      	str	r2, [r3, #24]
			fs->fsi_flag |= 1;
 80086d2:	69bb      	ldr	r3, [r7, #24]
 80086d4:	791b      	ldrb	r3, [r3, #4]
 80086d6:	f043 0301 	orr.w	r3, r3, #1
 80086da:	b2da      	uxtb	r2, r3
 80086dc:	69bb      	ldr	r3, [r7, #24]
 80086de:	711a      	strb	r2, [r3, #4]
			disk_ioctl(fs->drv, CTRL_TRIM, rt);				/* Inform device the block can be erased */
#endif
			scl = ecl = nxt;
		}
#endif
		clst = nxt;					/* Next cluster */
 80086e0:	697b      	ldr	r3, [r7, #20]
 80086e2:	60bb      	str	r3, [r7, #8]
	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
 80086e4:	69bb      	ldr	r3, [r7, #24]
 80086e6:	69db      	ldr	r3, [r3, #28]
 80086e8:	68ba      	ldr	r2, [r7, #8]
 80086ea:	429a      	cmp	r2, r3
 80086ec:	d3c6      	bcc.n	800867c <remove_chain+0x4a>
 80086ee:	e000      	b.n	80086f2 <remove_chain+0xc0>
		if (nxt == 0) break;				/* Empty cluster? */
 80086f0:	bf00      	nop
				obj->stat = 2;	/* Change the object status 'contiguous' */
			}
		}
	}
#endif
	return FR_OK;
 80086f2:	2300      	movs	r3, #0
}
 80086f4:	4618      	mov	r0, r3
 80086f6:	3720      	adds	r7, #32
 80086f8:	46bd      	mov	sp, r7
 80086fa:	bd80      	pop	{r7, pc}

080086fc <create_chain>:
static
DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster# */
	_FDID* obj,			/* Corresponding object */
	DWORD clst			/* Cluster# to stretch, 0:Create a new chain */
)
{
 80086fc:	b580      	push	{r7, lr}
 80086fe:	b088      	sub	sp, #32
 8008700:	af00      	add	r7, sp, #0
 8008702:	6078      	str	r0, [r7, #4]
 8008704:	6039      	str	r1, [r7, #0]
	DWORD cs, ncl, scl;
	FRESULT res;
	FATFS *fs = obj->fs;
 8008706:	687b      	ldr	r3, [r7, #4]
 8008708:	681b      	ldr	r3, [r3, #0]
 800870a:	613b      	str	r3, [r7, #16]


	if (clst == 0) {	/* Create a new chain */
 800870c:	683b      	ldr	r3, [r7, #0]
 800870e:	2b00      	cmp	r3, #0
 8008710:	d10d      	bne.n	800872e <create_chain+0x32>
		scl = fs->last_clst;				/* Get suggested cluster to start from */
 8008712:	693b      	ldr	r3, [r7, #16]
 8008714:	695b      	ldr	r3, [r3, #20]
 8008716:	61bb      	str	r3, [r7, #24]
		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 8008718:	69bb      	ldr	r3, [r7, #24]
 800871a:	2b00      	cmp	r3, #0
 800871c:	d004      	beq.n	8008728 <create_chain+0x2c>
 800871e:	693b      	ldr	r3, [r7, #16]
 8008720:	69db      	ldr	r3, [r3, #28]
 8008722:	69ba      	ldr	r2, [r7, #24]
 8008724:	429a      	cmp	r2, r3
 8008726:	d31b      	bcc.n	8008760 <create_chain+0x64>
 8008728:	2301      	movs	r3, #1
 800872a:	61bb      	str	r3, [r7, #24]
 800872c:	e018      	b.n	8008760 <create_chain+0x64>
	}
	else {				/* Stretch current chain */
		cs = get_fat(obj, clst);			/* Check the cluster status */
 800872e:	6839      	ldr	r1, [r7, #0]
 8008730:	6878      	ldr	r0, [r7, #4]
 8008732:	f7ff fd90 	bl	8008256 <get_fat>
 8008736:	60f8      	str	r0, [r7, #12]
		if (cs < 2) return 1;				/* Invalid FAT value */
 8008738:	68fb      	ldr	r3, [r7, #12]
 800873a:	2b01      	cmp	r3, #1
 800873c:	d801      	bhi.n	8008742 <create_chain+0x46>
 800873e:	2301      	movs	r3, #1
 8008740:	e070      	b.n	8008824 <create_chain+0x128>
		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 8008742:	68fb      	ldr	r3, [r7, #12]
 8008744:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8008748:	d101      	bne.n	800874e <create_chain+0x52>
 800874a:	68fb      	ldr	r3, [r7, #12]
 800874c:	e06a      	b.n	8008824 <create_chain+0x128>
		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 800874e:	693b      	ldr	r3, [r7, #16]
 8008750:	69db      	ldr	r3, [r3, #28]
 8008752:	68fa      	ldr	r2, [r7, #12]
 8008754:	429a      	cmp	r2, r3
 8008756:	d201      	bcs.n	800875c <create_chain+0x60>
 8008758:	68fb      	ldr	r3, [r7, #12]
 800875a:	e063      	b.n	8008824 <create_chain+0x128>
		scl = clst;
 800875c:	683b      	ldr	r3, [r7, #0]
 800875e:	61bb      	str	r3, [r7, #24]
			}
		}
	} else
#endif
	{	/* On the FAT12/16/32 volume */
		ncl = scl;	/* Start cluster */
 8008760:	69bb      	ldr	r3, [r7, #24]
 8008762:	61fb      	str	r3, [r7, #28]
		for (;;) {
			ncl++;							/* Next cluster */
 8008764:	69fb      	ldr	r3, [r7, #28]
 8008766:	3301      	adds	r3, #1
 8008768:	61fb      	str	r3, [r7, #28]
			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
 800876a:	693b      	ldr	r3, [r7, #16]
 800876c:	69db      	ldr	r3, [r3, #28]
 800876e:	69fa      	ldr	r2, [r7, #28]
 8008770:	429a      	cmp	r2, r3
 8008772:	d307      	bcc.n	8008784 <create_chain+0x88>
				ncl = 2;
 8008774:	2302      	movs	r3, #2
 8008776:	61fb      	str	r3, [r7, #28]
				if (ncl > scl) return 0;	/* No free cluster */
 8008778:	69fa      	ldr	r2, [r7, #28]
 800877a:	69bb      	ldr	r3, [r7, #24]
 800877c:	429a      	cmp	r2, r3
 800877e:	d901      	bls.n	8008784 <create_chain+0x88>
 8008780:	2300      	movs	r3, #0
 8008782:	e04f      	b.n	8008824 <create_chain+0x128>
			}
			cs = get_fat(obj, ncl);			/* Get the cluster status */
 8008784:	69f9      	ldr	r1, [r7, #28]
 8008786:	6878      	ldr	r0, [r7, #4]
 8008788:	f7ff fd65 	bl	8008256 <get_fat>
 800878c:	60f8      	str	r0, [r7, #12]
			if (cs == 0) break;				/* Found a free cluster */
 800878e:	68fb      	ldr	r3, [r7, #12]
 8008790:	2b00      	cmp	r3, #0
 8008792:	d00e      	beq.n	80087b2 <create_chain+0xb6>
			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
 8008794:	68fb      	ldr	r3, [r7, #12]
 8008796:	2b01      	cmp	r3, #1
 8008798:	d003      	beq.n	80087a2 <create_chain+0xa6>
 800879a:	68fb      	ldr	r3, [r7, #12]
 800879c:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80087a0:	d101      	bne.n	80087a6 <create_chain+0xaa>
 80087a2:	68fb      	ldr	r3, [r7, #12]
 80087a4:	e03e      	b.n	8008824 <create_chain+0x128>
			if (ncl == scl) return 0;		/* No free cluster */
 80087a6:	69fa      	ldr	r2, [r7, #28]
 80087a8:	69bb      	ldr	r3, [r7, #24]
 80087aa:	429a      	cmp	r2, r3
 80087ac:	d1da      	bne.n	8008764 <create_chain+0x68>
 80087ae:	2300      	movs	r3, #0
 80087b0:	e038      	b.n	8008824 <create_chain+0x128>
			if (cs == 0) break;				/* Found a free cluster */
 80087b2:	bf00      	nop
		}
		res = put_fat(fs, ncl, 0xFFFFFFFF);	/* Mark the new cluster 'EOC' */
 80087b4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80087b8:	69f9      	ldr	r1, [r7, #28]
 80087ba:	6938      	ldr	r0, [r7, #16]
 80087bc:	f7ff fe1f 	bl	80083fe <put_fat>
 80087c0:	4603      	mov	r3, r0
 80087c2:	75fb      	strb	r3, [r7, #23]
		if (res == FR_OK && clst != 0) {
 80087c4:	7dfb      	ldrb	r3, [r7, #23]
 80087c6:	2b00      	cmp	r3, #0
 80087c8:	d109      	bne.n	80087de <create_chain+0xe2>
 80087ca:	683b      	ldr	r3, [r7, #0]
 80087cc:	2b00      	cmp	r3, #0
 80087ce:	d006      	beq.n	80087de <create_chain+0xe2>
			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
 80087d0:	69fa      	ldr	r2, [r7, #28]
 80087d2:	6839      	ldr	r1, [r7, #0]
 80087d4:	6938      	ldr	r0, [r7, #16]
 80087d6:	f7ff fe12 	bl	80083fe <put_fat>
 80087da:	4603      	mov	r3, r0
 80087dc:	75fb      	strb	r3, [r7, #23]
		}
	}

	if (res == FR_OK) {			/* Update FSINFO if function succeeded. */
 80087de:	7dfb      	ldrb	r3, [r7, #23]
 80087e0:	2b00      	cmp	r3, #0
 80087e2:	d116      	bne.n	8008812 <create_chain+0x116>
		fs->last_clst = ncl;
 80087e4:	693b      	ldr	r3, [r7, #16]
 80087e6:	69fa      	ldr	r2, [r7, #28]
 80087e8:	615a      	str	r2, [r3, #20]
		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 80087ea:	693b      	ldr	r3, [r7, #16]
 80087ec:	699a      	ldr	r2, [r3, #24]
 80087ee:	693b      	ldr	r3, [r7, #16]
 80087f0:	69db      	ldr	r3, [r3, #28]
 80087f2:	3b02      	subs	r3, #2
 80087f4:	429a      	cmp	r2, r3
 80087f6:	d804      	bhi.n	8008802 <create_chain+0x106>
 80087f8:	693b      	ldr	r3, [r7, #16]
 80087fa:	699b      	ldr	r3, [r3, #24]
 80087fc:	1e5a      	subs	r2, r3, #1
 80087fe:	693b      	ldr	r3, [r7, #16]
 8008800:	619a      	str	r2, [r3, #24]
		fs->fsi_flag |= 1;
 8008802:	693b      	ldr	r3, [r7, #16]
 8008804:	791b      	ldrb	r3, [r3, #4]
 8008806:	f043 0301 	orr.w	r3, r3, #1
 800880a:	b2da      	uxtb	r2, r3
 800880c:	693b      	ldr	r3, [r7, #16]
 800880e:	711a      	strb	r2, [r3, #4]
 8008810:	e007      	b.n	8008822 <create_chain+0x126>
	} else {
		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
 8008812:	7dfb      	ldrb	r3, [r7, #23]
 8008814:	2b01      	cmp	r3, #1
 8008816:	d102      	bne.n	800881e <create_chain+0x122>
 8008818:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800881c:	e000      	b.n	8008820 <create_chain+0x124>
 800881e:	2301      	movs	r3, #1
 8008820:	61fb      	str	r3, [r7, #28]
	}

	return ncl;		/* Return new cluster number or error status */
 8008822:	69fb      	ldr	r3, [r7, #28]
}
 8008824:	4618      	mov	r0, r3
 8008826:	3720      	adds	r7, #32
 8008828:	46bd      	mov	sp, r7
 800882a:	bd80      	pop	{r7, pc}

0800882c <clmt_clust>:
static
DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
	FIL* fp,		/* Pointer to the file object */
	FSIZE_t ofs		/* File offset to be converted to cluster# */
)
{
 800882c:	b480      	push	{r7}
 800882e:	b087      	sub	sp, #28
 8008830:	af00      	add	r7, sp, #0
 8008832:	6078      	str	r0, [r7, #4]
 8008834:	6039      	str	r1, [r7, #0]
	DWORD cl, ncl, *tbl;
	FATFS *fs = fp->obj.fs;
 8008836:	687b      	ldr	r3, [r7, #4]
 8008838:	681b      	ldr	r3, [r3, #0]
 800883a:	60fb      	str	r3, [r7, #12]


	tbl = fp->cltbl + 1;	/* Top of CLMT */
 800883c:	687b      	ldr	r3, [r7, #4]
 800883e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008840:	3304      	adds	r3, #4
 8008842:	613b      	str	r3, [r7, #16]
	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
 8008844:	68fb      	ldr	r3, [r7, #12]
 8008846:	899b      	ldrh	r3, [r3, #12]
 8008848:	461a      	mov	r2, r3
 800884a:	683b      	ldr	r3, [r7, #0]
 800884c:	fbb3 f3f2 	udiv	r3, r3, r2
 8008850:	68fa      	ldr	r2, [r7, #12]
 8008852:	8952      	ldrh	r2, [r2, #10]
 8008854:	fbb3 f3f2 	udiv	r3, r3, r2
 8008858:	617b      	str	r3, [r7, #20]
	for (;;) {
		ncl = *tbl++;			/* Number of cluters in the fragment */
 800885a:	693b      	ldr	r3, [r7, #16]
 800885c:	1d1a      	adds	r2, r3, #4
 800885e:	613a      	str	r2, [r7, #16]
 8008860:	681b      	ldr	r3, [r3, #0]
 8008862:	60bb      	str	r3, [r7, #8]
		if (ncl == 0) return 0;	/* End of table? (error) */
 8008864:	68bb      	ldr	r3, [r7, #8]
 8008866:	2b00      	cmp	r3, #0
 8008868:	d101      	bne.n	800886e <clmt_clust+0x42>
 800886a:	2300      	movs	r3, #0
 800886c:	e010      	b.n	8008890 <clmt_clust+0x64>
		if (cl < ncl) break;	/* In this fragment? */
 800886e:	697a      	ldr	r2, [r7, #20]
 8008870:	68bb      	ldr	r3, [r7, #8]
 8008872:	429a      	cmp	r2, r3
 8008874:	d307      	bcc.n	8008886 <clmt_clust+0x5a>
		cl -= ncl; tbl++;		/* Next fragment */
 8008876:	697a      	ldr	r2, [r7, #20]
 8008878:	68bb      	ldr	r3, [r7, #8]
 800887a:	1ad3      	subs	r3, r2, r3
 800887c:	617b      	str	r3, [r7, #20]
 800887e:	693b      	ldr	r3, [r7, #16]
 8008880:	3304      	adds	r3, #4
 8008882:	613b      	str	r3, [r7, #16]
		ncl = *tbl++;			/* Number of cluters in the fragment */
 8008884:	e7e9      	b.n	800885a <clmt_clust+0x2e>
		if (cl < ncl) break;	/* In this fragment? */
 8008886:	bf00      	nop
	}
	return cl + *tbl;	/* Return the cluster number */
 8008888:	693b      	ldr	r3, [r7, #16]
 800888a:	681a      	ldr	r2, [r3, #0]
 800888c:	697b      	ldr	r3, [r7, #20]
 800888e:	4413      	add	r3, r2
}
 8008890:	4618      	mov	r0, r3
 8008892:	371c      	adds	r7, #28
 8008894:	46bd      	mov	sp, r7
 8008896:	f85d 7b04 	ldr.w	r7, [sp], #4
 800889a:	4770      	bx	lr

0800889c <dir_sdi>:
static
FRESULT dir_sdi (	/* FR_OK(0):succeeded, !=0:error */
	DIR* dp,		/* Pointer to directory object */
	DWORD ofs		/* Offset of directory table */
)
{
 800889c:	b580      	push	{r7, lr}
 800889e:	b086      	sub	sp, #24
 80088a0:	af00      	add	r7, sp, #0
 80088a2:	6078      	str	r0, [r7, #4]
 80088a4:	6039      	str	r1, [r7, #0]
	DWORD csz, clst;
	FATFS *fs = dp->obj.fs;
 80088a6:	687b      	ldr	r3, [r7, #4]
 80088a8:	681b      	ldr	r3, [r3, #0]
 80088aa:	613b      	str	r3, [r7, #16]


	if (ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE) {	/* Check range of offset and alignment */
 80088ac:	683b      	ldr	r3, [r7, #0]
 80088ae:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80088b2:	d204      	bcs.n	80088be <dir_sdi+0x22>
 80088b4:	683b      	ldr	r3, [r7, #0]
 80088b6:	f003 031f 	and.w	r3, r3, #31
 80088ba:	2b00      	cmp	r3, #0
 80088bc:	d001      	beq.n	80088c2 <dir_sdi+0x26>
		return FR_INT_ERR;
 80088be:	2302      	movs	r3, #2
 80088c0:	e071      	b.n	80089a6 <dir_sdi+0x10a>
	}
	dp->dptr = ofs;				/* Set current offset */
 80088c2:	687b      	ldr	r3, [r7, #4]
 80088c4:	683a      	ldr	r2, [r7, #0]
 80088c6:	615a      	str	r2, [r3, #20]
	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
 80088c8:	687b      	ldr	r3, [r7, #4]
 80088ca:	689b      	ldr	r3, [r3, #8]
 80088cc:	617b      	str	r3, [r7, #20]
	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
 80088ce:	697b      	ldr	r3, [r7, #20]
 80088d0:	2b00      	cmp	r3, #0
 80088d2:	d106      	bne.n	80088e2 <dir_sdi+0x46>
 80088d4:	693b      	ldr	r3, [r7, #16]
 80088d6:	781b      	ldrb	r3, [r3, #0]
 80088d8:	2b02      	cmp	r3, #2
 80088da:	d902      	bls.n	80088e2 <dir_sdi+0x46>
		clst = fs->dirbase;
 80088dc:	693b      	ldr	r3, [r7, #16]
 80088de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80088e0:	617b      	str	r3, [r7, #20]
		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
	}

	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
 80088e2:	697b      	ldr	r3, [r7, #20]
 80088e4:	2b00      	cmp	r3, #0
 80088e6:	d10c      	bne.n	8008902 <dir_sdi+0x66>
		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
 80088e8:	683b      	ldr	r3, [r7, #0]
 80088ea:	095b      	lsrs	r3, r3, #5
 80088ec:	693a      	ldr	r2, [r7, #16]
 80088ee:	8912      	ldrh	r2, [r2, #8]
 80088f0:	4293      	cmp	r3, r2
 80088f2:	d301      	bcc.n	80088f8 <dir_sdi+0x5c>
 80088f4:	2302      	movs	r3, #2
 80088f6:	e056      	b.n	80089a6 <dir_sdi+0x10a>
		dp->sect = fs->dirbase;
 80088f8:	693b      	ldr	r3, [r7, #16]
 80088fa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80088fc:	687b      	ldr	r3, [r7, #4]
 80088fe:	61da      	str	r2, [r3, #28]
 8008900:	e02d      	b.n	800895e <dir_sdi+0xc2>

	} else {			/* Dynamic table (sub-directory or root-directory in FAT32+) */
		csz = (DWORD)fs->csize * SS(fs);	/* Bytes per cluster */
 8008902:	693b      	ldr	r3, [r7, #16]
 8008904:	895b      	ldrh	r3, [r3, #10]
 8008906:	461a      	mov	r2, r3
 8008908:	693b      	ldr	r3, [r7, #16]
 800890a:	899b      	ldrh	r3, [r3, #12]
 800890c:	fb02 f303 	mul.w	r3, r2, r3
 8008910:	60fb      	str	r3, [r7, #12]
		while (ofs >= csz) {				/* Follow cluster chain */
 8008912:	e019      	b.n	8008948 <dir_sdi+0xac>
			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 8008914:	687b      	ldr	r3, [r7, #4]
 8008916:	6979      	ldr	r1, [r7, #20]
 8008918:	4618      	mov	r0, r3
 800891a:	f7ff fc9c 	bl	8008256 <get_fat>
 800891e:	6178      	str	r0, [r7, #20]
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 8008920:	697b      	ldr	r3, [r7, #20]
 8008922:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8008926:	d101      	bne.n	800892c <dir_sdi+0x90>
 8008928:	2301      	movs	r3, #1
 800892a:	e03c      	b.n	80089a6 <dir_sdi+0x10a>
			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal error */
 800892c:	697b      	ldr	r3, [r7, #20]
 800892e:	2b01      	cmp	r3, #1
 8008930:	d904      	bls.n	800893c <dir_sdi+0xa0>
 8008932:	693b      	ldr	r3, [r7, #16]
 8008934:	69db      	ldr	r3, [r3, #28]
 8008936:	697a      	ldr	r2, [r7, #20]
 8008938:	429a      	cmp	r2, r3
 800893a:	d301      	bcc.n	8008940 <dir_sdi+0xa4>
 800893c:	2302      	movs	r3, #2
 800893e:	e032      	b.n	80089a6 <dir_sdi+0x10a>
			ofs -= csz;
 8008940:	683a      	ldr	r2, [r7, #0]
 8008942:	68fb      	ldr	r3, [r7, #12]
 8008944:	1ad3      	subs	r3, r2, r3
 8008946:	603b      	str	r3, [r7, #0]
		while (ofs >= csz) {				/* Follow cluster chain */
 8008948:	683a      	ldr	r2, [r7, #0]
 800894a:	68fb      	ldr	r3, [r7, #12]
 800894c:	429a      	cmp	r2, r3
 800894e:	d2e1      	bcs.n	8008914 <dir_sdi+0x78>
		}
		dp->sect = clust2sect(fs, clst);
 8008950:	6979      	ldr	r1, [r7, #20]
 8008952:	6938      	ldr	r0, [r7, #16]
 8008954:	f7ff fc60 	bl	8008218 <clust2sect>
 8008958:	4602      	mov	r2, r0
 800895a:	687b      	ldr	r3, [r7, #4]
 800895c:	61da      	str	r2, [r3, #28]
	}
	dp->clust = clst;					/* Current cluster# */
 800895e:	687b      	ldr	r3, [r7, #4]
 8008960:	697a      	ldr	r2, [r7, #20]
 8008962:	619a      	str	r2, [r3, #24]
	if (!dp->sect) return FR_INT_ERR;
 8008964:	687b      	ldr	r3, [r7, #4]
 8008966:	69db      	ldr	r3, [r3, #28]
 8008968:	2b00      	cmp	r3, #0
 800896a:	d101      	bne.n	8008970 <dir_sdi+0xd4>
 800896c:	2302      	movs	r3, #2
 800896e:	e01a      	b.n	80089a6 <dir_sdi+0x10a>
	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 8008970:	687b      	ldr	r3, [r7, #4]
 8008972:	69da      	ldr	r2, [r3, #28]
 8008974:	693b      	ldr	r3, [r7, #16]
 8008976:	899b      	ldrh	r3, [r3, #12]
 8008978:	4619      	mov	r1, r3
 800897a:	683b      	ldr	r3, [r7, #0]
 800897c:	fbb3 f3f1 	udiv	r3, r3, r1
 8008980:	441a      	add	r2, r3
 8008982:	687b      	ldr	r3, [r7, #4]
 8008984:	61da      	str	r2, [r3, #28]
	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
 8008986:	693b      	ldr	r3, [r7, #16]
 8008988:	f103 0138 	add.w	r1, r3, #56	; 0x38
 800898c:	693b      	ldr	r3, [r7, #16]
 800898e:	899b      	ldrh	r3, [r3, #12]
 8008990:	461a      	mov	r2, r3
 8008992:	683b      	ldr	r3, [r7, #0]
 8008994:	fbb3 f0f2 	udiv	r0, r3, r2
 8008998:	fb00 f202 	mul.w	r2, r0, r2
 800899c:	1a9b      	subs	r3, r3, r2
 800899e:	18ca      	adds	r2, r1, r3
 80089a0:	687b      	ldr	r3, [r7, #4]
 80089a2:	621a      	str	r2, [r3, #32]

	return FR_OK;
 80089a4:	2300      	movs	r3, #0
}
 80089a6:	4618      	mov	r0, r3
 80089a8:	3718      	adds	r7, #24
 80089aa:	46bd      	mov	sp, r7
 80089ac:	bd80      	pop	{r7, pc}

080089ae <dir_next>:
static
FRESULT dir_next (	/* FR_OK(0):succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch */
	DIR* dp,		/* Pointer to the directory object */
	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
)
{
 80089ae:	b580      	push	{r7, lr}
 80089b0:	b086      	sub	sp, #24
 80089b2:	af00      	add	r7, sp, #0
 80089b4:	6078      	str	r0, [r7, #4]
 80089b6:	6039      	str	r1, [r7, #0]
	DWORD ofs, clst;
	FATFS *fs = dp->obj.fs;
 80089b8:	687b      	ldr	r3, [r7, #4]
 80089ba:	681b      	ldr	r3, [r3, #0]
 80089bc:	60fb      	str	r3, [r7, #12]
#if !_FS_READONLY
	UINT n;
#endif

	ofs = dp->dptr + SZDIRE;	/* Next entry */
 80089be:	687b      	ldr	r3, [r7, #4]
 80089c0:	695b      	ldr	r3, [r3, #20]
 80089c2:	3320      	adds	r3, #32
 80089c4:	60bb      	str	r3, [r7, #8]
	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) return FR_NO_FILE;	/* Report EOT when offset has reached max value */
 80089c6:	687b      	ldr	r3, [r7, #4]
 80089c8:	69db      	ldr	r3, [r3, #28]
 80089ca:	2b00      	cmp	r3, #0
 80089cc:	d003      	beq.n	80089d6 <dir_next+0x28>
 80089ce:	68bb      	ldr	r3, [r7, #8]
 80089d0:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80089d4:	d301      	bcc.n	80089da <dir_next+0x2c>
 80089d6:	2304      	movs	r3, #4
 80089d8:	e0bb      	b.n	8008b52 <dir_next+0x1a4>

	if (ofs % SS(fs) == 0) {	/* Sector changed? */
 80089da:	68fb      	ldr	r3, [r7, #12]
 80089dc:	899b      	ldrh	r3, [r3, #12]
 80089de:	461a      	mov	r2, r3
 80089e0:	68bb      	ldr	r3, [r7, #8]
 80089e2:	fbb3 f1f2 	udiv	r1, r3, r2
 80089e6:	fb01 f202 	mul.w	r2, r1, r2
 80089ea:	1a9b      	subs	r3, r3, r2
 80089ec:	2b00      	cmp	r3, #0
 80089ee:	f040 809d 	bne.w	8008b2c <dir_next+0x17e>
		dp->sect++;				/* Next sector */
 80089f2:	687b      	ldr	r3, [r7, #4]
 80089f4:	69db      	ldr	r3, [r3, #28]
 80089f6:	1c5a      	adds	r2, r3, #1
 80089f8:	687b      	ldr	r3, [r7, #4]
 80089fa:	61da      	str	r2, [r3, #28]

		if (!dp->clust) {		/* Static table */
 80089fc:	687b      	ldr	r3, [r7, #4]
 80089fe:	699b      	ldr	r3, [r3, #24]
 8008a00:	2b00      	cmp	r3, #0
 8008a02:	d10b      	bne.n	8008a1c <dir_next+0x6e>
			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
 8008a04:	68bb      	ldr	r3, [r7, #8]
 8008a06:	095b      	lsrs	r3, r3, #5
 8008a08:	68fa      	ldr	r2, [r7, #12]
 8008a0a:	8912      	ldrh	r2, [r2, #8]
 8008a0c:	4293      	cmp	r3, r2
 8008a0e:	f0c0 808d 	bcc.w	8008b2c <dir_next+0x17e>
				dp->sect = 0; return FR_NO_FILE;
 8008a12:	687b      	ldr	r3, [r7, #4]
 8008a14:	2200      	movs	r2, #0
 8008a16:	61da      	str	r2, [r3, #28]
 8008a18:	2304      	movs	r3, #4
 8008a1a:	e09a      	b.n	8008b52 <dir_next+0x1a4>
			}
		}
		else {					/* Dynamic table */
			if ((ofs / SS(fs) & (fs->csize - 1)) == 0) {		/* Cluster changed? */
 8008a1c:	68fb      	ldr	r3, [r7, #12]
 8008a1e:	899b      	ldrh	r3, [r3, #12]
 8008a20:	461a      	mov	r2, r3
 8008a22:	68bb      	ldr	r3, [r7, #8]
 8008a24:	fbb3 f3f2 	udiv	r3, r3, r2
 8008a28:	68fa      	ldr	r2, [r7, #12]
 8008a2a:	8952      	ldrh	r2, [r2, #10]
 8008a2c:	3a01      	subs	r2, #1
 8008a2e:	4013      	ands	r3, r2
 8008a30:	2b00      	cmp	r3, #0
 8008a32:	d17b      	bne.n	8008b2c <dir_next+0x17e>
				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
 8008a34:	687a      	ldr	r2, [r7, #4]
 8008a36:	687b      	ldr	r3, [r7, #4]
 8008a38:	699b      	ldr	r3, [r3, #24]
 8008a3a:	4619      	mov	r1, r3
 8008a3c:	4610      	mov	r0, r2
 8008a3e:	f7ff fc0a 	bl	8008256 <get_fat>
 8008a42:	6178      	str	r0, [r7, #20]
				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
 8008a44:	697b      	ldr	r3, [r7, #20]
 8008a46:	2b01      	cmp	r3, #1
 8008a48:	d801      	bhi.n	8008a4e <dir_next+0xa0>
 8008a4a:	2302      	movs	r3, #2
 8008a4c:	e081      	b.n	8008b52 <dir_next+0x1a4>
				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 8008a4e:	697b      	ldr	r3, [r7, #20]
 8008a50:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8008a54:	d101      	bne.n	8008a5a <dir_next+0xac>
 8008a56:	2301      	movs	r3, #1
 8008a58:	e07b      	b.n	8008b52 <dir_next+0x1a4>
				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 8008a5a:	68fb      	ldr	r3, [r7, #12]
 8008a5c:	69db      	ldr	r3, [r3, #28]
 8008a5e:	697a      	ldr	r2, [r7, #20]
 8008a60:	429a      	cmp	r2, r3
 8008a62:	d359      	bcc.n	8008b18 <dir_next+0x16a>
#if !_FS_READONLY
					if (!stretch) {								/* If no stretch, report EOT */
 8008a64:	683b      	ldr	r3, [r7, #0]
 8008a66:	2b00      	cmp	r3, #0
 8008a68:	d104      	bne.n	8008a74 <dir_next+0xc6>
						dp->sect = 0; return FR_NO_FILE;
 8008a6a:	687b      	ldr	r3, [r7, #4]
 8008a6c:	2200      	movs	r2, #0
 8008a6e:	61da      	str	r2, [r3, #28]
 8008a70:	2304      	movs	r3, #4
 8008a72:	e06e      	b.n	8008b52 <dir_next+0x1a4>
					}
					clst = create_chain(&dp->obj, dp->clust);	/* Allocate a cluster */
 8008a74:	687a      	ldr	r2, [r7, #4]
 8008a76:	687b      	ldr	r3, [r7, #4]
 8008a78:	699b      	ldr	r3, [r3, #24]
 8008a7a:	4619      	mov	r1, r3
 8008a7c:	4610      	mov	r0, r2
 8008a7e:	f7ff fe3d 	bl	80086fc <create_chain>
 8008a82:	6178      	str	r0, [r7, #20]
					if (clst == 0) return FR_DENIED;			/* No free cluster */
 8008a84:	697b      	ldr	r3, [r7, #20]
 8008a86:	2b00      	cmp	r3, #0
 8008a88:	d101      	bne.n	8008a8e <dir_next+0xe0>
 8008a8a:	2307      	movs	r3, #7
 8008a8c:	e061      	b.n	8008b52 <dir_next+0x1a4>
					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 8008a8e:	697b      	ldr	r3, [r7, #20]
 8008a90:	2b01      	cmp	r3, #1
 8008a92:	d101      	bne.n	8008a98 <dir_next+0xea>
 8008a94:	2302      	movs	r3, #2
 8008a96:	e05c      	b.n	8008b52 <dir_next+0x1a4>
					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 8008a98:	697b      	ldr	r3, [r7, #20]
 8008a9a:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8008a9e:	d101      	bne.n	8008aa4 <dir_next+0xf6>
 8008aa0:	2301      	movs	r3, #1
 8008aa2:	e056      	b.n	8008b52 <dir_next+0x1a4>
					/* Clean-up the stretched table */
					if (_FS_EXFAT) dp->obj.stat |= 4;			/* The directory needs to be updated */
					if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
 8008aa4:	68f8      	ldr	r0, [r7, #12]
 8008aa6:	f7ff fad5 	bl	8008054 <sync_window>
 8008aaa:	4603      	mov	r3, r0
 8008aac:	2b00      	cmp	r3, #0
 8008aae:	d001      	beq.n	8008ab4 <dir_next+0x106>
 8008ab0:	2301      	movs	r3, #1
 8008ab2:	e04e      	b.n	8008b52 <dir_next+0x1a4>
					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
 8008ab4:	68fb      	ldr	r3, [r7, #12]
 8008ab6:	f103 0038 	add.w	r0, r3, #56	; 0x38
 8008aba:	68fb      	ldr	r3, [r7, #12]
 8008abc:	899b      	ldrh	r3, [r3, #12]
 8008abe:	461a      	mov	r2, r3
 8008ac0:	2100      	movs	r1, #0
 8008ac2:	f7ff f8fe 	bl	8007cc2 <mem_set>
					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill the new cluster with 0 */
 8008ac6:	2300      	movs	r3, #0
 8008ac8:	613b      	str	r3, [r7, #16]
 8008aca:	6979      	ldr	r1, [r7, #20]
 8008acc:	68f8      	ldr	r0, [r7, #12]
 8008ace:	f7ff fba3 	bl	8008218 <clust2sect>
 8008ad2:	4602      	mov	r2, r0
 8008ad4:	68fb      	ldr	r3, [r7, #12]
 8008ad6:	635a      	str	r2, [r3, #52]	; 0x34
 8008ad8:	e012      	b.n	8008b00 <dir_next+0x152>
						fs->wflag = 1;
 8008ada:	68fb      	ldr	r3, [r7, #12]
 8008adc:	2201      	movs	r2, #1
 8008ade:	70da      	strb	r2, [r3, #3]
						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
 8008ae0:	68f8      	ldr	r0, [r7, #12]
 8008ae2:	f7ff fab7 	bl	8008054 <sync_window>
 8008ae6:	4603      	mov	r3, r0
 8008ae8:	2b00      	cmp	r3, #0
 8008aea:	d001      	beq.n	8008af0 <dir_next+0x142>
 8008aec:	2301      	movs	r3, #1
 8008aee:	e030      	b.n	8008b52 <dir_next+0x1a4>
					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill the new cluster with 0 */
 8008af0:	693b      	ldr	r3, [r7, #16]
 8008af2:	3301      	adds	r3, #1
 8008af4:	613b      	str	r3, [r7, #16]
 8008af6:	68fb      	ldr	r3, [r7, #12]
 8008af8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008afa:	1c5a      	adds	r2, r3, #1
 8008afc:	68fb      	ldr	r3, [r7, #12]
 8008afe:	635a      	str	r2, [r3, #52]	; 0x34
 8008b00:	68fb      	ldr	r3, [r7, #12]
 8008b02:	895b      	ldrh	r3, [r3, #10]
 8008b04:	461a      	mov	r2, r3
 8008b06:	693b      	ldr	r3, [r7, #16]
 8008b08:	4293      	cmp	r3, r2
 8008b0a:	d3e6      	bcc.n	8008ada <dir_next+0x12c>
					}
					fs->winsect -= n;							/* Restore window offset */
 8008b0c:	68fb      	ldr	r3, [r7, #12]
 8008b0e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008b10:	693b      	ldr	r3, [r7, #16]
 8008b12:	1ad2      	subs	r2, r2, r3
 8008b14:	68fb      	ldr	r3, [r7, #12]
 8008b16:	635a      	str	r2, [r3, #52]	; 0x34
#else
					if (!stretch) dp->sect = 0;					/* (this line is to suppress compiler warning) */
					dp->sect = 0; return FR_NO_FILE;			/* Report EOT */
#endif
				}
				dp->clust = clst;		/* Initialize data for new cluster */
 8008b18:	687b      	ldr	r3, [r7, #4]
 8008b1a:	697a      	ldr	r2, [r7, #20]
 8008b1c:	619a      	str	r2, [r3, #24]
				dp->sect = clust2sect(fs, clst);
 8008b1e:	6979      	ldr	r1, [r7, #20]
 8008b20:	68f8      	ldr	r0, [r7, #12]
 8008b22:	f7ff fb79 	bl	8008218 <clust2sect>
 8008b26:	4602      	mov	r2, r0
 8008b28:	687b      	ldr	r3, [r7, #4]
 8008b2a:	61da      	str	r2, [r3, #28]
			}
		}
	}
	dp->dptr = ofs;						/* Current entry */
 8008b2c:	687b      	ldr	r3, [r7, #4]
 8008b2e:	68ba      	ldr	r2, [r7, #8]
 8008b30:	615a      	str	r2, [r3, #20]
	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
 8008b32:	68fb      	ldr	r3, [r7, #12]
 8008b34:	f103 0138 	add.w	r1, r3, #56	; 0x38
 8008b38:	68fb      	ldr	r3, [r7, #12]
 8008b3a:	899b      	ldrh	r3, [r3, #12]
 8008b3c:	461a      	mov	r2, r3
 8008b3e:	68bb      	ldr	r3, [r7, #8]
 8008b40:	fbb3 f0f2 	udiv	r0, r3, r2
 8008b44:	fb00 f202 	mul.w	r2, r0, r2
 8008b48:	1a9b      	subs	r3, r3, r2
 8008b4a:	18ca      	adds	r2, r1, r3
 8008b4c:	687b      	ldr	r3, [r7, #4]
 8008b4e:	621a      	str	r2, [r3, #32]

	return FR_OK;
 8008b50:	2300      	movs	r3, #0
}
 8008b52:	4618      	mov	r0, r3
 8008b54:	3718      	adds	r7, #24
 8008b56:	46bd      	mov	sp, r7
 8008b58:	bd80      	pop	{r7, pc}

08008b5a <dir_alloc>:
static
FRESULT dir_alloc (	/* FR_OK(0):succeeded, !=0:error */
	DIR* dp,		/* Pointer to the directory object */
	UINT nent		/* Number of contiguous entries to allocate */
)
{
 8008b5a:	b580      	push	{r7, lr}
 8008b5c:	b086      	sub	sp, #24
 8008b5e:	af00      	add	r7, sp, #0
 8008b60:	6078      	str	r0, [r7, #4]
 8008b62:	6039      	str	r1, [r7, #0]
	FRESULT res;
	UINT n;
	FATFS *fs = dp->obj.fs;
 8008b64:	687b      	ldr	r3, [r7, #4]
 8008b66:	681b      	ldr	r3, [r3, #0]
 8008b68:	60fb      	str	r3, [r7, #12]


	res = dir_sdi(dp, 0);
 8008b6a:	2100      	movs	r1, #0
 8008b6c:	6878      	ldr	r0, [r7, #4]
 8008b6e:	f7ff fe95 	bl	800889c <dir_sdi>
 8008b72:	4603      	mov	r3, r0
 8008b74:	75fb      	strb	r3, [r7, #23]
	if (res == FR_OK) {
 8008b76:	7dfb      	ldrb	r3, [r7, #23]
 8008b78:	2b00      	cmp	r3, #0
 8008b7a:	d12b      	bne.n	8008bd4 <dir_alloc+0x7a>
		n = 0;
 8008b7c:	2300      	movs	r3, #0
 8008b7e:	613b      	str	r3, [r7, #16]
		do {
			res = move_window(fs, dp->sect);
 8008b80:	687b      	ldr	r3, [r7, #4]
 8008b82:	69db      	ldr	r3, [r3, #28]
 8008b84:	4619      	mov	r1, r3
 8008b86:	68f8      	ldr	r0, [r7, #12]
 8008b88:	f7ff faa8 	bl	80080dc <move_window>
 8008b8c:	4603      	mov	r3, r0
 8008b8e:	75fb      	strb	r3, [r7, #23]
			if (res != FR_OK) break;
 8008b90:	7dfb      	ldrb	r3, [r7, #23]
 8008b92:	2b00      	cmp	r3, #0
 8008b94:	d11d      	bne.n	8008bd2 <dir_alloc+0x78>
#if _FS_EXFAT
			if ((fs->fs_type == FS_EXFAT) ? (int)((dp->dir[XDIR_Type] & 0x80) == 0) : (int)(dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0)) {
#else
			if (dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0) {
 8008b96:	687b      	ldr	r3, [r7, #4]
 8008b98:	6a1b      	ldr	r3, [r3, #32]
 8008b9a:	781b      	ldrb	r3, [r3, #0]
 8008b9c:	2be5      	cmp	r3, #229	; 0xe5
 8008b9e:	d004      	beq.n	8008baa <dir_alloc+0x50>
 8008ba0:	687b      	ldr	r3, [r7, #4]
 8008ba2:	6a1b      	ldr	r3, [r3, #32]
 8008ba4:	781b      	ldrb	r3, [r3, #0]
 8008ba6:	2b00      	cmp	r3, #0
 8008ba8:	d107      	bne.n	8008bba <dir_alloc+0x60>
#endif
				if (++n == nent) break;	/* A block of contiguous free entries is found */
 8008baa:	693b      	ldr	r3, [r7, #16]
 8008bac:	3301      	adds	r3, #1
 8008bae:	613b      	str	r3, [r7, #16]
 8008bb0:	693a      	ldr	r2, [r7, #16]
 8008bb2:	683b      	ldr	r3, [r7, #0]
 8008bb4:	429a      	cmp	r2, r3
 8008bb6:	d102      	bne.n	8008bbe <dir_alloc+0x64>
 8008bb8:	e00c      	b.n	8008bd4 <dir_alloc+0x7a>
			} else {
				n = 0;					/* Not a blank entry. Restart to search */
 8008bba:	2300      	movs	r3, #0
 8008bbc:	613b      	str	r3, [r7, #16]
			}
			res = dir_next(dp, 1);
 8008bbe:	2101      	movs	r1, #1
 8008bc0:	6878      	ldr	r0, [r7, #4]
 8008bc2:	f7ff fef4 	bl	80089ae <dir_next>
 8008bc6:	4603      	mov	r3, r0
 8008bc8:	75fb      	strb	r3, [r7, #23]
		} while (res == FR_OK);	/* Next entry with table stretch enabled */
 8008bca:	7dfb      	ldrb	r3, [r7, #23]
 8008bcc:	2b00      	cmp	r3, #0
 8008bce:	d0d7      	beq.n	8008b80 <dir_alloc+0x26>
 8008bd0:	e000      	b.n	8008bd4 <dir_alloc+0x7a>
			if (res != FR_OK) break;
 8008bd2:	bf00      	nop
	}

	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
 8008bd4:	7dfb      	ldrb	r3, [r7, #23]
 8008bd6:	2b04      	cmp	r3, #4
 8008bd8:	d101      	bne.n	8008bde <dir_alloc+0x84>
 8008bda:	2307      	movs	r3, #7
 8008bdc:	75fb      	strb	r3, [r7, #23]
	return res;
 8008bde:	7dfb      	ldrb	r3, [r7, #23]
}
 8008be0:	4618      	mov	r0, r3
 8008be2:	3718      	adds	r7, #24
 8008be4:	46bd      	mov	sp, r7
 8008be6:	bd80      	pop	{r7, pc}

08008be8 <ld_clust>:
static
DWORD ld_clust (	/* Returns the top cluster value of the SFN entry */
	FATFS* fs,		/* Pointer to the fs object */
	const BYTE* dir	/* Pointer to the key entry */
)
{
 8008be8:	b580      	push	{r7, lr}
 8008bea:	b084      	sub	sp, #16
 8008bec:	af00      	add	r7, sp, #0
 8008bee:	6078      	str	r0, [r7, #4]
 8008bf0:	6039      	str	r1, [r7, #0]
	DWORD cl;

	cl = ld_word(dir + DIR_FstClusLO);
 8008bf2:	683b      	ldr	r3, [r7, #0]
 8008bf4:	331a      	adds	r3, #26
 8008bf6:	4618      	mov	r0, r3
 8008bf8:	f7fe ffc0 	bl	8007b7c <ld_word>
 8008bfc:	4603      	mov	r3, r0
 8008bfe:	60fb      	str	r3, [r7, #12]
	if (fs->fs_type == FS_FAT32) {
 8008c00:	687b      	ldr	r3, [r7, #4]
 8008c02:	781b      	ldrb	r3, [r3, #0]
 8008c04:	2b03      	cmp	r3, #3
 8008c06:	d109      	bne.n	8008c1c <ld_clust+0x34>
		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 8008c08:	683b      	ldr	r3, [r7, #0]
 8008c0a:	3314      	adds	r3, #20
 8008c0c:	4618      	mov	r0, r3
 8008c0e:	f7fe ffb5 	bl	8007b7c <ld_word>
 8008c12:	4603      	mov	r3, r0
 8008c14:	041b      	lsls	r3, r3, #16
 8008c16:	68fa      	ldr	r2, [r7, #12]
 8008c18:	4313      	orrs	r3, r2
 8008c1a:	60fb      	str	r3, [r7, #12]
	}

	return cl;
 8008c1c:	68fb      	ldr	r3, [r7, #12]
}
 8008c1e:	4618      	mov	r0, r3
 8008c20:	3710      	adds	r7, #16
 8008c22:	46bd      	mov	sp, r7
 8008c24:	bd80      	pop	{r7, pc}

08008c26 <st_clust>:
void st_clust (
	FATFS* fs,	/* Pointer to the fs object */
	BYTE* dir,	/* Pointer to the key entry */
	DWORD cl	/* Value to be set */
)
{
 8008c26:	b580      	push	{r7, lr}
 8008c28:	b084      	sub	sp, #16
 8008c2a:	af00      	add	r7, sp, #0
 8008c2c:	60f8      	str	r0, [r7, #12]
 8008c2e:	60b9      	str	r1, [r7, #8]
 8008c30:	607a      	str	r2, [r7, #4]
	st_word(dir + DIR_FstClusLO, (WORD)cl);
 8008c32:	68bb      	ldr	r3, [r7, #8]
 8008c34:	331a      	adds	r3, #26
 8008c36:	687a      	ldr	r2, [r7, #4]
 8008c38:	b292      	uxth	r2, r2
 8008c3a:	4611      	mov	r1, r2
 8008c3c:	4618      	mov	r0, r3
 8008c3e:	f7fe ffd8 	bl	8007bf2 <st_word>
	if (fs->fs_type == FS_FAT32) {
 8008c42:	68fb      	ldr	r3, [r7, #12]
 8008c44:	781b      	ldrb	r3, [r3, #0]
 8008c46:	2b03      	cmp	r3, #3
 8008c48:	d109      	bne.n	8008c5e <st_clust+0x38>
		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 8008c4a:	68bb      	ldr	r3, [r7, #8]
 8008c4c:	f103 0214 	add.w	r2, r3, #20
 8008c50:	687b      	ldr	r3, [r7, #4]
 8008c52:	0c1b      	lsrs	r3, r3, #16
 8008c54:	b29b      	uxth	r3, r3
 8008c56:	4619      	mov	r1, r3
 8008c58:	4610      	mov	r0, r2
 8008c5a:	f7fe ffca 	bl	8007bf2 <st_word>
	}
}
 8008c5e:	bf00      	nop
 8008c60:	3710      	adds	r7, #16
 8008c62:	46bd      	mov	sp, r7
 8008c64:	bd80      	pop	{r7, pc}
	...

08008c68 <cmp_lfn>:
static
int cmp_lfn (				/* 1:matched, 0:not matched */
	const WCHAR* lfnbuf,	/* Pointer to the LFN working buffer to be compared */
	BYTE* dir				/* Pointer to the directory entry containing the part of LFN */
)
{
 8008c68:	b590      	push	{r4, r7, lr}
 8008c6a:	b087      	sub	sp, #28
 8008c6c:	af00      	add	r7, sp, #0
 8008c6e:	6078      	str	r0, [r7, #4]
 8008c70:	6039      	str	r1, [r7, #0]
	UINT i, s;
	WCHAR wc, uc;


	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO */
 8008c72:	683b      	ldr	r3, [r7, #0]
 8008c74:	331a      	adds	r3, #26
 8008c76:	4618      	mov	r0, r3
 8008c78:	f7fe ff80 	bl	8007b7c <ld_word>
 8008c7c:	4603      	mov	r3, r0
 8008c7e:	2b00      	cmp	r3, #0
 8008c80:	d001      	beq.n	8008c86 <cmp_lfn+0x1e>
 8008c82:	2300      	movs	r3, #0
 8008c84:	e059      	b.n	8008d3a <cmp_lfn+0xd2>

	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
 8008c86:	683b      	ldr	r3, [r7, #0]
 8008c88:	781b      	ldrb	r3, [r3, #0]
 8008c8a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8008c8e:	1e5a      	subs	r2, r3, #1
 8008c90:	4613      	mov	r3, r2
 8008c92:	005b      	lsls	r3, r3, #1
 8008c94:	4413      	add	r3, r2
 8008c96:	009b      	lsls	r3, r3, #2
 8008c98:	4413      	add	r3, r2
 8008c9a:	617b      	str	r3, [r7, #20]

	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
 8008c9c:	2301      	movs	r3, #1
 8008c9e:	81fb      	strh	r3, [r7, #14]
 8008ca0:	2300      	movs	r3, #0
 8008ca2:	613b      	str	r3, [r7, #16]
 8008ca4:	e033      	b.n	8008d0e <cmp_lfn+0xa6>
		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
 8008ca6:	4a27      	ldr	r2, [pc, #156]	; (8008d44 <cmp_lfn+0xdc>)
 8008ca8:	693b      	ldr	r3, [r7, #16]
 8008caa:	4413      	add	r3, r2
 8008cac:	781b      	ldrb	r3, [r3, #0]
 8008cae:	461a      	mov	r2, r3
 8008cb0:	683b      	ldr	r3, [r7, #0]
 8008cb2:	4413      	add	r3, r2
 8008cb4:	4618      	mov	r0, r3
 8008cb6:	f7fe ff61 	bl	8007b7c <ld_word>
 8008cba:	4603      	mov	r3, r0
 8008cbc:	81bb      	strh	r3, [r7, #12]
		if (wc) {
 8008cbe:	89fb      	ldrh	r3, [r7, #14]
 8008cc0:	2b00      	cmp	r3, #0
 8008cc2:	d01a      	beq.n	8008cfa <cmp_lfn+0x92>
			if (i >= _MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
 8008cc4:	697b      	ldr	r3, [r7, #20]
 8008cc6:	2bfe      	cmp	r3, #254	; 0xfe
 8008cc8:	d812      	bhi.n	8008cf0 <cmp_lfn+0x88>
 8008cca:	89bb      	ldrh	r3, [r7, #12]
 8008ccc:	4618      	mov	r0, r3
 8008cce:	f002 f8e5 	bl	800ae9c <ff_wtoupper>
 8008cd2:	4603      	mov	r3, r0
 8008cd4:	461c      	mov	r4, r3
 8008cd6:	697b      	ldr	r3, [r7, #20]
 8008cd8:	1c5a      	adds	r2, r3, #1
 8008cda:	617a      	str	r2, [r7, #20]
 8008cdc:	005b      	lsls	r3, r3, #1
 8008cde:	687a      	ldr	r2, [r7, #4]
 8008ce0:	4413      	add	r3, r2
 8008ce2:	881b      	ldrh	r3, [r3, #0]
 8008ce4:	4618      	mov	r0, r3
 8008ce6:	f002 f8d9 	bl	800ae9c <ff_wtoupper>
 8008cea:	4603      	mov	r3, r0
 8008cec:	429c      	cmp	r4, r3
 8008cee:	d001      	beq.n	8008cf4 <cmp_lfn+0x8c>
				return 0;					/* Not matched */
 8008cf0:	2300      	movs	r3, #0
 8008cf2:	e022      	b.n	8008d3a <cmp_lfn+0xd2>
			}
			wc = uc;
 8008cf4:	89bb      	ldrh	r3, [r7, #12]
 8008cf6:	81fb      	strh	r3, [r7, #14]
 8008cf8:	e006      	b.n	8008d08 <cmp_lfn+0xa0>
		} else {
			if (uc != 0xFFFF) return 0;		/* Check filler */
 8008cfa:	89bb      	ldrh	r3, [r7, #12]
 8008cfc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008d00:	4293      	cmp	r3, r2
 8008d02:	d001      	beq.n	8008d08 <cmp_lfn+0xa0>
 8008d04:	2300      	movs	r3, #0
 8008d06:	e018      	b.n	8008d3a <cmp_lfn+0xd2>
	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
 8008d08:	693b      	ldr	r3, [r7, #16]
 8008d0a:	3301      	adds	r3, #1
 8008d0c:	613b      	str	r3, [r7, #16]
 8008d0e:	693b      	ldr	r3, [r7, #16]
 8008d10:	2b0c      	cmp	r3, #12
 8008d12:	d9c8      	bls.n	8008ca6 <cmp_lfn+0x3e>
		}
	}

	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i]) return 0;	/* Last segment matched but different length */
 8008d14:	683b      	ldr	r3, [r7, #0]
 8008d16:	781b      	ldrb	r3, [r3, #0]
 8008d18:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008d1c:	2b00      	cmp	r3, #0
 8008d1e:	d00b      	beq.n	8008d38 <cmp_lfn+0xd0>
 8008d20:	89fb      	ldrh	r3, [r7, #14]
 8008d22:	2b00      	cmp	r3, #0
 8008d24:	d008      	beq.n	8008d38 <cmp_lfn+0xd0>
 8008d26:	697b      	ldr	r3, [r7, #20]
 8008d28:	005b      	lsls	r3, r3, #1
 8008d2a:	687a      	ldr	r2, [r7, #4]
 8008d2c:	4413      	add	r3, r2
 8008d2e:	881b      	ldrh	r3, [r3, #0]
 8008d30:	2b00      	cmp	r3, #0
 8008d32:	d001      	beq.n	8008d38 <cmp_lfn+0xd0>
 8008d34:	2300      	movs	r3, #0
 8008d36:	e000      	b.n	8008d3a <cmp_lfn+0xd2>

	return 1;		/* The part of LFN matched */
 8008d38:	2301      	movs	r3, #1
}
 8008d3a:	4618      	mov	r0, r3
 8008d3c:	371c      	adds	r7, #28
 8008d3e:	46bd      	mov	sp, r7
 8008d40:	bd90      	pop	{r4, r7, pc}
 8008d42:	bf00      	nop
 8008d44:	0802b29c 	.word	0x0802b29c

08008d48 <pick_lfn>:
static
int pick_lfn (			/* 1:succeeded, 0:buffer overflow or invalid LFN entry */
	WCHAR* lfnbuf,		/* Pointer to the LFN working buffer */
	BYTE* dir			/* Pointer to the LFN entry */
)
{
 8008d48:	b580      	push	{r7, lr}
 8008d4a:	b086      	sub	sp, #24
 8008d4c:	af00      	add	r7, sp, #0
 8008d4e:	6078      	str	r0, [r7, #4]
 8008d50:	6039      	str	r1, [r7, #0]
	UINT i, s;
	WCHAR wc, uc;


	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO is 0 */
 8008d52:	683b      	ldr	r3, [r7, #0]
 8008d54:	331a      	adds	r3, #26
 8008d56:	4618      	mov	r0, r3
 8008d58:	f7fe ff10 	bl	8007b7c <ld_word>
 8008d5c:	4603      	mov	r3, r0
 8008d5e:	2b00      	cmp	r3, #0
 8008d60:	d001      	beq.n	8008d66 <pick_lfn+0x1e>
 8008d62:	2300      	movs	r3, #0
 8008d64:	e04d      	b.n	8008e02 <pick_lfn+0xba>

	i = ((dir[LDIR_Ord] & ~LLEF) - 1) * 13;	/* Offset in the LFN buffer */
 8008d66:	683b      	ldr	r3, [r7, #0]
 8008d68:	781b      	ldrb	r3, [r3, #0]
 8008d6a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8008d6e:	1e5a      	subs	r2, r3, #1
 8008d70:	4613      	mov	r3, r2
 8008d72:	005b      	lsls	r3, r3, #1
 8008d74:	4413      	add	r3, r2
 8008d76:	009b      	lsls	r3, r3, #2
 8008d78:	4413      	add	r3, r2
 8008d7a:	617b      	str	r3, [r7, #20]

	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
 8008d7c:	2301      	movs	r3, #1
 8008d7e:	81fb      	strh	r3, [r7, #14]
 8008d80:	2300      	movs	r3, #0
 8008d82:	613b      	str	r3, [r7, #16]
 8008d84:	e028      	b.n	8008dd8 <pick_lfn+0x90>
		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
 8008d86:	4a21      	ldr	r2, [pc, #132]	; (8008e0c <pick_lfn+0xc4>)
 8008d88:	693b      	ldr	r3, [r7, #16]
 8008d8a:	4413      	add	r3, r2
 8008d8c:	781b      	ldrb	r3, [r3, #0]
 8008d8e:	461a      	mov	r2, r3
 8008d90:	683b      	ldr	r3, [r7, #0]
 8008d92:	4413      	add	r3, r2
 8008d94:	4618      	mov	r0, r3
 8008d96:	f7fe fef1 	bl	8007b7c <ld_word>
 8008d9a:	4603      	mov	r3, r0
 8008d9c:	81bb      	strh	r3, [r7, #12]
		if (wc) {
 8008d9e:	89fb      	ldrh	r3, [r7, #14]
 8008da0:	2b00      	cmp	r3, #0
 8008da2:	d00f      	beq.n	8008dc4 <pick_lfn+0x7c>
			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
 8008da4:	697b      	ldr	r3, [r7, #20]
 8008da6:	2bfe      	cmp	r3, #254	; 0xfe
 8008da8:	d901      	bls.n	8008dae <pick_lfn+0x66>
 8008daa:	2300      	movs	r3, #0
 8008dac:	e029      	b.n	8008e02 <pick_lfn+0xba>
			lfnbuf[i++] = wc = uc;			/* Store it */
 8008dae:	89bb      	ldrh	r3, [r7, #12]
 8008db0:	81fb      	strh	r3, [r7, #14]
 8008db2:	697b      	ldr	r3, [r7, #20]
 8008db4:	1c5a      	adds	r2, r3, #1
 8008db6:	617a      	str	r2, [r7, #20]
 8008db8:	005b      	lsls	r3, r3, #1
 8008dba:	687a      	ldr	r2, [r7, #4]
 8008dbc:	4413      	add	r3, r2
 8008dbe:	89fa      	ldrh	r2, [r7, #14]
 8008dc0:	801a      	strh	r2, [r3, #0]
 8008dc2:	e006      	b.n	8008dd2 <pick_lfn+0x8a>
		} else {
			if (uc != 0xFFFF) return 0;		/* Check filler */
 8008dc4:	89bb      	ldrh	r3, [r7, #12]
 8008dc6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008dca:	4293      	cmp	r3, r2
 8008dcc:	d001      	beq.n	8008dd2 <pick_lfn+0x8a>
 8008dce:	2300      	movs	r3, #0
 8008dd0:	e017      	b.n	8008e02 <pick_lfn+0xba>
	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
 8008dd2:	693b      	ldr	r3, [r7, #16]
 8008dd4:	3301      	adds	r3, #1
 8008dd6:	613b      	str	r3, [r7, #16]
 8008dd8:	693b      	ldr	r3, [r7, #16]
 8008dda:	2b0c      	cmp	r3, #12
 8008ddc:	d9d3      	bls.n	8008d86 <pick_lfn+0x3e>
		}
	}

	if (dir[LDIR_Ord] & LLEF) {				/* Put terminator if it is the last LFN part */
 8008dde:	683b      	ldr	r3, [r7, #0]
 8008de0:	781b      	ldrb	r3, [r3, #0]
 8008de2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008de6:	2b00      	cmp	r3, #0
 8008de8:	d00a      	beq.n	8008e00 <pick_lfn+0xb8>
		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
 8008dea:	697b      	ldr	r3, [r7, #20]
 8008dec:	2bfe      	cmp	r3, #254	; 0xfe
 8008dee:	d901      	bls.n	8008df4 <pick_lfn+0xac>
 8008df0:	2300      	movs	r3, #0
 8008df2:	e006      	b.n	8008e02 <pick_lfn+0xba>
		lfnbuf[i] = 0;
 8008df4:	697b      	ldr	r3, [r7, #20]
 8008df6:	005b      	lsls	r3, r3, #1
 8008df8:	687a      	ldr	r2, [r7, #4]
 8008dfa:	4413      	add	r3, r2
 8008dfc:	2200      	movs	r2, #0
 8008dfe:	801a      	strh	r2, [r3, #0]
	}

	return 1;		/* The part of LFN is valid */
 8008e00:	2301      	movs	r3, #1
}
 8008e02:	4618      	mov	r0, r3
 8008e04:	3718      	adds	r7, #24
 8008e06:	46bd      	mov	sp, r7
 8008e08:	bd80      	pop	{r7, pc}
 8008e0a:	bf00      	nop
 8008e0c:	0802b29c 	.word	0x0802b29c

08008e10 <put_lfn>:
	const WCHAR* lfn,	/* Pointer to the LFN */
	BYTE* dir,			/* Pointer to the LFN entry to be created */
	BYTE ord,			/* LFN order (1-20) */
	BYTE sum			/* Checksum of the corresponding SFN */
)
{
 8008e10:	b580      	push	{r7, lr}
 8008e12:	b088      	sub	sp, #32
 8008e14:	af00      	add	r7, sp, #0
 8008e16:	60f8      	str	r0, [r7, #12]
 8008e18:	60b9      	str	r1, [r7, #8]
 8008e1a:	4611      	mov	r1, r2
 8008e1c:	461a      	mov	r2, r3
 8008e1e:	460b      	mov	r3, r1
 8008e20:	71fb      	strb	r3, [r7, #7]
 8008e22:	4613      	mov	r3, r2
 8008e24:	71bb      	strb	r3, [r7, #6]
	UINT i, s;
	WCHAR wc;


	dir[LDIR_Chksum] = sum;			/* Set checksum */
 8008e26:	68bb      	ldr	r3, [r7, #8]
 8008e28:	330d      	adds	r3, #13
 8008e2a:	79ba      	ldrb	r2, [r7, #6]
 8008e2c:	701a      	strb	r2, [r3, #0]
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
 8008e2e:	68bb      	ldr	r3, [r7, #8]
 8008e30:	330b      	adds	r3, #11
 8008e32:	220f      	movs	r2, #15
 8008e34:	701a      	strb	r2, [r3, #0]
	dir[LDIR_Type] = 0;
 8008e36:	68bb      	ldr	r3, [r7, #8]
 8008e38:	330c      	adds	r3, #12
 8008e3a:	2200      	movs	r2, #0
 8008e3c:	701a      	strb	r2, [r3, #0]
	st_word(dir + LDIR_FstClusLO, 0);
 8008e3e:	68bb      	ldr	r3, [r7, #8]
 8008e40:	331a      	adds	r3, #26
 8008e42:	2100      	movs	r1, #0
 8008e44:	4618      	mov	r0, r3
 8008e46:	f7fe fed4 	bl	8007bf2 <st_word>

	i = (ord - 1) * 13;				/* Get offset in the LFN working buffer */
 8008e4a:	79fb      	ldrb	r3, [r7, #7]
 8008e4c:	1e5a      	subs	r2, r3, #1
 8008e4e:	4613      	mov	r3, r2
 8008e50:	005b      	lsls	r3, r3, #1
 8008e52:	4413      	add	r3, r2
 8008e54:	009b      	lsls	r3, r3, #2
 8008e56:	4413      	add	r3, r2
 8008e58:	61fb      	str	r3, [r7, #28]
	s = wc = 0;
 8008e5a:	2300      	movs	r3, #0
 8008e5c:	82fb      	strh	r3, [r7, #22]
 8008e5e:	2300      	movs	r3, #0
 8008e60:	61bb      	str	r3, [r7, #24]
	do {
		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
 8008e62:	8afb      	ldrh	r3, [r7, #22]
 8008e64:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008e68:	4293      	cmp	r3, r2
 8008e6a:	d007      	beq.n	8008e7c <put_lfn+0x6c>
 8008e6c:	69fb      	ldr	r3, [r7, #28]
 8008e6e:	1c5a      	adds	r2, r3, #1
 8008e70:	61fa      	str	r2, [r7, #28]
 8008e72:	005b      	lsls	r3, r3, #1
 8008e74:	68fa      	ldr	r2, [r7, #12]
 8008e76:	4413      	add	r3, r2
 8008e78:	881b      	ldrh	r3, [r3, #0]
 8008e7a:	82fb      	strh	r3, [r7, #22]
		st_word(dir + LfnOfs[s], wc);		/* Put it */
 8008e7c:	4a17      	ldr	r2, [pc, #92]	; (8008edc <put_lfn+0xcc>)
 8008e7e:	69bb      	ldr	r3, [r7, #24]
 8008e80:	4413      	add	r3, r2
 8008e82:	781b      	ldrb	r3, [r3, #0]
 8008e84:	461a      	mov	r2, r3
 8008e86:	68bb      	ldr	r3, [r7, #8]
 8008e88:	4413      	add	r3, r2
 8008e8a:	8afa      	ldrh	r2, [r7, #22]
 8008e8c:	4611      	mov	r1, r2
 8008e8e:	4618      	mov	r0, r3
 8008e90:	f7fe feaf 	bl	8007bf2 <st_word>
		if (wc == 0) wc = 0xFFFF;		/* Padding characters for left locations */
 8008e94:	8afb      	ldrh	r3, [r7, #22]
 8008e96:	2b00      	cmp	r3, #0
 8008e98:	d102      	bne.n	8008ea0 <put_lfn+0x90>
 8008e9a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008e9e:	82fb      	strh	r3, [r7, #22]
	} while (++s < 13);
 8008ea0:	69bb      	ldr	r3, [r7, #24]
 8008ea2:	3301      	adds	r3, #1
 8008ea4:	61bb      	str	r3, [r7, #24]
 8008ea6:	69bb      	ldr	r3, [r7, #24]
 8008ea8:	2b0c      	cmp	r3, #12
 8008eaa:	d9da      	bls.n	8008e62 <put_lfn+0x52>
	if (wc == 0xFFFF || !lfn[i]) ord |= LLEF;	/* Last LFN part is the start of LFN sequence */
 8008eac:	8afb      	ldrh	r3, [r7, #22]
 8008eae:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008eb2:	4293      	cmp	r3, r2
 8008eb4:	d006      	beq.n	8008ec4 <put_lfn+0xb4>
 8008eb6:	69fb      	ldr	r3, [r7, #28]
 8008eb8:	005b      	lsls	r3, r3, #1
 8008eba:	68fa      	ldr	r2, [r7, #12]
 8008ebc:	4413      	add	r3, r2
 8008ebe:	881b      	ldrh	r3, [r3, #0]
 8008ec0:	2b00      	cmp	r3, #0
 8008ec2:	d103      	bne.n	8008ecc <put_lfn+0xbc>
 8008ec4:	79fb      	ldrb	r3, [r7, #7]
 8008ec6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008eca:	71fb      	strb	r3, [r7, #7]
	dir[LDIR_Ord] = ord;			/* Set the LFN order */
 8008ecc:	68bb      	ldr	r3, [r7, #8]
 8008ece:	79fa      	ldrb	r2, [r7, #7]
 8008ed0:	701a      	strb	r2, [r3, #0]
}
 8008ed2:	bf00      	nop
 8008ed4:	3720      	adds	r7, #32
 8008ed6:	46bd      	mov	sp, r7
 8008ed8:	bd80      	pop	{r7, pc}
 8008eda:	bf00      	nop
 8008edc:	0802b29c 	.word	0x0802b29c

08008ee0 <gen_numname>:
	BYTE* dst,			/* Pointer to the buffer to store numbered SFN */
	const BYTE* src,	/* Pointer to SFN */
	const WCHAR* lfn,	/* Pointer to LFN */
	UINT seq			/* Sequence number */
)
{
 8008ee0:	b580      	push	{r7, lr}
 8008ee2:	b08c      	sub	sp, #48	; 0x30
 8008ee4:	af00      	add	r7, sp, #0
 8008ee6:	60f8      	str	r0, [r7, #12]
 8008ee8:	60b9      	str	r1, [r7, #8]
 8008eea:	607a      	str	r2, [r7, #4]
 8008eec:	603b      	str	r3, [r7, #0]
	UINT i, j;
	WCHAR wc;
	DWORD sr;


	mem_cpy(dst, src, 11);
 8008eee:	220b      	movs	r2, #11
 8008ef0:	68b9      	ldr	r1, [r7, #8]
 8008ef2:	68f8      	ldr	r0, [r7, #12]
 8008ef4:	f7fe fec4 	bl	8007c80 <mem_cpy>

	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number */
 8008ef8:	683b      	ldr	r3, [r7, #0]
 8008efa:	2b05      	cmp	r3, #5
 8008efc:	d92b      	bls.n	8008f56 <gen_numname+0x76>
		sr = seq;
 8008efe:	683b      	ldr	r3, [r7, #0]
 8008f00:	61fb      	str	r3, [r7, #28]
		while (*lfn) {	/* Create a CRC */
 8008f02:	e022      	b.n	8008f4a <gen_numname+0x6a>
			wc = *lfn++;
 8008f04:	687b      	ldr	r3, [r7, #4]
 8008f06:	1c9a      	adds	r2, r3, #2
 8008f08:	607a      	str	r2, [r7, #4]
 8008f0a:	881b      	ldrh	r3, [r3, #0]
 8008f0c:	847b      	strh	r3, [r7, #34]	; 0x22
			for (i = 0; i < 16; i++) {
 8008f0e:	2300      	movs	r3, #0
 8008f10:	62bb      	str	r3, [r7, #40]	; 0x28
 8008f12:	e017      	b.n	8008f44 <gen_numname+0x64>
				sr = (sr << 1) + (wc & 1);
 8008f14:	69fb      	ldr	r3, [r7, #28]
 8008f16:	005a      	lsls	r2, r3, #1
 8008f18:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8008f1a:	f003 0301 	and.w	r3, r3, #1
 8008f1e:	4413      	add	r3, r2
 8008f20:	61fb      	str	r3, [r7, #28]
				wc >>= 1;
 8008f22:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8008f24:	085b      	lsrs	r3, r3, #1
 8008f26:	847b      	strh	r3, [r7, #34]	; 0x22
				if (sr & 0x10000) sr ^= 0x11021;
 8008f28:	69fb      	ldr	r3, [r7, #28]
 8008f2a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8008f2e:	2b00      	cmp	r3, #0
 8008f30:	d005      	beq.n	8008f3e <gen_numname+0x5e>
 8008f32:	69fb      	ldr	r3, [r7, #28]
 8008f34:	f483 3388 	eor.w	r3, r3, #69632	; 0x11000
 8008f38:	f083 0321 	eor.w	r3, r3, #33	; 0x21
 8008f3c:	61fb      	str	r3, [r7, #28]
			for (i = 0; i < 16; i++) {
 8008f3e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008f40:	3301      	adds	r3, #1
 8008f42:	62bb      	str	r3, [r7, #40]	; 0x28
 8008f44:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008f46:	2b0f      	cmp	r3, #15
 8008f48:	d9e4      	bls.n	8008f14 <gen_numname+0x34>
		while (*lfn) {	/* Create a CRC */
 8008f4a:	687b      	ldr	r3, [r7, #4]
 8008f4c:	881b      	ldrh	r3, [r3, #0]
 8008f4e:	2b00      	cmp	r3, #0
 8008f50:	d1d8      	bne.n	8008f04 <gen_numname+0x24>
			}
		}
		seq = (UINT)sr;
 8008f52:	69fb      	ldr	r3, [r7, #28]
 8008f54:	603b      	str	r3, [r7, #0]
	}

	/* itoa (hexdecimal) */
	i = 7;
 8008f56:	2307      	movs	r3, #7
 8008f58:	62bb      	str	r3, [r7, #40]	; 0x28
	do {
		c = (BYTE)((seq % 16) + '0');
 8008f5a:	683b      	ldr	r3, [r7, #0]
 8008f5c:	b2db      	uxtb	r3, r3
 8008f5e:	f003 030f 	and.w	r3, r3, #15
 8008f62:	b2db      	uxtb	r3, r3
 8008f64:	3330      	adds	r3, #48	; 0x30
 8008f66:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
		if (c > '9') c += 7;
 8008f6a:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8008f6e:	2b39      	cmp	r3, #57	; 0x39
 8008f70:	d904      	bls.n	8008f7c <gen_numname+0x9c>
 8008f72:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8008f76:	3307      	adds	r3, #7
 8008f78:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
		ns[i--] = c;
 8008f7c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008f7e:	1e5a      	subs	r2, r3, #1
 8008f80:	62ba      	str	r2, [r7, #40]	; 0x28
 8008f82:	3330      	adds	r3, #48	; 0x30
 8008f84:	443b      	add	r3, r7
 8008f86:	f897 202f 	ldrb.w	r2, [r7, #47]	; 0x2f
 8008f8a:	f803 2c1c 	strb.w	r2, [r3, #-28]
		seq /= 16;
 8008f8e:	683b      	ldr	r3, [r7, #0]
 8008f90:	091b      	lsrs	r3, r3, #4
 8008f92:	603b      	str	r3, [r7, #0]
	} while (seq);
 8008f94:	683b      	ldr	r3, [r7, #0]
 8008f96:	2b00      	cmp	r3, #0
 8008f98:	d1df      	bne.n	8008f5a <gen_numname+0x7a>
	ns[i] = '~';
 8008f9a:	f107 0214 	add.w	r2, r7, #20
 8008f9e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008fa0:	4413      	add	r3, r2
 8008fa2:	227e      	movs	r2, #126	; 0x7e
 8008fa4:	701a      	strb	r2, [r3, #0]

	/* Append the number */
	for (j = 0; j < i && dst[j] != ' '; j++) {
 8008fa6:	2300      	movs	r3, #0
 8008fa8:	627b      	str	r3, [r7, #36]	; 0x24
 8008faa:	e002      	b.n	8008fb2 <gen_numname+0xd2>
 8008fac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008fae:	3301      	adds	r3, #1
 8008fb0:	627b      	str	r3, [r7, #36]	; 0x24
 8008fb2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8008fb4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008fb6:	429a      	cmp	r2, r3
 8008fb8:	d205      	bcs.n	8008fc6 <gen_numname+0xe6>
 8008fba:	68fa      	ldr	r2, [r7, #12]
 8008fbc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008fbe:	4413      	add	r3, r2
 8008fc0:	781b      	ldrb	r3, [r3, #0]
 8008fc2:	2b20      	cmp	r3, #32
 8008fc4:	d1f2      	bne.n	8008fac <gen_numname+0xcc>
			if (j == i - 1) break;
			j++;
		}
	}
	do {
		dst[j++] = (i < 8) ? ns[i++] : ' ';
 8008fc6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008fc8:	2b07      	cmp	r3, #7
 8008fca:	d807      	bhi.n	8008fdc <gen_numname+0xfc>
 8008fcc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008fce:	1c5a      	adds	r2, r3, #1
 8008fd0:	62ba      	str	r2, [r7, #40]	; 0x28
 8008fd2:	3330      	adds	r3, #48	; 0x30
 8008fd4:	443b      	add	r3, r7
 8008fd6:	f813 1c1c 	ldrb.w	r1, [r3, #-28]
 8008fda:	e000      	b.n	8008fde <gen_numname+0xfe>
 8008fdc:	2120      	movs	r1, #32
 8008fde:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008fe0:	1c5a      	adds	r2, r3, #1
 8008fe2:	627a      	str	r2, [r7, #36]	; 0x24
 8008fe4:	68fa      	ldr	r2, [r7, #12]
 8008fe6:	4413      	add	r3, r2
 8008fe8:	460a      	mov	r2, r1
 8008fea:	701a      	strb	r2, [r3, #0]
	} while (j < 8);
 8008fec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008fee:	2b07      	cmp	r3, #7
 8008ff0:	d9e9      	bls.n	8008fc6 <gen_numname+0xe6>
}
 8008ff2:	bf00      	nop
 8008ff4:	bf00      	nop
 8008ff6:	3730      	adds	r7, #48	; 0x30
 8008ff8:	46bd      	mov	sp, r7
 8008ffa:	bd80      	pop	{r7, pc}

08008ffc <sum_sfn>:

static
BYTE sum_sfn (
	const BYTE* dir		/* Pointer to the SFN entry */
)
{
 8008ffc:	b480      	push	{r7}
 8008ffe:	b085      	sub	sp, #20
 8009000:	af00      	add	r7, sp, #0
 8009002:	6078      	str	r0, [r7, #4]
	BYTE sum = 0;
 8009004:	2300      	movs	r3, #0
 8009006:	73fb      	strb	r3, [r7, #15]
	UINT n = 11;
 8009008:	230b      	movs	r3, #11
 800900a:	60bb      	str	r3, [r7, #8]

	do {
		sum = (sum >> 1) + (sum << 7) + *dir++;
 800900c:	7bfb      	ldrb	r3, [r7, #15]
 800900e:	b2da      	uxtb	r2, r3
 8009010:	0852      	lsrs	r2, r2, #1
 8009012:	01db      	lsls	r3, r3, #7
 8009014:	4313      	orrs	r3, r2
 8009016:	b2da      	uxtb	r2, r3
 8009018:	687b      	ldr	r3, [r7, #4]
 800901a:	1c59      	adds	r1, r3, #1
 800901c:	6079      	str	r1, [r7, #4]
 800901e:	781b      	ldrb	r3, [r3, #0]
 8009020:	4413      	add	r3, r2
 8009022:	73fb      	strb	r3, [r7, #15]
	} while (--n);
 8009024:	68bb      	ldr	r3, [r7, #8]
 8009026:	3b01      	subs	r3, #1
 8009028:	60bb      	str	r3, [r7, #8]
 800902a:	68bb      	ldr	r3, [r7, #8]
 800902c:	2b00      	cmp	r3, #0
 800902e:	d1ed      	bne.n	800900c <sum_sfn+0x10>
	return sum;
 8009030:	7bfb      	ldrb	r3, [r7, #15]
}
 8009032:	4618      	mov	r0, r3
 8009034:	3714      	adds	r7, #20
 8009036:	46bd      	mov	sp, r7
 8009038:	f85d 7b04 	ldr.w	r7, [sp], #4
 800903c:	4770      	bx	lr

0800903e <dir_read>:
static
FRESULT dir_read (
	DIR* dp,		/* Pointer to the directory object */
	int vol			/* Filtered by 0:file/directory or 1:volume label */
)
{
 800903e:	b580      	push	{r7, lr}
 8009040:	b086      	sub	sp, #24
 8009042:	af00      	add	r7, sp, #0
 8009044:	6078      	str	r0, [r7, #4]
 8009046:	6039      	str	r1, [r7, #0]
	FRESULT res = FR_NO_FILE;
 8009048:	2304      	movs	r3, #4
 800904a:	75fb      	strb	r3, [r7, #23]
	FATFS *fs = dp->obj.fs;
 800904c:	687b      	ldr	r3, [r7, #4]
 800904e:	681b      	ldr	r3, [r3, #0]
 8009050:	613b      	str	r3, [r7, #16]
	BYTE a, c;
#if _USE_LFN != 0
	BYTE ord = 0xFF, sum = 0xFF;
 8009052:	23ff      	movs	r3, #255	; 0xff
 8009054:	757b      	strb	r3, [r7, #21]
 8009056:	23ff      	movs	r3, #255	; 0xff
 8009058:	753b      	strb	r3, [r7, #20]
#endif

	while (dp->sect) {
 800905a:	e081      	b.n	8009160 <dir_read+0x122>
		res = move_window(fs, dp->sect);
 800905c:	687b      	ldr	r3, [r7, #4]
 800905e:	69db      	ldr	r3, [r3, #28]
 8009060:	4619      	mov	r1, r3
 8009062:	6938      	ldr	r0, [r7, #16]
 8009064:	f7ff f83a 	bl	80080dc <move_window>
 8009068:	4603      	mov	r3, r0
 800906a:	75fb      	strb	r3, [r7, #23]
		if (res != FR_OK) break;
 800906c:	7dfb      	ldrb	r3, [r7, #23]
 800906e:	2b00      	cmp	r3, #0
 8009070:	d17c      	bne.n	800916c <dir_read+0x12e>
		c = dp->dir[DIR_Name];	/* Test for the entry type */
 8009072:	687b      	ldr	r3, [r7, #4]
 8009074:	6a1b      	ldr	r3, [r3, #32]
 8009076:	781b      	ldrb	r3, [r3, #0]
 8009078:	75bb      	strb	r3, [r7, #22]
		if (c == 0) {
 800907a:	7dbb      	ldrb	r3, [r7, #22]
 800907c:	2b00      	cmp	r3, #0
 800907e:	d102      	bne.n	8009086 <dir_read+0x48>
			res = FR_NO_FILE; break; /* Reached to end of the directory */
 8009080:	2304      	movs	r3, #4
 8009082:	75fb      	strb	r3, [r7, #23]
 8009084:	e077      	b.n	8009176 <dir_read+0x138>
				}
			}
		} else
#endif
		{	/* On the FAT12/16/32 volume */
			dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;	/* Get attribute */
 8009086:	687b      	ldr	r3, [r7, #4]
 8009088:	6a1b      	ldr	r3, [r3, #32]
 800908a:	330b      	adds	r3, #11
 800908c:	781b      	ldrb	r3, [r3, #0]
 800908e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009092:	73fb      	strb	r3, [r7, #15]
 8009094:	687b      	ldr	r3, [r7, #4]
 8009096:	7bfa      	ldrb	r2, [r7, #15]
 8009098:	719a      	strb	r2, [r3, #6]
#if _USE_LFN != 0	/* LFN configuration */
			if (c == DDEM || c == '.' || (int)((a & ~AM_ARC) == AM_VOL) != vol) {	/* An entry without valid data */
 800909a:	7dbb      	ldrb	r3, [r7, #22]
 800909c:	2be5      	cmp	r3, #229	; 0xe5
 800909e:	d00e      	beq.n	80090be <dir_read+0x80>
 80090a0:	7dbb      	ldrb	r3, [r7, #22]
 80090a2:	2b2e      	cmp	r3, #46	; 0x2e
 80090a4:	d00b      	beq.n	80090be <dir_read+0x80>
 80090a6:	7bfb      	ldrb	r3, [r7, #15]
 80090a8:	f023 0320 	bic.w	r3, r3, #32
 80090ac:	2b08      	cmp	r3, #8
 80090ae:	bf0c      	ite	eq
 80090b0:	2301      	moveq	r3, #1
 80090b2:	2300      	movne	r3, #0
 80090b4:	b2db      	uxtb	r3, r3
 80090b6:	461a      	mov	r2, r3
 80090b8:	683b      	ldr	r3, [r7, #0]
 80090ba:	4293      	cmp	r3, r2
 80090bc:	d002      	beq.n	80090c4 <dir_read+0x86>
				ord = 0xFF;
 80090be:	23ff      	movs	r3, #255	; 0xff
 80090c0:	757b      	strb	r3, [r7, #21]
 80090c2:	e044      	b.n	800914e <dir_read+0x110>
			} else {
				if (a == AM_LFN) {			/* An LFN entry is found */
 80090c4:	7bfb      	ldrb	r3, [r7, #15]
 80090c6:	2b0f      	cmp	r3, #15
 80090c8:	d12f      	bne.n	800912a <dir_read+0xec>
					if (c & LLEF) {			/* Is it start of an LFN sequence? */
 80090ca:	7dbb      	ldrb	r3, [r7, #22]
 80090cc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80090d0:	2b00      	cmp	r3, #0
 80090d2:	d00d      	beq.n	80090f0 <dir_read+0xb2>
						sum = dp->dir[LDIR_Chksum];
 80090d4:	687b      	ldr	r3, [r7, #4]
 80090d6:	6a1b      	ldr	r3, [r3, #32]
 80090d8:	7b5b      	ldrb	r3, [r3, #13]
 80090da:	753b      	strb	r3, [r7, #20]
						c &= (BYTE)~LLEF; ord = c;
 80090dc:	7dbb      	ldrb	r3, [r7, #22]
 80090de:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80090e2:	75bb      	strb	r3, [r7, #22]
 80090e4:	7dbb      	ldrb	r3, [r7, #22]
 80090e6:	757b      	strb	r3, [r7, #21]
						dp->blk_ofs = dp->dptr;
 80090e8:	687b      	ldr	r3, [r7, #4]
 80090ea:	695a      	ldr	r2, [r3, #20]
 80090ec:	687b      	ldr	r3, [r7, #4]
 80090ee:	631a      	str	r2, [r3, #48]	; 0x30
					}
					/* Check LFN validity and capture it */
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && pick_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
 80090f0:	7dba      	ldrb	r2, [r7, #22]
 80090f2:	7d7b      	ldrb	r3, [r7, #21]
 80090f4:	429a      	cmp	r2, r3
 80090f6:	d115      	bne.n	8009124 <dir_read+0xe6>
 80090f8:	687b      	ldr	r3, [r7, #4]
 80090fa:	6a1b      	ldr	r3, [r3, #32]
 80090fc:	330d      	adds	r3, #13
 80090fe:	781b      	ldrb	r3, [r3, #0]
 8009100:	7d3a      	ldrb	r2, [r7, #20]
 8009102:	429a      	cmp	r2, r3
 8009104:	d10e      	bne.n	8009124 <dir_read+0xe6>
 8009106:	693b      	ldr	r3, [r7, #16]
 8009108:	691a      	ldr	r2, [r3, #16]
 800910a:	687b      	ldr	r3, [r7, #4]
 800910c:	6a1b      	ldr	r3, [r3, #32]
 800910e:	4619      	mov	r1, r3
 8009110:	4610      	mov	r0, r2
 8009112:	f7ff fe19 	bl	8008d48 <pick_lfn>
 8009116:	4603      	mov	r3, r0
 8009118:	2b00      	cmp	r3, #0
 800911a:	d003      	beq.n	8009124 <dir_read+0xe6>
 800911c:	7d7b      	ldrb	r3, [r7, #21]
 800911e:	3b01      	subs	r3, #1
 8009120:	b2db      	uxtb	r3, r3
 8009122:	e000      	b.n	8009126 <dir_read+0xe8>
 8009124:	23ff      	movs	r3, #255	; 0xff
 8009126:	757b      	strb	r3, [r7, #21]
 8009128:	e011      	b.n	800914e <dir_read+0x110>
				} else {					/* An SFN entry is found */
					if (ord || sum != sum_sfn(dp->dir)) {	/* Is there a valid LFN? */
 800912a:	7d7b      	ldrb	r3, [r7, #21]
 800912c:	2b00      	cmp	r3, #0
 800912e:	d109      	bne.n	8009144 <dir_read+0x106>
 8009130:	687b      	ldr	r3, [r7, #4]
 8009132:	6a1b      	ldr	r3, [r3, #32]
 8009134:	4618      	mov	r0, r3
 8009136:	f7ff ff61 	bl	8008ffc <sum_sfn>
 800913a:	4603      	mov	r3, r0
 800913c:	461a      	mov	r2, r3
 800913e:	7d3b      	ldrb	r3, [r7, #20]
 8009140:	4293      	cmp	r3, r2
 8009142:	d015      	beq.n	8009170 <dir_read+0x132>
						dp->blk_ofs = 0xFFFFFFFF;			/* It has no LFN. */
 8009144:	687b      	ldr	r3, [r7, #4]
 8009146:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800914a:	631a      	str	r2, [r3, #48]	; 0x30
					}
					break;
 800914c:	e010      	b.n	8009170 <dir_read+0x132>
			if (c != DDEM && c != '.' && a != AM_LFN && (int)((a & ~AM_ARC) == AM_VOL) == vol) {	/* Is it a valid entry? */
				break;
			}
#endif
		}
		res = dir_next(dp, 0);		/* Next entry */
 800914e:	2100      	movs	r1, #0
 8009150:	6878      	ldr	r0, [r7, #4]
 8009152:	f7ff fc2c 	bl	80089ae <dir_next>
 8009156:	4603      	mov	r3, r0
 8009158:	75fb      	strb	r3, [r7, #23]
		if (res != FR_OK) break;
 800915a:	7dfb      	ldrb	r3, [r7, #23]
 800915c:	2b00      	cmp	r3, #0
 800915e:	d109      	bne.n	8009174 <dir_read+0x136>
	while (dp->sect) {
 8009160:	687b      	ldr	r3, [r7, #4]
 8009162:	69db      	ldr	r3, [r3, #28]
 8009164:	2b00      	cmp	r3, #0
 8009166:	f47f af79 	bne.w	800905c <dir_read+0x1e>
 800916a:	e004      	b.n	8009176 <dir_read+0x138>
		if (res != FR_OK) break;
 800916c:	bf00      	nop
 800916e:	e002      	b.n	8009176 <dir_read+0x138>
					break;
 8009170:	bf00      	nop
 8009172:	e000      	b.n	8009176 <dir_read+0x138>
		if (res != FR_OK) break;
 8009174:	bf00      	nop
	}

	if (res != FR_OK) dp->sect = 0;		/* Terminate the read operation on error or EOT */
 8009176:	7dfb      	ldrb	r3, [r7, #23]
 8009178:	2b00      	cmp	r3, #0
 800917a:	d002      	beq.n	8009182 <dir_read+0x144>
 800917c:	687b      	ldr	r3, [r7, #4]
 800917e:	2200      	movs	r2, #0
 8009180:	61da      	str	r2, [r3, #28]
	return res;
 8009182:	7dfb      	ldrb	r3, [r7, #23]
}
 8009184:	4618      	mov	r0, r3
 8009186:	3718      	adds	r7, #24
 8009188:	46bd      	mov	sp, r7
 800918a:	bd80      	pop	{r7, pc}

0800918c <dir_find>:

static
FRESULT dir_find (	/* FR_OK(0):succeeded, !=0:error */
	DIR* dp			/* Pointer to the directory object with the file name */
)
{
 800918c:	b580      	push	{r7, lr}
 800918e:	b086      	sub	sp, #24
 8009190:	af00      	add	r7, sp, #0
 8009192:	6078      	str	r0, [r7, #4]
	FRESULT res;
	FATFS *fs = dp->obj.fs;
 8009194:	687b      	ldr	r3, [r7, #4]
 8009196:	681b      	ldr	r3, [r3, #0]
 8009198:	613b      	str	r3, [r7, #16]
	BYTE c;
#if _USE_LFN != 0
	BYTE a, ord, sum;
#endif

	res = dir_sdi(dp, 0);			/* Rewind directory object */
 800919a:	2100      	movs	r1, #0
 800919c:	6878      	ldr	r0, [r7, #4]
 800919e:	f7ff fb7d 	bl	800889c <dir_sdi>
 80091a2:	4603      	mov	r3, r0
 80091a4:	75fb      	strb	r3, [r7, #23]
	if (res != FR_OK) return res;
 80091a6:	7dfb      	ldrb	r3, [r7, #23]
 80091a8:	2b00      	cmp	r3, #0
 80091aa:	d001      	beq.n	80091b0 <dir_find+0x24>
 80091ac:	7dfb      	ldrb	r3, [r7, #23]
 80091ae:	e0a9      	b.n	8009304 <dir_find+0x178>
		return res;
	}
#endif
	/* On the FAT12/16/32 volume */
#if _USE_LFN != 0
	ord = sum = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
 80091b0:	23ff      	movs	r3, #255	; 0xff
 80091b2:	753b      	strb	r3, [r7, #20]
 80091b4:	7d3b      	ldrb	r3, [r7, #20]
 80091b6:	757b      	strb	r3, [r7, #21]
 80091b8:	687b      	ldr	r3, [r7, #4]
 80091ba:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80091be:	631a      	str	r2, [r3, #48]	; 0x30
#endif
	do {
		res = move_window(fs, dp->sect);
 80091c0:	687b      	ldr	r3, [r7, #4]
 80091c2:	69db      	ldr	r3, [r3, #28]
 80091c4:	4619      	mov	r1, r3
 80091c6:	6938      	ldr	r0, [r7, #16]
 80091c8:	f7fe ff88 	bl	80080dc <move_window>
 80091cc:	4603      	mov	r3, r0
 80091ce:	75fb      	strb	r3, [r7, #23]
		if (res != FR_OK) break;
 80091d0:	7dfb      	ldrb	r3, [r7, #23]
 80091d2:	2b00      	cmp	r3, #0
 80091d4:	f040 8090 	bne.w	80092f8 <dir_find+0x16c>
		c = dp->dir[DIR_Name];
 80091d8:	687b      	ldr	r3, [r7, #4]
 80091da:	6a1b      	ldr	r3, [r3, #32]
 80091dc:	781b      	ldrb	r3, [r3, #0]
 80091de:	75bb      	strb	r3, [r7, #22]
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 80091e0:	7dbb      	ldrb	r3, [r7, #22]
 80091e2:	2b00      	cmp	r3, #0
 80091e4:	d102      	bne.n	80091ec <dir_find+0x60>
 80091e6:	2304      	movs	r3, #4
 80091e8:	75fb      	strb	r3, [r7, #23]
 80091ea:	e08a      	b.n	8009302 <dir_find+0x176>
#if _USE_LFN != 0	/* LFN configuration */
		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
 80091ec:	687b      	ldr	r3, [r7, #4]
 80091ee:	6a1b      	ldr	r3, [r3, #32]
 80091f0:	330b      	adds	r3, #11
 80091f2:	781b      	ldrb	r3, [r3, #0]
 80091f4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80091f8:	73fb      	strb	r3, [r7, #15]
 80091fa:	687b      	ldr	r3, [r7, #4]
 80091fc:	7bfa      	ldrb	r2, [r7, #15]
 80091fe:	719a      	strb	r2, [r3, #6]
		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
 8009200:	7dbb      	ldrb	r3, [r7, #22]
 8009202:	2be5      	cmp	r3, #229	; 0xe5
 8009204:	d007      	beq.n	8009216 <dir_find+0x8a>
 8009206:	7bfb      	ldrb	r3, [r7, #15]
 8009208:	f003 0308 	and.w	r3, r3, #8
 800920c:	2b00      	cmp	r3, #0
 800920e:	d009      	beq.n	8009224 <dir_find+0x98>
 8009210:	7bfb      	ldrb	r3, [r7, #15]
 8009212:	2b0f      	cmp	r3, #15
 8009214:	d006      	beq.n	8009224 <dir_find+0x98>
			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
 8009216:	23ff      	movs	r3, #255	; 0xff
 8009218:	757b      	strb	r3, [r7, #21]
 800921a:	687b      	ldr	r3, [r7, #4]
 800921c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8009220:	631a      	str	r2, [r3, #48]	; 0x30
 8009222:	e05e      	b.n	80092e2 <dir_find+0x156>
		} else {
			if (a == AM_LFN) {			/* An LFN entry is found */
 8009224:	7bfb      	ldrb	r3, [r7, #15]
 8009226:	2b0f      	cmp	r3, #15
 8009228:	d136      	bne.n	8009298 <dir_find+0x10c>
				if (!(dp->fn[NSFLAG] & NS_NOLFN)) {
 800922a:	687b      	ldr	r3, [r7, #4]
 800922c:	f893 302f 	ldrb.w	r3, [r3, #47]	; 0x2f
 8009230:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009234:	2b00      	cmp	r3, #0
 8009236:	d154      	bne.n	80092e2 <dir_find+0x156>
					if (c & LLEF) {		/* Is it start of LFN sequence? */
 8009238:	7dbb      	ldrb	r3, [r7, #22]
 800923a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800923e:	2b00      	cmp	r3, #0
 8009240:	d00d      	beq.n	800925e <dir_find+0xd2>
						sum = dp->dir[LDIR_Chksum];
 8009242:	687b      	ldr	r3, [r7, #4]
 8009244:	6a1b      	ldr	r3, [r3, #32]
 8009246:	7b5b      	ldrb	r3, [r3, #13]
 8009248:	753b      	strb	r3, [r7, #20]
						c &= (BYTE)~LLEF; ord = c;	/* LFN start order */
 800924a:	7dbb      	ldrb	r3, [r7, #22]
 800924c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8009250:	75bb      	strb	r3, [r7, #22]
 8009252:	7dbb      	ldrb	r3, [r7, #22]
 8009254:	757b      	strb	r3, [r7, #21]
						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
 8009256:	687b      	ldr	r3, [r7, #4]
 8009258:	695a      	ldr	r2, [r3, #20]
 800925a:	687b      	ldr	r3, [r7, #4]
 800925c:	631a      	str	r2, [r3, #48]	; 0x30
					}
					/* Check validity of the LFN entry and compare it with given name */
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
 800925e:	7dba      	ldrb	r2, [r7, #22]
 8009260:	7d7b      	ldrb	r3, [r7, #21]
 8009262:	429a      	cmp	r2, r3
 8009264:	d115      	bne.n	8009292 <dir_find+0x106>
 8009266:	687b      	ldr	r3, [r7, #4]
 8009268:	6a1b      	ldr	r3, [r3, #32]
 800926a:	330d      	adds	r3, #13
 800926c:	781b      	ldrb	r3, [r3, #0]
 800926e:	7d3a      	ldrb	r2, [r7, #20]
 8009270:	429a      	cmp	r2, r3
 8009272:	d10e      	bne.n	8009292 <dir_find+0x106>
 8009274:	693b      	ldr	r3, [r7, #16]
 8009276:	691a      	ldr	r2, [r3, #16]
 8009278:	687b      	ldr	r3, [r7, #4]
 800927a:	6a1b      	ldr	r3, [r3, #32]
 800927c:	4619      	mov	r1, r3
 800927e:	4610      	mov	r0, r2
 8009280:	f7ff fcf2 	bl	8008c68 <cmp_lfn>
 8009284:	4603      	mov	r3, r0
 8009286:	2b00      	cmp	r3, #0
 8009288:	d003      	beq.n	8009292 <dir_find+0x106>
 800928a:	7d7b      	ldrb	r3, [r7, #21]
 800928c:	3b01      	subs	r3, #1
 800928e:	b2db      	uxtb	r3, r3
 8009290:	e000      	b.n	8009294 <dir_find+0x108>
 8009292:	23ff      	movs	r3, #255	; 0xff
 8009294:	757b      	strb	r3, [r7, #21]
 8009296:	e024      	b.n	80092e2 <dir_find+0x156>
				}
			} else {					/* An SFN entry is found */
				if (!ord && sum == sum_sfn(dp->dir)) break;	/* LFN matched? */
 8009298:	7d7b      	ldrb	r3, [r7, #21]
 800929a:	2b00      	cmp	r3, #0
 800929c:	d109      	bne.n	80092b2 <dir_find+0x126>
 800929e:	687b      	ldr	r3, [r7, #4]
 80092a0:	6a1b      	ldr	r3, [r3, #32]
 80092a2:	4618      	mov	r0, r3
 80092a4:	f7ff feaa 	bl	8008ffc <sum_sfn>
 80092a8:	4603      	mov	r3, r0
 80092aa:	461a      	mov	r2, r3
 80092ac:	7d3b      	ldrb	r3, [r7, #20]
 80092ae:	4293      	cmp	r3, r2
 80092b0:	d024      	beq.n	80092fc <dir_find+0x170>
				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
 80092b2:	687b      	ldr	r3, [r7, #4]
 80092b4:	f893 302f 	ldrb.w	r3, [r3, #47]	; 0x2f
 80092b8:	f003 0301 	and.w	r3, r3, #1
 80092bc:	2b00      	cmp	r3, #0
 80092be:	d10a      	bne.n	80092d6 <dir_find+0x14a>
 80092c0:	687b      	ldr	r3, [r7, #4]
 80092c2:	6a18      	ldr	r0, [r3, #32]
 80092c4:	687b      	ldr	r3, [r7, #4]
 80092c6:	3324      	adds	r3, #36	; 0x24
 80092c8:	220b      	movs	r2, #11
 80092ca:	4619      	mov	r1, r3
 80092cc:	f7fe fd14 	bl	8007cf8 <mem_cmp>
 80092d0:	4603      	mov	r3, r0
 80092d2:	2b00      	cmp	r3, #0
 80092d4:	d014      	beq.n	8009300 <dir_find+0x174>
				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
 80092d6:	23ff      	movs	r3, #255	; 0xff
 80092d8:	757b      	strb	r3, [r7, #21]
 80092da:	687b      	ldr	r3, [r7, #4]
 80092dc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80092e0:	631a      	str	r2, [r3, #48]	; 0x30
		}
#else		/* Non LFN configuration */
		dp->obj.attr = dp->dir[DIR_Attr] & AM_MASK;
		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry? */
#endif
		res = dir_next(dp, 0);	/* Next entry */
 80092e2:	2100      	movs	r1, #0
 80092e4:	6878      	ldr	r0, [r7, #4]
 80092e6:	f7ff fb62 	bl	80089ae <dir_next>
 80092ea:	4603      	mov	r3, r0
 80092ec:	75fb      	strb	r3, [r7, #23]
	} while (res == FR_OK);
 80092ee:	7dfb      	ldrb	r3, [r7, #23]
 80092f0:	2b00      	cmp	r3, #0
 80092f2:	f43f af65 	beq.w	80091c0 <dir_find+0x34>
 80092f6:	e004      	b.n	8009302 <dir_find+0x176>
		if (res != FR_OK) break;
 80092f8:	bf00      	nop
 80092fa:	e002      	b.n	8009302 <dir_find+0x176>
				if (!ord && sum == sum_sfn(dp->dir)) break;	/* LFN matched? */
 80092fc:	bf00      	nop
 80092fe:	e000      	b.n	8009302 <dir_find+0x176>
				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
 8009300:	bf00      	nop

	return res;
 8009302:	7dfb      	ldrb	r3, [r7, #23]
}
 8009304:	4618      	mov	r0, r3
 8009306:	3718      	adds	r7, #24
 8009308:	46bd      	mov	sp, r7
 800930a:	bd80      	pop	{r7, pc}

0800930c <dir_register>:

static
FRESULT dir_register (	/* FR_OK:succeeded, FR_DENIED:no free entry or too many SFN collision, FR_DISK_ERR:disk error */
	DIR* dp				/* Target directory with object name to be created */
)
{
 800930c:	b580      	push	{r7, lr}
 800930e:	b08c      	sub	sp, #48	; 0x30
 8009310:	af00      	add	r7, sp, #0
 8009312:	6078      	str	r0, [r7, #4]
	FRESULT res;
	FATFS *fs = dp->obj.fs;
 8009314:	687b      	ldr	r3, [r7, #4]
 8009316:	681b      	ldr	r3, [r3, #0]
 8009318:	61fb      	str	r3, [r7, #28]
#if _USE_LFN != 0	/* LFN configuration */
	UINT n, nlen, nent;
	BYTE sn[12], sum;


	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
 800931a:	687b      	ldr	r3, [r7, #4]
 800931c:	f893 302f 	ldrb.w	r3, [r3, #47]	; 0x2f
 8009320:	f003 03a0 	and.w	r3, r3, #160	; 0xa0
 8009324:	2b00      	cmp	r3, #0
 8009326:	d001      	beq.n	800932c <dir_register+0x20>
 8009328:	2306      	movs	r3, #6
 800932a:	e0e0      	b.n	80094ee <dir_register+0x1e2>
	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
 800932c:	2300      	movs	r3, #0
 800932e:	627b      	str	r3, [r7, #36]	; 0x24
 8009330:	e002      	b.n	8009338 <dir_register+0x2c>
 8009332:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009334:	3301      	adds	r3, #1
 8009336:	627b      	str	r3, [r7, #36]	; 0x24
 8009338:	69fb      	ldr	r3, [r7, #28]
 800933a:	691a      	ldr	r2, [r3, #16]
 800933c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800933e:	005b      	lsls	r3, r3, #1
 8009340:	4413      	add	r3, r2
 8009342:	881b      	ldrh	r3, [r3, #0]
 8009344:	2b00      	cmp	r3, #0
 8009346:	d1f4      	bne.n	8009332 <dir_register+0x26>
		create_xdir(fs->dirbuf, fs->lfnbuf);	/* Create on-memory directory block to be written later */
		return FR_OK;
	}
#endif
	/* On the FAT12/16/32 volume */
	mem_cpy(sn, dp->fn, 12);
 8009348:	687b      	ldr	r3, [r7, #4]
 800934a:	f103 0124 	add.w	r1, r3, #36	; 0x24
 800934e:	f107 030c 	add.w	r3, r7, #12
 8009352:	220c      	movs	r2, #12
 8009354:	4618      	mov	r0, r3
 8009356:	f7fe fc93 	bl	8007c80 <mem_cpy>
	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
 800935a:	7dfb      	ldrb	r3, [r7, #23]
 800935c:	f003 0301 	and.w	r3, r3, #1
 8009360:	2b00      	cmp	r3, #0
 8009362:	d032      	beq.n	80093ca <dir_register+0xbe>
		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
 8009364:	687b      	ldr	r3, [r7, #4]
 8009366:	2240      	movs	r2, #64	; 0x40
 8009368:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
		for (n = 1; n < 100; n++) {
 800936c:	2301      	movs	r3, #1
 800936e:	62bb      	str	r3, [r7, #40]	; 0x28
 8009370:	e016      	b.n	80093a0 <dir_register+0x94>
			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
 8009372:	687b      	ldr	r3, [r7, #4]
 8009374:	f103 0024 	add.w	r0, r3, #36	; 0x24
 8009378:	69fb      	ldr	r3, [r7, #28]
 800937a:	691a      	ldr	r2, [r3, #16]
 800937c:	f107 010c 	add.w	r1, r7, #12
 8009380:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009382:	f7ff fdad 	bl	8008ee0 <gen_numname>
			res = dir_find(dp);				/* Check if the name collides with existing SFN */
 8009386:	6878      	ldr	r0, [r7, #4]
 8009388:	f7ff ff00 	bl	800918c <dir_find>
 800938c:	4603      	mov	r3, r0
 800938e:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
			if (res != FR_OK) break;
 8009392:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8009396:	2b00      	cmp	r3, #0
 8009398:	d106      	bne.n	80093a8 <dir_register+0x9c>
		for (n = 1; n < 100; n++) {
 800939a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800939c:	3301      	adds	r3, #1
 800939e:	62bb      	str	r3, [r7, #40]	; 0x28
 80093a0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80093a2:	2b63      	cmp	r3, #99	; 0x63
 80093a4:	d9e5      	bls.n	8009372 <dir_register+0x66>
 80093a6:	e000      	b.n	80093aa <dir_register+0x9e>
			if (res != FR_OK) break;
 80093a8:	bf00      	nop
		}
		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
 80093aa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80093ac:	2b64      	cmp	r3, #100	; 0x64
 80093ae:	d101      	bne.n	80093b4 <dir_register+0xa8>
 80093b0:	2307      	movs	r3, #7
 80093b2:	e09c      	b.n	80094ee <dir_register+0x1e2>
		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
 80093b4:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80093b8:	2b04      	cmp	r3, #4
 80093ba:	d002      	beq.n	80093c2 <dir_register+0xb6>
 80093bc:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80093c0:	e095      	b.n	80094ee <dir_register+0x1e2>
		dp->fn[NSFLAG] = sn[NSFLAG];
 80093c2:	7dfa      	ldrb	r2, [r7, #23]
 80093c4:	687b      	ldr	r3, [r7, #4]
 80093c6:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
	}

	/* Create an SFN with/without LFNs. */
	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
 80093ca:	7dfb      	ldrb	r3, [r7, #23]
 80093cc:	f003 0302 	and.w	r3, r3, #2
 80093d0:	2b00      	cmp	r3, #0
 80093d2:	d007      	beq.n	80093e4 <dir_register+0xd8>
 80093d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80093d6:	330c      	adds	r3, #12
 80093d8:	4a47      	ldr	r2, [pc, #284]	; (80094f8 <dir_register+0x1ec>)
 80093da:	fba2 2303 	umull	r2, r3, r2, r3
 80093de:	089b      	lsrs	r3, r3, #2
 80093e0:	3301      	adds	r3, #1
 80093e2:	e000      	b.n	80093e6 <dir_register+0xda>
 80093e4:	2301      	movs	r3, #1
 80093e6:	623b      	str	r3, [r7, #32]
	res = dir_alloc(dp, nent);		/* Allocate entries */
 80093e8:	6a39      	ldr	r1, [r7, #32]
 80093ea:	6878      	ldr	r0, [r7, #4]
 80093ec:	f7ff fbb5 	bl	8008b5a <dir_alloc>
 80093f0:	4603      	mov	r3, r0
 80093f2:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
 80093f6:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80093fa:	2b00      	cmp	r3, #0
 80093fc:	d148      	bne.n	8009490 <dir_register+0x184>
 80093fe:	6a3b      	ldr	r3, [r7, #32]
 8009400:	3b01      	subs	r3, #1
 8009402:	623b      	str	r3, [r7, #32]
 8009404:	6a3b      	ldr	r3, [r7, #32]
 8009406:	2b00      	cmp	r3, #0
 8009408:	d042      	beq.n	8009490 <dir_register+0x184>
		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
 800940a:	687b      	ldr	r3, [r7, #4]
 800940c:	695a      	ldr	r2, [r3, #20]
 800940e:	6a3b      	ldr	r3, [r7, #32]
 8009410:	015b      	lsls	r3, r3, #5
 8009412:	1ad3      	subs	r3, r2, r3
 8009414:	4619      	mov	r1, r3
 8009416:	6878      	ldr	r0, [r7, #4]
 8009418:	f7ff fa40 	bl	800889c <dir_sdi>
 800941c:	4603      	mov	r3, r0
 800941e:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
		if (res == FR_OK) {
 8009422:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8009426:	2b00      	cmp	r3, #0
 8009428:	d132      	bne.n	8009490 <dir_register+0x184>
			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
 800942a:	687b      	ldr	r3, [r7, #4]
 800942c:	3324      	adds	r3, #36	; 0x24
 800942e:	4618      	mov	r0, r3
 8009430:	f7ff fde4 	bl	8008ffc <sum_sfn>
 8009434:	4603      	mov	r3, r0
 8009436:	76fb      	strb	r3, [r7, #27]
			do {					/* Store LFN entries in bottom first */
				res = move_window(fs, dp->sect);
 8009438:	687b      	ldr	r3, [r7, #4]
 800943a:	69db      	ldr	r3, [r3, #28]
 800943c:	4619      	mov	r1, r3
 800943e:	69f8      	ldr	r0, [r7, #28]
 8009440:	f7fe fe4c 	bl	80080dc <move_window>
 8009444:	4603      	mov	r3, r0
 8009446:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
				if (res != FR_OK) break;
 800944a:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 800944e:	2b00      	cmp	r3, #0
 8009450:	d11d      	bne.n	800948e <dir_register+0x182>
				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
 8009452:	69fb      	ldr	r3, [r7, #28]
 8009454:	6918      	ldr	r0, [r3, #16]
 8009456:	687b      	ldr	r3, [r7, #4]
 8009458:	6a19      	ldr	r1, [r3, #32]
 800945a:	6a3b      	ldr	r3, [r7, #32]
 800945c:	b2da      	uxtb	r2, r3
 800945e:	7efb      	ldrb	r3, [r7, #27]
 8009460:	f7ff fcd6 	bl	8008e10 <put_lfn>
				fs->wflag = 1;
 8009464:	69fb      	ldr	r3, [r7, #28]
 8009466:	2201      	movs	r2, #1
 8009468:	70da      	strb	r2, [r3, #3]
				res = dir_next(dp, 0);	/* Next entry */
 800946a:	2100      	movs	r1, #0
 800946c:	6878      	ldr	r0, [r7, #4]
 800946e:	f7ff fa9e 	bl	80089ae <dir_next>
 8009472:	4603      	mov	r3, r0
 8009474:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
			} while (res == FR_OK && --nent);
 8009478:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 800947c:	2b00      	cmp	r3, #0
 800947e:	d107      	bne.n	8009490 <dir_register+0x184>
 8009480:	6a3b      	ldr	r3, [r7, #32]
 8009482:	3b01      	subs	r3, #1
 8009484:	623b      	str	r3, [r7, #32]
 8009486:	6a3b      	ldr	r3, [r7, #32]
 8009488:	2b00      	cmp	r3, #0
 800948a:	d1d5      	bne.n	8009438 <dir_register+0x12c>
 800948c:	e000      	b.n	8009490 <dir_register+0x184>
				if (res != FR_OK) break;
 800948e:	bf00      	nop
	res = dir_alloc(dp, 1);		/* Allocate an entry for SFN */

#endif

	/* Set SFN entry */
	if (res == FR_OK) {
 8009490:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8009494:	2b00      	cmp	r3, #0
 8009496:	d128      	bne.n	80094ea <dir_register+0x1de>
		res = move_window(fs, dp->sect);
 8009498:	687b      	ldr	r3, [r7, #4]
 800949a:	69db      	ldr	r3, [r3, #28]
 800949c:	4619      	mov	r1, r3
 800949e:	69f8      	ldr	r0, [r7, #28]
 80094a0:	f7fe fe1c 	bl	80080dc <move_window>
 80094a4:	4603      	mov	r3, r0
 80094a6:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
		if (res == FR_OK) {
 80094aa:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80094ae:	2b00      	cmp	r3, #0
 80094b0:	d11b      	bne.n	80094ea <dir_register+0x1de>
			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
 80094b2:	687b      	ldr	r3, [r7, #4]
 80094b4:	6a1b      	ldr	r3, [r3, #32]
 80094b6:	2220      	movs	r2, #32
 80094b8:	2100      	movs	r1, #0
 80094ba:	4618      	mov	r0, r3
 80094bc:	f7fe fc01 	bl	8007cc2 <mem_set>
			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
 80094c0:	687b      	ldr	r3, [r7, #4]
 80094c2:	6a18      	ldr	r0, [r3, #32]
 80094c4:	687b      	ldr	r3, [r7, #4]
 80094c6:	3324      	adds	r3, #36	; 0x24
 80094c8:	220b      	movs	r2, #11
 80094ca:	4619      	mov	r1, r3
 80094cc:	f7fe fbd8 	bl	8007c80 <mem_cpy>
#if _USE_LFN != 0
			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
 80094d0:	687b      	ldr	r3, [r7, #4]
 80094d2:	f893 202f 	ldrb.w	r2, [r3, #47]	; 0x2f
 80094d6:	687b      	ldr	r3, [r7, #4]
 80094d8:	6a1b      	ldr	r3, [r3, #32]
 80094da:	330c      	adds	r3, #12
 80094dc:	f002 0218 	and.w	r2, r2, #24
 80094e0:	b2d2      	uxtb	r2, r2
 80094e2:	701a      	strb	r2, [r3, #0]
#endif
			fs->wflag = 1;
 80094e4:	69fb      	ldr	r3, [r7, #28]
 80094e6:	2201      	movs	r2, #1
 80094e8:	70da      	strb	r2, [r3, #3]
		}
	}

	return res;
 80094ea:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
}
 80094ee:	4618      	mov	r0, r3
 80094f0:	3730      	adds	r7, #48	; 0x30
 80094f2:	46bd      	mov	sp, r7
 80094f4:	bd80      	pop	{r7, pc}
 80094f6:	bf00      	nop
 80094f8:	4ec4ec4f 	.word	0x4ec4ec4f

080094fc <get_fileinfo>:
static
void get_fileinfo (		/* No return code */
	DIR* dp,			/* Pointer to the directory object */
	FILINFO* fno	 	/* Pointer to the file information to be filled */
)
{
 80094fc:	b580      	push	{r7, lr}
 80094fe:	b088      	sub	sp, #32
 8009500:	af00      	add	r7, sp, #0
 8009502:	6078      	str	r0, [r7, #4]
 8009504:	6039      	str	r1, [r7, #0]
	UINT i, j;
	TCHAR c;
	DWORD tm;
#if _USE_LFN != 0
	WCHAR w, lfv;
	FATFS *fs = dp->obj.fs;
 8009506:	687b      	ldr	r3, [r7, #4]
 8009508:	681b      	ldr	r3, [r3, #0]
 800950a:	613b      	str	r3, [r7, #16]
#endif


	fno->fname[0] = 0;		/* Invaidate file info */
 800950c:	683b      	ldr	r3, [r7, #0]
 800950e:	2200      	movs	r2, #0
 8009510:	759a      	strb	r2, [r3, #22]
	if (!dp->sect) return;	/* Exit if read pointer has reached end of directory */
 8009512:	687b      	ldr	r3, [r7, #4]
 8009514:	69db      	ldr	r3, [r3, #28]
 8009516:	2b00      	cmp	r3, #0
 8009518:	f000 80c9 	beq.w	80096ae <get_fileinfo+0x1b2>
		get_xdir_info(fs->dirbuf, fno);
		return;
	} else
#endif
	{	/* On the FAT12/16/32 volume */
		if (dp->blk_ofs != 0xFFFFFFFF) {	/* Get LFN if available */
 800951c:	687b      	ldr	r3, [r7, #4]
 800951e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009520:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8009524:	d032      	beq.n	800958c <get_fileinfo+0x90>
			i = j = 0;
 8009526:	2300      	movs	r3, #0
 8009528:	61bb      	str	r3, [r7, #24]
 800952a:	69bb      	ldr	r3, [r7, #24]
 800952c:	61fb      	str	r3, [r7, #28]
			while ((w = fs->lfnbuf[j++]) != 0) {	/* Get an LFN character */
 800952e:	e01b      	b.n	8009568 <get_fileinfo+0x6c>
#if !_LFN_UNICODE
				w = ff_convert(w, 0);		/* Unicode -> OEM */
 8009530:	89fb      	ldrh	r3, [r7, #14]
 8009532:	2100      	movs	r1, #0
 8009534:	4618      	mov	r0, r3
 8009536:	f001 fc75 	bl	800ae24 <ff_convert>
 800953a:	4603      	mov	r3, r0
 800953c:	81fb      	strh	r3, [r7, #14]
				if (w == 0) { i = 0; break; }	/* No LFN if it could not be converted */
 800953e:	89fb      	ldrh	r3, [r7, #14]
 8009540:	2b00      	cmp	r3, #0
 8009542:	d102      	bne.n	800954a <get_fileinfo+0x4e>
 8009544:	2300      	movs	r3, #0
 8009546:	61fb      	str	r3, [r7, #28]
 8009548:	e01a      	b.n	8009580 <get_fileinfo+0x84>
				if (_DF1S && w >= 0x100) {	/* Put 1st byte if it is a DBC (always false at SBCS cfg) */
					fno->fname[i++] = (char)(w >> 8);
				}
#endif
				if (i >= _MAX_LFN) { i = 0; break; }	/* No LFN if buffer overflow */
 800954a:	69fb      	ldr	r3, [r7, #28]
 800954c:	2bfe      	cmp	r3, #254	; 0xfe
 800954e:	d902      	bls.n	8009556 <get_fileinfo+0x5a>
 8009550:	2300      	movs	r3, #0
 8009552:	61fb      	str	r3, [r7, #28]
 8009554:	e014      	b.n	8009580 <get_fileinfo+0x84>
				fno->fname[i++] = (TCHAR)w;
 8009556:	69fb      	ldr	r3, [r7, #28]
 8009558:	1c5a      	adds	r2, r3, #1
 800955a:	61fa      	str	r2, [r7, #28]
 800955c:	89fa      	ldrh	r2, [r7, #14]
 800955e:	b2d1      	uxtb	r1, r2
 8009560:	683a      	ldr	r2, [r7, #0]
 8009562:	4413      	add	r3, r2
 8009564:	460a      	mov	r2, r1
 8009566:	759a      	strb	r2, [r3, #22]
			while ((w = fs->lfnbuf[j++]) != 0) {	/* Get an LFN character */
 8009568:	693b      	ldr	r3, [r7, #16]
 800956a:	691a      	ldr	r2, [r3, #16]
 800956c:	69bb      	ldr	r3, [r7, #24]
 800956e:	1c59      	adds	r1, r3, #1
 8009570:	61b9      	str	r1, [r7, #24]
 8009572:	005b      	lsls	r3, r3, #1
 8009574:	4413      	add	r3, r2
 8009576:	881b      	ldrh	r3, [r3, #0]
 8009578:	81fb      	strh	r3, [r7, #14]
 800957a:	89fb      	ldrh	r3, [r7, #14]
 800957c:	2b00      	cmp	r3, #0
 800957e:	d1d7      	bne.n	8009530 <get_fileinfo+0x34>
			}
			fno->fname[i] = 0;	/* Terminate the LFN */
 8009580:	683a      	ldr	r2, [r7, #0]
 8009582:	69fb      	ldr	r3, [r7, #28]
 8009584:	4413      	add	r3, r2
 8009586:	3316      	adds	r3, #22
 8009588:	2200      	movs	r2, #0
 800958a:	701a      	strb	r2, [r3, #0]
		}
	}

	i = j = 0;
 800958c:	2300      	movs	r3, #0
 800958e:	61bb      	str	r3, [r7, #24]
 8009590:	69bb      	ldr	r3, [r7, #24]
 8009592:	61fb      	str	r3, [r7, #28]
	lfv = fno->fname[i];	/* LFN is exist if non-zero */
 8009594:	683a      	ldr	r2, [r7, #0]
 8009596:	69fb      	ldr	r3, [r7, #28]
 8009598:	4413      	add	r3, r2
 800959a:	3316      	adds	r3, #22
 800959c:	781b      	ldrb	r3, [r3, #0]
 800959e:	81bb      	strh	r3, [r7, #12]
	while (i < 11) {		/* Copy name body and extension */
 80095a0:	e04c      	b.n	800963c <get_fileinfo+0x140>
		c = (TCHAR)dp->dir[i++];
 80095a2:	687b      	ldr	r3, [r7, #4]
 80095a4:	6a1a      	ldr	r2, [r3, #32]
 80095a6:	69fb      	ldr	r3, [r7, #28]
 80095a8:	1c59      	adds	r1, r3, #1
 80095aa:	61f9      	str	r1, [r7, #28]
 80095ac:	4413      	add	r3, r2
 80095ae:	781b      	ldrb	r3, [r3, #0]
 80095b0:	75fb      	strb	r3, [r7, #23]
		if (c == ' ') continue;				/* Skip padding spaces */
 80095b2:	7dfb      	ldrb	r3, [r7, #23]
 80095b4:	2b20      	cmp	r3, #32
 80095b6:	d100      	bne.n	80095ba <get_fileinfo+0xbe>
 80095b8:	e040      	b.n	800963c <get_fileinfo+0x140>
		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
 80095ba:	7dfb      	ldrb	r3, [r7, #23]
 80095bc:	2b05      	cmp	r3, #5
 80095be:	d101      	bne.n	80095c4 <get_fileinfo+0xc8>
 80095c0:	23e5      	movs	r3, #229	; 0xe5
 80095c2:	75fb      	strb	r3, [r7, #23]
		if (i == 9) {						/* Insert a . if extension is exist */
 80095c4:	69fb      	ldr	r3, [r7, #28]
 80095c6:	2b09      	cmp	r3, #9
 80095c8:	d10f      	bne.n	80095ea <get_fileinfo+0xee>
			if (!lfv) fno->fname[j] = '.';
 80095ca:	89bb      	ldrh	r3, [r7, #12]
 80095cc:	2b00      	cmp	r3, #0
 80095ce:	d105      	bne.n	80095dc <get_fileinfo+0xe0>
 80095d0:	683a      	ldr	r2, [r7, #0]
 80095d2:	69bb      	ldr	r3, [r7, #24]
 80095d4:	4413      	add	r3, r2
 80095d6:	3316      	adds	r3, #22
 80095d8:	222e      	movs	r2, #46	; 0x2e
 80095da:	701a      	strb	r2, [r3, #0]
			fno->altname[j++] = '.';
 80095dc:	69bb      	ldr	r3, [r7, #24]
 80095de:	1c5a      	adds	r2, r3, #1
 80095e0:	61ba      	str	r2, [r7, #24]
 80095e2:	683a      	ldr	r2, [r7, #0]
 80095e4:	4413      	add	r3, r2
 80095e6:	222e      	movs	r2, #46	; 0x2e
 80095e8:	725a      	strb	r2, [r3, #9]
			c = c << 8 | dp->dir[i++];
		}
		c = ff_convert(c, 1);	/* OEM -> Unicode */
		if (!c) c = '?';
#endif
		fno->altname[j] = c;
 80095ea:	683a      	ldr	r2, [r7, #0]
 80095ec:	69bb      	ldr	r3, [r7, #24]
 80095ee:	4413      	add	r3, r2
 80095f0:	3309      	adds	r3, #9
 80095f2:	7dfa      	ldrb	r2, [r7, #23]
 80095f4:	701a      	strb	r2, [r3, #0]
		if (!lfv) {
 80095f6:	89bb      	ldrh	r3, [r7, #12]
 80095f8:	2b00      	cmp	r3, #0
 80095fa:	d11c      	bne.n	8009636 <get_fileinfo+0x13a>
			if (IsUpper(c) && (dp->dir[DIR_NTres] & ((i >= 9) ? NS_EXT : NS_BODY))) {
 80095fc:	7dfb      	ldrb	r3, [r7, #23]
 80095fe:	2b40      	cmp	r3, #64	; 0x40
 8009600:	d913      	bls.n	800962a <get_fileinfo+0x12e>
 8009602:	7dfb      	ldrb	r3, [r7, #23]
 8009604:	2b5a      	cmp	r3, #90	; 0x5a
 8009606:	d810      	bhi.n	800962a <get_fileinfo+0x12e>
 8009608:	687b      	ldr	r3, [r7, #4]
 800960a:	6a1b      	ldr	r3, [r3, #32]
 800960c:	330c      	adds	r3, #12
 800960e:	781b      	ldrb	r3, [r3, #0]
 8009610:	461a      	mov	r2, r3
 8009612:	69fb      	ldr	r3, [r7, #28]
 8009614:	2b08      	cmp	r3, #8
 8009616:	d901      	bls.n	800961c <get_fileinfo+0x120>
 8009618:	2310      	movs	r3, #16
 800961a:	e000      	b.n	800961e <get_fileinfo+0x122>
 800961c:	2308      	movs	r3, #8
 800961e:	4013      	ands	r3, r2
 8009620:	2b00      	cmp	r3, #0
 8009622:	d002      	beq.n	800962a <get_fileinfo+0x12e>
				c += 0x20;			/* To lower */
 8009624:	7dfb      	ldrb	r3, [r7, #23]
 8009626:	3320      	adds	r3, #32
 8009628:	75fb      	strb	r3, [r7, #23]
			}
			fno->fname[j] = c;
 800962a:	683a      	ldr	r2, [r7, #0]
 800962c:	69bb      	ldr	r3, [r7, #24]
 800962e:	4413      	add	r3, r2
 8009630:	3316      	adds	r3, #22
 8009632:	7dfa      	ldrb	r2, [r7, #23]
 8009634:	701a      	strb	r2, [r3, #0]
		}
		j++;
 8009636:	69bb      	ldr	r3, [r7, #24]
 8009638:	3301      	adds	r3, #1
 800963a:	61bb      	str	r3, [r7, #24]
	while (i < 11) {		/* Copy name body and extension */
 800963c:	69fb      	ldr	r3, [r7, #28]
 800963e:	2b0a      	cmp	r3, #10
 8009640:	d9af      	bls.n	80095a2 <get_fileinfo+0xa6>
	}
	if (!lfv) {
 8009642:	89bb      	ldrh	r3, [r7, #12]
 8009644:	2b00      	cmp	r3, #0
 8009646:	d10d      	bne.n	8009664 <get_fileinfo+0x168>
		fno->fname[j] = 0;
 8009648:	683a      	ldr	r2, [r7, #0]
 800964a:	69bb      	ldr	r3, [r7, #24]
 800964c:	4413      	add	r3, r2
 800964e:	3316      	adds	r3, #22
 8009650:	2200      	movs	r2, #0
 8009652:	701a      	strb	r2, [r3, #0]
		if (!dp->dir[DIR_NTres]) j = 0;	/* Altname is no longer needed if neither LFN nor case info is exist. */
 8009654:	687b      	ldr	r3, [r7, #4]
 8009656:	6a1b      	ldr	r3, [r3, #32]
 8009658:	330c      	adds	r3, #12
 800965a:	781b      	ldrb	r3, [r3, #0]
 800965c:	2b00      	cmp	r3, #0
 800965e:	d101      	bne.n	8009664 <get_fileinfo+0x168>
 8009660:	2300      	movs	r3, #0
 8009662:	61bb      	str	r3, [r7, #24]
	}
	fno->altname[j] = 0;	/* Terminate the SFN */
 8009664:	683a      	ldr	r2, [r7, #0]
 8009666:	69bb      	ldr	r3, [r7, #24]
 8009668:	4413      	add	r3, r2
 800966a:	3309      	adds	r3, #9
 800966c:	2200      	movs	r2, #0
 800966e:	701a      	strb	r2, [r3, #0]
		fno->fname[j++] = c;
	}
	fno->fname[j] = 0;
#endif

	fno->fattrib = dp->dir[DIR_Attr];				/* Attribute */
 8009670:	687b      	ldr	r3, [r7, #4]
 8009672:	6a1b      	ldr	r3, [r3, #32]
 8009674:	7ada      	ldrb	r2, [r3, #11]
 8009676:	683b      	ldr	r3, [r7, #0]
 8009678:	721a      	strb	r2, [r3, #8]
	fno->fsize = ld_dword(dp->dir + DIR_FileSize);	/* Size */
 800967a:	687b      	ldr	r3, [r7, #4]
 800967c:	6a1b      	ldr	r3, [r3, #32]
 800967e:	331c      	adds	r3, #28
 8009680:	4618      	mov	r0, r3
 8009682:	f7fe fa93 	bl	8007bac <ld_dword>
 8009686:	4602      	mov	r2, r0
 8009688:	683b      	ldr	r3, [r7, #0]
 800968a:	601a      	str	r2, [r3, #0]
	tm = ld_dword(dp->dir + DIR_ModTime);			/* Timestamp */
 800968c:	687b      	ldr	r3, [r7, #4]
 800968e:	6a1b      	ldr	r3, [r3, #32]
 8009690:	3316      	adds	r3, #22
 8009692:	4618      	mov	r0, r3
 8009694:	f7fe fa8a 	bl	8007bac <ld_dword>
 8009698:	60b8      	str	r0, [r7, #8]
	fno->ftime = (WORD)tm; fno->fdate = (WORD)(tm >> 16);
 800969a:	68bb      	ldr	r3, [r7, #8]
 800969c:	b29a      	uxth	r2, r3
 800969e:	683b      	ldr	r3, [r7, #0]
 80096a0:	80da      	strh	r2, [r3, #6]
 80096a2:	68bb      	ldr	r3, [r7, #8]
 80096a4:	0c1b      	lsrs	r3, r3, #16
 80096a6:	b29a      	uxth	r2, r3
 80096a8:	683b      	ldr	r3, [r7, #0]
 80096aa:	809a      	strh	r2, [r3, #4]
 80096ac:	e000      	b.n	80096b0 <get_fileinfo+0x1b4>
	if (!dp->sect) return;	/* Exit if read pointer has reached end of directory */
 80096ae:	bf00      	nop
}
 80096b0:	3720      	adds	r7, #32
 80096b2:	46bd      	mov	sp, r7
 80096b4:	bd80      	pop	{r7, pc}
	...

080096b8 <create_name>:
static
FRESULT create_name (	/* FR_OK: successful, FR_INVALID_NAME: could not create */
	DIR* dp,			/* Pointer to the directory object */
	const TCHAR** path	/* Pointer to pointer to the segment in the path string */
)
{
 80096b8:	b580      	push	{r7, lr}
 80096ba:	b08a      	sub	sp, #40	; 0x28
 80096bc:	af00      	add	r7, sp, #0
 80096be:	6078      	str	r0, [r7, #4]
 80096c0:	6039      	str	r1, [r7, #0]
	WCHAR w, *lfn;
	UINT i, ni, si, di;
	const TCHAR *p;

	/* Create LFN in Unicode */
	p = *path; lfn = dp->obj.fs->lfnbuf; si = di = 0;
 80096c2:	683b      	ldr	r3, [r7, #0]
 80096c4:	681b      	ldr	r3, [r3, #0]
 80096c6:	613b      	str	r3, [r7, #16]
 80096c8:	687b      	ldr	r3, [r7, #4]
 80096ca:	681b      	ldr	r3, [r3, #0]
 80096cc:	691b      	ldr	r3, [r3, #16]
 80096ce:	60fb      	str	r3, [r7, #12]
 80096d0:	2300      	movs	r3, #0
 80096d2:	617b      	str	r3, [r7, #20]
 80096d4:	697b      	ldr	r3, [r7, #20]
 80096d6:	61bb      	str	r3, [r7, #24]
	for (;;) {
		w = p[si++];					/* Get a character */
 80096d8:	69bb      	ldr	r3, [r7, #24]
 80096da:	1c5a      	adds	r2, r3, #1
 80096dc:	61ba      	str	r2, [r7, #24]
 80096de:	693a      	ldr	r2, [r7, #16]
 80096e0:	4413      	add	r3, r2
 80096e2:	781b      	ldrb	r3, [r3, #0]
 80096e4:	84bb      	strh	r3, [r7, #36]	; 0x24
		if (w < ' ') break;				/* Break if end of the path name */
 80096e6:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80096e8:	2b1f      	cmp	r3, #31
 80096ea:	d940      	bls.n	800976e <create_name+0xb6>
		if (w == '/' || w == '\\') {	/* Break if a separator is found */
 80096ec:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80096ee:	2b2f      	cmp	r3, #47	; 0x2f
 80096f0:	d006      	beq.n	8009700 <create_name+0x48>
 80096f2:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80096f4:	2b5c      	cmp	r3, #92	; 0x5c
 80096f6:	d110      	bne.n	800971a <create_name+0x62>
			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 80096f8:	e002      	b.n	8009700 <create_name+0x48>
 80096fa:	69bb      	ldr	r3, [r7, #24]
 80096fc:	3301      	adds	r3, #1
 80096fe:	61bb      	str	r3, [r7, #24]
 8009700:	693a      	ldr	r2, [r7, #16]
 8009702:	69bb      	ldr	r3, [r7, #24]
 8009704:	4413      	add	r3, r2
 8009706:	781b      	ldrb	r3, [r3, #0]
 8009708:	2b2f      	cmp	r3, #47	; 0x2f
 800970a:	d0f6      	beq.n	80096fa <create_name+0x42>
 800970c:	693a      	ldr	r2, [r7, #16]
 800970e:	69bb      	ldr	r3, [r7, #24]
 8009710:	4413      	add	r3, r2
 8009712:	781b      	ldrb	r3, [r3, #0]
 8009714:	2b5c      	cmp	r3, #92	; 0x5c
 8009716:	d0f0      	beq.n	80096fa <create_name+0x42>
			break;
 8009718:	e02a      	b.n	8009770 <create_name+0xb8>
		}
		if (di >= _MAX_LFN) return FR_INVALID_NAME;	/* Reject too long name */
 800971a:	697b      	ldr	r3, [r7, #20]
 800971c:	2bfe      	cmp	r3, #254	; 0xfe
 800971e:	d901      	bls.n	8009724 <create_name+0x6c>
 8009720:	2306      	movs	r3, #6
 8009722:	e17d      	b.n	8009a20 <create_name+0x368>
#if !_LFN_UNICODE
		w &= 0xFF;
 8009724:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8009726:	b2db      	uxtb	r3, r3
 8009728:	84bb      	strh	r3, [r7, #36]	; 0x24
		if (IsDBCS1(w)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
			b = (BYTE)p[si++];			/* Get 2nd byte */
			w = (w << 8) + b;			/* Create a DBC */
			if (!IsDBCS2(b)) return FR_INVALID_NAME;	/* Reject invalid sequence */
		}
		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
 800972a:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 800972c:	2101      	movs	r1, #1
 800972e:	4618      	mov	r0, r3
 8009730:	f001 fb78 	bl	800ae24 <ff_convert>
 8009734:	4603      	mov	r3, r0
 8009736:	84bb      	strh	r3, [r7, #36]	; 0x24
		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
 8009738:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 800973a:	2b00      	cmp	r3, #0
 800973c:	d101      	bne.n	8009742 <create_name+0x8a>
 800973e:	2306      	movs	r3, #6
 8009740:	e16e      	b.n	8009a20 <create_name+0x368>
#endif
		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) return FR_INVALID_NAME;	/* Reject illegal characters for LFN */
 8009742:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8009744:	2b7f      	cmp	r3, #127	; 0x7f
 8009746:	d809      	bhi.n	800975c <create_name+0xa4>
 8009748:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 800974a:	4619      	mov	r1, r3
 800974c:	488d      	ldr	r0, [pc, #564]	; (8009984 <create_name+0x2cc>)
 800974e:	f7fe fafa 	bl	8007d46 <chk_chr>
 8009752:	4603      	mov	r3, r0
 8009754:	2b00      	cmp	r3, #0
 8009756:	d001      	beq.n	800975c <create_name+0xa4>
 8009758:	2306      	movs	r3, #6
 800975a:	e161      	b.n	8009a20 <create_name+0x368>
		lfn[di++] = w;					/* Store the Unicode character */
 800975c:	697b      	ldr	r3, [r7, #20]
 800975e:	1c5a      	adds	r2, r3, #1
 8009760:	617a      	str	r2, [r7, #20]
 8009762:	005b      	lsls	r3, r3, #1
 8009764:	68fa      	ldr	r2, [r7, #12]
 8009766:	4413      	add	r3, r2
 8009768:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 800976a:	801a      	strh	r2, [r3, #0]
		w = p[si++];					/* Get a character */
 800976c:	e7b4      	b.n	80096d8 <create_name+0x20>
		if (w < ' ') break;				/* Break if end of the path name */
 800976e:	bf00      	nop
	}
	*path = &p[si];						/* Return pointer to the next segment */
 8009770:	693a      	ldr	r2, [r7, #16]
 8009772:	69bb      	ldr	r3, [r7, #24]
 8009774:	441a      	add	r2, r3
 8009776:	683b      	ldr	r3, [r7, #0]
 8009778:	601a      	str	r2, [r3, #0]
	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 800977a:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 800977c:	2b1f      	cmp	r3, #31
 800977e:	d801      	bhi.n	8009784 <create_name+0xcc>
 8009780:	2304      	movs	r3, #4
 8009782:	e000      	b.n	8009786 <create_name+0xce>
 8009784:	2300      	movs	r3, #0
 8009786:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
			dp->fn[i] = (i < di) ? '.' : ' ';
		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
		return FR_OK;
	}
#endif
	while (di) {						/* Snip off trailing spaces and dots if exist */
 800978a:	e011      	b.n	80097b0 <create_name+0xf8>
		w = lfn[di - 1];
 800978c:	697b      	ldr	r3, [r7, #20]
 800978e:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8009792:	3b01      	subs	r3, #1
 8009794:	005b      	lsls	r3, r3, #1
 8009796:	68fa      	ldr	r2, [r7, #12]
 8009798:	4413      	add	r3, r2
 800979a:	881b      	ldrh	r3, [r3, #0]
 800979c:	84bb      	strh	r3, [r7, #36]	; 0x24
		if (w != ' ' && w != '.') break;
 800979e:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80097a0:	2b20      	cmp	r3, #32
 80097a2:	d002      	beq.n	80097aa <create_name+0xf2>
 80097a4:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80097a6:	2b2e      	cmp	r3, #46	; 0x2e
 80097a8:	d106      	bne.n	80097b8 <create_name+0x100>
		di--;
 80097aa:	697b      	ldr	r3, [r7, #20]
 80097ac:	3b01      	subs	r3, #1
 80097ae:	617b      	str	r3, [r7, #20]
	while (di) {						/* Snip off trailing spaces and dots if exist */
 80097b0:	697b      	ldr	r3, [r7, #20]
 80097b2:	2b00      	cmp	r3, #0
 80097b4:	d1ea      	bne.n	800978c <create_name+0xd4>
 80097b6:	e000      	b.n	80097ba <create_name+0x102>
		if (w != ' ' && w != '.') break;
 80097b8:	bf00      	nop
	}
	lfn[di] = 0;						/* LFN is created */
 80097ba:	697b      	ldr	r3, [r7, #20]
 80097bc:	005b      	lsls	r3, r3, #1
 80097be:	68fa      	ldr	r2, [r7, #12]
 80097c0:	4413      	add	r3, r2
 80097c2:	2200      	movs	r2, #0
 80097c4:	801a      	strh	r2, [r3, #0]
	if (di == 0) return FR_INVALID_NAME;	/* Reject nul name */
 80097c6:	697b      	ldr	r3, [r7, #20]
 80097c8:	2b00      	cmp	r3, #0
 80097ca:	d101      	bne.n	80097d0 <create_name+0x118>
 80097cc:	2306      	movs	r3, #6
 80097ce:	e127      	b.n	8009a20 <create_name+0x368>

	/* Create SFN in directory form */
	mem_set(dp->fn, ' ', 11);
 80097d0:	687b      	ldr	r3, [r7, #4]
 80097d2:	3324      	adds	r3, #36	; 0x24
 80097d4:	220b      	movs	r2, #11
 80097d6:	2120      	movs	r1, #32
 80097d8:	4618      	mov	r0, r3
 80097da:	f7fe fa72 	bl	8007cc2 <mem_set>
	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
 80097de:	2300      	movs	r3, #0
 80097e0:	61bb      	str	r3, [r7, #24]
 80097e2:	e002      	b.n	80097ea <create_name+0x132>
 80097e4:	69bb      	ldr	r3, [r7, #24]
 80097e6:	3301      	adds	r3, #1
 80097e8:	61bb      	str	r3, [r7, #24]
 80097ea:	69bb      	ldr	r3, [r7, #24]
 80097ec:	005b      	lsls	r3, r3, #1
 80097ee:	68fa      	ldr	r2, [r7, #12]
 80097f0:	4413      	add	r3, r2
 80097f2:	881b      	ldrh	r3, [r3, #0]
 80097f4:	2b20      	cmp	r3, #32
 80097f6:	d0f5      	beq.n	80097e4 <create_name+0x12c>
 80097f8:	69bb      	ldr	r3, [r7, #24]
 80097fa:	005b      	lsls	r3, r3, #1
 80097fc:	68fa      	ldr	r2, [r7, #12]
 80097fe:	4413      	add	r3, r2
 8009800:	881b      	ldrh	r3, [r3, #0]
 8009802:	2b2e      	cmp	r3, #46	; 0x2e
 8009804:	d0ee      	beq.n	80097e4 <create_name+0x12c>
	if (si) cf |= NS_LOSS | NS_LFN;
 8009806:	69bb      	ldr	r3, [r7, #24]
 8009808:	2b00      	cmp	r3, #0
 800980a:	d009      	beq.n	8009820 <create_name+0x168>
 800980c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8009810:	f043 0303 	orr.w	r3, r3, #3
 8009814:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
 8009818:	e002      	b.n	8009820 <create_name+0x168>
 800981a:	697b      	ldr	r3, [r7, #20]
 800981c:	3b01      	subs	r3, #1
 800981e:	617b      	str	r3, [r7, #20]
 8009820:	697b      	ldr	r3, [r7, #20]
 8009822:	2b00      	cmp	r3, #0
 8009824:	d009      	beq.n	800983a <create_name+0x182>
 8009826:	697b      	ldr	r3, [r7, #20]
 8009828:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 800982c:	3b01      	subs	r3, #1
 800982e:	005b      	lsls	r3, r3, #1
 8009830:	68fa      	ldr	r2, [r7, #12]
 8009832:	4413      	add	r3, r2
 8009834:	881b      	ldrh	r3, [r3, #0]
 8009836:	2b2e      	cmp	r3, #46	; 0x2e
 8009838:	d1ef      	bne.n	800981a <create_name+0x162>

	i = b = 0; ni = 8;
 800983a:	2300      	movs	r3, #0
 800983c:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 8009840:	2300      	movs	r3, #0
 8009842:	623b      	str	r3, [r7, #32]
 8009844:	2308      	movs	r3, #8
 8009846:	61fb      	str	r3, [r7, #28]
	for (;;) {
		w = lfn[si++];					/* Get an LFN character */
 8009848:	69bb      	ldr	r3, [r7, #24]
 800984a:	1c5a      	adds	r2, r3, #1
 800984c:	61ba      	str	r2, [r7, #24]
 800984e:	005b      	lsls	r3, r3, #1
 8009850:	68fa      	ldr	r2, [r7, #12]
 8009852:	4413      	add	r3, r2
 8009854:	881b      	ldrh	r3, [r3, #0]
 8009856:	84bb      	strh	r3, [r7, #36]	; 0x24
		if (!w) break;					/* Break on end of the LFN */
 8009858:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 800985a:	2b00      	cmp	r3, #0
 800985c:	f000 8090 	beq.w	8009980 <create_name+0x2c8>
		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
 8009860:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8009862:	2b20      	cmp	r3, #32
 8009864:	d006      	beq.n	8009874 <create_name+0x1bc>
 8009866:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8009868:	2b2e      	cmp	r3, #46	; 0x2e
 800986a:	d10a      	bne.n	8009882 <create_name+0x1ca>
 800986c:	69ba      	ldr	r2, [r7, #24]
 800986e:	697b      	ldr	r3, [r7, #20]
 8009870:	429a      	cmp	r2, r3
 8009872:	d006      	beq.n	8009882 <create_name+0x1ca>
			cf |= NS_LOSS | NS_LFN; continue;
 8009874:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8009878:	f043 0303 	orr.w	r3, r3, #3
 800987c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8009880:	e07d      	b.n	800997e <create_name+0x2c6>
		}

		if (i >= ni || si == di) {		/* Extension or end of SFN */
 8009882:	6a3a      	ldr	r2, [r7, #32]
 8009884:	69fb      	ldr	r3, [r7, #28]
 8009886:	429a      	cmp	r2, r3
 8009888:	d203      	bcs.n	8009892 <create_name+0x1da>
 800988a:	69ba      	ldr	r2, [r7, #24]
 800988c:	697b      	ldr	r3, [r7, #20]
 800988e:	429a      	cmp	r2, r3
 8009890:	d123      	bne.n	80098da <create_name+0x222>
			if (ni == 11) {				/* Long extension */
 8009892:	69fb      	ldr	r3, [r7, #28]
 8009894:	2b0b      	cmp	r3, #11
 8009896:	d106      	bne.n	80098a6 <create_name+0x1ee>
				cf |= NS_LOSS | NS_LFN; break;
 8009898:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800989c:	f043 0303 	orr.w	r3, r3, #3
 80098a0:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80098a4:	e075      	b.n	8009992 <create_name+0x2da>
			}
			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
 80098a6:	69ba      	ldr	r2, [r7, #24]
 80098a8:	697b      	ldr	r3, [r7, #20]
 80098aa:	429a      	cmp	r2, r3
 80098ac:	d005      	beq.n	80098ba <create_name+0x202>
 80098ae:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80098b2:	f043 0303 	orr.w	r3, r3, #3
 80098b6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
			if (si > di) break;			/* No extension */
 80098ba:	69ba      	ldr	r2, [r7, #24]
 80098bc:	697b      	ldr	r3, [r7, #20]
 80098be:	429a      	cmp	r2, r3
 80098c0:	d866      	bhi.n	8009990 <create_name+0x2d8>
			si = di; i = 8; ni = 11;	/* Enter extension section */
 80098c2:	697b      	ldr	r3, [r7, #20]
 80098c4:	61bb      	str	r3, [r7, #24]
 80098c6:	2308      	movs	r3, #8
 80098c8:	623b      	str	r3, [r7, #32]
 80098ca:	230b      	movs	r3, #11
 80098cc:	61fb      	str	r3, [r7, #28]
			b <<= 2; continue;
 80098ce:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 80098d2:	009b      	lsls	r3, r3, #2
 80098d4:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 80098d8:	e051      	b.n	800997e <create_name+0x2c6>
		}

		if (w >= 0x80) {				/* Non ASCII character */
 80098da:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80098dc:	2b7f      	cmp	r3, #127	; 0x7f
 80098de:	d914      	bls.n	800990a <create_name+0x252>
#ifdef _EXCVT
			w = ff_convert(w, 0);		/* Unicode -> OEM code */
 80098e0:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80098e2:	2100      	movs	r1, #0
 80098e4:	4618      	mov	r0, r3
 80098e6:	f001 fa9d 	bl	800ae24 <ff_convert>
 80098ea:	4603      	mov	r3, r0
 80098ec:	84bb      	strh	r3, [r7, #36]	; 0x24
			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
 80098ee:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80098f0:	2b00      	cmp	r3, #0
 80098f2:	d004      	beq.n	80098fe <create_name+0x246>
 80098f4:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80098f6:	3b80      	subs	r3, #128	; 0x80
 80098f8:	4a23      	ldr	r2, [pc, #140]	; (8009988 <create_name+0x2d0>)
 80098fa:	5cd3      	ldrb	r3, [r2, r3]
 80098fc:	84bb      	strh	r3, [r7, #36]	; 0x24
#else
			w = ff_convert(ff_wtoupper(w), 0);	/* Upper converted Unicode -> OEM code */
#endif
			cf |= NS_LFN;				/* Force create LFN entry */
 80098fe:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8009902:	f043 0302 	orr.w	r3, r3, #2
 8009906:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
			if (i >= ni - 1) {
				cf |= NS_LOSS | NS_LFN; i = ni; continue;
			}
			dp->fn[i++] = (BYTE)(w >> 8);
		} else {						/* SBC */
			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
 800990a:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 800990c:	2b00      	cmp	r3, #0
 800990e:	d007      	beq.n	8009920 <create_name+0x268>
 8009910:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8009912:	4619      	mov	r1, r3
 8009914:	481d      	ldr	r0, [pc, #116]	; (800998c <create_name+0x2d4>)
 8009916:	f7fe fa16 	bl	8007d46 <chk_chr>
 800991a:	4603      	mov	r3, r0
 800991c:	2b00      	cmp	r3, #0
 800991e:	d008      	beq.n	8009932 <create_name+0x27a>
				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
 8009920:	235f      	movs	r3, #95	; 0x5f
 8009922:	84bb      	strh	r3, [r7, #36]	; 0x24
 8009924:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8009928:	f043 0303 	orr.w	r3, r3, #3
 800992c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8009930:	e01b      	b.n	800996a <create_name+0x2b2>
			} else {
				if (IsUpper(w)) {		/* ASCII large capital */
 8009932:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8009934:	2b40      	cmp	r3, #64	; 0x40
 8009936:	d909      	bls.n	800994c <create_name+0x294>
 8009938:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 800993a:	2b5a      	cmp	r3, #90	; 0x5a
 800993c:	d806      	bhi.n	800994c <create_name+0x294>
					b |= 2;
 800993e:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8009942:	f043 0302 	orr.w	r3, r3, #2
 8009946:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 800994a:	e00e      	b.n	800996a <create_name+0x2b2>
				} else {
					if (IsLower(w)) {	/* ASCII small capital */
 800994c:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 800994e:	2b60      	cmp	r3, #96	; 0x60
 8009950:	d90b      	bls.n	800996a <create_name+0x2b2>
 8009952:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8009954:	2b7a      	cmp	r3, #122	; 0x7a
 8009956:	d808      	bhi.n	800996a <create_name+0x2b2>
						b |= 1; w -= 0x20;
 8009958:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 800995c:	f043 0301 	orr.w	r3, r3, #1
 8009960:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 8009964:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8009966:	3b20      	subs	r3, #32
 8009968:	84bb      	strh	r3, [r7, #36]	; 0x24
					}
				}
			}
		}
		dp->fn[i++] = (BYTE)w;
 800996a:	6a3b      	ldr	r3, [r7, #32]
 800996c:	1c5a      	adds	r2, r3, #1
 800996e:	623a      	str	r2, [r7, #32]
 8009970:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8009972:	b2d1      	uxtb	r1, r2
 8009974:	687a      	ldr	r2, [r7, #4]
 8009976:	4413      	add	r3, r2
 8009978:	460a      	mov	r2, r1
 800997a:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
		w = lfn[si++];					/* Get an LFN character */
 800997e:	e763      	b.n	8009848 <create_name+0x190>
		if (!w) break;					/* Break on end of the LFN */
 8009980:	bf00      	nop
 8009982:	e006      	b.n	8009992 <create_name+0x2da>
 8009984:	0802a008 	.word	0x0802a008
 8009988:	0802b21c 	.word	0x0802b21c
 800998c:	0802a014 	.word	0x0802a014
			if (si > di) break;			/* No extension */
 8009990:	bf00      	nop
	}

	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with RDDEM */
 8009992:	687b      	ldr	r3, [r7, #4]
 8009994:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8009998:	2be5      	cmp	r3, #229	; 0xe5
 800999a:	d103      	bne.n	80099a4 <create_name+0x2ec>
 800999c:	687b      	ldr	r3, [r7, #4]
 800999e:	2205      	movs	r2, #5
 80099a0:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24

	if (ni == 8) b <<= 2;
 80099a4:	69fb      	ldr	r3, [r7, #28]
 80099a6:	2b08      	cmp	r3, #8
 80099a8:	d104      	bne.n	80099b4 <create_name+0x2fc>
 80099aa:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 80099ae:	009b      	lsls	r3, r3, #2
 80099b0:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* Create LFN entry when there are composite capitals */
 80099b4:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 80099b8:	f003 030c 	and.w	r3, r3, #12
 80099bc:	2b0c      	cmp	r3, #12
 80099be:	d005      	beq.n	80099cc <create_name+0x314>
 80099c0:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 80099c4:	f003 0303 	and.w	r3, r3, #3
 80099c8:	2b03      	cmp	r3, #3
 80099ca:	d105      	bne.n	80099d8 <create_name+0x320>
 80099cc:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80099d0:	f043 0302 	orr.w	r3, r3, #2
 80099d4:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are created */
 80099d8:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80099dc:	f003 0302 	and.w	r3, r3, #2
 80099e0:	2b00      	cmp	r3, #0
 80099e2:	d117      	bne.n	8009a14 <create_name+0x35c>
		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
 80099e4:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 80099e8:	f003 0303 	and.w	r3, r3, #3
 80099ec:	2b01      	cmp	r3, #1
 80099ee:	d105      	bne.n	80099fc <create_name+0x344>
 80099f0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80099f4:	f043 0310 	orr.w	r3, r3, #16
 80099f8:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
 80099fc:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8009a00:	f003 030c 	and.w	r3, r3, #12
 8009a04:	2b04      	cmp	r3, #4
 8009a06:	d105      	bne.n	8009a14 <create_name+0x35c>
 8009a08:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8009a0c:	f043 0308 	orr.w	r3, r3, #8
 8009a10:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	}

	dp->fn[NSFLAG] = cf;	/* SFN is created */
 8009a14:	687b      	ldr	r3, [r7, #4]
 8009a16:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 8009a1a:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f

	return FR_OK;
 8009a1e:	2300      	movs	r3, #0
	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with RDDEM */
	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */

	return FR_OK;
#endif /* _USE_LFN != 0 */
}
 8009a20:	4618      	mov	r0, r3
 8009a22:	3728      	adds	r7, #40	; 0x28
 8009a24:	46bd      	mov	sp, r7
 8009a26:	bd80      	pop	{r7, pc}

08009a28 <follow_path>:
static
FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
	DIR* dp,			/* Directory object to return last directory and found object */
	const TCHAR* path	/* Full-path string to find a file or directory */
)
{
 8009a28:	b580      	push	{r7, lr}
 8009a2a:	b086      	sub	sp, #24
 8009a2c:	af00      	add	r7, sp, #0
 8009a2e:	6078      	str	r0, [r7, #4]
 8009a30:	6039      	str	r1, [r7, #0]
	FRESULT res;
	BYTE ns;
	_FDID *obj = &dp->obj;
 8009a32:	687b      	ldr	r3, [r7, #4]
 8009a34:	613b      	str	r3, [r7, #16]
	FATFS *fs = obj->fs;
 8009a36:	693b      	ldr	r3, [r7, #16]
 8009a38:	681b      	ldr	r3, [r3, #0]
 8009a3a:	60fb      	str	r3, [r7, #12]
	if (*path != '/' && *path != '\\') {	/* Without heading separator */
		obj->sclust = fs->cdir;				/* Start from current directory */
	} else
#endif
	{										/* With heading separator */
		while (*path == '/' || *path == '\\') path++;	/* Strip heading separator */
 8009a3c:	e002      	b.n	8009a44 <follow_path+0x1c>
 8009a3e:	683b      	ldr	r3, [r7, #0]
 8009a40:	3301      	adds	r3, #1
 8009a42:	603b      	str	r3, [r7, #0]
 8009a44:	683b      	ldr	r3, [r7, #0]
 8009a46:	781b      	ldrb	r3, [r3, #0]
 8009a48:	2b2f      	cmp	r3, #47	; 0x2f
 8009a4a:	d0f8      	beq.n	8009a3e <follow_path+0x16>
 8009a4c:	683b      	ldr	r3, [r7, #0]
 8009a4e:	781b      	ldrb	r3, [r3, #0]
 8009a50:	2b5c      	cmp	r3, #92	; 0x5c
 8009a52:	d0f4      	beq.n	8009a3e <follow_path+0x16>
		obj->sclust = 0;					/* Start from root directory */
 8009a54:	693b      	ldr	r3, [r7, #16]
 8009a56:	2200      	movs	r2, #0
 8009a58:	609a      	str	r2, [r3, #8]
		obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
	}
#endif
#endif

	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
 8009a5a:	683b      	ldr	r3, [r7, #0]
 8009a5c:	781b      	ldrb	r3, [r3, #0]
 8009a5e:	2b1f      	cmp	r3, #31
 8009a60:	d80a      	bhi.n	8009a78 <follow_path+0x50>
		dp->fn[NSFLAG] = NS_NONAME;
 8009a62:	687b      	ldr	r3, [r7, #4]
 8009a64:	2280      	movs	r2, #128	; 0x80
 8009a66:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
		res = dir_sdi(dp, 0);
 8009a6a:	2100      	movs	r1, #0
 8009a6c:	6878      	ldr	r0, [r7, #4]
 8009a6e:	f7fe ff15 	bl	800889c <dir_sdi>
 8009a72:	4603      	mov	r3, r0
 8009a74:	75fb      	strb	r3, [r7, #23]
 8009a76:	e048      	b.n	8009b0a <follow_path+0xe2>

	} else {								/* Follow path */
		for (;;) {
			res = create_name(dp, &path);	/* Get a segment name of the path */
 8009a78:	463b      	mov	r3, r7
 8009a7a:	4619      	mov	r1, r3
 8009a7c:	6878      	ldr	r0, [r7, #4]
 8009a7e:	f7ff fe1b 	bl	80096b8 <create_name>
 8009a82:	4603      	mov	r3, r0
 8009a84:	75fb      	strb	r3, [r7, #23]
			if (res != FR_OK) break;
 8009a86:	7dfb      	ldrb	r3, [r7, #23]
 8009a88:	2b00      	cmp	r3, #0
 8009a8a:	d139      	bne.n	8009b00 <follow_path+0xd8>
			res = dir_find(dp);				/* Find an object with the segment name */
 8009a8c:	6878      	ldr	r0, [r7, #4]
 8009a8e:	f7ff fb7d 	bl	800918c <dir_find>
 8009a92:	4603      	mov	r3, r0
 8009a94:	75fb      	strb	r3, [r7, #23]
			ns = dp->fn[NSFLAG];
 8009a96:	687b      	ldr	r3, [r7, #4]
 8009a98:	f893 302f 	ldrb.w	r3, [r3, #47]	; 0x2f
 8009a9c:	72fb      	strb	r3, [r7, #11]
			if (res != FR_OK) {				/* Failed to find the object */
 8009a9e:	7dfb      	ldrb	r3, [r7, #23]
 8009aa0:	2b00      	cmp	r3, #0
 8009aa2:	d00a      	beq.n	8009aba <follow_path+0x92>
				if (res == FR_NO_FILE) {	/* Object is not found */
 8009aa4:	7dfb      	ldrb	r3, [r7, #23]
 8009aa6:	2b04      	cmp	r3, #4
 8009aa8:	d12c      	bne.n	8009b04 <follow_path+0xdc>
					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
						dp->fn[NSFLAG] = NS_NONAME;
						res = FR_OK;
					} else {							/* Could not find the object */
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
 8009aaa:	7afb      	ldrb	r3, [r7, #11]
 8009aac:	f003 0304 	and.w	r3, r3, #4
 8009ab0:	2b00      	cmp	r3, #0
 8009ab2:	d127      	bne.n	8009b04 <follow_path+0xdc>
 8009ab4:	2305      	movs	r3, #5
 8009ab6:	75fb      	strb	r3, [r7, #23]
					}
				}
				break;
 8009ab8:	e024      	b.n	8009b04 <follow_path+0xdc>
			}
			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
 8009aba:	7afb      	ldrb	r3, [r7, #11]
 8009abc:	f003 0304 	and.w	r3, r3, #4
 8009ac0:	2b00      	cmp	r3, #0
 8009ac2:	d121      	bne.n	8009b08 <follow_path+0xe0>
			/* Get into the sub-directory */
			if (!(obj->attr & AM_DIR)) {		/* It is not a sub-directory and cannot follow */
 8009ac4:	693b      	ldr	r3, [r7, #16]
 8009ac6:	799b      	ldrb	r3, [r3, #6]
 8009ac8:	f003 0310 	and.w	r3, r3, #16
 8009acc:	2b00      	cmp	r3, #0
 8009ace:	d102      	bne.n	8009ad6 <follow_path+0xae>
				res = FR_NO_PATH; break;
 8009ad0:	2305      	movs	r3, #5
 8009ad2:	75fb      	strb	r3, [r7, #23]
 8009ad4:	e019      	b.n	8009b0a <follow_path+0xe2>
				obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
				obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
			} else
#endif
			{
				obj->sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
 8009ad6:	68fb      	ldr	r3, [r7, #12]
 8009ad8:	f103 0138 	add.w	r1, r3, #56	; 0x38
 8009adc:	687b      	ldr	r3, [r7, #4]
 8009ade:	695b      	ldr	r3, [r3, #20]
 8009ae0:	68fa      	ldr	r2, [r7, #12]
 8009ae2:	8992      	ldrh	r2, [r2, #12]
 8009ae4:	fbb3 f0f2 	udiv	r0, r3, r2
 8009ae8:	fb00 f202 	mul.w	r2, r0, r2
 8009aec:	1a9b      	subs	r3, r3, r2
 8009aee:	440b      	add	r3, r1
 8009af0:	4619      	mov	r1, r3
 8009af2:	68f8      	ldr	r0, [r7, #12]
 8009af4:	f7ff f878 	bl	8008be8 <ld_clust>
 8009af8:	4602      	mov	r2, r0
 8009afa:	693b      	ldr	r3, [r7, #16]
 8009afc:	609a      	str	r2, [r3, #8]
			res = create_name(dp, &path);	/* Get a segment name of the path */
 8009afe:	e7bb      	b.n	8009a78 <follow_path+0x50>
			if (res != FR_OK) break;
 8009b00:	bf00      	nop
 8009b02:	e002      	b.n	8009b0a <follow_path+0xe2>
				break;
 8009b04:	bf00      	nop
 8009b06:	e000      	b.n	8009b0a <follow_path+0xe2>
			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
 8009b08:	bf00      	nop
			}
		}
	}

	return res;
 8009b0a:	7dfb      	ldrb	r3, [r7, #23]
}
 8009b0c:	4618      	mov	r0, r3
 8009b0e:	3718      	adds	r7, #24
 8009b10:	46bd      	mov	sp, r7
 8009b12:	bd80      	pop	{r7, pc}

08009b14 <get_ldnumber>:

static
int get_ldnumber (		/* Returns logical drive number (-1:invalid drive) */
	const TCHAR** path	/* Pointer to pointer to the path name */
)
{
 8009b14:	b480      	push	{r7}
 8009b16:	b087      	sub	sp, #28
 8009b18:	af00      	add	r7, sp, #0
 8009b1a:	6078      	str	r0, [r7, #4]
	const TCHAR *tp, *tt;
	UINT i;
	int vol = -1;
 8009b1c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009b20:	613b      	str	r3, [r7, #16]
	char c;
	TCHAR tc;
#endif


	if (*path) {	/* If the pointer is not a null */
 8009b22:	687b      	ldr	r3, [r7, #4]
 8009b24:	681b      	ldr	r3, [r3, #0]
 8009b26:	2b00      	cmp	r3, #0
 8009b28:	d031      	beq.n	8009b8e <get_ldnumber+0x7a>
		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the path */
 8009b2a:	687b      	ldr	r3, [r7, #4]
 8009b2c:	681b      	ldr	r3, [r3, #0]
 8009b2e:	617b      	str	r3, [r7, #20]
 8009b30:	e002      	b.n	8009b38 <get_ldnumber+0x24>
 8009b32:	697b      	ldr	r3, [r7, #20]
 8009b34:	3301      	adds	r3, #1
 8009b36:	617b      	str	r3, [r7, #20]
 8009b38:	697b      	ldr	r3, [r7, #20]
 8009b3a:	781b      	ldrb	r3, [r3, #0]
 8009b3c:	2b1f      	cmp	r3, #31
 8009b3e:	d903      	bls.n	8009b48 <get_ldnumber+0x34>
 8009b40:	697b      	ldr	r3, [r7, #20]
 8009b42:	781b      	ldrb	r3, [r3, #0]
 8009b44:	2b3a      	cmp	r3, #58	; 0x3a
 8009b46:	d1f4      	bne.n	8009b32 <get_ldnumber+0x1e>
		if (*tt == ':') {	/* If a ':' is exist in the path name */
 8009b48:	697b      	ldr	r3, [r7, #20]
 8009b4a:	781b      	ldrb	r3, [r3, #0]
 8009b4c:	2b3a      	cmp	r3, #58	; 0x3a
 8009b4e:	d11c      	bne.n	8009b8a <get_ldnumber+0x76>
			tp = *path;
 8009b50:	687b      	ldr	r3, [r7, #4]
 8009b52:	681b      	ldr	r3, [r3, #0]
 8009b54:	60fb      	str	r3, [r7, #12]
			i = *tp++ - '0';
 8009b56:	68fb      	ldr	r3, [r7, #12]
 8009b58:	1c5a      	adds	r2, r3, #1
 8009b5a:	60fa      	str	r2, [r7, #12]
 8009b5c:	781b      	ldrb	r3, [r3, #0]
 8009b5e:	3b30      	subs	r3, #48	; 0x30
 8009b60:	60bb      	str	r3, [r7, #8]
			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
 8009b62:	68bb      	ldr	r3, [r7, #8]
 8009b64:	2b09      	cmp	r3, #9
 8009b66:	d80e      	bhi.n	8009b86 <get_ldnumber+0x72>
 8009b68:	68fa      	ldr	r2, [r7, #12]
 8009b6a:	697b      	ldr	r3, [r7, #20]
 8009b6c:	429a      	cmp	r2, r3
 8009b6e:	d10a      	bne.n	8009b86 <get_ldnumber+0x72>
				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 8009b70:	68bb      	ldr	r3, [r7, #8]
 8009b72:	2b00      	cmp	r3, #0
 8009b74:	d107      	bne.n	8009b86 <get_ldnumber+0x72>
					vol = (int)i;
 8009b76:	68bb      	ldr	r3, [r7, #8]
 8009b78:	613b      	str	r3, [r7, #16]
					*path = ++tt;
 8009b7a:	697b      	ldr	r3, [r7, #20]
 8009b7c:	3301      	adds	r3, #1
 8009b7e:	617b      	str	r3, [r7, #20]
 8009b80:	687b      	ldr	r3, [r7, #4]
 8009b82:	697a      	ldr	r2, [r7, #20]
 8009b84:	601a      	str	r2, [r3, #0]
					vol = (int)i;
					*path = tt;
				}
			}
#endif
			return vol;
 8009b86:	693b      	ldr	r3, [r7, #16]
 8009b88:	e002      	b.n	8009b90 <get_ldnumber+0x7c>
		}
#if _FS_RPATH != 0 && _VOLUMES >= 2
		vol = CurrVol;	/* Current drive */
#else
		vol = 0;		/* Drive 0 */
 8009b8a:	2300      	movs	r3, #0
 8009b8c:	613b      	str	r3, [r7, #16]
#endif
	}
	return vol;
 8009b8e:	693b      	ldr	r3, [r7, #16]
}
 8009b90:	4618      	mov	r0, r3
 8009b92:	371c      	adds	r7, #28
 8009b94:	46bd      	mov	sp, r7
 8009b96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b9a:	4770      	bx	lr

08009b9c <check_fs>:
static
BYTE check_fs (	/* 0:FAT, 1:exFAT, 2:Valid BS but not FAT, 3:Not a BS, 4:Disk error */
	FATFS* fs,	/* File system object */
	DWORD sect	/* Sector# (lba) to load and check if it is an FAT-VBR or not */
)
{
 8009b9c:	b580      	push	{r7, lr}
 8009b9e:	b082      	sub	sp, #8
 8009ba0:	af00      	add	r7, sp, #0
 8009ba2:	6078      	str	r0, [r7, #4]
 8009ba4:	6039      	str	r1, [r7, #0]
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
 8009ba6:	687b      	ldr	r3, [r7, #4]
 8009ba8:	2200      	movs	r2, #0
 8009baa:	70da      	strb	r2, [r3, #3]
 8009bac:	687b      	ldr	r3, [r7, #4]
 8009bae:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8009bb2:	635a      	str	r2, [r3, #52]	; 0x34
	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
 8009bb4:	6839      	ldr	r1, [r7, #0]
 8009bb6:	6878      	ldr	r0, [r7, #4]
 8009bb8:	f7fe fa90 	bl	80080dc <move_window>
 8009bbc:	4603      	mov	r3, r0
 8009bbe:	2b00      	cmp	r3, #0
 8009bc0:	d001      	beq.n	8009bc6 <check_fs+0x2a>
 8009bc2:	2304      	movs	r3, #4
 8009bc4:	e038      	b.n	8009c38 <check_fs+0x9c>

	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always placed here even if the sector size is >512) */
 8009bc6:	687b      	ldr	r3, [r7, #4]
 8009bc8:	3338      	adds	r3, #56	; 0x38
 8009bca:	f503 73ff 	add.w	r3, r3, #510	; 0x1fe
 8009bce:	4618      	mov	r0, r3
 8009bd0:	f7fd ffd4 	bl	8007b7c <ld_word>
 8009bd4:	4603      	mov	r3, r0
 8009bd6:	461a      	mov	r2, r3
 8009bd8:	f64a 2355 	movw	r3, #43605	; 0xaa55
 8009bdc:	429a      	cmp	r2, r3
 8009bde:	d001      	beq.n	8009be4 <check_fs+0x48>
 8009be0:	2303      	movs	r3, #3
 8009be2:	e029      	b.n	8009c38 <check_fs+0x9c>

	if (fs->win[BS_JmpBoot] == 0xE9 || (fs->win[BS_JmpBoot] == 0xEB && fs->win[BS_JmpBoot + 2] == 0x90)) {
 8009be4:	687b      	ldr	r3, [r7, #4]
 8009be6:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8009bea:	2be9      	cmp	r3, #233	; 0xe9
 8009bec:	d009      	beq.n	8009c02 <check_fs+0x66>
 8009bee:	687b      	ldr	r3, [r7, #4]
 8009bf0:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8009bf4:	2beb      	cmp	r3, #235	; 0xeb
 8009bf6:	d11e      	bne.n	8009c36 <check_fs+0x9a>
 8009bf8:	687b      	ldr	r3, [r7, #4]
 8009bfa:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8009bfe:	2b90      	cmp	r3, #144	; 0x90
 8009c00:	d119      	bne.n	8009c36 <check_fs+0x9a>
		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string */
 8009c02:	687b      	ldr	r3, [r7, #4]
 8009c04:	3338      	adds	r3, #56	; 0x38
 8009c06:	3336      	adds	r3, #54	; 0x36
 8009c08:	4618      	mov	r0, r3
 8009c0a:	f7fd ffcf 	bl	8007bac <ld_dword>
 8009c0e:	4603      	mov	r3, r0
 8009c10:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8009c14:	4a0a      	ldr	r2, [pc, #40]	; (8009c40 <check_fs+0xa4>)
 8009c16:	4293      	cmp	r3, r2
 8009c18:	d101      	bne.n	8009c1e <check_fs+0x82>
 8009c1a:	2300      	movs	r3, #0
 8009c1c:	e00c      	b.n	8009c38 <check_fs+0x9c>
		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 8009c1e:	687b      	ldr	r3, [r7, #4]
 8009c20:	3338      	adds	r3, #56	; 0x38
 8009c22:	3352      	adds	r3, #82	; 0x52
 8009c24:	4618      	mov	r0, r3
 8009c26:	f7fd ffc1 	bl	8007bac <ld_dword>
 8009c2a:	4603      	mov	r3, r0
 8009c2c:	4a05      	ldr	r2, [pc, #20]	; (8009c44 <check_fs+0xa8>)
 8009c2e:	4293      	cmp	r3, r2
 8009c30:	d101      	bne.n	8009c36 <check_fs+0x9a>
 8009c32:	2300      	movs	r3, #0
 8009c34:	e000      	b.n	8009c38 <check_fs+0x9c>
	}
#if _FS_EXFAT
	if (!mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;
#endif
	return 2;
 8009c36:	2302      	movs	r3, #2
}
 8009c38:	4618      	mov	r0, r3
 8009c3a:	3708      	adds	r7, #8
 8009c3c:	46bd      	mov	sp, r7
 8009c3e:	bd80      	pop	{r7, pc}
 8009c40:	00544146 	.word	0x00544146
 8009c44:	33544146 	.word	0x33544146

08009c48 <find_volume>:
FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
	const TCHAR** path,	/* Pointer to pointer to the path name (drive number) */
	FATFS** rfs,		/* Pointer to pointer to the found file system object */
	BYTE mode			/* !=0: Check write protection for write access */
)
{
 8009c48:	b580      	push	{r7, lr}
 8009c4a:	b096      	sub	sp, #88	; 0x58
 8009c4c:	af00      	add	r7, sp, #0
 8009c4e:	60f8      	str	r0, [r7, #12]
 8009c50:	60b9      	str	r1, [r7, #8]
 8009c52:	4613      	mov	r3, r2
 8009c54:	71fb      	strb	r3, [r7, #7]
	FATFS *fs;
	UINT i;


	/* Get logical drive number */
	*rfs = 0;
 8009c56:	68bb      	ldr	r3, [r7, #8]
 8009c58:	2200      	movs	r2, #0
 8009c5a:	601a      	str	r2, [r3, #0]
	vol = get_ldnumber(path);
 8009c5c:	68f8      	ldr	r0, [r7, #12]
 8009c5e:	f7ff ff59 	bl	8009b14 <get_ldnumber>
 8009c62:	63f8      	str	r0, [r7, #60]	; 0x3c
	if (vol < 0) return FR_INVALID_DRIVE;
 8009c64:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8009c66:	2b00      	cmp	r3, #0
 8009c68:	da01      	bge.n	8009c6e <find_volume+0x26>
 8009c6a:	230b      	movs	r3, #11
 8009c6c:	e265      	b.n	800a13a <find_volume+0x4f2>

	/* Check if the file system object is valid or not */
	fs = FatFs[vol];					/* Get pointer to the file system object */
 8009c6e:	4a9f      	ldr	r2, [pc, #636]	; (8009eec <find_volume+0x2a4>)
 8009c70:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8009c72:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009c76:	63bb      	str	r3, [r7, #56]	; 0x38
	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 8009c78:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009c7a:	2b00      	cmp	r3, #0
 8009c7c:	d101      	bne.n	8009c82 <find_volume+0x3a>
 8009c7e:	230c      	movs	r3, #12
 8009c80:	e25b      	b.n	800a13a <find_volume+0x4f2>

	ENTER_FF(fs);						/* Lock the volume */
	*rfs = fs;							/* Return pointer to the file system object */
 8009c82:	68bb      	ldr	r3, [r7, #8]
 8009c84:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8009c86:	601a      	str	r2, [r3, #0]

	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
 8009c88:	79fb      	ldrb	r3, [r7, #7]
 8009c8a:	f023 0301 	bic.w	r3, r3, #1
 8009c8e:	71fb      	strb	r3, [r7, #7]
	if (fs->fs_type) {					/* If the volume has been mounted */
 8009c90:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009c92:	781b      	ldrb	r3, [r3, #0]
 8009c94:	2b00      	cmp	r3, #0
 8009c96:	d01a      	beq.n	8009cce <find_volume+0x86>
		stat = disk_status(fs->drv);
 8009c98:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009c9a:	785b      	ldrb	r3, [r3, #1]
 8009c9c:	4618      	mov	r0, r3
 8009c9e:	f7fd fecf 	bl	8007a40 <disk_status>
 8009ca2:	4603      	mov	r3, r0
 8009ca4:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 8009ca8:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8009cac:	f003 0301 	and.w	r3, r3, #1
 8009cb0:	2b00      	cmp	r3, #0
 8009cb2:	d10c      	bne.n	8009cce <find_volume+0x86>
			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
 8009cb4:	79fb      	ldrb	r3, [r7, #7]
 8009cb6:	2b00      	cmp	r3, #0
 8009cb8:	d007      	beq.n	8009cca <find_volume+0x82>
 8009cba:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8009cbe:	f003 0304 	and.w	r3, r3, #4
 8009cc2:	2b00      	cmp	r3, #0
 8009cc4:	d001      	beq.n	8009cca <find_volume+0x82>
				return FR_WRITE_PROTECTED;
 8009cc6:	230a      	movs	r3, #10
 8009cc8:	e237      	b.n	800a13a <find_volume+0x4f2>
			}
			return FR_OK;				/* The file system object is valid */
 8009cca:	2300      	movs	r3, #0
 8009ccc:	e235      	b.n	800a13a <find_volume+0x4f2>
	}

	/* The file system object is not valid. */
	/* Following code attempts to mount the volume. (analyze BPB and initialize the fs object) */

	fs->fs_type = 0;					/* Clear the file system object */
 8009cce:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009cd0:	2200      	movs	r2, #0
 8009cd2:	701a      	strb	r2, [r3, #0]
	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 8009cd4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8009cd6:	b2da      	uxtb	r2, r3
 8009cd8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009cda:	705a      	strb	r2, [r3, #1]
	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
 8009cdc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009cde:	785b      	ldrb	r3, [r3, #1]
 8009ce0:	4618      	mov	r0, r3
 8009ce2:	f7fd fec7 	bl	8007a74 <disk_initialize>
 8009ce6:	4603      	mov	r3, r0
 8009ce8:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
 8009cec:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8009cf0:	f003 0301 	and.w	r3, r3, #1
 8009cf4:	2b00      	cmp	r3, #0
 8009cf6:	d001      	beq.n	8009cfc <find_volume+0xb4>
		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 8009cf8:	2303      	movs	r3, #3
 8009cfa:	e21e      	b.n	800a13a <find_volume+0x4f2>
	}
	if (!_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
 8009cfc:	79fb      	ldrb	r3, [r7, #7]
 8009cfe:	2b00      	cmp	r3, #0
 8009d00:	d007      	beq.n	8009d12 <find_volume+0xca>
 8009d02:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8009d06:	f003 0304 	and.w	r3, r3, #4
 8009d0a:	2b00      	cmp	r3, #0
 8009d0c:	d001      	beq.n	8009d12 <find_volume+0xca>
		return FR_WRITE_PROTECTED;
 8009d0e:	230a      	movs	r3, #10
 8009d10:	e213      	b.n	800a13a <find_volume+0x4f2>
	}
#if _MAX_SS != _MIN_SS					/* Get sector size (multiple sector size cfg only) */
	if (disk_ioctl(fs->drv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK) return FR_DISK_ERR;
 8009d12:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009d14:	7858      	ldrb	r0, [r3, #1]
 8009d16:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009d18:	330c      	adds	r3, #12
 8009d1a:	461a      	mov	r2, r3
 8009d1c:	2102      	movs	r1, #2
 8009d1e:	f7fd ff0f 	bl	8007b40 <disk_ioctl>
 8009d22:	4603      	mov	r3, r0
 8009d24:	2b00      	cmp	r3, #0
 8009d26:	d001      	beq.n	8009d2c <find_volume+0xe4>
 8009d28:	2301      	movs	r3, #1
 8009d2a:	e206      	b.n	800a13a <find_volume+0x4f2>
	if (SS(fs) > _MAX_SS || SS(fs) < _MIN_SS || (SS(fs) & (SS(fs) - 1))) return FR_DISK_ERR;
 8009d2c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009d2e:	899b      	ldrh	r3, [r3, #12]
 8009d30:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009d34:	d80d      	bhi.n	8009d52 <find_volume+0x10a>
 8009d36:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009d38:	899b      	ldrh	r3, [r3, #12]
 8009d3a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8009d3e:	d308      	bcc.n	8009d52 <find_volume+0x10a>
 8009d40:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009d42:	899b      	ldrh	r3, [r3, #12]
 8009d44:	461a      	mov	r2, r3
 8009d46:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009d48:	899b      	ldrh	r3, [r3, #12]
 8009d4a:	3b01      	subs	r3, #1
 8009d4c:	4013      	ands	r3, r2
 8009d4e:	2b00      	cmp	r3, #0
 8009d50:	d001      	beq.n	8009d56 <find_volume+0x10e>
 8009d52:	2301      	movs	r3, #1
 8009d54:	e1f1      	b.n	800a13a <find_volume+0x4f2>
#endif

	/* Find an FAT partition on the drive. Supports only generic partitioning rules, FDISK and SFD. */
	bsect = 0;
 8009d56:	2300      	movs	r3, #0
 8009d58:	653b      	str	r3, [r7, #80]	; 0x50
	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
 8009d5a:	6d39      	ldr	r1, [r7, #80]	; 0x50
 8009d5c:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 8009d5e:	f7ff ff1d 	bl	8009b9c <check_fs>
 8009d62:	4603      	mov	r3, r0
 8009d64:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
 8009d68:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 8009d6c:	2b02      	cmp	r3, #2
 8009d6e:	d149      	bne.n	8009e04 <find_volume+0x1bc>
		for (i = 0; i < 4; i++) {		/* Get partition offset */
 8009d70:	2300      	movs	r3, #0
 8009d72:	643b      	str	r3, [r7, #64]	; 0x40
 8009d74:	e01e      	b.n	8009db4 <find_volume+0x16c>
			pt = fs->win + (MBR_Table + i * SZ_PTE);
 8009d76:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009d78:	f103 0238 	add.w	r2, r3, #56	; 0x38
 8009d7c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8009d7e:	011b      	lsls	r3, r3, #4
 8009d80:	f503 73df 	add.w	r3, r3, #446	; 0x1be
 8009d84:	4413      	add	r3, r2
 8009d86:	633b      	str	r3, [r7, #48]	; 0x30
			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
 8009d88:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009d8a:	3304      	adds	r3, #4
 8009d8c:	781b      	ldrb	r3, [r3, #0]
 8009d8e:	2b00      	cmp	r3, #0
 8009d90:	d006      	beq.n	8009da0 <find_volume+0x158>
 8009d92:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009d94:	3308      	adds	r3, #8
 8009d96:	4618      	mov	r0, r3
 8009d98:	f7fd ff08 	bl	8007bac <ld_dword>
 8009d9c:	4602      	mov	r2, r0
 8009d9e:	e000      	b.n	8009da2 <find_volume+0x15a>
 8009da0:	2200      	movs	r2, #0
 8009da2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8009da4:	009b      	lsls	r3, r3, #2
 8009da6:	3358      	adds	r3, #88	; 0x58
 8009da8:	443b      	add	r3, r7
 8009daa:	f843 2c44 	str.w	r2, [r3, #-68]
		for (i = 0; i < 4; i++) {		/* Get partition offset */
 8009dae:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8009db0:	3301      	adds	r3, #1
 8009db2:	643b      	str	r3, [r7, #64]	; 0x40
 8009db4:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8009db6:	2b03      	cmp	r3, #3
 8009db8:	d9dd      	bls.n	8009d76 <find_volume+0x12e>
		}
		i = LD2PT(vol);					/* Partition number: 0:auto, 1-4:forced */
 8009dba:	2300      	movs	r3, #0
 8009dbc:	643b      	str	r3, [r7, #64]	; 0x40
		if (i) i--;
 8009dbe:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8009dc0:	2b00      	cmp	r3, #0
 8009dc2:	d002      	beq.n	8009dca <find_volume+0x182>
 8009dc4:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8009dc6:	3b01      	subs	r3, #1
 8009dc8:	643b      	str	r3, [r7, #64]	; 0x40
		do {							/* Find an FAT volume */
			bsect = br[i];
 8009dca:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8009dcc:	009b      	lsls	r3, r3, #2
 8009dce:	3358      	adds	r3, #88	; 0x58
 8009dd0:	443b      	add	r3, r7
 8009dd2:	f853 3c44 	ldr.w	r3, [r3, #-68]
 8009dd6:	653b      	str	r3, [r7, #80]	; 0x50
			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
 8009dd8:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8009dda:	2b00      	cmp	r3, #0
 8009ddc:	d005      	beq.n	8009dea <find_volume+0x1a2>
 8009dde:	6d39      	ldr	r1, [r7, #80]	; 0x50
 8009de0:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 8009de2:	f7ff fedb 	bl	8009b9c <check_fs>
 8009de6:	4603      	mov	r3, r0
 8009de8:	e000      	b.n	8009dec <find_volume+0x1a4>
 8009dea:	2303      	movs	r3, #3
 8009dec:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 8009df0:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 8009df4:	2b01      	cmp	r3, #1
 8009df6:	d905      	bls.n	8009e04 <find_volume+0x1bc>
 8009df8:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8009dfa:	3301      	adds	r3, #1
 8009dfc:	643b      	str	r3, [r7, #64]	; 0x40
 8009dfe:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8009e00:	2b03      	cmp	r3, #3
 8009e02:	d9e2      	bls.n	8009dca <find_volume+0x182>
	}
	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
 8009e04:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 8009e08:	2b04      	cmp	r3, #4
 8009e0a:	d101      	bne.n	8009e10 <find_volume+0x1c8>
 8009e0c:	2301      	movs	r3, #1
 8009e0e:	e194      	b.n	800a13a <find_volume+0x4f2>
	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 8009e10:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 8009e14:	2b01      	cmp	r3, #1
 8009e16:	d901      	bls.n	8009e1c <find_volume+0x1d4>
 8009e18:	230d      	movs	r3, #13
 8009e1a:	e18e      	b.n	800a13a <find_volume+0x4f2>
#endif
		fmt = FS_EXFAT;			/* FAT sub-type */
	} else
#endif	/* _FS_EXFAT */
	{
		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must be equal to the physical sector size) */
 8009e1c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009e1e:	3338      	adds	r3, #56	; 0x38
 8009e20:	330b      	adds	r3, #11
 8009e22:	4618      	mov	r0, r3
 8009e24:	f7fd feaa 	bl	8007b7c <ld_word>
 8009e28:	4603      	mov	r3, r0
 8009e2a:	461a      	mov	r2, r3
 8009e2c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009e2e:	899b      	ldrh	r3, [r3, #12]
 8009e30:	429a      	cmp	r2, r3
 8009e32:	d001      	beq.n	8009e38 <find_volume+0x1f0>
 8009e34:	230d      	movs	r3, #13
 8009e36:	e180      	b.n	800a13a <find_volume+0x4f2>

		fasize = ld_word(fs->win + BPB_FATSz16);		/* Number of sectors per FAT */
 8009e38:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009e3a:	3338      	adds	r3, #56	; 0x38
 8009e3c:	3316      	adds	r3, #22
 8009e3e:	4618      	mov	r0, r3
 8009e40:	f7fd fe9c 	bl	8007b7c <ld_word>
 8009e44:	4603      	mov	r3, r0
 8009e46:	64fb      	str	r3, [r7, #76]	; 0x4c
		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
 8009e48:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8009e4a:	2b00      	cmp	r3, #0
 8009e4c:	d106      	bne.n	8009e5c <find_volume+0x214>
 8009e4e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009e50:	3338      	adds	r3, #56	; 0x38
 8009e52:	3324      	adds	r3, #36	; 0x24
 8009e54:	4618      	mov	r0, r3
 8009e56:	f7fd fea9 	bl	8007bac <ld_dword>
 8009e5a:	64f8      	str	r0, [r7, #76]	; 0x4c
		fs->fsize = fasize;
 8009e5c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009e5e:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8009e60:	621a      	str	r2, [r3, #32]

		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
 8009e62:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009e64:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 8009e68:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009e6a:	709a      	strb	r2, [r3, #2]
		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
 8009e6c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009e6e:	789b      	ldrb	r3, [r3, #2]
 8009e70:	2b01      	cmp	r3, #1
 8009e72:	d005      	beq.n	8009e80 <find_volume+0x238>
 8009e74:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009e76:	789b      	ldrb	r3, [r3, #2]
 8009e78:	2b02      	cmp	r3, #2
 8009e7a:	d001      	beq.n	8009e80 <find_volume+0x238>
 8009e7c:	230d      	movs	r3, #13
 8009e7e:	e15c      	b.n	800a13a <find_volume+0x4f2>
		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 8009e80:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009e82:	789b      	ldrb	r3, [r3, #2]
 8009e84:	461a      	mov	r2, r3
 8009e86:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8009e88:	fb02 f303 	mul.w	r3, r2, r3
 8009e8c:	64fb      	str	r3, [r7, #76]	; 0x4c

		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
 8009e8e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009e90:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8009e94:	b29a      	uxth	r2, r3
 8009e96:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009e98:	815a      	strh	r2, [r3, #10]
		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power of 2) */
 8009e9a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009e9c:	895b      	ldrh	r3, [r3, #10]
 8009e9e:	2b00      	cmp	r3, #0
 8009ea0:	d008      	beq.n	8009eb4 <find_volume+0x26c>
 8009ea2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009ea4:	895b      	ldrh	r3, [r3, #10]
 8009ea6:	461a      	mov	r2, r3
 8009ea8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009eaa:	895b      	ldrh	r3, [r3, #10]
 8009eac:	3b01      	subs	r3, #1
 8009eae:	4013      	ands	r3, r2
 8009eb0:	2b00      	cmp	r3, #0
 8009eb2:	d001      	beq.n	8009eb8 <find_volume+0x270>
 8009eb4:	230d      	movs	r3, #13
 8009eb6:	e140      	b.n	800a13a <find_volume+0x4f2>

		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
 8009eb8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009eba:	3338      	adds	r3, #56	; 0x38
 8009ebc:	3311      	adds	r3, #17
 8009ebe:	4618      	mov	r0, r3
 8009ec0:	f7fd fe5c 	bl	8007b7c <ld_word>
 8009ec4:	4603      	mov	r3, r0
 8009ec6:	461a      	mov	r2, r3
 8009ec8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009eca:	811a      	strh	r2, [r3, #8]
		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
 8009ecc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009ece:	891b      	ldrh	r3, [r3, #8]
 8009ed0:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8009ed2:	8992      	ldrh	r2, [r2, #12]
 8009ed4:	0952      	lsrs	r2, r2, #5
 8009ed6:	b292      	uxth	r2, r2
 8009ed8:	fbb3 f1f2 	udiv	r1, r3, r2
 8009edc:	fb01 f202 	mul.w	r2, r1, r2
 8009ee0:	1a9b      	subs	r3, r3, r2
 8009ee2:	b29b      	uxth	r3, r3
 8009ee4:	2b00      	cmp	r3, #0
 8009ee6:	d003      	beq.n	8009ef0 <find_volume+0x2a8>
 8009ee8:	230d      	movs	r3, #13
 8009eea:	e126      	b.n	800a13a <find_volume+0x4f2>
 8009eec:	2000af9c 	.word	0x2000af9c

		tsect = ld_word(fs->win + BPB_TotSec16);		/* Number of sectors on the volume */
 8009ef0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009ef2:	3338      	adds	r3, #56	; 0x38
 8009ef4:	3313      	adds	r3, #19
 8009ef6:	4618      	mov	r0, r3
 8009ef8:	f7fd fe40 	bl	8007b7c <ld_word>
 8009efc:	4603      	mov	r3, r0
 8009efe:	64bb      	str	r3, [r7, #72]	; 0x48
		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
 8009f00:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8009f02:	2b00      	cmp	r3, #0
 8009f04:	d106      	bne.n	8009f14 <find_volume+0x2cc>
 8009f06:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009f08:	3338      	adds	r3, #56	; 0x38
 8009f0a:	3320      	adds	r3, #32
 8009f0c:	4618      	mov	r0, r3
 8009f0e:	f7fd fe4d 	bl	8007bac <ld_dword>
 8009f12:	64b8      	str	r0, [r7, #72]	; 0x48

		nrsv = ld_word(fs->win + BPB_RsvdSecCnt);		/* Number of reserved sectors */
 8009f14:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009f16:	3338      	adds	r3, #56	; 0x38
 8009f18:	330e      	adds	r3, #14
 8009f1a:	4618      	mov	r0, r3
 8009f1c:	f7fd fe2e 	bl	8007b7c <ld_word>
 8009f20:	4603      	mov	r3, r0
 8009f22:	85fb      	strh	r3, [r7, #46]	; 0x2e
		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
 8009f24:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 8009f26:	2b00      	cmp	r3, #0
 8009f28:	d101      	bne.n	8009f2e <find_volume+0x2e6>
 8009f2a:	230d      	movs	r3, #13
 8009f2c:	e105      	b.n	800a13a <find_volume+0x4f2>

		/* Determine the FAT sub type */
		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
 8009f2e:	8dfa      	ldrh	r2, [r7, #46]	; 0x2e
 8009f30:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8009f32:	4413      	add	r3, r2
 8009f34:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8009f36:	8911      	ldrh	r1, [r2, #8]
 8009f38:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8009f3a:	8992      	ldrh	r2, [r2, #12]
 8009f3c:	0952      	lsrs	r2, r2, #5
 8009f3e:	b292      	uxth	r2, r2
 8009f40:	fbb1 f2f2 	udiv	r2, r1, r2
 8009f44:	b292      	uxth	r2, r2
 8009f46:	4413      	add	r3, r2
 8009f48:	62bb      	str	r3, [r7, #40]	; 0x28
		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
 8009f4a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8009f4c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009f4e:	429a      	cmp	r2, r3
 8009f50:	d201      	bcs.n	8009f56 <find_volume+0x30e>
 8009f52:	230d      	movs	r3, #13
 8009f54:	e0f1      	b.n	800a13a <find_volume+0x4f2>
		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 8009f56:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8009f58:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009f5a:	1ad3      	subs	r3, r2, r3
 8009f5c:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8009f5e:	8952      	ldrh	r2, [r2, #10]
 8009f60:	fbb3 f3f2 	udiv	r3, r3, r2
 8009f64:	627b      	str	r3, [r7, #36]	; 0x24
		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 8009f66:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009f68:	2b00      	cmp	r3, #0
 8009f6a:	d101      	bne.n	8009f70 <find_volume+0x328>
 8009f6c:	230d      	movs	r3, #13
 8009f6e:	e0e4      	b.n	800a13a <find_volume+0x4f2>
		fmt = FS_FAT32;
 8009f70:	2303      	movs	r3, #3
 8009f72:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
 8009f76:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009f78:	f64f 72f5 	movw	r2, #65525	; 0xfff5
 8009f7c:	4293      	cmp	r3, r2
 8009f7e:	d802      	bhi.n	8009f86 <find_volume+0x33e>
 8009f80:	2302      	movs	r3, #2
 8009f82:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 8009f86:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009f88:	f640 72f5 	movw	r2, #4085	; 0xff5
 8009f8c:	4293      	cmp	r3, r2
 8009f8e:	d802      	bhi.n	8009f96 <find_volume+0x34e>
 8009f90:	2301      	movs	r3, #1
 8009f92:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57

		/* Boundaries and Limits */
		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
 8009f96:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009f98:	1c9a      	adds	r2, r3, #2
 8009f9a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009f9c:	61da      	str	r2, [r3, #28]
		fs->volbase = bsect;							/* Volume start sector */
 8009f9e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009fa0:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 8009fa2:	625a      	str	r2, [r3, #36]	; 0x24
		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 8009fa4:	8dfa      	ldrh	r2, [r7, #46]	; 0x2e
 8009fa6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8009fa8:	441a      	add	r2, r3
 8009faa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009fac:	629a      	str	r2, [r3, #40]	; 0x28
		fs->database = bsect + sysect;					/* Data start sector */
 8009fae:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 8009fb0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009fb2:	441a      	add	r2, r3
 8009fb4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009fb6:	631a      	str	r2, [r3, #48]	; 0x30
		if (fmt == FS_FAT32) {
 8009fb8:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 8009fbc:	2b03      	cmp	r3, #3
 8009fbe:	d11e      	bne.n	8009ffe <find_volume+0x3b6>
			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0) */
 8009fc0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009fc2:	3338      	adds	r3, #56	; 0x38
 8009fc4:	332a      	adds	r3, #42	; 0x2a
 8009fc6:	4618      	mov	r0, r3
 8009fc8:	f7fd fdd8 	bl	8007b7c <ld_word>
 8009fcc:	4603      	mov	r3, r0
 8009fce:	2b00      	cmp	r3, #0
 8009fd0:	d001      	beq.n	8009fd6 <find_volume+0x38e>
 8009fd2:	230d      	movs	r3, #13
 8009fd4:	e0b1      	b.n	800a13a <find_volume+0x4f2>
			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 8009fd6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009fd8:	891b      	ldrh	r3, [r3, #8]
 8009fda:	2b00      	cmp	r3, #0
 8009fdc:	d001      	beq.n	8009fe2 <find_volume+0x39a>
 8009fde:	230d      	movs	r3, #13
 8009fe0:	e0ab      	b.n	800a13a <find_volume+0x4f2>
			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 8009fe2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009fe4:	3338      	adds	r3, #56	; 0x38
 8009fe6:	332c      	adds	r3, #44	; 0x2c
 8009fe8:	4618      	mov	r0, r3
 8009fea:	f7fd fddf 	bl	8007bac <ld_dword>
 8009fee:	4602      	mov	r2, r0
 8009ff0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009ff2:	62da      	str	r2, [r3, #44]	; 0x2c
			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
 8009ff4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009ff6:	69db      	ldr	r3, [r3, #28]
 8009ff8:	009b      	lsls	r3, r3, #2
 8009ffa:	647b      	str	r3, [r7, #68]	; 0x44
 8009ffc:	e01f      	b.n	800a03e <find_volume+0x3f6>
		} else {
			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;/* (BPB_RootEntCnt must not be 0) */
 8009ffe:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a000:	891b      	ldrh	r3, [r3, #8]
 800a002:	2b00      	cmp	r3, #0
 800a004:	d101      	bne.n	800a00a <find_volume+0x3c2>
 800a006:	230d      	movs	r3, #13
 800a008:	e097      	b.n	800a13a <find_volume+0x4f2>
			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 800a00a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a00c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800a00e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800a010:	441a      	add	r2, r3
 800a012:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a014:	62da      	str	r2, [r3, #44]	; 0x2c
			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
 800a016:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 800a01a:	2b02      	cmp	r3, #2
 800a01c:	d103      	bne.n	800a026 <find_volume+0x3de>
 800a01e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a020:	69db      	ldr	r3, [r3, #28]
 800a022:	005b      	lsls	r3, r3, #1
 800a024:	e00a      	b.n	800a03c <find_volume+0x3f4>
 800a026:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a028:	69da      	ldr	r2, [r3, #28]
 800a02a:	4613      	mov	r3, r2
 800a02c:	005b      	lsls	r3, r3, #1
 800a02e:	4413      	add	r3, r2
 800a030:	085a      	lsrs	r2, r3, #1
 800a032:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a034:	69db      	ldr	r3, [r3, #28]
 800a036:	f003 0301 	and.w	r3, r3, #1
 800a03a:	4413      	add	r3, r2
			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
 800a03c:	647b      	str	r3, [r7, #68]	; 0x44
		}
		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not be less than the size needed) */
 800a03e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a040:	6a1a      	ldr	r2, [r3, #32]
 800a042:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a044:	899b      	ldrh	r3, [r3, #12]
 800a046:	4619      	mov	r1, r3
 800a048:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800a04a:	440b      	add	r3, r1
 800a04c:	3b01      	subs	r3, #1
 800a04e:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 800a050:	8989      	ldrh	r1, [r1, #12]
 800a052:	fbb3 f3f1 	udiv	r3, r3, r1
 800a056:	429a      	cmp	r2, r3
 800a058:	d201      	bcs.n	800a05e <find_volume+0x416>
 800a05a:	230d      	movs	r3, #13
 800a05c:	e06d      	b.n	800a13a <find_volume+0x4f2>

#if !_FS_READONLY
		/* Get FSINFO if available */
		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
 800a05e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a060:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800a064:	619a      	str	r2, [r3, #24]
 800a066:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a068:	699a      	ldr	r2, [r3, #24]
 800a06a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a06c:	615a      	str	r2, [r3, #20]
		fs->fsi_flag = 0x80;
 800a06e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a070:	2280      	movs	r2, #128	; 0x80
 800a072:	711a      	strb	r2, [r3, #4]
#if (_FS_NOFSINFO & 3) != 3
		if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo32 == 1 */
 800a074:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 800a078:	2b03      	cmp	r3, #3
 800a07a:	d149      	bne.n	800a110 <find_volume+0x4c8>
			&& ld_word(fs->win + BPB_FSInfo32) == 1
 800a07c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a07e:	3338      	adds	r3, #56	; 0x38
 800a080:	3330      	adds	r3, #48	; 0x30
 800a082:	4618      	mov	r0, r3
 800a084:	f7fd fd7a 	bl	8007b7c <ld_word>
 800a088:	4603      	mov	r3, r0
 800a08a:	2b01      	cmp	r3, #1
 800a08c:	d140      	bne.n	800a110 <find_volume+0x4c8>
			&& move_window(fs, bsect + 1) == FR_OK)
 800a08e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800a090:	3301      	adds	r3, #1
 800a092:	4619      	mov	r1, r3
 800a094:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 800a096:	f7fe f821 	bl	80080dc <move_window>
 800a09a:	4603      	mov	r3, r0
 800a09c:	2b00      	cmp	r3, #0
 800a09e:	d137      	bne.n	800a110 <find_volume+0x4c8>
		{
			fs->fsi_flag = 0;
 800a0a0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a0a2:	2200      	movs	r2, #0
 800a0a4:	711a      	strb	r2, [r3, #4]
			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 800a0a6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a0a8:	3338      	adds	r3, #56	; 0x38
 800a0aa:	f503 73ff 	add.w	r3, r3, #510	; 0x1fe
 800a0ae:	4618      	mov	r0, r3
 800a0b0:	f7fd fd64 	bl	8007b7c <ld_word>
 800a0b4:	4603      	mov	r3, r0
 800a0b6:	461a      	mov	r2, r3
 800a0b8:	f64a 2355 	movw	r3, #43605	; 0xaa55
 800a0bc:	429a      	cmp	r2, r3
 800a0be:	d127      	bne.n	800a110 <find_volume+0x4c8>
				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
 800a0c0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a0c2:	3338      	adds	r3, #56	; 0x38
 800a0c4:	4618      	mov	r0, r3
 800a0c6:	f7fd fd71 	bl	8007bac <ld_dword>
 800a0ca:	4603      	mov	r3, r0
 800a0cc:	4a1d      	ldr	r2, [pc, #116]	; (800a144 <find_volume+0x4fc>)
 800a0ce:	4293      	cmp	r3, r2
 800a0d0:	d11e      	bne.n	800a110 <find_volume+0x4c8>
				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
 800a0d2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a0d4:	3338      	adds	r3, #56	; 0x38
 800a0d6:	f503 73f2 	add.w	r3, r3, #484	; 0x1e4
 800a0da:	4618      	mov	r0, r3
 800a0dc:	f7fd fd66 	bl	8007bac <ld_dword>
 800a0e0:	4603      	mov	r3, r0
 800a0e2:	4a19      	ldr	r2, [pc, #100]	; (800a148 <find_volume+0x500>)
 800a0e4:	4293      	cmp	r3, r2
 800a0e6:	d113      	bne.n	800a110 <find_volume+0x4c8>
			{
#if (_FS_NOFSINFO & 1) == 0
				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
 800a0e8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a0ea:	3338      	adds	r3, #56	; 0x38
 800a0ec:	f503 73f4 	add.w	r3, r3, #488	; 0x1e8
 800a0f0:	4618      	mov	r0, r3
 800a0f2:	f7fd fd5b 	bl	8007bac <ld_dword>
 800a0f6:	4602      	mov	r2, r0
 800a0f8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a0fa:	619a      	str	r2, [r3, #24]
#endif
#if (_FS_NOFSINFO & 2) == 0
				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
 800a0fc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a0fe:	3338      	adds	r3, #56	; 0x38
 800a100:	f503 73f6 	add.w	r3, r3, #492	; 0x1ec
 800a104:	4618      	mov	r0, r3
 800a106:	f7fd fd51 	bl	8007bac <ld_dword>
 800a10a:	4602      	mov	r2, r0
 800a10c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a10e:	615a      	str	r2, [r3, #20]
		}
#endif	/* (_FS_NOFSINFO & 3) != 3 */
#endif	/* !_FS_READONLY */
	}

	fs->fs_type = fmt;		/* FAT sub-type */
 800a110:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a112:	f897 2057 	ldrb.w	r2, [r7, #87]	; 0x57
 800a116:	701a      	strb	r2, [r3, #0]
	fs->id = ++Fsid;		/* File system mount ID */
 800a118:	4b0c      	ldr	r3, [pc, #48]	; (800a14c <find_volume+0x504>)
 800a11a:	881b      	ldrh	r3, [r3, #0]
 800a11c:	3301      	adds	r3, #1
 800a11e:	b29a      	uxth	r2, r3
 800a120:	4b0a      	ldr	r3, [pc, #40]	; (800a14c <find_volume+0x504>)
 800a122:	801a      	strh	r2, [r3, #0]
 800a124:	4b09      	ldr	r3, [pc, #36]	; (800a14c <find_volume+0x504>)
 800a126:	881a      	ldrh	r2, [r3, #0]
 800a128:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a12a:	80da      	strh	r2, [r3, #6]
#if _USE_LFN == 1
	fs->lfnbuf = LfnBuf;	/* Static LFN working buffer */
 800a12c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a12e:	4a08      	ldr	r2, [pc, #32]	; (800a150 <find_volume+0x508>)
 800a130:	611a      	str	r2, [r3, #16]
#endif
#if _FS_RPATH != 0
	fs->cdir = 0;			/* Initialize current directory */
#endif
#if _FS_LOCK != 0			/* Clear file lock semaphores */
	clear_lock(fs);
 800a132:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 800a134:	f7fd ff6a 	bl	800800c <clear_lock>
#endif
	return FR_OK;
 800a138:	2300      	movs	r3, #0
}
 800a13a:	4618      	mov	r0, r3
 800a13c:	3758      	adds	r7, #88	; 0x58
 800a13e:	46bd      	mov	sp, r7
 800a140:	bd80      	pop	{r7, pc}
 800a142:	bf00      	nop
 800a144:	41615252 	.word	0x41615252
 800a148:	61417272 	.word	0x61417272
 800a14c:	2000afa0 	.word	0x2000afa0
 800a150:	2000afc4 	.word	0x2000afc4

0800a154 <validate>:
static
FRESULT validate (	/* Returns FR_OK or FR_INVALID_OBJECT */
	_FDID* obj,		/* Pointer to the _OBJ, the 1st member in the FIL/DIR object, to check validity */
	FATFS** fs		/* Pointer to pointer to the owner file system object to return */
)
{
 800a154:	b580      	push	{r7, lr}
 800a156:	b084      	sub	sp, #16
 800a158:	af00      	add	r7, sp, #0
 800a15a:	6078      	str	r0, [r7, #4]
 800a15c:	6039      	str	r1, [r7, #0]
	FRESULT res = FR_INVALID_OBJECT;
 800a15e:	2309      	movs	r3, #9
 800a160:	73fb      	strb	r3, [r7, #15]


	if (obj && obj->fs && obj->fs->fs_type && obj->id == obj->fs->id) {	/* Test if the object is valid */
 800a162:	687b      	ldr	r3, [r7, #4]
 800a164:	2b00      	cmp	r3, #0
 800a166:	d01c      	beq.n	800a1a2 <validate+0x4e>
 800a168:	687b      	ldr	r3, [r7, #4]
 800a16a:	681b      	ldr	r3, [r3, #0]
 800a16c:	2b00      	cmp	r3, #0
 800a16e:	d018      	beq.n	800a1a2 <validate+0x4e>
 800a170:	687b      	ldr	r3, [r7, #4]
 800a172:	681b      	ldr	r3, [r3, #0]
 800a174:	781b      	ldrb	r3, [r3, #0]
 800a176:	2b00      	cmp	r3, #0
 800a178:	d013      	beq.n	800a1a2 <validate+0x4e>
 800a17a:	687b      	ldr	r3, [r7, #4]
 800a17c:	889a      	ldrh	r2, [r3, #4]
 800a17e:	687b      	ldr	r3, [r7, #4]
 800a180:	681b      	ldr	r3, [r3, #0]
 800a182:	88db      	ldrh	r3, [r3, #6]
 800a184:	429a      	cmp	r2, r3
 800a186:	d10c      	bne.n	800a1a2 <validate+0x4e>
			}
		} else {
			res = FR_TIMEOUT;
		}
#else
		if (!(disk_status(obj->fs->drv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialized */
 800a188:	687b      	ldr	r3, [r7, #4]
 800a18a:	681b      	ldr	r3, [r3, #0]
 800a18c:	785b      	ldrb	r3, [r3, #1]
 800a18e:	4618      	mov	r0, r3
 800a190:	f7fd fc56 	bl	8007a40 <disk_status>
 800a194:	4603      	mov	r3, r0
 800a196:	f003 0301 	and.w	r3, r3, #1
 800a19a:	2b00      	cmp	r3, #0
 800a19c:	d101      	bne.n	800a1a2 <validate+0x4e>
			res = FR_OK;
 800a19e:	2300      	movs	r3, #0
 800a1a0:	73fb      	strb	r3, [r7, #15]
		}
#endif
	}
	*fs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
 800a1a2:	7bfb      	ldrb	r3, [r7, #15]
 800a1a4:	2b00      	cmp	r3, #0
 800a1a6:	d102      	bne.n	800a1ae <validate+0x5a>
 800a1a8:	687b      	ldr	r3, [r7, #4]
 800a1aa:	681b      	ldr	r3, [r3, #0]
 800a1ac:	e000      	b.n	800a1b0 <validate+0x5c>
 800a1ae:	2300      	movs	r3, #0
 800a1b0:	683a      	ldr	r2, [r7, #0]
 800a1b2:	6013      	str	r3, [r2, #0]
	return res;
 800a1b4:	7bfb      	ldrb	r3, [r7, #15]
}
 800a1b6:	4618      	mov	r0, r3
 800a1b8:	3710      	adds	r7, #16
 800a1ba:	46bd      	mov	sp, r7
 800a1bc:	bd80      	pop	{r7, pc}
	...

0800a1c0 <f_mount>:
FRESULT f_mount (
	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
)
{
 800a1c0:	b580      	push	{r7, lr}
 800a1c2:	b088      	sub	sp, #32
 800a1c4:	af00      	add	r7, sp, #0
 800a1c6:	60f8      	str	r0, [r7, #12]
 800a1c8:	60b9      	str	r1, [r7, #8]
 800a1ca:	4613      	mov	r3, r2
 800a1cc:	71fb      	strb	r3, [r7, #7]
	FATFS *cfs;
	int vol;
	FRESULT res;
	const TCHAR *rp = path;
 800a1ce:	68bb      	ldr	r3, [r7, #8]
 800a1d0:	613b      	str	r3, [r7, #16]


	/* Get logical drive number */
	vol = get_ldnumber(&rp);
 800a1d2:	f107 0310 	add.w	r3, r7, #16
 800a1d6:	4618      	mov	r0, r3
 800a1d8:	f7ff fc9c 	bl	8009b14 <get_ldnumber>
 800a1dc:	61f8      	str	r0, [r7, #28]
	if (vol < 0) return FR_INVALID_DRIVE;
 800a1de:	69fb      	ldr	r3, [r7, #28]
 800a1e0:	2b00      	cmp	r3, #0
 800a1e2:	da01      	bge.n	800a1e8 <f_mount+0x28>
 800a1e4:	230b      	movs	r3, #11
 800a1e6:	e02b      	b.n	800a240 <f_mount+0x80>
	cfs = FatFs[vol];					/* Pointer to fs object */
 800a1e8:	4a17      	ldr	r2, [pc, #92]	; (800a248 <f_mount+0x88>)
 800a1ea:	69fb      	ldr	r3, [r7, #28]
 800a1ec:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800a1f0:	61bb      	str	r3, [r7, #24]

	if (cfs) {
 800a1f2:	69bb      	ldr	r3, [r7, #24]
 800a1f4:	2b00      	cmp	r3, #0
 800a1f6:	d005      	beq.n	800a204 <f_mount+0x44>
#if _FS_LOCK != 0
		clear_lock(cfs);
 800a1f8:	69b8      	ldr	r0, [r7, #24]
 800a1fa:	f7fd ff07 	bl	800800c <clear_lock>
#endif
#if _FS_REENTRANT						/* Discard sync object of the current volume */
		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
#endif
		cfs->fs_type = 0;				/* Clear old fs object */
 800a1fe:	69bb      	ldr	r3, [r7, #24]
 800a200:	2200      	movs	r2, #0
 800a202:	701a      	strb	r2, [r3, #0]
	}

	if (fs) {
 800a204:	68fb      	ldr	r3, [r7, #12]
 800a206:	2b00      	cmp	r3, #0
 800a208:	d002      	beq.n	800a210 <f_mount+0x50>
		fs->fs_type = 0;				/* Clear new fs object */
 800a20a:	68fb      	ldr	r3, [r7, #12]
 800a20c:	2200      	movs	r2, #0
 800a20e:	701a      	strb	r2, [r3, #0]
#if _FS_REENTRANT						/* Create sync object for the new volume */
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
#endif
	}
	FatFs[vol] = fs;					/* Register new fs object */
 800a210:	68fa      	ldr	r2, [r7, #12]
 800a212:	490d      	ldr	r1, [pc, #52]	; (800a248 <f_mount+0x88>)
 800a214:	69fb      	ldr	r3, [r7, #28]
 800a216:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
 800a21a:	68fb      	ldr	r3, [r7, #12]
 800a21c:	2b00      	cmp	r3, #0
 800a21e:	d002      	beq.n	800a226 <f_mount+0x66>
 800a220:	79fb      	ldrb	r3, [r7, #7]
 800a222:	2b01      	cmp	r3, #1
 800a224:	d001      	beq.n	800a22a <f_mount+0x6a>
 800a226:	2300      	movs	r3, #0
 800a228:	e00a      	b.n	800a240 <f_mount+0x80>

	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
 800a22a:	f107 010c 	add.w	r1, r7, #12
 800a22e:	f107 0308 	add.w	r3, r7, #8
 800a232:	2200      	movs	r2, #0
 800a234:	4618      	mov	r0, r3
 800a236:	f7ff fd07 	bl	8009c48 <find_volume>
 800a23a:	4603      	mov	r3, r0
 800a23c:	75fb      	strb	r3, [r7, #23]
	LEAVE_FF(fs, res);
 800a23e:	7dfb      	ldrb	r3, [r7, #23]
}
 800a240:	4618      	mov	r0, r3
 800a242:	3720      	adds	r7, #32
 800a244:	46bd      	mov	sp, r7
 800a246:	bd80      	pop	{r7, pc}
 800a248:	2000af9c 	.word	0x2000af9c

0800a24c <f_open>:
FRESULT f_open (
	FIL* fp,			/* Pointer to the blank file object */
	const TCHAR* path,	/* Pointer to the file name */
	BYTE mode			/* Access mode and file open mode flags */
)
{
 800a24c:	b580      	push	{r7, lr}
 800a24e:	b09a      	sub	sp, #104	; 0x68
 800a250:	af00      	add	r7, sp, #0
 800a252:	60f8      	str	r0, [r7, #12]
 800a254:	60b9      	str	r1, [r7, #8]
 800a256:	4613      	mov	r3, r2
 800a258:	71fb      	strb	r3, [r7, #7]
	FSIZE_t ofs;
#endif
	DEF_NAMBUF


	if (!fp) return FR_INVALID_OBJECT;
 800a25a:	68fb      	ldr	r3, [r7, #12]
 800a25c:	2b00      	cmp	r3, #0
 800a25e:	d101      	bne.n	800a264 <f_open+0x18>
 800a260:	2309      	movs	r3, #9
 800a262:	e1bb      	b.n	800a5dc <f_open+0x390>

	/* Get logical drive */
	mode &= _FS_READONLY ? FA_READ : FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_CREATE_NEW | FA_OPEN_ALWAYS | FA_OPEN_APPEND | FA_SEEKEND;
 800a264:	79fb      	ldrb	r3, [r7, #7]
 800a266:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800a26a:	71fb      	strb	r3, [r7, #7]
	res = find_volume(&path, &fs, mode);
 800a26c:	79fa      	ldrb	r2, [r7, #7]
 800a26e:	f107 0114 	add.w	r1, r7, #20
 800a272:	f107 0308 	add.w	r3, r7, #8
 800a276:	4618      	mov	r0, r3
 800a278:	f7ff fce6 	bl	8009c48 <find_volume>
 800a27c:	4603      	mov	r3, r0
 800a27e:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
	if (res == FR_OK) {
 800a282:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800a286:	2b00      	cmp	r3, #0
 800a288:	f040 819f 	bne.w	800a5ca <f_open+0x37e>
		dj.obj.fs = fs;
 800a28c:	697b      	ldr	r3, [r7, #20]
 800a28e:	61bb      	str	r3, [r7, #24]
		INIT_NAMBUF(fs);
		res = follow_path(&dj, path);	/* Follow the file path */
 800a290:	68ba      	ldr	r2, [r7, #8]
 800a292:	f107 0318 	add.w	r3, r7, #24
 800a296:	4611      	mov	r1, r2
 800a298:	4618      	mov	r0, r3
 800a29a:	f7ff fbc5 	bl	8009a28 <follow_path>
 800a29e:	4603      	mov	r3, r0
 800a2a0:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
#if !_FS_READONLY	/* R/W configuration */
		if (res == FR_OK) {
 800a2a4:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800a2a8:	2b00      	cmp	r3, #0
 800a2aa:	d11a      	bne.n	800a2e2 <f_open+0x96>
			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
 800a2ac:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 800a2b0:	b25b      	sxtb	r3, r3
 800a2b2:	2b00      	cmp	r3, #0
 800a2b4:	da03      	bge.n	800a2be <f_open+0x72>
				res = FR_INVALID_NAME;
 800a2b6:	2306      	movs	r3, #6
 800a2b8:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 800a2bc:	e011      	b.n	800a2e2 <f_open+0x96>
			}
#if _FS_LOCK != 0
			else {
				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
 800a2be:	79fb      	ldrb	r3, [r7, #7]
 800a2c0:	f023 0301 	bic.w	r3, r3, #1
 800a2c4:	2b00      	cmp	r3, #0
 800a2c6:	bf14      	ite	ne
 800a2c8:	2301      	movne	r3, #1
 800a2ca:	2300      	moveq	r3, #0
 800a2cc:	b2db      	uxtb	r3, r3
 800a2ce:	461a      	mov	r2, r3
 800a2d0:	f107 0318 	add.w	r3, r7, #24
 800a2d4:	4611      	mov	r1, r2
 800a2d6:	4618      	mov	r0, r3
 800a2d8:	f7fd fd50 	bl	8007d7c <chk_lock>
 800a2dc:	4603      	mov	r3, r0
 800a2de:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
			}
#endif
		}
		/* Create or Open a file */
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
 800a2e2:	79fb      	ldrb	r3, [r7, #7]
 800a2e4:	f003 031c 	and.w	r3, r3, #28
 800a2e8:	2b00      	cmp	r3, #0
 800a2ea:	d07f      	beq.n	800a3ec <f_open+0x1a0>
			if (res != FR_OK) {					/* No file, create new */
 800a2ec:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800a2f0:	2b00      	cmp	r3, #0
 800a2f2:	d017      	beq.n	800a324 <f_open+0xd8>
				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
 800a2f4:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800a2f8:	2b04      	cmp	r3, #4
 800a2fa:	d10e      	bne.n	800a31a <f_open+0xce>
#if _FS_LOCK != 0
					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
 800a2fc:	f7fd fd9a 	bl	8007e34 <enq_lock>
 800a300:	4603      	mov	r3, r0
 800a302:	2b00      	cmp	r3, #0
 800a304:	d006      	beq.n	800a314 <f_open+0xc8>
 800a306:	f107 0318 	add.w	r3, r7, #24
 800a30a:	4618      	mov	r0, r3
 800a30c:	f7fe fffe 	bl	800930c <dir_register>
 800a310:	4603      	mov	r3, r0
 800a312:	e000      	b.n	800a316 <f_open+0xca>
 800a314:	2312      	movs	r3, #18
 800a316:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
#else
					res = dir_register(&dj);
#endif
				}
				mode |= FA_CREATE_ALWAYS;		/* File is created */
 800a31a:	79fb      	ldrb	r3, [r7, #7]
 800a31c:	f043 0308 	orr.w	r3, r3, #8
 800a320:	71fb      	strb	r3, [r7, #7]
 800a322:	e010      	b.n	800a346 <f_open+0xfa>
			}
			else {								/* Any object is already existing */
				if (dj.obj.attr & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
 800a324:	7fbb      	ldrb	r3, [r7, #30]
 800a326:	f003 0311 	and.w	r3, r3, #17
 800a32a:	2b00      	cmp	r3, #0
 800a32c:	d003      	beq.n	800a336 <f_open+0xea>
					res = FR_DENIED;
 800a32e:	2307      	movs	r3, #7
 800a330:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 800a334:	e007      	b.n	800a346 <f_open+0xfa>
				} else {
					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
 800a336:	79fb      	ldrb	r3, [r7, #7]
 800a338:	f003 0304 	and.w	r3, r3, #4
 800a33c:	2b00      	cmp	r3, #0
 800a33e:	d002      	beq.n	800a346 <f_open+0xfa>
 800a340:	2308      	movs	r3, #8
 800a342:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
				}
			}
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
 800a346:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800a34a:	2b00      	cmp	r3, #0
 800a34c:	d168      	bne.n	800a420 <f_open+0x1d4>
 800a34e:	79fb      	ldrb	r3, [r7, #7]
 800a350:	f003 0308 	and.w	r3, r3, #8
 800a354:	2b00      	cmp	r3, #0
 800a356:	d063      	beq.n	800a420 <f_open+0x1d4>
				dw = GET_FATTIME();
 800a358:	f7fd fb10 	bl	800797c <get_fattime>
 800a35c:	65b8      	str	r0, [r7, #88]	; 0x58
					}
				} else
#endif
				{
					/* Clean directory info */
					st_dword(dj.dir + DIR_CrtTime, dw);	/* Set created time */
 800a35e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a360:	330e      	adds	r3, #14
 800a362:	6db9      	ldr	r1, [r7, #88]	; 0x58
 800a364:	4618      	mov	r0, r3
 800a366:	f7fd fc5f 	bl	8007c28 <st_dword>
					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
 800a36a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a36c:	3316      	adds	r3, #22
 800a36e:	6db9      	ldr	r1, [r7, #88]	; 0x58
 800a370:	4618      	mov	r0, r3
 800a372:	f7fd fc59 	bl	8007c28 <st_dword>
					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
 800a376:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a378:	330b      	adds	r3, #11
 800a37a:	2220      	movs	r2, #32
 800a37c:	701a      	strb	r2, [r3, #0]
					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
 800a37e:	697b      	ldr	r3, [r7, #20]
 800a380:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800a382:	4611      	mov	r1, r2
 800a384:	4618      	mov	r0, r3
 800a386:	f7fe fc2f 	bl	8008be8 <ld_clust>
 800a38a:	6578      	str	r0, [r7, #84]	; 0x54
					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
 800a38c:	697b      	ldr	r3, [r7, #20]
 800a38e:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 800a390:	2200      	movs	r2, #0
 800a392:	4618      	mov	r0, r3
 800a394:	f7fe fc47 	bl	8008c26 <st_clust>
					st_dword(dj.dir + DIR_FileSize, 0);
 800a398:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a39a:	331c      	adds	r3, #28
 800a39c:	2100      	movs	r1, #0
 800a39e:	4618      	mov	r0, r3
 800a3a0:	f7fd fc42 	bl	8007c28 <st_dword>
					fs->wflag = 1;
 800a3a4:	697b      	ldr	r3, [r7, #20]
 800a3a6:	2201      	movs	r2, #1
 800a3a8:	70da      	strb	r2, [r3, #3]

					if (cl) {							/* Remove the cluster chain if exist */
 800a3aa:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800a3ac:	2b00      	cmp	r3, #0
 800a3ae:	d037      	beq.n	800a420 <f_open+0x1d4>
						dw = fs->winsect;
 800a3b0:	697b      	ldr	r3, [r7, #20]
 800a3b2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a3b4:	65bb      	str	r3, [r7, #88]	; 0x58
						res = remove_chain(&dj.obj, cl, 0);
 800a3b6:	f107 0318 	add.w	r3, r7, #24
 800a3ba:	2200      	movs	r2, #0
 800a3bc:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800a3be:	4618      	mov	r0, r3
 800a3c0:	f7fe f937 	bl	8008632 <remove_chain>
 800a3c4:	4603      	mov	r3, r0
 800a3c6:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
						if (res == FR_OK) {
 800a3ca:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800a3ce:	2b00      	cmp	r3, #0
 800a3d0:	d126      	bne.n	800a420 <f_open+0x1d4>
							res = move_window(fs, dw);
 800a3d2:	697b      	ldr	r3, [r7, #20]
 800a3d4:	6db9      	ldr	r1, [r7, #88]	; 0x58
 800a3d6:	4618      	mov	r0, r3
 800a3d8:	f7fd fe80 	bl	80080dc <move_window>
 800a3dc:	4603      	mov	r3, r0
 800a3de:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
 800a3e2:	697b      	ldr	r3, [r7, #20]
 800a3e4:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 800a3e6:	3a01      	subs	r2, #1
 800a3e8:	615a      	str	r2, [r3, #20]
 800a3ea:	e019      	b.n	800a420 <f_open+0x1d4>
					}
				}
			}
		}
		else {	/* Open an existing file */
			if (res == FR_OK) {					/* Following succeeded */
 800a3ec:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800a3f0:	2b00      	cmp	r3, #0
 800a3f2:	d115      	bne.n	800a420 <f_open+0x1d4>
				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
 800a3f4:	7fbb      	ldrb	r3, [r7, #30]
 800a3f6:	f003 0310 	and.w	r3, r3, #16
 800a3fa:	2b00      	cmp	r3, #0
 800a3fc:	d003      	beq.n	800a406 <f_open+0x1ba>
					res = FR_NO_FILE;
 800a3fe:	2304      	movs	r3, #4
 800a400:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 800a404:	e00c      	b.n	800a420 <f_open+0x1d4>
				} else {
					if ((mode & FA_WRITE) && (dj.obj.attr & AM_RDO)) { /* R/O violation */
 800a406:	79fb      	ldrb	r3, [r7, #7]
 800a408:	f003 0302 	and.w	r3, r3, #2
 800a40c:	2b00      	cmp	r3, #0
 800a40e:	d007      	beq.n	800a420 <f_open+0x1d4>
 800a410:	7fbb      	ldrb	r3, [r7, #30]
 800a412:	f003 0301 	and.w	r3, r3, #1
 800a416:	2b00      	cmp	r3, #0
 800a418:	d002      	beq.n	800a420 <f_open+0x1d4>
						res = FR_DENIED;
 800a41a:	2307      	movs	r3, #7
 800a41c:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
					}
				}
			}
		}
		if (res == FR_OK) {
 800a420:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800a424:	2b00      	cmp	r3, #0
 800a426:	d128      	bne.n	800a47a <f_open+0x22e>
			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
 800a428:	79fb      	ldrb	r3, [r7, #7]
 800a42a:	f003 0308 	and.w	r3, r3, #8
 800a42e:	2b00      	cmp	r3, #0
 800a430:	d003      	beq.n	800a43a <f_open+0x1ee>
				mode |= FA_MODIFIED;
 800a432:	79fb      	ldrb	r3, [r7, #7]
 800a434:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800a438:	71fb      	strb	r3, [r7, #7]
			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
 800a43a:	697b      	ldr	r3, [r7, #20]
 800a43c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a43e:	68fb      	ldr	r3, [r7, #12]
 800a440:	625a      	str	r2, [r3, #36]	; 0x24
			fp->dir_ptr = dj.dir;
 800a442:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800a444:	68fb      	ldr	r3, [r7, #12]
 800a446:	629a      	str	r2, [r3, #40]	; 0x28
#if _FS_LOCK != 0
			fp->obj.lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
 800a448:	79fb      	ldrb	r3, [r7, #7]
 800a44a:	f023 0301 	bic.w	r3, r3, #1
 800a44e:	2b00      	cmp	r3, #0
 800a450:	bf14      	ite	ne
 800a452:	2301      	movne	r3, #1
 800a454:	2300      	moveq	r3, #0
 800a456:	b2db      	uxtb	r3, r3
 800a458:	461a      	mov	r2, r3
 800a45a:	f107 0318 	add.w	r3, r7, #24
 800a45e:	4611      	mov	r1, r2
 800a460:	4618      	mov	r0, r3
 800a462:	f7fd fd09 	bl	8007e78 <inc_lock>
 800a466:	4602      	mov	r2, r0
 800a468:	68fb      	ldr	r3, [r7, #12]
 800a46a:	611a      	str	r2, [r3, #16]
			if (!fp->obj.lockid) res = FR_INT_ERR;
 800a46c:	68fb      	ldr	r3, [r7, #12]
 800a46e:	691b      	ldr	r3, [r3, #16]
 800a470:	2b00      	cmp	r3, #0
 800a472:	d102      	bne.n	800a47a <f_open+0x22e>
 800a474:	2302      	movs	r3, #2
 800a476:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
				}
			}
		}
#endif

		if (res == FR_OK) {
 800a47a:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800a47e:	2b00      	cmp	r3, #0
 800a480:	f040 80a3 	bne.w	800a5ca <f_open+0x37e>
				fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
				fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
			} else
#endif
			{
				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
 800a484:	697b      	ldr	r3, [r7, #20]
 800a486:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800a488:	4611      	mov	r1, r2
 800a48a:	4618      	mov	r0, r3
 800a48c:	f7fe fbac 	bl	8008be8 <ld_clust>
 800a490:	4602      	mov	r2, r0
 800a492:	68fb      	ldr	r3, [r7, #12]
 800a494:	609a      	str	r2, [r3, #8]
				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
 800a496:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a498:	331c      	adds	r3, #28
 800a49a:	4618      	mov	r0, r3
 800a49c:	f7fd fb86 	bl	8007bac <ld_dword>
 800a4a0:	4602      	mov	r2, r0
 800a4a2:	68fb      	ldr	r3, [r7, #12]
 800a4a4:	60da      	str	r2, [r3, #12]
			}
#if _USE_FASTSEEK
			fp->cltbl = 0;			/* Disable fast seek mode */
 800a4a6:	68fb      	ldr	r3, [r7, #12]
 800a4a8:	2200      	movs	r2, #0
 800a4aa:	62da      	str	r2, [r3, #44]	; 0x2c
#endif
			fp->obj.fs = fs;	 	/* Validate the file object */
 800a4ac:	697a      	ldr	r2, [r7, #20]
 800a4ae:	68fb      	ldr	r3, [r7, #12]
 800a4b0:	601a      	str	r2, [r3, #0]
			fp->obj.id = fs->id;
 800a4b2:	697b      	ldr	r3, [r7, #20]
 800a4b4:	88da      	ldrh	r2, [r3, #6]
 800a4b6:	68fb      	ldr	r3, [r7, #12]
 800a4b8:	809a      	strh	r2, [r3, #4]
			fp->flag = mode;		/* Set file access mode */
 800a4ba:	68fb      	ldr	r3, [r7, #12]
 800a4bc:	79fa      	ldrb	r2, [r7, #7]
 800a4be:	751a      	strb	r2, [r3, #20]
			fp->err = 0;			/* Clear error flag */
 800a4c0:	68fb      	ldr	r3, [r7, #12]
 800a4c2:	2200      	movs	r2, #0
 800a4c4:	755a      	strb	r2, [r3, #21]
			fp->sect = 0;			/* Invalidate current data sector */
 800a4c6:	68fb      	ldr	r3, [r7, #12]
 800a4c8:	2200      	movs	r2, #0
 800a4ca:	621a      	str	r2, [r3, #32]
			fp->fptr = 0;			/* Set file pointer top of the file */
 800a4cc:	68fb      	ldr	r3, [r7, #12]
 800a4ce:	2200      	movs	r2, #0
 800a4d0:	619a      	str	r2, [r3, #24]
#if !_FS_READONLY
#if !_FS_TINY
			mem_set(fp->buf, 0, _MAX_SS);	/* Clear sector buffer */
 800a4d2:	68fb      	ldr	r3, [r7, #12]
 800a4d4:	3330      	adds	r3, #48	; 0x30
 800a4d6:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800a4da:	2100      	movs	r1, #0
 800a4dc:	4618      	mov	r0, r3
 800a4de:	f7fd fbf0 	bl	8007cc2 <mem_set>
#endif
			if ((mode & FA_SEEKEND) && fp->obj.objsize > 0) {	/* Seek to end of file if FA_OPEN_APPEND is specified */
 800a4e2:	79fb      	ldrb	r3, [r7, #7]
 800a4e4:	f003 0320 	and.w	r3, r3, #32
 800a4e8:	2b00      	cmp	r3, #0
 800a4ea:	d06e      	beq.n	800a5ca <f_open+0x37e>
 800a4ec:	68fb      	ldr	r3, [r7, #12]
 800a4ee:	68db      	ldr	r3, [r3, #12]
 800a4f0:	2b00      	cmp	r3, #0
 800a4f2:	d06a      	beq.n	800a5ca <f_open+0x37e>
				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 800a4f4:	68fb      	ldr	r3, [r7, #12]
 800a4f6:	68da      	ldr	r2, [r3, #12]
 800a4f8:	68fb      	ldr	r3, [r7, #12]
 800a4fa:	619a      	str	r2, [r3, #24]
				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
 800a4fc:	697b      	ldr	r3, [r7, #20]
 800a4fe:	895b      	ldrh	r3, [r3, #10]
 800a500:	461a      	mov	r2, r3
 800a502:	697b      	ldr	r3, [r7, #20]
 800a504:	899b      	ldrh	r3, [r3, #12]
 800a506:	fb02 f303 	mul.w	r3, r2, r3
 800a50a:	653b      	str	r3, [r7, #80]	; 0x50
				clst = fp->obj.sclust;				/* Follow the cluster chain */
 800a50c:	68fb      	ldr	r3, [r7, #12]
 800a50e:	689b      	ldr	r3, [r3, #8]
 800a510:	663b      	str	r3, [r7, #96]	; 0x60
				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
 800a512:	68fb      	ldr	r3, [r7, #12]
 800a514:	68db      	ldr	r3, [r3, #12]
 800a516:	65fb      	str	r3, [r7, #92]	; 0x5c
 800a518:	e016      	b.n	800a548 <f_open+0x2fc>
					clst = get_fat(&fp->obj, clst);
 800a51a:	68fb      	ldr	r3, [r7, #12]
 800a51c:	6e39      	ldr	r1, [r7, #96]	; 0x60
 800a51e:	4618      	mov	r0, r3
 800a520:	f7fd fe99 	bl	8008256 <get_fat>
 800a524:	6638      	str	r0, [r7, #96]	; 0x60
					if (clst <= 1) res = FR_INT_ERR;
 800a526:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a528:	2b01      	cmp	r3, #1
 800a52a:	d802      	bhi.n	800a532 <f_open+0x2e6>
 800a52c:	2302      	movs	r3, #2
 800a52e:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 800a532:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a534:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800a538:	d102      	bne.n	800a540 <f_open+0x2f4>
 800a53a:	2301      	movs	r3, #1
 800a53c:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
 800a540:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800a542:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800a544:	1ad3      	subs	r3, r2, r3
 800a546:	65fb      	str	r3, [r7, #92]	; 0x5c
 800a548:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800a54c:	2b00      	cmp	r3, #0
 800a54e:	d103      	bne.n	800a558 <f_open+0x30c>
 800a550:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800a552:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800a554:	429a      	cmp	r2, r3
 800a556:	d8e0      	bhi.n	800a51a <f_open+0x2ce>
				}
				fp->clust = clst;
 800a558:	68fb      	ldr	r3, [r7, #12]
 800a55a:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800a55c:	61da      	str	r2, [r3, #28]
				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 800a55e:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800a562:	2b00      	cmp	r3, #0
 800a564:	d131      	bne.n	800a5ca <f_open+0x37e>
 800a566:	697b      	ldr	r3, [r7, #20]
 800a568:	899b      	ldrh	r3, [r3, #12]
 800a56a:	461a      	mov	r2, r3
 800a56c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800a56e:	fbb3 f1f2 	udiv	r1, r3, r2
 800a572:	fb01 f202 	mul.w	r2, r1, r2
 800a576:	1a9b      	subs	r3, r3, r2
 800a578:	2b00      	cmp	r3, #0
 800a57a:	d026      	beq.n	800a5ca <f_open+0x37e>
					if ((sc = clust2sect(fs, clst)) == 0) {
 800a57c:	697b      	ldr	r3, [r7, #20]
 800a57e:	6e39      	ldr	r1, [r7, #96]	; 0x60
 800a580:	4618      	mov	r0, r3
 800a582:	f7fd fe49 	bl	8008218 <clust2sect>
 800a586:	64f8      	str	r0, [r7, #76]	; 0x4c
 800a588:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800a58a:	2b00      	cmp	r3, #0
 800a58c:	d103      	bne.n	800a596 <f_open+0x34a>
						res = FR_INT_ERR;
 800a58e:	2302      	movs	r3, #2
 800a590:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 800a594:	e019      	b.n	800a5ca <f_open+0x37e>
					} else {
						fp->sect = sc + (DWORD)(ofs / SS(fs));
 800a596:	697b      	ldr	r3, [r7, #20]
 800a598:	899b      	ldrh	r3, [r3, #12]
 800a59a:	461a      	mov	r2, r3
 800a59c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800a59e:	fbb3 f2f2 	udiv	r2, r3, r2
 800a5a2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800a5a4:	441a      	add	r2, r3
 800a5a6:	68fb      	ldr	r3, [r7, #12]
 800a5a8:	621a      	str	r2, [r3, #32]
#if !_FS_TINY
						if (disk_read(fs->drv, fp->buf, fp->sect, 1) != RES_OK) res = FR_DISK_ERR;
 800a5aa:	697b      	ldr	r3, [r7, #20]
 800a5ac:	7858      	ldrb	r0, [r3, #1]
 800a5ae:	68fb      	ldr	r3, [r7, #12]
 800a5b0:	f103 0130 	add.w	r1, r3, #48	; 0x30
 800a5b4:	68fb      	ldr	r3, [r7, #12]
 800a5b6:	6a1a      	ldr	r2, [r3, #32]
 800a5b8:	2301      	movs	r3, #1
 800a5ba:	f7fd fa81 	bl	8007ac0 <disk_read>
 800a5be:	4603      	mov	r3, r0
 800a5c0:	2b00      	cmp	r3, #0
 800a5c2:	d002      	beq.n	800a5ca <f_open+0x37e>
 800a5c4:	2301      	movs	r3, #1
 800a5c6:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
		}

		FREE_NAMBUF();
	}

	if (res != FR_OK) fp->obj.fs = 0;	/* Invalidate file object on error */
 800a5ca:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800a5ce:	2b00      	cmp	r3, #0
 800a5d0:	d002      	beq.n	800a5d8 <f_open+0x38c>
 800a5d2:	68fb      	ldr	r3, [r7, #12]
 800a5d4:	2200      	movs	r2, #0
 800a5d6:	601a      	str	r2, [r3, #0]

	LEAVE_FF(fs, res);
 800a5d8:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
}
 800a5dc:	4618      	mov	r0, r3
 800a5de:	3768      	adds	r7, #104	; 0x68
 800a5e0:	46bd      	mov	sp, r7
 800a5e2:	bd80      	pop	{r7, pc}

0800a5e4 <f_read>:
	FIL* fp, 	/* Pointer to the file object */
	void* buff,	/* Pointer to data buffer */
	UINT btr,	/* Number of bytes to read */
	UINT* br	/* Pointer to number of bytes read */
)
{
 800a5e4:	b580      	push	{r7, lr}
 800a5e6:	b08e      	sub	sp, #56	; 0x38
 800a5e8:	af00      	add	r7, sp, #0
 800a5ea:	60f8      	str	r0, [r7, #12]
 800a5ec:	60b9      	str	r1, [r7, #8]
 800a5ee:	607a      	str	r2, [r7, #4]
 800a5f0:	603b      	str	r3, [r7, #0]
	FRESULT res;
	FATFS *fs;
	DWORD clst, sect;
	FSIZE_t remain;
	UINT rcnt, cc, csect;
	BYTE *rbuff = (BYTE*)buff;
 800a5f2:	68bb      	ldr	r3, [r7, #8]
 800a5f4:	627b      	str	r3, [r7, #36]	; 0x24


	*br = 0;	/* Clear read byte counter */
 800a5f6:	683b      	ldr	r3, [r7, #0]
 800a5f8:	2200      	movs	r2, #0
 800a5fa:	601a      	str	r2, [r3, #0]
	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
 800a5fc:	68fb      	ldr	r3, [r7, #12]
 800a5fe:	f107 0214 	add.w	r2, r7, #20
 800a602:	4611      	mov	r1, r2
 800a604:	4618      	mov	r0, r3
 800a606:	f7ff fda5 	bl	800a154 <validate>
 800a60a:	4603      	mov	r3, r0
 800a60c:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 800a610:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800a614:	2b00      	cmp	r3, #0
 800a616:	d107      	bne.n	800a628 <f_read+0x44>
 800a618:	68fb      	ldr	r3, [r7, #12]
 800a61a:	7d5b      	ldrb	r3, [r3, #21]
 800a61c:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 800a620:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800a624:	2b00      	cmp	r3, #0
 800a626:	d002      	beq.n	800a62e <f_read+0x4a>
 800a628:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800a62c:	e135      	b.n	800a89a <f_read+0x2b6>
	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 800a62e:	68fb      	ldr	r3, [r7, #12]
 800a630:	7d1b      	ldrb	r3, [r3, #20]
 800a632:	f003 0301 	and.w	r3, r3, #1
 800a636:	2b00      	cmp	r3, #0
 800a638:	d101      	bne.n	800a63e <f_read+0x5a>
 800a63a:	2307      	movs	r3, #7
 800a63c:	e12d      	b.n	800a89a <f_read+0x2b6>
	remain = fp->obj.objsize - fp->fptr;
 800a63e:	68fb      	ldr	r3, [r7, #12]
 800a640:	68da      	ldr	r2, [r3, #12]
 800a642:	68fb      	ldr	r3, [r7, #12]
 800a644:	699b      	ldr	r3, [r3, #24]
 800a646:	1ad3      	subs	r3, r2, r3
 800a648:	623b      	str	r3, [r7, #32]
	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
 800a64a:	687a      	ldr	r2, [r7, #4]
 800a64c:	6a3b      	ldr	r3, [r7, #32]
 800a64e:	429a      	cmp	r2, r3
 800a650:	f240 811e 	bls.w	800a890 <f_read+0x2ac>
 800a654:	6a3b      	ldr	r3, [r7, #32]
 800a656:	607b      	str	r3, [r7, #4]

	for ( ;  btr;								/* Repeat until all data read */
 800a658:	e11a      	b.n	800a890 <f_read+0x2ac>
		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 800a65a:	68fb      	ldr	r3, [r7, #12]
 800a65c:	699b      	ldr	r3, [r3, #24]
 800a65e:	697a      	ldr	r2, [r7, #20]
 800a660:	8992      	ldrh	r2, [r2, #12]
 800a662:	fbb3 f1f2 	udiv	r1, r3, r2
 800a666:	fb01 f202 	mul.w	r2, r1, r2
 800a66a:	1a9b      	subs	r3, r3, r2
 800a66c:	2b00      	cmp	r3, #0
 800a66e:	f040 80d5 	bne.w	800a81c <f_read+0x238>
			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
 800a672:	68fb      	ldr	r3, [r7, #12]
 800a674:	699b      	ldr	r3, [r3, #24]
 800a676:	697a      	ldr	r2, [r7, #20]
 800a678:	8992      	ldrh	r2, [r2, #12]
 800a67a:	fbb3 f3f2 	udiv	r3, r3, r2
 800a67e:	697a      	ldr	r2, [r7, #20]
 800a680:	8952      	ldrh	r2, [r2, #10]
 800a682:	3a01      	subs	r2, #1
 800a684:	4013      	ands	r3, r2
 800a686:	61fb      	str	r3, [r7, #28]
			if (csect == 0) {					/* On the cluster boundary? */
 800a688:	69fb      	ldr	r3, [r7, #28]
 800a68a:	2b00      	cmp	r3, #0
 800a68c:	d12f      	bne.n	800a6ee <f_read+0x10a>
				if (fp->fptr == 0) {			/* On the top of the file? */
 800a68e:	68fb      	ldr	r3, [r7, #12]
 800a690:	699b      	ldr	r3, [r3, #24]
 800a692:	2b00      	cmp	r3, #0
 800a694:	d103      	bne.n	800a69e <f_read+0xba>
					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
 800a696:	68fb      	ldr	r3, [r7, #12]
 800a698:	689b      	ldr	r3, [r3, #8]
 800a69a:	633b      	str	r3, [r7, #48]	; 0x30
 800a69c:	e013      	b.n	800a6c6 <f_read+0xe2>
				} else {						/* Middle or end of the file */
#if _USE_FASTSEEK
					if (fp->cltbl) {
 800a69e:	68fb      	ldr	r3, [r7, #12]
 800a6a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a6a2:	2b00      	cmp	r3, #0
 800a6a4:	d007      	beq.n	800a6b6 <f_read+0xd2>
						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 800a6a6:	68fb      	ldr	r3, [r7, #12]
 800a6a8:	699b      	ldr	r3, [r3, #24]
 800a6aa:	4619      	mov	r1, r3
 800a6ac:	68f8      	ldr	r0, [r7, #12]
 800a6ae:	f7fe f8bd 	bl	800882c <clmt_clust>
 800a6b2:	6338      	str	r0, [r7, #48]	; 0x30
 800a6b4:	e007      	b.n	800a6c6 <f_read+0xe2>
					} else
#endif
					{
						clst = get_fat(&fp->obj, fp->clust);	/* Follow cluster chain on the FAT */
 800a6b6:	68fa      	ldr	r2, [r7, #12]
 800a6b8:	68fb      	ldr	r3, [r7, #12]
 800a6ba:	69db      	ldr	r3, [r3, #28]
 800a6bc:	4619      	mov	r1, r3
 800a6be:	4610      	mov	r0, r2
 800a6c0:	f7fd fdc9 	bl	8008256 <get_fat>
 800a6c4:	6338      	str	r0, [r7, #48]	; 0x30
					}
				}
				if (clst < 2) ABORT(fs, FR_INT_ERR);
 800a6c6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a6c8:	2b01      	cmp	r3, #1
 800a6ca:	d804      	bhi.n	800a6d6 <f_read+0xf2>
 800a6cc:	68fb      	ldr	r3, [r7, #12]
 800a6ce:	2202      	movs	r2, #2
 800a6d0:	755a      	strb	r2, [r3, #21]
 800a6d2:	2302      	movs	r3, #2
 800a6d4:	e0e1      	b.n	800a89a <f_read+0x2b6>
				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 800a6d6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a6d8:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800a6dc:	d104      	bne.n	800a6e8 <f_read+0x104>
 800a6de:	68fb      	ldr	r3, [r7, #12]
 800a6e0:	2201      	movs	r2, #1
 800a6e2:	755a      	strb	r2, [r3, #21]
 800a6e4:	2301      	movs	r3, #1
 800a6e6:	e0d8      	b.n	800a89a <f_read+0x2b6>
				fp->clust = clst;				/* Update current cluster */
 800a6e8:	68fb      	ldr	r3, [r7, #12]
 800a6ea:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800a6ec:	61da      	str	r2, [r3, #28]
			}
			sect = clust2sect(fs, fp->clust);	/* Get current sector */
 800a6ee:	697a      	ldr	r2, [r7, #20]
 800a6f0:	68fb      	ldr	r3, [r7, #12]
 800a6f2:	69db      	ldr	r3, [r3, #28]
 800a6f4:	4619      	mov	r1, r3
 800a6f6:	4610      	mov	r0, r2
 800a6f8:	f7fd fd8e 	bl	8008218 <clust2sect>
 800a6fc:	61b8      	str	r0, [r7, #24]
			if (!sect) ABORT(fs, FR_INT_ERR);
 800a6fe:	69bb      	ldr	r3, [r7, #24]
 800a700:	2b00      	cmp	r3, #0
 800a702:	d104      	bne.n	800a70e <f_read+0x12a>
 800a704:	68fb      	ldr	r3, [r7, #12]
 800a706:	2202      	movs	r2, #2
 800a708:	755a      	strb	r2, [r3, #21]
 800a70a:	2302      	movs	r3, #2
 800a70c:	e0c5      	b.n	800a89a <f_read+0x2b6>
			sect += csect;
 800a70e:	69ba      	ldr	r2, [r7, #24]
 800a710:	69fb      	ldr	r3, [r7, #28]
 800a712:	4413      	add	r3, r2
 800a714:	61bb      	str	r3, [r7, #24]
			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
 800a716:	697b      	ldr	r3, [r7, #20]
 800a718:	899b      	ldrh	r3, [r3, #12]
 800a71a:	461a      	mov	r2, r3
 800a71c:	687b      	ldr	r3, [r7, #4]
 800a71e:	fbb3 f3f2 	udiv	r3, r3, r2
 800a722:	62bb      	str	r3, [r7, #40]	; 0x28
			if (cc) {							/* Read maximum contiguous sectors directly */
 800a724:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a726:	2b00      	cmp	r3, #0
 800a728:	d041      	beq.n	800a7ae <f_read+0x1ca>
				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 800a72a:	69fa      	ldr	r2, [r7, #28]
 800a72c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a72e:	4413      	add	r3, r2
 800a730:	697a      	ldr	r2, [r7, #20]
 800a732:	8952      	ldrh	r2, [r2, #10]
 800a734:	4293      	cmp	r3, r2
 800a736:	d905      	bls.n	800a744 <f_read+0x160>
					cc = fs->csize - csect;
 800a738:	697b      	ldr	r3, [r7, #20]
 800a73a:	895b      	ldrh	r3, [r3, #10]
 800a73c:	461a      	mov	r2, r3
 800a73e:	69fb      	ldr	r3, [r7, #28]
 800a740:	1ad3      	subs	r3, r2, r3
 800a742:	62bb      	str	r3, [r7, #40]	; 0x28
				}
				if (disk_read(fs->drv, rbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
 800a744:	697b      	ldr	r3, [r7, #20]
 800a746:	7858      	ldrb	r0, [r3, #1]
 800a748:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a74a:	69ba      	ldr	r2, [r7, #24]
 800a74c:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800a74e:	f7fd f9b7 	bl	8007ac0 <disk_read>
 800a752:	4603      	mov	r3, r0
 800a754:	2b00      	cmp	r3, #0
 800a756:	d004      	beq.n	800a762 <f_read+0x17e>
 800a758:	68fb      	ldr	r3, [r7, #12]
 800a75a:	2201      	movs	r2, #1
 800a75c:	755a      	strb	r2, [r3, #21]
 800a75e:	2301      	movs	r3, #1
 800a760:	e09b      	b.n	800a89a <f_read+0x2b6>
#if _FS_TINY
				if (fs->wflag && fs->winsect - sect < cc) {
					mem_cpy(rbuff + ((fs->winsect - sect) * SS(fs)), fs->win, SS(fs));
				}
#else
				if ((fp->flag & FA_DIRTY) && fp->sect - sect < cc) {
 800a762:	68fb      	ldr	r3, [r7, #12]
 800a764:	7d1b      	ldrb	r3, [r3, #20]
 800a766:	b25b      	sxtb	r3, r3
 800a768:	2b00      	cmp	r3, #0
 800a76a:	da18      	bge.n	800a79e <f_read+0x1ba>
 800a76c:	68fb      	ldr	r3, [r7, #12]
 800a76e:	6a1a      	ldr	r2, [r3, #32]
 800a770:	69bb      	ldr	r3, [r7, #24]
 800a772:	1ad3      	subs	r3, r2, r3
 800a774:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800a776:	429a      	cmp	r2, r3
 800a778:	d911      	bls.n	800a79e <f_read+0x1ba>
					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 800a77a:	68fb      	ldr	r3, [r7, #12]
 800a77c:	6a1a      	ldr	r2, [r3, #32]
 800a77e:	69bb      	ldr	r3, [r7, #24]
 800a780:	1ad3      	subs	r3, r2, r3
 800a782:	697a      	ldr	r2, [r7, #20]
 800a784:	8992      	ldrh	r2, [r2, #12]
 800a786:	fb02 f303 	mul.w	r3, r2, r3
 800a78a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a78c:	18d0      	adds	r0, r2, r3
 800a78e:	68fb      	ldr	r3, [r7, #12]
 800a790:	f103 0130 	add.w	r1, r3, #48	; 0x30
 800a794:	697b      	ldr	r3, [r7, #20]
 800a796:	899b      	ldrh	r3, [r3, #12]
 800a798:	461a      	mov	r2, r3
 800a79a:	f7fd fa71 	bl	8007c80 <mem_cpy>
				}
#endif
#endif
				rcnt = SS(fs) * cc;				/* Number of bytes transferred */
 800a79e:	697b      	ldr	r3, [r7, #20]
 800a7a0:	899b      	ldrh	r3, [r3, #12]
 800a7a2:	461a      	mov	r2, r3
 800a7a4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a7a6:	fb02 f303 	mul.w	r3, r2, r3
 800a7aa:	62fb      	str	r3, [r7, #44]	; 0x2c
				continue;
 800a7ac:	e05c      	b.n	800a868 <f_read+0x284>
			}
#if !_FS_TINY
			if (fp->sect != sect) {			/* Load data sector if not in cache */
 800a7ae:	68fb      	ldr	r3, [r7, #12]
 800a7b0:	6a1b      	ldr	r3, [r3, #32]
 800a7b2:	69ba      	ldr	r2, [r7, #24]
 800a7b4:	429a      	cmp	r2, r3
 800a7b6:	d02e      	beq.n	800a816 <f_read+0x232>
#if !_FS_READONLY
				if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
 800a7b8:	68fb      	ldr	r3, [r7, #12]
 800a7ba:	7d1b      	ldrb	r3, [r3, #20]
 800a7bc:	b25b      	sxtb	r3, r3
 800a7be:	2b00      	cmp	r3, #0
 800a7c0:	da18      	bge.n	800a7f4 <f_read+0x210>
					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 800a7c2:	697b      	ldr	r3, [r7, #20]
 800a7c4:	7858      	ldrb	r0, [r3, #1]
 800a7c6:	68fb      	ldr	r3, [r7, #12]
 800a7c8:	f103 0130 	add.w	r1, r3, #48	; 0x30
 800a7cc:	68fb      	ldr	r3, [r7, #12]
 800a7ce:	6a1a      	ldr	r2, [r3, #32]
 800a7d0:	2301      	movs	r3, #1
 800a7d2:	f7fd f995 	bl	8007b00 <disk_write>
 800a7d6:	4603      	mov	r3, r0
 800a7d8:	2b00      	cmp	r3, #0
 800a7da:	d004      	beq.n	800a7e6 <f_read+0x202>
 800a7dc:	68fb      	ldr	r3, [r7, #12]
 800a7de:	2201      	movs	r2, #1
 800a7e0:	755a      	strb	r2, [r3, #21]
 800a7e2:	2301      	movs	r3, #1
 800a7e4:	e059      	b.n	800a89a <f_read+0x2b6>
					fp->flag &= (BYTE)~FA_DIRTY;
 800a7e6:	68fb      	ldr	r3, [r7, #12]
 800a7e8:	7d1b      	ldrb	r3, [r3, #20]
 800a7ea:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a7ee:	b2da      	uxtb	r2, r3
 800a7f0:	68fb      	ldr	r3, [r7, #12]
 800a7f2:	751a      	strb	r2, [r3, #20]
				}
#endif
				if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK)	ABORT(fs, FR_DISK_ERR);	/* Fill sector cache */
 800a7f4:	697b      	ldr	r3, [r7, #20]
 800a7f6:	7858      	ldrb	r0, [r3, #1]
 800a7f8:	68fb      	ldr	r3, [r7, #12]
 800a7fa:	f103 0130 	add.w	r1, r3, #48	; 0x30
 800a7fe:	2301      	movs	r3, #1
 800a800:	69ba      	ldr	r2, [r7, #24]
 800a802:	f7fd f95d 	bl	8007ac0 <disk_read>
 800a806:	4603      	mov	r3, r0
 800a808:	2b00      	cmp	r3, #0
 800a80a:	d004      	beq.n	800a816 <f_read+0x232>
 800a80c:	68fb      	ldr	r3, [r7, #12]
 800a80e:	2201      	movs	r2, #1
 800a810:	755a      	strb	r2, [r3, #21]
 800a812:	2301      	movs	r3, #1
 800a814:	e041      	b.n	800a89a <f_read+0x2b6>
			}
#endif
			fp->sect = sect;
 800a816:	68fb      	ldr	r3, [r7, #12]
 800a818:	69ba      	ldr	r2, [r7, #24]
 800a81a:	621a      	str	r2, [r3, #32]
		}
		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
 800a81c:	697b      	ldr	r3, [r7, #20]
 800a81e:	899b      	ldrh	r3, [r3, #12]
 800a820:	4618      	mov	r0, r3
 800a822:	68fb      	ldr	r3, [r7, #12]
 800a824:	699b      	ldr	r3, [r3, #24]
 800a826:	697a      	ldr	r2, [r7, #20]
 800a828:	8992      	ldrh	r2, [r2, #12]
 800a82a:	fbb3 f1f2 	udiv	r1, r3, r2
 800a82e:	fb01 f202 	mul.w	r2, r1, r2
 800a832:	1a9b      	subs	r3, r3, r2
 800a834:	1ac3      	subs	r3, r0, r3
 800a836:	62fb      	str	r3, [r7, #44]	; 0x2c
		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
 800a838:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800a83a:	687b      	ldr	r3, [r7, #4]
 800a83c:	429a      	cmp	r2, r3
 800a83e:	d901      	bls.n	800a844 <f_read+0x260>
 800a840:	687b      	ldr	r3, [r7, #4]
 800a842:	62fb      	str	r3, [r7, #44]	; 0x2c
#if _FS_TINY
		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
		mem_cpy(rbuff, fs->win + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
#else
		mem_cpy(rbuff, fp->buf + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
 800a844:	68fb      	ldr	r3, [r7, #12]
 800a846:	f103 0130 	add.w	r1, r3, #48	; 0x30
 800a84a:	68fb      	ldr	r3, [r7, #12]
 800a84c:	699b      	ldr	r3, [r3, #24]
 800a84e:	697a      	ldr	r2, [r7, #20]
 800a850:	8992      	ldrh	r2, [r2, #12]
 800a852:	fbb3 f0f2 	udiv	r0, r3, r2
 800a856:	fb00 f202 	mul.w	r2, r0, r2
 800a85a:	1a9b      	subs	r3, r3, r2
 800a85c:	440b      	add	r3, r1
 800a85e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800a860:	4619      	mov	r1, r3
 800a862:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800a864:	f7fd fa0c 	bl	8007c80 <mem_cpy>
		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 800a868:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a86a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a86c:	4413      	add	r3, r2
 800a86e:	627b      	str	r3, [r7, #36]	; 0x24
 800a870:	68fb      	ldr	r3, [r7, #12]
 800a872:	699a      	ldr	r2, [r3, #24]
 800a874:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a876:	441a      	add	r2, r3
 800a878:	68fb      	ldr	r3, [r7, #12]
 800a87a:	619a      	str	r2, [r3, #24]
 800a87c:	683b      	ldr	r3, [r7, #0]
 800a87e:	681a      	ldr	r2, [r3, #0]
 800a880:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a882:	441a      	add	r2, r3
 800a884:	683b      	ldr	r3, [r7, #0]
 800a886:	601a      	str	r2, [r3, #0]
 800a888:	687a      	ldr	r2, [r7, #4]
 800a88a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a88c:	1ad3      	subs	r3, r2, r3
 800a88e:	607b      	str	r3, [r7, #4]
	for ( ;  btr;								/* Repeat until all data read */
 800a890:	687b      	ldr	r3, [r7, #4]
 800a892:	2b00      	cmp	r3, #0
 800a894:	f47f aee1 	bne.w	800a65a <f_read+0x76>
#endif
	}

	LEAVE_FF(fs, FR_OK);
 800a898:	2300      	movs	r3, #0
}
 800a89a:	4618      	mov	r0, r3
 800a89c:	3738      	adds	r7, #56	; 0x38
 800a89e:	46bd      	mov	sp, r7
 800a8a0:	bd80      	pop	{r7, pc}

0800a8a2 <f_sync>:
/*-----------------------------------------------------------------------*/

FRESULT f_sync (
	FIL* fp		/* Pointer to the file object */
)
{
 800a8a2:	b580      	push	{r7, lr}
 800a8a4:	b086      	sub	sp, #24
 800a8a6:	af00      	add	r7, sp, #0
 800a8a8:	6078      	str	r0, [r7, #4]
#if _FS_EXFAT
	DIR dj;
	DEF_NAMBUF
#endif

	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
 800a8aa:	687b      	ldr	r3, [r7, #4]
 800a8ac:	f107 0208 	add.w	r2, r7, #8
 800a8b0:	4611      	mov	r1, r2
 800a8b2:	4618      	mov	r0, r3
 800a8b4:	f7ff fc4e 	bl	800a154 <validate>
 800a8b8:	4603      	mov	r3, r0
 800a8ba:	75fb      	strb	r3, [r7, #23]
	if (res == FR_OK) {
 800a8bc:	7dfb      	ldrb	r3, [r7, #23]
 800a8be:	2b00      	cmp	r3, #0
 800a8c0:	d168      	bne.n	800a994 <f_sync+0xf2>
		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
 800a8c2:	687b      	ldr	r3, [r7, #4]
 800a8c4:	7d1b      	ldrb	r3, [r3, #20]
 800a8c6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a8ca:	2b00      	cmp	r3, #0
 800a8cc:	d062      	beq.n	800a994 <f_sync+0xf2>
#if !_FS_TINY
			if (fp->flag & FA_DIRTY) {	/* Write-back cached data if needed */
 800a8ce:	687b      	ldr	r3, [r7, #4]
 800a8d0:	7d1b      	ldrb	r3, [r3, #20]
 800a8d2:	b25b      	sxtb	r3, r3
 800a8d4:	2b00      	cmp	r3, #0
 800a8d6:	da15      	bge.n	800a904 <f_sync+0x62>
				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
 800a8d8:	68bb      	ldr	r3, [r7, #8]
 800a8da:	7858      	ldrb	r0, [r3, #1]
 800a8dc:	687b      	ldr	r3, [r7, #4]
 800a8de:	f103 0130 	add.w	r1, r3, #48	; 0x30
 800a8e2:	687b      	ldr	r3, [r7, #4]
 800a8e4:	6a1a      	ldr	r2, [r3, #32]
 800a8e6:	2301      	movs	r3, #1
 800a8e8:	f7fd f90a 	bl	8007b00 <disk_write>
 800a8ec:	4603      	mov	r3, r0
 800a8ee:	2b00      	cmp	r3, #0
 800a8f0:	d001      	beq.n	800a8f6 <f_sync+0x54>
 800a8f2:	2301      	movs	r3, #1
 800a8f4:	e04f      	b.n	800a996 <f_sync+0xf4>
				fp->flag &= (BYTE)~FA_DIRTY;
 800a8f6:	687b      	ldr	r3, [r7, #4]
 800a8f8:	7d1b      	ldrb	r3, [r3, #20]
 800a8fa:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a8fe:	b2da      	uxtb	r2, r3
 800a900:	687b      	ldr	r3, [r7, #4]
 800a902:	751a      	strb	r2, [r3, #20]
			}
#endif
			/* Update the directory entry */
			tm = GET_FATTIME();				/* Modified time */
 800a904:	f7fd f83a 	bl	800797c <get_fattime>
 800a908:	6138      	str	r0, [r7, #16]
					FREE_NAMBUF();
				}
			} else
#endif
			{
				res = move_window(fs, fp->dir_sect);
 800a90a:	68ba      	ldr	r2, [r7, #8]
 800a90c:	687b      	ldr	r3, [r7, #4]
 800a90e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a910:	4619      	mov	r1, r3
 800a912:	4610      	mov	r0, r2
 800a914:	f7fd fbe2 	bl	80080dc <move_window>
 800a918:	4603      	mov	r3, r0
 800a91a:	75fb      	strb	r3, [r7, #23]
				if (res == FR_OK) {
 800a91c:	7dfb      	ldrb	r3, [r7, #23]
 800a91e:	2b00      	cmp	r3, #0
 800a920:	d138      	bne.n	800a994 <f_sync+0xf2>
					dir = fp->dir_ptr;
 800a922:	687b      	ldr	r3, [r7, #4]
 800a924:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a926:	60fb      	str	r3, [r7, #12]
					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
 800a928:	68fb      	ldr	r3, [r7, #12]
 800a92a:	330b      	adds	r3, #11
 800a92c:	781a      	ldrb	r2, [r3, #0]
 800a92e:	68fb      	ldr	r3, [r7, #12]
 800a930:	330b      	adds	r3, #11
 800a932:	f042 0220 	orr.w	r2, r2, #32
 800a936:	b2d2      	uxtb	r2, r2
 800a938:	701a      	strb	r2, [r3, #0]
					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
 800a93a:	687b      	ldr	r3, [r7, #4]
 800a93c:	6818      	ldr	r0, [r3, #0]
 800a93e:	687b      	ldr	r3, [r7, #4]
 800a940:	689b      	ldr	r3, [r3, #8]
 800a942:	461a      	mov	r2, r3
 800a944:	68f9      	ldr	r1, [r7, #12]
 800a946:	f7fe f96e 	bl	8008c26 <st_clust>
					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
 800a94a:	68fb      	ldr	r3, [r7, #12]
 800a94c:	f103 021c 	add.w	r2, r3, #28
 800a950:	687b      	ldr	r3, [r7, #4]
 800a952:	68db      	ldr	r3, [r3, #12]
 800a954:	4619      	mov	r1, r3
 800a956:	4610      	mov	r0, r2
 800a958:	f7fd f966 	bl	8007c28 <st_dword>
					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
 800a95c:	68fb      	ldr	r3, [r7, #12]
 800a95e:	3316      	adds	r3, #22
 800a960:	6939      	ldr	r1, [r7, #16]
 800a962:	4618      	mov	r0, r3
 800a964:	f7fd f960 	bl	8007c28 <st_dword>
					st_word(dir + DIR_LstAccDate, 0);
 800a968:	68fb      	ldr	r3, [r7, #12]
 800a96a:	3312      	adds	r3, #18
 800a96c:	2100      	movs	r1, #0
 800a96e:	4618      	mov	r0, r3
 800a970:	f7fd f93f 	bl	8007bf2 <st_word>
					fs->wflag = 1;
 800a974:	68bb      	ldr	r3, [r7, #8]
 800a976:	2201      	movs	r2, #1
 800a978:	70da      	strb	r2, [r3, #3]
					res = sync_fs(fs);					/* Restore it to the directory */
 800a97a:	68bb      	ldr	r3, [r7, #8]
 800a97c:	4618      	mov	r0, r3
 800a97e:	f7fd fbdb 	bl	8008138 <sync_fs>
 800a982:	4603      	mov	r3, r0
 800a984:	75fb      	strb	r3, [r7, #23]
					fp->flag &= (BYTE)~FA_MODIFIED;
 800a986:	687b      	ldr	r3, [r7, #4]
 800a988:	7d1b      	ldrb	r3, [r3, #20]
 800a98a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a98e:	b2da      	uxtb	r2, r3
 800a990:	687b      	ldr	r3, [r7, #4]
 800a992:	751a      	strb	r2, [r3, #20]
				}
			}
		}
	}

	LEAVE_FF(fs, res);
 800a994:	7dfb      	ldrb	r3, [r7, #23]
}
 800a996:	4618      	mov	r0, r3
 800a998:	3718      	adds	r7, #24
 800a99a:	46bd      	mov	sp, r7
 800a99c:	bd80      	pop	{r7, pc}

0800a99e <f_close>:
/*-----------------------------------------------------------------------*/

FRESULT f_close (
	FIL* fp		/* Pointer to the file object to be closed */
)
{
 800a99e:	b580      	push	{r7, lr}
 800a9a0:	b084      	sub	sp, #16
 800a9a2:	af00      	add	r7, sp, #0
 800a9a4:	6078      	str	r0, [r7, #4]
	FRESULT res;
	FATFS *fs;

#if !_FS_READONLY
	res = f_sync(fp);					/* Flush cached data */
 800a9a6:	6878      	ldr	r0, [r7, #4]
 800a9a8:	f7ff ff7b 	bl	800a8a2 <f_sync>
 800a9ac:	4603      	mov	r3, r0
 800a9ae:	73fb      	strb	r3, [r7, #15]
	if (res == FR_OK)
 800a9b0:	7bfb      	ldrb	r3, [r7, #15]
 800a9b2:	2b00      	cmp	r3, #0
 800a9b4:	d118      	bne.n	800a9e8 <f_close+0x4a>
#endif
	{
		res = validate(&fp->obj, &fs);	/* Lock volume */
 800a9b6:	687b      	ldr	r3, [r7, #4]
 800a9b8:	f107 0208 	add.w	r2, r7, #8
 800a9bc:	4611      	mov	r1, r2
 800a9be:	4618      	mov	r0, r3
 800a9c0:	f7ff fbc8 	bl	800a154 <validate>
 800a9c4:	4603      	mov	r3, r0
 800a9c6:	73fb      	strb	r3, [r7, #15]
		if (res == FR_OK) {
 800a9c8:	7bfb      	ldrb	r3, [r7, #15]
 800a9ca:	2b00      	cmp	r3, #0
 800a9cc:	d10c      	bne.n	800a9e8 <f_close+0x4a>
#if _FS_LOCK != 0
			res = dec_lock(fp->obj.lockid);	/* Decrement file open counter */
 800a9ce:	687b      	ldr	r3, [r7, #4]
 800a9d0:	691b      	ldr	r3, [r3, #16]
 800a9d2:	4618      	mov	r0, r3
 800a9d4:	f7fd fade 	bl	8007f94 <dec_lock>
 800a9d8:	4603      	mov	r3, r0
 800a9da:	73fb      	strb	r3, [r7, #15]
			if (res == FR_OK)
 800a9dc:	7bfb      	ldrb	r3, [r7, #15]
 800a9de:	2b00      	cmp	r3, #0
 800a9e0:	d102      	bne.n	800a9e8 <f_close+0x4a>
#endif
			{
				fp->obj.fs = 0;			/* Invalidate file object */
 800a9e2:	687b      	ldr	r3, [r7, #4]
 800a9e4:	2200      	movs	r2, #0
 800a9e6:	601a      	str	r2, [r3, #0]
#if _FS_REENTRANT
			unlock_fs(fs, FR_OK);		/* Unlock volume */
#endif
		}
	}
	return res;
 800a9e8:	7bfb      	ldrb	r3, [r7, #15]
}
 800a9ea:	4618      	mov	r0, r3
 800a9ec:	3710      	adds	r7, #16
 800a9ee:	46bd      	mov	sp, r7
 800a9f0:	bd80      	pop	{r7, pc}

0800a9f2 <f_opendir>:

FRESULT f_opendir (
	DIR* dp,			/* Pointer to directory object to create */
	const TCHAR* path	/* Pointer to the directory path */
)
{
 800a9f2:	b580      	push	{r7, lr}
 800a9f4:	b086      	sub	sp, #24
 800a9f6:	af00      	add	r7, sp, #0
 800a9f8:	6078      	str	r0, [r7, #4]
 800a9fa:	6039      	str	r1, [r7, #0]
	FATFS *fs;
	_FDID *obj;
	DEF_NAMBUF


	if (!dp) return FR_INVALID_OBJECT;
 800a9fc:	687b      	ldr	r3, [r7, #4]
 800a9fe:	2b00      	cmp	r3, #0
 800aa00:	d101      	bne.n	800aa06 <f_opendir+0x14>
 800aa02:	2309      	movs	r3, #9
 800aa04:	e064      	b.n	800aad0 <f_opendir+0xde>

	/* Get logical drive */
	obj = &dp->obj;
 800aa06:	687b      	ldr	r3, [r7, #4]
 800aa08:	613b      	str	r3, [r7, #16]
	res = find_volume(&path, &fs, 0);
 800aa0a:	f107 010c 	add.w	r1, r7, #12
 800aa0e:	463b      	mov	r3, r7
 800aa10:	2200      	movs	r2, #0
 800aa12:	4618      	mov	r0, r3
 800aa14:	f7ff f918 	bl	8009c48 <find_volume>
 800aa18:	4603      	mov	r3, r0
 800aa1a:	75fb      	strb	r3, [r7, #23]
	if (res == FR_OK) {
 800aa1c:	7dfb      	ldrb	r3, [r7, #23]
 800aa1e:	2b00      	cmp	r3, #0
 800aa20:	d14f      	bne.n	800aac2 <f_opendir+0xd0>
		obj->fs = fs;
 800aa22:	68fa      	ldr	r2, [r7, #12]
 800aa24:	693b      	ldr	r3, [r7, #16]
 800aa26:	601a      	str	r2, [r3, #0]
		INIT_NAMBUF(fs);
		res = follow_path(dp, path);			/* Follow the path to the directory */
 800aa28:	683b      	ldr	r3, [r7, #0]
 800aa2a:	4619      	mov	r1, r3
 800aa2c:	6878      	ldr	r0, [r7, #4]
 800aa2e:	f7fe fffb 	bl	8009a28 <follow_path>
 800aa32:	4603      	mov	r3, r0
 800aa34:	75fb      	strb	r3, [r7, #23]
		if (res == FR_OK) {						/* Follow completed */
 800aa36:	7dfb      	ldrb	r3, [r7, #23]
 800aa38:	2b00      	cmp	r3, #0
 800aa3a:	d13d      	bne.n	800aab8 <f_opendir+0xc6>
			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
 800aa3c:	687b      	ldr	r3, [r7, #4]
 800aa3e:	f893 302f 	ldrb.w	r3, [r3, #47]	; 0x2f
 800aa42:	b25b      	sxtb	r3, r3
 800aa44:	2b00      	cmp	r3, #0
 800aa46:	db12      	blt.n	800aa6e <f_opendir+0x7c>
				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
 800aa48:	693b      	ldr	r3, [r7, #16]
 800aa4a:	799b      	ldrb	r3, [r3, #6]
 800aa4c:	f003 0310 	and.w	r3, r3, #16
 800aa50:	2b00      	cmp	r3, #0
 800aa52:	d00a      	beq.n	800aa6a <f_opendir+0x78>
						obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
						obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
					} else
#endif
					{
						obj->sclust = ld_clust(fs, dp->dir);	/* Get object allocation info */
 800aa54:	68fa      	ldr	r2, [r7, #12]
 800aa56:	687b      	ldr	r3, [r7, #4]
 800aa58:	6a1b      	ldr	r3, [r3, #32]
 800aa5a:	4619      	mov	r1, r3
 800aa5c:	4610      	mov	r0, r2
 800aa5e:	f7fe f8c3 	bl	8008be8 <ld_clust>
 800aa62:	4602      	mov	r2, r0
 800aa64:	693b      	ldr	r3, [r7, #16]
 800aa66:	609a      	str	r2, [r3, #8]
 800aa68:	e001      	b.n	800aa6e <f_opendir+0x7c>
					}
				} else {						/* This object is a file */
					res = FR_NO_PATH;
 800aa6a:	2305      	movs	r3, #5
 800aa6c:	75fb      	strb	r3, [r7, #23]
				}
			}
			if (res == FR_OK) {
 800aa6e:	7dfb      	ldrb	r3, [r7, #23]
 800aa70:	2b00      	cmp	r3, #0
 800aa72:	d121      	bne.n	800aab8 <f_opendir+0xc6>
				obj->id = fs->id;
 800aa74:	68fb      	ldr	r3, [r7, #12]
 800aa76:	88da      	ldrh	r2, [r3, #6]
 800aa78:	693b      	ldr	r3, [r7, #16]
 800aa7a:	809a      	strh	r2, [r3, #4]
				res = dir_sdi(dp, 0);			/* Rewind directory */
 800aa7c:	2100      	movs	r1, #0
 800aa7e:	6878      	ldr	r0, [r7, #4]
 800aa80:	f7fd ff0c 	bl	800889c <dir_sdi>
 800aa84:	4603      	mov	r3, r0
 800aa86:	75fb      	strb	r3, [r7, #23]
#if _FS_LOCK != 0
				if (res == FR_OK) {
 800aa88:	7dfb      	ldrb	r3, [r7, #23]
 800aa8a:	2b00      	cmp	r3, #0
 800aa8c:	d114      	bne.n	800aab8 <f_opendir+0xc6>
					if (obj->sclust) {
 800aa8e:	693b      	ldr	r3, [r7, #16]
 800aa90:	689b      	ldr	r3, [r3, #8]
 800aa92:	2b00      	cmp	r3, #0
 800aa94:	d00d      	beq.n	800aab2 <f_opendir+0xc0>
						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
 800aa96:	2100      	movs	r1, #0
 800aa98:	6878      	ldr	r0, [r7, #4]
 800aa9a:	f7fd f9ed 	bl	8007e78 <inc_lock>
 800aa9e:	4602      	mov	r2, r0
 800aaa0:	693b      	ldr	r3, [r7, #16]
 800aaa2:	611a      	str	r2, [r3, #16]
						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
 800aaa4:	693b      	ldr	r3, [r7, #16]
 800aaa6:	691b      	ldr	r3, [r3, #16]
 800aaa8:	2b00      	cmp	r3, #0
 800aaaa:	d105      	bne.n	800aab8 <f_opendir+0xc6>
 800aaac:	2312      	movs	r3, #18
 800aaae:	75fb      	strb	r3, [r7, #23]
 800aab0:	e002      	b.n	800aab8 <f_opendir+0xc6>
					} else {
						obj->lockid = 0;	/* Root directory need not to be locked */
 800aab2:	693b      	ldr	r3, [r7, #16]
 800aab4:	2200      	movs	r2, #0
 800aab6:	611a      	str	r2, [r3, #16]
				}
#endif
			}
		}
		FREE_NAMBUF();
		if (res == FR_NO_FILE) res = FR_NO_PATH;
 800aab8:	7dfb      	ldrb	r3, [r7, #23]
 800aaba:	2b04      	cmp	r3, #4
 800aabc:	d101      	bne.n	800aac2 <f_opendir+0xd0>
 800aabe:	2305      	movs	r3, #5
 800aac0:	75fb      	strb	r3, [r7, #23]
	}
	if (res != FR_OK) obj->fs = 0;		/* Invalidate the directory object if function faild */
 800aac2:	7dfb      	ldrb	r3, [r7, #23]
 800aac4:	2b00      	cmp	r3, #0
 800aac6:	d002      	beq.n	800aace <f_opendir+0xdc>
 800aac8:	693b      	ldr	r3, [r7, #16]
 800aaca:	2200      	movs	r2, #0
 800aacc:	601a      	str	r2, [r3, #0]

	LEAVE_FF(fs, res);
 800aace:	7dfb      	ldrb	r3, [r7, #23]
}
 800aad0:	4618      	mov	r0, r3
 800aad2:	3718      	adds	r7, #24
 800aad4:	46bd      	mov	sp, r7
 800aad6:	bd80      	pop	{r7, pc}

0800aad8 <f_readdir>:

FRESULT f_readdir (
	DIR* dp,			/* Pointer to the open directory object */
	FILINFO* fno		/* Pointer to file information to return */
)
{
 800aad8:	b580      	push	{r7, lr}
 800aada:	b084      	sub	sp, #16
 800aadc:	af00      	add	r7, sp, #0
 800aade:	6078      	str	r0, [r7, #4]
 800aae0:	6039      	str	r1, [r7, #0]
	FRESULT res;
	FATFS *fs;
	DEF_NAMBUF


	res = validate(&dp->obj, &fs);	/* Check validity of the directory object */
 800aae2:	687b      	ldr	r3, [r7, #4]
 800aae4:	f107 0208 	add.w	r2, r7, #8
 800aae8:	4611      	mov	r1, r2
 800aaea:	4618      	mov	r0, r3
 800aaec:	f7ff fb32 	bl	800a154 <validate>
 800aaf0:	4603      	mov	r3, r0
 800aaf2:	73fb      	strb	r3, [r7, #15]
	if (res == FR_OK) {
 800aaf4:	7bfb      	ldrb	r3, [r7, #15]
 800aaf6:	2b00      	cmp	r3, #0
 800aaf8:	d126      	bne.n	800ab48 <f_readdir+0x70>
		if (!fno) {
 800aafa:	683b      	ldr	r3, [r7, #0]
 800aafc:	2b00      	cmp	r3, #0
 800aafe:	d106      	bne.n	800ab0e <f_readdir+0x36>
			res = dir_sdi(dp, 0);			/* Rewind the directory object */
 800ab00:	2100      	movs	r1, #0
 800ab02:	6878      	ldr	r0, [r7, #4]
 800ab04:	f7fd feca 	bl	800889c <dir_sdi>
 800ab08:	4603      	mov	r3, r0
 800ab0a:	73fb      	strb	r3, [r7, #15]
 800ab0c:	e01c      	b.n	800ab48 <f_readdir+0x70>
		} else {
			INIT_NAMBUF(fs);
			res = dir_read(dp, 0);			/* Read an item */
 800ab0e:	2100      	movs	r1, #0
 800ab10:	6878      	ldr	r0, [r7, #4]
 800ab12:	f7fe fa94 	bl	800903e <dir_read>
 800ab16:	4603      	mov	r3, r0
 800ab18:	73fb      	strb	r3, [r7, #15]
			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 800ab1a:	7bfb      	ldrb	r3, [r7, #15]
 800ab1c:	2b04      	cmp	r3, #4
 800ab1e:	d101      	bne.n	800ab24 <f_readdir+0x4c>
 800ab20:	2300      	movs	r3, #0
 800ab22:	73fb      	strb	r3, [r7, #15]
			if (res == FR_OK) {				/* A valid entry is found */
 800ab24:	7bfb      	ldrb	r3, [r7, #15]
 800ab26:	2b00      	cmp	r3, #0
 800ab28:	d10e      	bne.n	800ab48 <f_readdir+0x70>
				get_fileinfo(dp, fno);		/* Get the object information */
 800ab2a:	6839      	ldr	r1, [r7, #0]
 800ab2c:	6878      	ldr	r0, [r7, #4]
 800ab2e:	f7fe fce5 	bl	80094fc <get_fileinfo>
				res = dir_next(dp, 0);		/* Increment index for next */
 800ab32:	2100      	movs	r1, #0
 800ab34:	6878      	ldr	r0, [r7, #4]
 800ab36:	f7fd ff3a 	bl	80089ae <dir_next>
 800ab3a:	4603      	mov	r3, r0
 800ab3c:	73fb      	strb	r3, [r7, #15]
				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 800ab3e:	7bfb      	ldrb	r3, [r7, #15]
 800ab40:	2b04      	cmp	r3, #4
 800ab42:	d101      	bne.n	800ab48 <f_readdir+0x70>
 800ab44:	2300      	movs	r3, #0
 800ab46:	73fb      	strb	r3, [r7, #15]
			}
			FREE_NAMBUF();
		}
	}
	LEAVE_FF(fs, res);
 800ab48:	7bfb      	ldrb	r3, [r7, #15]
}
 800ab4a:	4618      	mov	r0, r3
 800ab4c:	3710      	adds	r7, #16
 800ab4e:	46bd      	mov	sp, r7
 800ab50:	bd80      	pop	{r7, pc}

0800ab52 <f_mkdir>:
/*-----------------------------------------------------------------------*/

FRESULT f_mkdir (
	const TCHAR* path		/* Pointer to the directory path */
)
{
 800ab52:	b580      	push	{r7, lr}
 800ab54:	b098      	sub	sp, #96	; 0x60
 800ab56:	af00      	add	r7, sp, #0
 800ab58:	6078      	str	r0, [r7, #4]
	DWORD dsc, dcl, pcl, tm;
	DEF_NAMBUF


	/* Get logical drive */
	res = find_volume(&path, &fs, FA_WRITE);
 800ab5a:	f107 010c 	add.w	r1, r7, #12
 800ab5e:	1d3b      	adds	r3, r7, #4
 800ab60:	2202      	movs	r2, #2
 800ab62:	4618      	mov	r0, r3
 800ab64:	f7ff f870 	bl	8009c48 <find_volume>
 800ab68:	4603      	mov	r3, r0
 800ab6a:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
	dj.obj.fs = fs;
 800ab6e:	68fb      	ldr	r3, [r7, #12]
 800ab70:	613b      	str	r3, [r7, #16]
	if (res == FR_OK) {
 800ab72:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 800ab76:	2b00      	cmp	r3, #0
 800ab78:	f040 80f2 	bne.w	800ad60 <f_mkdir+0x20e>
		INIT_NAMBUF(fs);
		res = follow_path(&dj, path);			/* Follow the file path */
 800ab7c:	687a      	ldr	r2, [r7, #4]
 800ab7e:	f107 0310 	add.w	r3, r7, #16
 800ab82:	4611      	mov	r1, r2
 800ab84:	4618      	mov	r0, r3
 800ab86:	f7fe ff4f 	bl	8009a28 <follow_path>
 800ab8a:	4603      	mov	r3, r0
 800ab8c:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 800ab90:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 800ab94:	2b00      	cmp	r3, #0
 800ab96:	d102      	bne.n	800ab9e <f_mkdir+0x4c>
 800ab98:	2308      	movs	r3, #8
 800ab9a:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
			res = FR_INVALID_NAME;
		}
		if (res == FR_NO_FILE) {				/* Can create a new directory */
 800ab9e:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 800aba2:	2b04      	cmp	r3, #4
 800aba4:	f040 80dc 	bne.w	800ad60 <f_mkdir+0x20e>
			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
 800aba8:	f107 0310 	add.w	r3, r7, #16
 800abac:	2100      	movs	r1, #0
 800abae:	4618      	mov	r0, r3
 800abb0:	f7fd fda4 	bl	80086fc <create_chain>
 800abb4:	64f8      	str	r0, [r7, #76]	; 0x4c
			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
 800abb6:	68fb      	ldr	r3, [r7, #12]
 800abb8:	895b      	ldrh	r3, [r3, #10]
 800abba:	461a      	mov	r2, r3
 800abbc:	68fb      	ldr	r3, [r7, #12]
 800abbe:	899b      	ldrh	r3, [r3, #12]
 800abc0:	fb02 f303 	mul.w	r3, r2, r3
 800abc4:	61fb      	str	r3, [r7, #28]
			res = FR_OK;
 800abc6:	2300      	movs	r3, #0
 800abc8:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
 800abcc:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800abce:	2b00      	cmp	r3, #0
 800abd0:	d102      	bne.n	800abd8 <f_mkdir+0x86>
 800abd2:	2307      	movs	r3, #7
 800abd4:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
			if (dcl == 1) res = FR_INT_ERR;
 800abd8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800abda:	2b01      	cmp	r3, #1
 800abdc:	d102      	bne.n	800abe4 <f_mkdir+0x92>
 800abde:	2302      	movs	r3, #2
 800abe0:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 800abe4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800abe6:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800abea:	d102      	bne.n	800abf2 <f_mkdir+0xa0>
 800abec:	2301      	movs	r3, #1
 800abee:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 800abf2:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 800abf6:	2b00      	cmp	r3, #0
 800abf8:	d106      	bne.n	800ac08 <f_mkdir+0xb6>
 800abfa:	68fb      	ldr	r3, [r7, #12]
 800abfc:	4618      	mov	r0, r3
 800abfe:	f7fd fa29 	bl	8008054 <sync_window>
 800ac02:	4603      	mov	r3, r0
 800ac04:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
			tm = GET_FATTIME();
 800ac08:	f7fc feb8 	bl	800797c <get_fattime>
 800ac0c:	64b8      	str	r0, [r7, #72]	; 0x48
			if (res == FR_OK) {					/* Initialize the new directory table */
 800ac0e:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 800ac12:	2b00      	cmp	r3, #0
 800ac14:	d16c      	bne.n	800acf0 <f_mkdir+0x19e>
				dsc = clust2sect(fs, dcl);
 800ac16:	68fb      	ldr	r3, [r7, #12]
 800ac18:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
 800ac1a:	4618      	mov	r0, r3
 800ac1c:	f7fd fafc 	bl	8008218 <clust2sect>
 800ac20:	6578      	str	r0, [r7, #84]	; 0x54
				dir = fs->win;
 800ac22:	68fb      	ldr	r3, [r7, #12]
 800ac24:	3338      	adds	r3, #56	; 0x38
 800ac26:	647b      	str	r3, [r7, #68]	; 0x44
				mem_set(dir, 0, SS(fs));
 800ac28:	68fb      	ldr	r3, [r7, #12]
 800ac2a:	899b      	ldrh	r3, [r3, #12]
 800ac2c:	461a      	mov	r2, r3
 800ac2e:	2100      	movs	r1, #0
 800ac30:	6c78      	ldr	r0, [r7, #68]	; 0x44
 800ac32:	f7fd f846 	bl	8007cc2 <mem_set>
				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
					mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
 800ac36:	220b      	movs	r2, #11
 800ac38:	2120      	movs	r1, #32
 800ac3a:	6c78      	ldr	r0, [r7, #68]	; 0x44
 800ac3c:	f7fd f841 	bl	8007cc2 <mem_set>
					dir[DIR_Name] = '.';
 800ac40:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800ac42:	222e      	movs	r2, #46	; 0x2e
 800ac44:	701a      	strb	r2, [r3, #0]
					dir[DIR_Attr] = AM_DIR;
 800ac46:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800ac48:	330b      	adds	r3, #11
 800ac4a:	2210      	movs	r2, #16
 800ac4c:	701a      	strb	r2, [r3, #0]
					st_dword(dir + DIR_ModTime, tm);
 800ac4e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800ac50:	3316      	adds	r3, #22
 800ac52:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800ac54:	4618      	mov	r0, r3
 800ac56:	f7fc ffe7 	bl	8007c28 <st_dword>
					st_clust(fs, dir, dcl);
 800ac5a:	68fb      	ldr	r3, [r7, #12]
 800ac5c:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800ac5e:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800ac60:	4618      	mov	r0, r3
 800ac62:	f7fd ffe0 	bl	8008c26 <st_clust>
					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
 800ac66:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800ac68:	3320      	adds	r3, #32
 800ac6a:	2220      	movs	r2, #32
 800ac6c:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800ac6e:	4618      	mov	r0, r3
 800ac70:	f7fd f806 	bl	8007c80 <mem_cpy>
					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
 800ac74:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800ac76:	3321      	adds	r3, #33	; 0x21
 800ac78:	222e      	movs	r2, #46	; 0x2e
 800ac7a:	701a      	strb	r2, [r3, #0]
 800ac7c:	69bb      	ldr	r3, [r7, #24]
 800ac7e:	653b      	str	r3, [r7, #80]	; 0x50
					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
 800ac80:	68fb      	ldr	r3, [r7, #12]
 800ac82:	781b      	ldrb	r3, [r3, #0]
 800ac84:	2b03      	cmp	r3, #3
 800ac86:	d106      	bne.n	800ac96 <f_mkdir+0x144>
 800ac88:	68fb      	ldr	r3, [r7, #12]
 800ac8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ac8c:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800ac8e:	429a      	cmp	r2, r3
 800ac90:	d101      	bne.n	800ac96 <f_mkdir+0x144>
 800ac92:	2300      	movs	r3, #0
 800ac94:	653b      	str	r3, [r7, #80]	; 0x50
					st_clust(fs, dir + SZDIRE, pcl);
 800ac96:	68f8      	ldr	r0, [r7, #12]
 800ac98:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800ac9a:	3320      	adds	r3, #32
 800ac9c:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800ac9e:	4619      	mov	r1, r3
 800aca0:	f7fd ffc1 	bl	8008c26 <st_clust>
				}
				for (n = fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
 800aca4:	68fb      	ldr	r3, [r7, #12]
 800aca6:	895b      	ldrh	r3, [r3, #10]
 800aca8:	65bb      	str	r3, [r7, #88]	; 0x58
 800acaa:	e01c      	b.n	800ace6 <f_mkdir+0x194>
					fs->winsect = dsc++;
 800acac:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800acae:	1c5a      	adds	r2, r3, #1
 800acb0:	657a      	str	r2, [r7, #84]	; 0x54
 800acb2:	68fa      	ldr	r2, [r7, #12]
 800acb4:	6353      	str	r3, [r2, #52]	; 0x34
					fs->wflag = 1;
 800acb6:	68fb      	ldr	r3, [r7, #12]
 800acb8:	2201      	movs	r2, #1
 800acba:	70da      	strb	r2, [r3, #3]
					res = sync_window(fs);
 800acbc:	68fb      	ldr	r3, [r7, #12]
 800acbe:	4618      	mov	r0, r3
 800acc0:	f7fd f9c8 	bl	8008054 <sync_window>
 800acc4:	4603      	mov	r3, r0
 800acc6:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
					if (res != FR_OK) break;
 800acca:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 800acce:	2b00      	cmp	r3, #0
 800acd0:	d10d      	bne.n	800acee <f_mkdir+0x19c>
					mem_set(dir, 0, SS(fs));
 800acd2:	68fb      	ldr	r3, [r7, #12]
 800acd4:	899b      	ldrh	r3, [r3, #12]
 800acd6:	461a      	mov	r2, r3
 800acd8:	2100      	movs	r1, #0
 800acda:	6c78      	ldr	r0, [r7, #68]	; 0x44
 800acdc:	f7fc fff1 	bl	8007cc2 <mem_set>
				for (n = fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
 800ace0:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800ace2:	3b01      	subs	r3, #1
 800ace4:	65bb      	str	r3, [r7, #88]	; 0x58
 800ace6:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800ace8:	2b00      	cmp	r3, #0
 800acea:	d1df      	bne.n	800acac <f_mkdir+0x15a>
 800acec:	e000      	b.n	800acf0 <f_mkdir+0x19e>
					if (res != FR_OK) break;
 800acee:	bf00      	nop
				}
			}
			if (res == FR_OK) {
 800acf0:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 800acf4:	2b00      	cmp	r3, #0
 800acf6:	d107      	bne.n	800ad08 <f_mkdir+0x1b6>
				res = dir_register(&dj);	/* Register the object to the directoy */
 800acf8:	f107 0310 	add.w	r3, r7, #16
 800acfc:	4618      	mov	r0, r3
 800acfe:	f7fe fb05 	bl	800930c <dir_register>
 800ad02:	4603      	mov	r3, r0
 800ad04:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
			}
			if (res == FR_OK) {
 800ad08:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 800ad0c:	2b00      	cmp	r3, #0
 800ad0e:	d120      	bne.n	800ad52 <f_mkdir+0x200>
					fs->dirbuf[XDIR_Attr] = AM_DIR;				/* Attribute */
					res = store_xdir(&dj);
				} else
#endif
				{
					dir = dj.dir;
 800ad10:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800ad12:	647b      	str	r3, [r7, #68]	; 0x44
					st_dword(dir + DIR_ModTime, tm);	/* Created time */
 800ad14:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800ad16:	3316      	adds	r3, #22
 800ad18:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800ad1a:	4618      	mov	r0, r3
 800ad1c:	f7fc ff84 	bl	8007c28 <st_dword>
					st_clust(fs, dir, dcl);				/* Table start cluster */
 800ad20:	68fb      	ldr	r3, [r7, #12]
 800ad22:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800ad24:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800ad26:	4618      	mov	r0, r3
 800ad28:	f7fd ff7d 	bl	8008c26 <st_clust>
					dir[DIR_Attr] = AM_DIR;				/* Attribute */
 800ad2c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800ad2e:	330b      	adds	r3, #11
 800ad30:	2210      	movs	r2, #16
 800ad32:	701a      	strb	r2, [r3, #0]
					fs->wflag = 1;
 800ad34:	68fb      	ldr	r3, [r7, #12]
 800ad36:	2201      	movs	r2, #1
 800ad38:	70da      	strb	r2, [r3, #3]
				}
				if (res == FR_OK) {
 800ad3a:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 800ad3e:	2b00      	cmp	r3, #0
 800ad40:	d10e      	bne.n	800ad60 <f_mkdir+0x20e>
					res = sync_fs(fs);
 800ad42:	68fb      	ldr	r3, [r7, #12]
 800ad44:	4618      	mov	r0, r3
 800ad46:	f7fd f9f7 	bl	8008138 <sync_fs>
 800ad4a:	4603      	mov	r3, r0
 800ad4c:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 800ad50:	e006      	b.n	800ad60 <f_mkdir+0x20e>
				}
			} else {
				remove_chain(&dj.obj, dcl, 0);		/* Could not register, remove cluster chain */
 800ad52:	f107 0310 	add.w	r3, r7, #16
 800ad56:	2200      	movs	r2, #0
 800ad58:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
 800ad5a:	4618      	mov	r0, r3
 800ad5c:	f7fd fc69 	bl	8008632 <remove_chain>
			}
		}
		FREE_NAMBUF();
	}

	LEAVE_FF(fs, res);
 800ad60:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
}
 800ad64:	4618      	mov	r0, r3
 800ad66:	3760      	adds	r7, #96	; 0x60
 800ad68:	46bd      	mov	sp, r7
 800ad6a:	bd80      	pop	{r7, pc}

0800ad6c <FATFS_LinkDriverEx>:
  * @param  lun : only used for USB Key Disk to add multi-lun management
            else the parameter must be equal to 0
  * @retval Returns 0 in case of success, otherwise 1.
  */
uint8_t FATFS_LinkDriverEx(const Diskio_drvTypeDef *drv, char *path, uint8_t lun)
{
 800ad6c:	b480      	push	{r7}
 800ad6e:	b087      	sub	sp, #28
 800ad70:	af00      	add	r7, sp, #0
 800ad72:	60f8      	str	r0, [r7, #12]
 800ad74:	60b9      	str	r1, [r7, #8]
 800ad76:	4613      	mov	r3, r2
 800ad78:	71fb      	strb	r3, [r7, #7]
  uint8_t ret = 1;
 800ad7a:	2301      	movs	r3, #1
 800ad7c:	75fb      	strb	r3, [r7, #23]
  uint8_t DiskNum = 0;
 800ad7e:	2300      	movs	r3, #0
 800ad80:	75bb      	strb	r3, [r7, #22]

  if(disk.nbr < _VOLUMES)
 800ad82:	4b1f      	ldr	r3, [pc, #124]	; (800ae00 <FATFS_LinkDriverEx+0x94>)
 800ad84:	7a5b      	ldrb	r3, [r3, #9]
 800ad86:	b2db      	uxtb	r3, r3
 800ad88:	2b00      	cmp	r3, #0
 800ad8a:	d131      	bne.n	800adf0 <FATFS_LinkDriverEx+0x84>
  {
    disk.is_initialized[disk.nbr] = 0;
 800ad8c:	4b1c      	ldr	r3, [pc, #112]	; (800ae00 <FATFS_LinkDriverEx+0x94>)
 800ad8e:	7a5b      	ldrb	r3, [r3, #9]
 800ad90:	b2db      	uxtb	r3, r3
 800ad92:	461a      	mov	r2, r3
 800ad94:	4b1a      	ldr	r3, [pc, #104]	; (800ae00 <FATFS_LinkDriverEx+0x94>)
 800ad96:	2100      	movs	r1, #0
 800ad98:	5499      	strb	r1, [r3, r2]
    disk.drv[disk.nbr] = drv;
 800ad9a:	4b19      	ldr	r3, [pc, #100]	; (800ae00 <FATFS_LinkDriverEx+0x94>)
 800ad9c:	7a5b      	ldrb	r3, [r3, #9]
 800ad9e:	b2db      	uxtb	r3, r3
 800ada0:	4a17      	ldr	r2, [pc, #92]	; (800ae00 <FATFS_LinkDriverEx+0x94>)
 800ada2:	009b      	lsls	r3, r3, #2
 800ada4:	4413      	add	r3, r2
 800ada6:	68fa      	ldr	r2, [r7, #12]
 800ada8:	605a      	str	r2, [r3, #4]
    disk.lun[disk.nbr] = lun;
 800adaa:	4b15      	ldr	r3, [pc, #84]	; (800ae00 <FATFS_LinkDriverEx+0x94>)
 800adac:	7a5b      	ldrb	r3, [r3, #9]
 800adae:	b2db      	uxtb	r3, r3
 800adb0:	461a      	mov	r2, r3
 800adb2:	4b13      	ldr	r3, [pc, #76]	; (800ae00 <FATFS_LinkDriverEx+0x94>)
 800adb4:	4413      	add	r3, r2
 800adb6:	79fa      	ldrb	r2, [r7, #7]
 800adb8:	721a      	strb	r2, [r3, #8]
    DiskNum = disk.nbr++;
 800adba:	4b11      	ldr	r3, [pc, #68]	; (800ae00 <FATFS_LinkDriverEx+0x94>)
 800adbc:	7a5b      	ldrb	r3, [r3, #9]
 800adbe:	b2db      	uxtb	r3, r3
 800adc0:	1c5a      	adds	r2, r3, #1
 800adc2:	b2d1      	uxtb	r1, r2
 800adc4:	4a0e      	ldr	r2, [pc, #56]	; (800ae00 <FATFS_LinkDriverEx+0x94>)
 800adc6:	7251      	strb	r1, [r2, #9]
 800adc8:	75bb      	strb	r3, [r7, #22]
    path[0] = DiskNum + '0';
 800adca:	7dbb      	ldrb	r3, [r7, #22]
 800adcc:	3330      	adds	r3, #48	; 0x30
 800adce:	b2da      	uxtb	r2, r3
 800add0:	68bb      	ldr	r3, [r7, #8]
 800add2:	701a      	strb	r2, [r3, #0]
    path[1] = ':';
 800add4:	68bb      	ldr	r3, [r7, #8]
 800add6:	3301      	adds	r3, #1
 800add8:	223a      	movs	r2, #58	; 0x3a
 800adda:	701a      	strb	r2, [r3, #0]
    path[2] = '/';
 800addc:	68bb      	ldr	r3, [r7, #8]
 800adde:	3302      	adds	r3, #2
 800ade0:	222f      	movs	r2, #47	; 0x2f
 800ade2:	701a      	strb	r2, [r3, #0]
    path[3] = 0;
 800ade4:	68bb      	ldr	r3, [r7, #8]
 800ade6:	3303      	adds	r3, #3
 800ade8:	2200      	movs	r2, #0
 800adea:	701a      	strb	r2, [r3, #0]
    ret = 0;
 800adec:	2300      	movs	r3, #0
 800adee:	75fb      	strb	r3, [r7, #23]
  }

  return ret;
 800adf0:	7dfb      	ldrb	r3, [r7, #23]
}
 800adf2:	4618      	mov	r0, r3
 800adf4:	371c      	adds	r7, #28
 800adf6:	46bd      	mov	sp, r7
 800adf8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adfc:	4770      	bx	lr
 800adfe:	bf00      	nop
 800ae00:	2000b1c4 	.word	0x2000b1c4

0800ae04 <FATFS_LinkDriver>:
  * @param  drv: pointer to the disk IO Driver structure
  * @param  path: pointer to the logical drive path
  * @retval Returns 0 in case of success, otherwise 1.
  */
uint8_t FATFS_LinkDriver(const Diskio_drvTypeDef *drv, char *path)
{
 800ae04:	b580      	push	{r7, lr}
 800ae06:	b082      	sub	sp, #8
 800ae08:	af00      	add	r7, sp, #0
 800ae0a:	6078      	str	r0, [r7, #4]
 800ae0c:	6039      	str	r1, [r7, #0]
  return FATFS_LinkDriverEx(drv, path, 0);
 800ae0e:	2200      	movs	r2, #0
 800ae10:	6839      	ldr	r1, [r7, #0]
 800ae12:	6878      	ldr	r0, [r7, #4]
 800ae14:	f7ff ffaa 	bl	800ad6c <FATFS_LinkDriverEx>
 800ae18:	4603      	mov	r3, r0
}
 800ae1a:	4618      	mov	r0, r3
 800ae1c:	3708      	adds	r7, #8
 800ae1e:	46bd      	mov	sp, r7
 800ae20:	bd80      	pop	{r7, pc}
	...

0800ae24 <ff_convert>:

WCHAR ff_convert (	/* Converted character, Returns zero on error */
	WCHAR	chr,	/* Character code to be converted */
	UINT	dir		/* 0: Unicode to OEM code, 1: OEM code to Unicode */
)
{
 800ae24:	b480      	push	{r7}
 800ae26:	b085      	sub	sp, #20
 800ae28:	af00      	add	r7, sp, #0
 800ae2a:	4603      	mov	r3, r0
 800ae2c:	6039      	str	r1, [r7, #0]
 800ae2e:	80fb      	strh	r3, [r7, #6]
	WCHAR c;


	if (chr < 0x80) {	/* ASCII */
 800ae30:	88fb      	ldrh	r3, [r7, #6]
 800ae32:	2b7f      	cmp	r3, #127	; 0x7f
 800ae34:	d802      	bhi.n	800ae3c <ff_convert+0x18>
		c = chr;
 800ae36:	88fb      	ldrh	r3, [r7, #6]
 800ae38:	81fb      	strh	r3, [r7, #14]
 800ae3a:	e025      	b.n	800ae88 <ff_convert+0x64>

	} else {
		if (dir) {		/* OEM code to Unicode */
 800ae3c:	683b      	ldr	r3, [r7, #0]
 800ae3e:	2b00      	cmp	r3, #0
 800ae40:	d00b      	beq.n	800ae5a <ff_convert+0x36>
			c = (chr >= 0x100) ? 0 : Tbl[chr - 0x80];
 800ae42:	88fb      	ldrh	r3, [r7, #6]
 800ae44:	2bff      	cmp	r3, #255	; 0xff
 800ae46:	d805      	bhi.n	800ae54 <ff_convert+0x30>
 800ae48:	88fb      	ldrh	r3, [r7, #6]
 800ae4a:	3b80      	subs	r3, #128	; 0x80
 800ae4c:	4a12      	ldr	r2, [pc, #72]	; (800ae98 <ff_convert+0x74>)
 800ae4e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800ae52:	e000      	b.n	800ae56 <ff_convert+0x32>
 800ae54:	2300      	movs	r3, #0
 800ae56:	81fb      	strh	r3, [r7, #14]
 800ae58:	e016      	b.n	800ae88 <ff_convert+0x64>

		} else {		/* Unicode to OEM code */
			for (c = 0; c < 0x80; c++) {
 800ae5a:	2300      	movs	r3, #0
 800ae5c:	81fb      	strh	r3, [r7, #14]
 800ae5e:	e009      	b.n	800ae74 <ff_convert+0x50>
				if (chr == Tbl[c]) break;
 800ae60:	89fb      	ldrh	r3, [r7, #14]
 800ae62:	4a0d      	ldr	r2, [pc, #52]	; (800ae98 <ff_convert+0x74>)
 800ae64:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800ae68:	88fa      	ldrh	r2, [r7, #6]
 800ae6a:	429a      	cmp	r2, r3
 800ae6c:	d006      	beq.n	800ae7c <ff_convert+0x58>
			for (c = 0; c < 0x80; c++) {
 800ae6e:	89fb      	ldrh	r3, [r7, #14]
 800ae70:	3301      	adds	r3, #1
 800ae72:	81fb      	strh	r3, [r7, #14]
 800ae74:	89fb      	ldrh	r3, [r7, #14]
 800ae76:	2b7f      	cmp	r3, #127	; 0x7f
 800ae78:	d9f2      	bls.n	800ae60 <ff_convert+0x3c>
 800ae7a:	e000      	b.n	800ae7e <ff_convert+0x5a>
				if (chr == Tbl[c]) break;
 800ae7c:	bf00      	nop
			}
			c = (c + 0x80) & 0xFF;
 800ae7e:	89fb      	ldrh	r3, [r7, #14]
 800ae80:	3380      	adds	r3, #128	; 0x80
 800ae82:	b29b      	uxth	r3, r3
 800ae84:	b2db      	uxtb	r3, r3
 800ae86:	81fb      	strh	r3, [r7, #14]
		}
	}

	return c;
 800ae88:	89fb      	ldrh	r3, [r7, #14]
}
 800ae8a:	4618      	mov	r0, r3
 800ae8c:	3714      	adds	r7, #20
 800ae8e:	46bd      	mov	sp, r7
 800ae90:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae94:	4770      	bx	lr
 800ae96:	bf00      	nop
 800ae98:	0802b2ac 	.word	0x0802b2ac

0800ae9c <ff_wtoupper>:


WCHAR ff_wtoupper (	/* Returns upper converted character */
	WCHAR chr		/* Unicode character to be upper converted (BMP only) */
)
{
 800ae9c:	b480      	push	{r7}
 800ae9e:	b087      	sub	sp, #28
 800aea0:	af00      	add	r7, sp, #0
 800aea2:	4603      	mov	r3, r0
 800aea4:	80fb      	strh	r3, [r7, #6]
	};
	const WCHAR *p;
	WCHAR bc, nc, cmd;


	p = chr < 0x1000 ? cvt1 : cvt2;
 800aea6:	88fb      	ldrh	r3, [r7, #6]
 800aea8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800aeac:	d201      	bcs.n	800aeb2 <ff_wtoupper+0x16>
 800aeae:	4b3e      	ldr	r3, [pc, #248]	; (800afa8 <ff_wtoupper+0x10c>)
 800aeb0:	e000      	b.n	800aeb4 <ff_wtoupper+0x18>
 800aeb2:	4b3e      	ldr	r3, [pc, #248]	; (800afac <ff_wtoupper+0x110>)
 800aeb4:	617b      	str	r3, [r7, #20]
	for (;;) {
		bc = *p++;								/* Get block base */
 800aeb6:	697b      	ldr	r3, [r7, #20]
 800aeb8:	1c9a      	adds	r2, r3, #2
 800aeba:	617a      	str	r2, [r7, #20]
 800aebc:	881b      	ldrh	r3, [r3, #0]
 800aebe:	827b      	strh	r3, [r7, #18]
		if (!bc || chr < bc) break;
 800aec0:	8a7b      	ldrh	r3, [r7, #18]
 800aec2:	2b00      	cmp	r3, #0
 800aec4:	d068      	beq.n	800af98 <ff_wtoupper+0xfc>
 800aec6:	88fa      	ldrh	r2, [r7, #6]
 800aec8:	8a7b      	ldrh	r3, [r7, #18]
 800aeca:	429a      	cmp	r2, r3
 800aecc:	d364      	bcc.n	800af98 <ff_wtoupper+0xfc>
		nc = *p++; cmd = nc >> 8; nc &= 0xFF;	/* Get processing command and block size */
 800aece:	697b      	ldr	r3, [r7, #20]
 800aed0:	1c9a      	adds	r2, r3, #2
 800aed2:	617a      	str	r2, [r7, #20]
 800aed4:	881b      	ldrh	r3, [r3, #0]
 800aed6:	823b      	strh	r3, [r7, #16]
 800aed8:	8a3b      	ldrh	r3, [r7, #16]
 800aeda:	0a1b      	lsrs	r3, r3, #8
 800aedc:	81fb      	strh	r3, [r7, #14]
 800aede:	8a3b      	ldrh	r3, [r7, #16]
 800aee0:	b2db      	uxtb	r3, r3
 800aee2:	823b      	strh	r3, [r7, #16]
		if (chr < bc + nc) {	/* In the block? */
 800aee4:	88fa      	ldrh	r2, [r7, #6]
 800aee6:	8a79      	ldrh	r1, [r7, #18]
 800aee8:	8a3b      	ldrh	r3, [r7, #16]
 800aeea:	440b      	add	r3, r1
 800aeec:	429a      	cmp	r2, r3
 800aeee:	da49      	bge.n	800af84 <ff_wtoupper+0xe8>
			switch (cmd) {
 800aef0:	89fb      	ldrh	r3, [r7, #14]
 800aef2:	2b08      	cmp	r3, #8
 800aef4:	d84f      	bhi.n	800af96 <ff_wtoupper+0xfa>
 800aef6:	a201      	add	r2, pc, #4	; (adr r2, 800aefc <ff_wtoupper+0x60>)
 800aef8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800aefc:	0800af21 	.word	0x0800af21
 800af00:	0800af33 	.word	0x0800af33
 800af04:	0800af49 	.word	0x0800af49
 800af08:	0800af51 	.word	0x0800af51
 800af0c:	0800af59 	.word	0x0800af59
 800af10:	0800af61 	.word	0x0800af61
 800af14:	0800af69 	.word	0x0800af69
 800af18:	0800af71 	.word	0x0800af71
 800af1c:	0800af79 	.word	0x0800af79
			case 0:	chr = p[chr - bc]; break;		/* Table conversion */
 800af20:	88fa      	ldrh	r2, [r7, #6]
 800af22:	8a7b      	ldrh	r3, [r7, #18]
 800af24:	1ad3      	subs	r3, r2, r3
 800af26:	005b      	lsls	r3, r3, #1
 800af28:	697a      	ldr	r2, [r7, #20]
 800af2a:	4413      	add	r3, r2
 800af2c:	881b      	ldrh	r3, [r3, #0]
 800af2e:	80fb      	strh	r3, [r7, #6]
 800af30:	e027      	b.n	800af82 <ff_wtoupper+0xe6>
			case 1:	chr -= (chr - bc) & 1; break;	/* Case pairs */
 800af32:	88fa      	ldrh	r2, [r7, #6]
 800af34:	8a7b      	ldrh	r3, [r7, #18]
 800af36:	1ad3      	subs	r3, r2, r3
 800af38:	b29b      	uxth	r3, r3
 800af3a:	f003 0301 	and.w	r3, r3, #1
 800af3e:	b29b      	uxth	r3, r3
 800af40:	88fa      	ldrh	r2, [r7, #6]
 800af42:	1ad3      	subs	r3, r2, r3
 800af44:	80fb      	strh	r3, [r7, #6]
 800af46:	e01c      	b.n	800af82 <ff_wtoupper+0xe6>
			case 2: chr -= 16; break;				/* Shift -16 */
 800af48:	88fb      	ldrh	r3, [r7, #6]
 800af4a:	3b10      	subs	r3, #16
 800af4c:	80fb      	strh	r3, [r7, #6]
 800af4e:	e018      	b.n	800af82 <ff_wtoupper+0xe6>
			case 3:	chr -= 32; break;				/* Shift -32 */
 800af50:	88fb      	ldrh	r3, [r7, #6]
 800af52:	3b20      	subs	r3, #32
 800af54:	80fb      	strh	r3, [r7, #6]
 800af56:	e014      	b.n	800af82 <ff_wtoupper+0xe6>
			case 4:	chr -= 48; break;				/* Shift -48 */
 800af58:	88fb      	ldrh	r3, [r7, #6]
 800af5a:	3b30      	subs	r3, #48	; 0x30
 800af5c:	80fb      	strh	r3, [r7, #6]
 800af5e:	e010      	b.n	800af82 <ff_wtoupper+0xe6>
			case 5:	chr -= 26; break;				/* Shift -26 */
 800af60:	88fb      	ldrh	r3, [r7, #6]
 800af62:	3b1a      	subs	r3, #26
 800af64:	80fb      	strh	r3, [r7, #6]
 800af66:	e00c      	b.n	800af82 <ff_wtoupper+0xe6>
			case 6:	chr += 8; break;				/* Shift +8 */
 800af68:	88fb      	ldrh	r3, [r7, #6]
 800af6a:	3308      	adds	r3, #8
 800af6c:	80fb      	strh	r3, [r7, #6]
 800af6e:	e008      	b.n	800af82 <ff_wtoupper+0xe6>
			case 7: chr -= 80; break;				/* Shift -80 */
 800af70:	88fb      	ldrh	r3, [r7, #6]
 800af72:	3b50      	subs	r3, #80	; 0x50
 800af74:	80fb      	strh	r3, [r7, #6]
 800af76:	e004      	b.n	800af82 <ff_wtoupper+0xe6>
			case 8:	chr -= 0x1C60; break;			/* Shift -0x1C60 */
 800af78:	88fb      	ldrh	r3, [r7, #6]
 800af7a:	f5a3 53e3 	sub.w	r3, r3, #7264	; 0x1c60
 800af7e:	80fb      	strh	r3, [r7, #6]
 800af80:	bf00      	nop
			}
			break;
 800af82:	e008      	b.n	800af96 <ff_wtoupper+0xfa>
		}
		if (!cmd) p += nc;
 800af84:	89fb      	ldrh	r3, [r7, #14]
 800af86:	2b00      	cmp	r3, #0
 800af88:	d195      	bne.n	800aeb6 <ff_wtoupper+0x1a>
 800af8a:	8a3b      	ldrh	r3, [r7, #16]
 800af8c:	005b      	lsls	r3, r3, #1
 800af8e:	697a      	ldr	r2, [r7, #20]
 800af90:	4413      	add	r3, r2
 800af92:	617b      	str	r3, [r7, #20]
		bc = *p++;								/* Get block base */
 800af94:	e78f      	b.n	800aeb6 <ff_wtoupper+0x1a>
			break;
 800af96:	bf00      	nop
	}

	return chr;
 800af98:	88fb      	ldrh	r3, [r7, #6]
}
 800af9a:	4618      	mov	r0, r3
 800af9c:	371c      	adds	r7, #28
 800af9e:	46bd      	mov	sp, r7
 800afa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afa4:	4770      	bx	lr
 800afa6:	bf00      	nop
 800afa8:	0802b3ac 	.word	0x0802b3ac
 800afac:	0802b5a0 	.word	0x0802b5a0

0800afb0 <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 800afb0:	b580      	push	{r7, lr}
 800afb2:	b084      	sub	sp, #16
 800afb4:	af00      	add	r7, sp, #0
 800afb6:	4603      	mov	r3, r0
 800afb8:	460a      	mov	r2, r1
 800afba:	80fb      	strh	r3, [r7, #6]
 800afbc:	4613      	mov	r3, r2
 800afbe:	80bb      	strh	r3, [r7, #4]
  uint8_t ts_status = TS_OK;
 800afc0:	2300      	movs	r3, #0
 800afc2:	73fb      	strb	r3, [r7, #15]
  uint8_t ts_id1, ts_id2 = 0;
 800afc4:	2300      	movs	r3, #0
 800afc6:	73bb      	strb	r3, [r7, #14]
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 800afc8:	4b20      	ldr	r3, [pc, #128]	; (800b04c <BSP_TS_Init+0x9c>)
 800afca:	681b      	ldr	r3, [r3, #0]
 800afcc:	4a20      	ldr	r2, [pc, #128]	; (800b050 <BSP_TS_Init+0xa0>)
 800afce:	7812      	ldrb	r2, [r2, #0]
 800afd0:	b292      	uxth	r2, r2
 800afd2:	4610      	mov	r0, r2
 800afd4:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 800afd6:	4b1d      	ldr	r3, [pc, #116]	; (800b04c <BSP_TS_Init+0x9c>)
 800afd8:	685b      	ldr	r3, [r3, #4]
 800afda:	2070      	movs	r0, #112	; 0x70
 800afdc:	4798      	blx	r3
 800afde:	4603      	mov	r3, r0
 800afe0:	737b      	strb	r3, [r7, #13]
  I2C_Address    = TS_I2C_ADDRESS;
 800afe2:	4b1b      	ldr	r3, [pc, #108]	; (800b050 <BSP_TS_Init+0xa0>)
 800afe4:	2270      	movs	r2, #112	; 0x70
 800afe6:	701a      	strb	r2, [r3, #0]

  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE) || (ts_id2 == FT6X36_ID2_VALUE))
 800afe8:	7b7b      	ldrb	r3, [r7, #13]
 800afea:	2b11      	cmp	r3, #17
 800afec:	d005      	beq.n	800affa <BSP_TS_Init+0x4a>
 800afee:	7bbb      	ldrb	r3, [r7, #14]
 800aff0:	2b11      	cmp	r3, #17
 800aff2:	d002      	beq.n	800affa <BSP_TS_Init+0x4a>
 800aff4:	7bbb      	ldrb	r3, [r7, #14]
 800aff6:	2bd8      	cmp	r3, #216	; 0xd8
 800aff8:	d121      	bne.n	800b03e <BSP_TS_Init+0x8e>
  {
    /* Found FT6206 : Initialize the TS driver structure */
    ts_driver = &ft6x06_ts_drv;
 800affa:	4b16      	ldr	r3, [pc, #88]	; (800b054 <BSP_TS_Init+0xa4>)
 800affc:	4a13      	ldr	r2, [pc, #76]	; (800b04c <BSP_TS_Init+0x9c>)
 800affe:	601a      	str	r2, [r3, #0]

    /* Get LCD chosen orientation */
    if(ts_SizeX < ts_SizeY)
 800b000:	88fa      	ldrh	r2, [r7, #6]
 800b002:	88bb      	ldrh	r3, [r7, #4]
 800b004:	429a      	cmp	r2, r3
 800b006:	d203      	bcs.n	800b010 <BSP_TS_Init+0x60>
    {
      ts_orientation = TS_SWAP_NONE;                
 800b008:	4b13      	ldr	r3, [pc, #76]	; (800b058 <BSP_TS_Init+0xa8>)
 800b00a:	2201      	movs	r2, #1
 800b00c:	701a      	strb	r2, [r3, #0]
 800b00e:	e002      	b.n	800b016 <BSP_TS_Init+0x66>
    }
    else
    {
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 800b010:	4b11      	ldr	r3, [pc, #68]	; (800b058 <BSP_TS_Init+0xa8>)
 800b012:	220c      	movs	r2, #12
 800b014:	701a      	strb	r2, [r3, #0]
    }

    if(ts_status == TS_OK)
 800b016:	7bfb      	ldrb	r3, [r7, #15]
 800b018:	2b00      	cmp	r3, #0
 800b01a:	d112      	bne.n	800b042 <BSP_TS_Init+0x92>
    {
      /* Software reset the TouchScreen */
      ts_driver->Reset(I2C_Address);
 800b01c:	4b0d      	ldr	r3, [pc, #52]	; (800b054 <BSP_TS_Init+0xa4>)
 800b01e:	681b      	ldr	r3, [r3, #0]
 800b020:	689b      	ldr	r3, [r3, #8]
 800b022:	4a0b      	ldr	r2, [pc, #44]	; (800b050 <BSP_TS_Init+0xa0>)
 800b024:	7812      	ldrb	r2, [r2, #0]
 800b026:	b292      	uxth	r2, r2
 800b028:	4610      	mov	r0, r2
 800b02a:	4798      	blx	r3

      /* Calibrate, Configure and Start the TouchScreen driver */
      ts_driver->Start(I2C_Address);
 800b02c:	4b09      	ldr	r3, [pc, #36]	; (800b054 <BSP_TS_Init+0xa4>)
 800b02e:	681b      	ldr	r3, [r3, #0]
 800b030:	68db      	ldr	r3, [r3, #12]
 800b032:	4a07      	ldr	r2, [pc, #28]	; (800b050 <BSP_TS_Init+0xa0>)
 800b034:	7812      	ldrb	r2, [r2, #0]
 800b036:	b292      	uxth	r2, r2
 800b038:	4610      	mov	r0, r2
 800b03a:	4798      	blx	r3
    if(ts_status == TS_OK)
 800b03c:	e001      	b.n	800b042 <BSP_TS_Init+0x92>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 800b03e:	2303      	movs	r3, #3
 800b040:	73fb      	strb	r3, [r7, #15]
  }

  return (ts_status);
 800b042:	7bfb      	ldrb	r3, [r7, #15]
}
 800b044:	4618      	mov	r0, r3
 800b046:	3710      	adds	r7, #16
 800b048:	46bd      	mov	sp, r7
 800b04a:	bd80      	pop	{r7, pc}
 800b04c:	20000004 	.word	0x20000004
 800b050:	20000050 	.word	0x20000050
 800b054:	2000b1d0 	.word	0x2000b1d0
 800b058:	2000b1d4 	.word	0x2000b1d4

0800b05c <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 800b05c:	b590      	push	{r4, r7, lr}
 800b05e:	b089      	sub	sp, #36	; 0x24
 800b060:	af00      	add	r7, sp, #0
 800b062:	6078      	str	r0, [r7, #4]
  static uint32_t _x[TS_MAX_NB_TOUCH] = {0, 0};
  static uint32_t _y[TS_MAX_NB_TOUCH] = {0, 0};
  uint8_t ts_status = TS_OK;
 800b064:	2300      	movs	r3, #0
 800b066:	76fb      	strb	r3, [r7, #27]
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 800b068:	4b81      	ldr	r3, [pc, #516]	; (800b270 <BSP_TS_GetState+0x214>)
 800b06a:	681b      	ldr	r3, [r3, #0]
 800b06c:	691b      	ldr	r3, [r3, #16]
 800b06e:	4a81      	ldr	r2, [pc, #516]	; (800b274 <BSP_TS_GetState+0x218>)
 800b070:	7812      	ldrb	r2, [r2, #0]
 800b072:	b292      	uxth	r2, r2
 800b074:	4610      	mov	r0, r2
 800b076:	4798      	blx	r3
 800b078:	4603      	mov	r3, r0
 800b07a:	461a      	mov	r2, r3
 800b07c:	687b      	ldr	r3, [r7, #4]
 800b07e:	701a      	strb	r2, [r3, #0]
  if(TS_State->touchDetected)
 800b080:	687b      	ldr	r3, [r7, #4]
 800b082:	781b      	ldrb	r3, [r3, #0]
 800b084:	2b00      	cmp	r3, #0
 800b086:	f000 80ed 	beq.w	800b264 <BSP_TS_GetState+0x208>
  {
    for(index=0; index < TS_State->touchDetected; index++)
 800b08a:	2300      	movs	r3, #0
 800b08c:	61fb      	str	r3, [r7, #28]
 800b08e:	e0e2      	b.n	800b256 <BSP_TS_GetState+0x1fa>
    {
      /* Get each touch coordinates */
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 800b090:	4b77      	ldr	r3, [pc, #476]	; (800b270 <BSP_TS_GetState+0x214>)
 800b092:	681b      	ldr	r3, [r3, #0]
 800b094:	695b      	ldr	r3, [r3, #20]
 800b096:	4a77      	ldr	r2, [pc, #476]	; (800b274 <BSP_TS_GetState+0x218>)
 800b098:	7812      	ldrb	r2, [r2, #0]
 800b09a:	b290      	uxth	r0, r2
 800b09c:	f107 0110 	add.w	r1, r7, #16
 800b0a0:	69fa      	ldr	r2, [r7, #28]
 800b0a2:	0052      	lsls	r2, r2, #1
 800b0a4:	188c      	adds	r4, r1, r2
 800b0a6:	f107 010c 	add.w	r1, r7, #12
 800b0aa:	69fa      	ldr	r2, [r7, #28]
 800b0ac:	0052      	lsls	r2, r2, #1
 800b0ae:	440a      	add	r2, r1
 800b0b0:	4621      	mov	r1, r4
 800b0b2:	4798      	blx	r3

      if(ts_orientation & TS_SWAP_XY)
 800b0b4:	4b70      	ldr	r3, [pc, #448]	; (800b278 <BSP_TS_GetState+0x21c>)
 800b0b6:	781b      	ldrb	r3, [r3, #0]
 800b0b8:	f003 0308 	and.w	r3, r3, #8
 800b0bc:	2b00      	cmp	r3, #0
 800b0be:	d019      	beq.n	800b0f4 <BSP_TS_GetState+0x98>
      {
        tmp = Raw_x[index];
 800b0c0:	69fb      	ldr	r3, [r7, #28]
 800b0c2:	005b      	lsls	r3, r3, #1
 800b0c4:	3320      	adds	r3, #32
 800b0c6:	443b      	add	r3, r7
 800b0c8:	f833 3c10 	ldrh.w	r3, [r3, #-16]
 800b0cc:	833b      	strh	r3, [r7, #24]
        Raw_x[index] = Raw_y[index]; 
 800b0ce:	69fb      	ldr	r3, [r7, #28]
 800b0d0:	005b      	lsls	r3, r3, #1
 800b0d2:	3320      	adds	r3, #32
 800b0d4:	443b      	add	r3, r7
 800b0d6:	f833 2c14 	ldrh.w	r2, [r3, #-20]
 800b0da:	69fb      	ldr	r3, [r7, #28]
 800b0dc:	005b      	lsls	r3, r3, #1
 800b0de:	3320      	adds	r3, #32
 800b0e0:	443b      	add	r3, r7
 800b0e2:	f823 2c10 	strh.w	r2, [r3, #-16]
        Raw_y[index] = tmp;
 800b0e6:	69fb      	ldr	r3, [r7, #28]
 800b0e8:	005b      	lsls	r3, r3, #1
 800b0ea:	3320      	adds	r3, #32
 800b0ec:	443b      	add	r3, r7
 800b0ee:	8b3a      	ldrh	r2, [r7, #24]
 800b0f0:	f823 2c14 	strh.w	r2, [r3, #-20]
      }
      
      if(ts_orientation & TS_SWAP_X)
 800b0f4:	4b60      	ldr	r3, [pc, #384]	; (800b278 <BSP_TS_GetState+0x21c>)
 800b0f6:	781b      	ldrb	r3, [r3, #0]
 800b0f8:	f003 0302 	and.w	r3, r3, #2
 800b0fc:	2b00      	cmp	r3, #0
 800b0fe:	d00f      	beq.n	800b120 <BSP_TS_GetState+0xc4>
      {
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 800b100:	69fb      	ldr	r3, [r7, #28]
 800b102:	005b      	lsls	r3, r3, #1
 800b104:	3320      	adds	r3, #32
 800b106:	443b      	add	r3, r7
 800b108:	f833 3c10 	ldrh.w	r3, [r3, #-16]
 800b10c:	f5c3 739f 	rsb	r3, r3, #318	; 0x13e
 800b110:	3301      	adds	r3, #1
 800b112:	b29a      	uxth	r2, r3
 800b114:	69fb      	ldr	r3, [r7, #28]
 800b116:	005b      	lsls	r3, r3, #1
 800b118:	3320      	adds	r3, #32
 800b11a:	443b      	add	r3, r7
 800b11c:	f823 2c10 	strh.w	r2, [r3, #-16]
      }

      if(ts_orientation & TS_SWAP_Y)
 800b120:	4b55      	ldr	r3, [pc, #340]	; (800b278 <BSP_TS_GetState+0x21c>)
 800b122:	781b      	ldrb	r3, [r3, #0]
 800b124:	f003 0304 	and.w	r3, r3, #4
 800b128:	2b00      	cmp	r3, #0
 800b12a:	d00e      	beq.n	800b14a <BSP_TS_GetState+0xee>
      {
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 800b12c:	69fb      	ldr	r3, [r7, #28]
 800b12e:	005b      	lsls	r3, r3, #1
 800b130:	3320      	adds	r3, #32
 800b132:	443b      	add	r3, r7
 800b134:	f833 3c14 	ldrh.w	r3, [r3, #-20]
 800b138:	f1c3 03ef 	rsb	r3, r3, #239	; 0xef
 800b13c:	b29a      	uxth	r2, r3
 800b13e:	69fb      	ldr	r3, [r7, #28]
 800b140:	005b      	lsls	r3, r3, #1
 800b142:	3320      	adds	r3, #32
 800b144:	443b      	add	r3, r7
 800b146:	f823 2c14 	strh.w	r2, [r3, #-20]
      }
            
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 800b14a:	69fb      	ldr	r3, [r7, #28]
 800b14c:	005b      	lsls	r3, r3, #1
 800b14e:	3320      	adds	r3, #32
 800b150:	443b      	add	r3, r7
 800b152:	f833 3c10 	ldrh.w	r3, [r3, #-16]
 800b156:	4619      	mov	r1, r3
 800b158:	4a48      	ldr	r2, [pc, #288]	; (800b27c <BSP_TS_GetState+0x220>)
 800b15a:	69fb      	ldr	r3, [r7, #28]
 800b15c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800b160:	4299      	cmp	r1, r3
 800b162:	d90d      	bls.n	800b180 <BSP_TS_GetState+0x124>
 800b164:	69fb      	ldr	r3, [r7, #28]
 800b166:	005b      	lsls	r3, r3, #1
 800b168:	3320      	adds	r3, #32
 800b16a:	443b      	add	r3, r7
 800b16c:	f833 2c10 	ldrh.w	r2, [r3, #-16]
 800b170:	4942      	ldr	r1, [pc, #264]	; (800b27c <BSP_TS_GetState+0x220>)
 800b172:	69fb      	ldr	r3, [r7, #28]
 800b174:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800b178:	b29b      	uxth	r3, r3
 800b17a:	1ad3      	subs	r3, r2, r3
 800b17c:	b29b      	uxth	r3, r3
 800b17e:	e00c      	b.n	800b19a <BSP_TS_GetState+0x13e>
 800b180:	4a3e      	ldr	r2, [pc, #248]	; (800b27c <BSP_TS_GetState+0x220>)
 800b182:	69fb      	ldr	r3, [r7, #28]
 800b184:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800b188:	b29a      	uxth	r2, r3
 800b18a:	69fb      	ldr	r3, [r7, #28]
 800b18c:	005b      	lsls	r3, r3, #1
 800b18e:	3320      	adds	r3, #32
 800b190:	443b      	add	r3, r7
 800b192:	f833 3c10 	ldrh.w	r3, [r3, #-16]
 800b196:	1ad3      	subs	r3, r2, r3
 800b198:	b29b      	uxth	r3, r3
 800b19a:	82fb      	strh	r3, [r7, #22]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 800b19c:	69fb      	ldr	r3, [r7, #28]
 800b19e:	005b      	lsls	r3, r3, #1
 800b1a0:	3320      	adds	r3, #32
 800b1a2:	443b      	add	r3, r7
 800b1a4:	f833 3c14 	ldrh.w	r3, [r3, #-20]
 800b1a8:	4619      	mov	r1, r3
 800b1aa:	4a35      	ldr	r2, [pc, #212]	; (800b280 <BSP_TS_GetState+0x224>)
 800b1ac:	69fb      	ldr	r3, [r7, #28]
 800b1ae:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800b1b2:	4299      	cmp	r1, r3
 800b1b4:	d90d      	bls.n	800b1d2 <BSP_TS_GetState+0x176>
 800b1b6:	69fb      	ldr	r3, [r7, #28]
 800b1b8:	005b      	lsls	r3, r3, #1
 800b1ba:	3320      	adds	r3, #32
 800b1bc:	443b      	add	r3, r7
 800b1be:	f833 2c14 	ldrh.w	r2, [r3, #-20]
 800b1c2:	492f      	ldr	r1, [pc, #188]	; (800b280 <BSP_TS_GetState+0x224>)
 800b1c4:	69fb      	ldr	r3, [r7, #28]
 800b1c6:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800b1ca:	b29b      	uxth	r3, r3
 800b1cc:	1ad3      	subs	r3, r2, r3
 800b1ce:	b29b      	uxth	r3, r3
 800b1d0:	e00c      	b.n	800b1ec <BSP_TS_GetState+0x190>
 800b1d2:	4a2b      	ldr	r2, [pc, #172]	; (800b280 <BSP_TS_GetState+0x224>)
 800b1d4:	69fb      	ldr	r3, [r7, #28]
 800b1d6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800b1da:	b29a      	uxth	r2, r3
 800b1dc:	69fb      	ldr	r3, [r7, #28]
 800b1de:	005b      	lsls	r3, r3, #1
 800b1e0:	3320      	adds	r3, #32
 800b1e2:	443b      	add	r3, r7
 800b1e4:	f833 3c14 	ldrh.w	r3, [r3, #-20]
 800b1e8:	1ad3      	subs	r3, r2, r3
 800b1ea:	b29b      	uxth	r3, r3
 800b1ec:	82bb      	strh	r3, [r7, #20]

      if ((xDiff + yDiff) > 5)
 800b1ee:	8afa      	ldrh	r2, [r7, #22]
 800b1f0:	8abb      	ldrh	r3, [r7, #20]
 800b1f2:	4413      	add	r3, r2
 800b1f4:	2b05      	cmp	r3, #5
 800b1f6:	dd15      	ble.n	800b224 <BSP_TS_GetState+0x1c8>
      {
        _x[index] = Raw_x[index];
 800b1f8:	69fb      	ldr	r3, [r7, #28]
 800b1fa:	005b      	lsls	r3, r3, #1
 800b1fc:	3320      	adds	r3, #32
 800b1fe:	443b      	add	r3, r7
 800b200:	f833 3c10 	ldrh.w	r3, [r3, #-16]
 800b204:	4619      	mov	r1, r3
 800b206:	4a1d      	ldr	r2, [pc, #116]	; (800b27c <BSP_TS_GetState+0x220>)
 800b208:	69fb      	ldr	r3, [r7, #28]
 800b20a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        _y[index] = Raw_y[index];
 800b20e:	69fb      	ldr	r3, [r7, #28]
 800b210:	005b      	lsls	r3, r3, #1
 800b212:	3320      	adds	r3, #32
 800b214:	443b      	add	r3, r7
 800b216:	f833 3c14 	ldrh.w	r3, [r3, #-20]
 800b21a:	4619      	mov	r1, r3
 800b21c:	4a18      	ldr	r2, [pc, #96]	; (800b280 <BSP_TS_GetState+0x224>)
 800b21e:	69fb      	ldr	r3, [r7, #28]
 800b220:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
      }


      TS_State->touchX[index] = _x[index];
 800b224:	4a15      	ldr	r2, [pc, #84]	; (800b27c <BSP_TS_GetState+0x220>)
 800b226:	69fb      	ldr	r3, [r7, #28]
 800b228:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800b22c:	b299      	uxth	r1, r3
 800b22e:	687a      	ldr	r2, [r7, #4]
 800b230:	69fb      	ldr	r3, [r7, #28]
 800b232:	005b      	lsls	r3, r3, #1
 800b234:	4413      	add	r3, r2
 800b236:	460a      	mov	r2, r1
 800b238:	805a      	strh	r2, [r3, #2]
      TS_State->touchY[index] = _y[index];
 800b23a:	4a11      	ldr	r2, [pc, #68]	; (800b280 <BSP_TS_GetState+0x224>)
 800b23c:	69fb      	ldr	r3, [r7, #28]
 800b23e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800b242:	b299      	uxth	r1, r3
 800b244:	687a      	ldr	r2, [r7, #4]
 800b246:	69fb      	ldr	r3, [r7, #28]
 800b248:	005b      	lsls	r3, r3, #1
 800b24a:	4413      	add	r3, r2
 800b24c:	460a      	mov	r2, r1
 800b24e:	80da      	strh	r2, [r3, #6]
    for(index=0; index < TS_State->touchDetected; index++)
 800b250:	69fb      	ldr	r3, [r7, #28]
 800b252:	3301      	adds	r3, #1
 800b254:	61fb      	str	r3, [r7, #28]
 800b256:	687b      	ldr	r3, [r7, #4]
 800b258:	781b      	ldrb	r3, [r3, #0]
 800b25a:	461a      	mov	r2, r3
 800b25c:	69fb      	ldr	r3, [r7, #28]
 800b25e:	4293      	cmp	r3, r2
 800b260:	f4ff af16 	bcc.w	800b090 <BSP_TS_GetState+0x34>
    ts_status = BSP_TS_Get_GestureId(TS_State);
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
 800b264:	7efb      	ldrb	r3, [r7, #27]
}
 800b266:	4618      	mov	r0, r3
 800b268:	3724      	adds	r7, #36	; 0x24
 800b26a:	46bd      	mov	sp, r7
 800b26c:	bd90      	pop	{r4, r7, pc}
 800b26e:	bf00      	nop
 800b270:	2000b1d0 	.word	0x2000b1d0
 800b274:	20000050 	.word	0x20000050
 800b278:	2000b1d4 	.word	0x2000b1d4
 800b27c:	2000b1d8 	.word	0x2000b1d8
 800b280:	2000b1e0 	.word	0x2000b1e0

0800b284 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 800b284:	b580      	push	{r7, lr}
 800b286:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 800b288:	f005 ff08 	bl	801109c <touchgfx_components_init>
  touchgfx_init();
 800b28c:	f005 fedc 	bl	8011048 <touchgfx_init>
}
 800b290:	bf00      	nop
 800b292:	bd80      	pop	{r7, pc}

0800b294 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 800b294:	b480      	push	{r7}
 800b296:	b083      	sub	sp, #12
 800b298:	af00      	add	r7, sp, #0
 800b29a:	6078      	str	r0, [r7, #4]
    {
 800b29c:	4a04      	ldr	r2, [pc, #16]	; (800b2b0 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 800b29e:	687b      	ldr	r3, [r7, #4]
 800b2a0:	601a      	str	r2, [r3, #0]
    }
 800b2a2:	687b      	ldr	r3, [r7, #4]
 800b2a4:	4618      	mov	r0, r3
 800b2a6:	370c      	adds	r7, #12
 800b2a8:	46bd      	mov	sp, r7
 800b2aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2ae:	4770      	bx	lr
 800b2b0:	0802b678 	.word	0x0802b678

0800b2b4 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 800b2b4:	b580      	push	{r7, lr}
 800b2b6:	b082      	sub	sp, #8
 800b2b8:	af00      	add	r7, sp, #0
 800b2ba:	6078      	str	r0, [r7, #4]
    }
 800b2bc:	6878      	ldr	r0, [r7, #4]
 800b2be:	f7ff ffe9 	bl	800b294 <_ZN8touchgfx12FontProviderD1Ev>
 800b2c2:	2104      	movs	r1, #4
 800b2c4:	6878      	ldr	r0, [r7, #4]
 800b2c6:	f01d fa04 	bl	80286d2 <_ZdlPvj>
 800b2ca:	687b      	ldr	r3, [r7, #4]
 800b2cc:	4618      	mov	r0, r3
 800b2ce:	3708      	adds	r7, #8
 800b2d0:	46bd      	mov	sp, r7
 800b2d2:	bd80      	pop	{r7, pc}

0800b2d4 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800b2d4:	b580      	push	{r7, lr}
 800b2d6:	b082      	sub	sp, #8
 800b2d8:	af00      	add	r7, sp, #0
 800b2da:	6078      	str	r0, [r7, #4]
 800b2dc:	460b      	mov	r3, r1
 800b2de:	807b      	strh	r3, [r7, #2]
    switch (typography)
 800b2e0:	887b      	ldrh	r3, [r7, #2]
 800b2e2:	2b02      	cmp	r3, #2
 800b2e4:	d010      	beq.n	800b308 <_ZN23ApplicationFontProvider7getFontEt+0x34>
 800b2e6:	2b02      	cmp	r3, #2
 800b2e8:	dc13      	bgt.n	800b312 <_ZN23ApplicationFontProvider7getFontEt+0x3e>
 800b2ea:	2b00      	cmp	r3, #0
 800b2ec:	d002      	beq.n	800b2f4 <_ZN23ApplicationFontProvider7getFontEt+0x20>
 800b2ee:	2b01      	cmp	r3, #1
 800b2f0:	d005      	beq.n	800b2fe <_ZN23ApplicationFontProvider7getFontEt+0x2a>
 800b2f2:	e00e      	b.n	800b312 <_ZN23ApplicationFontProvider7getFontEt+0x3e>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800b2f4:	f004 fd2a 	bl	800fd4c <_ZN17TypedTextDatabase8getFontsEv>
 800b2f8:	4603      	mov	r3, r0
 800b2fa:	681b      	ldr	r3, [r3, #0]
 800b2fc:	e00a      	b.n	800b314 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800b2fe:	f004 fd25 	bl	800fd4c <_ZN17TypedTextDatabase8getFontsEv>
 800b302:	4603      	mov	r3, r0
 800b304:	685b      	ldr	r3, [r3, #4]
 800b306:	e005      	b.n	800b314 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800b308:	f004 fd20 	bl	800fd4c <_ZN17TypedTextDatabase8getFontsEv>
 800b30c:	4603      	mov	r3, r0
 800b30e:	689b      	ldr	r3, [r3, #8]
 800b310:	e000      	b.n	800b314 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    default:
        return 0;
 800b312:	2300      	movs	r3, #0
    }
}
 800b314:	4618      	mov	r0, r3
 800b316:	3708      	adds	r7, #8
 800b318:	46bd      	mov	sp, r7
 800b31a:	bd80      	pop	{r7, pc}

0800b31c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800b31c:	b580      	push	{r7, lr}
 800b31e:	b082      	sub	sp, #8
 800b320:	af00      	add	r7, sp, #0
 800b322:	6078      	str	r0, [r7, #4]
 800b324:	4a05      	ldr	r2, [pc, #20]	; (800b33c <_ZN23ApplicationFontProviderD1Ev+0x20>)
 800b326:	687b      	ldr	r3, [r7, #4]
 800b328:	601a      	str	r2, [r3, #0]
 800b32a:	687b      	ldr	r3, [r7, #4]
 800b32c:	4618      	mov	r0, r3
 800b32e:	f7ff ffb1 	bl	800b294 <_ZN8touchgfx12FontProviderD1Ev>
 800b332:	687b      	ldr	r3, [r7, #4]
 800b334:	4618      	mov	r0, r3
 800b336:	3708      	adds	r7, #8
 800b338:	46bd      	mov	sp, r7
 800b33a:	bd80      	pop	{r7, pc}
 800b33c:	0802b664 	.word	0x0802b664

0800b340 <_ZN23ApplicationFontProviderD0Ev>:
 800b340:	b580      	push	{r7, lr}
 800b342:	b082      	sub	sp, #8
 800b344:	af00      	add	r7, sp, #0
 800b346:	6078      	str	r0, [r7, #4]
 800b348:	6878      	ldr	r0, [r7, #4]
 800b34a:	f7ff ffe7 	bl	800b31c <_ZN23ApplicationFontProviderD1Ev>
 800b34e:	2104      	movs	r1, #4
 800b350:	6878      	ldr	r0, [r7, #4]
 800b352:	f01d f9be 	bl	80286d2 <_ZdlPvj>
 800b356:	687b      	ldr	r3, [r7, #4]
 800b358:	4618      	mov	r0, r3
 800b35a:	3708      	adds	r7, #8
 800b35c:	46bd      	mov	sp, r7
 800b35e:	bd80      	pop	{r7, pc}

0800b360 <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 800b360:	b480      	push	{r7}
 800b362:	b083      	sub	sp, #12
 800b364:	af00      	add	r7, sp, #0
 800b366:	6078      	str	r0, [r7, #4]
    {
 800b368:	4a04      	ldr	r2, [pc, #16]	; (800b37c <_ZN8touchgfx4FontD1Ev+0x1c>)
 800b36a:	687b      	ldr	r3, [r7, #4]
 800b36c:	601a      	str	r2, [r3, #0]
    }
 800b36e:	687b      	ldr	r3, [r7, #4]
 800b370:	4618      	mov	r0, r3
 800b372:	370c      	adds	r7, #12
 800b374:	46bd      	mov	sp, r7
 800b376:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b37a:	4770      	bx	lr
 800b37c:	0802bf40 	.word	0x0802bf40

0800b380 <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 800b380:	b580      	push	{r7, lr}
 800b382:	b082      	sub	sp, #8
 800b384:	af00      	add	r7, sp, #0
 800b386:	6078      	str	r0, [r7, #4]
    }
 800b388:	6878      	ldr	r0, [r7, #4]
 800b38a:	f7ff ffe9 	bl	800b360 <_ZN8touchgfx4FontD1Ev>
 800b38e:	2114      	movs	r1, #20
 800b390:	6878      	ldr	r0, [r7, #4]
 800b392:	f01d f99e 	bl	80286d2 <_ZdlPvj>
 800b396:	687b      	ldr	r3, [r7, #4]
 800b398:	4618      	mov	r0, r3
 800b39a:	3708      	adds	r7, #8
 800b39c:	46bd      	mov	sp, r7
 800b39e:	bd80      	pop	{r7, pc}

0800b3a0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800b3a0:	b590      	push	{r4, r7, lr}
 800b3a2:	b087      	sub	sp, #28
 800b3a4:	af00      	add	r7, sp, #0
 800b3a6:	6078      	str	r0, [r7, #4]
 800b3a8:	460b      	mov	r3, r1
 800b3aa:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 800b3ac:	887b      	ldrh	r3, [r7, #2]
 800b3ae:	2b00      	cmp	r3, #0
 800b3b0:	d101      	bne.n	800b3b6 <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 800b3b2:	2300      	movs	r3, #0
 800b3b4:	e010      	b.n	800b3d8 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 800b3b6:	2300      	movs	r3, #0
 800b3b8:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 800b3ba:	2300      	movs	r3, #0
 800b3bc:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800b3be:	687b      	ldr	r3, [r7, #4]
 800b3c0:	681b      	ldr	r3, [r3, #0]
 800b3c2:	3308      	adds	r3, #8
 800b3c4:	681c      	ldr	r4, [r3, #0]
 800b3c6:	f107 030f 	add.w	r3, r7, #15
 800b3ca:	f107 0210 	add.w	r2, r7, #16
 800b3ce:	8879      	ldrh	r1, [r7, #2]
 800b3d0:	6878      	ldr	r0, [r7, #4]
 800b3d2:	47a0      	blx	r4
 800b3d4:	6178      	str	r0, [r7, #20]
        return glyph;
 800b3d6:	697b      	ldr	r3, [r7, #20]
    }
 800b3d8:	4618      	mov	r0, r3
 800b3da:	371c      	adds	r7, #28
 800b3dc:	46bd      	mov	sp, r7
 800b3de:	bd90      	pop	{r4, r7, pc}

0800b3e0 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 800b3e0:	b480      	push	{r7}
 800b3e2:	b083      	sub	sp, #12
 800b3e4:	af00      	add	r7, sp, #0
 800b3e6:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 800b3e8:	687b      	ldr	r3, [r7, #4]
 800b3ea:	89db      	ldrh	r3, [r3, #14]
    }
 800b3ec:	4618      	mov	r0, r3
 800b3ee:	370c      	adds	r7, #12
 800b3f0:	46bd      	mov	sp, r7
 800b3f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3f6:	4770      	bx	lr

0800b3f8 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 800b3f8:	b480      	push	{r7}
 800b3fa:	b083      	sub	sp, #12
 800b3fc:	af00      	add	r7, sp, #0
 800b3fe:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 800b400:	687b      	ldr	r3, [r7, #4]
 800b402:	8a1b      	ldrh	r3, [r3, #16]
    }
 800b404:	4618      	mov	r0, r3
 800b406:	370c      	adds	r7, #12
 800b408:	46bd      	mov	sp, r7
 800b40a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b40e:	4770      	bx	lr

0800b410 <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 800b410:	b480      	push	{r7}
 800b412:	b083      	sub	sp, #12
 800b414:	af00      	add	r7, sp, #0
 800b416:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 800b418:	687b      	ldr	r3, [r7, #4]
 800b41a:	88db      	ldrh	r3, [r3, #6]
    }
 800b41c:	4618      	mov	r0, r3
 800b41e:	370c      	adds	r7, #12
 800b420:	46bd      	mov	sp, r7
 800b422:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b426:	4770      	bx	lr

0800b428 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 800b428:	b480      	push	{r7}
 800b42a:	b083      	sub	sp, #12
 800b42c:	af00      	add	r7, sp, #0
 800b42e:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 800b430:	687b      	ldr	r3, [r7, #4]
 800b432:	889b      	ldrh	r3, [r3, #4]
    }
 800b434:	4618      	mov	r0, r3
 800b436:	370c      	adds	r7, #12
 800b438:	46bd      	mov	sp, r7
 800b43a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b43e:	4770      	bx	lr

0800b440 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 800b440:	b480      	push	{r7}
 800b442:	b083      	sub	sp, #12
 800b444:	af00      	add	r7, sp, #0
 800b446:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 800b448:	687b      	ldr	r3, [r7, #4]
 800b44a:	7a9b      	ldrb	r3, [r3, #10]
 800b44c:	f3c3 0306 	ubfx	r3, r3, #0, #7
 800b450:	b2db      	uxtb	r3, r3
    }
 800b452:	4618      	mov	r0, r3
 800b454:	370c      	adds	r7, #12
 800b456:	46bd      	mov	sp, r7
 800b458:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b45c:	4770      	bx	lr

0800b45e <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 800b45e:	b480      	push	{r7}
 800b460:	b083      	sub	sp, #12
 800b462:	af00      	add	r7, sp, #0
 800b464:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 800b466:	687b      	ldr	r3, [r7, #4]
 800b468:	7a9b      	ldrb	r3, [r3, #10]
 800b46a:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 800b46e:	b2db      	uxtb	r3, r3
    }
 800b470:	4618      	mov	r0, r3
 800b472:	370c      	adds	r7, #12
 800b474:	46bd      	mov	sp, r7
 800b476:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b47a:	4770      	bx	lr

0800b47c <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 800b47c:	b580      	push	{r7, lr}
 800b47e:	b082      	sub	sp, #8
 800b480:	af00      	add	r7, sp, #0
 800b482:	6078      	str	r0, [r7, #4]
 800b484:	4a05      	ldr	r2, [pc, #20]	; (800b49c <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 800b486:	687b      	ldr	r3, [r7, #4]
 800b488:	601a      	str	r2, [r3, #0]
 800b48a:	687b      	ldr	r3, [r7, #4]
 800b48c:	4618      	mov	r0, r3
 800b48e:	f7ff ff67 	bl	800b360 <_ZN8touchgfx4FontD1Ev>
 800b492:	687b      	ldr	r3, [r7, #4]
 800b494:	4618      	mov	r0, r3
 800b496:	3708      	adds	r7, #8
 800b498:	46bd      	mov	sp, r7
 800b49a:	bd80      	pop	{r7, pc}
 800b49c:	0802ce24 	.word	0x0802ce24

0800b4a0 <_ZN8touchgfx9ConstFontD0Ev>:
 800b4a0:	b580      	push	{r7, lr}
 800b4a2:	b082      	sub	sp, #8
 800b4a4:	af00      	add	r7, sp, #0
 800b4a6:	6078      	str	r0, [r7, #4]
 800b4a8:	6878      	ldr	r0, [r7, #4]
 800b4aa:	f7ff ffe7 	bl	800b47c <_ZN8touchgfx9ConstFontD1Ev>
 800b4ae:	211c      	movs	r1, #28
 800b4b0:	6878      	ldr	r0, [r7, #4]
 800b4b2:	f01d f90e 	bl	80286d2 <_ZdlPvj>
 800b4b6:	687b      	ldr	r3, [r7, #4]
 800b4b8:	4618      	mov	r0, r3
 800b4ba:	3708      	adds	r7, #8
 800b4bc:	46bd      	mov	sp, r7
 800b4be:	bd80      	pop	{r7, pc}

0800b4c0 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 800b4c0:	b580      	push	{r7, lr}
 800b4c2:	b082      	sub	sp, #8
 800b4c4:	af00      	add	r7, sp, #0
 800b4c6:	6078      	str	r0, [r7, #4]
 800b4c8:	4a05      	ldr	r2, [pc, #20]	; (800b4e0 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 800b4ca:	687b      	ldr	r3, [r7, #4]
 800b4cc:	601a      	str	r2, [r3, #0]
 800b4ce:	687b      	ldr	r3, [r7, #4]
 800b4d0:	4618      	mov	r0, r3
 800b4d2:	f7ff ffd3 	bl	800b47c <_ZN8touchgfx9ConstFontD1Ev>
 800b4d6:	687b      	ldr	r3, [r7, #4]
 800b4d8:	4618      	mov	r0, r3
 800b4da:	3708      	adds	r7, #8
 800b4dc:	46bd      	mov	sp, r7
 800b4de:	bd80      	pop	{r7, pc}
 800b4e0:	0802b69c 	.word	0x0802b69c

0800b4e4 <_ZN8touchgfx13GeneratedFontD0Ev>:
 800b4e4:	b580      	push	{r7, lr}
 800b4e6:	b082      	sub	sp, #8
 800b4e8:	af00      	add	r7, sp, #0
 800b4ea:	6078      	str	r0, [r7, #4]
 800b4ec:	6878      	ldr	r0, [r7, #4]
 800b4ee:	f7ff ffe7 	bl	800b4c0 <_ZN8touchgfx13GeneratedFontD1Ev>
 800b4f2:	212c      	movs	r1, #44	; 0x2c
 800b4f4:	6878      	ldr	r0, [r7, #4]
 800b4f6:	f01d f8ec 	bl	80286d2 <_ZdlPvj>
 800b4fa:	687b      	ldr	r3, [r7, #4]
 800b4fc:	4618      	mov	r0, r3
 800b4fe:	3708      	adds	r7, #8
 800b500:	46bd      	mov	sp, r7
 800b502:	bd80      	pop	{r7, pc}

0800b504 <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 800b504:	b480      	push	{r7}
 800b506:	b083      	sub	sp, #12
 800b508:	af00      	add	r7, sp, #0
 800b50a:	6078      	str	r0, [r7, #4]
    {
 800b50c:	4a04      	ldr	r2, [pc, #16]	; (800b520 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 800b50e:	687b      	ldr	r3, [r7, #4]
 800b510:	601a      	str	r2, [r3, #0]
    }
 800b512:	687b      	ldr	r3, [r7, #4]
 800b514:	4618      	mov	r0, r3
 800b516:	370c      	adds	r7, #12
 800b518:	46bd      	mov	sp, r7
 800b51a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b51e:	4770      	bx	lr
 800b520:	0802b68c 	.word	0x0802b68c

0800b524 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800b524:	b580      	push	{r7, lr}
 800b526:	b082      	sub	sp, #8
 800b528:	af00      	add	r7, sp, #0
 800b52a:	6078      	str	r0, [r7, #4]
    }
 800b52c:	6878      	ldr	r0, [r7, #4]
 800b52e:	f7ff ffe9 	bl	800b504 <_ZN8touchgfx9TypedTextD1Ev>
 800b532:	2108      	movs	r1, #8
 800b534:	6878      	ldr	r0, [r7, #4]
 800b536:	f01d f8cc 	bl	80286d2 <_ZdlPvj>
 800b53a:	687b      	ldr	r3, [r7, #4]
 800b53c:	4618      	mov	r0, r3
 800b53e:	3708      	adds	r7, #8
 800b540:	46bd      	mov	sp, r7
 800b542:	bd80      	pop	{r7, pc}

0800b544 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 800b544:	b480      	push	{r7}
 800b546:	b083      	sub	sp, #12
 800b548:	af00      	add	r7, sp, #0
 800b54a:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800b54c:	687b      	ldr	r3, [r7, #4]
 800b54e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    }
 800b550:	4618      	mov	r0, r3
 800b552:	370c      	adds	r7, #12
 800b554:	46bd      	mov	sp, r7
 800b556:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b55a:	4770      	bx	lr

0800b55c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800b55c:	b480      	push	{r7}
 800b55e:	b083      	sub	sp, #12
 800b560:	af00      	add	r7, sp, #0
 800b562:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 800b564:	687b      	ldr	r3, [r7, #4]
 800b566:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    }
 800b568:	4618      	mov	r0, r3
 800b56a:	370c      	adds	r7, #12
 800b56c:	46bd      	mov	sp, r7
 800b56e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b572:	4770      	bx	lr

0800b574 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800b574:	b580      	push	{r7, lr}
 800b576:	b08e      	sub	sp, #56	; 0x38
 800b578:	af0a      	add	r7, sp, #40	; 0x28
 800b57a:	60f8      	str	r0, [r7, #12]
 800b57c:	60b9      	str	r1, [r7, #8]
 800b57e:	4611      	mov	r1, r2
 800b580:	461a      	mov	r2, r3
 800b582:	460b      	mov	r3, r1
 800b584:	80fb      	strh	r3, [r7, #6]
 800b586:	4613      	mov	r3, r2
 800b588:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 800b58a:	68f8      	ldr	r0, [r7, #12]
 800b58c:	88b9      	ldrh	r1, [r7, #4]
 800b58e:	88fa      	ldrh	r2, [r7, #6]
 800b590:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 800b594:	9308      	str	r3, [sp, #32]
 800b596:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 800b598:	9307      	str	r3, [sp, #28]
 800b59a:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 800b59e:	9306      	str	r3, [sp, #24]
 800b5a0:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800b5a4:	9305      	str	r3, [sp, #20]
 800b5a6:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800b5aa:	9304      	str	r3, [sp, #16]
 800b5ac:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800b5b0:	9303      	str	r3, [sp, #12]
 800b5b2:	f897 3020 	ldrb.w	r3, [r7, #32]
 800b5b6:	9302      	str	r3, [sp, #8]
 800b5b8:	7f3b      	ldrb	r3, [r7, #28]
 800b5ba:	9301      	str	r3, [sp, #4]
 800b5bc:	8b3b      	ldrh	r3, [r7, #24]
 800b5be:	9300      	str	r3, [sp, #0]
 800b5c0:	460b      	mov	r3, r1
 800b5c2:	68b9      	ldr	r1, [r7, #8]
 800b5c4:	f00d f8de 	bl	8018784 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800b5c8:	4a09      	ldr	r2, [pc, #36]	; (800b5f0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 800b5ca:	68fb      	ldr	r3, [r7, #12]
 800b5cc:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 800b5ce:	68fb      	ldr	r3, [r7, #12]
 800b5d0:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800b5d2:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 800b5d4:	68fb      	ldr	r3, [r7, #12]
 800b5d6:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800b5d8:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 800b5da:	68fb      	ldr	r3, [r7, #12]
 800b5dc:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800b5de:	625a      	str	r2, [r3, #36]	; 0x24
      arabicTable(formsTable)
 800b5e0:	68fb      	ldr	r3, [r7, #12]
 800b5e2:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800b5e4:	629a      	str	r2, [r3, #40]	; 0x28
{
}
 800b5e6:	68fb      	ldr	r3, [r7, #12]
 800b5e8:	4618      	mov	r0, r3
 800b5ea:	3710      	adds	r7, #16
 800b5ec:	46bd      	mov	sp, r7
 800b5ee:	bd80      	pop	{r7, pc}
 800b5f0:	0802b69c 	.word	0x0802b69c

0800b5f4 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 800b5f4:	b480      	push	{r7}
 800b5f6:	b085      	sub	sp, #20
 800b5f8:	af00      	add	r7, sp, #0
 800b5fa:	6078      	str	r0, [r7, #4]
 800b5fc:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 800b5fe:	687b      	ldr	r3, [r7, #4]
 800b600:	69db      	ldr	r3, [r3, #28]
 800b602:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800b604:	683b      	ldr	r3, [r7, #0]
 800b606:	889b      	ldrh	r3, [r3, #4]
 800b608:	0adb      	lsrs	r3, r3, #11
 800b60a:	b29b      	uxth	r3, r3
 800b60c:	009b      	lsls	r3, r3, #2
 800b60e:	68fa      	ldr	r2, [r7, #12]
 800b610:	4413      	add	r3, r2
 800b612:	681a      	ldr	r2, [r3, #0]
 800b614:	683b      	ldr	r3, [r7, #0]
 800b616:	681b      	ldr	r3, [r3, #0]
 800b618:	4413      	add	r3, r2
}
 800b61a:	4618      	mov	r0, r3
 800b61c:	3714      	adds	r7, #20
 800b61e:	46bd      	mov	sp, r7
 800b620:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b624:	4770      	bx	lr

0800b626 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800b626:	b480      	push	{r7}
 800b628:	b089      	sub	sp, #36	; 0x24
 800b62a:	af00      	add	r7, sp, #0
 800b62c:	60f8      	str	r0, [r7, #12]
 800b62e:	460b      	mov	r3, r1
 800b630:	607a      	str	r2, [r7, #4]
 800b632:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 800b634:	687b      	ldr	r3, [r7, #4]
 800b636:	2b00      	cmp	r3, #0
 800b638:	d003      	beq.n	800b642 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800b63a:	687b      	ldr	r3, [r7, #4]
 800b63c:	7b1b      	ldrb	r3, [r3, #12]
 800b63e:	2b00      	cmp	r3, #0
 800b640:	d101      	bne.n	800b646 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 800b642:	2300      	movs	r3, #0
 800b644:	e031      	b.n	800b6aa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800b646:	68fb      	ldr	r3, [r7, #12]
 800b648:	6a1a      	ldr	r2, [r3, #32]
 800b64a:	687b      	ldr	r3, [r7, #4]
 800b64c:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800b64e:	697b      	ldr	r3, [r7, #20]
 800b650:	7b5b      	ldrb	r3, [r3, #13]
 800b652:	021b      	lsls	r3, r3, #8
 800b654:	b21b      	sxth	r3, r3
 800b656:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800b65a:	b219      	sxth	r1, r3
 800b65c:	697b      	ldr	r3, [r7, #20]
 800b65e:	7adb      	ldrb	r3, [r3, #11]
 800b660:	b21b      	sxth	r3, r3
 800b662:	430b      	orrs	r3, r1
 800b664:	b21b      	sxth	r3, r3
 800b666:	b29b      	uxth	r3, r3
 800b668:	009b      	lsls	r3, r3, #2
 800b66a:	4413      	add	r3, r2
 800b66c:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800b66e:	687b      	ldr	r3, [r7, #4]
 800b670:	7b1b      	ldrb	r3, [r3, #12]
 800b672:	837b      	strh	r3, [r7, #26]
 800b674:	e013      	b.n	800b69e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 800b676:	69fb      	ldr	r3, [r7, #28]
 800b678:	881b      	ldrh	r3, [r3, #0]
 800b67a:	897a      	ldrh	r2, [r7, #10]
 800b67c:	429a      	cmp	r2, r3
 800b67e:	d103      	bne.n	800b688 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 800b680:	69fb      	ldr	r3, [r7, #28]
 800b682:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800b686:	e010      	b.n	800b6aa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 800b688:	69fb      	ldr	r3, [r7, #28]
 800b68a:	881b      	ldrh	r3, [r3, #0]
 800b68c:	897a      	ldrh	r2, [r7, #10]
 800b68e:	429a      	cmp	r2, r3
 800b690:	d309      	bcc.n	800b6a6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800b692:	8b7b      	ldrh	r3, [r7, #26]
 800b694:	3b01      	subs	r3, #1
 800b696:	837b      	strh	r3, [r7, #26]
 800b698:	69fb      	ldr	r3, [r7, #28]
 800b69a:	3304      	adds	r3, #4
 800b69c:	61fb      	str	r3, [r7, #28]
 800b69e:	8b7b      	ldrh	r3, [r7, #26]
 800b6a0:	2b00      	cmp	r3, #0
 800b6a2:	d1e8      	bne.n	800b676 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 800b6a4:	e000      	b.n	800b6a8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 800b6a6:	bf00      	nop
        }
    }
    return 0;
 800b6a8:	2300      	movs	r3, #0
}
 800b6aa:	4618      	mov	r0, r3
 800b6ac:	3724      	adds	r7, #36	; 0x24
 800b6ae:	46bd      	mov	sp, r7
 800b6b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6b4:	4770      	bx	lr
	...

0800b6b8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 6, 12, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800b6b8:	b580      	push	{r7, lr}
 800b6ba:	af00      	add	r7, sp, #0
 800b6bc:	4801      	ldr	r0, [pc, #4]	; (800b6c4 <__tcf_0+0xc>)
 800b6be:	f7ff feff 	bl	800b4c0 <_ZN8touchgfx13GeneratedFontD1Ev>
 800b6c2:	bd80      	pop	{r7, pc}
 800b6c4:	2000b1e8 	.word	0x2000b1e8

0800b6c8 <_Z23getFont_verdana_10_4bppv>:
{
 800b6c8:	b580      	push	{r7, lr}
 800b6ca:	b08e      	sub	sp, #56	; 0x38
 800b6cc:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 6, 12, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800b6ce:	4b21      	ldr	r3, [pc, #132]	; (800b754 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800b6d0:	681b      	ldr	r3, [r3, #0]
 800b6d2:	f3bf 8f5b 	dmb	ish
 800b6d6:	f003 0301 	and.w	r3, r3, #1
 800b6da:	2b00      	cmp	r3, #0
 800b6dc:	bf0c      	ite	eq
 800b6de:	2301      	moveq	r3, #1
 800b6e0:	2300      	movne	r3, #0
 800b6e2:	b2db      	uxtb	r3, r3
 800b6e4:	2b00      	cmp	r3, #0
 800b6e6:	d030      	beq.n	800b74a <_Z23getFont_verdana_10_4bppv+0x82>
 800b6e8:	481a      	ldr	r0, [pc, #104]	; (800b754 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800b6ea:	f01c fff4 	bl	80286d6 <__cxa_guard_acquire>
 800b6ee:	4603      	mov	r3, r0
 800b6f0:	2b00      	cmp	r3, #0
 800b6f2:	bf14      	ite	ne
 800b6f4:	2301      	movne	r3, #1
 800b6f6:	2300      	moveq	r3, #0
 800b6f8:	b2db      	uxtb	r3, r3
 800b6fa:	2b00      	cmp	r3, #0
 800b6fc:	d025      	beq.n	800b74a <_Z23getFont_verdana_10_4bppv+0x82>
 800b6fe:	2300      	movs	r3, #0
 800b700:	930c      	str	r3, [sp, #48]	; 0x30
 800b702:	2300      	movs	r3, #0
 800b704:	930b      	str	r3, [sp, #44]	; 0x2c
 800b706:	2300      	movs	r3, #0
 800b708:	930a      	str	r3, [sp, #40]	; 0x28
 800b70a:	233f      	movs	r3, #63	; 0x3f
 800b70c:	9309      	str	r3, [sp, #36]	; 0x24
 800b70e:	4b12      	ldr	r3, [pc, #72]	; (800b758 <_Z23getFont_verdana_10_4bppv+0x90>)
 800b710:	9308      	str	r3, [sp, #32]
 800b712:	4b12      	ldr	r3, [pc, #72]	; (800b75c <_Z23getFont_verdana_10_4bppv+0x94>)
 800b714:	9307      	str	r3, [sp, #28]
 800b716:	2300      	movs	r3, #0
 800b718:	9306      	str	r3, [sp, #24]
 800b71a:	2300      	movs	r3, #0
 800b71c:	9305      	str	r3, [sp, #20]
 800b71e:	2301      	movs	r3, #1
 800b720:	9304      	str	r3, [sp, #16]
 800b722:	2304      	movs	r3, #4
 800b724:	9303      	str	r3, [sp, #12]
 800b726:	2300      	movs	r3, #0
 800b728:	9302      	str	r3, [sp, #8]
 800b72a:	2300      	movs	r3, #0
 800b72c:	9301      	str	r3, [sp, #4]
 800b72e:	230a      	movs	r3, #10
 800b730:	9300      	str	r3, [sp, #0]
 800b732:	230c      	movs	r3, #12
 800b734:	2206      	movs	r2, #6
 800b736:	490a      	ldr	r1, [pc, #40]	; (800b760 <_Z23getFont_verdana_10_4bppv+0x98>)
 800b738:	480a      	ldr	r0, [pc, #40]	; (800b764 <_Z23getFont_verdana_10_4bppv+0x9c>)
 800b73a:	f7ff ff1b 	bl	800b574 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800b73e:	480a      	ldr	r0, [pc, #40]	; (800b768 <_Z23getFont_verdana_10_4bppv+0xa0>)
 800b740:	f01d f814 	bl	802876c <atexit>
 800b744:	4803      	ldr	r0, [pc, #12]	; (800b754 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800b746:	f01c ffd2 	bl	80286ee <__cxa_guard_release>
    return verdana_10_4bpp;
 800b74a:	4b06      	ldr	r3, [pc, #24]	; (800b764 <_Z23getFont_verdana_10_4bppv+0x9c>)
}
 800b74c:	4618      	mov	r0, r3
 800b74e:	46bd      	mov	sp, r7
 800b750:	bd80      	pop	{r7, pc}
 800b752:	bf00      	nop
 800b754:	2000b214 	.word	0x2000b214
 800b758:	0802d498 	.word	0x0802d498
 800b75c:	0802d4a4 	.word	0x0802d4a4
 800b760:	0802d424 	.word	0x0802d424
 800b764:	2000b1e8 	.word	0x2000b1e8
 800b768:	0800b6b9 	.word	0x0800b6b9

0800b76c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800b76c:	b580      	push	{r7, lr}
 800b76e:	af00      	add	r7, sp, #0
 800b770:	4801      	ldr	r0, [pc, #4]	; (800b778 <__tcf_0+0xc>)
 800b772:	f7ff fea5 	bl	800b4c0 <_ZN8touchgfx13GeneratedFontD1Ev>
 800b776:	bd80      	pop	{r7, pc}
 800b778:	2000b218 	.word	0x2000b218

0800b77c <_Z23getFont_verdana_20_4bppv>:
{
 800b77c:	b580      	push	{r7, lr}
 800b77e:	b08e      	sub	sp, #56	; 0x38
 800b780:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800b782:	4b21      	ldr	r3, [pc, #132]	; (800b808 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800b784:	681b      	ldr	r3, [r3, #0]
 800b786:	f3bf 8f5b 	dmb	ish
 800b78a:	f003 0301 	and.w	r3, r3, #1
 800b78e:	2b00      	cmp	r3, #0
 800b790:	bf0c      	ite	eq
 800b792:	2301      	moveq	r3, #1
 800b794:	2300      	movne	r3, #0
 800b796:	b2db      	uxtb	r3, r3
 800b798:	2b00      	cmp	r3, #0
 800b79a:	d030      	beq.n	800b7fe <_Z23getFont_verdana_20_4bppv+0x82>
 800b79c:	481a      	ldr	r0, [pc, #104]	; (800b808 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800b79e:	f01c ff9a 	bl	80286d6 <__cxa_guard_acquire>
 800b7a2:	4603      	mov	r3, r0
 800b7a4:	2b00      	cmp	r3, #0
 800b7a6:	bf14      	ite	ne
 800b7a8:	2301      	movne	r3, #1
 800b7aa:	2300      	moveq	r3, #0
 800b7ac:	b2db      	uxtb	r3, r3
 800b7ae:	2b00      	cmp	r3, #0
 800b7b0:	d025      	beq.n	800b7fe <_Z23getFont_verdana_20_4bppv+0x82>
 800b7b2:	2300      	movs	r3, #0
 800b7b4:	930c      	str	r3, [sp, #48]	; 0x30
 800b7b6:	2300      	movs	r3, #0
 800b7b8:	930b      	str	r3, [sp, #44]	; 0x2c
 800b7ba:	2300      	movs	r3, #0
 800b7bc:	930a      	str	r3, [sp, #40]	; 0x28
 800b7be:	233f      	movs	r3, #63	; 0x3f
 800b7c0:	9309      	str	r3, [sp, #36]	; 0x24
 800b7c2:	4b12      	ldr	r3, [pc, #72]	; (800b80c <_Z23getFont_verdana_20_4bppv+0x90>)
 800b7c4:	9308      	str	r3, [sp, #32]
 800b7c6:	4b12      	ldr	r3, [pc, #72]	; (800b810 <_Z23getFont_verdana_20_4bppv+0x94>)
 800b7c8:	9307      	str	r3, [sp, #28]
 800b7ca:	2300      	movs	r3, #0
 800b7cc:	9306      	str	r3, [sp, #24]
 800b7ce:	2300      	movs	r3, #0
 800b7d0:	9305      	str	r3, [sp, #20]
 800b7d2:	2301      	movs	r3, #1
 800b7d4:	9304      	str	r3, [sp, #16]
 800b7d6:	2304      	movs	r3, #4
 800b7d8:	9303      	str	r3, [sp, #12]
 800b7da:	2300      	movs	r3, #0
 800b7dc:	9302      	str	r3, [sp, #8]
 800b7de:	2300      	movs	r3, #0
 800b7e0:	9301      	str	r3, [sp, #4]
 800b7e2:	2314      	movs	r3, #20
 800b7e4:	9300      	str	r3, [sp, #0]
 800b7e6:	2314      	movs	r3, #20
 800b7e8:	2201      	movs	r2, #1
 800b7ea:	490a      	ldr	r1, [pc, #40]	; (800b814 <_Z23getFont_verdana_20_4bppv+0x98>)
 800b7ec:	480a      	ldr	r0, [pc, #40]	; (800b818 <_Z23getFont_verdana_20_4bppv+0x9c>)
 800b7ee:	f7ff fec1 	bl	800b574 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800b7f2:	480a      	ldr	r0, [pc, #40]	; (800b81c <_Z23getFont_verdana_20_4bppv+0xa0>)
 800b7f4:	f01c ffba 	bl	802876c <atexit>
 800b7f8:	4803      	ldr	r0, [pc, #12]	; (800b808 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800b7fa:	f01c ff78 	bl	80286ee <__cxa_guard_release>
    return verdana_20_4bpp;
 800b7fe:	4b06      	ldr	r3, [pc, #24]	; (800b818 <_Z23getFont_verdana_20_4bppv+0x9c>)
}
 800b800:	4618      	mov	r0, r3
 800b802:	46bd      	mov	sp, r7
 800b804:	bd80      	pop	{r7, pc}
 800b806:	bf00      	nop
 800b808:	2000b244 	.word	0x2000b244
 800b80c:	0802d49c 	.word	0x0802d49c
 800b810:	0802d4a8 	.word	0x0802d4a8
 800b814:	0802d478 	.word	0x0802d478
 800b818:	2000b218 	.word	0x2000b218
 800b81c:	0800b76d 	.word	0x0800b76d

0800b820 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800b820:	b580      	push	{r7, lr}
 800b822:	af00      	add	r7, sp, #0
 800b824:	4801      	ldr	r0, [pc, #4]	; (800b82c <__tcf_0+0xc>)
 800b826:	f7ff fe4b 	bl	800b4c0 <_ZN8touchgfx13GeneratedFontD1Ev>
 800b82a:	bd80      	pop	{r7, pc}
 800b82c:	2000b248 	.word	0x2000b248

0800b830 <_Z23getFont_verdana_40_4bppv>:
{
 800b830:	b580      	push	{r7, lr}
 800b832:	b08e      	sub	sp, #56	; 0x38
 800b834:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800b836:	4b21      	ldr	r3, [pc, #132]	; (800b8bc <_Z23getFont_verdana_40_4bppv+0x8c>)
 800b838:	681b      	ldr	r3, [r3, #0]
 800b83a:	f3bf 8f5b 	dmb	ish
 800b83e:	f003 0301 	and.w	r3, r3, #1
 800b842:	2b00      	cmp	r3, #0
 800b844:	bf0c      	ite	eq
 800b846:	2301      	moveq	r3, #1
 800b848:	2300      	movne	r3, #0
 800b84a:	b2db      	uxtb	r3, r3
 800b84c:	2b00      	cmp	r3, #0
 800b84e:	d030      	beq.n	800b8b2 <_Z23getFont_verdana_40_4bppv+0x82>
 800b850:	481a      	ldr	r0, [pc, #104]	; (800b8bc <_Z23getFont_verdana_40_4bppv+0x8c>)
 800b852:	f01c ff40 	bl	80286d6 <__cxa_guard_acquire>
 800b856:	4603      	mov	r3, r0
 800b858:	2b00      	cmp	r3, #0
 800b85a:	bf14      	ite	ne
 800b85c:	2301      	movne	r3, #1
 800b85e:	2300      	moveq	r3, #0
 800b860:	b2db      	uxtb	r3, r3
 800b862:	2b00      	cmp	r3, #0
 800b864:	d025      	beq.n	800b8b2 <_Z23getFont_verdana_40_4bppv+0x82>
 800b866:	2300      	movs	r3, #0
 800b868:	930c      	str	r3, [sp, #48]	; 0x30
 800b86a:	2300      	movs	r3, #0
 800b86c:	930b      	str	r3, [sp, #44]	; 0x2c
 800b86e:	2300      	movs	r3, #0
 800b870:	930a      	str	r3, [sp, #40]	; 0x28
 800b872:	233f      	movs	r3, #63	; 0x3f
 800b874:	9309      	str	r3, [sp, #36]	; 0x24
 800b876:	4b12      	ldr	r3, [pc, #72]	; (800b8c0 <_Z23getFont_verdana_40_4bppv+0x90>)
 800b878:	9308      	str	r3, [sp, #32]
 800b87a:	4b12      	ldr	r3, [pc, #72]	; (800b8c4 <_Z23getFont_verdana_40_4bppv+0x94>)
 800b87c:	9307      	str	r3, [sp, #28]
 800b87e:	2300      	movs	r3, #0
 800b880:	9306      	str	r3, [sp, #24]
 800b882:	2300      	movs	r3, #0
 800b884:	9305      	str	r3, [sp, #20]
 800b886:	2301      	movs	r3, #1
 800b888:	9304      	str	r3, [sp, #16]
 800b88a:	2304      	movs	r3, #4
 800b88c:	9303      	str	r3, [sp, #12]
 800b88e:	2300      	movs	r3, #0
 800b890:	9302      	str	r3, [sp, #8]
 800b892:	2300      	movs	r3, #0
 800b894:	9301      	str	r3, [sp, #4]
 800b896:	2328      	movs	r3, #40	; 0x28
 800b898:	9300      	str	r3, [sp, #0]
 800b89a:	2328      	movs	r3, #40	; 0x28
 800b89c:	2201      	movs	r2, #1
 800b89e:	490a      	ldr	r1, [pc, #40]	; (800b8c8 <_Z23getFont_verdana_40_4bppv+0x98>)
 800b8a0:	480a      	ldr	r0, [pc, #40]	; (800b8cc <_Z23getFont_verdana_40_4bppv+0x9c>)
 800b8a2:	f7ff fe67 	bl	800b574 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800b8a6:	480a      	ldr	r0, [pc, #40]	; (800b8d0 <_Z23getFont_verdana_40_4bppv+0xa0>)
 800b8a8:	f01c ff60 	bl	802876c <atexit>
 800b8ac:	4803      	ldr	r0, [pc, #12]	; (800b8bc <_Z23getFont_verdana_40_4bppv+0x8c>)
 800b8ae:	f01c ff1e 	bl	80286ee <__cxa_guard_release>
    return verdana_40_4bpp;
 800b8b2:	4b06      	ldr	r3, [pc, #24]	; (800b8cc <_Z23getFont_verdana_40_4bppv+0x9c>)
}
 800b8b4:	4618      	mov	r0, r3
 800b8b6:	46bd      	mov	sp, r7
 800b8b8:	bd80      	pop	{r7, pc}
 800b8ba:	bf00      	nop
 800b8bc:	2000b274 	.word	0x2000b274
 800b8c0:	0802d4a0 	.word	0x0802d4a0
 800b8c4:	0802d4ac 	.word	0x0802d4ac
 800b8c8:	0802d488 	.word	0x0802d488
 800b8cc:	2000b248 	.word	0x2000b248
 800b8d0:	0800b821 	.word	0x0800b821

0800b8d4 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800b8d4:	b480      	push	{r7}
 800b8d6:	b083      	sub	sp, #12
 800b8d8:	af00      	add	r7, sp, #0
 800b8da:	6078      	str	r0, [r7, #4]
 800b8dc:	6039      	str	r1, [r7, #0]
 800b8de:	683b      	ldr	r3, [r7, #0]
 800b8e0:	4618      	mov	r0, r3
 800b8e2:	370c      	adds	r7, #12
 800b8e4:	46bd      	mov	sp, r7
 800b8e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8ea:	4770      	bx	lr

0800b8ec <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800b8ec:	b480      	push	{r7}
 800b8ee:	b083      	sub	sp, #12
 800b8f0:	af00      	add	r7, sp, #0
 800b8f2:	6078      	str	r0, [r7, #4]
 800b8f4:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800b8f6:	bf00      	nop
 800b8f8:	370c      	adds	r7, #12
 800b8fa:	46bd      	mov	sp, r7
 800b8fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b900:	4770      	bx	lr

0800b902 <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800b902:	b480      	push	{r7}
 800b904:	b083      	sub	sp, #12
 800b906:	af00      	add	r7, sp, #0
 800b908:	6078      	str	r0, [r7, #4]
 800b90a:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800b90c:	bf00      	nop
 800b90e:	370c      	adds	r7, #12
 800b910:	46bd      	mov	sp, r7
 800b912:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b916:	4770      	bx	lr

0800b918 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800b918:	b480      	push	{r7}
 800b91a:	b083      	sub	sp, #12
 800b91c:	af00      	add	r7, sp, #0
 800b91e:	6078      	str	r0, [r7, #4]
 800b920:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800b922:	bf00      	nop
 800b924:	370c      	adds	r7, #12
 800b926:	46bd      	mov	sp, r7
 800b928:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b92c:	4770      	bx	lr

0800b92e <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 800b92e:	b480      	push	{r7}
 800b930:	b083      	sub	sp, #12
 800b932:	af00      	add	r7, sp, #0
 800b934:	6078      	str	r0, [r7, #4]
 800b936:	460b      	mov	r3, r1
 800b938:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 800b93a:	bf00      	nop
 800b93c:	370c      	adds	r7, #12
 800b93e:	46bd      	mov	sp, r7
 800b940:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b944:	4770      	bx	lr

0800b946 <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 800b946:	b480      	push	{r7}
 800b948:	b083      	sub	sp, #12
 800b94a:	af00      	add	r7, sp, #0
 800b94c:	6078      	str	r0, [r7, #4]
    {
    }
 800b94e:	bf00      	nop
 800b950:	370c      	adds	r7, #12
 800b952:	46bd      	mov	sp, r7
 800b954:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b958:	4770      	bx	lr

0800b95a <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 800b95a:	b480      	push	{r7}
 800b95c:	b083      	sub	sp, #12
 800b95e:	af00      	add	r7, sp, #0
 800b960:	6078      	str	r0, [r7, #4]
    {
    }
 800b962:	bf00      	nop
 800b964:	370c      	adds	r7, #12
 800b966:	46bd      	mov	sp, r7
 800b968:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b96c:	4770      	bx	lr
	...

0800b970 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 800b970:	b480      	push	{r7}
 800b972:	b083      	sub	sp, #12
 800b974:	af00      	add	r7, sp, #0
 800b976:	6078      	str	r0, [r7, #4]
    {
 800b978:	4a04      	ldr	r2, [pc, #16]	; (800b98c <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800b97a:	687b      	ldr	r3, [r7, #4]
 800b97c:	601a      	str	r2, [r3, #0]
    }
 800b97e:	687b      	ldr	r3, [r7, #4]
 800b980:	4618      	mov	r0, r3
 800b982:	370c      	adds	r7, #12
 800b984:	46bd      	mov	sp, r7
 800b986:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b98a:	4770      	bx	lr
 800b98c:	0802b81c 	.word	0x0802b81c

0800b990 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 800b990:	b580      	push	{r7, lr}
 800b992:	b082      	sub	sp, #8
 800b994:	af00      	add	r7, sp, #0
 800b996:	6078      	str	r0, [r7, #4]
    }
 800b998:	6878      	ldr	r0, [r7, #4]
 800b99a:	f7ff ffe9 	bl	800b970 <_ZN8touchgfx15UIEventListenerD1Ev>
 800b99e:	2104      	movs	r1, #4
 800b9a0:	6878      	ldr	r0, [r7, #4]
 800b9a2:	f01c fe96 	bl	80286d2 <_ZdlPvj>
 800b9a6:	687b      	ldr	r3, [r7, #4]
 800b9a8:	4618      	mov	r0, r3
 800b9aa:	3708      	adds	r7, #8
 800b9ac:	46bd      	mov	sp, r7
 800b9ae:	bd80      	pop	{r7, pc}

0800b9b0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 800b9b0:	b480      	push	{r7}
 800b9b2:	b083      	sub	sp, #12
 800b9b4:	af00      	add	r7, sp, #0
 800b9b6:	6078      	str	r0, [r7, #4]
    {
    }
 800b9b8:	bf00      	nop
 800b9ba:	370c      	adds	r7, #12
 800b9bc:	46bd      	mov	sp, r7
 800b9be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9c2:	4770      	bx	lr

0800b9c4 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 800b9c4:	b480      	push	{r7}
 800b9c6:	b083      	sub	sp, #12
 800b9c8:	af00      	add	r7, sp, #0
 800b9ca:	6078      	str	r0, [r7, #4]
 800b9cc:	460b      	mov	r3, r1
 800b9ce:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 800b9d0:	bf00      	nop
 800b9d2:	370c      	adds	r7, #12
 800b9d4:	46bd      	mov	sp, r7
 800b9d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9da:	4770      	bx	lr

0800b9dc <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 800b9dc:	b480      	push	{r7}
 800b9de:	b083      	sub	sp, #12
 800b9e0:	af00      	add	r7, sp, #0
 800b9e2:	6078      	str	r0, [r7, #4]
 800b9e4:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 800b9e6:	687b      	ldr	r3, [r7, #4]
 800b9e8:	683a      	ldr	r2, [r7, #0]
 800b9ea:	f503 7398 	add.w	r3, r3, #304	; 0x130
 800b9ee:	6810      	ldr	r0, [r2, #0]
 800b9f0:	6851      	ldr	r1, [r2, #4]
 800b9f2:	c303      	stmia	r3!, {r0, r1}
    }
 800b9f4:	bf00      	nop
 800b9f6:	370c      	adds	r7, #12
 800b9f8:	46bd      	mov	sp, r7
 800b9fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9fe:	4770      	bx	lr

0800ba00 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 800ba00:	b580      	push	{r7, lr}
 800ba02:	b082      	sub	sp, #8
 800ba04:	af00      	add	r7, sp, #0
 800ba06:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 800ba08:	687b      	ldr	r3, [r7, #4]
 800ba0a:	3304      	adds	r3, #4
 800ba0c:	4618      	mov	r0, r3
 800ba0e:	f00b fd89 	bl	8017524 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800ba12:	bf00      	nop
 800ba14:	3708      	adds	r7, #8
 800ba16:	46bd      	mov	sp, r7
 800ba18:	bd80      	pop	{r7, pc}
	...

0800ba1c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 800ba1c:	b480      	push	{r7}
 800ba1e:	b083      	sub	sp, #12
 800ba20:	af00      	add	r7, sp, #0
 800ba22:	6078      	str	r0, [r7, #4]
    {
 800ba24:	4a04      	ldr	r2, [pc, #16]	; (800ba38 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 800ba26:	687b      	ldr	r3, [r7, #4]
 800ba28:	601a      	str	r2, [r3, #0]
    }
 800ba2a:	687b      	ldr	r3, [r7, #4]
 800ba2c:	4618      	mov	r0, r3
 800ba2e:	370c      	adds	r7, #12
 800ba30:	46bd      	mov	sp, r7
 800ba32:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba36:	4770      	bx	lr
 800ba38:	0802b804 	.word	0x0802b804

0800ba3c <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 800ba3c:	b580      	push	{r7, lr}
 800ba3e:	b082      	sub	sp, #8
 800ba40:	af00      	add	r7, sp, #0
 800ba42:	6078      	str	r0, [r7, #4]
    }
 800ba44:	6878      	ldr	r0, [r7, #4]
 800ba46:	f7ff ffe9 	bl	800ba1c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800ba4a:	2104      	movs	r1, #4
 800ba4c:	6878      	ldr	r0, [r7, #4]
 800ba4e:	f01c fe40 	bl	80286d2 <_ZdlPvj>
 800ba52:	687b      	ldr	r3, [r7, #4]
 800ba54:	4618      	mov	r0, r3
 800ba56:	3708      	adds	r7, #8
 800ba58:	46bd      	mov	sp, r7
 800ba5a:	bd80      	pop	{r7, pc}

0800ba5c <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 800ba5c:	b480      	push	{r7}
 800ba5e:	af00      	add	r7, sp, #0
    {
        return instance;
 800ba60:	4b03      	ldr	r3, [pc, #12]	; (800ba70 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800ba62:	681b      	ldr	r3, [r3, #0]
    }
 800ba64:	4618      	mov	r0, r3
 800ba66:	46bd      	mov	sp, r7
 800ba68:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba6c:	4770      	bx	lr
 800ba6e:	bf00      	nop
 800ba70:	2000e1c0 	.word	0x2000e1c0

0800ba74 <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 800ba74:	b480      	push	{r7}
 800ba76:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800ba78:	4b0b      	ldr	r3, [pc, #44]	; (800baa8 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800ba7a:	681b      	ldr	r3, [r3, #0]
 800ba7c:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 800ba80:	2b00      	cmp	r3, #0
 800ba82:	d008      	beq.n	800ba96 <_ZN8touchgfx3HAL3lcdEv+0x22>
 800ba84:	4b08      	ldr	r3, [pc, #32]	; (800baa8 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800ba86:	681b      	ldr	r3, [r3, #0]
 800ba88:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800ba8a:	2b00      	cmp	r3, #0
 800ba8c:	d003      	beq.n	800ba96 <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 800ba8e:	4b06      	ldr	r3, [pc, #24]	; (800baa8 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800ba90:	681b      	ldr	r3, [r3, #0]
 800ba92:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800ba94:	e002      	b.n	800ba9c <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 800ba96:	4b04      	ldr	r3, [pc, #16]	; (800baa8 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800ba98:	681b      	ldr	r3, [r3, #0]
 800ba9a:	689b      	ldr	r3, [r3, #8]
    }
 800ba9c:	4618      	mov	r0, r3
 800ba9e:	46bd      	mov	sp, r7
 800baa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800baa4:	4770      	bx	lr
 800baa6:	bf00      	nop
 800baa8:	2000e1c0 	.word	0x2000e1c0

0800baac <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 800baac:	b480      	push	{r7}
 800baae:	b083      	sub	sp, #12
 800bab0:	af00      	add	r7, sp, #0
 800bab2:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 800bab4:	4a07      	ldr	r2, [pc, #28]	; (800bad4 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800bab6:	687b      	ldr	r3, [r7, #4]
 800bab8:	601a      	str	r2, [r3, #0]
 800baba:	687b      	ldr	r3, [r7, #4]
 800babc:	2200      	movs	r2, #0
 800babe:	605a      	str	r2, [r3, #4]
 800bac0:	687b      	ldr	r3, [r7, #4]
 800bac2:	2200      	movs	r2, #0
 800bac4:	721a      	strb	r2, [r3, #8]
    {
    }
 800bac6:	687b      	ldr	r3, [r7, #4]
 800bac8:	4618      	mov	r0, r3
 800baca:	370c      	adds	r7, #12
 800bacc:	46bd      	mov	sp, r7
 800bace:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bad2:	4770      	bx	lr
 800bad4:	0802b7e0 	.word	0x0802b7e0

0800bad8 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 800bad8:	b480      	push	{r7}
 800bada:	b083      	sub	sp, #12
 800badc:	af00      	add	r7, sp, #0
 800bade:	6078      	str	r0, [r7, #4]
    {
 800bae0:	4a04      	ldr	r2, [pc, #16]	; (800baf4 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800bae2:	687b      	ldr	r3, [r7, #4]
 800bae4:	601a      	str	r2, [r3, #0]
    }
 800bae6:	687b      	ldr	r3, [r7, #4]
 800bae8:	4618      	mov	r0, r3
 800baea:	370c      	adds	r7, #12
 800baec:	46bd      	mov	sp, r7
 800baee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800baf2:	4770      	bx	lr
 800baf4:	0802b7e0 	.word	0x0802b7e0

0800baf8 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 800baf8:	b580      	push	{r7, lr}
 800bafa:	b082      	sub	sp, #8
 800bafc:	af00      	add	r7, sp, #0
 800bafe:	6078      	str	r0, [r7, #4]
    }
 800bb00:	6878      	ldr	r0, [r7, #4]
 800bb02:	f7ff ffe9 	bl	800bad8 <_ZN8touchgfx10TransitionD1Ev>
 800bb06:	210c      	movs	r1, #12
 800bb08:	6878      	ldr	r0, [r7, #4]
 800bb0a:	f01c fde2 	bl	80286d2 <_ZdlPvj>
 800bb0e:	687b      	ldr	r3, [r7, #4]
 800bb10:	4618      	mov	r0, r3
 800bb12:	3708      	adds	r7, #8
 800bb14:	46bd      	mov	sp, r7
 800bb16:	bd80      	pop	{r7, pc}

0800bb18 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 800bb18:	b480      	push	{r7}
 800bb1a:	b083      	sub	sp, #12
 800bb1c:	af00      	add	r7, sp, #0
 800bb1e:	6078      	str	r0, [r7, #4]
    {
    }
 800bb20:	bf00      	nop
 800bb22:	370c      	adds	r7, #12
 800bb24:	46bd      	mov	sp, r7
 800bb26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb2a:	4770      	bx	lr

0800bb2c <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 800bb2c:	b480      	push	{r7}
 800bb2e:	b083      	sub	sp, #12
 800bb30:	af00      	add	r7, sp, #0
 800bb32:	6078      	str	r0, [r7, #4]
    {
    }
 800bb34:	bf00      	nop
 800bb36:	370c      	adds	r7, #12
 800bb38:	46bd      	mov	sp, r7
 800bb3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb3e:	4770      	bx	lr

0800bb40 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 800bb40:	b480      	push	{r7}
 800bb42:	b083      	sub	sp, #12
 800bb44:	af00      	add	r7, sp, #0
 800bb46:	6078      	str	r0, [r7, #4]
    {
    }
 800bb48:	bf00      	nop
 800bb4a:	370c      	adds	r7, #12
 800bb4c:	46bd      	mov	sp, r7
 800bb4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb52:	4770      	bx	lr

0800bb54 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 800bb54:	b580      	push	{r7, lr}
 800bb56:	b082      	sub	sp, #8
 800bb58:	af00      	add	r7, sp, #0
 800bb5a:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 800bb5c:	f00b fca4 	bl	80174a8 <_ZN8touchgfx11Application11getInstanceEv>
 800bb60:	4603      	mov	r3, r0
 800bb62:	681a      	ldr	r2, [r3, #0]
 800bb64:	323c      	adds	r2, #60	; 0x3c
 800bb66:	6812      	ldr	r2, [r2, #0]
 800bb68:	4618      	mov	r0, r3
 800bb6a:	4790      	blx	r2
    }
 800bb6c:	bf00      	nop
 800bb6e:	3708      	adds	r7, #8
 800bb70:	46bd      	mov	sp, r7
 800bb72:	bd80      	pop	{r7, pc}

0800bb74 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 800bb74:	b480      	push	{r7}
 800bb76:	b083      	sub	sp, #12
 800bb78:	af00      	add	r7, sp, #0
 800bb7a:	6078      	str	r0, [r7, #4]
 800bb7c:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 800bb7e:	687b      	ldr	r3, [r7, #4]
 800bb80:	683a      	ldr	r2, [r7, #0]
 800bb82:	605a      	str	r2, [r3, #4]
    }
 800bb84:	bf00      	nop
 800bb86:	370c      	adds	r7, #12
 800bb88:	46bd      	mov	sp, r7
 800bb8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb8e:	4770      	bx	lr

0800bb90 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 800bb90:	b580      	push	{r7, lr}
 800bb92:	b082      	sub	sp, #8
 800bb94:	af00      	add	r7, sp, #0
 800bb96:	6078      	str	r0, [r7, #4]
 800bb98:	4a05      	ldr	r2, [pc, #20]	; (800bbb0 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800bb9a:	687b      	ldr	r3, [r7, #4]
 800bb9c:	601a      	str	r2, [r3, #0]
 800bb9e:	687b      	ldr	r3, [r7, #4]
 800bba0:	4618      	mov	r0, r3
 800bba2:	f7ff fee5 	bl	800b970 <_ZN8touchgfx15UIEventListenerD1Ev>
 800bba6:	687b      	ldr	r3, [r7, #4]
 800bba8:	4618      	mov	r0, r3
 800bbaa:	3708      	adds	r7, #8
 800bbac:	46bd      	mov	sp, r7
 800bbae:	bd80      	pop	{r7, pc}
 800bbb0:	0802cd68 	.word	0x0802cd68

0800bbb4 <_ZN8touchgfx11ApplicationD0Ev>:
 800bbb4:	b580      	push	{r7, lr}
 800bbb6:	b082      	sub	sp, #8
 800bbb8:	af00      	add	r7, sp, #0
 800bbba:	6078      	str	r0, [r7, #4]
 800bbbc:	6878      	ldr	r0, [r7, #4]
 800bbbe:	f7ff ffe7 	bl	800bb90 <_ZN8touchgfx11ApplicationD1Ev>
 800bbc2:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800bbc6:	6878      	ldr	r0, [r7, #4]
 800bbc8:	f01c fd83 	bl	80286d2 <_ZdlPvj>
 800bbcc:	687b      	ldr	r3, [r7, #4]
 800bbce:	4618      	mov	r0, r3
 800bbd0:	3708      	adds	r7, #8
 800bbd2:	46bd      	mov	sp, r7
 800bbd4:	bd80      	pop	{r7, pc}
	...

0800bbd8 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 800bbd8:	b580      	push	{r7, lr}
 800bbda:	b082      	sub	sp, #8
 800bbdc:	af00      	add	r7, sp, #0
 800bbde:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 800bbe0:	687b      	ldr	r3, [r7, #4]
 800bbe2:	4618      	mov	r0, r3
 800bbe4:	f00b fd6c 	bl	80176c0 <_ZN8touchgfx11ApplicationC1Ev>
 800bbe8:	4a09      	ldr	r2, [pc, #36]	; (800bc10 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800bbea:	687b      	ldr	r3, [r7, #4]
 800bbec:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 800bbee:	687b      	ldr	r3, [r7, #4]
 800bbf0:	2200      	movs	r2, #0
 800bbf2:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
          pendingScreenTransitionCallback(0)
 800bbf6:	687b      	ldr	r3, [r7, #4]
 800bbf8:	2200      	movs	r2, #0
 800bbfa:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
    {
        instance = this;
 800bbfe:	687b      	ldr	r3, [r7, #4]
 800bc00:	4a04      	ldr	r2, [pc, #16]	; (800bc14 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800bc02:	6013      	str	r3, [r2, #0]
    }
 800bc04:	687b      	ldr	r3, [r7, #4]
 800bc06:	4618      	mov	r0, r3
 800bc08:	3708      	adds	r7, #8
 800bc0a:	46bd      	mov	sp, r7
 800bc0c:	bd80      	pop	{r7, pc}
 800bc0e:	bf00      	nop
 800bc10:	0802b78c 	.word	0x0802b78c
 800bc14:	2000e214 	.word	0x2000e214

0800bc18 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800bc18:	b580      	push	{r7, lr}
 800bc1a:	b082      	sub	sp, #8
 800bc1c:	af00      	add	r7, sp, #0
 800bc1e:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 800bc20:	6878      	ldr	r0, [r7, #4]
 800bc22:	f000 f804 	bl	800bc2e <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 800bc26:	bf00      	nop
 800bc28:	3708      	adds	r7, #8
 800bc2a:	46bd      	mov	sp, r7
 800bc2c:	bd80      	pop	{r7, pc}

0800bc2e <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 800bc2e:	b580      	push	{r7, lr}
 800bc30:	b082      	sub	sp, #8
 800bc32:	af00      	add	r7, sp, #0
 800bc34:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800bc36:	687b      	ldr	r3, [r7, #4]
 800bc38:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800bc3c:	2b00      	cmp	r3, #0
 800bc3e:	d00f      	beq.n	800bc60 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800bc40:	687b      	ldr	r3, [r7, #4]
 800bc42:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800bc46:	687b      	ldr	r3, [r7, #4]
 800bc48:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800bc4c:	681b      	ldr	r3, [r3, #0]
 800bc4e:	330c      	adds	r3, #12
 800bc50:	681b      	ldr	r3, [r3, #0]
 800bc52:	4610      	mov	r0, r2
 800bc54:	4798      	blx	r3
 800bc56:	4603      	mov	r3, r0
 800bc58:	2b00      	cmp	r3, #0
 800bc5a:	d001      	beq.n	800bc60 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800bc5c:	2301      	movs	r3, #1
 800bc5e:	e000      	b.n	800bc62 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 800bc60:	2300      	movs	r3, #0
 800bc62:	2b00      	cmp	r3, #0
 800bc64:	d00e      	beq.n	800bc84 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 800bc66:	687b      	ldr	r3, [r7, #4]
 800bc68:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800bc6c:	687b      	ldr	r3, [r7, #4]
 800bc6e:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800bc72:	681b      	ldr	r3, [r3, #0]
 800bc74:	3308      	adds	r3, #8
 800bc76:	681b      	ldr	r3, [r3, #0]
 800bc78:	4610      	mov	r0, r2
 800bc7a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800bc7c:	687b      	ldr	r3, [r7, #4]
 800bc7e:	2200      	movs	r2, #0
 800bc80:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
        }
    }
 800bc84:	bf00      	nop
 800bc86:	3708      	adds	r7, #8
 800bc88:	46bd      	mov	sp, r7
 800bc8a:	bd80      	pop	{r7, pc}

0800bc8c <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 800bc8c:	b480      	push	{r7}
 800bc8e:	b083      	sub	sp, #12
 800bc90:	af00      	add	r7, sp, #0
 800bc92:	6078      	str	r0, [r7, #4]
 800bc94:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800bc96:	687b      	ldr	r3, [r7, #4]
 800bc98:	683a      	ldr	r2, [r7, #0]
 800bc9a:	601a      	str	r2, [r3, #0]
    }
 800bc9c:	bf00      	nop
 800bc9e:	370c      	adds	r7, #12
 800bca0:	46bd      	mov	sp, r7
 800bca2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bca6:	4770      	bx	lr

0800bca8 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 800bca8:	b580      	push	{r7, lr}
 800bcaa:	b082      	sub	sp, #8
 800bcac:	af00      	add	r7, sp, #0
 800bcae:	6078      	str	r0, [r7, #4]
 800bcb0:	4a05      	ldr	r2, [pc, #20]	; (800bcc8 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800bcb2:	687b      	ldr	r3, [r7, #4]
 800bcb4:	601a      	str	r2, [r3, #0]
 800bcb6:	687b      	ldr	r3, [r7, #4]
 800bcb8:	4618      	mov	r0, r3
 800bcba:	f7ff ff69 	bl	800bb90 <_ZN8touchgfx11ApplicationD1Ev>
 800bcbe:	687b      	ldr	r3, [r7, #4]
 800bcc0:	4618      	mov	r0, r3
 800bcc2:	3708      	adds	r7, #8
 800bcc4:	46bd      	mov	sp, r7
 800bcc6:	bd80      	pop	{r7, pc}
 800bcc8:	0802b78c 	.word	0x0802b78c

0800bccc <_ZN8touchgfx14MVPApplicationD0Ev>:
 800bccc:	b580      	push	{r7, lr}
 800bcce:	b082      	sub	sp, #8
 800bcd0:	af00      	add	r7, sp, #0
 800bcd2:	6078      	str	r0, [r7, #4]
 800bcd4:	6878      	ldr	r0, [r7, #4]
 800bcd6:	f7ff ffe7 	bl	800bca8 <_ZN8touchgfx14MVPApplicationD1Ev>
 800bcda:	f44f 71a2 	mov.w	r1, #324	; 0x144
 800bcde:	6878      	ldr	r0, [r7, #4]
 800bce0:	f01c fcf7 	bl	80286d2 <_ZdlPvj>
 800bce4:	687b      	ldr	r3, [r7, #4]
 800bce6:	4618      	mov	r0, r3
 800bce8:	3708      	adds	r7, #8
 800bcea:	46bd      	mov	sp, r7
 800bcec:	bd80      	pop	{r7, pc}
	...

0800bcf0 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800bcf0:	b580      	push	{r7, lr}
 800bcf2:	b082      	sub	sp, #8
 800bcf4:	af00      	add	r7, sp, #0
 800bcf6:	6078      	str	r0, [r7, #4]
 800bcf8:	4a08      	ldr	r2, [pc, #32]	; (800bd1c <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 800bcfa:	687b      	ldr	r3, [r7, #4]
 800bcfc:	601a      	str	r2, [r3, #0]
 800bcfe:	687b      	ldr	r3, [r7, #4]
 800bd00:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800bd04:	4618      	mov	r0, r3
 800bd06:	f000 facd 	bl	800c2a4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800bd0a:	687b      	ldr	r3, [r7, #4]
 800bd0c:	4618      	mov	r0, r3
 800bd0e:	f7ff ffcb 	bl	800bca8 <_ZN8touchgfx14MVPApplicationD1Ev>
 800bd12:	687b      	ldr	r3, [r7, #4]
 800bd14:	4618      	mov	r0, r3
 800bd16:	3708      	adds	r7, #8
 800bd18:	46bd      	mov	sp, r7
 800bd1a:	bd80      	pop	{r7, pc}
 800bd1c:	0802b720 	.word	0x0802b720

0800bd20 <_ZN23FrontendApplicationBaseD0Ev>:
 800bd20:	b580      	push	{r7, lr}
 800bd22:	b082      	sub	sp, #8
 800bd24:	af00      	add	r7, sp, #0
 800bd26:	6078      	str	r0, [r7, #4]
 800bd28:	6878      	ldr	r0, [r7, #4]
 800bd2a:	f7ff ffe1 	bl	800bcf0 <_ZN23FrontendApplicationBaseD1Ev>
 800bd2e:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800bd32:	6878      	ldr	r0, [r7, #4]
 800bd34:	f01c fccd 	bl	80286d2 <_ZdlPvj>
 800bd38:	687b      	ldr	r3, [r7, #4]
 800bd3a:	4618      	mov	r0, r3
 800bd3c:	3708      	adds	r7, #8
 800bd3e:	46bd      	mov	sp, r7
 800bd40:	bd80      	pop	{r7, pc}

0800bd42 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 800bd42:	b580      	push	{r7, lr}
 800bd44:	b082      	sub	sp, #8
 800bd46:	af00      	add	r7, sp, #0
 800bd48:	6078      	str	r0, [r7, #4]
    {
        gotoscreenScreenNoTransition();
 800bd4a:	6878      	ldr	r0, [r7, #4]
 800bd4c:	f000 f882 	bl	800be54 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>
    }
 800bd50:	bf00      	nop
 800bd52:	3708      	adds	r7, #8
 800bd54:	46bd      	mov	sp, r7
 800bd56:	bd80      	pop	{r7, pc}

0800bd58 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 800bd58:	b480      	push	{r7}
 800bd5a:	b083      	sub	sp, #12
 800bd5c:	af00      	add	r7, sp, #0
 800bd5e:	6078      	str	r0, [r7, #4]
    {
        done = true;
 800bd60:	687b      	ldr	r3, [r7, #4]
 800bd62:	2201      	movs	r2, #1
 800bd64:	721a      	strb	r2, [r3, #8]
    }
 800bd66:	bf00      	nop
 800bd68:	370c      	adds	r7, #12
 800bd6a:	46bd      	mov	sp, r7
 800bd6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd70:	4770      	bx	lr

0800bd72 <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 800bd72:	b480      	push	{r7}
 800bd74:	b083      	sub	sp, #12
 800bd76:	af00      	add	r7, sp, #0
 800bd78:	6078      	str	r0, [r7, #4]
 800bd7a:	6039      	str	r1, [r7, #0]
    {
        model = m;
 800bd7c:	687b      	ldr	r3, [r7, #4]
 800bd7e:	683a      	ldr	r2, [r7, #0]
 800bd80:	605a      	str	r2, [r3, #4]
    }
 800bd82:	bf00      	nop
 800bd84:	370c      	adds	r7, #12
 800bd86:	46bd      	mov	sp, r7
 800bd88:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd8c:	4770      	bx	lr
	...

0800bd90 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen_screen/screenView.hpp>
#include <gui/screen_screen/screenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800bd90:	b580      	push	{r7, lr}
 800bd92:	b084      	sub	sp, #16
 800bd94:	af00      	add	r7, sp, #0
 800bd96:	60f8      	str	r0, [r7, #12]
 800bd98:	60b9      	str	r1, [r7, #8]
 800bd9a:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 800bd9c:	68fb      	ldr	r3, [r7, #12]
 800bd9e:	4618      	mov	r0, r3
 800bda0:	f7ff ff1a 	bl	800bbd8 <_ZN8touchgfx14MVPApplicationC1Ev>
 800bda4:	4a16      	ldr	r2, [pc, #88]	; (800be00 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>)
 800bda6:	68fb      	ldr	r3, [r7, #12]
 800bda8:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 800bdaa:	68fb      	ldr	r3, [r7, #12]
 800bdac:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800bdb0:	4618      	mov	r0, r3
 800bdb2:	f000 f8a5 	bl	800bf00 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 800bdb6:	68fb      	ldr	r3, [r7, #12]
 800bdb8:	687a      	ldr	r2, [r7, #4]
 800bdba:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
      model(m)
 800bdbe:	68fb      	ldr	r3, [r7, #12]
 800bdc0:	68ba      	ldr	r2, [r7, #8]
 800bdc2:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800bdc6:	f7ff fe49 	bl	800ba5c <_ZN8touchgfx3HAL11getInstanceEv>
 800bdca:	4603      	mov	r3, r0
 800bdcc:	681a      	ldr	r2, [r3, #0]
 800bdce:	3208      	adds	r2, #8
 800bdd0:	6812      	ldr	r2, [r2, #0]
 800bdd2:	2101      	movs	r1, #1
 800bdd4:	4618      	mov	r0, r3
 800bdd6:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 800bdd8:	2000      	movs	r0, #0
 800bdda:	f003 ff3f 	bl	800fc5c <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800bdde:	f7ff fe49 	bl	800ba74 <_ZN8touchgfx3HAL3lcdEv>
 800bde2:	4603      	mov	r3, r0
 800bde4:	4618      	mov	r0, r3
 800bde6:	f014 fdf8 	bl	80209da <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800bdea:	f7ff fe43 	bl	800ba74 <_ZN8touchgfx3HAL3lcdEv>
 800bdee:	4603      	mov	r3, r0
 800bdf0:	4618      	mov	r0, r3
 800bdf2:	f014 fe6d 	bl	8020ad0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800bdf6:	68fb      	ldr	r3, [r7, #12]
 800bdf8:	4618      	mov	r0, r3
 800bdfa:	3710      	adds	r7, #16
 800bdfc:	46bd      	mov	sp, r7
 800bdfe:	bd80      	pop	{r7, pc}
 800be00:	0802b720 	.word	0x0802b720

0800be04 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 800be04:	b480      	push	{r7}
 800be06:	b083      	sub	sp, #12
 800be08:	af00      	add	r7, sp, #0
 800be0a:	6078      	str	r0, [r7, #4]
 800be0c:	6039      	str	r1, [r7, #0]
 800be0e:	687b      	ldr	r3, [r7, #4]
 800be10:	4618      	mov	r0, r3
 800be12:	370c      	adds	r7, #12
 800be14:	46bd      	mov	sp, r7
 800be16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be1a:	4770      	bx	lr

0800be1c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800be1c:	b580      	push	{r7, lr}
 800be1e:	b082      	sub	sp, #8
 800be20:	af00      	add	r7, sp, #0
 800be22:	6078      	str	r0, [r7, #4]
 800be24:	6039      	str	r1, [r7, #0]
 800be26:	687b      	ldr	r3, [r7, #4]
 800be28:	683a      	ldr	r2, [r7, #0]
 800be2a:	4611      	mov	r1, r2
 800be2c:	4618      	mov	r0, r3
 800be2e:	f7ff ffe9 	bl	800be04 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 800be32:	683b      	ldr	r3, [r7, #0]
 800be34:	685a      	ldr	r2, [r3, #4]
 800be36:	687b      	ldr	r3, [r7, #4]
 800be38:	605a      	str	r2, [r3, #4]
 800be3a:	687b      	ldr	r3, [r7, #4]
 800be3c:	683a      	ldr	r2, [r7, #0]
 800be3e:	3308      	adds	r3, #8
 800be40:	3208      	adds	r2, #8
 800be42:	e892 0003 	ldmia.w	r2, {r0, r1}
 800be46:	e883 0003 	stmia.w	r3, {r0, r1}
 800be4a:	687b      	ldr	r3, [r7, #4]
 800be4c:	4618      	mov	r0, r3
 800be4e:	3708      	adds	r7, #8
 800be50:	46bd      	mov	sp, r7
 800be52:	bd80      	pop	{r7, pc}

0800be54 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>:
 */

// screen

void FrontendApplicationBase::gotoscreenScreenNoTransition()
{
 800be54:	b590      	push	{r4, r7, lr}
 800be56:	b089      	sub	sp, #36	; 0x24
 800be58:	af00      	add	r7, sp, #0
 800be5a:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreenScreenNoTransitionImpl);
 800be5c:	687b      	ldr	r3, [r7, #4]
 800be5e:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800be62:	4b10      	ldr	r3, [pc, #64]	; (800bea4 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv+0x50>)
 800be64:	61bb      	str	r3, [r7, #24]
 800be66:	2300      	movs	r3, #0
 800be68:	61fb      	str	r3, [r7, #28]
 800be6a:	f107 0008 	add.w	r0, r7, #8
 800be6e:	f107 0318 	add.w	r3, r7, #24
 800be72:	cb0c      	ldmia	r3, {r2, r3}
 800be74:	6879      	ldr	r1, [r7, #4]
 800be76:	f000 f85f 	bl	800bf38 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800be7a:	f107 0308 	add.w	r3, r7, #8
 800be7e:	4619      	mov	r1, r3
 800be80:	4620      	mov	r0, r4
 800be82:	f7ff ffcb 	bl	800be1c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800be86:	f107 0308 	add.w	r3, r7, #8
 800be8a:	4618      	mov	r0, r3
 800be8c:	f000 fa0a 	bl	800c2a4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800be90:	687b      	ldr	r3, [r7, #4]
 800be92:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800be96:	687b      	ldr	r3, [r7, #4]
 800be98:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800be9c:	bf00      	nop
 800be9e:	3724      	adds	r7, #36	; 0x24
 800bea0:	46bd      	mov	sp, r7
 800bea2:	bd90      	pop	{r4, r7, pc}
 800bea4:	0800bea9 	.word	0x0800bea9

0800bea8 <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoscreenScreenNoTransitionImpl()
{
 800bea8:	b580      	push	{r7, lr}
 800beaa:	b084      	sub	sp, #16
 800beac:	af02      	add	r7, sp, #8
 800beae:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<screenView, screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800beb0:	687b      	ldr	r3, [r7, #4]
 800beb2:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800beb6:	687b      	ldr	r3, [r7, #4]
 800beb8:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800bebc:	461a      	mov	r2, r3
 800bebe:	687b      	ldr	r3, [r7, #4]
 800bec0:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800bec4:	9300      	str	r3, [sp, #0]
 800bec6:	4b04      	ldr	r3, [pc, #16]	; (800bed8 <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv+0x30>)
 800bec8:	4804      	ldr	r0, [pc, #16]	; (800bedc <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv+0x34>)
 800beca:	f000 f867 	bl	800bf9c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800bece:	bf00      	nop
 800bed0:	3708      	adds	r7, #8
 800bed2:	46bd      	mov	sp, r7
 800bed4:	bd80      	pop	{r7, pc}
 800bed6:	bf00      	nop
 800bed8:	2000e208 	.word	0x2000e208
 800bedc:	2000e204 	.word	0x2000e204

0800bee0 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 800bee0:	b480      	push	{r7}
 800bee2:	b083      	sub	sp, #12
 800bee4:	af00      	add	r7, sp, #0
 800bee6:	6078      	str	r0, [r7, #4]
 800bee8:	4a04      	ldr	r2, [pc, #16]	; (800befc <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 800beea:	687b      	ldr	r3, [r7, #4]
 800beec:	601a      	str	r2, [r3, #0]
 800beee:	687b      	ldr	r3, [r7, #4]
 800bef0:	4618      	mov	r0, r3
 800bef2:	370c      	adds	r7, #12
 800bef4:	46bd      	mov	sp, r7
 800bef6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800befa:	4770      	bx	lr
 800befc:	0802b804 	.word	0x0802b804

0800bf00 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 800bf00:	b580      	push	{r7, lr}
 800bf02:	b082      	sub	sp, #8
 800bf04:	af00      	add	r7, sp, #0
 800bf06:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 800bf08:	687b      	ldr	r3, [r7, #4]
 800bf0a:	4618      	mov	r0, r3
 800bf0c:	f7ff ffe8 	bl	800bee0 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800bf10:	4a08      	ldr	r2, [pc, #32]	; (800bf34 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 800bf12:	687b      	ldr	r3, [r7, #4]
 800bf14:	601a      	str	r2, [r3, #0]
 800bf16:	687b      	ldr	r3, [r7, #4]
 800bf18:	2200      	movs	r2, #0
 800bf1a:	605a      	str	r2, [r3, #4]
 800bf1c:	687b      	ldr	r3, [r7, #4]
 800bf1e:	2200      	movs	r2, #0
 800bf20:	609a      	str	r2, [r3, #8]
 800bf22:	687b      	ldr	r3, [r7, #4]
 800bf24:	2200      	movs	r2, #0
 800bf26:	60da      	str	r2, [r3, #12]
    {
    }
 800bf28:	687b      	ldr	r3, [r7, #4]
 800bf2a:	4618      	mov	r0, r3
 800bf2c:	3708      	adds	r7, #8
 800bf2e:	46bd      	mov	sp, r7
 800bf30:	bd80      	pop	{r7, pc}
 800bf32:	bf00      	nop
 800bf34:	0802b774 	.word	0x0802b774

0800bf38 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 800bf38:	b580      	push	{r7, lr}
 800bf3a:	b084      	sub	sp, #16
 800bf3c:	af00      	add	r7, sp, #0
 800bf3e:	60f8      	str	r0, [r7, #12]
 800bf40:	60b9      	str	r1, [r7, #8]
 800bf42:	4639      	mov	r1, r7
 800bf44:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 800bf48:	68fb      	ldr	r3, [r7, #12]
 800bf4a:	4618      	mov	r0, r3
 800bf4c:	f7ff ffc8 	bl	800bee0 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800bf50:	4a08      	ldr	r2, [pc, #32]	; (800bf74 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 800bf52:	68fb      	ldr	r3, [r7, #12]
 800bf54:	601a      	str	r2, [r3, #0]
 800bf56:	68fb      	ldr	r3, [r7, #12]
 800bf58:	68ba      	ldr	r2, [r7, #8]
 800bf5a:	605a      	str	r2, [r3, #4]
 800bf5c:	68fb      	ldr	r3, [r7, #12]
 800bf5e:	3308      	adds	r3, #8
 800bf60:	463a      	mov	r2, r7
 800bf62:	e892 0003 	ldmia.w	r2, {r0, r1}
 800bf66:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 800bf6a:	68fb      	ldr	r3, [r7, #12]
 800bf6c:	4618      	mov	r0, r3
 800bf6e:	3710      	adds	r7, #16
 800bf70:	46bd      	mov	sp, r7
 800bf72:	bd80      	pop	{r7, pc}
 800bf74:	0802b774 	.word	0x0802b774

0800bf78 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 800bf78:	b580      	push	{r7, lr}
 800bf7a:	b082      	sub	sp, #8
 800bf7c:	af00      	add	r7, sp, #0
 800bf7e:	6078      	str	r0, [r7, #4]
 800bf80:	687b      	ldr	r3, [r7, #4]
 800bf82:	4618      	mov	r0, r3
 800bf84:	f7ff fd92 	bl	800baac <_ZN8touchgfx10TransitionC1Ev>
 800bf88:	4a03      	ldr	r2, [pc, #12]	; (800bf98 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 800bf8a:	687b      	ldr	r3, [r7, #4]
 800bf8c:	601a      	str	r2, [r3, #0]
 800bf8e:	687b      	ldr	r3, [r7, #4]
 800bf90:	4618      	mov	r0, r3
 800bf92:	3708      	adds	r7, #8
 800bf94:	46bd      	mov	sp, r7
 800bf96:	bd80      	pop	{r7, pc}
 800bf98:	0802b6fc 	.word	0x0802b6fc

0800bf9c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800bf9c:	b590      	push	{r4, r7, lr}
 800bf9e:	b08f      	sub	sp, #60	; 0x3c
 800bfa0:	af00      	add	r7, sp, #0
 800bfa2:	60f8      	str	r0, [r7, #12]
 800bfa4:	60b9      	str	r1, [r7, #8]
 800bfa6:	607a      	str	r2, [r7, #4]
 800bfa8:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800bfaa:	687b      	ldr	r3, [r7, #4]
 800bfac:	689a      	ldr	r2, [r3, #8]
 800bfae:	687b      	ldr	r3, [r7, #4]
 800bfb0:	689b      	ldr	r3, [r3, #8]
 800bfb2:	681b      	ldr	r3, [r3, #0]
 800bfb4:	3320      	adds	r3, #32
 800bfb6:	681b      	ldr	r3, [r3, #0]
 800bfb8:	4610      	mov	r0, r2
 800bfba:	4798      	blx	r3
 800bfbc:	4603      	mov	r3, r0
 800bfbe:	f241 5273 	movw	r2, #5491	; 0x1573
 800bfc2:	4293      	cmp	r3, r2
 800bfc4:	d805      	bhi.n	800bfd2 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x36>
 800bfc6:	4b7d      	ldr	r3, [pc, #500]	; (800c1bc <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800bfc8:	4a7d      	ldr	r2, [pc, #500]	; (800c1c0 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800bfca:	21a3      	movs	r1, #163	; 0xa3
 800bfcc:	487d      	ldr	r0, [pc, #500]	; (800c1c4 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800bfce:	f01c fbaf 	bl	8028730 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800bfd2:	687b      	ldr	r3, [r7, #4]
 800bfd4:	685a      	ldr	r2, [r3, #4]
 800bfd6:	687b      	ldr	r3, [r7, #4]
 800bfd8:	685b      	ldr	r3, [r3, #4]
 800bfda:	681b      	ldr	r3, [r3, #0]
 800bfdc:	3320      	adds	r3, #32
 800bfde:	681b      	ldr	r3, [r3, #0]
 800bfe0:	4610      	mov	r0, r2
 800bfe2:	4798      	blx	r3
 800bfe4:	4603      	mov	r3, r0
 800bfe6:	2b0f      	cmp	r3, #15
 800bfe8:	d805      	bhi.n	800bff6 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5a>
 800bfea:	4b77      	ldr	r3, [pc, #476]	; (800c1c8 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800bfec:	4a74      	ldr	r2, [pc, #464]	; (800c1c0 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800bfee:	21a4      	movs	r1, #164	; 0xa4
 800bff0:	4874      	ldr	r0, [pc, #464]	; (800c1c4 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800bff2:	f01c fb9d 	bl	8028730 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800bff6:	687b      	ldr	r3, [r7, #4]
 800bff8:	68da      	ldr	r2, [r3, #12]
 800bffa:	687b      	ldr	r3, [r7, #4]
 800bffc:	68db      	ldr	r3, [r3, #12]
 800bffe:	681b      	ldr	r3, [r3, #0]
 800c000:	3320      	adds	r3, #32
 800c002:	681b      	ldr	r3, [r3, #0]
 800c004:	4610      	mov	r0, r2
 800c006:	4798      	blx	r3
 800c008:	4603      	mov	r3, r0
 800c00a:	2b0b      	cmp	r3, #11
 800c00c:	d805      	bhi.n	800c01a <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
 800c00e:	4b6f      	ldr	r3, [pc, #444]	; (800c1cc <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800c010:	4a6b      	ldr	r2, [pc, #428]	; (800c1c0 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c012:	21a5      	movs	r1, #165	; 0xa5
 800c014:	486b      	ldr	r0, [pc, #428]	; (800c1c4 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c016:	f01c fb8b 	bl	8028730 <__assert_func>
 800c01a:	68fb      	ldr	r3, [r7, #12]
 800c01c:	62bb      	str	r3, [r7, #40]	; 0x28
 800c01e:	68bb      	ldr	r3, [r7, #8]
 800c020:	627b      	str	r3, [r7, #36]	; 0x24
 800c022:	683b      	ldr	r3, [r7, #0]
 800c024:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800c026:	f00b fa3f 	bl	80174a8 <_ZN8touchgfx11Application11getInstanceEv>
 800c02a:	4603      	mov	r3, r0
 800c02c:	4618      	mov	r0, r3
 800c02e:	f7ff fce7 	bl	800ba00 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800c032:	6a3b      	ldr	r3, [r7, #32]
 800c034:	681b      	ldr	r3, [r3, #0]
 800c036:	2b00      	cmp	r3, #0
 800c038:	d008      	beq.n	800c04c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb0>
        (*currentTrans)->tearDown();
 800c03a:	6a3b      	ldr	r3, [r7, #32]
 800c03c:	681a      	ldr	r2, [r3, #0]
 800c03e:	6a3b      	ldr	r3, [r7, #32]
 800c040:	681b      	ldr	r3, [r3, #0]
 800c042:	681b      	ldr	r3, [r3, #0]
 800c044:	330c      	adds	r3, #12
 800c046:	681b      	ldr	r3, [r3, #0]
 800c048:	4610      	mov	r0, r2
 800c04a:	4798      	blx	r3
    if (*currentTrans)
 800c04c:	6a3b      	ldr	r3, [r7, #32]
 800c04e:	681b      	ldr	r3, [r3, #0]
 800c050:	2b00      	cmp	r3, #0
 800c052:	d007      	beq.n	800c064 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc8>
        (*currentTrans)->~Transition();
 800c054:	6a3b      	ldr	r3, [r7, #32]
 800c056:	681a      	ldr	r2, [r3, #0]
 800c058:	6a3b      	ldr	r3, [r7, #32]
 800c05a:	681b      	ldr	r3, [r3, #0]
 800c05c:	681b      	ldr	r3, [r3, #0]
 800c05e:	681b      	ldr	r3, [r3, #0]
 800c060:	4610      	mov	r0, r2
 800c062:	4798      	blx	r3
    if (*currentScreen)
 800c064:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c066:	681b      	ldr	r3, [r3, #0]
 800c068:	2b00      	cmp	r3, #0
 800c06a:	d008      	beq.n	800c07e <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe2>
        (*currentScreen)->tearDownScreen();
 800c06c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c06e:	681a      	ldr	r2, [r3, #0]
 800c070:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c072:	681b      	ldr	r3, [r3, #0]
 800c074:	681b      	ldr	r3, [r3, #0]
 800c076:	3314      	adds	r3, #20
 800c078:	681b      	ldr	r3, [r3, #0]
 800c07a:	4610      	mov	r0, r2
 800c07c:	4798      	blx	r3
    if (*currentPresenter)
 800c07e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c080:	681b      	ldr	r3, [r3, #0]
 800c082:	2b00      	cmp	r3, #0
 800c084:	d008      	beq.n	800c098 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfc>
        (*currentPresenter)->deactivate();
 800c086:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c088:	681a      	ldr	r2, [r3, #0]
 800c08a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c08c:	681b      	ldr	r3, [r3, #0]
 800c08e:	681b      	ldr	r3, [r3, #0]
 800c090:	3304      	adds	r3, #4
 800c092:	681b      	ldr	r3, [r3, #0]
 800c094:	4610      	mov	r0, r2
 800c096:	4798      	blx	r3
    if (*currentScreen)
 800c098:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c09a:	681b      	ldr	r3, [r3, #0]
 800c09c:	2b00      	cmp	r3, #0
 800c09e:	d007      	beq.n	800c0b0 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x114>
        (*currentScreen)->~Screen();
 800c0a0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c0a2:	681a      	ldr	r2, [r3, #0]
 800c0a4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c0a6:	681b      	ldr	r3, [r3, #0]
 800c0a8:	681b      	ldr	r3, [r3, #0]
 800c0aa:	681b      	ldr	r3, [r3, #0]
 800c0ac:	4610      	mov	r0, r2
 800c0ae:	4798      	blx	r3
    if (*currentPresenter)
 800c0b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c0b2:	681b      	ldr	r3, [r3, #0]
 800c0b4:	2b00      	cmp	r3, #0
 800c0b6:	d008      	beq.n	800c0ca <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12e>
        (*currentPresenter)->~Presenter();
 800c0b8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c0ba:	681a      	ldr	r2, [r3, #0]
 800c0bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c0be:	681b      	ldr	r3, [r3, #0]
 800c0c0:	681b      	ldr	r3, [r3, #0]
 800c0c2:	3308      	adds	r3, #8
 800c0c4:	681b      	ldr	r3, [r3, #0]
 800c0c6:	4610      	mov	r0, r2
 800c0c8:	4798      	blx	r3
}
 800c0ca:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800c0cc:	687b      	ldr	r3, [r7, #4]
 800c0ce:	68db      	ldr	r3, [r3, #12]
 800c0d0:	2100      	movs	r1, #0
 800c0d2:	4618      	mov	r0, r3
 800c0d4:	f000 f87c 	bl	800c1d0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800c0d8:	4603      	mov	r3, r0
 800c0da:	4619      	mov	r1, r3
 800c0dc:	200c      	movs	r0, #12
 800c0de:	f7ff fbf9 	bl	800b8d4 <_ZnwjPv>
 800c0e2:	4604      	mov	r4, r0
 800c0e4:	4620      	mov	r0, r4
 800c0e6:	f7ff ff47 	bl	800bf78 <_ZN8touchgfx12NoTransitionC1Ev>
 800c0ea:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800c0ec:	687b      	ldr	r3, [r7, #4]
 800c0ee:	689b      	ldr	r3, [r3, #8]
 800c0f0:	2100      	movs	r1, #0
 800c0f2:	4618      	mov	r0, r3
 800c0f4:	f000 f87f 	bl	800c1f6 <_ZN8touchgfx17AbstractPartition2atI10screenViewEERT_t>
 800c0f8:	4603      	mov	r3, r0
 800c0fa:	4619      	mov	r1, r3
 800c0fc:	f241 5074 	movw	r0, #5492	; 0x1574
 800c100:	f7ff fbe8 	bl	800b8d4 <_ZnwjPv>
 800c104:	4604      	mov	r4, r0
 800c106:	4620      	mov	r0, r4
 800c108:	f003 ffbc 	bl	8010084 <_ZN10screenViewC1Ev>
 800c10c:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800c10e:	687b      	ldr	r3, [r7, #4]
 800c110:	685b      	ldr	r3, [r3, #4]
 800c112:	2100      	movs	r1, #0
 800c114:	4618      	mov	r0, r3
 800c116:	f000 f881 	bl	800c21c <_ZN8touchgfx17AbstractPartition2atI15screenPresenterEERT_t>
 800c11a:	4603      	mov	r3, r0
 800c11c:	4619      	mov	r1, r3
 800c11e:	2010      	movs	r0, #16
 800c120:	f7ff fbd8 	bl	800b8d4 <_ZnwjPv>
 800c124:	4604      	mov	r4, r0
 800c126:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800c128:	4620      	mov	r0, r4
 800c12a:	f003 ff53 	bl	800ffd4 <_ZN15screenPresenterC1ER10screenView>
 800c12e:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800c130:	683b      	ldr	r3, [r7, #0]
 800c132:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800c134:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800c136:	68bb      	ldr	r3, [r7, #8]
 800c138:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800c13a:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800c13c:	68fb      	ldr	r3, [r7, #12]
 800c13e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800c140:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800c142:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c144:	2b00      	cmp	r3, #0
 800c146:	d002      	beq.n	800c14e <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800c148:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c14a:	3304      	adds	r3, #4
 800c14c:	e000      	b.n	800c150 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 800c14e:	2300      	movs	r3, #0
 800c150:	4619      	mov	r1, r3
 800c152:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800c154:	f7ff fd9a 	bl	800bc8c <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800c158:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c15a:	3304      	adds	r3, #4
 800c15c:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800c15e:	4618      	mov	r0, r3
 800c160:	f7ff fe07 	bl	800bd72 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800c164:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c166:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800c168:	4618      	mov	r0, r3
 800c16a:	f000 f86a 	bl	800c242 <_ZN8touchgfx4ViewI15screenPresenterE4bindERS1_>
 800c16e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c170:	61fb      	str	r3, [r7, #28]
 800c172:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c174:	61bb      	str	r3, [r7, #24]
 800c176:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c178:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800c17a:	69fb      	ldr	r3, [r7, #28]
 800c17c:	681b      	ldr	r3, [r3, #0]
 800c17e:	330c      	adds	r3, #12
 800c180:	681b      	ldr	r3, [r3, #0]
 800c182:	69f8      	ldr	r0, [r7, #28]
 800c184:	4798      	blx	r3
    newPresenter->activate();
 800c186:	69bb      	ldr	r3, [r7, #24]
 800c188:	681b      	ldr	r3, [r3, #0]
 800c18a:	681b      	ldr	r3, [r3, #0]
 800c18c:	69b8      	ldr	r0, [r7, #24]
 800c18e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800c190:	6979      	ldr	r1, [r7, #20]
 800c192:	69f8      	ldr	r0, [r7, #28]
 800c194:	f00c ff84 	bl	80190a0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800c198:	697b      	ldr	r3, [r7, #20]
 800c19a:	681b      	ldr	r3, [r3, #0]
 800c19c:	3310      	adds	r3, #16
 800c19e:	681b      	ldr	r3, [r3, #0]
 800c1a0:	6978      	ldr	r0, [r7, #20]
 800c1a2:	4798      	blx	r3
    newTransition->invalidate();
 800c1a4:	697b      	ldr	r3, [r7, #20]
 800c1a6:	681b      	ldr	r3, [r3, #0]
 800c1a8:	3314      	adds	r3, #20
 800c1aa:	681b      	ldr	r3, [r3, #0]
 800c1ac:	6978      	ldr	r0, [r7, #20]
 800c1ae:	4798      	blx	r3
}
 800c1b0:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 800c1b2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800c1b4:	4618      	mov	r0, r3
 800c1b6:	373c      	adds	r7, #60	; 0x3c
 800c1b8:	46bd      	mov	sp, r7
 800c1ba:	bd90      	pop	{r4, r7, pc}
 800c1bc:	0802a050 	.word	0x0802a050
 800c1c0:	0802a0e0 	.word	0x0802a0e0
 800c1c4:	0802a1e4 	.word	0x0802a1e4
 800c1c8:	0802a228 	.word	0x0802a228
 800c1cc:	0802a2cc 	.word	0x0802a2cc

0800c1d0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 800c1d0:	b580      	push	{r7, lr}
 800c1d2:	b082      	sub	sp, #8
 800c1d4:	af00      	add	r7, sp, #0
 800c1d6:	6078      	str	r0, [r7, #4]
 800c1d8:	460b      	mov	r3, r1
 800c1da:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 800c1dc:	687b      	ldr	r3, [r7, #4]
 800c1de:	681b      	ldr	r3, [r3, #0]
 800c1e0:	3324      	adds	r3, #36	; 0x24
 800c1e2:	681b      	ldr	r3, [r3, #0]
 800c1e4:	887a      	ldrh	r2, [r7, #2]
 800c1e6:	4611      	mov	r1, r2
 800c1e8:	6878      	ldr	r0, [r7, #4]
 800c1ea:	4798      	blx	r3
 800c1ec:	4603      	mov	r3, r0
    }
 800c1ee:	4618      	mov	r0, r3
 800c1f0:	3708      	adds	r7, #8
 800c1f2:	46bd      	mov	sp, r7
 800c1f4:	bd80      	pop	{r7, pc}

0800c1f6 <_ZN8touchgfx17AbstractPartition2atI10screenViewEERT_t>:
    T& at(const uint16_t index)
 800c1f6:	b580      	push	{r7, lr}
 800c1f8:	b082      	sub	sp, #8
 800c1fa:	af00      	add	r7, sp, #0
 800c1fc:	6078      	str	r0, [r7, #4]
 800c1fe:	460b      	mov	r3, r1
 800c200:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c202:	687b      	ldr	r3, [r7, #4]
 800c204:	681b      	ldr	r3, [r3, #0]
 800c206:	3324      	adds	r3, #36	; 0x24
 800c208:	681b      	ldr	r3, [r3, #0]
 800c20a:	887a      	ldrh	r2, [r7, #2]
 800c20c:	4611      	mov	r1, r2
 800c20e:	6878      	ldr	r0, [r7, #4]
 800c210:	4798      	blx	r3
 800c212:	4603      	mov	r3, r0
    }
 800c214:	4618      	mov	r0, r3
 800c216:	3708      	adds	r7, #8
 800c218:	46bd      	mov	sp, r7
 800c21a:	bd80      	pop	{r7, pc}

0800c21c <_ZN8touchgfx17AbstractPartition2atI15screenPresenterEERT_t>:
    T& at(const uint16_t index)
 800c21c:	b580      	push	{r7, lr}
 800c21e:	b082      	sub	sp, #8
 800c220:	af00      	add	r7, sp, #0
 800c222:	6078      	str	r0, [r7, #4]
 800c224:	460b      	mov	r3, r1
 800c226:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c228:	687b      	ldr	r3, [r7, #4]
 800c22a:	681b      	ldr	r3, [r3, #0]
 800c22c:	3324      	adds	r3, #36	; 0x24
 800c22e:	681b      	ldr	r3, [r3, #0]
 800c230:	887a      	ldrh	r2, [r7, #2]
 800c232:	4611      	mov	r1, r2
 800c234:	6878      	ldr	r0, [r7, #4]
 800c236:	4798      	blx	r3
 800c238:	4603      	mov	r3, r0
    }
 800c23a:	4618      	mov	r0, r3
 800c23c:	3708      	adds	r7, #8
 800c23e:	46bd      	mov	sp, r7
 800c240:	bd80      	pop	{r7, pc}

0800c242 <_ZN8touchgfx4ViewI15screenPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 800c242:	b480      	push	{r7}
 800c244:	b083      	sub	sp, #12
 800c246:	af00      	add	r7, sp, #0
 800c248:	6078      	str	r0, [r7, #4]
 800c24a:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 800c24c:	687b      	ldr	r3, [r7, #4]
 800c24e:	683a      	ldr	r2, [r7, #0]
 800c250:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800c252:	bf00      	nop
 800c254:	370c      	adds	r7, #12
 800c256:	46bd      	mov	sp, r7
 800c258:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c25c:	4770      	bx	lr
	...

0800c260 <_ZN8touchgfx12NoTransitionD1Ev>:
 800c260:	b580      	push	{r7, lr}
 800c262:	b082      	sub	sp, #8
 800c264:	af00      	add	r7, sp, #0
 800c266:	6078      	str	r0, [r7, #4]
 800c268:	4a05      	ldr	r2, [pc, #20]	; (800c280 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 800c26a:	687b      	ldr	r3, [r7, #4]
 800c26c:	601a      	str	r2, [r3, #0]
 800c26e:	687b      	ldr	r3, [r7, #4]
 800c270:	4618      	mov	r0, r3
 800c272:	f7ff fc31 	bl	800bad8 <_ZN8touchgfx10TransitionD1Ev>
 800c276:	687b      	ldr	r3, [r7, #4]
 800c278:	4618      	mov	r0, r3
 800c27a:	3708      	adds	r7, #8
 800c27c:	46bd      	mov	sp, r7
 800c27e:	bd80      	pop	{r7, pc}
 800c280:	0802b6fc 	.word	0x0802b6fc

0800c284 <_ZN8touchgfx12NoTransitionD0Ev>:
 800c284:	b580      	push	{r7, lr}
 800c286:	b082      	sub	sp, #8
 800c288:	af00      	add	r7, sp, #0
 800c28a:	6078      	str	r0, [r7, #4]
 800c28c:	6878      	ldr	r0, [r7, #4]
 800c28e:	f7ff ffe7 	bl	800c260 <_ZN8touchgfx12NoTransitionD1Ev>
 800c292:	210c      	movs	r1, #12
 800c294:	6878      	ldr	r0, [r7, #4]
 800c296:	f01c fa1c 	bl	80286d2 <_ZdlPvj>
 800c29a:	687b      	ldr	r3, [r7, #4]
 800c29c:	4618      	mov	r0, r3
 800c29e:	3708      	adds	r7, #8
 800c2a0:	46bd      	mov	sp, r7
 800c2a2:	bd80      	pop	{r7, pc}

0800c2a4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800c2a4:	b580      	push	{r7, lr}
 800c2a6:	b082      	sub	sp, #8
 800c2a8:	af00      	add	r7, sp, #0
 800c2aa:	6078      	str	r0, [r7, #4]
 800c2ac:	4a05      	ldr	r2, [pc, #20]	; (800c2c4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 800c2ae:	687b      	ldr	r3, [r7, #4]
 800c2b0:	601a      	str	r2, [r3, #0]
 800c2b2:	687b      	ldr	r3, [r7, #4]
 800c2b4:	4618      	mov	r0, r3
 800c2b6:	f7ff fbb1 	bl	800ba1c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800c2ba:	687b      	ldr	r3, [r7, #4]
 800c2bc:	4618      	mov	r0, r3
 800c2be:	3708      	adds	r7, #8
 800c2c0:	46bd      	mov	sp, r7
 800c2c2:	bd80      	pop	{r7, pc}
 800c2c4:	0802b774 	.word	0x0802b774

0800c2c8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 800c2c8:	b580      	push	{r7, lr}
 800c2ca:	b082      	sub	sp, #8
 800c2cc:	af00      	add	r7, sp, #0
 800c2ce:	6078      	str	r0, [r7, #4]
 800c2d0:	6878      	ldr	r0, [r7, #4]
 800c2d2:	f7ff ffe7 	bl	800c2a4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800c2d6:	2110      	movs	r1, #16
 800c2d8:	6878      	ldr	r0, [r7, #4]
 800c2da:	f01c f9fa 	bl	80286d2 <_ZdlPvj>
 800c2de:	687b      	ldr	r3, [r7, #4]
 800c2e0:	4618      	mov	r0, r3
 800c2e2:	3708      	adds	r7, #8
 800c2e4:	46bd      	mov	sp, r7
 800c2e6:	bd80      	pop	{r7, pc}

0800c2e8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800c2e8:	b580      	push	{r7, lr}
 800c2ea:	b082      	sub	sp, #8
 800c2ec:	af00      	add	r7, sp, #0
 800c2ee:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 800c2f0:	687b      	ldr	r3, [r7, #4]
 800c2f2:	685b      	ldr	r3, [r3, #4]
 800c2f4:	687a      	ldr	r2, [r7, #4]
 800c2f6:	68d2      	ldr	r2, [r2, #12]
 800c2f8:	1052      	asrs	r2, r2, #1
 800c2fa:	1899      	adds	r1, r3, r2
 800c2fc:	687b      	ldr	r3, [r7, #4]
 800c2fe:	68db      	ldr	r3, [r3, #12]
 800c300:	f003 0301 	and.w	r3, r3, #1
 800c304:	2b00      	cmp	r3, #0
 800c306:	d102      	bne.n	800c30e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 800c308:	687b      	ldr	r3, [r7, #4]
 800c30a:	689b      	ldr	r3, [r3, #8]
 800c30c:	e00a      	b.n	800c324 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 800c30e:	687b      	ldr	r3, [r7, #4]
 800c310:	685b      	ldr	r3, [r3, #4]
 800c312:	687a      	ldr	r2, [r7, #4]
 800c314:	68d2      	ldr	r2, [r2, #12]
 800c316:	1052      	asrs	r2, r2, #1
 800c318:	4413      	add	r3, r2
 800c31a:	681b      	ldr	r3, [r3, #0]
 800c31c:	687a      	ldr	r2, [r7, #4]
 800c31e:	6892      	ldr	r2, [r2, #8]
 800c320:	4413      	add	r3, r2
 800c322:	681b      	ldr	r3, [r3, #0]
 800c324:	4608      	mov	r0, r1
 800c326:	4798      	blx	r3
    }
 800c328:	bf00      	nop
 800c32a:	3708      	adds	r7, #8
 800c32c:	46bd      	mov	sp, r7
 800c32e:	bd80      	pop	{r7, pc}

0800c330 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800c330:	b480      	push	{r7}
 800c332:	b083      	sub	sp, #12
 800c334:	af00      	add	r7, sp, #0
 800c336:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800c338:	687b      	ldr	r3, [r7, #4]
 800c33a:	685b      	ldr	r3, [r3, #4]
 800c33c:	2b00      	cmp	r3, #0
 800c33e:	d010      	beq.n	800c362 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800c340:	687b      	ldr	r3, [r7, #4]
 800c342:	689b      	ldr	r3, [r3, #8]
 800c344:	2b00      	cmp	r3, #0
 800c346:	d107      	bne.n	800c358 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800c348:	687b      	ldr	r3, [r7, #4]
 800c34a:	68db      	ldr	r3, [r3, #12]
 800c34c:	f003 0301 	and.w	r3, r3, #1
 800c350:	2b00      	cmp	r3, #0
 800c352:	d101      	bne.n	800c358 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800c354:	2301      	movs	r3, #1
 800c356:	e000      	b.n	800c35a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 800c358:	2300      	movs	r3, #0
 800c35a:	2b01      	cmp	r3, #1
 800c35c:	d001      	beq.n	800c362 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800c35e:	2301      	movs	r3, #1
 800c360:	e000      	b.n	800c364 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 800c362:	2300      	movs	r3, #0
    }
 800c364:	4618      	mov	r0, r3
 800c366:	370c      	adds	r7, #12
 800c368:	46bd      	mov	sp, r7
 800c36a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c36e:	4770      	bx	lr

0800c370 <_ZN8touchgfx9colortypeC1Ev>:
 * extract a 24/32-bit color from this type, use the getColor32 function.
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
 800c370:	b480      	push	{r7}
 800c372:	b083      	sub	sp, #12
 800c374:	af00      	add	r7, sp, #0
 800c376:	6078      	str	r0, [r7, #4]
        : color(0)
 800c378:	687b      	ldr	r3, [r7, #4]
 800c37a:	2200      	movs	r2, #0
 800c37c:	601a      	str	r2, [r3, #0]
    {
    }
 800c37e:	687b      	ldr	r3, [r7, #4]
 800c380:	4618      	mov	r0, r3
 800c382:	370c      	adds	r7, #12
 800c384:	46bd      	mov	sp, r7
 800c386:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c38a:	4770      	bx	lr

0800c38c <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 800c38c:	b480      	push	{r7}
 800c38e:	b083      	sub	sp, #12
 800c390:	af00      	add	r7, sp, #0
 800c392:	6078      	str	r0, [r7, #4]
 800c394:	6039      	str	r1, [r7, #0]
        : color(col)
 800c396:	687b      	ldr	r3, [r7, #4]
 800c398:	683a      	ldr	r2, [r7, #0]
 800c39a:	601a      	str	r2, [r3, #0]
    {
    }
 800c39c:	687b      	ldr	r3, [r7, #4]
 800c39e:	4618      	mov	r0, r3
 800c3a0:	370c      	adds	r7, #12
 800c3a2:	46bd      	mov	sp, r7
 800c3a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3a8:	4770      	bx	lr

0800c3aa <_ZNK8touchgfx9colortypecvmEv>:
    /**
     * Cast that converts the given colortype to an uint32_t.
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
 800c3aa:	b480      	push	{r7}
 800c3ac:	b083      	sub	sp, #12
 800c3ae:	af00      	add	r7, sp, #0
 800c3b0:	6078      	str	r0, [r7, #4]
    {
        return color;
 800c3b2:	687b      	ldr	r3, [r7, #4]
 800c3b4:	681b      	ldr	r3, [r3, #0]
    }
 800c3b6:	4618      	mov	r0, r3
 800c3b8:	370c      	adds	r7, #12
 800c3ba:	46bd      	mov	sp, r7
 800c3bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3c0:	4770      	bx	lr

0800c3c2 <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 800c3c2:	b480      	push	{r7}
 800c3c4:	b083      	sub	sp, #12
 800c3c6:	af00      	add	r7, sp, #0
 800c3c8:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 800c3ca:	687b      	ldr	r3, [r7, #4]
 800c3cc:	2200      	movs	r2, #0
 800c3ce:	801a      	strh	r2, [r3, #0]
 800c3d0:	687b      	ldr	r3, [r7, #4]
 800c3d2:	2200      	movs	r2, #0
 800c3d4:	805a      	strh	r2, [r3, #2]
 800c3d6:	687b      	ldr	r3, [r7, #4]
 800c3d8:	2200      	movs	r2, #0
 800c3da:	809a      	strh	r2, [r3, #4]
 800c3dc:	687b      	ldr	r3, [r7, #4]
 800c3de:	2200      	movs	r2, #0
 800c3e0:	80da      	strh	r2, [r3, #6]
    {
    }
 800c3e2:	687b      	ldr	r3, [r7, #4]
 800c3e4:	4618      	mov	r0, r3
 800c3e6:	370c      	adds	r7, #12
 800c3e8:	46bd      	mov	sp, r7
 800c3ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3ee:	4770      	bx	lr

0800c3f0 <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 800c3f0:	b480      	push	{r7}
 800c3f2:	b085      	sub	sp, #20
 800c3f4:	af00      	add	r7, sp, #0
 800c3f6:	60f8      	str	r0, [r7, #12]
 800c3f8:	4608      	mov	r0, r1
 800c3fa:	4611      	mov	r1, r2
 800c3fc:	461a      	mov	r2, r3
 800c3fe:	4603      	mov	r3, r0
 800c400:	817b      	strh	r3, [r7, #10]
 800c402:	460b      	mov	r3, r1
 800c404:	813b      	strh	r3, [r7, #8]
 800c406:	4613      	mov	r3, r2
 800c408:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800c40a:	68fb      	ldr	r3, [r7, #12]
 800c40c:	897a      	ldrh	r2, [r7, #10]
 800c40e:	801a      	strh	r2, [r3, #0]
 800c410:	68fb      	ldr	r3, [r7, #12]
 800c412:	893a      	ldrh	r2, [r7, #8]
 800c414:	805a      	strh	r2, [r3, #2]
 800c416:	68fb      	ldr	r3, [r7, #12]
 800c418:	88fa      	ldrh	r2, [r7, #6]
 800c41a:	809a      	strh	r2, [r3, #4]
 800c41c:	68fb      	ldr	r3, [r7, #12]
 800c41e:	8b3a      	ldrh	r2, [r7, #24]
 800c420:	80da      	strh	r2, [r3, #6]
    {
    }
 800c422:	68fb      	ldr	r3, [r7, #12]
 800c424:	4618      	mov	r0, r3
 800c426:	3714      	adds	r7, #20
 800c428:	46bd      	mov	sp, r7
 800c42a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c42e:	4770      	bx	lr

0800c430 <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 800c430:	b480      	push	{r7}
 800c432:	b083      	sub	sp, #12
 800c434:	af00      	add	r7, sp, #0
 800c436:	6078      	str	r0, [r7, #4]
 800c438:	460b      	mov	r3, r1
 800c43a:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 800c43c:	687b      	ldr	r3, [r7, #4]
 800c43e:	887a      	ldrh	r2, [r7, #2]
 800c440:	801a      	strh	r2, [r3, #0]
    {
    }
 800c442:	687b      	ldr	r3, [r7, #4]
 800c444:	4618      	mov	r0, r3
 800c446:	370c      	adds	r7, #12
 800c448:	46bd      	mov	sp, r7
 800c44a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c44e:	4770      	bx	lr

0800c450 <_ZNK8touchgfx10ClickEvent7getTypeEv>:
    /**
     * Gets the click type of this event.
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
 800c450:	b480      	push	{r7}
 800c452:	b083      	sub	sp, #12
 800c454:	af00      	add	r7, sp, #0
 800c456:	6078      	str	r0, [r7, #4]
    {
        return clickEventType;
 800c458:	687b      	ldr	r3, [r7, #4]
 800c45a:	791b      	ldrb	r3, [r3, #4]
    }
 800c45c:	4618      	mov	r0, r3
 800c45e:	370c      	adds	r7, #12
 800c460:	46bd      	mov	sp, r7
 800c462:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c466:	4770      	bx	lr

0800c468 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 800c468:	b580      	push	{r7, lr}
 800c46a:	b082      	sub	sp, #8
 800c46c:	af00      	add	r7, sp, #0
 800c46e:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 800c470:	4a14      	ldr	r2, [pc, #80]	; (800c4c4 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 800c472:	687b      	ldr	r3, [r7, #4]
 800c474:	601a      	str	r2, [r3, #0]
        : rect(),
 800c476:	687b      	ldr	r3, [r7, #4]
 800c478:	3304      	adds	r3, #4
 800c47a:	4618      	mov	r0, r3
 800c47c:	f7ff ffa1 	bl	800c3c2 <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 800c480:	687b      	ldr	r3, [r7, #4]
 800c482:	330c      	adds	r3, #12
 800c484:	4618      	mov	r0, r3
 800c486:	f7ff ff9c 	bl	800c3c2 <_ZN8touchgfx4RectC1Ev>
          parent(0),
 800c48a:	687b      	ldr	r3, [r7, #4]
 800c48c:	2200      	movs	r2, #0
 800c48e:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 800c490:	687b      	ldr	r3, [r7, #4]
 800c492:	2200      	movs	r2, #0
 800c494:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 800c496:	687b      	ldr	r3, [r7, #4]
 800c498:	2200      	movs	r2, #0
 800c49a:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 800c49c:	687b      	ldr	r3, [r7, #4]
 800c49e:	2200      	movs	r2, #0
 800c4a0:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 800c4a2:	687b      	ldr	r3, [r7, #4]
 800c4a4:	2200      	movs	r2, #0
 800c4a6:	845a      	strh	r2, [r3, #34]	; 0x22
          touchable(false),
 800c4a8:	687b      	ldr	r3, [r7, #4]
 800c4aa:	2200      	movs	r2, #0
 800c4ac:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
          visible(true)
 800c4b0:	687b      	ldr	r3, [r7, #4]
 800c4b2:	2201      	movs	r2, #1
 800c4b4:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 800c4b8:	687b      	ldr	r3, [r7, #4]
 800c4ba:	4618      	mov	r0, r3
 800c4bc:	3708      	adds	r7, #8
 800c4be:	46bd      	mov	sp, r7
 800c4c0:	bd80      	pop	{r7, pc}
 800c4c2:	bf00      	nop
 800c4c4:	0802cdbc 	.word	0x0802cdbc

0800c4c8 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 800c4c8:	b480      	push	{r7}
 800c4ca:	b083      	sub	sp, #12
 800c4cc:	af00      	add	r7, sp, #0
 800c4ce:	6078      	str	r0, [r7, #4]
    {
 800c4d0:	4a04      	ldr	r2, [pc, #16]	; (800c4e4 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 800c4d2:	687b      	ldr	r3, [r7, #4]
 800c4d4:	601a      	str	r2, [r3, #0]
    }
 800c4d6:	687b      	ldr	r3, [r7, #4]
 800c4d8:	4618      	mov	r0, r3
 800c4da:	370c      	adds	r7, #12
 800c4dc:	46bd      	mov	sp, r7
 800c4de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c4e2:	4770      	bx	lr
 800c4e4:	0802cdbc 	.word	0x0802cdbc

0800c4e8 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 800c4e8:	b580      	push	{r7, lr}
 800c4ea:	b082      	sub	sp, #8
 800c4ec:	af00      	add	r7, sp, #0
 800c4ee:	6078      	str	r0, [r7, #4]
    }
 800c4f0:	6878      	ldr	r0, [r7, #4]
 800c4f2:	f7ff ffe9 	bl	800c4c8 <_ZN8touchgfx8DrawableD1Ev>
 800c4f6:	2128      	movs	r1, #40	; 0x28
 800c4f8:	6878      	ldr	r0, [r7, #4]
 800c4fa:	f01c f8ea 	bl	80286d2 <_ZdlPvj>
 800c4fe:	687b      	ldr	r3, [r7, #4]
 800c500:	4618      	mov	r0, r3
 800c502:	3708      	adds	r7, #8
 800c504:	46bd      	mov	sp, r7
 800c506:	bd80      	pop	{r7, pc}

0800c508 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 800c508:	b580      	push	{r7, lr}
 800c50a:	b082      	sub	sp, #8
 800c50c:	af00      	add	r7, sp, #0
 800c50e:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 800c510:	687b      	ldr	r3, [r7, #4]
 800c512:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 800c516:	2b00      	cmp	r3, #0
 800c518:	d005      	beq.n	800c526 <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 800c51a:	687b      	ldr	r3, [r7, #4]
 800c51c:	681b      	ldr	r3, [r3, #0]
 800c51e:	3314      	adds	r3, #20
 800c520:	681b      	ldr	r3, [r3, #0]
 800c522:	6878      	ldr	r0, [r7, #4]
 800c524:	4798      	blx	r3
        }
    }
 800c526:	bf00      	nop
 800c528:	3708      	adds	r7, #8
 800c52a:	46bd      	mov	sp, r7
 800c52c:	bd80      	pop	{r7, pc}

0800c52e <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 800c52e:	b480      	push	{r7}
 800c530:	b083      	sub	sp, #12
 800c532:	af00      	add	r7, sp, #0
 800c534:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800c536:	2300      	movs	r3, #0
    }
 800c538:	4618      	mov	r0, r3
 800c53a:	370c      	adds	r7, #12
 800c53c:	46bd      	mov	sp, r7
 800c53e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c542:	4770      	bx	lr

0800c544 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800c544:	b580      	push	{r7, lr}
 800c546:	b084      	sub	sp, #16
 800c548:	af00      	add	r7, sp, #0
 800c54a:	60f8      	str	r0, [r7, #12]
 800c54c:	4608      	mov	r0, r1
 800c54e:	4611      	mov	r1, r2
 800c550:	461a      	mov	r2, r3
 800c552:	4603      	mov	r3, r0
 800c554:	817b      	strh	r3, [r7, #10]
 800c556:	460b      	mov	r3, r1
 800c558:	813b      	strh	r3, [r7, #8]
 800c55a:	4613      	mov	r3, r2
 800c55c:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 800c55e:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800c562:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800c566:	4619      	mov	r1, r3
 800c568:	68f8      	ldr	r0, [r7, #12]
 800c56a:	f000 f844 	bl	800c5f6 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800c56e:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 800c572:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800c576:	4619      	mov	r1, r3
 800c578:	68f8      	ldr	r0, [r7, #12]
 800c57a:	f000 f898 	bl	800c6ae <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800c57e:	bf00      	nop
 800c580:	3710      	adds	r7, #16
 800c582:	46bd      	mov	sp, r7
 800c584:	bd80      	pop	{r7, pc}

0800c586 <_ZNK8touchgfx8Drawable8getWidthEv>:
    /**
     * Gets the width of this Drawable.
     *
     * @return The width of this Drawable.
     */
    int16_t getWidth() const
 800c586:	b480      	push	{r7}
 800c588:	b083      	sub	sp, #12
 800c58a:	af00      	add	r7, sp, #0
 800c58c:	6078      	str	r0, [r7, #4]
    {
        return rect.width;
 800c58e:	687b      	ldr	r3, [r7, #4]
 800c590:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
    }
 800c594:	4618      	mov	r0, r3
 800c596:	370c      	adds	r7, #12
 800c598:	46bd      	mov	sp, r7
 800c59a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c59e:	4770      	bx	lr

0800c5a0 <_ZNK8touchgfx8Drawable9getHeightEv>:
    /**
     * Gets the height of this Drawable.
     *
     * @return The height of this Drawable.
     */
    int16_t getHeight() const
 800c5a0:	b480      	push	{r7}
 800c5a2:	b083      	sub	sp, #12
 800c5a4:	af00      	add	r7, sp, #0
 800c5a6:	6078      	str	r0, [r7, #4]
    {
        return rect.height;
 800c5a8:	687b      	ldr	r3, [r7, #4]
 800c5aa:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
    }
 800c5ae:	4618      	mov	r0, r3
 800c5b0:	370c      	adds	r7, #12
 800c5b2:	46bd      	mov	sp, r7
 800c5b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c5b8:	4770      	bx	lr

0800c5ba <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 800c5ba:	b480      	push	{r7}
 800c5bc:	b083      	sub	sp, #12
 800c5be:	af00      	add	r7, sp, #0
 800c5c0:	6078      	str	r0, [r7, #4]
 800c5c2:	460b      	mov	r3, r1
 800c5c4:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 800c5c6:	687b      	ldr	r3, [r7, #4]
 800c5c8:	887a      	ldrh	r2, [r7, #2]
 800c5ca:	809a      	strh	r2, [r3, #4]
    }
 800c5cc:	bf00      	nop
 800c5ce:	370c      	adds	r7, #12
 800c5d0:	46bd      	mov	sp, r7
 800c5d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c5d6:	4770      	bx	lr

0800c5d8 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 800c5d8:	b480      	push	{r7}
 800c5da:	b083      	sub	sp, #12
 800c5dc:	af00      	add	r7, sp, #0
 800c5de:	6078      	str	r0, [r7, #4]
 800c5e0:	460b      	mov	r3, r1
 800c5e2:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 800c5e4:	687b      	ldr	r3, [r7, #4]
 800c5e6:	887a      	ldrh	r2, [r7, #2]
 800c5e8:	80da      	strh	r2, [r3, #6]
    }
 800c5ea:	bf00      	nop
 800c5ec:	370c      	adds	r7, #12
 800c5ee:	46bd      	mov	sp, r7
 800c5f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c5f4:	4770      	bx	lr

0800c5f6 <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 800c5f6:	b580      	push	{r7, lr}
 800c5f8:	b082      	sub	sp, #8
 800c5fa:	af00      	add	r7, sp, #0
 800c5fc:	6078      	str	r0, [r7, #4]
 800c5fe:	460b      	mov	r3, r1
 800c600:	807b      	strh	r3, [r7, #2]
 800c602:	4613      	mov	r3, r2
 800c604:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800c606:	687b      	ldr	r3, [r7, #4]
 800c608:	681b      	ldr	r3, [r3, #0]
 800c60a:	3330      	adds	r3, #48	; 0x30
 800c60c:	681b      	ldr	r3, [r3, #0]
 800c60e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800c612:	4611      	mov	r1, r2
 800c614:	6878      	ldr	r0, [r7, #4]
 800c616:	4798      	blx	r3
        setY(y);
 800c618:	687b      	ldr	r3, [r7, #4]
 800c61a:	681b      	ldr	r3, [r3, #0]
 800c61c:	3334      	adds	r3, #52	; 0x34
 800c61e:	681b      	ldr	r3, [r3, #0]
 800c620:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c624:	4611      	mov	r1, r2
 800c626:	6878      	ldr	r0, [r7, #4]
 800c628:	4798      	blx	r3
    }
 800c62a:	bf00      	nop
 800c62c:	3708      	adds	r7, #8
 800c62e:	46bd      	mov	sp, r7
 800c630:	bd80      	pop	{r7, pc}

0800c632 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 800c632:	b480      	push	{r7}
 800c634:	b083      	sub	sp, #12
 800c636:	af00      	add	r7, sp, #0
 800c638:	6078      	str	r0, [r7, #4]
 800c63a:	460b      	mov	r3, r1
 800c63c:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 800c63e:	687b      	ldr	r3, [r7, #4]
 800c640:	887a      	ldrh	r2, [r7, #2]
 800c642:	811a      	strh	r2, [r3, #8]
    }
 800c644:	bf00      	nop
 800c646:	370c      	adds	r7, #12
 800c648:	46bd      	mov	sp, r7
 800c64a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c64e:	4770      	bx	lr

0800c650 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 800c650:	b480      	push	{r7}
 800c652:	b083      	sub	sp, #12
 800c654:	af00      	add	r7, sp, #0
 800c656:	6078      	str	r0, [r7, #4]
 800c658:	460b      	mov	r3, r1
 800c65a:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 800c65c:	687b      	ldr	r3, [r7, #4]
 800c65e:	887a      	ldrh	r2, [r7, #2]
 800c660:	815a      	strh	r2, [r3, #10]
    }
 800c662:	bf00      	nop
 800c664:	370c      	adds	r7, #12
 800c666:	46bd      	mov	sp, r7
 800c668:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c66c:	4770      	bx	lr

0800c66e <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 800c66e:	b480      	push	{r7}
 800c670:	b083      	sub	sp, #12
 800c672:	af00      	add	r7, sp, #0
 800c674:	6078      	str	r0, [r7, #4]
    {
    }
 800c676:	bf00      	nop
 800c678:	370c      	adds	r7, #12
 800c67a:	46bd      	mov	sp, r7
 800c67c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c680:	4770      	bx	lr

0800c682 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800c682:	b480      	push	{r7}
 800c684:	b083      	sub	sp, #12
 800c686:	af00      	add	r7, sp, #0
 800c688:	6078      	str	r0, [r7, #4]
 800c68a:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c68c:	bf00      	nop
 800c68e:	370c      	adds	r7, #12
 800c690:	46bd      	mov	sp, r7
 800c692:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c696:	4770      	bx	lr

0800c698 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800c698:	b480      	push	{r7}
 800c69a:	b083      	sub	sp, #12
 800c69c:	af00      	add	r7, sp, #0
 800c69e:	6078      	str	r0, [r7, #4]
 800c6a0:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c6a2:	bf00      	nop
 800c6a4:	370c      	adds	r7, #12
 800c6a6:	46bd      	mov	sp, r7
 800c6a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c6ac:	4770      	bx	lr

0800c6ae <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 800c6ae:	b580      	push	{r7, lr}
 800c6b0:	b082      	sub	sp, #8
 800c6b2:	af00      	add	r7, sp, #0
 800c6b4:	6078      	str	r0, [r7, #4]
 800c6b6:	460b      	mov	r3, r1
 800c6b8:	807b      	strh	r3, [r7, #2]
 800c6ba:	4613      	mov	r3, r2
 800c6bc:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 800c6be:	687b      	ldr	r3, [r7, #4]
 800c6c0:	681b      	ldr	r3, [r3, #0]
 800c6c2:	3338      	adds	r3, #56	; 0x38
 800c6c4:	681b      	ldr	r3, [r3, #0]
 800c6c6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800c6ca:	4611      	mov	r1, r2
 800c6cc:	6878      	ldr	r0, [r7, #4]
 800c6ce:	4798      	blx	r3
        setHeight(height);
 800c6d0:	687b      	ldr	r3, [r7, #4]
 800c6d2:	681b      	ldr	r3, [r3, #0]
 800c6d4:	333c      	adds	r3, #60	; 0x3c
 800c6d6:	681b      	ldr	r3, [r3, #0]
 800c6d8:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c6dc:	4611      	mov	r1, r2
 800c6de:	6878      	ldr	r0, [r7, #4]
 800c6e0:	4798      	blx	r3
    }
 800c6e2:	bf00      	nop
 800c6e4:	3708      	adds	r7, #8
 800c6e6:	46bd      	mov	sp, r7
 800c6e8:	bd80      	pop	{r7, pc}

0800c6ea <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800c6ea:	b480      	push	{r7}
 800c6ec:	b083      	sub	sp, #12
 800c6ee:	af00      	add	r7, sp, #0
 800c6f0:	6078      	str	r0, [r7, #4]
 800c6f2:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c6f4:	bf00      	nop
 800c6f6:	370c      	adds	r7, #12
 800c6f8:	46bd      	mov	sp, r7
 800c6fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c6fe:	4770      	bx	lr

0800c700 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 800c700:	b480      	push	{r7}
 800c702:	b083      	sub	sp, #12
 800c704:	af00      	add	r7, sp, #0
 800c706:	6078      	str	r0, [r7, #4]
    {
    }
 800c708:	bf00      	nop
 800c70a:	370c      	adds	r7, #12
 800c70c:	46bd      	mov	sp, r7
 800c70e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c712:	4770      	bx	lr

0800c714 <_ZN8touchgfx8Drawable12setTouchableEb>:
    /**
     * Controls whether this Drawable receives touch events or not.
     *
     * @param  touch If true it will receive touch events, if false it will not.
     */
    void setTouchable(bool touch)
 800c714:	b480      	push	{r7}
 800c716:	b083      	sub	sp, #12
 800c718:	af00      	add	r7, sp, #0
 800c71a:	6078      	str	r0, [r7, #4]
 800c71c:	460b      	mov	r3, r1
 800c71e:	70fb      	strb	r3, [r7, #3]
    {
        touchable = touch;
 800c720:	687b      	ldr	r3, [r7, #4]
 800c722:	78fa      	ldrb	r2, [r7, #3]
 800c724:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
    }
 800c728:	bf00      	nop
 800c72a:	370c      	adds	r7, #12
 800c72c:	46bd      	mov	sp, r7
 800c72e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c732:	4770      	bx	lr

0800c734 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 800c734:	b480      	push	{r7}
 800c736:	b083      	sub	sp, #12
 800c738:	af00      	add	r7, sp, #0
 800c73a:	6078      	str	r0, [r7, #4]
    {
        return visible;
 800c73c:	687b      	ldr	r3, [r7, #4]
 800c73e:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 800c742:	4618      	mov	r0, r3
 800c744:	370c      	adds	r7, #12
 800c746:	46bd      	mov	sp, r7
 800c748:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c74c:	4770      	bx	lr

0800c74e <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800c74e:	b480      	push	{r7}
 800c750:	b083      	sub	sp, #12
 800c752:	af00      	add	r7, sp, #0
 800c754:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 800c756:	687b      	ldr	r3, [r7, #4]
 800c758:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 800c75c:	4618      	mov	r0, r3
 800c75e:	370c      	adds	r7, #12
 800c760:	46bd      	mov	sp, r7
 800c762:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c766:	4770      	bx	lr

0800c768 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800c768:	b580      	push	{r7, lr}
 800c76a:	b082      	sub	sp, #8
 800c76c:	af00      	add	r7, sp, #0
 800c76e:	6078      	str	r0, [r7, #4]
 800c770:	460b      	mov	r3, r1
 800c772:	807b      	strh	r3, [r7, #2]
 800c774:	4613      	mov	r3, r2
 800c776:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 800c778:	687b      	ldr	r3, [r7, #4]
 800c77a:	681b      	ldr	r3, [r3, #0]
 800c77c:	3354      	adds	r3, #84	; 0x54
 800c77e:	681b      	ldr	r3, [r3, #0]
 800c780:	8879      	ldrh	r1, [r7, #2]
 800c782:	687a      	ldr	r2, [r7, #4]
 800c784:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 800c788:	b292      	uxth	r2, r2
 800c78a:	1a8a      	subs	r2, r1, r2
 800c78c:	b292      	uxth	r2, r2
 800c78e:	b210      	sxth	r0, r2
 800c790:	8839      	ldrh	r1, [r7, #0]
 800c792:	687a      	ldr	r2, [r7, #4]
 800c794:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800c798:	b292      	uxth	r2, r2
 800c79a:	1a8a      	subs	r2, r1, r2
 800c79c:	b292      	uxth	r2, r2
 800c79e:	b212      	sxth	r2, r2
 800c7a0:	4601      	mov	r1, r0
 800c7a2:	6878      	ldr	r0, [r7, #4]
 800c7a4:	4798      	blx	r3
    }
 800c7a6:	bf00      	nop
 800c7a8:	3708      	adds	r7, #8
 800c7aa:	46bd      	mov	sp, r7
 800c7ac:	bd80      	pop	{r7, pc}

0800c7ae <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 800c7ae:	b480      	push	{r7}
 800c7b0:	b083      	sub	sp, #12
 800c7b2:	af00      	add	r7, sp, #0
 800c7b4:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800c7b6:	687b      	ldr	r3, [r7, #4]
 800c7b8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c7bc:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800c7be:	687b      	ldr	r3, [r7, #4]
 800c7c0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c7c4:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 800c7c6:	687b      	ldr	r3, [r7, #4]
 800c7c8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c7cc:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 800c7ce:	bf00      	nop
 800c7d0:	370c      	adds	r7, #12
 800c7d2:	46bd      	mov	sp, r7
 800c7d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7d8:	4770      	bx	lr

0800c7da <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 800c7da:	b580      	push	{r7, lr}
 800c7dc:	b084      	sub	sp, #16
 800c7de:	af00      	add	r7, sp, #0
 800c7e0:	60f8      	str	r0, [r7, #12]
 800c7e2:	60b9      	str	r1, [r7, #8]
 800c7e4:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 800c7e6:	68f8      	ldr	r0, [r7, #12]
 800c7e8:	f7ff ffe1 	bl	800c7ae <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 800c7ec:	687b      	ldr	r3, [r7, #4]
 800c7ee:	681a      	ldr	r2, [r3, #0]
 800c7f0:	68fb      	ldr	r3, [r7, #12]
 800c7f2:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 800c7f4:	687b      	ldr	r3, [r7, #4]
 800c7f6:	68fa      	ldr	r2, [r7, #12]
 800c7f8:	601a      	str	r2, [r3, #0]
    }
 800c7fa:	bf00      	nop
 800c7fc:	3710      	adds	r7, #16
 800c7fe:	46bd      	mov	sp, r7
 800c800:	bd80      	pop	{r7, pc}
	...

0800c804 <_ZN8touchgfx9ContainerC1Ev>:
 * @see Drawable
 */
class Container : public Drawable
{
public:
    Container()
 800c804:	b580      	push	{r7, lr}
 800c806:	b082      	sub	sp, #8
 800c808:	af00      	add	r7, sp, #0
 800c80a:	6078      	str	r0, [r7, #4]
        : Drawable(),
          firstChild(0)
 800c80c:	687b      	ldr	r3, [r7, #4]
 800c80e:	4618      	mov	r0, r3
 800c810:	f7ff fe2a 	bl	800c468 <_ZN8touchgfx8DrawableC1Ev>
 800c814:	4a05      	ldr	r2, [pc, #20]	; (800c82c <_ZN8touchgfx9ContainerC1Ev+0x28>)
 800c816:	687b      	ldr	r3, [r7, #4]
 800c818:	601a      	str	r2, [r3, #0]
 800c81a:	687b      	ldr	r3, [r7, #4]
 800c81c:	2200      	movs	r2, #0
 800c81e:	629a      	str	r2, [r3, #40]	; 0x28
    {
    }
 800c820:	687b      	ldr	r3, [r7, #4]
 800c822:	4618      	mov	r0, r3
 800c824:	3708      	adds	r7, #8
 800c826:	46bd      	mov	sp, r7
 800c828:	bd80      	pop	{r7, pc}
 800c82a:	bf00      	nop
 800c82c:	0802c60c 	.word	0x0802c60c

0800c830 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @return Pointer to the first drawable added to this container. If nothing has been
     *         added return zero.
     *
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
 800c830:	b480      	push	{r7}
 800c832:	b083      	sub	sp, #12
 800c834:	af00      	add	r7, sp, #0
 800c836:	6078      	str	r0, [r7, #4]
    {
        return firstChild;
 800c838:	687b      	ldr	r3, [r7, #4]
 800c83a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    }
 800c83c:	4618      	mov	r0, r3
 800c83e:	370c      	adds	r7, #12
 800c840:	46bd      	mov	sp, r7
 800c842:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c846:	4770      	bx	lr

0800c848 <_ZN8touchgfx3HAL15getAuxiliaryLCDEv>:
    /**
     * Get the auxiliary LCD class attached to the HAL instance if any.
     *
     * @return A pointer on the axiliary LCD class attached to the HAL instance.
     */
    LCD* getAuxiliaryLCD()
 800c848:	b480      	push	{r7}
 800c84a:	b083      	sub	sp, #12
 800c84c:	af00      	add	r7, sp, #0
 800c84e:	6078      	str	r0, [r7, #4]
    {
        return auxiliaryLCD;
 800c850:	687b      	ldr	r3, [r7, #4]
 800c852:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    }
 800c854:	4618      	mov	r0, r3
 800c856:	370c      	adds	r7, #12
 800c858:	46bd      	mov	sp, r7
 800c85a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c85e:	4770      	bx	lr

0800c860 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 800c860:	b580      	push	{r7, lr}
 800c862:	b082      	sub	sp, #8
 800c864:	af00      	add	r7, sp, #0
 800c866:	6078      	str	r0, [r7, #4]
    {
 800c868:	4a06      	ldr	r2, [pc, #24]	; (800c884 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800c86a:	687b      	ldr	r3, [r7, #4]
 800c86c:	601a      	str	r2, [r3, #0]
 800c86e:	687b      	ldr	r3, [r7, #4]
 800c870:	3304      	adds	r3, #4
 800c872:	4618      	mov	r0, r3
 800c874:	f000 f92a 	bl	800cacc <_ZN8touchgfx9ContainerD1Ev>
    }
 800c878:	687b      	ldr	r3, [r7, #4]
 800c87a:	4618      	mov	r0, r3
 800c87c:	3708      	adds	r7, #8
 800c87e:	46bd      	mov	sp, r7
 800c880:	bd80      	pop	{r7, pc}
 800c882:	bf00      	nop
 800c884:	0802cec0 	.word	0x0802cec0

0800c888 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 800c888:	b580      	push	{r7, lr}
 800c88a:	b082      	sub	sp, #8
 800c88c:	af00      	add	r7, sp, #0
 800c88e:	6078      	str	r0, [r7, #4]
    }
 800c890:	6878      	ldr	r0, [r7, #4]
 800c892:	f7ff ffe5 	bl	800c860 <_ZN8touchgfx6ScreenD1Ev>
 800c896:	213c      	movs	r1, #60	; 0x3c
 800c898:	6878      	ldr	r0, [r7, #4]
 800c89a:	f01b ff1a 	bl	80286d2 <_ZdlPvj>
 800c89e:	687b      	ldr	r3, [r7, #4]
 800c8a0:	4618      	mov	r0, r3
 800c8a2:	3708      	adds	r7, #8
 800c8a4:	46bd      	mov	sp, r7
 800c8a6:	bd80      	pop	{r7, pc}

0800c8a8 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 800c8a8:	b480      	push	{r7}
 800c8aa:	b083      	sub	sp, #12
 800c8ac:	af00      	add	r7, sp, #0
 800c8ae:	6078      	str	r0, [r7, #4]
    {
    }
 800c8b0:	bf00      	nop
 800c8b2:	370c      	adds	r7, #12
 800c8b4:	46bd      	mov	sp, r7
 800c8b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8ba:	4770      	bx	lr

0800c8bc <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 800c8bc:	b480      	push	{r7}
 800c8be:	b083      	sub	sp, #12
 800c8c0:	af00      	add	r7, sp, #0
 800c8c2:	6078      	str	r0, [r7, #4]
    {
    }
 800c8c4:	bf00      	nop
 800c8c6:	370c      	adds	r7, #12
 800c8c8:	46bd      	mov	sp, r7
 800c8ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8ce:	4770      	bx	lr

0800c8d0 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 800c8d0:	b480      	push	{r7}
 800c8d2:	b083      	sub	sp, #12
 800c8d4:	af00      	add	r7, sp, #0
 800c8d6:	6078      	str	r0, [r7, #4]
    {
    }
 800c8d8:	bf00      	nop
 800c8da:	370c      	adds	r7, #12
 800c8dc:	46bd      	mov	sp, r7
 800c8de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8e2:	4770      	bx	lr

0800c8e4 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 800c8e4:	b480      	push	{r7}
 800c8e6:	b083      	sub	sp, #12
 800c8e8:	af00      	add	r7, sp, #0
 800c8ea:	6078      	str	r0, [r7, #4]
    {
    }
 800c8ec:	bf00      	nop
 800c8ee:	370c      	adds	r7, #12
 800c8f0:	46bd      	mov	sp, r7
 800c8f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8f6:	4770      	bx	lr

0800c8f8 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 800c8f8:	b480      	push	{r7}
 800c8fa:	b083      	sub	sp, #12
 800c8fc:	af00      	add	r7, sp, #0
 800c8fe:	6078      	str	r0, [r7, #4]
 800c900:	460b      	mov	r3, r1
 800c902:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 800c904:	bf00      	nop
 800c906:	370c      	adds	r7, #12
 800c908:	46bd      	mov	sp, r7
 800c90a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c90e:	4770      	bx	lr

0800c910 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 800c910:	b580      	push	{r7, lr}
 800c912:	b082      	sub	sp, #8
 800c914:	af00      	add	r7, sp, #0
 800c916:	6078      	str	r0, [r7, #4]
 800c918:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800c91a:	687b      	ldr	r3, [r7, #4]
 800c91c:	3304      	adds	r3, #4
 800c91e:	6839      	ldr	r1, [r7, #0]
 800c920:	4618      	mov	r0, r3
 800c922:	f005 fcdd 	bl	80122e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800c926:	bf00      	nop
 800c928:	3708      	adds	r7, #8
 800c92a:	46bd      	mov	sp, r7
 800c92c:	bd80      	pop	{r7, pc}

0800c92e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 800c92e:	b580      	push	{r7, lr}
 800c930:	b084      	sub	sp, #16
 800c932:	af00      	add	r7, sp, #0
 800c934:	60f8      	str	r0, [r7, #12]
 800c936:	607b      	str	r3, [r7, #4]
 800c938:	460b      	mov	r3, r1
 800c93a:	817b      	strh	r3, [r7, #10]
 800c93c:	4613      	mov	r3, r2
 800c93e:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800c940:	68fb      	ldr	r3, [r7, #12]
 800c942:	4618      	mov	r0, r3
 800c944:	f7ff fef6 	bl	800c734 <_ZNK8touchgfx8Drawable9isVisibleEv>
 800c948:	4603      	mov	r3, r0
 800c94a:	2b00      	cmp	r3, #0
 800c94c:	d008      	beq.n	800c960 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800c94e:	68fb      	ldr	r3, [r7, #12]
 800c950:	4618      	mov	r0, r3
 800c952:	f7ff fefc 	bl	800c74e <_ZNK8touchgfx8Drawable11isTouchableEv>
 800c956:	4603      	mov	r3, r0
 800c958:	2b00      	cmp	r3, #0
 800c95a:	d001      	beq.n	800c960 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800c95c:	2301      	movs	r3, #1
 800c95e:	e000      	b.n	800c962 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800c960:	2300      	movs	r3, #0
 800c962:	2b00      	cmp	r3, #0
 800c964:	d002      	beq.n	800c96c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 800c966:	68fa      	ldr	r2, [r7, #12]
 800c968:	687b      	ldr	r3, [r7, #4]
 800c96a:	601a      	str	r2, [r3, #0]
        }
    }
 800c96c:	bf00      	nop
 800c96e:	3710      	adds	r7, #16
 800c970:	46bd      	mov	sp, r7
 800c972:	bd80      	pop	{r7, pc}

0800c974 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 800c974:	b580      	push	{r7, lr}
 800c976:	b082      	sub	sp, #8
 800c978:	af00      	add	r7, sp, #0
 800c97a:	6078      	str	r0, [r7, #4]
 800c97c:	687b      	ldr	r3, [r7, #4]
 800c97e:	4618      	mov	r0, r3
 800c980:	f7ff fd72 	bl	800c468 <_ZN8touchgfx8DrawableC1Ev>
 800c984:	4a03      	ldr	r2, [pc, #12]	; (800c994 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800c986:	687b      	ldr	r3, [r7, #4]
 800c988:	601a      	str	r2, [r3, #0]
 800c98a:	687b      	ldr	r3, [r7, #4]
 800c98c:	4618      	mov	r0, r3
 800c98e:	3708      	adds	r7, #8
 800c990:	46bd      	mov	sp, r7
 800c992:	bd80      	pop	{r7, pc}
 800c994:	0802be24 	.word	0x0802be24

0800c998 <_ZN8touchgfx6WidgetD1Ev>:
 800c998:	b580      	push	{r7, lr}
 800c99a:	b082      	sub	sp, #8
 800c99c:	af00      	add	r7, sp, #0
 800c99e:	6078      	str	r0, [r7, #4]
 800c9a0:	4a05      	ldr	r2, [pc, #20]	; (800c9b8 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800c9a2:	687b      	ldr	r3, [r7, #4]
 800c9a4:	601a      	str	r2, [r3, #0]
 800c9a6:	687b      	ldr	r3, [r7, #4]
 800c9a8:	4618      	mov	r0, r3
 800c9aa:	f7ff fd8d 	bl	800c4c8 <_ZN8touchgfx8DrawableD1Ev>
 800c9ae:	687b      	ldr	r3, [r7, #4]
 800c9b0:	4618      	mov	r0, r3
 800c9b2:	3708      	adds	r7, #8
 800c9b4:	46bd      	mov	sp, r7
 800c9b6:	bd80      	pop	{r7, pc}
 800c9b8:	0802be24 	.word	0x0802be24

0800c9bc <_ZN8touchgfx6WidgetD0Ev>:
 800c9bc:	b580      	push	{r7, lr}
 800c9be:	b082      	sub	sp, #8
 800c9c0:	af00      	add	r7, sp, #0
 800c9c2:	6078      	str	r0, [r7, #4]
 800c9c4:	6878      	ldr	r0, [r7, #4]
 800c9c6:	f7ff ffe7 	bl	800c998 <_ZN8touchgfx6WidgetD1Ev>
 800c9ca:	2128      	movs	r1, #40	; 0x28
 800c9cc:	6878      	ldr	r0, [r7, #4]
 800c9ce:	f01b fe80 	bl	80286d2 <_ZdlPvj>
 800c9d2:	687b      	ldr	r3, [r7, #4]
 800c9d4:	4618      	mov	r0, r3
 800c9d6:	3708      	adds	r7, #8
 800c9d8:	46bd      	mov	sp, r7
 800c9da:	bd80      	pop	{r7, pc}

0800c9dc <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 800c9dc:	b580      	push	{r7, lr}
 800c9de:	b082      	sub	sp, #8
 800c9e0:	af00      	add	r7, sp, #0
 800c9e2:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 800c9e4:	687b      	ldr	r3, [r7, #4]
 800c9e6:	4618      	mov	r0, r3
 800c9e8:	2326      	movs	r3, #38	; 0x26
 800c9ea:	461a      	mov	r2, r3
 800c9ec:	2100      	movs	r1, #0
 800c9ee:	f01c f919 	bl	8028c24 <memset>
 800c9f2:	687b      	ldr	r3, [r7, #4]
 800c9f4:	4618      	mov	r0, r3
 800c9f6:	f7ff ffbd 	bl	800c974 <_ZN8touchgfx6WidgetC1Ev>
 800c9fa:	4a09      	ldr	r2, [pc, #36]	; (800ca20 <_ZN8touchgfx3BoxC1Ev+0x44>)
 800c9fc:	687b      	ldr	r3, [r7, #4]
 800c9fe:	601a      	str	r2, [r3, #0]
 800ca00:	687b      	ldr	r3, [r7, #4]
 800ca02:	22ff      	movs	r2, #255	; 0xff
 800ca04:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 800ca08:	687b      	ldr	r3, [r7, #4]
 800ca0a:	3328      	adds	r3, #40	; 0x28
 800ca0c:	2100      	movs	r1, #0
 800ca0e:	4618      	mov	r0, r3
 800ca10:	f7ff fcbc 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
    {
    }
 800ca14:	687b      	ldr	r3, [r7, #4]
 800ca16:	4618      	mov	r0, r3
 800ca18:	3708      	adds	r7, #8
 800ca1a:	46bd      	mov	sp, r7
 800ca1c:	bd80      	pop	{r7, pc}
 800ca1e:	bf00      	nop
 800ca20:	0802cb34 	.word	0x0802cb34

0800ca24 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 800ca24:	b480      	push	{r7}
 800ca26:	b083      	sub	sp, #12
 800ca28:	af00      	add	r7, sp, #0
 800ca2a:	6078      	str	r0, [r7, #4]
 800ca2c:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 800ca2e:	687b      	ldr	r3, [r7, #4]
 800ca30:	683a      	ldr	r2, [r7, #0]
 800ca32:	629a      	str	r2, [r3, #40]	; 0x28
    }
 800ca34:	bf00      	nop
 800ca36:	370c      	adds	r7, #12
 800ca38:	46bd      	mov	sp, r7
 800ca3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca3e:	4770      	bx	lr

0800ca40 <_ZN8touchgfx3Box8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
 800ca40:	b480      	push	{r7}
 800ca42:	b083      	sub	sp, #12
 800ca44:	af00      	add	r7, sp, #0
 800ca46:	6078      	str	r0, [r7, #4]
 800ca48:	460b      	mov	r3, r1
 800ca4a:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800ca4c:	687b      	ldr	r3, [r7, #4]
 800ca4e:	78fa      	ldrb	r2, [r7, #3]
 800ca50:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
    }
 800ca54:	bf00      	nop
 800ca56:	370c      	adds	r7, #12
 800ca58:	46bd      	mov	sp, r7
 800ca5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca5e:	4770      	bx	lr

0800ca60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 800ca60:	b580      	push	{r7, lr}
 800ca62:	b082      	sub	sp, #8
 800ca64:	af00      	add	r7, sp, #0
 800ca66:	6078      	str	r0, [r7, #4]
 800ca68:	6039      	str	r1, [r7, #0]
        : Widget(), bitmap(bmp), alpha(255)
 800ca6a:	687b      	ldr	r3, [r7, #4]
 800ca6c:	4618      	mov	r0, r3
 800ca6e:	2326      	movs	r3, #38	; 0x26
 800ca70:	461a      	mov	r2, r3
 800ca72:	2100      	movs	r1, #0
 800ca74:	f01c f8d6 	bl	8028c24 <memset>
 800ca78:	687b      	ldr	r3, [r7, #4]
 800ca7a:	4618      	mov	r0, r3
 800ca7c:	f7ff ff7a 	bl	800c974 <_ZN8touchgfx6WidgetC1Ev>
 800ca80:	4a09      	ldr	r2, [pc, #36]	; (800caa8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x48>)
 800ca82:	687b      	ldr	r3, [r7, #4]
 800ca84:	601a      	str	r2, [r3, #0]
 800ca86:	687b      	ldr	r3, [r7, #4]
 800ca88:	683a      	ldr	r2, [r7, #0]
 800ca8a:	8812      	ldrh	r2, [r2, #0]
 800ca8c:	84da      	strh	r2, [r3, #38]	; 0x26
 800ca8e:	687b      	ldr	r3, [r7, #4]
 800ca90:	22ff      	movs	r2, #255	; 0xff
 800ca92:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
    {
        Image::setBitmap(bmp);
 800ca96:	6839      	ldr	r1, [r7, #0]
 800ca98:	6878      	ldr	r0, [r7, #4]
 800ca9a:	f008 f906 	bl	8014caa <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 800ca9e:	687b      	ldr	r3, [r7, #4]
 800caa0:	4618      	mov	r0, r3
 800caa2:	3708      	adds	r7, #8
 800caa4:	46bd      	mov	sp, r7
 800caa6:	bd80      	pop	{r7, pc}
 800caa8:	0802cc94 	.word	0x0802cc94

0800caac <_ZN8touchgfx5Image8setAlphaEh>:
     *
     * @see getAlpha
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
 800caac:	b480      	push	{r7}
 800caae:	b083      	sub	sp, #12
 800cab0:	af00      	add	r7, sp, #0
 800cab2:	6078      	str	r0, [r7, #4]
 800cab4:	460b      	mov	r3, r1
 800cab6:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800cab8:	687b      	ldr	r3, [r7, #4]
 800caba:	78fa      	ldrb	r2, [r7, #3]
 800cabc:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
    }
 800cac0:	bf00      	nop
 800cac2:	370c      	adds	r7, #12
 800cac4:	46bd      	mov	sp, r7
 800cac6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800caca:	4770      	bx	lr

0800cacc <_ZN8touchgfx9ContainerD1Ev>:
class Container : public Drawable
 800cacc:	b580      	push	{r7, lr}
 800cace:	b082      	sub	sp, #8
 800cad0:	af00      	add	r7, sp, #0
 800cad2:	6078      	str	r0, [r7, #4]
 800cad4:	4a05      	ldr	r2, [pc, #20]	; (800caec <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800cad6:	687b      	ldr	r3, [r7, #4]
 800cad8:	601a      	str	r2, [r3, #0]
 800cada:	687b      	ldr	r3, [r7, #4]
 800cadc:	4618      	mov	r0, r3
 800cade:	f7ff fcf3 	bl	800c4c8 <_ZN8touchgfx8DrawableD1Ev>
 800cae2:	687b      	ldr	r3, [r7, #4]
 800cae4:	4618      	mov	r0, r3
 800cae6:	3708      	adds	r7, #8
 800cae8:	46bd      	mov	sp, r7
 800caea:	bd80      	pop	{r7, pc}
 800caec:	0802c60c 	.word	0x0802c60c

0800caf0 <_ZN8touchgfx9ContainerD0Ev>:
 800caf0:	b580      	push	{r7, lr}
 800caf2:	b082      	sub	sp, #8
 800caf4:	af00      	add	r7, sp, #0
 800caf6:	6078      	str	r0, [r7, #4]
 800caf8:	6878      	ldr	r0, [r7, #4]
 800cafa:	f7ff ffe7 	bl	800cacc <_ZN8touchgfx9ContainerD1Ev>
 800cafe:	212c      	movs	r1, #44	; 0x2c
 800cb00:	6878      	ldr	r0, [r7, #4]
 800cb02:	f01b fde6 	bl	80286d2 <_ZdlPvj>
 800cb06:	687b      	ldr	r3, [r7, #4]
 800cb08:	4618      	mov	r0, r3
 800cb0a:	3708      	adds	r7, #8
 800cb0c:	46bd      	mov	sp, r7
 800cb0e:	bd80      	pop	{r7, pc}

0800cb10 <_ZN8touchgfx23AbstractButtonContainerC1Ev>:
 * @see ClickButtonTrigger, RepeatButtonTrigger, ToggleButtonTrigger, TouchButtonTrigger
 */
class AbstractButtonContainer : public Container
{
public:
    AbstractButtonContainer()
 800cb10:	b580      	push	{r7, lr}
 800cb12:	b082      	sub	sp, #8
 800cb14:	af00      	add	r7, sp, #0
 800cb16:	6078      	str	r0, [r7, #4]
        : pressed(false), alpha(255), action(0)
 800cb18:	687b      	ldr	r3, [r7, #4]
 800cb1a:	4618      	mov	r0, r3
 800cb1c:	f7ff fe72 	bl	800c804 <_ZN8touchgfx9ContainerC1Ev>
 800cb20:	4a0b      	ldr	r2, [pc, #44]	; (800cb50 <_ZN8touchgfx23AbstractButtonContainerC1Ev+0x40>)
 800cb22:	687b      	ldr	r3, [r7, #4]
 800cb24:	601a      	str	r2, [r3, #0]
 800cb26:	687b      	ldr	r3, [r7, #4]
 800cb28:	2200      	movs	r2, #0
 800cb2a:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800cb2e:	687b      	ldr	r3, [r7, #4]
 800cb30:	22ff      	movs	r2, #255	; 0xff
 800cb32:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800cb36:	687b      	ldr	r3, [r7, #4]
 800cb38:	2200      	movs	r2, #0
 800cb3a:	631a      	str	r2, [r3, #48]	; 0x30
    {
        setTouchable(true);
 800cb3c:	687b      	ldr	r3, [r7, #4]
 800cb3e:	2101      	movs	r1, #1
 800cb40:	4618      	mov	r0, r3
 800cb42:	f7ff fde7 	bl	800c714 <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800cb46:	687b      	ldr	r3, [r7, #4]
 800cb48:	4618      	mov	r0, r3
 800cb4a:	3708      	adds	r7, #8
 800cb4c:	46bd      	mov	sp, r7
 800cb4e:	bd80      	pop	{r7, pc}
 800cb50:	0802bd88 	.word	0x0802bd88

0800cb54 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>:
     *
     * @param  isPressed True if is pressed, false if not.
     *
     * @see getPressed, handlePressedUpdated
     */
    void setPressed(bool isPressed)
 800cb54:	b580      	push	{r7, lr}
 800cb56:	b082      	sub	sp, #8
 800cb58:	af00      	add	r7, sp, #0
 800cb5a:	6078      	str	r0, [r7, #4]
 800cb5c:	460b      	mov	r3, r1
 800cb5e:	70fb      	strb	r3, [r7, #3]
    {
        pressed = isPressed;
 800cb60:	687b      	ldr	r3, [r7, #4]
 800cb62:	78fa      	ldrb	r2, [r7, #3]
 800cb64:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
        handlePressedUpdated();
 800cb68:	687b      	ldr	r3, [r7, #4]
 800cb6a:	681b      	ldr	r3, [r3, #0]
 800cb6c:	338c      	adds	r3, #140	; 0x8c
 800cb6e:	681b      	ldr	r3, [r3, #0]
 800cb70:	6878      	ldr	r0, [r7, #4]
 800cb72:	4798      	blx	r3
    }
 800cb74:	bf00      	nop
 800cb76:	3708      	adds	r7, #8
 800cb78:	46bd      	mov	sp, r7
 800cb7a:	bd80      	pop	{r7, pc}

0800cb7c <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>:
     *
     * @return True if it succeeds, false if it fails.
     *
     * @see setPressed
     */
    bool getPressed()
 800cb7c:	b480      	push	{r7}
 800cb7e:	b083      	sub	sp, #12
 800cb80:	af00      	add	r7, sp, #0
 800cb82:	6078      	str	r0, [r7, #4]
    {
        return pressed;
 800cb84:	687b      	ldr	r3, [r7, #4]
 800cb86:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
    }
 800cb8a:	4618      	mov	r0, r3
 800cb8c:	370c      	adds	r7, #12
 800cb8e:	46bd      	mov	sp, r7
 800cb90:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb94:	4770      	bx	lr

0800cb96 <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>:
        alpha = newAlpha;
        handleAlphaUpdated();
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
 800cb96:	b480      	push	{r7}
 800cb98:	b083      	sub	sp, #12
 800cb9a:	af00      	add	r7, sp, #0
 800cb9c:	6078      	str	r0, [r7, #4]
    {
        return alpha;
 800cb9e:	687b      	ldr	r3, [r7, #4]
 800cba0:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
    }
 800cba4:	4618      	mov	r0, r3
 800cba6:	370c      	adds	r7, #12
 800cba8:	46bd      	mov	sp, r7
 800cbaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbae:	4770      	bx	lr

0800cbb0 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     *
     * @param  callback The callback.
     *
     * @see executeAction
     */
    void setAction(GenericCallback<const AbstractButtonContainer&>& callback)
 800cbb0:	b480      	push	{r7}
 800cbb2:	b083      	sub	sp, #12
 800cbb4:	af00      	add	r7, sp, #0
 800cbb6:	6078      	str	r0, [r7, #4]
 800cbb8:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800cbba:	687b      	ldr	r3, [r7, #4]
 800cbbc:	683a      	ldr	r2, [r7, #0]
 800cbbe:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800cbc0:	bf00      	nop
 800cbc2:	370c      	adds	r7, #12
 800cbc4:	46bd      	mov	sp, r7
 800cbc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbca:	4770      	bx	lr

0800cbcc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 800cbcc:	b580      	push	{r7, lr}
 800cbce:	b082      	sub	sp, #8
 800cbd0:	af00      	add	r7, sp, #0
 800cbd2:	6078      	str	r0, [r7, #4]
    {
        if (action && action->isValid())
 800cbd4:	687b      	ldr	r3, [r7, #4]
 800cbd6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cbd8:	2b00      	cmp	r3, #0
 800cbda:	d00d      	beq.n	800cbf8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800cbdc:	687b      	ldr	r3, [r7, #4]
 800cbde:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800cbe0:	687b      	ldr	r3, [r7, #4]
 800cbe2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cbe4:	681b      	ldr	r3, [r3, #0]
 800cbe6:	330c      	adds	r3, #12
 800cbe8:	681b      	ldr	r3, [r3, #0]
 800cbea:	4610      	mov	r0, r2
 800cbec:	4798      	blx	r3
 800cbee:	4603      	mov	r3, r0
 800cbf0:	2b00      	cmp	r3, #0
 800cbf2:	d001      	beq.n	800cbf8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800cbf4:	2301      	movs	r3, #1
 800cbf6:	e000      	b.n	800cbfa <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2e>
 800cbf8:	2300      	movs	r3, #0
 800cbfa:	2b00      	cmp	r3, #0
 800cbfc:	d009      	beq.n	800cc12 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x46>
        {
            action->execute(*this);
 800cbfe:	687b      	ldr	r3, [r7, #4]
 800cc00:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800cc02:	687b      	ldr	r3, [r7, #4]
 800cc04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cc06:	681b      	ldr	r3, [r3, #0]
 800cc08:	3308      	adds	r3, #8
 800cc0a:	681b      	ldr	r3, [r3, #0]
 800cc0c:	6879      	ldr	r1, [r7, #4]
 800cc0e:	4610      	mov	r0, r2
 800cc10:	4798      	blx	r3
        }
    }
 800cc12:	bf00      	nop
 800cc14:	3708      	adds	r7, #8
 800cc16:	46bd      	mov	sp, r7
 800cc18:	bd80      	pop	{r7, pc}

0800cc1a <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>:
    uint8_t alpha; ///< The current alpha value. 255 denotes solid, 0 denotes completely invisible.

    GenericCallback<const AbstractButtonContainer&>* action; ///< The action to be executed

    /** Handles what should happen when the pressed state is updated. */
    virtual void handlePressedUpdated()
 800cc1a:	b480      	push	{r7}
 800cc1c:	b083      	sub	sp, #12
 800cc1e:	af00      	add	r7, sp, #0
 800cc20:	6078      	str	r0, [r7, #4]
    {
    }
 800cc22:	bf00      	nop
 800cc24:	370c      	adds	r7, #12
 800cc26:	46bd      	mov	sp, r7
 800cc28:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc2c:	4770      	bx	lr

0800cc2e <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>:

    /** Handles what should happen when the alpha is updated. */
    virtual void handleAlphaUpdated()
 800cc2e:	b480      	push	{r7}
 800cc30:	b083      	sub	sp, #12
 800cc32:	af00      	add	r7, sp, #0
 800cc34:	6078      	str	r0, [r7, #4]
    {
    }
 800cc36:	bf00      	nop
 800cc38:	370c      	adds	r7, #12
 800cc3a:	46bd      	mov	sp, r7
 800cc3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc40:	4770      	bx	lr
	...

0800cc44 <_ZN8touchgfx5ImageD1Ev>:
class Image : public Widget
 800cc44:	b580      	push	{r7, lr}
 800cc46:	b082      	sub	sp, #8
 800cc48:	af00      	add	r7, sp, #0
 800cc4a:	6078      	str	r0, [r7, #4]
 800cc4c:	4a05      	ldr	r2, [pc, #20]	; (800cc64 <_ZN8touchgfx5ImageD1Ev+0x20>)
 800cc4e:	687b      	ldr	r3, [r7, #4]
 800cc50:	601a      	str	r2, [r3, #0]
 800cc52:	687b      	ldr	r3, [r7, #4]
 800cc54:	4618      	mov	r0, r3
 800cc56:	f7ff fe9f 	bl	800c998 <_ZN8touchgfx6WidgetD1Ev>
 800cc5a:	687b      	ldr	r3, [r7, #4]
 800cc5c:	4618      	mov	r0, r3
 800cc5e:	3708      	adds	r7, #8
 800cc60:	46bd      	mov	sp, r7
 800cc62:	bd80      	pop	{r7, pc}
 800cc64:	0802cc94 	.word	0x0802cc94

0800cc68 <_ZN8touchgfx5ImageD0Ev>:
 800cc68:	b580      	push	{r7, lr}
 800cc6a:	b082      	sub	sp, #8
 800cc6c:	af00      	add	r7, sp, #0
 800cc6e:	6078      	str	r0, [r7, #4]
 800cc70:	6878      	ldr	r0, [r7, #4]
 800cc72:	f7ff ffe7 	bl	800cc44 <_ZN8touchgfx5ImageD1Ev>
 800cc76:	212c      	movs	r1, #44	; 0x2c
 800cc78:	6878      	ldr	r0, [r7, #4]
 800cc7a:	f01b fd2a 	bl	80286d2 <_ZdlPvj>
 800cc7e:	687b      	ldr	r3, [r7, #4]
 800cc80:	4618      	mov	r0, r3
 800cc82:	3708      	adds	r7, #8
 800cc84:	46bd      	mov	sp, r7
 800cc86:	bd80      	pop	{r7, pc}

0800cc88 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800cc88:	b580      	push	{r7, lr}
 800cc8a:	b082      	sub	sp, #8
 800cc8c:	af00      	add	r7, sp, #0
 800cc8e:	6078      	str	r0, [r7, #4]
 800cc90:	4a05      	ldr	r2, [pc, #20]	; (800cca8 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800cc92:	687b      	ldr	r3, [r7, #4]
 800cc94:	601a      	str	r2, [r3, #0]
 800cc96:	687b      	ldr	r3, [r7, #4]
 800cc98:	4618      	mov	r0, r3
 800cc9a:	f7ff fe7d 	bl	800c998 <_ZN8touchgfx6WidgetD1Ev>
 800cc9e:	687b      	ldr	r3, [r7, #4]
 800cca0:	4618      	mov	r0, r3
 800cca2:	3708      	adds	r7, #8
 800cca4:	46bd      	mov	sp, r7
 800cca6:	bd80      	pop	{r7, pc}
 800cca8:	0802cb34 	.word	0x0802cb34

0800ccac <_ZN8touchgfx3BoxD0Ev>:
 800ccac:	b580      	push	{r7, lr}
 800ccae:	b082      	sub	sp, #8
 800ccb0:	af00      	add	r7, sp, #0
 800ccb2:	6078      	str	r0, [r7, #4]
 800ccb4:	6878      	ldr	r0, [r7, #4]
 800ccb6:	f7ff ffe7 	bl	800cc88 <_ZN8touchgfx3BoxD1Ev>
 800ccba:	212c      	movs	r1, #44	; 0x2c
 800ccbc:	6878      	ldr	r0, [r7, #4]
 800ccbe:	f01b fd08 	bl	80286d2 <_ZdlPvj>
 800ccc2:	687b      	ldr	r3, [r7, #4]
 800ccc4:	4618      	mov	r0, r3
 800ccc6:	3708      	adds	r7, #8
 800ccc8:	46bd      	mov	sp, r7
 800ccca:	bd80      	pop	{r7, pc}

0800cccc <_ZN8touchgfx13BoxWithBorderC1Ev>:
 * BoxWithBorder will function just like a Box.
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
 800cccc:	b580      	push	{r7, lr}
 800ccce:	b082      	sub	sp, #8
 800ccd0:	af00      	add	r7, sp, #0
 800ccd2:	6078      	str	r0, [r7, #4]
        : Box(), borderColor(0), borderSize(0)
 800ccd4:	687b      	ldr	r3, [r7, #4]
 800ccd6:	4618      	mov	r0, r3
 800ccd8:	f7ff fe80 	bl	800c9dc <_ZN8touchgfx3BoxC1Ev>
 800ccdc:	4a08      	ldr	r2, [pc, #32]	; (800cd00 <_ZN8touchgfx13BoxWithBorderC1Ev+0x34>)
 800ccde:	687b      	ldr	r3, [r7, #4]
 800cce0:	601a      	str	r2, [r3, #0]
 800cce2:	687b      	ldr	r3, [r7, #4]
 800cce4:	332c      	adds	r3, #44	; 0x2c
 800cce6:	2100      	movs	r1, #0
 800cce8:	4618      	mov	r0, r3
 800ccea:	f7ff fb4f 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800ccee:	687b      	ldr	r3, [r7, #4]
 800ccf0:	2200      	movs	r2, #0
 800ccf2:	861a      	strh	r2, [r3, #48]	; 0x30
    {
    }
 800ccf4:	687b      	ldr	r3, [r7, #4]
 800ccf6:	4618      	mov	r0, r3
 800ccf8:	3708      	adds	r7, #8
 800ccfa:	46bd      	mov	sp, r7
 800ccfc:	bd80      	pop	{r7, pc}
 800ccfe:	bf00      	nop
 800cd00:	0802cc2c 	.word	0x0802cc2c

0800cd04 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>:
     *
     * @param  colorBorder The color of the border.
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
 800cd04:	b480      	push	{r7}
 800cd06:	b083      	sub	sp, #12
 800cd08:	af00      	add	r7, sp, #0
 800cd0a:	6078      	str	r0, [r7, #4]
 800cd0c:	6039      	str	r1, [r7, #0]
    {
        borderColor = colorBorder;
 800cd0e:	687b      	ldr	r3, [r7, #4]
 800cd10:	683a      	ldr	r2, [r7, #0]
 800cd12:	62da      	str	r2, [r3, #44]	; 0x2c
    }
 800cd14:	bf00      	nop
 800cd16:	370c      	adds	r7, #12
 800cd18:	46bd      	mov	sp, r7
 800cd1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd1e:	4770      	bx	lr

0800cd20 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>:
     *
     * @param  size The width of the border.
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
 800cd20:	b480      	push	{r7}
 800cd22:	b083      	sub	sp, #12
 800cd24:	af00      	add	r7, sp, #0
 800cd26:	6078      	str	r0, [r7, #4]
 800cd28:	460b      	mov	r3, r1
 800cd2a:	807b      	strh	r3, [r7, #2]
    {
        borderSize = size;
 800cd2c:	687b      	ldr	r3, [r7, #4]
 800cd2e:	887a      	ldrh	r2, [r7, #2]
 800cd30:	861a      	strh	r2, [r3, #48]	; 0x30
    }
 800cd32:	bf00      	nop
 800cd34:	370c      	adds	r7, #12
 800cd36:	46bd      	mov	sp, r7
 800cd38:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd3c:	4770      	bx	lr

0800cd3e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800cd3e:	b580      	push	{r7, lr}
 800cd40:	b084      	sub	sp, #16
 800cd42:	af00      	add	r7, sp, #0
 800cd44:	6078      	str	r0, [r7, #4]
 800cd46:	6039      	str	r1, [r7, #0]
    {
        bool wasPressed = getPressed();
 800cd48:	687b      	ldr	r3, [r7, #4]
 800cd4a:	4618      	mov	r0, r3
 800cd4c:	f7ff ff16 	bl	800cb7c <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>
 800cd50:	4603      	mov	r3, r0
 800cd52:	73fb      	strb	r3, [r7, #15]
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 800cd54:	6838      	ldr	r0, [r7, #0]
 800cd56:	f7ff fb7b 	bl	800c450 <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800cd5a:	4603      	mov	r3, r0
 800cd5c:	2b00      	cmp	r3, #0
 800cd5e:	bf0c      	ite	eq
 800cd60:	2301      	moveq	r3, #1
 800cd62:	2300      	movne	r3, #0
 800cd64:	73bb      	strb	r3, [r7, #14]
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 800cd66:	7bbb      	ldrb	r3, [r7, #14]
 800cd68:	2b00      	cmp	r3, #0
 800cd6a:	d005      	beq.n	800cd78 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3a>
 800cd6c:	7bfb      	ldrb	r3, [r7, #15]
 800cd6e:	f083 0301 	eor.w	r3, r3, #1
 800cd72:	b2db      	uxtb	r3, r3
 800cd74:	2b00      	cmp	r3, #0
 800cd76:	d108      	bne.n	800cd8a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x4c>
 800cd78:	7bbb      	ldrb	r3, [r7, #14]
 800cd7a:	f083 0301 	eor.w	r3, r3, #1
 800cd7e:	b2db      	uxtb	r3, r3
 800cd80:	2b00      	cmp	r3, #0
 800cd82:	d00f      	beq.n	800cda4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
 800cd84:	7bfb      	ldrb	r3, [r7, #15]
 800cd86:	2b00      	cmp	r3, #0
 800cd88:	d00c      	beq.n	800cda4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
        {
            setPressed(newPressedValue);
 800cd8a:	687b      	ldr	r3, [r7, #4]
 800cd8c:	7bba      	ldrb	r2, [r7, #14]
 800cd8e:	4611      	mov	r1, r2
 800cd90:	4618      	mov	r0, r3
 800cd92:	f7ff fedf 	bl	800cb54 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>
            invalidate();
 800cd96:	687a      	ldr	r2, [r7, #4]
 800cd98:	687b      	ldr	r3, [r7, #4]
 800cd9a:	681b      	ldr	r3, [r3, #0]
 800cd9c:	3314      	adds	r3, #20
 800cd9e:	681b      	ldr	r3, [r3, #0]
 800cda0:	4610      	mov	r0, r2
 800cda2:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 800cda4:	7bfb      	ldrb	r3, [r7, #15]
 800cda6:	2b00      	cmp	r3, #0
 800cda8:	d007      	beq.n	800cdba <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800cdaa:	6838      	ldr	r0, [r7, #0]
 800cdac:	f7ff fb50 	bl	800c450 <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800cdb0:	4603      	mov	r3, r0
 800cdb2:	2b01      	cmp	r3, #1
 800cdb4:	d101      	bne.n	800cdba <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800cdb6:	2301      	movs	r3, #1
 800cdb8:	e000      	b.n	800cdbc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7e>
 800cdba:	2300      	movs	r3, #0
 800cdbc:	2b00      	cmp	r3, #0
 800cdbe:	d006      	beq.n	800cdce <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x90>
        {
            executeAction();
 800cdc0:	687a      	ldr	r2, [r7, #4]
 800cdc2:	687b      	ldr	r3, [r7, #4]
 800cdc4:	681b      	ldr	r3, [r3, #0]
 800cdc6:	3388      	adds	r3, #136	; 0x88
 800cdc8:	681b      	ldr	r3, [r3, #0]
 800cdca:	4610      	mov	r0, r2
 800cdcc:	4798      	blx	r3
        }
    }
 800cdce:	bf00      	nop
 800cdd0:	3710      	adds	r7, #16
 800cdd2:	46bd      	mov	sp, r7
 800cdd4:	bd80      	pop	{r7, pc}
	...

0800cdd8 <_ZN8touchgfx23AbstractButtonContainerD1Ev>:
class AbstractButtonContainer : public Container
 800cdd8:	b580      	push	{r7, lr}
 800cdda:	b082      	sub	sp, #8
 800cddc:	af00      	add	r7, sp, #0
 800cdde:	6078      	str	r0, [r7, #4]
 800cde0:	4a05      	ldr	r2, [pc, #20]	; (800cdf8 <_ZN8touchgfx23AbstractButtonContainerD1Ev+0x20>)
 800cde2:	687b      	ldr	r3, [r7, #4]
 800cde4:	601a      	str	r2, [r3, #0]
 800cde6:	687b      	ldr	r3, [r7, #4]
 800cde8:	4618      	mov	r0, r3
 800cdea:	f7ff fe6f 	bl	800cacc <_ZN8touchgfx9ContainerD1Ev>
 800cdee:	687b      	ldr	r3, [r7, #4]
 800cdf0:	4618      	mov	r0, r3
 800cdf2:	3708      	adds	r7, #8
 800cdf4:	46bd      	mov	sp, r7
 800cdf6:	bd80      	pop	{r7, pc}
 800cdf8:	0802bd88 	.word	0x0802bd88

0800cdfc <_ZN8touchgfx23AbstractButtonContainerD0Ev>:
 800cdfc:	b580      	push	{r7, lr}
 800cdfe:	b082      	sub	sp, #8
 800ce00:	af00      	add	r7, sp, #0
 800ce02:	6078      	str	r0, [r7, #4]
 800ce04:	6878      	ldr	r0, [r7, #4]
 800ce06:	f7ff ffe7 	bl	800cdd8 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800ce0a:	2134      	movs	r1, #52	; 0x34
 800ce0c:	6878      	ldr	r0, [r7, #4]
 800ce0e:	f01b fc60 	bl	80286d2 <_ZdlPvj>
 800ce12:	687b      	ldr	r3, [r7, #4]
 800ce14:	4618      	mov	r0, r3
 800ce16:	3708      	adds	r7, #8
 800ce18:	46bd      	mov	sp, r7
 800ce1a:	bd80      	pop	{r7, pc}

0800ce1c <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 800ce1c:	b480      	push	{r7}
 800ce1e:	b083      	sub	sp, #12
 800ce20:	af00      	add	r7, sp, #0
 800ce22:	6078      	str	r0, [r7, #4]
 800ce24:	460b      	mov	r3, r1
 800ce26:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 800ce28:	4a06      	ldr	r2, [pc, #24]	; (800ce44 <_ZN8touchgfx9TypedTextC1Et+0x28>)
 800ce2a:	687b      	ldr	r3, [r7, #4]
 800ce2c:	601a      	str	r2, [r3, #0]
 800ce2e:	687b      	ldr	r3, [r7, #4]
 800ce30:	887a      	ldrh	r2, [r7, #2]
 800ce32:	809a      	strh	r2, [r3, #4]
    }
 800ce34:	687b      	ldr	r3, [r7, #4]
 800ce36:	4618      	mov	r0, r3
 800ce38:	370c      	adds	r7, #12
 800ce3a:	46bd      	mov	sp, r7
 800ce3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce40:	4770      	bx	lr
 800ce42:	bf00      	nop
 800ce44:	0802b68c 	.word	0x0802b68c

0800ce48 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 800ce48:	b580      	push	{r7, lr}
 800ce4a:	b082      	sub	sp, #8
 800ce4c:	af00      	add	r7, sp, #0
 800ce4e:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800ce50:	687b      	ldr	r3, [r7, #4]
 800ce52:	4618      	mov	r0, r3
 800ce54:	2326      	movs	r3, #38	; 0x26
 800ce56:	461a      	mov	r2, r3
 800ce58:	2100      	movs	r1, #0
 800ce5a:	f01b fee3 	bl	8028c24 <memset>
 800ce5e:	687b      	ldr	r3, [r7, #4]
 800ce60:	4618      	mov	r0, r3
 800ce62:	f7ff fd87 	bl	800c974 <_ZN8touchgfx6WidgetC1Ev>
 800ce66:	4a16      	ldr	r2, [pc, #88]	; (800cec0 <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 800ce68:	687b      	ldr	r3, [r7, #4]
 800ce6a:	601a      	str	r2, [r3, #0]
 800ce6c:	687b      	ldr	r3, [r7, #4]
 800ce6e:	3328      	adds	r3, #40	; 0x28
 800ce70:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ce74:	4618      	mov	r0, r3
 800ce76:	f7ff ffd1 	bl	800ce1c <_ZN8touchgfx9TypedTextC1Et>
 800ce7a:	687b      	ldr	r3, [r7, #4]
 800ce7c:	3330      	adds	r3, #48	; 0x30
 800ce7e:	2100      	movs	r1, #0
 800ce80:	4618      	mov	r0, r3
 800ce82:	f7ff fa83 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800ce86:	687b      	ldr	r3, [r7, #4]
 800ce88:	2200      	movs	r2, #0
 800ce8a:	869a      	strh	r2, [r3, #52]	; 0x34
 800ce8c:	687b      	ldr	r3, [r7, #4]
 800ce8e:	22ff      	movs	r2, #255	; 0xff
 800ce90:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 800ce94:	687b      	ldr	r3, [r7, #4]
 800ce96:	2200      	movs	r2, #0
 800ce98:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 800ce9c:	687b      	ldr	r3, [r7, #4]
 800ce9e:	2200      	movs	r2, #0
 800cea0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800cea4:	687b      	ldr	r3, [r7, #4]
 800cea6:	2200      	movs	r2, #0
 800cea8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800ceac:	687b      	ldr	r3, [r7, #4]
 800ceae:	333c      	adds	r3, #60	; 0x3c
 800ceb0:	4618      	mov	r0, r3
 800ceb2:	f000 f8f0 	bl	800d096 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 800ceb6:	687b      	ldr	r3, [r7, #4]
 800ceb8:	4618      	mov	r0, r3
 800ceba:	3708      	adds	r7, #8
 800cebc:	46bd      	mov	sp, r7
 800cebe:	bd80      	pop	{r7, pc}
 800cec0:	0802caa4 	.word	0x0802caa4

0800cec4 <_ZN8touchgfx8TextArea8setWidthEs>:

    virtual void setWidth(int16_t width)
 800cec4:	b590      	push	{r4, r7, lr}
 800cec6:	b087      	sub	sp, #28
 800cec8:	af00      	add	r7, sp, #0
 800ceca:	6178      	str	r0, [r7, #20]
 800cecc:	460b      	mov	r3, r1
 800cece:	827b      	strh	r3, [r7, #18]
    {
        Widget::setWidth(width);
 800ced0:	697b      	ldr	r3, [r7, #20]
 800ced2:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800ced6:	4611      	mov	r1, r2
 800ced8:	4618      	mov	r0, r3
 800ceda:	f7ff fbaa 	bl	800c632 <_ZN8touchgfx8Drawable8setWidthEs>
        boundingArea = calculateBoundingArea();
 800cede:	697b      	ldr	r3, [r7, #20]
 800cee0:	681b      	ldr	r3, [r3, #0]
 800cee2:	3384      	adds	r3, #132	; 0x84
 800cee4:	681b      	ldr	r3, [r3, #0]
 800cee6:	697c      	ldr	r4, [r7, #20]
 800cee8:	463a      	mov	r2, r7
 800ceea:	6979      	ldr	r1, [r7, #20]
 800ceec:	4610      	mov	r0, r2
 800ceee:	4798      	blx	r3
 800cef0:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800cef4:	463a      	mov	r2, r7
 800cef6:	ca07      	ldmia	r2, {r0, r1, r2}
 800cef8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800cefc:	bf00      	nop
 800cefe:	371c      	adds	r7, #28
 800cf00:	46bd      	mov	sp, r7
 800cf02:	bd90      	pop	{r4, r7, pc}

0800cf04 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800cf04:	b590      	push	{r4, r7, lr}
 800cf06:	b087      	sub	sp, #28
 800cf08:	af00      	add	r7, sp, #0
 800cf0a:	6178      	str	r0, [r7, #20]
 800cf0c:	460b      	mov	r3, r1
 800cf0e:	827b      	strh	r3, [r7, #18]
    {
        Widget::setHeight(height);
 800cf10:	697b      	ldr	r3, [r7, #20]
 800cf12:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800cf16:	4611      	mov	r1, r2
 800cf18:	4618      	mov	r0, r3
 800cf1a:	f7ff fb99 	bl	800c650 <_ZN8touchgfx8Drawable9setHeightEs>
        boundingArea = calculateBoundingArea();
 800cf1e:	697b      	ldr	r3, [r7, #20]
 800cf20:	681b      	ldr	r3, [r3, #0]
 800cf22:	3384      	adds	r3, #132	; 0x84
 800cf24:	681b      	ldr	r3, [r3, #0]
 800cf26:	697c      	ldr	r4, [r7, #20]
 800cf28:	463a      	mov	r2, r7
 800cf2a:	6979      	ldr	r1, [r7, #20]
 800cf2c:	4610      	mov	r0, r2
 800cf2e:	4798      	blx	r3
 800cf30:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800cf34:	463a      	mov	r2, r7
 800cf36:	ca07      	ldmia	r2, {r0, r1, r2}
 800cf38:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800cf3c:	bf00      	nop
 800cf3e:	371c      	adds	r7, #28
 800cf40:	46bd      	mov	sp, r7
 800cf42:	bd90      	pop	{r4, r7, pc}

0800cf44 <_ZNK8touchgfx8TextArea12getSolidRectEv>:

    virtual Rect getSolidRect() const
 800cf44:	b580      	push	{r7, lr}
 800cf46:	b082      	sub	sp, #8
 800cf48:	af00      	add	r7, sp, #0
 800cf4a:	6078      	str	r0, [r7, #4]
 800cf4c:	6039      	str	r1, [r7, #0]
    {
        return Rect();
 800cf4e:	6878      	ldr	r0, [r7, #4]
 800cf50:	f7ff fa37 	bl	800c3c2 <_ZN8touchgfx4RectC1Ev>
    }
 800cf54:	6878      	ldr	r0, [r7, #4]
 800cf56:	3708      	adds	r7, #8
 800cf58:	46bd      	mov	sp, r7
 800cf5a:	bd80      	pop	{r7, pc}

0800cf5c <_ZN8touchgfx8TextArea8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
 800cf5c:	b480      	push	{r7}
 800cf5e:	b083      	sub	sp, #12
 800cf60:	af00      	add	r7, sp, #0
 800cf62:	6078      	str	r0, [r7, #4]
 800cf64:	460b      	mov	r3, r1
 800cf66:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800cf68:	687b      	ldr	r3, [r7, #4]
 800cf6a:	78fa      	ldrb	r2, [r7, #3]
 800cf6c:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
    }
 800cf70:	bf00      	nop
 800cf72:	370c      	adds	r7, #12
 800cf74:	46bd      	mov	sp, r7
 800cf76:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf7a:	4770      	bx	lr

0800cf7c <_ZN8touchgfx8TextArea12setBaselineYEs>:
     *
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setBaselineY(int16_t baselineY)
 800cf7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf7e:	b085      	sub	sp, #20
 800cf80:	af00      	add	r7, sp, #0
 800cf82:	6078      	str	r0, [r7, #4]
 800cf84:	460b      	mov	r3, r1
 800cf86:	807b      	strh	r3, [r7, #2]
    {
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800cf88:	687e      	ldr	r6, [r7, #4]
 800cf8a:	687b      	ldr	r3, [r7, #4]
 800cf8c:	681b      	ldr	r3, [r3, #0]
 800cf8e:	3334      	adds	r3, #52	; 0x34
 800cf90:	681c      	ldr	r4, [r3, #0]
 800cf92:	887d      	ldrh	r5, [r7, #2]
 800cf94:	6878      	ldr	r0, [r7, #4]
 800cf96:	f000 f867 	bl	800d068 <_ZNK8touchgfx8TextArea12getTypedTextEv>
 800cf9a:	4603      	mov	r3, r0
 800cf9c:	60fb      	str	r3, [r7, #12]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800cf9e:	4b1c      	ldr	r3, [pc, #112]	; (800d010 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800cfa0:	681b      	ldr	r3, [r3, #0]
 800cfa2:	2b00      	cmp	r3, #0
 800cfa4:	d105      	bne.n	800cfb2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x36>
 800cfa6:	4b1b      	ldr	r3, [pc, #108]	; (800d014 <_ZN8touchgfx8TextArea12setBaselineYEs+0x98>)
 800cfa8:	4a1b      	ldr	r2, [pc, #108]	; (800d018 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800cfaa:	216c      	movs	r1, #108	; 0x6c
 800cfac:	481b      	ldr	r0, [pc, #108]	; (800d01c <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800cfae:	f01b fbbf 	bl	8028730 <__assert_func>
 800cfb2:	68fb      	ldr	r3, [r7, #12]
 800cfb4:	60bb      	str	r3, [r7, #8]
        return typedTextId < numberOfTypedTexts;
 800cfb6:	68bb      	ldr	r3, [r7, #8]
 800cfb8:	889a      	ldrh	r2, [r3, #4]
 800cfba:	4b19      	ldr	r3, [pc, #100]	; (800d020 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa4>)
 800cfbc:	881b      	ldrh	r3, [r3, #0]
 800cfbe:	429a      	cmp	r2, r3
 800cfc0:	bf34      	ite	cc
 800cfc2:	2301      	movcc	r3, #1
 800cfc4:	2300      	movcs	r3, #0
 800cfc6:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800cfc8:	2b00      	cmp	r3, #0
 800cfca:	d105      	bne.n	800cfd8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>
 800cfcc:	4b15      	ldr	r3, [pc, #84]	; (800d024 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa8>)
 800cfce:	4a12      	ldr	r2, [pc, #72]	; (800d018 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800cfd0:	216d      	movs	r1, #109	; 0x6d
 800cfd2:	4812      	ldr	r0, [pc, #72]	; (800d01c <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800cfd4:	f01b fbac 	bl	8028730 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 800cfd8:	4b13      	ldr	r3, [pc, #76]	; (800d028 <_ZN8touchgfx8TextArea12setBaselineYEs+0xac>)
 800cfda:	681a      	ldr	r2, [r3, #0]
 800cfdc:	4b0c      	ldr	r3, [pc, #48]	; (800d010 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800cfde:	6819      	ldr	r1, [r3, #0]
 800cfe0:	68fb      	ldr	r3, [r7, #12]
 800cfe2:	889b      	ldrh	r3, [r3, #4]
 800cfe4:	005b      	lsls	r3, r3, #1
 800cfe6:	440b      	add	r3, r1
 800cfe8:	781b      	ldrb	r3, [r3, #0]
 800cfea:	009b      	lsls	r3, r3, #2
 800cfec:	4413      	add	r3, r2
 800cfee:	681b      	ldr	r3, [r3, #0]
 800cff0:	681a      	ldr	r2, [r3, #0]
 800cff2:	3230      	adds	r2, #48	; 0x30
 800cff4:	6812      	ldr	r2, [r2, #0]
 800cff6:	4618      	mov	r0, r3
 800cff8:	4790      	blx	r2
 800cffa:	4603      	mov	r3, r0
 800cffc:	1aeb      	subs	r3, r5, r3
 800cffe:	b29b      	uxth	r3, r3
 800d000:	b21b      	sxth	r3, r3
 800d002:	4619      	mov	r1, r3
 800d004:	4630      	mov	r0, r6
 800d006:	47a0      	blx	r4
    }
 800d008:	bf00      	nop
 800d00a:	3714      	adds	r7, #20
 800d00c:	46bd      	mov	sp, r7
 800d00e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d010:	2000e218 	.word	0x2000e218
 800d014:	0802a370 	.word	0x0802a370
 800d018:	0802a3b4 	.word	0x0802a3b4
 800d01c:	0802a3f0 	.word	0x0802a3f0
 800d020:	2000e21c 	.word	0x2000e21c
 800d024:	0802a434 	.word	0x0802a434
 800d028:	2000e220 	.word	0x2000e220

0800d02c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800d02c:	b580      	push	{r7, lr}
 800d02e:	b082      	sub	sp, #8
 800d030:	af00      	add	r7, sp, #0
 800d032:	6078      	str	r0, [r7, #4]
 800d034:	460b      	mov	r3, r1
 800d036:	807b      	strh	r3, [r7, #2]
 800d038:	4613      	mov	r3, r2
 800d03a:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800d03c:	687a      	ldr	r2, [r7, #4]
 800d03e:	687b      	ldr	r3, [r7, #4]
 800d040:	681b      	ldr	r3, [r3, #0]
 800d042:	3330      	adds	r3, #48	; 0x30
 800d044:	681b      	ldr	r3, [r3, #0]
 800d046:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 800d04a:	4610      	mov	r0, r2
 800d04c:	4798      	blx	r3
        setBaselineY(baselineY);
 800d04e:	687b      	ldr	r3, [r7, #4]
 800d050:	681b      	ldr	r3, [r3, #0]
 800d052:	3364      	adds	r3, #100	; 0x64
 800d054:	681b      	ldr	r3, [r3, #0]
 800d056:	f9b7 2000 	ldrsh.w	r2, [r7]
 800d05a:	4611      	mov	r1, r2
 800d05c:	6878      	ldr	r0, [r7, #4]
 800d05e:	4798      	blx	r3
    }
 800d060:	bf00      	nop
 800d062:	3708      	adds	r7, #8
 800d064:	46bd      	mov	sp, r7
 800d066:	bd80      	pop	{r7, pc}

0800d068 <_ZNK8touchgfx8TextArea12getTypedTextEv>:
    /**
     * Gets the TypedText of the text area.
     *
     * @return The currently used TypedText.
     */
    const TypedText& getTypedText() const
 800d068:	b480      	push	{r7}
 800d06a:	b083      	sub	sp, #12
 800d06c:	af00      	add	r7, sp, #0
 800d06e:	6078      	str	r0, [r7, #4]
    {
        return typedText;
 800d070:	687b      	ldr	r3, [r7, #4]
 800d072:	3328      	adds	r3, #40	; 0x28
    }
 800d074:	4618      	mov	r0, r3
 800d076:	370c      	adds	r7, #12
 800d078:	46bd      	mov	sp, r7
 800d07a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d07e:	4770      	bx	lr

0800d080 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     *
     * @return A pointer to the second wildcard, if this text area has two wildcards, otherwise 0.
     *
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
 800d080:	b480      	push	{r7}
 800d082:	b083      	sub	sp, #12
 800d084:	af00      	add	r7, sp, #0
 800d086:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800d088:	2300      	movs	r3, #0
    }
 800d08a:	4618      	mov	r0, r3
 800d08c:	370c      	adds	r7, #12
 800d08e:	46bd      	mov	sp, r7
 800d090:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d094:	4770      	bx	lr

0800d096 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 800d096:	b580      	push	{r7, lr}
 800d098:	b084      	sub	sp, #16
 800d09a:	af02      	add	r7, sp, #8
 800d09c:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800d09e:	6878      	ldr	r0, [r7, #4]
 800d0a0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800d0a4:	9300      	str	r3, [sp, #0]
 800d0a6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800d0aa:	2200      	movs	r2, #0
 800d0ac:	2100      	movs	r1, #0
 800d0ae:	f7ff f99f 	bl	800c3f0 <_ZN8touchgfx4RectC1Essss>
              text(0)
 800d0b2:	687b      	ldr	r3, [r7, #4]
 800d0b4:	2200      	movs	r2, #0
 800d0b6:	609a      	str	r2, [r3, #8]
        {
        }
 800d0b8:	687b      	ldr	r3, [r7, #4]
 800d0ba:	4618      	mov	r0, r3
 800d0bc:	3708      	adds	r7, #8
 800d0be:	46bd      	mov	sp, r7
 800d0c0:	bd80      	pop	{r7, pc}

0800d0c2 <_ZN8touchgfx18TouchButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800d0c2:	b580      	push	{r7, lr}
 800d0c4:	b084      	sub	sp, #16
 800d0c6:	af00      	add	r7, sp, #0
 800d0c8:	6078      	str	r0, [r7, #4]
 800d0ca:	6039      	str	r1, [r7, #0]
    {
        bool wasPressed = getPressed();
 800d0cc:	687b      	ldr	r3, [r7, #4]
 800d0ce:	4618      	mov	r0, r3
 800d0d0:	f7ff fd54 	bl	800cb7c <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>
 800d0d4:	4603      	mov	r3, r0
 800d0d6:	73fb      	strb	r3, [r7, #15]
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 800d0d8:	6838      	ldr	r0, [r7, #0]
 800d0da:	f7ff f9b9 	bl	800c450 <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800d0de:	4603      	mov	r3, r0
 800d0e0:	2b00      	cmp	r3, #0
 800d0e2:	bf0c      	ite	eq
 800d0e4:	2301      	moveq	r3, #1
 800d0e6:	2300      	movne	r3, #0
 800d0e8:	73bb      	strb	r3, [r7, #14]
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 800d0ea:	7bbb      	ldrb	r3, [r7, #14]
 800d0ec:	2b00      	cmp	r3, #0
 800d0ee:	d005      	beq.n	800d0fc <_ZN8touchgfx18TouchButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3a>
 800d0f0:	7bfb      	ldrb	r3, [r7, #15]
 800d0f2:	f083 0301 	eor.w	r3, r3, #1
 800d0f6:	b2db      	uxtb	r3, r3
 800d0f8:	2b00      	cmp	r3, #0
 800d0fa:	d108      	bne.n	800d10e <_ZN8touchgfx18TouchButtonTrigger16handleClickEventERKNS_10ClickEventE+0x4c>
 800d0fc:	7bbb      	ldrb	r3, [r7, #14]
 800d0fe:	f083 0301 	eor.w	r3, r3, #1
 800d102:	b2db      	uxtb	r3, r3
 800d104:	2b00      	cmp	r3, #0
 800d106:	d00f      	beq.n	800d128 <_ZN8touchgfx18TouchButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
 800d108:	7bfb      	ldrb	r3, [r7, #15]
 800d10a:	2b00      	cmp	r3, #0
 800d10c:	d00c      	beq.n	800d128 <_ZN8touchgfx18TouchButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
        {
            setPressed(newPressedValue);
 800d10e:	687b      	ldr	r3, [r7, #4]
 800d110:	7bba      	ldrb	r2, [r7, #14]
 800d112:	4611      	mov	r1, r2
 800d114:	4618      	mov	r0, r3
 800d116:	f7ff fd1d 	bl	800cb54 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>
            invalidate();
 800d11a:	687a      	ldr	r2, [r7, #4]
 800d11c:	687b      	ldr	r3, [r7, #4]
 800d11e:	681b      	ldr	r3, [r3, #0]
 800d120:	3314      	adds	r3, #20
 800d122:	681b      	ldr	r3, [r3, #0]
 800d124:	4610      	mov	r0, r2
 800d126:	4798      	blx	r3
        }
        if (newPressedValue)
 800d128:	7bbb      	ldrb	r3, [r7, #14]
 800d12a:	2b00      	cmp	r3, #0
 800d12c:	d006      	beq.n	800d13c <_ZN8touchgfx18TouchButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7a>
        {
            executeAction();
 800d12e:	687a      	ldr	r2, [r7, #4]
 800d130:	687b      	ldr	r3, [r7, #4]
 800d132:	681b      	ldr	r3, [r3, #0]
 800d134:	3388      	adds	r3, #136	; 0x88
 800d136:	681b      	ldr	r3, [r3, #0]
 800d138:	4610      	mov	r0, r2
 800d13a:	4798      	blx	r3
        }
    }
 800d13c:	bf00      	nop
 800d13e:	3710      	adds	r7, #16
 800d140:	46bd      	mov	sp, r7
 800d142:	bd80      	pop	{r7, pc}

0800d144 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 800d144:	b580      	push	{r7, lr}
 800d146:	b082      	sub	sp, #8
 800d148:	af00      	add	r7, sp, #0
 800d14a:	6078      	str	r0, [r7, #4]
 800d14c:	4a08      	ldr	r2, [pc, #32]	; (800d170 <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 800d14e:	687b      	ldr	r3, [r7, #4]
 800d150:	601a      	str	r2, [r3, #0]
 800d152:	687b      	ldr	r3, [r7, #4]
 800d154:	3328      	adds	r3, #40	; 0x28
 800d156:	4618      	mov	r0, r3
 800d158:	f7fe f9d4 	bl	800b504 <_ZN8touchgfx9TypedTextD1Ev>
 800d15c:	687b      	ldr	r3, [r7, #4]
 800d15e:	4618      	mov	r0, r3
 800d160:	f7ff fc1a 	bl	800c998 <_ZN8touchgfx6WidgetD1Ev>
 800d164:	687b      	ldr	r3, [r7, #4]
 800d166:	4618      	mov	r0, r3
 800d168:	3708      	adds	r7, #8
 800d16a:	46bd      	mov	sp, r7
 800d16c:	bd80      	pop	{r7, pc}
 800d16e:	bf00      	nop
 800d170:	0802caa4 	.word	0x0802caa4

0800d174 <_ZN8touchgfx8TextAreaD0Ev>:
 800d174:	b580      	push	{r7, lr}
 800d176:	b082      	sub	sp, #8
 800d178:	af00      	add	r7, sp, #0
 800d17a:	6078      	str	r0, [r7, #4]
 800d17c:	6878      	ldr	r0, [r7, #4]
 800d17e:	f7ff ffe1 	bl	800d144 <_ZN8touchgfx8TextAreaD1Ev>
 800d182:	2148      	movs	r1, #72	; 0x48
 800d184:	6878      	ldr	r0, [r7, #4]
 800d186:	f01b faa4 	bl	80286d2 <_ZdlPvj>
 800d18a:	687b      	ldr	r3, [r7, #4]
 800d18c:	4618      	mov	r0, r3
 800d18e:	3708      	adds	r7, #8
 800d190:	46bd      	mov	sp, r7
 800d192:	bd80      	pop	{r7, pc}

0800d194 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>:
 *
 */
class TextAreaWithWildcardBase : public TextArea
{
public:
    TextAreaWithWildcardBase()
 800d194:	b580      	push	{r7, lr}
 800d196:	b082      	sub	sp, #8
 800d198:	af00      	add	r7, sp, #0
 800d19a:	6078      	str	r0, [r7, #4]
        : TextArea()
 800d19c:	687b      	ldr	r3, [r7, #4]
 800d19e:	4618      	mov	r0, r3
 800d1a0:	f7ff fe52 	bl	800ce48 <_ZN8touchgfx8TextAreaC1Ev>
 800d1a4:	4a03      	ldr	r2, [pc, #12]	; (800d1b4 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev+0x20>)
 800d1a6:	687b      	ldr	r3, [r7, #4]
 800d1a8:	601a      	str	r2, [r3, #0]
    {
    }
 800d1aa:	687b      	ldr	r3, [r7, #4]
 800d1ac:	4618      	mov	r0, r3
 800d1ae:	3708      	adds	r7, #8
 800d1b0:	46bd      	mov	sp, r7
 800d1b2:	bd80      	pop	{r7, pc}
 800d1b4:	0802cb9c 	.word	0x0802cb9c

0800d1b8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 800d1b8:	b580      	push	{r7, lr}
 800d1ba:	b082      	sub	sp, #8
 800d1bc:	af00      	add	r7, sp, #0
 800d1be:	6078      	str	r0, [r7, #4]
    {
        Widget::invalidateContent();
 800d1c0:	687b      	ldr	r3, [r7, #4]
 800d1c2:	4618      	mov	r0, r3
 800d1c4:	f7ff f9a0 	bl	800c508 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800d1c8:	bf00      	nop
 800d1ca:	3708      	adds	r7, #8
 800d1cc:	46bd      	mov	sp, r7
 800d1ce:	bd80      	pop	{r7, pc}

0800d1d0 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 800d1d0:	b580      	push	{r7, lr}
 800d1d2:	b082      	sub	sp, #8
 800d1d4:	af00      	add	r7, sp, #0
 800d1d6:	6078      	str	r0, [r7, #4]
 800d1d8:	6039      	str	r1, [r7, #0]
    {
        return TextArea::BoundingArea();
 800d1da:	6878      	ldr	r0, [r7, #4]
 800d1dc:	f7ff ff5b 	bl	800d096 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 800d1e0:	6878      	ldr	r0, [r7, #4]
 800d1e2:	3708      	adds	r7, #8
 800d1e4:	46bd      	mov	sp, r7
 800d1e6:	bd80      	pop	{r7, pc}

0800d1e8 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>:
class TextAreaWithWildcardBase : public TextArea
 800d1e8:	b580      	push	{r7, lr}
 800d1ea:	b082      	sub	sp, #8
 800d1ec:	af00      	add	r7, sp, #0
 800d1ee:	6078      	str	r0, [r7, #4]
 800d1f0:	4a05      	ldr	r2, [pc, #20]	; (800d208 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev+0x20>)
 800d1f2:	687b      	ldr	r3, [r7, #4]
 800d1f4:	601a      	str	r2, [r3, #0]
 800d1f6:	687b      	ldr	r3, [r7, #4]
 800d1f8:	4618      	mov	r0, r3
 800d1fa:	f7ff ffa3 	bl	800d144 <_ZN8touchgfx8TextAreaD1Ev>
 800d1fe:	687b      	ldr	r3, [r7, #4]
 800d200:	4618      	mov	r0, r3
 800d202:	3708      	adds	r7, #8
 800d204:	46bd      	mov	sp, r7
 800d206:	bd80      	pop	{r7, pc}
 800d208:	0802cb9c 	.word	0x0802cb9c

0800d20c <_ZN8touchgfx24TextAreaWithWildcardBaseD0Ev>:
 800d20c:	b580      	push	{r7, lr}
 800d20e:	b082      	sub	sp, #8
 800d210:	af00      	add	r7, sp, #0
 800d212:	6078      	str	r0, [r7, #4]
 800d214:	6878      	ldr	r0, [r7, #4]
 800d216:	f7ff ffe7 	bl	800d1e8 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800d21a:	2148      	movs	r1, #72	; 0x48
 800d21c:	6878      	ldr	r0, [r7, #4]
 800d21e:	f01b fa58 	bl	80286d2 <_ZdlPvj>
 800d222:	687b      	ldr	r3, [r7, #4]
 800d224:	4618      	mov	r0, r3
 800d226:	3708      	adds	r7, #8
 800d228:	46bd      	mov	sp, r7
 800d22a:	bd80      	pop	{r7, pc}

0800d22c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
 *       replaced by a wildcard text.
 */
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
{
public:
    TextAreaWithOneWildcard()
 800d22c:	b580      	push	{r7, lr}
 800d22e:	b082      	sub	sp, #8
 800d230:	af00      	add	r7, sp, #0
 800d232:	6078      	str	r0, [r7, #4]
        : TextAreaWithWildcardBase(), wc1(0)
 800d234:	687b      	ldr	r3, [r7, #4]
 800d236:	4618      	mov	r0, r3
 800d238:	f7ff ffac 	bl	800d194 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>
 800d23c:	4a05      	ldr	r2, [pc, #20]	; (800d254 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
 800d23e:	687b      	ldr	r3, [r7, #4]
 800d240:	601a      	str	r2, [r3, #0]
 800d242:	687b      	ldr	r3, [r7, #4]
 800d244:	2200      	movs	r2, #0
 800d246:	649a      	str	r2, [r3, #72]	; 0x48
    {
    }
 800d248:	687b      	ldr	r3, [r7, #4]
 800d24a:	4618      	mov	r0, r3
 800d24c:	3708      	adds	r7, #8
 800d24e:	46bd      	mov	sp, r7
 800d250:	bd80      	pop	{r7, pc}
 800d252:	bf00      	nop
 800d254:	0802bba8 	.word	0x0802bba8

0800d258 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard1(const Unicode::UnicodeChar* value)
 800d258:	b480      	push	{r7}
 800d25a:	b083      	sub	sp, #12
 800d25c:	af00      	add	r7, sp, #0
 800d25e:	6078      	str	r0, [r7, #4]
 800d260:	6039      	str	r1, [r7, #0]
    {
        wc1 = value;
 800d262:	687b      	ldr	r3, [r7, #4]
 800d264:	683a      	ldr	r2, [r7, #0]
 800d266:	649a      	str	r2, [r3, #72]	; 0x48
    }
 800d268:	bf00      	nop
 800d26a:	370c      	adds	r7, #12
 800d26c:	46bd      	mov	sp, r7
 800d26e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d272:	4770      	bx	lr

0800d274 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:

    virtual const Unicode::UnicodeChar* getWildcard1() const
 800d274:	b480      	push	{r7}
 800d276:	b083      	sub	sp, #12
 800d278:	af00      	add	r7, sp, #0
 800d27a:	6078      	str	r0, [r7, #4]
    {
        return wc1;
 800d27c:	687b      	ldr	r3, [r7, #4]
 800d27e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    }
 800d280:	4618      	mov	r0, r3
 800d282:	370c      	adds	r7, #12
 800d284:	46bd      	mov	sp, r7
 800d286:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d28a:	4770      	bx	lr

0800d28c <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
 800d28c:	b580      	push	{r7, lr}
 800d28e:	b082      	sub	sp, #8
 800d290:	af00      	add	r7, sp, #0
 800d292:	6078      	str	r0, [r7, #4]
 800d294:	6039      	str	r1, [r7, #0]
    {
        setWildcard1(value);
 800d296:	6839      	ldr	r1, [r7, #0]
 800d298:	6878      	ldr	r0, [r7, #4]
 800d29a:	f7ff ffdd 	bl	800d258 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>
    }
 800d29e:	bf00      	nop
 800d2a0:	3708      	adds	r7, #8
 800d2a2:	46bd      	mov	sp, r7
 800d2a4:	bd80      	pop	{r7, pc}
	...

0800d2a8 <_ZN8touchgfx15AbstractPainterC1Ev>:
 */
class AbstractPainter
{
public:
    /** Initializes a new instance of the AbstractPainter class. */
    AbstractPainter()
 800d2a8:	b480      	push	{r7}
 800d2aa:	b083      	sub	sp, #12
 800d2ac:	af00      	add	r7, sp, #0
 800d2ae:	6078      	str	r0, [r7, #4]
        : widgetWidth(0)
 800d2b0:	4a06      	ldr	r2, [pc, #24]	; (800d2cc <_ZN8touchgfx15AbstractPainterC1Ev+0x24>)
 800d2b2:	687b      	ldr	r3, [r7, #4]
 800d2b4:	601a      	str	r2, [r3, #0]
 800d2b6:	687b      	ldr	r3, [r7, #4]
 800d2b8:	2200      	movs	r2, #0
 800d2ba:	809a      	strh	r2, [r3, #4]
    {
    }
 800d2bc:	687b      	ldr	r3, [r7, #4]
 800d2be:	4618      	mov	r0, r3
 800d2c0:	370c      	adds	r7, #12
 800d2c2:	46bd      	mov	sp, r7
 800d2c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d2c8:	4770      	bx	lr
 800d2ca:	bf00      	nop
 800d2cc:	0802bb88 	.word	0x0802bb88

0800d2d0 <_ZN8touchgfx15AbstractPainterD1Ev>:

    /** Finalizes an instance of the AbstractPainter class. */
    virtual ~AbstractPainter()
 800d2d0:	b480      	push	{r7}
 800d2d2:	b083      	sub	sp, #12
 800d2d4:	af00      	add	r7, sp, #0
 800d2d6:	6078      	str	r0, [r7, #4]
    {
 800d2d8:	4a04      	ldr	r2, [pc, #16]	; (800d2ec <_ZN8touchgfx15AbstractPainterD1Ev+0x1c>)
 800d2da:	687b      	ldr	r3, [r7, #4]
 800d2dc:	601a      	str	r2, [r3, #0]
    }
 800d2de:	687b      	ldr	r3, [r7, #4]
 800d2e0:	4618      	mov	r0, r3
 800d2e2:	370c      	adds	r7, #12
 800d2e4:	46bd      	mov	sp, r7
 800d2e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d2ea:	4770      	bx	lr
 800d2ec:	0802bb88 	.word	0x0802bb88

0800d2f0 <_ZN8touchgfx15AbstractPainterD0Ev>:
    virtual ~AbstractPainter()
 800d2f0:	b580      	push	{r7, lr}
 800d2f2:	b082      	sub	sp, #8
 800d2f4:	af00      	add	r7, sp, #0
 800d2f6:	6078      	str	r0, [r7, #4]
    }
 800d2f8:	6878      	ldr	r0, [r7, #4]
 800d2fa:	f7ff ffe9 	bl	800d2d0 <_ZN8touchgfx15AbstractPainterD1Ev>
 800d2fe:	2108      	movs	r1, #8
 800d300:	6878      	ldr	r0, [r7, #4]
 800d302:	f01b f9e6 	bl	80286d2 <_ZdlPvj>
 800d306:	687b      	ldr	r3, [r7, #4]
 800d308:	4618      	mov	r0, r3
 800d30a:	3708      	adds	r7, #8
 800d30c:	46bd      	mov	sp, r7
 800d30e:	bd80      	pop	{r7, pc}

0800d310 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * HARDWARE if the painter uses hardware based drawing,
     * SOFTWARE otherwise. Relevant on platforms using DCACHE.
     *
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
 800d310:	b480      	push	{r7}
 800d312:	b083      	sub	sp, #12
 800d314:	af00      	add	r7, sp, #0
 800d316:	6078      	str	r0, [r7, #4]
    {
        return HAL::SOFTWARE;
 800d318:	2300      	movs	r3, #0
    }
 800d31a:	4618      	mov	r0, r3
 800d31c:	370c      	adds	r7, #12
 800d31e:	46bd      	mov	sp, r7
 800d320:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d324:	4770      	bx	lr

0800d326 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
 800d326:	b480      	push	{r7}
 800d328:	b083      	sub	sp, #12
 800d32a:	af00      	add	r7, sp, #0
 800d32c:	6078      	str	r0, [r7, #4]
 800d32e:	6039      	str	r1, [r7, #0]
    {
        widgetWidth = widgetRect.width;
 800d330:	683b      	ldr	r3, [r7, #0]
 800d332:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 800d336:	687b      	ldr	r3, [r7, #4]
 800d338:	809a      	strh	r2, [r3, #4]
        return true;
 800d33a:	2301      	movs	r3, #1
    }
 800d33c:	4618      	mov	r0, r3
 800d33e:	370c      	adds	r7, #12
 800d340:	46bd      	mov	sp, r7
 800d342:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d346:	4770      	bx	lr

0800d348 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * This function is called after all paint operation have finished. This allows the painter to
     * close down dma queues etc. This happens after the last scan line segment has been drawn.
     *
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
 800d348:	b480      	push	{r7}
 800d34a:	b083      	sub	sp, #12
 800d34c:	af00      	add	r7, sp, #0
 800d34e:	6078      	str	r0, [r7, #4]
    {
        return;
 800d350:	bf00      	nop
    }
 800d352:	370c      	adds	r7, #12
 800d354:	46bd      	mov	sp, r7
 800d356:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d35a:	4770      	bx	lr

0800d35c <_ZN8touchgfx20AbstractPainterColorC1ENS_9colortypeE>:
    /**
     * Constructor.
     *
     * @param  color (Optional) The color to use in the painter.
     */
    AbstractPainterColor(colortype color = 0)
 800d35c:	b580      	push	{r7, lr}
 800d35e:	b082      	sub	sp, #8
 800d360:	af00      	add	r7, sp, #0
 800d362:	6078      	str	r0, [r7, #4]
 800d364:	6039      	str	r1, [r7, #0]
    {
 800d366:	4a08      	ldr	r2, [pc, #32]	; (800d388 <_ZN8touchgfx20AbstractPainterColorC1ENS_9colortypeE+0x2c>)
 800d368:	687b      	ldr	r3, [r7, #4]
 800d36a:	601a      	str	r2, [r3, #0]
 800d36c:	687b      	ldr	r3, [r7, #4]
 800d36e:	3304      	adds	r3, #4
 800d370:	4618      	mov	r0, r3
 800d372:	f7fe fffd 	bl	800c370 <_ZN8touchgfx9colortypeC1Ev>
        setColor(color);
 800d376:	6839      	ldr	r1, [r7, #0]
 800d378:	6878      	ldr	r0, [r7, #4]
 800d37a:	f000 f827 	bl	800d3cc <_ZN8touchgfx20AbstractPainterColor8setColorENS_9colortypeE>
    }
 800d37e:	687b      	ldr	r3, [r7, #4]
 800d380:	4618      	mov	r0, r3
 800d382:	3708      	adds	r7, #8
 800d384:	46bd      	mov	sp, r7
 800d386:	bd80      	pop	{r7, pc}
 800d388:	0802bb74 	.word	0x0802bb74

0800d38c <_ZN8touchgfx20AbstractPainterColorD1Ev>:

    /** Destructor */
    virtual ~AbstractPainterColor()
 800d38c:	b480      	push	{r7}
 800d38e:	b083      	sub	sp, #12
 800d390:	af00      	add	r7, sp, #0
 800d392:	6078      	str	r0, [r7, #4]
    {
 800d394:	4a04      	ldr	r2, [pc, #16]	; (800d3a8 <_ZN8touchgfx20AbstractPainterColorD1Ev+0x1c>)
 800d396:	687b      	ldr	r3, [r7, #4]
 800d398:	601a      	str	r2, [r3, #0]
    }
 800d39a:	687b      	ldr	r3, [r7, #4]
 800d39c:	4618      	mov	r0, r3
 800d39e:	370c      	adds	r7, #12
 800d3a0:	46bd      	mov	sp, r7
 800d3a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3a6:	4770      	bx	lr
 800d3a8:	0802bb74 	.word	0x0802bb74

0800d3ac <_ZN8touchgfx20AbstractPainterColorD0Ev>:
    virtual ~AbstractPainterColor()
 800d3ac:	b580      	push	{r7, lr}
 800d3ae:	b082      	sub	sp, #8
 800d3b0:	af00      	add	r7, sp, #0
 800d3b2:	6078      	str	r0, [r7, #4]
    }
 800d3b4:	6878      	ldr	r0, [r7, #4]
 800d3b6:	f7ff ffe9 	bl	800d38c <_ZN8touchgfx20AbstractPainterColorD1Ev>
 800d3ba:	2108      	movs	r1, #8
 800d3bc:	6878      	ldr	r0, [r7, #4]
 800d3be:	f01b f988 	bl	80286d2 <_ZdlPvj>
 800d3c2:	687b      	ldr	r3, [r7, #4]
 800d3c4:	4618      	mov	r0, r3
 800d3c6:	3708      	adds	r7, #8
 800d3c8:	46bd      	mov	sp, r7
 800d3ca:	bd80      	pop	{r7, pc}

0800d3cc <_ZN8touchgfx20AbstractPainterColor8setColorENS_9colortypeE>:
    /**
     * Sets color to use when drawing the CanvasWidget.
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
 800d3cc:	b480      	push	{r7}
 800d3ce:	b083      	sub	sp, #12
 800d3d0:	af00      	add	r7, sp, #0
 800d3d2:	6078      	str	r0, [r7, #4]
 800d3d4:	6039      	str	r1, [r7, #0]
    {
        painterColor = color;
 800d3d6:	687b      	ldr	r3, [r7, #4]
 800d3d8:	683a      	ldr	r2, [r7, #0]
 800d3da:	605a      	str	r2, [r3, #4]
    }
 800d3dc:	bf00      	nop
 800d3de:	370c      	adds	r7, #12
 800d3e0:	46bd      	mov	sp, r7
 800d3e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3e6:	4770      	bx	lr

0800d3e8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 800d3e8:	b580      	push	{r7, lr}
 800d3ea:	b084      	sub	sp, #16
 800d3ec:	af00      	add	r7, sp, #0
 800d3ee:	6078      	str	r0, [r7, #4]
        : AbstractPainter()
 800d3f0:	687b      	ldr	r3, [r7, #4]
 800d3f2:	4618      	mov	r0, r3
 800d3f4:	f7ff ff58 	bl	800d2a8 <_ZN8touchgfx15AbstractPainterC1Ev>
 800d3f8:	4a26      	ldr	r2, [pc, #152]	; (800d494 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0xac>)
 800d3fa:	687b      	ldr	r3, [r7, #4]
 800d3fc:	601a      	str	r2, [r3, #0]
 800d3fe:	2300      	movs	r3, #0
 800d400:	73fb      	strb	r3, [r7, #15]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 800d402:	f7fe fb37 	bl	800ba74 <_ZN8touchgfx3HAL3lcdEv>
 800d406:	4603      	mov	r3, r0
 800d408:	681a      	ldr	r2, [r3, #0]
 800d40a:	322c      	adds	r2, #44	; 0x2c
 800d40c:	6812      	ldr	r2, [r2, #0]
 800d40e:	4618      	mov	r0, r3
 800d410:	4790      	blx	r2
 800d412:	4603      	mov	r3, r0
 800d414:	461a      	mov	r2, r3
 800d416:	7bfb      	ldrb	r3, [r7, #15]
 800d418:	4293      	cmp	r3, r2
 800d41a:	bf0c      	ite	eq
 800d41c:	2301      	moveq	r3, #1
 800d41e:	2300      	movne	r3, #0
 800d420:	73bb      	strb	r3, [r7, #14]
        if (HAL::getInstance()->getAuxiliaryLCD())
 800d422:	f7fe fb1b 	bl	800ba5c <_ZN8touchgfx3HAL11getInstanceEv>
 800d426:	4603      	mov	r3, r0
 800d428:	4618      	mov	r0, r3
 800d42a:	f7ff fa0d 	bl	800c848 <_ZN8touchgfx3HAL15getAuxiliaryLCDEv>
 800d42e:	4603      	mov	r3, r0
 800d430:	2b00      	cmp	r3, #0
 800d432:	bf14      	ite	ne
 800d434:	2301      	movne	r3, #1
 800d436:	2300      	moveq	r3, #0
 800d438:	b2db      	uxtb	r3, r3
 800d43a:	2b00      	cmp	r3, #0
 800d43c:	d01b      	beq.n	800d476 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x8e>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800d43e:	f7fe fb0d 	bl	800ba5c <_ZN8touchgfx3HAL11getInstanceEv>
 800d442:	4603      	mov	r3, r0
 800d444:	4618      	mov	r0, r3
 800d446:	f7ff f9ff 	bl	800c848 <_ZN8touchgfx3HAL15getAuxiliaryLCDEv>
 800d44a:	4603      	mov	r3, r0
 800d44c:	681a      	ldr	r2, [r3, #0]
 800d44e:	322c      	adds	r2, #44	; 0x2c
 800d450:	6812      	ldr	r2, [r2, #0]
 800d452:	4618      	mov	r0, r3
 800d454:	4790      	blx	r2
 800d456:	4603      	mov	r3, r0
 800d458:	461a      	mov	r2, r3
 800d45a:	7bfb      	ldrb	r3, [r7, #15]
 800d45c:	4293      	cmp	r3, r2
 800d45e:	bf0c      	ite	eq
 800d460:	2301      	moveq	r3, #1
 800d462:	2300      	movne	r3, #0
 800d464:	b2da      	uxtb	r2, r3
 800d466:	7bbb      	ldrb	r3, [r7, #14]
 800d468:	4313      	orrs	r3, r2
 800d46a:	b2db      	uxtb	r3, r3
 800d46c:	2b00      	cmp	r3, #0
 800d46e:	bf14      	ite	ne
 800d470:	2301      	movne	r3, #1
 800d472:	2300      	moveq	r3, #0
 800d474:	73bb      	strb	r3, [r7, #14]
        }
        return compat;
 800d476:	7bbb      	ldrb	r3, [r7, #14]
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 800d478:	2b00      	cmp	r3, #0
 800d47a:	d105      	bne.n	800d488 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0xa0>
 800d47c:	4b06      	ldr	r3, [pc, #24]	; (800d498 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0xb0>)
 800d47e:	4a07      	ldr	r2, [pc, #28]	; (800d49c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0xb4>)
 800d480:	212c      	movs	r1, #44	; 0x2c
 800d482:	4807      	ldr	r0, [pc, #28]	; (800d4a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0xb8>)
 800d484:	f01b f954 	bl	8028730 <__assert_func>
    }
 800d488:	687b      	ldr	r3, [r7, #4]
 800d48a:	4618      	mov	r0, r3
 800d48c:	3710      	adds	r7, #16
 800d48e:	46bd      	mov	sp, r7
 800d490:	bd80      	pop	{r7, pc}
 800d492:	bf00      	nop
 800d494:	0802bb54 	.word	0x0802bb54
 800d498:	0802a474 	.word	0x0802a474
 800d49c:	0802a4d4 	.word	0x0802a4d4
 800d4a0:	0802a510 	.word	0x0802a510

0800d4a4 <_ZN8touchgfx21AbstractPainterRGB565D1Ev>:
class AbstractPainterRGB565 : public AbstractPainter
 800d4a4:	b580      	push	{r7, lr}
 800d4a6:	b082      	sub	sp, #8
 800d4a8:	af00      	add	r7, sp, #0
 800d4aa:	6078      	str	r0, [r7, #4]
 800d4ac:	4a05      	ldr	r2, [pc, #20]	; (800d4c4 <_ZN8touchgfx21AbstractPainterRGB565D1Ev+0x20>)
 800d4ae:	687b      	ldr	r3, [r7, #4]
 800d4b0:	601a      	str	r2, [r3, #0]
 800d4b2:	687b      	ldr	r3, [r7, #4]
 800d4b4:	4618      	mov	r0, r3
 800d4b6:	f7ff ff0b 	bl	800d2d0 <_ZN8touchgfx15AbstractPainterD1Ev>
 800d4ba:	687b      	ldr	r3, [r7, #4]
 800d4bc:	4618      	mov	r0, r3
 800d4be:	3708      	adds	r7, #8
 800d4c0:	46bd      	mov	sp, r7
 800d4c2:	bd80      	pop	{r7, pc}
 800d4c4:	0802bb54 	.word	0x0802bb54

0800d4c8 <_ZN8touchgfx21AbstractPainterRGB565D0Ev>:
 800d4c8:	b580      	push	{r7, lr}
 800d4ca:	b082      	sub	sp, #8
 800d4cc:	af00      	add	r7, sp, #0
 800d4ce:	6078      	str	r0, [r7, #4]
 800d4d0:	6878      	ldr	r0, [r7, #4]
 800d4d2:	f7ff ffe7 	bl	800d4a4 <_ZN8touchgfx21AbstractPainterRGB565D1Ev>
 800d4d6:	2108      	movs	r1, #8
 800d4d8:	6878      	ldr	r0, [r7, #4]
 800d4da:	f01b f8fa 	bl	80286d2 <_ZdlPvj>
 800d4de:	687b      	ldr	r3, [r7, #4]
 800d4e0:	4618      	mov	r0, r3
 800d4e2:	3708      	adds	r7, #8
 800d4e4:	46bd      	mov	sp, r7
 800d4e6:	bd80      	pop	{r7, pc}

0800d4e8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>:
    /**
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
 800d4e8:	b580      	push	{r7, lr}
 800d4ea:	b082      	sub	sp, #8
 800d4ec:	af00      	add	r7, sp, #0
 800d4ee:	6078      	str	r0, [r7, #4]
 800d4f0:	6039      	str	r1, [r7, #0]
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800d4f2:	687b      	ldr	r3, [r7, #4]
 800d4f4:	4618      	mov	r0, r3
 800d4f6:	f7ff ff77 	bl	800d3e8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800d4fa:	687b      	ldr	r3, [r7, #4]
 800d4fc:	3308      	adds	r3, #8
 800d4fe:	6839      	ldr	r1, [r7, #0]
 800d500:	4618      	mov	r0, r3
 800d502:	f7ff ff2b 	bl	800d35c <_ZN8touchgfx20AbstractPainterColorC1ENS_9colortypeE>
 800d506:	4a05      	ldr	r2, [pc, #20]	; (800d51c <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE+0x34>)
 800d508:	687b      	ldr	r3, [r7, #4]
 800d50a:	601a      	str	r2, [r3, #0]
 800d50c:	4a04      	ldr	r2, [pc, #16]	; (800d520 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE+0x38>)
 800d50e:	687b      	ldr	r3, [r7, #4]
 800d510:	609a      	str	r2, [r3, #8]
    {
    }
 800d512:	687b      	ldr	r3, [r7, #4]
 800d514:	4618      	mov	r0, r3
 800d516:	3708      	adds	r7, #8
 800d518:	46bd      	mov	sp, r7
 800d51a:	bd80      	pop	{r7, pc}
 800d51c:	0802c7f4 	.word	0x0802c7f4
 800d520:	0802c818 	.word	0x0802c818

0800d524 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:

    virtual void setColor(colortype color)
 800d524:	b590      	push	{r4, r7, lr}
 800d526:	b085      	sub	sp, #20
 800d528:	af00      	add	r7, sp, #0
 800d52a:	6078      	str	r0, [r7, #4]
 800d52c:	6039      	str	r1, [r7, #0]
    {
        AbstractPainterColor::setColor(color);
 800d52e:	687b      	ldr	r3, [r7, #4]
 800d530:	3308      	adds	r3, #8
 800d532:	6839      	ldr	r1, [r7, #0]
 800d534:	4618      	mov	r0, r3
 800d536:	f7ff ff49 	bl	800d3cc <_ZN8touchgfx20AbstractPainterColor8setColorENS_9colortypeE>
 800d53a:	687b      	ldr	r3, [r7, #4]
 800d53c:	68db      	ldr	r3, [r3, #12]
 800d53e:	60fb      	str	r3, [r7, #12]
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static uint16_t getNativeColor(colortype color)
    {
        return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
 800d540:	f107 030c 	add.w	r3, r7, #12
 800d544:	4618      	mov	r0, r3
 800d546:	f7fe ff30 	bl	800c3aa <_ZNK8touchgfx9colortypecvmEv>
 800d54a:	4603      	mov	r3, r0
 800d54c:	0a1b      	lsrs	r3, r3, #8
 800d54e:	b29b      	uxth	r3, r3
 800d550:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800d554:	f023 0307 	bic.w	r3, r3, #7
 800d558:	b29c      	uxth	r4, r3
 800d55a:	f107 030c 	add.w	r3, r7, #12
 800d55e:	4618      	mov	r0, r3
 800d560:	f7fe ff23 	bl	800c3aa <_ZNK8touchgfx9colortypecvmEv>
 800d564:	4603      	mov	r3, r0
 800d566:	095b      	lsrs	r3, r3, #5
 800d568:	b29b      	uxth	r3, r3
 800d56a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 800d56e:	b29b      	uxth	r3, r3
 800d570:	4323      	orrs	r3, r4
 800d572:	b29c      	uxth	r4, r3
 800d574:	f107 030c 	add.w	r3, r7, #12
 800d578:	4618      	mov	r0, r3
 800d57a:	f7fe ff16 	bl	800c3aa <_ZNK8touchgfx9colortypecvmEv>
 800d57e:	4603      	mov	r3, r0
 800d580:	08db      	lsrs	r3, r3, #3
 800d582:	b29b      	uxth	r3, r3
 800d584:	f003 031f 	and.w	r3, r3, #31
 800d588:	b29b      	uxth	r3, r3
 800d58a:	4323      	orrs	r3, r4
 800d58c:	b29a      	uxth	r2, r3
        color565 = LCD16bpp::getNativeColor(painterColor);
 800d58e:	687b      	ldr	r3, [r7, #4]
 800d590:	821a      	strh	r2, [r3, #16]
    }
 800d592:	bf00      	nop
 800d594:	3714      	adds	r7, #20
 800d596:	46bd      	mov	sp, r7
 800d598:	bd90      	pop	{r4, r7, pc}

0800d59a <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
    virtual void setColor(colortype color)
 800d59a:	f1a0 0008 	sub.w	r0, r0, #8
 800d59e:	e7c1      	b.n	800d524 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>

0800d5a0 <_ZN14screenViewBase4playEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void play()
 800d5a0:	b480      	push	{r7}
 800d5a2:	b083      	sub	sp, #12
 800d5a4:	af00      	add	r7, sp, #0
 800d5a6:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in screen
    }
 800d5a8:	bf00      	nop
 800d5aa:	370c      	adds	r7, #12
 800d5ac:	46bd      	mov	sp, r7
 800d5ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5b2:	4770      	bx	lr

0800d5b4 <_ZN14screenViewBase12skip_forwardEv>:
    virtual void skip_forward()
 800d5b4:	b480      	push	{r7}
 800d5b6:	b083      	sub	sp, #12
 800d5b8:	af00      	add	r7, sp, #0
 800d5ba:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in screen
    }
 800d5bc:	bf00      	nop
 800d5be:	370c      	adds	r7, #12
 800d5c0:	46bd      	mov	sp, r7
 800d5c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5c6:	4770      	bx	lr

0800d5c8 <_ZN14screenViewBase13skip_backwardEv>:
    virtual void skip_backward()
 800d5c8:	b480      	push	{r7}
 800d5ca:	b083      	sub	sp, #12
 800d5cc:	af00      	add	r7, sp, #0
 800d5ce:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in screen
    }
 800d5d0:	bf00      	nop
 800d5d2:	370c      	adds	r7, #12
 800d5d4:	46bd      	mov	sp, r7
 800d5d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5da:	4770      	bx	lr

0800d5dc <_ZN14screenViewBase8vol_downEv>:
    virtual void vol_down()
 800d5dc:	b480      	push	{r7}
 800d5de:	b083      	sub	sp, #12
 800d5e0:	af00      	add	r7, sp, #0
 800d5e2:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in screen
    }
 800d5e4:	bf00      	nop
 800d5e6:	370c      	adds	r7, #12
 800d5e8:	46bd      	mov	sp, r7
 800d5ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5ee:	4770      	bx	lr

0800d5f0 <_ZN14screenViewBase6vol_upEv>:
    virtual void vol_up()
 800d5f0:	b480      	push	{r7}
 800d5f2:	b083      	sub	sp, #12
 800d5f4:	af00      	add	r7, sp, #0
 800d5f6:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in screen
    }
 800d5f8:	bf00      	nop
 800d5fa:	370c      	adds	r7, #12
 800d5fc:	46bd      	mov	sp, r7
 800d5fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d602:	4770      	bx	lr

0800d604 <_ZN14screenViewBase5pauseEv>:
    virtual void pause()
 800d604:	b480      	push	{r7}
 800d606:	b083      	sub	sp, #12
 800d608:	af00      	add	r7, sp, #0
 800d60a:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in screen
    }
 800d60c:	bf00      	nop
 800d60e:	370c      	adds	r7, #12
 800d610:	46bd      	mov	sp, r7
 800d612:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d616:	4770      	bx	lr

0800d618 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>:
class View : public Screen
 800d618:	b580      	push	{r7, lr}
 800d61a:	b082      	sub	sp, #8
 800d61c:	af00      	add	r7, sp, #0
 800d61e:	6078      	str	r0, [r7, #4]
 800d620:	4a05      	ldr	r2, [pc, #20]	; (800d638 <_ZN8touchgfx4ViewI15screenPresenterED1Ev+0x20>)
 800d622:	687b      	ldr	r3, [r7, #4]
 800d624:	601a      	str	r2, [r3, #0]
 800d626:	687b      	ldr	r3, [r7, #4]
 800d628:	4618      	mov	r0, r3
 800d62a:	f7ff f919 	bl	800c860 <_ZN8touchgfx6ScreenD1Ev>
 800d62e:	687b      	ldr	r3, [r7, #4]
 800d630:	4618      	mov	r0, r3
 800d632:	3708      	adds	r7, #8
 800d634:	46bd      	mov	sp, r7
 800d636:	bd80      	pop	{r7, pc}
 800d638:	0802bb20 	.word	0x0802bb20

0800d63c <_ZN8touchgfx4ViewI15screenPresenterED0Ev>:
 800d63c:	b580      	push	{r7, lr}
 800d63e:	b082      	sub	sp, #8
 800d640:	af00      	add	r7, sp, #0
 800d642:	6078      	str	r0, [r7, #4]
 800d644:	6878      	ldr	r0, [r7, #4]
 800d646:	f7ff ffe7 	bl	800d618 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>
 800d64a:	2140      	movs	r1, #64	; 0x40
 800d64c:	6878      	ldr	r0, [r7, #4]
 800d64e:	f01b f840 	bl	80286d2 <_ZdlPvj>
 800d652:	687b      	ldr	r3, [r7, #4]
 800d654:	4618      	mov	r0, r3
 800d656:	3708      	adds	r7, #8
 800d658:	46bd      	mov	sp, r7
 800d65a:	bd80      	pop	{r7, pc}

0800d65c <_ZN14screenViewBaseC1Ev>:
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

screenViewBase::screenViewBase() :
 800d65c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d660:	b0de      	sub	sp, #376	; 0x178
 800d662:	af02      	add	r7, sp, #8
 800d664:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d668:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d66c:	6018      	str	r0, [r3, #0]
    flexButtonCallback(this, &screenViewBase::flexButtonCallbackHandler)
 800d66e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d672:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d676:	681b      	ldr	r3, [r3, #0]
 800d678:	4618      	mov	r0, r3
 800d67a:	f001 faf5 	bl	800ec68 <_ZN8touchgfx4ViewI15screenPresenterEC1Ev>
 800d67e:	4ae8      	ldr	r2, [pc, #928]	; (800da20 <_ZN14screenViewBaseC1Ev+0x3c4>)
 800d680:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d684:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d688:	681b      	ldr	r3, [r3, #0]
 800d68a:	601a      	str	r2, [r3, #0]
 800d68c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d690:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d694:	681b      	ldr	r3, [r3, #0]
 800d696:	3340      	adds	r3, #64	; 0x40
 800d698:	4618      	mov	r0, r3
 800d69a:	f7ff f99f 	bl	800c9dc <_ZN8touchgfx3BoxC1Ev>
 800d69e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d6a2:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d6a6:	681b      	ldr	r3, [r3, #0]
 800d6a8:	336c      	adds	r3, #108	; 0x6c
 800d6aa:	4618      	mov	r0, r3
 800d6ac:	f7ff f996 	bl	800c9dc <_ZN8touchgfx3BoxC1Ev>
 800d6b0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d6b4:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d6b8:	681b      	ldr	r3, [r3, #0]
 800d6ba:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800d6be:	f107 0320 	add.w	r3, r7, #32
 800d6c2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800d6c6:	4618      	mov	r0, r3
 800d6c8:	f7fe feb2 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800d6cc:	f107 0320 	add.w	r3, r7, #32
 800d6d0:	4619      	mov	r1, r3
 800d6d2:	4620      	mov	r0, r4
 800d6d4:	f006 fc64 	bl	8013fa0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800d6d8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d6dc:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d6e0:	681b      	ldr	r3, [r3, #0]
 800d6e2:	33c4      	adds	r3, #196	; 0xc4
 800d6e4:	4618      	mov	r0, r3
 800d6e6:	f001 fb41 	bl	800ed6c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEEC1Ev>
 800d6ea:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d6ee:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d6f2:	681b      	ldr	r3, [r3, #0]
 800d6f4:	f503 73b6 	add.w	r3, r3, #364	; 0x16c
 800d6f8:	4618      	mov	r0, r3
 800d6fa:	f001 fb37 	bl	800ed6c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEEC1Ev>
 800d6fe:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d702:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d706:	681b      	ldr	r3, [r3, #0]
 800d708:	f503 7305 	add.w	r3, r3, #532	; 0x214
 800d70c:	4618      	mov	r0, r3
 800d70e:	f001 fb2d 	bl	800ed6c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEEC1Ev>
 800d712:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d716:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d71a:	681b      	ldr	r3, [r3, #0]
 800d71c:	f503 732f 	add.w	r3, r3, #700	; 0x2bc
 800d720:	4618      	mov	r0, r3
 800d722:	f001 fb23 	bl	800ed6c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEEC1Ev>
 800d726:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d72a:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d72e:	681b      	ldr	r3, [r3, #0]
 800d730:	f503 7359 	add.w	r3, r3, #868	; 0x364
 800d734:	4618      	mov	r0, r3
 800d736:	f001 fb19 	bl	800ed6c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEEC1Ev>
 800d73a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d73e:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d742:	681b      	ldr	r3, [r3, #0]
 800d744:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 800d748:	4618      	mov	r0, r3
 800d74a:	f001 fb0f 	bl	800ed6c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEEC1Ev>
 800d74e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d752:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d756:	681b      	ldr	r3, [r3, #0]
 800d758:	f203 43b4 	addw	r3, r3, #1204	; 0x4b4
 800d75c:	4618      	mov	r0, r3
 800d75e:	f001 fb87 	bl	800ee70 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800d762:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d766:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d76a:	681b      	ldr	r3, [r3, #0]
 800d76c:	f203 535c 	addw	r3, r3, #1372	; 0x55c
 800d770:	4618      	mov	r0, r3
 800d772:	f004 fbef 	bl	8011f54 <_ZN8touchgfx12LineProgressC1Ev>
 800d776:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d77a:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d77e:	681b      	ldr	r3, [r3, #0]
 800d780:	f503 64d2 	add.w	r4, r3, #1680	; 0x690
 800d784:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800d788:	2100      	movs	r1, #0
 800d78a:	4618      	mov	r0, r3
 800d78c:	f7fe fdfe 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800d790:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d794:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 800d798:	6819      	ldr	r1, [r3, #0]
 800d79a:	4620      	mov	r0, r4
 800d79c:	f7ff fea4 	bl	800d4e8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 800d7a0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d7a4:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d7a8:	681b      	ldr	r3, [r3, #0]
 800d7aa:	f203 63a4 	addw	r3, r3, #1700	; 0x6a4
 800d7ae:	4618      	mov	r0, r3
 800d7b0:	f7ff fd3c 	bl	800d22c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800d7b4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d7b8:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d7bc:	681b      	ldr	r3, [r3, #0]
 800d7be:	f503 50ab 	add.w	r0, r3, #5472	; 0x1560
 800d7c2:	3004      	adds	r0, #4
 800d7c4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d7c8:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800d7cc:	4a95      	ldr	r2, [pc, #596]	; (800da24 <_ZN14screenViewBaseC1Ev+0x3c8>)
 800d7ce:	601a      	str	r2, [r3, #0]
 800d7d0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d7d4:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800d7d8:	2200      	movs	r2, #0
 800d7da:	605a      	str	r2, [r3, #4]
 800d7dc:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d7e0:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800d7e4:	f507 72b8 	add.w	r2, r7, #368	; 0x170
 800d7e8:	f5a2 71ae 	sub.w	r1, r2, #348	; 0x15c
 800d7ec:	cb0c      	ldmia	r3, {r2, r3}
 800d7ee:	6809      	ldr	r1, [r1, #0]
 800d7f0:	f001 fb86 	bl	800ef00 <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800d7f4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d7f8:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d7fc:	681b      	ldr	r3, [r3, #0]
 800d7fe:	f203 7354 	addw	r3, r3, #1876	; 0x754
 800d802:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800d806:	4618      	mov	r0, r3
 800d808:	f008 f94a 	bl	8015aa0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    
    __background.setPosition(0, 0, 240, 320);
 800d80c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d810:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d814:	681b      	ldr	r3, [r3, #0]
 800d816:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800d81a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800d81e:	9300      	str	r3, [sp, #0]
 800d820:	23f0      	movs	r3, #240	; 0xf0
 800d822:	2200      	movs	r2, #0
 800d824:	2100      	movs	r1, #0
 800d826:	f7fe fe8d 	bl	800c544 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800d82a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d82e:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d832:	681b      	ldr	r3, [r3, #0]
 800d834:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800d838:	2300      	movs	r3, #0
 800d83a:	f887 3102 	strb.w	r3, [r7, #258]	; 0x102
 800d83e:	2300      	movs	r3, #0
 800d840:	f887 3101 	strb.w	r3, [r7, #257]	; 0x101
 800d844:	2300      	movs	r3, #0
 800d846:	f887 3100 	strb.w	r3, [r7, #256]	; 0x100
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800d84a:	f897 3102 	ldrb.w	r3, [r7, #258]	; 0x102
 800d84e:	041b      	lsls	r3, r3, #16
 800d850:	461a      	mov	r2, r3
 800d852:	f897 3101 	ldrb.w	r3, [r7, #257]	; 0x101
 800d856:	021b      	lsls	r3, r3, #8
 800d858:	431a      	orrs	r2, r3
 800d85a:	f897 3100 	ldrb.w	r3, [r7, #256]	; 0x100
 800d85e:	4313      	orrs	r3, r2
 800d860:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800d864:	f107 03fc 	add.w	r3, r7, #252	; 0xfc
 800d868:	4611      	mov	r1, r2
 800d86a:	4618      	mov	r0, r3
 800d86c:	f7fe fd8e 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800d870:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800d874:	4619      	mov	r1, r3
 800d876:	4620      	mov	r0, r4
 800d878:	f7ff f8d4 	bl	800ca24 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800d87c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d880:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d884:	681a      	ldr	r2, [r3, #0]
 800d886:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d88a:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d88e:	681b      	ldr	r3, [r3, #0]
 800d890:	3340      	adds	r3, #64	; 0x40
 800d892:	4619      	mov	r1, r3
 800d894:	4610      	mov	r0, r2
 800d896:	f7ff f83b 	bl	800c910 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    box1.setPosition(0, 0, 240, 320);
 800d89a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d89e:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d8a2:	681b      	ldr	r3, [r3, #0]
 800d8a4:	f103 006c 	add.w	r0, r3, #108	; 0x6c
 800d8a8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800d8ac:	9300      	str	r3, [sp, #0]
 800d8ae:	23f0      	movs	r3, #240	; 0xf0
 800d8b0:	2200      	movs	r2, #0
 800d8b2:	2100      	movs	r1, #0
 800d8b4:	f7fe fe46 	bl	800c544 <_ZN8touchgfx8Drawable11setPositionEssss>
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800d8b8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d8bc:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d8c0:	681b      	ldr	r3, [r3, #0]
 800d8c2:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800d8c6:	23ff      	movs	r3, #255	; 0xff
 800d8c8:	f887 3105 	strb.w	r3, [r7, #261]	; 0x105
 800d8cc:	23ff      	movs	r3, #255	; 0xff
 800d8ce:	f887 3104 	strb.w	r3, [r7, #260]	; 0x104
 800d8d2:	23ff      	movs	r3, #255	; 0xff
 800d8d4:	f887 3103 	strb.w	r3, [r7, #259]	; 0x103
 800d8d8:	f897 3105 	ldrb.w	r3, [r7, #261]	; 0x105
 800d8dc:	041b      	lsls	r3, r3, #16
 800d8de:	461a      	mov	r2, r3
 800d8e0:	f897 3104 	ldrb.w	r3, [r7, #260]	; 0x104
 800d8e4:	021b      	lsls	r3, r3, #8
 800d8e6:	431a      	orrs	r2, r3
 800d8e8:	f897 3103 	ldrb.w	r3, [r7, #259]	; 0x103
 800d8ec:	4313      	orrs	r3, r2
 800d8ee:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800d8f2:	f107 03f8 	add.w	r3, r7, #248	; 0xf8
 800d8f6:	4611      	mov	r1, r2
 800d8f8:	4618      	mov	r0, r3
 800d8fa:	f7fe fd47 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800d8fe:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 800d902:	4619      	mov	r1, r3
 800d904:	4620      	mov	r0, r4
 800d906:	f7ff f88d 	bl	800ca24 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(box1);
 800d90a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d90e:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d912:	681a      	ldr	r2, [r3, #0]
 800d914:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d918:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d91c:	681b      	ldr	r3, [r3, #0]
 800d91e:	336c      	adds	r3, #108	; 0x6c
 800d920:	4619      	mov	r1, r3
 800d922:	4610      	mov	r0, r2
 800d924:	f7fe fff4 	bl	800c910 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_CASTLE_ID));
 800d928:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d92c:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d930:	681b      	ldr	r3, [r3, #0]
 800d932:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800d936:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800d93a:	2100      	movs	r1, #0
 800d93c:	4618      	mov	r0, r3
 800d93e:	f7fe fd77 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800d942:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800d946:	4619      	mov	r1, r3
 800d948:	4620      	mov	r0, r4
 800d94a:	f007 f9ae 	bl	8014caa <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setPosition(80, 120, 80, 80);
 800d94e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d952:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d956:	681b      	ldr	r3, [r3, #0]
 800d958:	f103 0098 	add.w	r0, r3, #152	; 0x98
 800d95c:	2350      	movs	r3, #80	; 0x50
 800d95e:	9300      	str	r3, [sp, #0]
 800d960:	2350      	movs	r3, #80	; 0x50
 800d962:	2278      	movs	r2, #120	; 0x78
 800d964:	2150      	movs	r1, #80	; 0x50
 800d966:	f7fe fded 	bl	800c544 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800d96a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d96e:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d972:	681b      	ldr	r3, [r3, #0]
 800d974:	3398      	adds	r3, #152	; 0x98
 800d976:	2100      	movs	r1, #0
 800d978:	4618      	mov	r0, r3
 800d97a:	f006 fad4 	bl	8013f26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    add(scalableImage1);
 800d97e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d982:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d986:	681a      	ldr	r2, [r3, #0]
 800d988:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d98c:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d990:	681b      	ldr	r3, [r3, #0]
 800d992:	3398      	adds	r3, #152	; 0x98
 800d994:	4619      	mov	r1, r3
 800d996:	4610      	mov	r0, r2
 800d998:	f7fe ffba 	bl	800c910 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    play_button.setBoxWithBorderPosition(0, 0, 50, 50);
 800d99c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d9a0:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d9a4:	681b      	ldr	r3, [r3, #0]
 800d9a6:	f103 00c4 	add.w	r0, r3, #196	; 0xc4
 800d9aa:	2332      	movs	r3, #50	; 0x32
 800d9ac:	9300      	str	r3, [sp, #0]
 800d9ae:	2332      	movs	r3, #50	; 0x32
 800d9b0:	2200      	movs	r2, #0
 800d9b2:	2100      	movs	r1, #0
 800d9b4:	f001 fac4 	bl	800ef40 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE24setBoxWithBorderPositionEssss>
    play_button.setBorderSize(5);
 800d9b8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d9bc:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d9c0:	681b      	ldr	r3, [r3, #0]
 800d9c2:	33c4      	adds	r3, #196	; 0xc4
 800d9c4:	2105      	movs	r1, #5
 800d9c6:	4618      	mov	r0, r3
 800d9c8:	f001 fada 	bl	800ef80 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE13setBorderSizeEh>
    play_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(199, 46, 57), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
 800d9cc:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800d9d0:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800d9d4:	681b      	ldr	r3, [r3, #0]
 800d9d6:	f103 04c4 	add.w	r4, r3, #196	; 0xc4
 800d9da:	23ff      	movs	r3, #255	; 0xff
 800d9dc:	f887 3108 	strb.w	r3, [r7, #264]	; 0x108
 800d9e0:	23ff      	movs	r3, #255	; 0xff
 800d9e2:	f887 3107 	strb.w	r3, [r7, #263]	; 0x107
 800d9e6:	23ff      	movs	r3, #255	; 0xff
 800d9e8:	f887 3106 	strb.w	r3, [r7, #262]	; 0x106
 800d9ec:	f897 3108 	ldrb.w	r3, [r7, #264]	; 0x108
 800d9f0:	041b      	lsls	r3, r3, #16
 800d9f2:	461a      	mov	r2, r3
 800d9f4:	f897 3107 	ldrb.w	r3, [r7, #263]	; 0x107
 800d9f8:	021b      	lsls	r3, r3, #8
 800d9fa:	431a      	orrs	r2, r3
 800d9fc:	f897 3106 	ldrb.w	r3, [r7, #262]	; 0x106
 800da00:	4313      	orrs	r3, r2
 800da02:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800da06:	f107 03f4 	add.w	r3, r7, #244	; 0xf4
 800da0a:	4611      	mov	r1, r2
 800da0c:	4618      	mov	r0, r3
 800da0e:	f7fe fcbd 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800da12:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800da16:	461d      	mov	r5, r3
 800da18:	23c7      	movs	r3, #199	; 0xc7
 800da1a:	f887 310b 	strb.w	r3, [r7, #267]	; 0x10b
 800da1e:	e003      	b.n	800da28 <_ZN14screenViewBaseC1Ev+0x3cc>
 800da20:	0802b844 	.word	0x0802b844
 800da24:	0800ebc7 	.word	0x0800ebc7
 800da28:	232e      	movs	r3, #46	; 0x2e
 800da2a:	f887 310a 	strb.w	r3, [r7, #266]	; 0x10a
 800da2e:	2339      	movs	r3, #57	; 0x39
 800da30:	f887 3109 	strb.w	r3, [r7, #265]	; 0x109
 800da34:	f897 310b 	ldrb.w	r3, [r7, #267]	; 0x10b
 800da38:	041b      	lsls	r3, r3, #16
 800da3a:	461a      	mov	r2, r3
 800da3c:	f897 310a 	ldrb.w	r3, [r7, #266]	; 0x10a
 800da40:	021b      	lsls	r3, r3, #8
 800da42:	431a      	orrs	r2, r3
 800da44:	f897 3109 	ldrb.w	r3, [r7, #265]	; 0x109
 800da48:	4313      	orrs	r3, r2
 800da4a:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800da4e:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
 800da52:	4611      	mov	r1, r2
 800da54:	4618      	mov	r0, r3
 800da56:	f7fe fc99 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800da5a:	f8d7 30f0 	ldr.w	r3, [r7, #240]	; 0xf0
 800da5e:	461e      	mov	r6, r3
 800da60:	23ff      	movs	r3, #255	; 0xff
 800da62:	f887 310e 	strb.w	r3, [r7, #270]	; 0x10e
 800da66:	23ff      	movs	r3, #255	; 0xff
 800da68:	f887 310d 	strb.w	r3, [r7, #269]	; 0x10d
 800da6c:	23ff      	movs	r3, #255	; 0xff
 800da6e:	f887 310c 	strb.w	r3, [r7, #268]	; 0x10c
 800da72:	f897 310e 	ldrb.w	r3, [r7, #270]	; 0x10e
 800da76:	041b      	lsls	r3, r3, #16
 800da78:	461a      	mov	r2, r3
 800da7a:	f897 310d 	ldrb.w	r3, [r7, #269]	; 0x10d
 800da7e:	021b      	lsls	r3, r3, #8
 800da80:	431a      	orrs	r2, r3
 800da82:	f897 310c 	ldrb.w	r3, [r7, #268]	; 0x10c
 800da86:	4313      	orrs	r3, r2
 800da88:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800da8c:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 800da90:	4611      	mov	r1, r2
 800da92:	4618      	mov	r0, r3
 800da94:	f7fe fc7a 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800da98:	f8d7 30ec 	ldr.w	r3, [r7, #236]	; 0xec
 800da9c:	4698      	mov	r8, r3
 800da9e:	23ff      	movs	r3, #255	; 0xff
 800daa0:	f887 3111 	strb.w	r3, [r7, #273]	; 0x111
 800daa4:	23ff      	movs	r3, #255	; 0xff
 800daa6:	f887 3110 	strb.w	r3, [r7, #272]	; 0x110
 800daaa:	23ff      	movs	r3, #255	; 0xff
 800daac:	f887 310f 	strb.w	r3, [r7, #271]	; 0x10f
 800dab0:	f897 3111 	ldrb.w	r3, [r7, #273]	; 0x111
 800dab4:	041b      	lsls	r3, r3, #16
 800dab6:	461a      	mov	r2, r3
 800dab8:	f897 3110 	ldrb.w	r3, [r7, #272]	; 0x110
 800dabc:	021b      	lsls	r3, r3, #8
 800dabe:	431a      	orrs	r2, r3
 800dac0:	f897 310f 	ldrb.w	r3, [r7, #271]	; 0x10f
 800dac4:	4313      	orrs	r3, r2
 800dac6:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800daca:	f107 03e8 	add.w	r3, r7, #232	; 0xe8
 800dace:	4611      	mov	r1, r2
 800dad0:	4618      	mov	r0, r3
 800dad2:	f7fe fc5b 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800dad6:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 800dada:	9300      	str	r3, [sp, #0]
 800dadc:	4643      	mov	r3, r8
 800dade:	4632      	mov	r2, r6
 800dae0:	4629      	mov	r1, r5
 800dae2:	4620      	mov	r0, r4
 800dae4:	f001 fa5e 	bl	800efa4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    play_button.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_AV_PLAY_ARROW_50_50_000000_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_AV_PLAY_ARROW_50_50_000000_SVG_ID));
 800dae8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800daec:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800daf0:	681b      	ldr	r3, [r3, #0]
 800daf2:	f103 04c4 	add.w	r4, r3, #196	; 0xc4
 800daf6:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800dafa:	2103      	movs	r1, #3
 800dafc:	4618      	mov	r0, r3
 800dafe:	f7fe fc97 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800db02:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800db06:	2103      	movs	r1, #3
 800db08:	4618      	mov	r0, r3
 800db0a:	f7fe fc91 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800db0e:	f107 0238 	add.w	r2, r7, #56	; 0x38
 800db12:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800db16:	4619      	mov	r1, r3
 800db18:	4620      	mov	r0, r4
 800db1a:	f001 fa60 	bl	800efde <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    play_button.setIconXY(0, 0);
 800db1e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800db22:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800db26:	681b      	ldr	r3, [r3, #0]
 800db28:	33c4      	adds	r3, #196	; 0xc4
 800db2a:	2200      	movs	r2, #0
 800db2c:	2100      	movs	r1, #0
 800db2e:	4618      	mov	r0, r3
 800db30:	f001 faa3 	bl	800f07a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE9setIconXYEss>
    play_button.setAction(flexButtonCallback);
 800db34:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800db38:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800db3c:	681b      	ldr	r3, [r3, #0]
 800db3e:	f103 02c4 	add.w	r2, r3, #196	; 0xc4
 800db42:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800db46:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800db4a:	681b      	ldr	r3, [r3, #0]
 800db4c:	f503 53ab 	add.w	r3, r3, #5472	; 0x1560
 800db50:	3304      	adds	r3, #4
 800db52:	4619      	mov	r1, r3
 800db54:	4610      	mov	r0, r2
 800db56:	f7ff f82b 	bl	800cbb0 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    play_button.setPosition(120, 258, 50, 50);
 800db5a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800db5e:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800db62:	681b      	ldr	r3, [r3, #0]
 800db64:	f103 00c4 	add.w	r0, r3, #196	; 0xc4
 800db68:	2332      	movs	r3, #50	; 0x32
 800db6a:	9300      	str	r3, [sp, #0]
 800db6c:	2332      	movs	r3, #50	; 0x32
 800db6e:	f44f 7281 	mov.w	r2, #258	; 0x102
 800db72:	2178      	movs	r1, #120	; 0x78
 800db74:	f7fe fce6 	bl	800c544 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(play_button);
 800db78:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800db7c:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800db80:	681a      	ldr	r2, [r3, #0]
 800db82:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800db86:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800db8a:	681b      	ldr	r3, [r3, #0]
 800db8c:	33c4      	adds	r3, #196	; 0xc4
 800db8e:	4619      	mov	r1, r3
 800db90:	4610      	mov	r0, r2
 800db92:	f7fe febd 	bl	800c910 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    pause_button.setBoxWithBorderPosition(0, 0, 50, 50);
 800db96:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800db9a:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800db9e:	681b      	ldr	r3, [r3, #0]
 800dba0:	f503 70b6 	add.w	r0, r3, #364	; 0x16c
 800dba4:	2332      	movs	r3, #50	; 0x32
 800dba6:	9300      	str	r3, [sp, #0]
 800dba8:	2332      	movs	r3, #50	; 0x32
 800dbaa:	2200      	movs	r2, #0
 800dbac:	2100      	movs	r1, #0
 800dbae:	f001 f9c7 	bl	800ef40 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE24setBoxWithBorderPositionEssss>
    pause_button.setBorderSize(5);
 800dbb2:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800dbb6:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800dbba:	681b      	ldr	r3, [r3, #0]
 800dbbc:	f503 73b6 	add.w	r3, r3, #364	; 0x16c
 800dbc0:	2105      	movs	r1, #5
 800dbc2:	4618      	mov	r0, r3
 800dbc4:	f001 f9dc 	bl	800ef80 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE13setBorderSizeEh>
    pause_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(199, 46, 57), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
 800dbc8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800dbcc:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800dbd0:	681b      	ldr	r3, [r3, #0]
 800dbd2:	f503 74b6 	add.w	r4, r3, #364	; 0x16c
 800dbd6:	23ff      	movs	r3, #255	; 0xff
 800dbd8:	f887 3114 	strb.w	r3, [r7, #276]	; 0x114
 800dbdc:	23ff      	movs	r3, #255	; 0xff
 800dbde:	f887 3113 	strb.w	r3, [r7, #275]	; 0x113
 800dbe2:	23ff      	movs	r3, #255	; 0xff
 800dbe4:	f887 3112 	strb.w	r3, [r7, #274]	; 0x112
 800dbe8:	f897 3114 	ldrb.w	r3, [r7, #276]	; 0x114
 800dbec:	041b      	lsls	r3, r3, #16
 800dbee:	461a      	mov	r2, r3
 800dbf0:	f897 3113 	ldrb.w	r3, [r7, #275]	; 0x113
 800dbf4:	021b      	lsls	r3, r3, #8
 800dbf6:	431a      	orrs	r2, r3
 800dbf8:	f897 3112 	ldrb.w	r3, [r7, #274]	; 0x112
 800dbfc:	4313      	orrs	r3, r2
 800dbfe:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dc02:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 800dc06:	4611      	mov	r1, r2
 800dc08:	4618      	mov	r0, r3
 800dc0a:	f7fe fbbf 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800dc0e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800dc12:	461d      	mov	r5, r3
 800dc14:	23c7      	movs	r3, #199	; 0xc7
 800dc16:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
 800dc1a:	232e      	movs	r3, #46	; 0x2e
 800dc1c:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
 800dc20:	2339      	movs	r3, #57	; 0x39
 800dc22:	f887 3115 	strb.w	r3, [r7, #277]	; 0x115
 800dc26:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800dc2a:	041b      	lsls	r3, r3, #16
 800dc2c:	461a      	mov	r2, r3
 800dc2e:	f897 3116 	ldrb.w	r3, [r7, #278]	; 0x116
 800dc32:	021b      	lsls	r3, r3, #8
 800dc34:	431a      	orrs	r2, r3
 800dc36:	f897 3115 	ldrb.w	r3, [r7, #277]	; 0x115
 800dc3a:	4313      	orrs	r3, r2
 800dc3c:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dc40:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 800dc44:	4611      	mov	r1, r2
 800dc46:	4618      	mov	r0, r3
 800dc48:	f7fe fba0 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800dc4c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800dc50:	461e      	mov	r6, r3
 800dc52:	23ff      	movs	r3, #255	; 0xff
 800dc54:	f887 311a 	strb.w	r3, [r7, #282]	; 0x11a
 800dc58:	23ff      	movs	r3, #255	; 0xff
 800dc5a:	f887 3119 	strb.w	r3, [r7, #281]	; 0x119
 800dc5e:	23ff      	movs	r3, #255	; 0xff
 800dc60:	f887 3118 	strb.w	r3, [r7, #280]	; 0x118
 800dc64:	f897 311a 	ldrb.w	r3, [r7, #282]	; 0x11a
 800dc68:	041b      	lsls	r3, r3, #16
 800dc6a:	461a      	mov	r2, r3
 800dc6c:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 800dc70:	021b      	lsls	r3, r3, #8
 800dc72:	431a      	orrs	r2, r3
 800dc74:	f897 3118 	ldrb.w	r3, [r7, #280]	; 0x118
 800dc78:	4313      	orrs	r3, r2
 800dc7a:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dc7e:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 800dc82:	4611      	mov	r1, r2
 800dc84:	4618      	mov	r0, r3
 800dc86:	f7fe fb81 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800dc8a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800dc8e:	4698      	mov	r8, r3
 800dc90:	23ff      	movs	r3, #255	; 0xff
 800dc92:	f887 311d 	strb.w	r3, [r7, #285]	; 0x11d
 800dc96:	23ff      	movs	r3, #255	; 0xff
 800dc98:	f887 311c 	strb.w	r3, [r7, #284]	; 0x11c
 800dc9c:	23ff      	movs	r3, #255	; 0xff
 800dc9e:	f887 311b 	strb.w	r3, [r7, #283]	; 0x11b
 800dca2:	f897 311d 	ldrb.w	r3, [r7, #285]	; 0x11d
 800dca6:	041b      	lsls	r3, r3, #16
 800dca8:	461a      	mov	r2, r3
 800dcaa:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 800dcae:	021b      	lsls	r3, r3, #8
 800dcb0:	431a      	orrs	r2, r3
 800dcb2:	f897 311b 	ldrb.w	r3, [r7, #283]	; 0x11b
 800dcb6:	4313      	orrs	r3, r2
 800dcb8:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dcbc:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 800dcc0:	4611      	mov	r1, r2
 800dcc2:	4618      	mov	r0, r3
 800dcc4:	f7fe fb62 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800dcc8:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800dccc:	9300      	str	r3, [sp, #0]
 800dcce:	4643      	mov	r3, r8
 800dcd0:	4632      	mov	r2, r6
 800dcd2:	4629      	mov	r1, r5
 800dcd4:	4620      	mov	r0, r4
 800dcd6:	f001 f965 	bl	800efa4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    pause_button.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_AV_PAUSE_50_50_000000_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_AV_PAUSE_50_50_000000_SVG_ID));
 800dcda:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800dcde:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800dce2:	681b      	ldr	r3, [r3, #0]
 800dce4:	f503 74b6 	add.w	r4, r3, #364	; 0x16c
 800dce8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800dcec:	2102      	movs	r1, #2
 800dcee:	4618      	mov	r0, r3
 800dcf0:	f7fe fb9e 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800dcf4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800dcf8:	2102      	movs	r1, #2
 800dcfa:	4618      	mov	r0, r3
 800dcfc:	f7fe fb98 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800dd00:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800dd04:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800dd08:	4619      	mov	r1, r3
 800dd0a:	4620      	mov	r0, r4
 800dd0c:	f001 f967 	bl	800efde <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    pause_button.setIconXY(0, 0);
 800dd10:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800dd14:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800dd18:	681b      	ldr	r3, [r3, #0]
 800dd1a:	f503 73b6 	add.w	r3, r3, #364	; 0x16c
 800dd1e:	2200      	movs	r2, #0
 800dd20:	2100      	movs	r1, #0
 800dd22:	4618      	mov	r0, r3
 800dd24:	f001 f9a9 	bl	800f07a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE9setIconXYEss>
    pause_button.setAction(flexButtonCallback);
 800dd28:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800dd2c:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800dd30:	681b      	ldr	r3, [r3, #0]
 800dd32:	f503 72b6 	add.w	r2, r3, #364	; 0x16c
 800dd36:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800dd3a:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800dd3e:	681b      	ldr	r3, [r3, #0]
 800dd40:	f503 53ab 	add.w	r3, r3, #5472	; 0x1560
 800dd44:	3304      	adds	r3, #4
 800dd46:	4619      	mov	r1, r3
 800dd48:	4610      	mov	r0, r2
 800dd4a:	f7fe ff31 	bl	800cbb0 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    pause_button.setPosition(70, 258, 50, 50);
 800dd4e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800dd52:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800dd56:	681b      	ldr	r3, [r3, #0]
 800dd58:	f503 70b6 	add.w	r0, r3, #364	; 0x16c
 800dd5c:	2332      	movs	r3, #50	; 0x32
 800dd5e:	9300      	str	r3, [sp, #0]
 800dd60:	2332      	movs	r3, #50	; 0x32
 800dd62:	f44f 7281 	mov.w	r2, #258	; 0x102
 800dd66:	2146      	movs	r1, #70	; 0x46
 800dd68:	f7fe fbec 	bl	800c544 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(pause_button);
 800dd6c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800dd70:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800dd74:	681a      	ldr	r2, [r3, #0]
 800dd76:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800dd7a:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800dd7e:	681b      	ldr	r3, [r3, #0]
 800dd80:	f503 73b6 	add.w	r3, r3, #364	; 0x16c
 800dd84:	4619      	mov	r1, r3
 800dd86:	4610      	mov	r0, r2
 800dd88:	f7fe fdc2 	bl	800c910 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    skipf_button.setBoxWithBorderPosition(0, 0, 50, 50);
 800dd8c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800dd90:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800dd94:	681b      	ldr	r3, [r3, #0]
 800dd96:	f503 7005 	add.w	r0, r3, #532	; 0x214
 800dd9a:	2332      	movs	r3, #50	; 0x32
 800dd9c:	9300      	str	r3, [sp, #0]
 800dd9e:	2332      	movs	r3, #50	; 0x32
 800dda0:	2200      	movs	r2, #0
 800dda2:	2100      	movs	r1, #0
 800dda4:	f001 f8cc 	bl	800ef40 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE24setBoxWithBorderPositionEssss>
    skipf_button.setBorderSize(5);
 800dda8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ddac:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800ddb0:	681b      	ldr	r3, [r3, #0]
 800ddb2:	f503 7305 	add.w	r3, r3, #532	; 0x214
 800ddb6:	2105      	movs	r1, #5
 800ddb8:	4618      	mov	r0, r3
 800ddba:	f001 f8e1 	bl	800ef80 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE13setBorderSizeEh>
    skipf_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(199, 46, 57), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
 800ddbe:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ddc2:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800ddc6:	681b      	ldr	r3, [r3, #0]
 800ddc8:	f503 7405 	add.w	r4, r3, #532	; 0x214
 800ddcc:	23ff      	movs	r3, #255	; 0xff
 800ddce:	f887 3120 	strb.w	r3, [r7, #288]	; 0x120
 800ddd2:	23ff      	movs	r3, #255	; 0xff
 800ddd4:	f887 311f 	strb.w	r3, [r7, #287]	; 0x11f
 800ddd8:	23ff      	movs	r3, #255	; 0xff
 800ddda:	f887 311e 	strb.w	r3, [r7, #286]	; 0x11e
 800ddde:	f897 3120 	ldrb.w	r3, [r7, #288]	; 0x120
 800dde2:	041b      	lsls	r3, r3, #16
 800dde4:	461a      	mov	r2, r3
 800dde6:	f897 311f 	ldrb.w	r3, [r7, #287]	; 0x11f
 800ddea:	021b      	lsls	r3, r3, #8
 800ddec:	431a      	orrs	r2, r3
 800ddee:	f897 311e 	ldrb.w	r3, [r7, #286]	; 0x11e
 800ddf2:	4313      	orrs	r3, r2
 800ddf4:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ddf8:	f107 03d4 	add.w	r3, r7, #212	; 0xd4
 800ddfc:	4611      	mov	r1, r2
 800ddfe:	4618      	mov	r0, r3
 800de00:	f7fe fac4 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800de04:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800de08:	461d      	mov	r5, r3
 800de0a:	23c7      	movs	r3, #199	; 0xc7
 800de0c:	f887 3123 	strb.w	r3, [r7, #291]	; 0x123
 800de10:	232e      	movs	r3, #46	; 0x2e
 800de12:	f887 3122 	strb.w	r3, [r7, #290]	; 0x122
 800de16:	2339      	movs	r3, #57	; 0x39
 800de18:	f887 3121 	strb.w	r3, [r7, #289]	; 0x121
 800de1c:	f897 3123 	ldrb.w	r3, [r7, #291]	; 0x123
 800de20:	041b      	lsls	r3, r3, #16
 800de22:	461a      	mov	r2, r3
 800de24:	f897 3122 	ldrb.w	r3, [r7, #290]	; 0x122
 800de28:	021b      	lsls	r3, r3, #8
 800de2a:	431a      	orrs	r2, r3
 800de2c:	f897 3121 	ldrb.w	r3, [r7, #289]	; 0x121
 800de30:	4313      	orrs	r3, r2
 800de32:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800de36:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
 800de3a:	4611      	mov	r1, r2
 800de3c:	4618      	mov	r0, r3
 800de3e:	f7fe faa5 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800de42:	f8d7 30d0 	ldr.w	r3, [r7, #208]	; 0xd0
 800de46:	461e      	mov	r6, r3
 800de48:	23ff      	movs	r3, #255	; 0xff
 800de4a:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 800de4e:	23ff      	movs	r3, #255	; 0xff
 800de50:	f887 3125 	strb.w	r3, [r7, #293]	; 0x125
 800de54:	23ff      	movs	r3, #255	; 0xff
 800de56:	f887 3124 	strb.w	r3, [r7, #292]	; 0x124
 800de5a:	f897 3126 	ldrb.w	r3, [r7, #294]	; 0x126
 800de5e:	041b      	lsls	r3, r3, #16
 800de60:	461a      	mov	r2, r3
 800de62:	f897 3125 	ldrb.w	r3, [r7, #293]	; 0x125
 800de66:	021b      	lsls	r3, r3, #8
 800de68:	431a      	orrs	r2, r3
 800de6a:	f897 3124 	ldrb.w	r3, [r7, #292]	; 0x124
 800de6e:	4313      	orrs	r3, r2
 800de70:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800de74:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800de78:	4611      	mov	r1, r2
 800de7a:	4618      	mov	r0, r3
 800de7c:	f7fe fa86 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800de80:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 800de84:	4698      	mov	r8, r3
 800de86:	23ff      	movs	r3, #255	; 0xff
 800de88:	f887 3129 	strb.w	r3, [r7, #297]	; 0x129
 800de8c:	23ff      	movs	r3, #255	; 0xff
 800de8e:	f887 3128 	strb.w	r3, [r7, #296]	; 0x128
 800de92:	23ff      	movs	r3, #255	; 0xff
 800de94:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800de98:	f897 3129 	ldrb.w	r3, [r7, #297]	; 0x129
 800de9c:	041b      	lsls	r3, r3, #16
 800de9e:	461a      	mov	r2, r3
 800dea0:	f897 3128 	ldrb.w	r3, [r7, #296]	; 0x128
 800dea4:	021b      	lsls	r3, r3, #8
 800dea6:	431a      	orrs	r2, r3
 800dea8:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800deac:	4313      	orrs	r3, r2
 800deae:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800deb2:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 800deb6:	4611      	mov	r1, r2
 800deb8:	4618      	mov	r0, r3
 800deba:	f7fe fa67 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800debe:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 800dec2:	9300      	str	r3, [sp, #0]
 800dec4:	4643      	mov	r3, r8
 800dec6:	4632      	mov	r2, r6
 800dec8:	4629      	mov	r1, r5
 800deca:	4620      	mov	r0, r4
 800decc:	f001 f86a 	bl	800efa4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    skipf_button.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_AV_SKIP_NEXT_50_50_000000_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_AV_SKIP_NEXT_50_50_000000_SVG_ID));
 800ded0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ded4:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800ded8:	681b      	ldr	r3, [r3, #0]
 800deda:	f503 7405 	add.w	r4, r3, #532	; 0x214
 800dede:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800dee2:	2104      	movs	r1, #4
 800dee4:	4618      	mov	r0, r3
 800dee6:	f7fe faa3 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800deea:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800deee:	2104      	movs	r1, #4
 800def0:	4618      	mov	r0, r3
 800def2:	f7fe fa9d 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800def6:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800defa:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800defe:	4619      	mov	r1, r3
 800df00:	4620      	mov	r0, r4
 800df02:	f001 f86c 	bl	800efde <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    skipf_button.setIconXY(0, 0);
 800df06:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800df0a:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800df0e:	681b      	ldr	r3, [r3, #0]
 800df10:	f503 7305 	add.w	r3, r3, #532	; 0x214
 800df14:	2200      	movs	r2, #0
 800df16:	2100      	movs	r1, #0
 800df18:	4618      	mov	r0, r3
 800df1a:	f001 f8ae 	bl	800f07a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE9setIconXYEss>
    skipf_button.setAction(flexButtonCallback);
 800df1e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800df22:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800df26:	681b      	ldr	r3, [r3, #0]
 800df28:	f503 7205 	add.w	r2, r3, #532	; 0x214
 800df2c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800df30:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800df34:	681b      	ldr	r3, [r3, #0]
 800df36:	f503 53ab 	add.w	r3, r3, #5472	; 0x1560
 800df3a:	3304      	adds	r3, #4
 800df3c:	4619      	mov	r1, r3
 800df3e:	4610      	mov	r0, r2
 800df40:	f7fe fe36 	bl	800cbb0 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    skipf_button.setPosition(170, 258, 50, 50);
 800df44:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800df48:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800df4c:	681b      	ldr	r3, [r3, #0]
 800df4e:	f503 7005 	add.w	r0, r3, #532	; 0x214
 800df52:	2332      	movs	r3, #50	; 0x32
 800df54:	9300      	str	r3, [sp, #0]
 800df56:	2332      	movs	r3, #50	; 0x32
 800df58:	f44f 7281 	mov.w	r2, #258	; 0x102
 800df5c:	21aa      	movs	r1, #170	; 0xaa
 800df5e:	f7fe faf1 	bl	800c544 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(skipf_button);
 800df62:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800df66:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800df6a:	681a      	ldr	r2, [r3, #0]
 800df6c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800df70:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800df74:	681b      	ldr	r3, [r3, #0]
 800df76:	f503 7305 	add.w	r3, r3, #532	; 0x214
 800df7a:	4619      	mov	r1, r3
 800df7c:	4610      	mov	r0, r2
 800df7e:	f7fe fcc7 	bl	800c910 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    skipb_button.setBoxWithBorderPosition(0, 0, 50, 50);
 800df82:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800df86:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800df8a:	681b      	ldr	r3, [r3, #0]
 800df8c:	f503 702f 	add.w	r0, r3, #700	; 0x2bc
 800df90:	2332      	movs	r3, #50	; 0x32
 800df92:	9300      	str	r3, [sp, #0]
 800df94:	2332      	movs	r3, #50	; 0x32
 800df96:	2200      	movs	r2, #0
 800df98:	2100      	movs	r1, #0
 800df9a:	f000 ffd1 	bl	800ef40 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE24setBoxWithBorderPositionEssss>
    skipb_button.setBorderSize(5);
 800df9e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800dfa2:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800dfa6:	681b      	ldr	r3, [r3, #0]
 800dfa8:	f503 732f 	add.w	r3, r3, #700	; 0x2bc
 800dfac:	2105      	movs	r1, #5
 800dfae:	4618      	mov	r0, r3
 800dfb0:	f000 ffe6 	bl	800ef80 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE13setBorderSizeEh>
    skipb_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(199, 46, 57), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
 800dfb4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800dfb8:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800dfbc:	681b      	ldr	r3, [r3, #0]
 800dfbe:	f503 742f 	add.w	r4, r3, #700	; 0x2bc
 800dfc2:	23ff      	movs	r3, #255	; 0xff
 800dfc4:	f887 312c 	strb.w	r3, [r7, #300]	; 0x12c
 800dfc8:	23ff      	movs	r3, #255	; 0xff
 800dfca:	f887 312b 	strb.w	r3, [r7, #299]	; 0x12b
 800dfce:	23ff      	movs	r3, #255	; 0xff
 800dfd0:	f887 312a 	strb.w	r3, [r7, #298]	; 0x12a
 800dfd4:	f897 312c 	ldrb.w	r3, [r7, #300]	; 0x12c
 800dfd8:	041b      	lsls	r3, r3, #16
 800dfda:	461a      	mov	r2, r3
 800dfdc:	f897 312b 	ldrb.w	r3, [r7, #299]	; 0x12b
 800dfe0:	021b      	lsls	r3, r3, #8
 800dfe2:	431a      	orrs	r2, r3
 800dfe4:	f897 312a 	ldrb.w	r3, [r7, #298]	; 0x12a
 800dfe8:	4313      	orrs	r3, r2
 800dfea:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dfee:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 800dff2:	4611      	mov	r1, r2
 800dff4:	4618      	mov	r0, r3
 800dff6:	f7fe f9c9 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800dffa:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 800dffe:	461d      	mov	r5, r3
 800e000:	23c7      	movs	r3, #199	; 0xc7
 800e002:	f887 312f 	strb.w	r3, [r7, #303]	; 0x12f
 800e006:	232e      	movs	r3, #46	; 0x2e
 800e008:	f887 312e 	strb.w	r3, [r7, #302]	; 0x12e
 800e00c:	2339      	movs	r3, #57	; 0x39
 800e00e:	f887 312d 	strb.w	r3, [r7, #301]	; 0x12d
 800e012:	f897 312f 	ldrb.w	r3, [r7, #303]	; 0x12f
 800e016:	041b      	lsls	r3, r3, #16
 800e018:	461a      	mov	r2, r3
 800e01a:	f897 312e 	ldrb.w	r3, [r7, #302]	; 0x12e
 800e01e:	021b      	lsls	r3, r3, #8
 800e020:	431a      	orrs	r2, r3
 800e022:	f897 312d 	ldrb.w	r3, [r7, #301]	; 0x12d
 800e026:	4313      	orrs	r3, r2
 800e028:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e02c:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
 800e030:	4611      	mov	r1, r2
 800e032:	4618      	mov	r0, r3
 800e034:	f7fe f9aa 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800e038:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 800e03c:	461e      	mov	r6, r3
 800e03e:	23ff      	movs	r3, #255	; 0xff
 800e040:	f887 3132 	strb.w	r3, [r7, #306]	; 0x132
 800e044:	23ff      	movs	r3, #255	; 0xff
 800e046:	f887 3131 	strb.w	r3, [r7, #305]	; 0x131
 800e04a:	23ff      	movs	r3, #255	; 0xff
 800e04c:	f887 3130 	strb.w	r3, [r7, #304]	; 0x130
 800e050:	f897 3132 	ldrb.w	r3, [r7, #306]	; 0x132
 800e054:	041b      	lsls	r3, r3, #16
 800e056:	461a      	mov	r2, r3
 800e058:	f897 3131 	ldrb.w	r3, [r7, #305]	; 0x131
 800e05c:	021b      	lsls	r3, r3, #8
 800e05e:	431a      	orrs	r2, r3
 800e060:	f897 3130 	ldrb.w	r3, [r7, #304]	; 0x130
 800e064:	4313      	orrs	r3, r2
 800e066:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e06a:	f107 03bc 	add.w	r3, r7, #188	; 0xbc
 800e06e:	4611      	mov	r1, r2
 800e070:	4618      	mov	r0, r3
 800e072:	f7fe f98b 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800e076:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
 800e07a:	4698      	mov	r8, r3
 800e07c:	23ff      	movs	r3, #255	; 0xff
 800e07e:	f887 3135 	strb.w	r3, [r7, #309]	; 0x135
 800e082:	23ff      	movs	r3, #255	; 0xff
 800e084:	f887 3134 	strb.w	r3, [r7, #308]	; 0x134
 800e088:	23ff      	movs	r3, #255	; 0xff
 800e08a:	f887 3133 	strb.w	r3, [r7, #307]	; 0x133
 800e08e:	f897 3135 	ldrb.w	r3, [r7, #309]	; 0x135
 800e092:	041b      	lsls	r3, r3, #16
 800e094:	461a      	mov	r2, r3
 800e096:	f897 3134 	ldrb.w	r3, [r7, #308]	; 0x134
 800e09a:	021b      	lsls	r3, r3, #8
 800e09c:	431a      	orrs	r2, r3
 800e09e:	f897 3133 	ldrb.w	r3, [r7, #307]	; 0x133
 800e0a2:	4313      	orrs	r3, r2
 800e0a4:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e0a8:	f107 03b8 	add.w	r3, r7, #184	; 0xb8
 800e0ac:	4611      	mov	r1, r2
 800e0ae:	4618      	mov	r0, r3
 800e0b0:	f7fe f96c 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800e0b4:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 800e0b8:	9300      	str	r3, [sp, #0]
 800e0ba:	4643      	mov	r3, r8
 800e0bc:	4632      	mov	r2, r6
 800e0be:	4629      	mov	r1, r5
 800e0c0:	4620      	mov	r0, r4
 800e0c2:	f000 ff6f 	bl	800efa4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    skipb_button.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_AV_SKIP_PREVIOUS_50_50_000000_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_AV_SKIP_PREVIOUS_50_50_000000_SVG_ID));
 800e0c6:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e0ca:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e0ce:	681b      	ldr	r3, [r3, #0]
 800e0d0:	f503 742f 	add.w	r4, r3, #700	; 0x2bc
 800e0d4:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800e0d8:	2105      	movs	r1, #5
 800e0da:	4618      	mov	r0, r3
 800e0dc:	f7fe f9a8 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800e0e0:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800e0e4:	2105      	movs	r1, #5
 800e0e6:	4618      	mov	r0, r3
 800e0e8:	f7fe f9a2 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800e0ec:	f107 0250 	add.w	r2, r7, #80	; 0x50
 800e0f0:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800e0f4:	4619      	mov	r1, r3
 800e0f6:	4620      	mov	r0, r4
 800e0f8:	f000 ff71 	bl	800efde <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    skipb_button.setIconXY(0, 0);
 800e0fc:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e100:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e104:	681b      	ldr	r3, [r3, #0]
 800e106:	f503 732f 	add.w	r3, r3, #700	; 0x2bc
 800e10a:	2200      	movs	r2, #0
 800e10c:	2100      	movs	r1, #0
 800e10e:	4618      	mov	r0, r3
 800e110:	f000 ffb3 	bl	800f07a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE9setIconXYEss>
    skipb_button.setAction(flexButtonCallback);
 800e114:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e118:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e11c:	681b      	ldr	r3, [r3, #0]
 800e11e:	f503 722f 	add.w	r2, r3, #700	; 0x2bc
 800e122:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e126:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e12a:	681b      	ldr	r3, [r3, #0]
 800e12c:	f503 53ab 	add.w	r3, r3, #5472	; 0x1560
 800e130:	3304      	adds	r3, #4
 800e132:	4619      	mov	r1, r3
 800e134:	4610      	mov	r0, r2
 800e136:	f7fe fd3b 	bl	800cbb0 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    skipb_button.setPosition(20, 258, 50, 50);
 800e13a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e13e:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e142:	681b      	ldr	r3, [r3, #0]
 800e144:	f503 702f 	add.w	r0, r3, #700	; 0x2bc
 800e148:	2332      	movs	r3, #50	; 0x32
 800e14a:	9300      	str	r3, [sp, #0]
 800e14c:	2332      	movs	r3, #50	; 0x32
 800e14e:	f44f 7281 	mov.w	r2, #258	; 0x102
 800e152:	2114      	movs	r1, #20
 800e154:	f7fe f9f6 	bl	800c544 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(skipb_button);
 800e158:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e15c:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e160:	681a      	ldr	r2, [r3, #0]
 800e162:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e166:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e16a:	681b      	ldr	r3, [r3, #0]
 800e16c:	f503 732f 	add.w	r3, r3, #700	; 0x2bc
 800e170:	4619      	mov	r1, r3
 800e172:	4610      	mov	r0, r2
 800e174:	f7fe fbcc 	bl	800c910 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    power.setBoxWithBorderPosition(0, 0, 50, 50);
 800e178:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e17c:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e180:	681b      	ldr	r3, [r3, #0]
 800e182:	f503 7059 	add.w	r0, r3, #868	; 0x364
 800e186:	2332      	movs	r3, #50	; 0x32
 800e188:	9300      	str	r3, [sp, #0]
 800e18a:	2332      	movs	r3, #50	; 0x32
 800e18c:	2200      	movs	r2, #0
 800e18e:	2100      	movs	r1, #0
 800e190:	f000 fed6 	bl	800ef40 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE24setBoxWithBorderPositionEssss>
    power.setBorderSize(5);
 800e194:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e198:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e19c:	681b      	ldr	r3, [r3, #0]
 800e19e:	f503 7359 	add.w	r3, r3, #868	; 0x364
 800e1a2:	2105      	movs	r1, #5
 800e1a4:	4618      	mov	r0, r3
 800e1a6:	f000 feeb 	bl	800ef80 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE13setBorderSizeEh>
    power.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(199, 46, 57), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
 800e1aa:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e1ae:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e1b2:	681b      	ldr	r3, [r3, #0]
 800e1b4:	f503 7459 	add.w	r4, r3, #868	; 0x364
 800e1b8:	23ff      	movs	r3, #255	; 0xff
 800e1ba:	f887 3138 	strb.w	r3, [r7, #312]	; 0x138
 800e1be:	23ff      	movs	r3, #255	; 0xff
 800e1c0:	f887 3137 	strb.w	r3, [r7, #311]	; 0x137
 800e1c4:	23ff      	movs	r3, #255	; 0xff
 800e1c6:	f887 3136 	strb.w	r3, [r7, #310]	; 0x136
 800e1ca:	f897 3138 	ldrb.w	r3, [r7, #312]	; 0x138
 800e1ce:	041b      	lsls	r3, r3, #16
 800e1d0:	461a      	mov	r2, r3
 800e1d2:	f897 3137 	ldrb.w	r3, [r7, #311]	; 0x137
 800e1d6:	021b      	lsls	r3, r3, #8
 800e1d8:	431a      	orrs	r2, r3
 800e1da:	f897 3136 	ldrb.w	r3, [r7, #310]	; 0x136
 800e1de:	4313      	orrs	r3, r2
 800e1e0:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e1e4:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800e1e8:	4611      	mov	r1, r2
 800e1ea:	4618      	mov	r0, r3
 800e1ec:	f7fe f8ce 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800e1f0:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 800e1f4:	461d      	mov	r5, r3
 800e1f6:	23c7      	movs	r3, #199	; 0xc7
 800e1f8:	f887 313b 	strb.w	r3, [r7, #315]	; 0x13b
 800e1fc:	232e      	movs	r3, #46	; 0x2e
 800e1fe:	f887 313a 	strb.w	r3, [r7, #314]	; 0x13a
 800e202:	2339      	movs	r3, #57	; 0x39
 800e204:	f887 3139 	strb.w	r3, [r7, #313]	; 0x139
 800e208:	f897 313b 	ldrb.w	r3, [r7, #315]	; 0x13b
 800e20c:	041b      	lsls	r3, r3, #16
 800e20e:	461a      	mov	r2, r3
 800e210:	f897 313a 	ldrb.w	r3, [r7, #314]	; 0x13a
 800e214:	021b      	lsls	r3, r3, #8
 800e216:	431a      	orrs	r2, r3
 800e218:	f897 3139 	ldrb.w	r3, [r7, #313]	; 0x139
 800e21c:	4313      	orrs	r3, r2
 800e21e:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e222:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
 800e226:	4611      	mov	r1, r2
 800e228:	4618      	mov	r0, r3
 800e22a:	f7fe f8af 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800e22e:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 800e232:	461e      	mov	r6, r3
 800e234:	23ff      	movs	r3, #255	; 0xff
 800e236:	f887 313e 	strb.w	r3, [r7, #318]	; 0x13e
 800e23a:	23ff      	movs	r3, #255	; 0xff
 800e23c:	f887 313d 	strb.w	r3, [r7, #317]	; 0x13d
 800e240:	23ff      	movs	r3, #255	; 0xff
 800e242:	f887 313c 	strb.w	r3, [r7, #316]	; 0x13c
 800e246:	f897 313e 	ldrb.w	r3, [r7, #318]	; 0x13e
 800e24a:	041b      	lsls	r3, r3, #16
 800e24c:	461a      	mov	r2, r3
 800e24e:	f897 313d 	ldrb.w	r3, [r7, #317]	; 0x13d
 800e252:	021b      	lsls	r3, r3, #8
 800e254:	431a      	orrs	r2, r3
 800e256:	f897 313c 	ldrb.w	r3, [r7, #316]	; 0x13c
 800e25a:	4313      	orrs	r3, r2
 800e25c:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e260:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 800e264:	4611      	mov	r1, r2
 800e266:	4618      	mov	r0, r3
 800e268:	f7fe f890 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800e26c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800e270:	4698      	mov	r8, r3
 800e272:	23ff      	movs	r3, #255	; 0xff
 800e274:	f887 3141 	strb.w	r3, [r7, #321]	; 0x141
 800e278:	23ff      	movs	r3, #255	; 0xff
 800e27a:	f887 3140 	strb.w	r3, [r7, #320]	; 0x140
 800e27e:	23ff      	movs	r3, #255	; 0xff
 800e280:	f887 313f 	strb.w	r3, [r7, #319]	; 0x13f
 800e284:	f897 3141 	ldrb.w	r3, [r7, #321]	; 0x141
 800e288:	041b      	lsls	r3, r3, #16
 800e28a:	461a      	mov	r2, r3
 800e28c:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 800e290:	021b      	lsls	r3, r3, #8
 800e292:	431a      	orrs	r2, r3
 800e294:	f897 313f 	ldrb.w	r3, [r7, #319]	; 0x13f
 800e298:	4313      	orrs	r3, r2
 800e29a:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e29e:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 800e2a2:	4611      	mov	r1, r2
 800e2a4:	4618      	mov	r0, r3
 800e2a6:	f7fe f871 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800e2aa:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 800e2ae:	9300      	str	r3, [sp, #0]
 800e2b0:	4643      	mov	r3, r8
 800e2b2:	4632      	mov	r2, r6
 800e2b4:	4629      	mov	r1, r5
 800e2b6:	4620      	mov	r0, r4
 800e2b8:	f000 fe74 	bl	800efa4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    power.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_POWER_SETTINGS_NEW_50_50_000000_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_POWER_SETTINGS_NEW_50_50_000000_SVG_ID));
 800e2bc:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e2c0:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e2c4:	681b      	ldr	r3, [r3, #0]
 800e2c6:	f503 7459 	add.w	r4, r3, #868	; 0x364
 800e2ca:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800e2ce:	2101      	movs	r1, #1
 800e2d0:	4618      	mov	r0, r3
 800e2d2:	f7fe f8ad 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800e2d6:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800e2da:	2101      	movs	r1, #1
 800e2dc:	4618      	mov	r0, r3
 800e2de:	f7fe f8a7 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800e2e2:	f107 0258 	add.w	r2, r7, #88	; 0x58
 800e2e6:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800e2ea:	4619      	mov	r1, r3
 800e2ec:	4620      	mov	r0, r4
 800e2ee:	f000 fe76 	bl	800efde <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    power.setIconXY(0, 0);
 800e2f2:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e2f6:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e2fa:	681b      	ldr	r3, [r3, #0]
 800e2fc:	f503 7359 	add.w	r3, r3, #868	; 0x364
 800e300:	2200      	movs	r2, #0
 800e302:	2100      	movs	r1, #0
 800e304:	4618      	mov	r0, r3
 800e306:	f000 feb8 	bl	800f07a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE9setIconXYEss>
    power.setPosition(190, 0, 50, 50);
 800e30a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e30e:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e312:	681b      	ldr	r3, [r3, #0]
 800e314:	f503 7059 	add.w	r0, r3, #868	; 0x364
 800e318:	2332      	movs	r3, #50	; 0x32
 800e31a:	9300      	str	r3, [sp, #0]
 800e31c:	2332      	movs	r3, #50	; 0x32
 800e31e:	2200      	movs	r2, #0
 800e320:	21be      	movs	r1, #190	; 0xbe
 800e322:	f7fe f90f 	bl	800c544 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(power);
 800e326:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e32a:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e32e:	681a      	ldr	r2, [r3, #0]
 800e330:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e334:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e338:	681b      	ldr	r3, [r3, #0]
 800e33a:	f503 7359 	add.w	r3, r3, #868	; 0x364
 800e33e:	4619      	mov	r1, r3
 800e340:	4610      	mov	r0, r2
 800e342:	f7fe fae5 	bl	800c910 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    vol_up_button.setBoxWithBorderPosition(0, 0, 50, 50);
 800e346:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e34a:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e34e:	681b      	ldr	r3, [r3, #0]
 800e350:	f203 400c 	addw	r0, r3, #1036	; 0x40c
 800e354:	2332      	movs	r3, #50	; 0x32
 800e356:	9300      	str	r3, [sp, #0]
 800e358:	2332      	movs	r3, #50	; 0x32
 800e35a:	2200      	movs	r2, #0
 800e35c:	2100      	movs	r1, #0
 800e35e:	f000 fdef 	bl	800ef40 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE24setBoxWithBorderPositionEssss>
    vol_up_button.setBorderSize(5);
 800e362:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e366:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e36a:	681b      	ldr	r3, [r3, #0]
 800e36c:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 800e370:	2105      	movs	r1, #5
 800e372:	4618      	mov	r0, r3
 800e374:	f000 fe04 	bl	800ef80 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE13setBorderSizeEh>
    vol_up_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(199, 46, 57), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
 800e378:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e37c:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e380:	681b      	ldr	r3, [r3, #0]
 800e382:	f203 440c 	addw	r4, r3, #1036	; 0x40c
 800e386:	23ff      	movs	r3, #255	; 0xff
 800e388:	f887 3144 	strb.w	r3, [r7, #324]	; 0x144
 800e38c:	23ff      	movs	r3, #255	; 0xff
 800e38e:	f887 3143 	strb.w	r3, [r7, #323]	; 0x143
 800e392:	23ff      	movs	r3, #255	; 0xff
 800e394:	f887 3142 	strb.w	r3, [r7, #322]	; 0x142
 800e398:	f897 3144 	ldrb.w	r3, [r7, #324]	; 0x144
 800e39c:	041b      	lsls	r3, r3, #16
 800e39e:	461a      	mov	r2, r3
 800e3a0:	f897 3143 	ldrb.w	r3, [r7, #323]	; 0x143
 800e3a4:	021b      	lsls	r3, r3, #8
 800e3a6:	431a      	orrs	r2, r3
 800e3a8:	f897 3142 	ldrb.w	r3, [r7, #322]	; 0x142
 800e3ac:	4313      	orrs	r3, r2
 800e3ae:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e3b2:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 800e3b6:	4611      	mov	r1, r2
 800e3b8:	4618      	mov	r0, r3
 800e3ba:	f7fd ffe7 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800e3be:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800e3c2:	461d      	mov	r5, r3
 800e3c4:	23c7      	movs	r3, #199	; 0xc7
 800e3c6:	f887 3147 	strb.w	r3, [r7, #327]	; 0x147
 800e3ca:	232e      	movs	r3, #46	; 0x2e
 800e3cc:	f887 3146 	strb.w	r3, [r7, #326]	; 0x146
 800e3d0:	2339      	movs	r3, #57	; 0x39
 800e3d2:	f887 3145 	strb.w	r3, [r7, #325]	; 0x145
 800e3d6:	f897 3147 	ldrb.w	r3, [r7, #327]	; 0x147
 800e3da:	041b      	lsls	r3, r3, #16
 800e3dc:	461a      	mov	r2, r3
 800e3de:	f897 3146 	ldrb.w	r3, [r7, #326]	; 0x146
 800e3e2:	021b      	lsls	r3, r3, #8
 800e3e4:	431a      	orrs	r2, r3
 800e3e6:	f897 3145 	ldrb.w	r3, [r7, #325]	; 0x145
 800e3ea:	4313      	orrs	r3, r2
 800e3ec:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e3f0:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800e3f4:	4611      	mov	r1, r2
 800e3f6:	4618      	mov	r0, r3
 800e3f8:	f7fd ffc8 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800e3fc:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800e400:	461e      	mov	r6, r3
 800e402:	23ff      	movs	r3, #255	; 0xff
 800e404:	f887 314a 	strb.w	r3, [r7, #330]	; 0x14a
 800e408:	23ff      	movs	r3, #255	; 0xff
 800e40a:	f887 3149 	strb.w	r3, [r7, #329]	; 0x149
 800e40e:	23ff      	movs	r3, #255	; 0xff
 800e410:	f887 3148 	strb.w	r3, [r7, #328]	; 0x148
 800e414:	f897 314a 	ldrb.w	r3, [r7, #330]	; 0x14a
 800e418:	041b      	lsls	r3, r3, #16
 800e41a:	461a      	mov	r2, r3
 800e41c:	f897 3149 	ldrb.w	r3, [r7, #329]	; 0x149
 800e420:	021b      	lsls	r3, r3, #8
 800e422:	431a      	orrs	r2, r3
 800e424:	f897 3148 	ldrb.w	r3, [r7, #328]	; 0x148
 800e428:	4313      	orrs	r3, r2
 800e42a:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e42e:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 800e432:	4611      	mov	r1, r2
 800e434:	4618      	mov	r0, r3
 800e436:	f7fd ffa9 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800e43a:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800e43e:	4698      	mov	r8, r3
 800e440:	23ff      	movs	r3, #255	; 0xff
 800e442:	f887 314d 	strb.w	r3, [r7, #333]	; 0x14d
 800e446:	23ff      	movs	r3, #255	; 0xff
 800e448:	f887 314c 	strb.w	r3, [r7, #332]	; 0x14c
 800e44c:	23ff      	movs	r3, #255	; 0xff
 800e44e:	f887 314b 	strb.w	r3, [r7, #331]	; 0x14b
 800e452:	f897 314d 	ldrb.w	r3, [r7, #333]	; 0x14d
 800e456:	041b      	lsls	r3, r3, #16
 800e458:	461a      	mov	r2, r3
 800e45a:	f897 314c 	ldrb.w	r3, [r7, #332]	; 0x14c
 800e45e:	021b      	lsls	r3, r3, #8
 800e460:	431a      	orrs	r2, r3
 800e462:	f897 314b 	ldrb.w	r3, [r7, #331]	; 0x14b
 800e466:	4313      	orrs	r3, r2
 800e468:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e46c:	f107 0398 	add.w	r3, r7, #152	; 0x98
 800e470:	4611      	mov	r1, r2
 800e472:	4618      	mov	r0, r3
 800e474:	f7fd ff8a 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800e478:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800e47c:	9300      	str	r3, [sp, #0]
 800e47e:	4643      	mov	r3, r8
 800e480:	4632      	mov	r2, r6
 800e482:	4629      	mov	r1, r5
 800e484:	4620      	mov	r0, r4
 800e486:	f000 fd8d 	bl	800efa4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    vol_up_button.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_ADD_50_50_000000_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_ADD_50_50_000000_SVG_ID));
 800e48a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e48e:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e492:	681b      	ldr	r3, [r3, #0]
 800e494:	f203 440c 	addw	r4, r3, #1036	; 0x40c
 800e498:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800e49c:	2106      	movs	r1, #6
 800e49e:	4618      	mov	r0, r3
 800e4a0:	f7fd ffc6 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800e4a4:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800e4a8:	2106      	movs	r1, #6
 800e4aa:	4618      	mov	r0, r3
 800e4ac:	f7fd ffc0 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800e4b0:	f107 0260 	add.w	r2, r7, #96	; 0x60
 800e4b4:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800e4b8:	4619      	mov	r1, r3
 800e4ba:	4620      	mov	r0, r4
 800e4bc:	f000 fd8f 	bl	800efde <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    vol_up_button.setIconXY(0, 0);
 800e4c0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e4c4:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e4c8:	681b      	ldr	r3, [r3, #0]
 800e4ca:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 800e4ce:	2200      	movs	r2, #0
 800e4d0:	2100      	movs	r1, #0
 800e4d2:	4618      	mov	r0, r3
 800e4d4:	f000 fdd1 	bl	800f07a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE9setIconXYEss>
    vol_up_button.setAction(flexButtonCallback);
 800e4d8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e4dc:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e4e0:	681b      	ldr	r3, [r3, #0]
 800e4e2:	f203 420c 	addw	r2, r3, #1036	; 0x40c
 800e4e6:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e4ea:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e4ee:	681b      	ldr	r3, [r3, #0]
 800e4f0:	f503 53ab 	add.w	r3, r3, #5472	; 0x1560
 800e4f4:	3304      	adds	r3, #4
 800e4f6:	4619      	mov	r1, r3
 800e4f8:	4610      	mov	r0, r2
 800e4fa:	f7fe fb59 	bl	800cbb0 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    vol_up_button.setPosition(0, 0, 50, 50);
 800e4fe:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e502:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e506:	681b      	ldr	r3, [r3, #0]
 800e508:	f203 400c 	addw	r0, r3, #1036	; 0x40c
 800e50c:	2332      	movs	r3, #50	; 0x32
 800e50e:	9300      	str	r3, [sp, #0]
 800e510:	2332      	movs	r3, #50	; 0x32
 800e512:	2200      	movs	r2, #0
 800e514:	2100      	movs	r1, #0
 800e516:	f7fe f815 	bl	800c544 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(vol_up_button);
 800e51a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e51e:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e522:	681a      	ldr	r2, [r3, #0]
 800e524:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e528:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e52c:	681b      	ldr	r3, [r3, #0]
 800e52e:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 800e532:	4619      	mov	r1, r3
 800e534:	4610      	mov	r0, r2
 800e536:	f7fe f9eb 	bl	800c910 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    vol_down_button.setBoxWithBorderPosition(0, 0, 50, 50);
 800e53a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e53e:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e542:	681b      	ldr	r3, [r3, #0]
 800e544:	f203 40b4 	addw	r0, r3, #1204	; 0x4b4
 800e548:	2332      	movs	r3, #50	; 0x32
 800e54a:	9300      	str	r3, [sp, #0]
 800e54c:	2332      	movs	r3, #50	; 0x32
 800e54e:	2200      	movs	r2, #0
 800e550:	2100      	movs	r1, #0
 800e552:	f000 fdaa 	bl	800f0aa <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    vol_down_button.setBorderSize(5);
 800e556:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e55a:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e55e:	681b      	ldr	r3, [r3, #0]
 800e560:	f203 43b4 	addw	r3, r3, #1204	; 0x4b4
 800e564:	2105      	movs	r1, #5
 800e566:	4618      	mov	r0, r3
 800e568:	f000 fdbf 	bl	800f0ea <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    vol_down_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(199, 46, 57), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
 800e56c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e570:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e574:	681b      	ldr	r3, [r3, #0]
 800e576:	f203 44b4 	addw	r4, r3, #1204	; 0x4b4
 800e57a:	23ff      	movs	r3, #255	; 0xff
 800e57c:	f887 3150 	strb.w	r3, [r7, #336]	; 0x150
 800e580:	23ff      	movs	r3, #255	; 0xff
 800e582:	f887 314f 	strb.w	r3, [r7, #335]	; 0x14f
 800e586:	23ff      	movs	r3, #255	; 0xff
 800e588:	f887 314e 	strb.w	r3, [r7, #334]	; 0x14e
 800e58c:	f897 3150 	ldrb.w	r3, [r7, #336]	; 0x150
 800e590:	041b      	lsls	r3, r3, #16
 800e592:	461a      	mov	r2, r3
 800e594:	f897 314f 	ldrb.w	r3, [r7, #335]	; 0x14f
 800e598:	021b      	lsls	r3, r3, #8
 800e59a:	431a      	orrs	r2, r3
 800e59c:	f897 314e 	ldrb.w	r3, [r7, #334]	; 0x14e
 800e5a0:	4313      	orrs	r3, r2
 800e5a2:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e5a6:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800e5aa:	4611      	mov	r1, r2
 800e5ac:	4618      	mov	r0, r3
 800e5ae:	f7fd feed 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800e5b2:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800e5b6:	461d      	mov	r5, r3
 800e5b8:	23c7      	movs	r3, #199	; 0xc7
 800e5ba:	f887 3153 	strb.w	r3, [r7, #339]	; 0x153
 800e5be:	232e      	movs	r3, #46	; 0x2e
 800e5c0:	f887 3152 	strb.w	r3, [r7, #338]	; 0x152
 800e5c4:	2339      	movs	r3, #57	; 0x39
 800e5c6:	f887 3151 	strb.w	r3, [r7, #337]	; 0x151
 800e5ca:	f897 3153 	ldrb.w	r3, [r7, #339]	; 0x153
 800e5ce:	041b      	lsls	r3, r3, #16
 800e5d0:	461a      	mov	r2, r3
 800e5d2:	f897 3152 	ldrb.w	r3, [r7, #338]	; 0x152
 800e5d6:	021b      	lsls	r3, r3, #8
 800e5d8:	431a      	orrs	r2, r3
 800e5da:	f897 3151 	ldrb.w	r3, [r7, #337]	; 0x151
 800e5de:	4313      	orrs	r3, r2
 800e5e0:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e5e4:	f107 0390 	add.w	r3, r7, #144	; 0x90
 800e5e8:	4611      	mov	r1, r2
 800e5ea:	4618      	mov	r0, r3
 800e5ec:	f7fd fece 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800e5f0:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800e5f4:	461e      	mov	r6, r3
 800e5f6:	23ff      	movs	r3, #255	; 0xff
 800e5f8:	f887 3156 	strb.w	r3, [r7, #342]	; 0x156
 800e5fc:	23ff      	movs	r3, #255	; 0xff
 800e5fe:	f887 3155 	strb.w	r3, [r7, #341]	; 0x155
 800e602:	23ff      	movs	r3, #255	; 0xff
 800e604:	f887 3154 	strb.w	r3, [r7, #340]	; 0x154
 800e608:	f897 3156 	ldrb.w	r3, [r7, #342]	; 0x156
 800e60c:	041b      	lsls	r3, r3, #16
 800e60e:	461a      	mov	r2, r3
 800e610:	f897 3155 	ldrb.w	r3, [r7, #341]	; 0x155
 800e614:	021b      	lsls	r3, r3, #8
 800e616:	431a      	orrs	r2, r3
 800e618:	f897 3154 	ldrb.w	r3, [r7, #340]	; 0x154
 800e61c:	4313      	orrs	r3, r2
 800e61e:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e622:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 800e626:	4611      	mov	r1, r2
 800e628:	4618      	mov	r0, r3
 800e62a:	f7fd feaf 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800e62e:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800e632:	4698      	mov	r8, r3
 800e634:	23ff      	movs	r3, #255	; 0xff
 800e636:	f887 3159 	strb.w	r3, [r7, #345]	; 0x159
 800e63a:	23ff      	movs	r3, #255	; 0xff
 800e63c:	f887 3158 	strb.w	r3, [r7, #344]	; 0x158
 800e640:	23ff      	movs	r3, #255	; 0xff
 800e642:	f887 3157 	strb.w	r3, [r7, #343]	; 0x157
 800e646:	f897 3159 	ldrb.w	r3, [r7, #345]	; 0x159
 800e64a:	041b      	lsls	r3, r3, #16
 800e64c:	461a      	mov	r2, r3
 800e64e:	f897 3158 	ldrb.w	r3, [r7, #344]	; 0x158
 800e652:	021b      	lsls	r3, r3, #8
 800e654:	431a      	orrs	r2, r3
 800e656:	f897 3157 	ldrb.w	r3, [r7, #343]	; 0x157
 800e65a:	4313      	orrs	r3, r2
 800e65c:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e660:	f107 0388 	add.w	r3, r7, #136	; 0x88
 800e664:	4611      	mov	r1, r2
 800e666:	4618      	mov	r0, r3
 800e668:	f7fd fe90 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800e66c:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800e670:	9300      	str	r3, [sp, #0]
 800e672:	4643      	mov	r3, r8
 800e674:	4632      	mov	r2, r6
 800e676:	4629      	mov	r1, r5
 800e678:	4620      	mov	r0, r4
 800e67a:	f000 fd48 	bl	800f10e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    vol_down_button.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_REMOVE_50_50_000000_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_REMOVE_50_50_000000_SVG_ID));
 800e67e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e682:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e686:	681b      	ldr	r3, [r3, #0]
 800e688:	f203 44b4 	addw	r4, r3, #1204	; 0x4b4
 800e68c:	f107 0364 	add.w	r3, r7, #100	; 0x64
 800e690:	2107      	movs	r1, #7
 800e692:	4618      	mov	r0, r3
 800e694:	f7fd fecc 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800e698:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800e69c:	2107      	movs	r1, #7
 800e69e:	4618      	mov	r0, r3
 800e6a0:	f7fd fec6 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800e6a4:	f107 0268 	add.w	r2, r7, #104	; 0x68
 800e6a8:	f107 0364 	add.w	r3, r7, #100	; 0x64
 800e6ac:	4619      	mov	r1, r3
 800e6ae:	4620      	mov	r0, r4
 800e6b0:	f000 fd4a 	bl	800f148 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    vol_down_button.setIconXY(0, 0);
 800e6b4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e6b8:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e6bc:	681b      	ldr	r3, [r3, #0]
 800e6be:	f203 43b4 	addw	r3, r3, #1204	; 0x4b4
 800e6c2:	2200      	movs	r2, #0
 800e6c4:	2100      	movs	r1, #0
 800e6c6:	4618      	mov	r0, r3
 800e6c8:	f000 fd8c 	bl	800f1e4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE9setIconXYEss>
    vol_down_button.setAction(flexButtonCallback);
 800e6cc:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e6d0:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e6d4:	681b      	ldr	r3, [r3, #0]
 800e6d6:	f203 42b4 	addw	r2, r3, #1204	; 0x4b4
 800e6da:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e6de:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e6e2:	681b      	ldr	r3, [r3, #0]
 800e6e4:	f503 53ab 	add.w	r3, r3, #5472	; 0x1560
 800e6e8:	3304      	adds	r3, #4
 800e6ea:	4619      	mov	r1, r3
 800e6ec:	4610      	mov	r0, r2
 800e6ee:	f7fe fa5f 	bl	800cbb0 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    vol_down_button.setPosition(0, 50, 50, 50);
 800e6f2:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e6f6:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e6fa:	681b      	ldr	r3, [r3, #0]
 800e6fc:	f203 40b4 	addw	r0, r3, #1204	; 0x4b4
 800e700:	2332      	movs	r3, #50	; 0x32
 800e702:	9300      	str	r3, [sp, #0]
 800e704:	2332      	movs	r3, #50	; 0x32
 800e706:	2232      	movs	r2, #50	; 0x32
 800e708:	2100      	movs	r1, #0
 800e70a:	f7fd ff1b 	bl	800c544 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(vol_down_button);
 800e70e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e712:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e716:	681a      	ldr	r2, [r3, #0]
 800e718:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e71c:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e720:	681b      	ldr	r3, [r3, #0]
 800e722:	f203 43b4 	addw	r3, r3, #1204	; 0x4b4
 800e726:	4619      	mov	r1, r3
 800e728:	4610      	mov	r0, r2
 800e72a:	f7fe f8f1 	bl	800c910 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    lineProgress1.setXY(20, 237);
 800e72e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e732:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e736:	681b      	ldr	r3, [r3, #0]
 800e738:	f203 535c 	addw	r3, r3, #1372	; 0x55c
 800e73c:	22ed      	movs	r2, #237	; 0xed
 800e73e:	2114      	movs	r1, #20
 800e740:	4618      	mov	r0, r3
 800e742:	f7fd ff58 	bl	800c5f6 <_ZN8touchgfx8Drawable5setXYEss>
    lineProgress1.setProgressIndicatorPosition(0, 0, 200, 10);
 800e746:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e74a:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e74e:	681b      	ldr	r3, [r3, #0]
 800e750:	f203 505c 	addw	r0, r3, #1372	; 0x55c
 800e754:	230a      	movs	r3, #10
 800e756:	9300      	str	r3, [sp, #0]
 800e758:	23c8      	movs	r3, #200	; 0xc8
 800e75a:	2200      	movs	r2, #0
 800e75c:	2100      	movs	r1, #0
 800e75e:	f003 fbe0 	bl	8011f22 <_ZN8touchgfx12LineProgress28setProgressIndicatorPositionEssss>
    lineProgress1.setRange(0, 100, 10, 0);
 800e762:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e766:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e76a:	681b      	ldr	r3, [r3, #0]
 800e76c:	f203 505c 	addw	r0, r3, #1372	; 0x55c
 800e770:	2300      	movs	r3, #0
 800e772:	9300      	str	r3, [sp, #0]
 800e774:	230a      	movs	r3, #10
 800e776:	2264      	movs	r2, #100	; 0x64
 800e778:	2100      	movs	r1, #0
 800e77a:	f003 fc1d 	bl	8011fb8 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    lineProgress1.setBackground(touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_LINEPROGRESS_BACKGROUNDS_LINE_NORMAL_SMALL_0_ID));
 800e77e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e782:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e786:	681b      	ldr	r3, [r3, #0]
 800e788:	f203 545c 	addw	r4, r3, #1372	; 0x55c
 800e78c:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 800e790:	2108      	movs	r1, #8
 800e792:	4618      	mov	r0, r3
 800e794:	f7fd fe4c 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800e798:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 800e79c:	4619      	mov	r1, r3
 800e79e:	4620      	mov	r0, r4
 800e7a0:	f003 fd30 	bl	8012204 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    lineProgress1Painter.setColor(touchgfx::Color::getColorFromRGB(199, 46, 57));
 800e7a4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e7a8:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e7ac:	681b      	ldr	r3, [r3, #0]
 800e7ae:	f503 64d2 	add.w	r4, r3, #1680	; 0x690
 800e7b2:	23c7      	movs	r3, #199	; 0xc7
 800e7b4:	f887 315c 	strb.w	r3, [r7, #348]	; 0x15c
 800e7b8:	232e      	movs	r3, #46	; 0x2e
 800e7ba:	f887 315b 	strb.w	r3, [r7, #347]	; 0x15b
 800e7be:	2339      	movs	r3, #57	; 0x39
 800e7c0:	f887 315a 	strb.w	r3, [r7, #346]	; 0x15a
 800e7c4:	f897 315c 	ldrb.w	r3, [r7, #348]	; 0x15c
 800e7c8:	041b      	lsls	r3, r3, #16
 800e7ca:	461a      	mov	r2, r3
 800e7cc:	f897 315b 	ldrb.w	r3, [r7, #347]	; 0x15b
 800e7d0:	021b      	lsls	r3, r3, #8
 800e7d2:	431a      	orrs	r2, r3
 800e7d4:	f897 315a 	ldrb.w	r3, [r7, #346]	; 0x15a
 800e7d8:	4313      	orrs	r3, r2
 800e7da:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e7de:	f107 0384 	add.w	r3, r7, #132	; 0x84
 800e7e2:	4611      	mov	r1, r2
 800e7e4:	4618      	mov	r0, r3
 800e7e6:	f7fd fdd1 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800e7ea:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800e7ee:	4619      	mov	r1, r3
 800e7f0:	4620      	mov	r0, r4
 800e7f2:	f7fe fe97 	bl	800d524 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    lineProgress1.setPainter(lineProgress1Painter);
 800e7f6:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e7fa:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e7fe:	681b      	ldr	r3, [r3, #0]
 800e800:	f203 525c 	addw	r2, r3, #1372	; 0x55c
 800e804:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e808:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e80c:	681b      	ldr	r3, [r3, #0]
 800e80e:	f503 63d2 	add.w	r3, r3, #1680	; 0x690
 800e812:	4619      	mov	r1, r3
 800e814:	4610      	mov	r0, r2
 800e816:	f003 faf9 	bl	8011e0c <_ZN8touchgfx12LineProgress10setPainterERNS_15AbstractPainterE>
    lineProgress1.setStart(0, 5);
 800e81a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e81e:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e822:	681b      	ldr	r3, [r3, #0]
 800e824:	f203 535c 	addw	r3, r3, #1372	; 0x55c
 800e828:	2205      	movs	r2, #5
 800e82a:	2100      	movs	r1, #0
 800e82c:	4618      	mov	r0, r3
 800e82e:	f003 fb17 	bl	8011e60 <_ZN8touchgfx12LineProgress8setStartEii>
    lineProgress1.setEnd(200, 5);
 800e832:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e836:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e83a:	681b      	ldr	r3, [r3, #0]
 800e83c:	f203 535c 	addw	r3, r3, #1372	; 0x55c
 800e840:	2205      	movs	r2, #5
 800e842:	21c8      	movs	r1, #200	; 0xc8
 800e844:	4618      	mov	r0, r3
 800e846:	f003 faf1 	bl	8011e2c <_ZN8touchgfx12LineProgress6setEndEii>
    lineProgress1.setLineWidth(10);
 800e84a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e84e:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e852:	681b      	ldr	r3, [r3, #0]
 800e854:	f203 535c 	addw	r3, r3, #1372	; 0x55c
 800e858:	210a      	movs	r1, #10
 800e85a:	4618      	mov	r0, r3
 800e85c:	f003 fb09 	bl	8011e72 <_ZN8touchgfx12LineProgress12setLineWidthEi>
    lineProgress1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 800e860:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e864:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e868:	681b      	ldr	r3, [r3, #0]
 800e86a:	f203 535c 	addw	r3, r3, #1372	; 0x55c
 800e86e:	2100      	movs	r1, #0
 800e870:	4618      	mov	r0, r3
 800e872:	f003 fb09 	bl	8011e88 <_ZN8touchgfx12LineProgress18setLineEndingStyleENS_4Line17LINE_ENDING_STYLEE>
    lineProgress1.setValue(0);
 800e876:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e87a:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e87e:	681b      	ldr	r3, [r3, #0]
 800e880:	f203 535c 	addw	r3, r3, #1372	; 0x55c
 800e884:	2100      	movs	r1, #0
 800e886:	4618      	mov	r0, r3
 800e888:	f003 fb0c 	bl	8011ea4 <_ZN8touchgfx12LineProgress8setValueEi>
    add(lineProgress1);
 800e88c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e890:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e894:	681a      	ldr	r2, [r3, #0]
 800e896:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e89a:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e89e:	681b      	ldr	r3, [r3, #0]
 800e8a0:	f203 535c 	addw	r3, r3, #1372	; 0x55c
 800e8a4:	4619      	mov	r1, r3
 800e8a6:	4610      	mov	r0, r2
 800e8a8:	f7fe f832 	bl	800c910 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    song_text_area.setXY(106, 216);
 800e8ac:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e8b0:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e8b4:	681b      	ldr	r3, [r3, #0]
 800e8b6:	f203 63a4 	addw	r3, r3, #1700	; 0x6a4
 800e8ba:	22d8      	movs	r2, #216	; 0xd8
 800e8bc:	216a      	movs	r1, #106	; 0x6a
 800e8be:	4618      	mov	r0, r3
 800e8c0:	f7fd fe99 	bl	800c5f6 <_ZN8touchgfx8Drawable5setXYEss>
    song_text_area.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800e8c4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e8c8:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e8cc:	681b      	ldr	r3, [r3, #0]
 800e8ce:	f203 64a4 	addw	r4, r3, #1700	; 0x6a4
 800e8d2:	2300      	movs	r3, #0
 800e8d4:	f887 315f 	strb.w	r3, [r7, #351]	; 0x15f
 800e8d8:	2300      	movs	r3, #0
 800e8da:	f887 315e 	strb.w	r3, [r7, #350]	; 0x15e
 800e8de:	2300      	movs	r3, #0
 800e8e0:	f887 315d 	strb.w	r3, [r7, #349]	; 0x15d
 800e8e4:	f897 315f 	ldrb.w	r3, [r7, #351]	; 0x15f
 800e8e8:	041b      	lsls	r3, r3, #16
 800e8ea:	461a      	mov	r2, r3
 800e8ec:	f897 315e 	ldrb.w	r3, [r7, #350]	; 0x15e
 800e8f0:	021b      	lsls	r3, r3, #8
 800e8f2:	431a      	orrs	r2, r3
 800e8f4:	f897 315d 	ldrb.w	r3, [r7, #349]	; 0x15d
 800e8f8:	4313      	orrs	r3, r2
 800e8fa:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e8fe:	f107 0380 	add.w	r3, r7, #128	; 0x80
 800e902:	4611      	mov	r1, r2
 800e904:	4618      	mov	r0, r3
 800e906:	f7fd fd41 	bl	800c38c <_ZN8touchgfx9colortypeC1Em>
 800e90a:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800e90e:	461a      	mov	r2, r3
 800e910:	f8c7 4160 	str.w	r4, [r7, #352]	; 0x160
 800e914:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e918:	f5a3 73aa 	sub.w	r3, r3, #340	; 0x154
 800e91c:	601a      	str	r2, [r3, #0]
        color = newColor;
 800e91e:	f8d7 3160 	ldr.w	r3, [r7, #352]	; 0x160
 800e922:	f507 72b8 	add.w	r2, r7, #368	; 0x170
 800e926:	f5a2 72aa 	sub.w	r2, r2, #340	; 0x154
 800e92a:	6812      	ldr	r2, [r2, #0]
 800e92c:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800e92e:	bf00      	nop
    song_text_area.setLinespacing(0);
 800e930:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e934:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e938:	681b      	ldr	r3, [r3, #0]
 800e93a:	f203 63a4 	addw	r3, r3, #1700	; 0x6a4
 800e93e:	f8c7 3168 	str.w	r3, [r7, #360]	; 0x168
 800e942:	2300      	movs	r3, #0
 800e944:	f8a7 3166 	strh.w	r3, [r7, #358]	; 0x166
        linespace = space;
 800e948:	f8d7 3168 	ldr.w	r3, [r7, #360]	; 0x168
 800e94c:	f8b7 2166 	ldrh.w	r2, [r7, #358]	; 0x166
 800e950:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800e952:	f8d7 3168 	ldr.w	r3, [r7, #360]	; 0x168
 800e956:	681b      	ldr	r3, [r3, #0]
 800e958:	3384      	adds	r3, #132	; 0x84
 800e95a:	681b      	ldr	r3, [r3, #0]
 800e95c:	f8d7 4168 	ldr.w	r4, [r7, #360]	; 0x168
 800e960:	463a      	mov	r2, r7
 800e962:	f8d7 1168 	ldr.w	r1, [r7, #360]	; 0x168
 800e966:	4610      	mov	r0, r2
 800e968:	4798      	blx	r3
 800e96a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e96e:	f5a3 72b8 	sub.w	r2, r3, #368	; 0x170
 800e972:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e976:	ca07      	ldmia	r2, {r0, r1, r2}
 800e978:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e97c:	bf00      	nop
    Unicode::snprintf(song_text_areaBuffer, SONG_TEXT_AREA_SIZE, "%s", touchgfx::TypedText(T_SONG_ID).getText());
 800e97e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e982:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800e986:	681b      	ldr	r3, [r3, #0]
 800e988:	f503 64de 	add.w	r4, r3, #1776	; 0x6f0
 800e98c:	f107 0370 	add.w	r3, r7, #112	; 0x70
 800e990:	2100      	movs	r1, #0
 800e992:	4618      	mov	r0, r3
 800e994:	f7fe fa42 	bl	800ce1c <_ZN8touchgfx9TypedTextC1Et>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800e998:	4b42      	ldr	r3, [pc, #264]	; (800eaa4 <_ZN14screenViewBaseC1Ev+0x1448>)
 800e99a:	681b      	ldr	r3, [r3, #0]
 800e99c:	2b00      	cmp	r3, #0
 800e99e:	d105      	bne.n	800e9ac <_ZN14screenViewBaseC1Ev+0x1350>
 800e9a0:	4b41      	ldr	r3, [pc, #260]	; (800eaa8 <_ZN14screenViewBaseC1Ev+0x144c>)
 800e9a2:	4a42      	ldr	r2, [pc, #264]	; (800eaac <_ZN14screenViewBaseC1Ev+0x1450>)
 800e9a4:	2160      	movs	r1, #96	; 0x60
 800e9a6:	4842      	ldr	r0, [pc, #264]	; (800eab0 <_ZN14screenViewBaseC1Ev+0x1454>)
 800e9a8:	f019 fec2 	bl	8028730 <__assert_func>
 800e9ac:	f107 0370 	add.w	r3, r7, #112	; 0x70
 800e9b0:	f8c7 316c 	str.w	r3, [r7, #364]	; 0x16c
        return typedTextId < numberOfTypedTexts;
 800e9b4:	f8d7 316c 	ldr.w	r3, [r7, #364]	; 0x16c
 800e9b8:	889a      	ldrh	r2, [r3, #4]
 800e9ba:	4b3e      	ldr	r3, [pc, #248]	; (800eab4 <_ZN14screenViewBaseC1Ev+0x1458>)
 800e9bc:	881b      	ldrh	r3, [r3, #0]
 800e9be:	429a      	cmp	r2, r3
 800e9c0:	bf34      	ite	cc
 800e9c2:	2301      	movcc	r3, #1
 800e9c4:	2300      	movcs	r3, #0
 800e9c6:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800e9c8:	2b00      	cmp	r3, #0
 800e9ca:	d105      	bne.n	800e9d8 <_ZN14screenViewBaseC1Ev+0x137c>
 800e9cc:	4b3a      	ldr	r3, [pc, #232]	; (800eab8 <_ZN14screenViewBaseC1Ev+0x145c>)
 800e9ce:	4a37      	ldr	r2, [pc, #220]	; (800eaac <_ZN14screenViewBaseC1Ev+0x1450>)
 800e9d0:	2161      	movs	r1, #97	; 0x61
 800e9d2:	4837      	ldr	r0, [pc, #220]	; (800eab0 <_ZN14screenViewBaseC1Ev+0x1454>)
 800e9d4:	f019 feac 	bl	8028730 <__assert_func>
        return texts->getText(typedTextId);
 800e9d8:	4b38      	ldr	r3, [pc, #224]	; (800eabc <_ZN14screenViewBaseC1Ev+0x1460>)
 800e9da:	681a      	ldr	r2, [r3, #0]
 800e9dc:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800e9e0:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
 800e9e4:	889b      	ldrh	r3, [r3, #4]
 800e9e6:	4619      	mov	r1, r3
 800e9e8:	4610      	mov	r0, r2
 800e9ea:	f001 f98d 	bl	800fd08 <_ZNK8touchgfx5Texts7getTextEt>
 800e9ee:	4603      	mov	r3, r0
 800e9f0:	bf00      	nop
 800e9f2:	4a33      	ldr	r2, [pc, #204]	; (800eac0 <_ZN14screenViewBaseC1Ev+0x1464>)
 800e9f4:	2132      	movs	r1, #50	; 0x32
 800e9f6:	4620      	mov	r0, r4
 800e9f8:	f00b fe56 	bl	801a6a8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800e9fc:	f107 0370 	add.w	r3, r7, #112	; 0x70
 800ea00:	4618      	mov	r0, r3
 800ea02:	f7fc fd7f 	bl	800b504 <_ZN8touchgfx9TypedTextD1Ev>
    song_text_area.setWildcard(song_text_areaBuffer);
 800ea06:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ea0a:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800ea0e:	681b      	ldr	r3, [r3, #0]
 800ea10:	f203 62a4 	addw	r2, r3, #1700	; 0x6a4
 800ea14:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ea18:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800ea1c:	681b      	ldr	r3, [r3, #0]
 800ea1e:	f503 63de 	add.w	r3, r3, #1776	; 0x6f0
 800ea22:	4619      	mov	r1, r3
 800ea24:	4610      	mov	r0, r2
 800ea26:	f7fe fc31 	bl	800d28c <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    song_text_area.resizeToCurrentText();
 800ea2a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ea2e:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800ea32:	681b      	ldr	r3, [r3, #0]
 800ea34:	f203 63a4 	addw	r3, r3, #1700	; 0x6a4
 800ea38:	4618      	mov	r0, r3
 800ea3a:	f005 ffcb 	bl	80149d4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    song_text_area.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XJGK));
 800ea3e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ea42:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800ea46:	681b      	ldr	r3, [r3, #0]
 800ea48:	f203 64a4 	addw	r4, r3, #1700	; 0x6a4
 800ea4c:	f107 0378 	add.w	r3, r7, #120	; 0x78
 800ea50:	2101      	movs	r1, #1
 800ea52:	4618      	mov	r0, r3
 800ea54:	f7fe f9e2 	bl	800ce1c <_ZN8touchgfx9TypedTextC1Et>
 800ea58:	f107 0378 	add.w	r3, r7, #120	; 0x78
 800ea5c:	4619      	mov	r1, r3
 800ea5e:	4620      	mov	r0, r4
 800ea60:	f005 ffd8 	bl	8014a14 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800ea64:	f107 0378 	add.w	r3, r7, #120	; 0x78
 800ea68:	4618      	mov	r0, r3
 800ea6a:	f7fc fd4b 	bl	800b504 <_ZN8touchgfx9TypedTextD1Ev>
    add(song_text_area);
 800ea6e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ea72:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800ea76:	681a      	ldr	r2, [r3, #0]
 800ea78:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ea7c:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800ea80:	681b      	ldr	r3, [r3, #0]
 800ea82:	f203 63a4 	addw	r3, r3, #1700	; 0x6a4
 800ea86:	4619      	mov	r1, r3
 800ea88:	4610      	mov	r0, r2
 800ea8a:	f7fd ff41 	bl	800c910 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800ea8e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ea92:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800ea96:	681b      	ldr	r3, [r3, #0]
 800ea98:	4618      	mov	r0, r3
 800ea9a:	f507 77b8 	add.w	r7, r7, #368	; 0x170
 800ea9e:	46bd      	mov	sp, r7
 800eaa0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eaa4:	2000e218 	.word	0x2000e218
 800eaa8:	0802a370 	.word	0x0802a370
 800eaac:	0802a570 	.word	0x0802a570
 800eab0:	0802a3f0 	.word	0x0802a3f0
 800eab4:	2000e21c 	.word	0x2000e21c
 800eab8:	0802a434 	.word	0x0802a434
 800eabc:	2000e224 	.word	0x2000e224
 800eac0:	0802a5a8 	.word	0x0802a5a8

0800eac4 <_ZN14screenViewBaseD1Ev>:

screenViewBase::~screenViewBase()
 800eac4:	b580      	push	{r7, lr}
 800eac6:	b082      	sub	sp, #8
 800eac8:	af00      	add	r7, sp, #0
 800eaca:	6078      	str	r0, [r7, #4]
 800eacc:	4a2f      	ldr	r2, [pc, #188]	; (800eb8c <_ZN14screenViewBaseD1Ev+0xc8>)
 800eace:	687b      	ldr	r3, [r7, #4]
 800ead0:	601a      	str	r2, [r3, #0]
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800ead2:	f006 ffef 	bl	8015ab4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
screenViewBase::~screenViewBase()
 800ead6:	687b      	ldr	r3, [r7, #4]
 800ead8:	f503 53ab 	add.w	r3, r3, #5472	; 0x1560
 800eadc:	3304      	adds	r3, #4
 800eade:	4618      	mov	r0, r3
 800eae0:	f000 fd46 	bl	800f570 <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800eae4:	687b      	ldr	r3, [r7, #4]
 800eae6:	f203 63a4 	addw	r3, r3, #1700	; 0x6a4
 800eaea:	4618      	mov	r0, r3
 800eaec:	f000 fdb2 	bl	800f654 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800eaf0:	687b      	ldr	r3, [r7, #4]
 800eaf2:	f503 63d2 	add.w	r3, r3, #1680	; 0x690
 800eaf6:	4618      	mov	r0, r3
 800eaf8:	f000 fe8a 	bl	800f810 <_ZN8touchgfx13PainterRGB565D1Ev>
 800eafc:	687b      	ldr	r3, [r7, #4]
 800eafe:	f203 535c 	addw	r3, r3, #1372	; 0x55c
 800eb02:	4618      	mov	r0, r3
 800eb04:	f000 fe5a 	bl	800f7bc <_ZN8touchgfx12LineProgressD1Ev>
 800eb08:	687b      	ldr	r3, [r7, #4]
 800eb0a:	f203 43b4 	addw	r3, r3, #1204	; 0x4b4
 800eb0e:	4618      	mov	r0, r3
 800eb10:	f000 fd50 	bl	800f5b4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>
 800eb14:	687b      	ldr	r3, [r7, #4]
 800eb16:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 800eb1a:	4618      	mov	r0, r3
 800eb1c:	f000 fd72 	bl	800f604 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEED1Ev>
 800eb20:	687b      	ldr	r3, [r7, #4]
 800eb22:	f503 7359 	add.w	r3, r3, #868	; 0x364
 800eb26:	4618      	mov	r0, r3
 800eb28:	f000 fd6c 	bl	800f604 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEED1Ev>
 800eb2c:	687b      	ldr	r3, [r7, #4]
 800eb2e:	f503 732f 	add.w	r3, r3, #700	; 0x2bc
 800eb32:	4618      	mov	r0, r3
 800eb34:	f000 fd66 	bl	800f604 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEED1Ev>
 800eb38:	687b      	ldr	r3, [r7, #4]
 800eb3a:	f503 7305 	add.w	r3, r3, #532	; 0x214
 800eb3e:	4618      	mov	r0, r3
 800eb40:	f000 fd60 	bl	800f604 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEED1Ev>
 800eb44:	687b      	ldr	r3, [r7, #4]
 800eb46:	f503 73b6 	add.w	r3, r3, #364	; 0x16c
 800eb4a:	4618      	mov	r0, r3
 800eb4c:	f000 fd5a 	bl	800f604 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEED1Ev>
 800eb50:	687b      	ldr	r3, [r7, #4]
 800eb52:	33c4      	adds	r3, #196	; 0xc4
 800eb54:	4618      	mov	r0, r3
 800eb56:	f000 fd55 	bl	800f604 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEED1Ev>
 800eb5a:	687b      	ldr	r3, [r7, #4]
 800eb5c:	3398      	adds	r3, #152	; 0x98
 800eb5e:	4618      	mov	r0, r3
 800eb60:	f000 fd9a 	bl	800f698 <_ZN8touchgfx13ScalableImageD1Ev>
 800eb64:	687b      	ldr	r3, [r7, #4]
 800eb66:	336c      	adds	r3, #108	; 0x6c
 800eb68:	4618      	mov	r0, r3
 800eb6a:	f7fe f88d 	bl	800cc88 <_ZN8touchgfx3BoxD1Ev>
 800eb6e:	687b      	ldr	r3, [r7, #4]
 800eb70:	3340      	adds	r3, #64	; 0x40
 800eb72:	4618      	mov	r0, r3
 800eb74:	f7fe f888 	bl	800cc88 <_ZN8touchgfx3BoxD1Ev>
 800eb78:	687b      	ldr	r3, [r7, #4]
 800eb7a:	4618      	mov	r0, r3
 800eb7c:	f7fe fd4c 	bl	800d618 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>
}
 800eb80:	687b      	ldr	r3, [r7, #4]
 800eb82:	4618      	mov	r0, r3
 800eb84:	3708      	adds	r7, #8
 800eb86:	46bd      	mov	sp, r7
 800eb88:	bd80      	pop	{r7, pc}
 800eb8a:	bf00      	nop
 800eb8c:	0802b844 	.word	0x0802b844

0800eb90 <_ZN14screenViewBaseD0Ev>:
screenViewBase::~screenViewBase()
 800eb90:	b580      	push	{r7, lr}
 800eb92:	b082      	sub	sp, #8
 800eb94:	af00      	add	r7, sp, #0
 800eb96:	6078      	str	r0, [r7, #4]
}
 800eb98:	6878      	ldr	r0, [r7, #4]
 800eb9a:	f7ff ff93 	bl	800eac4 <_ZN14screenViewBaseD1Ev>
 800eb9e:	f241 5174 	movw	r1, #5492	; 0x1574
 800eba2:	6878      	ldr	r0, [r7, #4]
 800eba4:	f019 fd95 	bl	80286d2 <_ZdlPvj>
 800eba8:	687b      	ldr	r3, [r7, #4]
 800ebaa:	4618      	mov	r0, r3
 800ebac:	3708      	adds	r7, #8
 800ebae:	46bd      	mov	sp, r7
 800ebb0:	bd80      	pop	{r7, pc}

0800ebb2 <_ZN14screenViewBase11setupScreenEv>:

void screenViewBase::setupScreen()
{
 800ebb2:	b480      	push	{r7}
 800ebb4:	b083      	sub	sp, #12
 800ebb6:	af00      	add	r7, sp, #0
 800ebb8:	6078      	str	r0, [r7, #4]

}
 800ebba:	bf00      	nop
 800ebbc:	370c      	adds	r7, #12
 800ebbe:	46bd      	mov	sp, r7
 800ebc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ebc4:	4770      	bx	lr

0800ebc6 <_ZN14screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void screenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800ebc6:	b580      	push	{r7, lr}
 800ebc8:	b082      	sub	sp, #8
 800ebca:	af00      	add	r7, sp, #0
 800ebcc:	6078      	str	r0, [r7, #4]
 800ebce:	6039      	str	r1, [r7, #0]
    if (&src == &play_button)
 800ebd0:	687b      	ldr	r3, [r7, #4]
 800ebd2:	33c4      	adds	r3, #196	; 0xc4
 800ebd4:	683a      	ldr	r2, [r7, #0]
 800ebd6:	429a      	cmp	r2, r3
 800ebd8:	d105      	bne.n	800ebe6 <_ZN14screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x20>
    {
        //Interaction1
        //When play_button clicked call virtual function
        //Call play
        play();
 800ebda:	687b      	ldr	r3, [r7, #4]
 800ebdc:	681b      	ldr	r3, [r3, #0]
 800ebde:	332c      	adds	r3, #44	; 0x2c
 800ebe0:	681b      	ldr	r3, [r3, #0]
 800ebe2:	6878      	ldr	r0, [r7, #4]
 800ebe4:	4798      	blx	r3
    }
    if (&src == &skipf_button)
 800ebe6:	687b      	ldr	r3, [r7, #4]
 800ebe8:	f503 7305 	add.w	r3, r3, #532	; 0x214
 800ebec:	683a      	ldr	r2, [r7, #0]
 800ebee:	429a      	cmp	r2, r3
 800ebf0:	d105      	bne.n	800ebfe <_ZN14screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x38>
    {
        //Interaction3
        //When skipf_button clicked call virtual function
        //Call skip_forward
        skip_forward();
 800ebf2:	687b      	ldr	r3, [r7, #4]
 800ebf4:	681b      	ldr	r3, [r3, #0]
 800ebf6:	3330      	adds	r3, #48	; 0x30
 800ebf8:	681b      	ldr	r3, [r3, #0]
 800ebfa:	6878      	ldr	r0, [r7, #4]
 800ebfc:	4798      	blx	r3
    }
    if (&src == &skipb_button)
 800ebfe:	687b      	ldr	r3, [r7, #4]
 800ec00:	f503 732f 	add.w	r3, r3, #700	; 0x2bc
 800ec04:	683a      	ldr	r2, [r7, #0]
 800ec06:	429a      	cmp	r2, r3
 800ec08:	d105      	bne.n	800ec16 <_ZN14screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x50>
    {
        //Interaction4
        //When skipb_button clicked call virtual function
        //Call skip_backward
        skip_backward();
 800ec0a:	687b      	ldr	r3, [r7, #4]
 800ec0c:	681b      	ldr	r3, [r3, #0]
 800ec0e:	3334      	adds	r3, #52	; 0x34
 800ec10:	681b      	ldr	r3, [r3, #0]
 800ec12:	6878      	ldr	r0, [r7, #4]
 800ec14:	4798      	blx	r3
    }
    if (&src == &vol_down_button)
 800ec16:	687b      	ldr	r3, [r7, #4]
 800ec18:	f203 43b4 	addw	r3, r3, #1204	; 0x4b4
 800ec1c:	683a      	ldr	r2, [r7, #0]
 800ec1e:	429a      	cmp	r2, r3
 800ec20:	d105      	bne.n	800ec2e <_ZN14screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x68>
    {
        //Interaction5
        //When vol_down_button clicked call virtual function
        //Call vol_down
        vol_down();
 800ec22:	687b      	ldr	r3, [r7, #4]
 800ec24:	681b      	ldr	r3, [r3, #0]
 800ec26:	3338      	adds	r3, #56	; 0x38
 800ec28:	681b      	ldr	r3, [r3, #0]
 800ec2a:	6878      	ldr	r0, [r7, #4]
 800ec2c:	4798      	blx	r3
    }
    if (&src == &vol_up_button)
 800ec2e:	687b      	ldr	r3, [r7, #4]
 800ec30:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 800ec34:	683a      	ldr	r2, [r7, #0]
 800ec36:	429a      	cmp	r2, r3
 800ec38:	d105      	bne.n	800ec46 <_ZN14screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x80>
    {
        //Interaction6
        //When vol_up_button clicked call virtual function
        //Call vol_up
        vol_up();
 800ec3a:	687b      	ldr	r3, [r7, #4]
 800ec3c:	681b      	ldr	r3, [r3, #0]
 800ec3e:	333c      	adds	r3, #60	; 0x3c
 800ec40:	681b      	ldr	r3, [r3, #0]
 800ec42:	6878      	ldr	r0, [r7, #4]
 800ec44:	4798      	blx	r3
    }
    if (&src == &pause_button)
 800ec46:	687b      	ldr	r3, [r7, #4]
 800ec48:	f503 73b6 	add.w	r3, r3, #364	; 0x16c
 800ec4c:	683a      	ldr	r2, [r7, #0]
 800ec4e:	429a      	cmp	r2, r3
 800ec50:	d105      	bne.n	800ec5e <_ZN14screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x98>
    {
        //Interaction7
        //When pause_button clicked call virtual function
        //Call pause
        pause();
 800ec52:	687b      	ldr	r3, [r7, #4]
 800ec54:	681b      	ldr	r3, [r3, #0]
 800ec56:	3340      	adds	r3, #64	; 0x40
 800ec58:	681b      	ldr	r3, [r3, #0]
 800ec5a:	6878      	ldr	r0, [r7, #4]
 800ec5c:	4798      	blx	r3
    }
}
 800ec5e:	bf00      	nop
 800ec60:	3708      	adds	r7, #8
 800ec62:	46bd      	mov	sp, r7
 800ec64:	bd80      	pop	{r7, pc}
	...

0800ec68 <_ZN8touchgfx4ViewI15screenPresenterEC1Ev>:
    View()
 800ec68:	b580      	push	{r7, lr}
 800ec6a:	b082      	sub	sp, #8
 800ec6c:	af00      	add	r7, sp, #0
 800ec6e:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800ec70:	687b      	ldr	r3, [r7, #4]
 800ec72:	4618      	mov	r0, r3
 800ec74:	f00a f868 	bl	8018d48 <_ZN8touchgfx6ScreenC1Ev>
 800ec78:	4a05      	ldr	r2, [pc, #20]	; (800ec90 <_ZN8touchgfx4ViewI15screenPresenterEC1Ev+0x28>)
 800ec7a:	687b      	ldr	r3, [r7, #4]
 800ec7c:	601a      	str	r2, [r3, #0]
 800ec7e:	687b      	ldr	r3, [r7, #4]
 800ec80:	2200      	movs	r2, #0
 800ec82:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800ec84:	687b      	ldr	r3, [r7, #4]
 800ec86:	4618      	mov	r0, r3
 800ec88:	3708      	adds	r7, #8
 800ec8a:	46bd      	mov	sp, r7
 800ec8c:	bd80      	pop	{r7, pc}
 800ec8e:	bf00      	nop
 800ec90:	0802bb20 	.word	0x0802bb20

0800ec94 <_ZN8touchgfx18TouchButtonTriggerD1Ev>:
class TouchButtonTrigger : public AbstractButtonContainer
 800ec94:	b580      	push	{r7, lr}
 800ec96:	b082      	sub	sp, #8
 800ec98:	af00      	add	r7, sp, #0
 800ec9a:	6078      	str	r0, [r7, #4]
 800ec9c:	4a05      	ldr	r2, [pc, #20]	; (800ecb4 <_ZN8touchgfx18TouchButtonTriggerD1Ev+0x20>)
 800ec9e:	687b      	ldr	r3, [r7, #4]
 800eca0:	601a      	str	r2, [r3, #0]
 800eca2:	687b      	ldr	r3, [r7, #4]
 800eca4:	4618      	mov	r0, r3
 800eca6:	f7fe f897 	bl	800cdd8 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800ecaa:	687b      	ldr	r3, [r7, #4]
 800ecac:	4618      	mov	r0, r3
 800ecae:	3708      	adds	r7, #8
 800ecb0:	46bd      	mov	sp, r7
 800ecb2:	bd80      	pop	{r7, pc}
 800ecb4:	0802bc38 	.word	0x0802bc38

0800ecb8 <_ZN8touchgfx18TouchButtonTriggerD0Ev>:
 800ecb8:	b580      	push	{r7, lr}
 800ecba:	b082      	sub	sp, #8
 800ecbc:	af00      	add	r7, sp, #0
 800ecbe:	6078      	str	r0, [r7, #4]
 800ecc0:	6878      	ldr	r0, [r7, #4]
 800ecc2:	f7ff ffe7 	bl	800ec94 <_ZN8touchgfx18TouchButtonTriggerD1Ev>
 800ecc6:	2134      	movs	r1, #52	; 0x34
 800ecc8:	6878      	ldr	r0, [r7, #4]
 800ecca:	f019 fd02 	bl	80286d2 <_ZdlPvj>
 800ecce:	687b      	ldr	r3, [r7, #4]
 800ecd0:	4618      	mov	r0, r3
 800ecd2:	3708      	adds	r7, #8
 800ecd4:	46bd      	mov	sp, r7
 800ecd6:	bd80      	pop	{r7, pc}

0800ecd8 <_ZN8touchgfx13BoxWithBorderD1Ev>:
class BoxWithBorder : public Box
 800ecd8:	b580      	push	{r7, lr}
 800ecda:	b082      	sub	sp, #8
 800ecdc:	af00      	add	r7, sp, #0
 800ecde:	6078      	str	r0, [r7, #4]
 800ece0:	4a05      	ldr	r2, [pc, #20]	; (800ecf8 <_ZN8touchgfx13BoxWithBorderD1Ev+0x20>)
 800ece2:	687b      	ldr	r3, [r7, #4]
 800ece4:	601a      	str	r2, [r3, #0]
 800ece6:	687b      	ldr	r3, [r7, #4]
 800ece8:	4618      	mov	r0, r3
 800ecea:	f7fd ffcd 	bl	800cc88 <_ZN8touchgfx3BoxD1Ev>
 800ecee:	687b      	ldr	r3, [r7, #4]
 800ecf0:	4618      	mov	r0, r3
 800ecf2:	3708      	adds	r7, #8
 800ecf4:	46bd      	mov	sp, r7
 800ecf6:	bd80      	pop	{r7, pc}
 800ecf8:	0802cc2c 	.word	0x0802cc2c

0800ecfc <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800ecfc:	b580      	push	{r7, lr}
 800ecfe:	b082      	sub	sp, #8
 800ed00:	af00      	add	r7, sp, #0
 800ed02:	6078      	str	r0, [r7, #4]
 800ed04:	6878      	ldr	r0, [r7, #4]
 800ed06:	f7ff ffe7 	bl	800ecd8 <_ZN8touchgfx13BoxWithBorderD1Ev>
 800ed0a:	2134      	movs	r1, #52	; 0x34
 800ed0c:	6878      	ldr	r0, [r7, #4]
 800ed0e:	f019 fce0 	bl	80286d2 <_ZdlPvj>
 800ed12:	687b      	ldr	r3, [r7, #4]
 800ed14:	4618      	mov	r0, r3
 800ed16:	3708      	adds	r7, #8
 800ed18:	46bd      	mov	sp, r7
 800ed1a:	bd80      	pop	{r7, pc}

0800ed1c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 800ed1c:	b580      	push	{r7, lr}
 800ed1e:	b082      	sub	sp, #8
 800ed20:	af00      	add	r7, sp, #0
 800ed22:	6078      	str	r0, [r7, #4]
 800ed24:	4a08      	ldr	r2, [pc, #32]	; (800ed48 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEED1Ev+0x2c>)
 800ed26:	687b      	ldr	r3, [r7, #4]
 800ed28:	601a      	str	r2, [r3, #0]
 800ed2a:	687b      	ldr	r3, [r7, #4]
 800ed2c:	3334      	adds	r3, #52	; 0x34
 800ed2e:	4618      	mov	r0, r3
 800ed30:	f7ff ffd2 	bl	800ecd8 <_ZN8touchgfx13BoxWithBorderD1Ev>
 800ed34:	687b      	ldr	r3, [r7, #4]
 800ed36:	4618      	mov	r0, r3
 800ed38:	f7ff ffac 	bl	800ec94 <_ZN8touchgfx18TouchButtonTriggerD1Ev>
 800ed3c:	687b      	ldr	r3, [r7, #4]
 800ed3e:	4618      	mov	r0, r3
 800ed40:	3708      	adds	r7, #8
 800ed42:	46bd      	mov	sp, r7
 800ed44:	bd80      	pop	{r7, pc}
 800ed46:	bf00      	nop
 800ed48:	0802ba84 	.word	0x0802ba84

0800ed4c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEED0Ev>:
 800ed4c:	b580      	push	{r7, lr}
 800ed4e:	b082      	sub	sp, #8
 800ed50:	af00      	add	r7, sp, #0
 800ed52:	6078      	str	r0, [r7, #4]
 800ed54:	6878      	ldr	r0, [r7, #4]
 800ed56:	f7ff ffe1 	bl	800ed1c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEED1Ev>
 800ed5a:	2178      	movs	r1, #120	; 0x78
 800ed5c:	6878      	ldr	r0, [r7, #4]
 800ed5e:	f019 fcb8 	bl	80286d2 <_ZdlPvj>
 800ed62:	687b      	ldr	r3, [r7, #4]
 800ed64:	4618      	mov	r0, r3
 800ed66:	3708      	adds	r7, #8
 800ed68:	46bd      	mov	sp, r7
 800ed6a:	bd80      	pop	{r7, pc}

0800ed6c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEEC1Ev>:
 */
template <class T>
class IconButtonStyle : public T
{
public:
    IconButtonStyle()
 800ed6c:	b590      	push	{r4, r7, lr}
 800ed6e:	b085      	sub	sp, #20
 800ed70:	af00      	add	r7, sp, #0
 800ed72:	6078      	str	r0, [r7, #4]
        : T()
 800ed74:	687b      	ldr	r3, [r7, #4]
 800ed76:	4618      	mov	r0, r3
 800ed78:	f000 fa5e 	bl	800f238 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEC1Ev>
 800ed7c:	4a16      	ldr	r2, [pc, #88]	; (800edd8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEEC1Ev+0x6c>)
 800ed7e:	687b      	ldr	r3, [r7, #4]
 800ed80:	601a      	str	r2, [r3, #0]
 800ed82:	687b      	ldr	r3, [r7, #4]
 800ed84:	3378      	adds	r3, #120	; 0x78
 800ed86:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ed8a:	4618      	mov	r0, r3
 800ed8c:	f7fd fb50 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800ed90:	687b      	ldr	r3, [r7, #4]
 800ed92:	337a      	adds	r3, #122	; 0x7a
 800ed94:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ed98:	4618      	mov	r0, r3
 800ed9a:	f7fd fb49 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800ed9e:	687b      	ldr	r3, [r7, #4]
 800eda0:	f103 047c 	add.w	r4, r3, #124	; 0x7c
 800eda4:	f107 030c 	add.w	r3, r7, #12
 800eda8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800edac:	4618      	mov	r0, r3
 800edae:	f7fd fb3f 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800edb2:	f107 030c 	add.w	r3, r7, #12
 800edb6:	4619      	mov	r1, r3
 800edb8:	4620      	mov	r0, r4
 800edba:	f7fd fe51 	bl	800ca60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
    {
        T::add(iconImage);
 800edbe:	687a      	ldr	r2, [r7, #4]
 800edc0:	687b      	ldr	r3, [r7, #4]
 800edc2:	337c      	adds	r3, #124	; 0x7c
 800edc4:	4619      	mov	r1, r3
 800edc6:	4610      	mov	r0, r2
 800edc8:	f003 fa8a 	bl	80122e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800edcc:	687b      	ldr	r3, [r7, #4]
 800edce:	4618      	mov	r0, r3
 800edd0:	3714      	adds	r7, #20
 800edd2:	46bd      	mov	sp, r7
 800edd4:	bd90      	pop	{r4, r7, pc}
 800edd6:	bf00      	nop
 800edd8:	0802b9e4 	.word	0x0802b9e4

0800eddc <_ZN8touchgfx18ClickButtonTriggerD1Ev>:
class ClickButtonTrigger : public AbstractButtonContainer
 800eddc:	b580      	push	{r7, lr}
 800edde:	b082      	sub	sp, #8
 800ede0:	af00      	add	r7, sp, #0
 800ede2:	6078      	str	r0, [r7, #4]
 800ede4:	4a05      	ldr	r2, [pc, #20]	; (800edfc <_ZN8touchgfx18ClickButtonTriggerD1Ev+0x20>)
 800ede6:	687b      	ldr	r3, [r7, #4]
 800ede8:	601a      	str	r2, [r3, #0]
 800edea:	687b      	ldr	r3, [r7, #4]
 800edec:	4618      	mov	r0, r3
 800edee:	f7fd fff3 	bl	800cdd8 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800edf2:	687b      	ldr	r3, [r7, #4]
 800edf4:	4618      	mov	r0, r3
 800edf6:	3708      	adds	r7, #8
 800edf8:	46bd      	mov	sp, r7
 800edfa:	bd80      	pop	{r7, pc}
 800edfc:	0802bcd4 	.word	0x0802bcd4

0800ee00 <_ZN8touchgfx18ClickButtonTriggerD0Ev>:
 800ee00:	b580      	push	{r7, lr}
 800ee02:	b082      	sub	sp, #8
 800ee04:	af00      	add	r7, sp, #0
 800ee06:	6078      	str	r0, [r7, #4]
 800ee08:	6878      	ldr	r0, [r7, #4]
 800ee0a:	f7ff ffe7 	bl	800eddc <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800ee0e:	2134      	movs	r1, #52	; 0x34
 800ee10:	6878      	ldr	r0, [r7, #4]
 800ee12:	f019 fc5e 	bl	80286d2 <_ZdlPvj>
 800ee16:	687b      	ldr	r3, [r7, #4]
 800ee18:	4618      	mov	r0, r3
 800ee1a:	3708      	adds	r7, #8
 800ee1c:	46bd      	mov	sp, r7
 800ee1e:	bd80      	pop	{r7, pc}

0800ee20 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 800ee20:	b580      	push	{r7, lr}
 800ee22:	b082      	sub	sp, #8
 800ee24:	af00      	add	r7, sp, #0
 800ee26:	6078      	str	r0, [r7, #4]
 800ee28:	4a08      	ldr	r2, [pc, #32]	; (800ee4c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev+0x2c>)
 800ee2a:	687b      	ldr	r3, [r7, #4]
 800ee2c:	601a      	str	r2, [r3, #0]
 800ee2e:	687b      	ldr	r3, [r7, #4]
 800ee30:	3334      	adds	r3, #52	; 0x34
 800ee32:	4618      	mov	r0, r3
 800ee34:	f7ff ff50 	bl	800ecd8 <_ZN8touchgfx13BoxWithBorderD1Ev>
 800ee38:	687b      	ldr	r3, [r7, #4]
 800ee3a:	4618      	mov	r0, r3
 800ee3c:	f7ff ffce 	bl	800eddc <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800ee40:	687b      	ldr	r3, [r7, #4]
 800ee42:	4618      	mov	r0, r3
 800ee44:	3708      	adds	r7, #8
 800ee46:	46bd      	mov	sp, r7
 800ee48:	bd80      	pop	{r7, pc}
 800ee4a:	bf00      	nop
 800ee4c:	0802b948 	.word	0x0802b948

0800ee50 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
 800ee50:	b580      	push	{r7, lr}
 800ee52:	b082      	sub	sp, #8
 800ee54:	af00      	add	r7, sp, #0
 800ee56:	6078      	str	r0, [r7, #4]
 800ee58:	6878      	ldr	r0, [r7, #4]
 800ee5a:	f7ff ffe1 	bl	800ee20 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800ee5e:	2178      	movs	r1, #120	; 0x78
 800ee60:	6878      	ldr	r0, [r7, #4]
 800ee62:	f019 fc36 	bl	80286d2 <_ZdlPvj>
 800ee66:	687b      	ldr	r3, [r7, #4]
 800ee68:	4618      	mov	r0, r3
 800ee6a:	3708      	adds	r7, #8
 800ee6c:	46bd      	mov	sp, r7
 800ee6e:	bd80      	pop	{r7, pc}

0800ee70 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
    IconButtonStyle()
 800ee70:	b590      	push	{r4, r7, lr}
 800ee72:	b085      	sub	sp, #20
 800ee74:	af00      	add	r7, sp, #0
 800ee76:	6078      	str	r0, [r7, #4]
        : T()
 800ee78:	687b      	ldr	r3, [r7, #4]
 800ee7a:	4618      	mov	r0, r3
 800ee7c:	f000 fa2e 	bl	800f2dc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800ee80:	4a16      	ldr	r2, [pc, #88]	; (800eedc <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x6c>)
 800ee82:	687b      	ldr	r3, [r7, #4]
 800ee84:	601a      	str	r2, [r3, #0]
 800ee86:	687b      	ldr	r3, [r7, #4]
 800ee88:	3378      	adds	r3, #120	; 0x78
 800ee8a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ee8e:	4618      	mov	r0, r3
 800ee90:	f7fd face 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800ee94:	687b      	ldr	r3, [r7, #4]
 800ee96:	337a      	adds	r3, #122	; 0x7a
 800ee98:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ee9c:	4618      	mov	r0, r3
 800ee9e:	f7fd fac7 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800eea2:	687b      	ldr	r3, [r7, #4]
 800eea4:	f103 047c 	add.w	r4, r3, #124	; 0x7c
 800eea8:	f107 030c 	add.w	r3, r7, #12
 800eeac:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800eeb0:	4618      	mov	r0, r3
 800eeb2:	f7fd fabd 	bl	800c430 <_ZN8touchgfx6BitmapC1Et>
 800eeb6:	f107 030c 	add.w	r3, r7, #12
 800eeba:	4619      	mov	r1, r3
 800eebc:	4620      	mov	r0, r4
 800eebe:	f7fd fdcf 	bl	800ca60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 800eec2:	687a      	ldr	r2, [r7, #4]
 800eec4:	687b      	ldr	r3, [r7, #4]
 800eec6:	337c      	adds	r3, #124	; 0x7c
 800eec8:	4619      	mov	r1, r3
 800eeca:	4610      	mov	r0, r2
 800eecc:	f003 fa08 	bl	80122e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800eed0:	687b      	ldr	r3, [r7, #4]
 800eed2:	4618      	mov	r0, r3
 800eed4:	3714      	adds	r7, #20
 800eed6:	46bd      	mov	sp, r7
 800eed8:	bd90      	pop	{r4, r7, pc}
 800eeda:	bf00      	nop
 800eedc:	0802b8a8 	.word	0x0802b8a8

0800eee0 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800eee0:	b480      	push	{r7}
 800eee2:	b083      	sub	sp, #12
 800eee4:	af00      	add	r7, sp, #0
 800eee6:	6078      	str	r0, [r7, #4]
 800eee8:	4a04      	ldr	r2, [pc, #16]	; (800eefc <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev+0x1c>)
 800eeea:	687b      	ldr	r3, [r7, #4]
 800eeec:	601a      	str	r2, [r3, #0]
 800eeee:	687b      	ldr	r3, [r7, #4]
 800eef0:	4618      	mov	r0, r3
 800eef2:	370c      	adds	r7, #12
 800eef4:	46bd      	mov	sp, r7
 800eef6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eefa:	4770      	bx	lr
 800eefc:	0802bd70 	.word	0x0802bd70

0800ef00 <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800ef00:	b580      	push	{r7, lr}
 800ef02:	b084      	sub	sp, #16
 800ef04:	af00      	add	r7, sp, #0
 800ef06:	60f8      	str	r0, [r7, #12]
 800ef08:	60b9      	str	r1, [r7, #8]
 800ef0a:	4639      	mov	r1, r7
 800ef0c:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800ef10:	68fb      	ldr	r3, [r7, #12]
 800ef12:	4618      	mov	r0, r3
 800ef14:	f7ff ffe4 	bl	800eee0 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800ef18:	4a08      	ldr	r2, [pc, #32]	; (800ef3c <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800ef1a:	68fb      	ldr	r3, [r7, #12]
 800ef1c:	601a      	str	r2, [r3, #0]
 800ef1e:	68fb      	ldr	r3, [r7, #12]
 800ef20:	68ba      	ldr	r2, [r7, #8]
 800ef22:	605a      	str	r2, [r3, #4]
 800ef24:	68fb      	ldr	r3, [r7, #12]
 800ef26:	3308      	adds	r3, #8
 800ef28:	463a      	mov	r2, r7
 800ef2a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ef2e:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800ef32:	68fb      	ldr	r3, [r7, #12]
 800ef34:	4618      	mov	r0, r3
 800ef36:	3710      	adds	r7, #16
 800ef38:	46bd      	mov	sp, r7
 800ef3a:	bd80      	pop	{r7, pc}
 800ef3c:	0802b890 	.word	0x0802b890

0800ef40 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE24setBoxWithBorderPositionEssss>:
     * @param  width  The width of this BoxWithBorderButtonStyle.
     * @param  height The height of this BoxWithBorderButtonStyle.
     *
     * @note Changing this does not automatically yield a redraw.
     */
    void setBoxWithBorderPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800ef40:	b590      	push	{r4, r7, lr}
 800ef42:	b087      	sub	sp, #28
 800ef44:	af02      	add	r7, sp, #8
 800ef46:	60f8      	str	r0, [r7, #12]
 800ef48:	4608      	mov	r0, r1
 800ef4a:	4611      	mov	r1, r2
 800ef4c:	461a      	mov	r2, r3
 800ef4e:	4603      	mov	r3, r0
 800ef50:	817b      	strh	r3, [r7, #10]
 800ef52:	460b      	mov	r3, r1
 800ef54:	813b      	strh	r3, [r7, #8]
 800ef56:	4613      	mov	r3, r2
 800ef58:	80fb      	strh	r3, [r7, #6]
    {
        borderBox.setPosition(x, y, width, height);
 800ef5a:	68fb      	ldr	r3, [r7, #12]
 800ef5c:	f103 0034 	add.w	r0, r3, #52	; 0x34
 800ef60:	f9b7 4006 	ldrsh.w	r4, [r7, #6]
 800ef64:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800ef68:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800ef6c:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 800ef70:	9300      	str	r3, [sp, #0]
 800ef72:	4623      	mov	r3, r4
 800ef74:	f7fd fae6 	bl	800c544 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800ef78:	bf00      	nop
 800ef7a:	3714      	adds	r7, #20
 800ef7c:	46bd      	mov	sp, r7
 800ef7e:	bd90      	pop	{r4, r7, pc}

0800ef80 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE13setBorderSizeEh>:
    /**
     * Sets border size.
     *
     * @param  size The size.
     */
    void setBorderSize(uint8_t size)
 800ef80:	b580      	push	{r7, lr}
 800ef82:	b082      	sub	sp, #8
 800ef84:	af00      	add	r7, sp, #0
 800ef86:	6078      	str	r0, [r7, #4]
 800ef88:	460b      	mov	r3, r1
 800ef8a:	70fb      	strb	r3, [r7, #3]
    {
        borderBox.setBorderSize(size);
 800ef8c:	687b      	ldr	r3, [r7, #4]
 800ef8e:	3334      	adds	r3, #52	; 0x34
 800ef90:	78fa      	ldrb	r2, [r7, #3]
 800ef92:	b292      	uxth	r2, r2
 800ef94:	4611      	mov	r1, r2
 800ef96:	4618      	mov	r0, r3
 800ef98:	f7fd fec2 	bl	800cd20 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    }
 800ef9c:	bf00      	nop
 800ef9e:	3708      	adds	r7, #8
 800efa0:	46bd      	mov	sp, r7
 800efa2:	bd80      	pop	{r7, pc}

0800efa4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 800efa4:	b580      	push	{r7, lr}
 800efa6:	b084      	sub	sp, #16
 800efa8:	af00      	add	r7, sp, #0
 800efaa:	60f8      	str	r0, [r7, #12]
 800efac:	60b9      	str	r1, [r7, #8]
 800efae:	607a      	str	r2, [r7, #4]
 800efb0:	603b      	str	r3, [r7, #0]
        up = colorReleased;
 800efb2:	68fb      	ldr	r3, [r7, #12]
 800efb4:	68ba      	ldr	r2, [r7, #8]
 800efb6:	669a      	str	r2, [r3, #104]	; 0x68
        down = colorPressed;
 800efb8:	68fb      	ldr	r3, [r7, #12]
 800efba:	687a      	ldr	r2, [r7, #4]
 800efbc:	66da      	str	r2, [r3, #108]	; 0x6c
        borderUp = borderColorReleased;
 800efbe:	68fb      	ldr	r3, [r7, #12]
 800efc0:	683a      	ldr	r2, [r7, #0]
 800efc2:	671a      	str	r2, [r3, #112]	; 0x70
        borderDown = borderColorPressed;
 800efc4:	68fb      	ldr	r3, [r7, #12]
 800efc6:	69ba      	ldr	r2, [r7, #24]
 800efc8:	675a      	str	r2, [r3, #116]	; 0x74
        handlePressedUpdated();
 800efca:	68fb      	ldr	r3, [r7, #12]
 800efcc:	681b      	ldr	r3, [r3, #0]
 800efce:	338c      	adds	r3, #140	; 0x8c
 800efd0:	681b      	ldr	r3, [r3, #0]
 800efd2:	68f8      	ldr	r0, [r7, #12]
 800efd4:	4798      	blx	r3
    }
 800efd6:	bf00      	nop
 800efd8:	3710      	adds	r7, #16
 800efda:	46bd      	mov	sp, r7
 800efdc:	bd80      	pop	{r7, pc}

0800efde <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
     * Sets icon bitmaps.
     *
     * @param  newIconReleased The new icon released.
     * @param  newIconPressed  The new icon pressed.
     */
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 800efde:	b5f0      	push	{r4, r5, r6, r7, lr}
 800efe0:	b085      	sub	sp, #20
 800efe2:	af00      	add	r7, sp, #0
 800efe4:	60f8      	str	r0, [r7, #12]
 800efe6:	60b9      	str	r1, [r7, #8]
 800efe8:	607a      	str	r2, [r7, #4]
    {
        iconReleased = newIconReleased;
 800efea:	68fb      	ldr	r3, [r7, #12]
 800efec:	68ba      	ldr	r2, [r7, #8]
 800efee:	8812      	ldrh	r2, [r2, #0]
 800eff0:	f8a3 2078 	strh.w	r2, [r3, #120]	; 0x78
        iconPressed = newIconPressed;
 800eff4:	68fb      	ldr	r3, [r7, #12]
 800eff6:	687a      	ldr	r2, [r7, #4]
 800eff8:	8812      	ldrh	r2, [r2, #0]
 800effa:	f8a3 207a 	strh.w	r2, [r3, #122]	; 0x7a

        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 800effe:	68fb      	ldr	r3, [r7, #12]
 800f000:	f103 057c 	add.w	r5, r3, #124	; 0x7c
 800f004:	68fb      	ldr	r3, [r7, #12]
 800f006:	4618      	mov	r0, r3
 800f008:	f7fd fabd 	bl	800c586 <_ZNK8touchgfx8Drawable8getWidthEv>
 800f00c:	4603      	mov	r3, r0
 800f00e:	0fda      	lsrs	r2, r3, #31
 800f010:	4413      	add	r3, r2
 800f012:	105b      	asrs	r3, r3, #1
 800f014:	b21b      	sxth	r3, r3
 800f016:	b29c      	uxth	r4, r3
 800f018:	6878      	ldr	r0, [r7, #4]
 800f01a:	f00b fbff 	bl	801a81c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f01e:	4603      	mov	r3, r0
 800f020:	0fda      	lsrs	r2, r3, #31
 800f022:	4413      	add	r3, r2
 800f024:	105b      	asrs	r3, r3, #1
 800f026:	b21b      	sxth	r3, r3
 800f028:	b29b      	uxth	r3, r3
 800f02a:	1ae3      	subs	r3, r4, r3
 800f02c:	b29b      	uxth	r3, r3
 800f02e:	b21e      	sxth	r6, r3
 800f030:	68fb      	ldr	r3, [r7, #12]
 800f032:	4618      	mov	r0, r3
 800f034:	f7fd fab4 	bl	800c5a0 <_ZNK8touchgfx8Drawable9getHeightEv>
 800f038:	4603      	mov	r3, r0
 800f03a:	0fda      	lsrs	r2, r3, #31
 800f03c:	4413      	add	r3, r2
 800f03e:	105b      	asrs	r3, r3, #1
 800f040:	b21b      	sxth	r3, r3
 800f042:	b29c      	uxth	r4, r3
 800f044:	6878      	ldr	r0, [r7, #4]
 800f046:	f00b fc1d 	bl	801a884 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800f04a:	4603      	mov	r3, r0
 800f04c:	0fda      	lsrs	r2, r3, #31
 800f04e:	4413      	add	r3, r2
 800f050:	105b      	asrs	r3, r3, #1
 800f052:	b21b      	sxth	r3, r3
 800f054:	b29b      	uxth	r3, r3
 800f056:	1ae3      	subs	r3, r4, r3
 800f058:	b29b      	uxth	r3, r3
 800f05a:	b21b      	sxth	r3, r3
 800f05c:	461a      	mov	r2, r3
 800f05e:	4631      	mov	r1, r6
 800f060:	4628      	mov	r0, r5
 800f062:	f7fd fac8 	bl	800c5f6 <_ZN8touchgfx8Drawable5setXYEss>

        handlePressedUpdated();
 800f066:	68fb      	ldr	r3, [r7, #12]
 800f068:	681b      	ldr	r3, [r3, #0]
 800f06a:	338c      	adds	r3, #140	; 0x8c
 800f06c:	681b      	ldr	r3, [r3, #0]
 800f06e:	68f8      	ldr	r0, [r7, #12]
 800f070:	4798      	blx	r3
    }
 800f072:	bf00      	nop
 800f074:	3714      	adds	r7, #20
 800f076:	46bd      	mov	sp, r7
 800f078:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f07a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE9setIconXYEss>:
     * Sets the position of the icon.
     *
     * @param  x The x coordinate.
     * @param  y The y coordinate.
     */
    void setIconXY(int16_t x, int16_t y)
 800f07a:	b580      	push	{r7, lr}
 800f07c:	b082      	sub	sp, #8
 800f07e:	af00      	add	r7, sp, #0
 800f080:	6078      	str	r0, [r7, #4]
 800f082:	460b      	mov	r3, r1
 800f084:	807b      	strh	r3, [r7, #2]
 800f086:	4613      	mov	r3, r2
 800f088:	803b      	strh	r3, [r7, #0]
    {
        setIconX(x);
 800f08a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800f08e:	4619      	mov	r1, r3
 800f090:	6878      	ldr	r0, [r7, #4]
 800f092:	f000 f9d4 	bl	800f43e <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE8setIconXEs>
        setIconY(y);
 800f096:	f9b7 3000 	ldrsh.w	r3, [r7]
 800f09a:	4619      	mov	r1, r3
 800f09c:	6878      	ldr	r0, [r7, #4]
 800f09e:	f000 f9e0 	bl	800f462 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE8setIconYEs>
    }
 800f0a2:	bf00      	nop
 800f0a4:	3708      	adds	r7, #8
 800f0a6:	46bd      	mov	sp, r7
 800f0a8:	bd80      	pop	{r7, pc}

0800f0aa <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>:
    void setBoxWithBorderPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800f0aa:	b590      	push	{r4, r7, lr}
 800f0ac:	b087      	sub	sp, #28
 800f0ae:	af02      	add	r7, sp, #8
 800f0b0:	60f8      	str	r0, [r7, #12]
 800f0b2:	4608      	mov	r0, r1
 800f0b4:	4611      	mov	r1, r2
 800f0b6:	461a      	mov	r2, r3
 800f0b8:	4603      	mov	r3, r0
 800f0ba:	817b      	strh	r3, [r7, #10]
 800f0bc:	460b      	mov	r3, r1
 800f0be:	813b      	strh	r3, [r7, #8]
 800f0c0:	4613      	mov	r3, r2
 800f0c2:	80fb      	strh	r3, [r7, #6]
        borderBox.setPosition(x, y, width, height);
 800f0c4:	68fb      	ldr	r3, [r7, #12]
 800f0c6:	f103 0034 	add.w	r0, r3, #52	; 0x34
 800f0ca:	f9b7 4006 	ldrsh.w	r4, [r7, #6]
 800f0ce:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800f0d2:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800f0d6:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 800f0da:	9300      	str	r3, [sp, #0]
 800f0dc:	4623      	mov	r3, r4
 800f0de:	f7fd fa31 	bl	800c544 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800f0e2:	bf00      	nop
 800f0e4:	3714      	adds	r7, #20
 800f0e6:	46bd      	mov	sp, r7
 800f0e8:	bd90      	pop	{r4, r7, pc}

0800f0ea <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>:
    void setBorderSize(uint8_t size)
 800f0ea:	b580      	push	{r7, lr}
 800f0ec:	b082      	sub	sp, #8
 800f0ee:	af00      	add	r7, sp, #0
 800f0f0:	6078      	str	r0, [r7, #4]
 800f0f2:	460b      	mov	r3, r1
 800f0f4:	70fb      	strb	r3, [r7, #3]
        borderBox.setBorderSize(size);
 800f0f6:	687b      	ldr	r3, [r7, #4]
 800f0f8:	3334      	adds	r3, #52	; 0x34
 800f0fa:	78fa      	ldrb	r2, [r7, #3]
 800f0fc:	b292      	uxth	r2, r2
 800f0fe:	4611      	mov	r1, r2
 800f100:	4618      	mov	r0, r3
 800f102:	f7fd fe0d 	bl	800cd20 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    }
 800f106:	bf00      	nop
 800f108:	3708      	adds	r7, #8
 800f10a:	46bd      	mov	sp, r7
 800f10c:	bd80      	pop	{r7, pc}

0800f10e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 800f10e:	b580      	push	{r7, lr}
 800f110:	b084      	sub	sp, #16
 800f112:	af00      	add	r7, sp, #0
 800f114:	60f8      	str	r0, [r7, #12]
 800f116:	60b9      	str	r1, [r7, #8]
 800f118:	607a      	str	r2, [r7, #4]
 800f11a:	603b      	str	r3, [r7, #0]
        up = colorReleased;
 800f11c:	68fb      	ldr	r3, [r7, #12]
 800f11e:	68ba      	ldr	r2, [r7, #8]
 800f120:	669a      	str	r2, [r3, #104]	; 0x68
        down = colorPressed;
 800f122:	68fb      	ldr	r3, [r7, #12]
 800f124:	687a      	ldr	r2, [r7, #4]
 800f126:	66da      	str	r2, [r3, #108]	; 0x6c
        borderUp = borderColorReleased;
 800f128:	68fb      	ldr	r3, [r7, #12]
 800f12a:	683a      	ldr	r2, [r7, #0]
 800f12c:	671a      	str	r2, [r3, #112]	; 0x70
        borderDown = borderColorPressed;
 800f12e:	68fb      	ldr	r3, [r7, #12]
 800f130:	69ba      	ldr	r2, [r7, #24]
 800f132:	675a      	str	r2, [r3, #116]	; 0x74
        handlePressedUpdated();
 800f134:	68fb      	ldr	r3, [r7, #12]
 800f136:	681b      	ldr	r3, [r3, #0]
 800f138:	338c      	adds	r3, #140	; 0x8c
 800f13a:	681b      	ldr	r3, [r3, #0]
 800f13c:	68f8      	ldr	r0, [r7, #12]
 800f13e:	4798      	blx	r3
    }
 800f140:	bf00      	nop
 800f142:	3710      	adds	r7, #16
 800f144:	46bd      	mov	sp, r7
 800f146:	bd80      	pop	{r7, pc}

0800f148 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 800f148:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f14a:	b085      	sub	sp, #20
 800f14c:	af00      	add	r7, sp, #0
 800f14e:	60f8      	str	r0, [r7, #12]
 800f150:	60b9      	str	r1, [r7, #8]
 800f152:	607a      	str	r2, [r7, #4]
        iconReleased = newIconReleased;
 800f154:	68fb      	ldr	r3, [r7, #12]
 800f156:	68ba      	ldr	r2, [r7, #8]
 800f158:	8812      	ldrh	r2, [r2, #0]
 800f15a:	f8a3 2078 	strh.w	r2, [r3, #120]	; 0x78
        iconPressed = newIconPressed;
 800f15e:	68fb      	ldr	r3, [r7, #12]
 800f160:	687a      	ldr	r2, [r7, #4]
 800f162:	8812      	ldrh	r2, [r2, #0]
 800f164:	f8a3 207a 	strh.w	r2, [r3, #122]	; 0x7a
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 800f168:	68fb      	ldr	r3, [r7, #12]
 800f16a:	f103 057c 	add.w	r5, r3, #124	; 0x7c
 800f16e:	68fb      	ldr	r3, [r7, #12]
 800f170:	4618      	mov	r0, r3
 800f172:	f7fd fa08 	bl	800c586 <_ZNK8touchgfx8Drawable8getWidthEv>
 800f176:	4603      	mov	r3, r0
 800f178:	0fda      	lsrs	r2, r3, #31
 800f17a:	4413      	add	r3, r2
 800f17c:	105b      	asrs	r3, r3, #1
 800f17e:	b21b      	sxth	r3, r3
 800f180:	b29c      	uxth	r4, r3
 800f182:	6878      	ldr	r0, [r7, #4]
 800f184:	f00b fb4a 	bl	801a81c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f188:	4603      	mov	r3, r0
 800f18a:	0fda      	lsrs	r2, r3, #31
 800f18c:	4413      	add	r3, r2
 800f18e:	105b      	asrs	r3, r3, #1
 800f190:	b21b      	sxth	r3, r3
 800f192:	b29b      	uxth	r3, r3
 800f194:	1ae3      	subs	r3, r4, r3
 800f196:	b29b      	uxth	r3, r3
 800f198:	b21e      	sxth	r6, r3
 800f19a:	68fb      	ldr	r3, [r7, #12]
 800f19c:	4618      	mov	r0, r3
 800f19e:	f7fd f9ff 	bl	800c5a0 <_ZNK8touchgfx8Drawable9getHeightEv>
 800f1a2:	4603      	mov	r3, r0
 800f1a4:	0fda      	lsrs	r2, r3, #31
 800f1a6:	4413      	add	r3, r2
 800f1a8:	105b      	asrs	r3, r3, #1
 800f1aa:	b21b      	sxth	r3, r3
 800f1ac:	b29c      	uxth	r4, r3
 800f1ae:	6878      	ldr	r0, [r7, #4]
 800f1b0:	f00b fb68 	bl	801a884 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800f1b4:	4603      	mov	r3, r0
 800f1b6:	0fda      	lsrs	r2, r3, #31
 800f1b8:	4413      	add	r3, r2
 800f1ba:	105b      	asrs	r3, r3, #1
 800f1bc:	b21b      	sxth	r3, r3
 800f1be:	b29b      	uxth	r3, r3
 800f1c0:	1ae3      	subs	r3, r4, r3
 800f1c2:	b29b      	uxth	r3, r3
 800f1c4:	b21b      	sxth	r3, r3
 800f1c6:	461a      	mov	r2, r3
 800f1c8:	4631      	mov	r1, r6
 800f1ca:	4628      	mov	r0, r5
 800f1cc:	f7fd fa13 	bl	800c5f6 <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 800f1d0:	68fb      	ldr	r3, [r7, #12]
 800f1d2:	681b      	ldr	r3, [r3, #0]
 800f1d4:	338c      	adds	r3, #140	; 0x8c
 800f1d6:	681b      	ldr	r3, [r3, #0]
 800f1d8:	68f8      	ldr	r0, [r7, #12]
 800f1da:	4798      	blx	r3
    }
 800f1dc:	bf00      	nop
 800f1de:	3714      	adds	r7, #20
 800f1e0:	46bd      	mov	sp, r7
 800f1e2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f1e4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE9setIconXYEss>:
    void setIconXY(int16_t x, int16_t y)
 800f1e4:	b580      	push	{r7, lr}
 800f1e6:	b082      	sub	sp, #8
 800f1e8:	af00      	add	r7, sp, #0
 800f1ea:	6078      	str	r0, [r7, #4]
 800f1ec:	460b      	mov	r3, r1
 800f1ee:	807b      	strh	r3, [r7, #2]
 800f1f0:	4613      	mov	r3, r2
 800f1f2:	803b      	strh	r3, [r7, #0]
        setIconX(x);
 800f1f4:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800f1f8:	4619      	mov	r1, r3
 800f1fa:	6878      	ldr	r0, [r7, #4]
 800f1fc:	f000 f994 	bl	800f528 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE8setIconXEs>
        setIconY(y);
 800f200:	f9b7 3000 	ldrsh.w	r3, [r7]
 800f204:	4619      	mov	r1, r3
 800f206:	6878      	ldr	r0, [r7, #4]
 800f208:	f000 f9a0 	bl	800f54c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE8setIconYEs>
    }
 800f20c:	bf00      	nop
 800f20e:	3708      	adds	r7, #8
 800f210:	46bd      	mov	sp, r7
 800f212:	bd80      	pop	{r7, pc}

0800f214 <_ZN8touchgfx18TouchButtonTriggerC1Ev>:
 800f214:	b580      	push	{r7, lr}
 800f216:	b082      	sub	sp, #8
 800f218:	af00      	add	r7, sp, #0
 800f21a:	6078      	str	r0, [r7, #4]
 800f21c:	687b      	ldr	r3, [r7, #4]
 800f21e:	4618      	mov	r0, r3
 800f220:	f7fd fc76 	bl	800cb10 <_ZN8touchgfx23AbstractButtonContainerC1Ev>
 800f224:	4a03      	ldr	r2, [pc, #12]	; (800f234 <_ZN8touchgfx18TouchButtonTriggerC1Ev+0x20>)
 800f226:	687b      	ldr	r3, [r7, #4]
 800f228:	601a      	str	r2, [r3, #0]
 800f22a:	687b      	ldr	r3, [r7, #4]
 800f22c:	4618      	mov	r0, r3
 800f22e:	3708      	adds	r7, #8
 800f230:	46bd      	mov	sp, r7
 800f232:	bd80      	pop	{r7, pc}
 800f234:	0802bc38 	.word	0x0802bc38

0800f238 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEC1Ev>:
    BoxWithBorderButtonStyle()
 800f238:	b580      	push	{r7, lr}
 800f23a:	b082      	sub	sp, #8
 800f23c:	af00      	add	r7, sp, #0
 800f23e:	6078      	str	r0, [r7, #4]
        : T(), up(), down()
 800f240:	687b      	ldr	r3, [r7, #4]
 800f242:	4618      	mov	r0, r3
 800f244:	2334      	movs	r3, #52	; 0x34
 800f246:	461a      	mov	r2, r3
 800f248:	2100      	movs	r1, #0
 800f24a:	f019 fceb 	bl	8028c24 <memset>
 800f24e:	687b      	ldr	r3, [r7, #4]
 800f250:	4618      	mov	r0, r3
 800f252:	f7ff ffdf 	bl	800f214 <_ZN8touchgfx18TouchButtonTriggerC1Ev>
 800f256:	4a17      	ldr	r2, [pc, #92]	; (800f2b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEC1Ev+0x7c>)
 800f258:	687b      	ldr	r3, [r7, #4]
 800f25a:	601a      	str	r2, [r3, #0]
 800f25c:	687b      	ldr	r3, [r7, #4]
 800f25e:	3334      	adds	r3, #52	; 0x34
 800f260:	4618      	mov	r0, r3
 800f262:	f7fd fd33 	bl	800cccc <_ZN8touchgfx13BoxWithBorderC1Ev>
 800f266:	687b      	ldr	r3, [r7, #4]
 800f268:	3368      	adds	r3, #104	; 0x68
 800f26a:	4618      	mov	r0, r3
 800f26c:	f7fd f880 	bl	800c370 <_ZN8touchgfx9colortypeC1Ev>
 800f270:	687b      	ldr	r3, [r7, #4]
 800f272:	336c      	adds	r3, #108	; 0x6c
 800f274:	4618      	mov	r0, r3
 800f276:	f7fd f87b 	bl	800c370 <_ZN8touchgfx9colortypeC1Ev>
 800f27a:	687b      	ldr	r3, [r7, #4]
 800f27c:	3370      	adds	r3, #112	; 0x70
 800f27e:	4618      	mov	r0, r3
 800f280:	f7fd f876 	bl	800c370 <_ZN8touchgfx9colortypeC1Ev>
 800f284:	687b      	ldr	r3, [r7, #4]
 800f286:	3374      	adds	r3, #116	; 0x74
 800f288:	4618      	mov	r0, r3
 800f28a:	f7fd f871 	bl	800c370 <_ZN8touchgfx9colortypeC1Ev>
        borderBox.setXY(0, 0);
 800f28e:	687b      	ldr	r3, [r7, #4]
 800f290:	3334      	adds	r3, #52	; 0x34
 800f292:	2200      	movs	r2, #0
 800f294:	2100      	movs	r1, #0
 800f296:	4618      	mov	r0, r3
 800f298:	f7fd f9ad 	bl	800c5f6 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 800f29c:	687a      	ldr	r2, [r7, #4]
 800f29e:	687b      	ldr	r3, [r7, #4]
 800f2a0:	3334      	adds	r3, #52	; 0x34
 800f2a2:	4619      	mov	r1, r3
 800f2a4:	4610      	mov	r0, r2
 800f2a6:	f003 f81b 	bl	80122e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800f2aa:	687b      	ldr	r3, [r7, #4]
 800f2ac:	4618      	mov	r0, r3
 800f2ae:	3708      	adds	r7, #8
 800f2b0:	46bd      	mov	sp, r7
 800f2b2:	bd80      	pop	{r7, pc}
 800f2b4:	0802ba84 	.word	0x0802ba84

0800f2b8 <_ZN8touchgfx18ClickButtonTriggerC1Ev>:
 800f2b8:	b580      	push	{r7, lr}
 800f2ba:	b082      	sub	sp, #8
 800f2bc:	af00      	add	r7, sp, #0
 800f2be:	6078      	str	r0, [r7, #4]
 800f2c0:	687b      	ldr	r3, [r7, #4]
 800f2c2:	4618      	mov	r0, r3
 800f2c4:	f7fd fc24 	bl	800cb10 <_ZN8touchgfx23AbstractButtonContainerC1Ev>
 800f2c8:	4a03      	ldr	r2, [pc, #12]	; (800f2d8 <_ZN8touchgfx18ClickButtonTriggerC1Ev+0x20>)
 800f2ca:	687b      	ldr	r3, [r7, #4]
 800f2cc:	601a      	str	r2, [r3, #0]
 800f2ce:	687b      	ldr	r3, [r7, #4]
 800f2d0:	4618      	mov	r0, r3
 800f2d2:	3708      	adds	r7, #8
 800f2d4:	46bd      	mov	sp, r7
 800f2d6:	bd80      	pop	{r7, pc}
 800f2d8:	0802bcd4 	.word	0x0802bcd4

0800f2dc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
    BoxWithBorderButtonStyle()
 800f2dc:	b580      	push	{r7, lr}
 800f2de:	b082      	sub	sp, #8
 800f2e0:	af00      	add	r7, sp, #0
 800f2e2:	6078      	str	r0, [r7, #4]
        : T(), up(), down()
 800f2e4:	687b      	ldr	r3, [r7, #4]
 800f2e6:	4618      	mov	r0, r3
 800f2e8:	2334      	movs	r3, #52	; 0x34
 800f2ea:	461a      	mov	r2, r3
 800f2ec:	2100      	movs	r1, #0
 800f2ee:	f019 fc99 	bl	8028c24 <memset>
 800f2f2:	687b      	ldr	r3, [r7, #4]
 800f2f4:	4618      	mov	r0, r3
 800f2f6:	f7ff ffdf 	bl	800f2b8 <_ZN8touchgfx18ClickButtonTriggerC1Ev>
 800f2fa:	4a17      	ldr	r2, [pc, #92]	; (800f358 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x7c>)
 800f2fc:	687b      	ldr	r3, [r7, #4]
 800f2fe:	601a      	str	r2, [r3, #0]
 800f300:	687b      	ldr	r3, [r7, #4]
 800f302:	3334      	adds	r3, #52	; 0x34
 800f304:	4618      	mov	r0, r3
 800f306:	f7fd fce1 	bl	800cccc <_ZN8touchgfx13BoxWithBorderC1Ev>
 800f30a:	687b      	ldr	r3, [r7, #4]
 800f30c:	3368      	adds	r3, #104	; 0x68
 800f30e:	4618      	mov	r0, r3
 800f310:	f7fd f82e 	bl	800c370 <_ZN8touchgfx9colortypeC1Ev>
 800f314:	687b      	ldr	r3, [r7, #4]
 800f316:	336c      	adds	r3, #108	; 0x6c
 800f318:	4618      	mov	r0, r3
 800f31a:	f7fd f829 	bl	800c370 <_ZN8touchgfx9colortypeC1Ev>
 800f31e:	687b      	ldr	r3, [r7, #4]
 800f320:	3370      	adds	r3, #112	; 0x70
 800f322:	4618      	mov	r0, r3
 800f324:	f7fd f824 	bl	800c370 <_ZN8touchgfx9colortypeC1Ev>
 800f328:	687b      	ldr	r3, [r7, #4]
 800f32a:	3374      	adds	r3, #116	; 0x74
 800f32c:	4618      	mov	r0, r3
 800f32e:	f7fd f81f 	bl	800c370 <_ZN8touchgfx9colortypeC1Ev>
        borderBox.setXY(0, 0);
 800f332:	687b      	ldr	r3, [r7, #4]
 800f334:	3334      	adds	r3, #52	; 0x34
 800f336:	2200      	movs	r2, #0
 800f338:	2100      	movs	r1, #0
 800f33a:	4618      	mov	r0, r3
 800f33c:	f7fd f95b 	bl	800c5f6 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 800f340:	687a      	ldr	r2, [r7, #4]
 800f342:	687b      	ldr	r3, [r7, #4]
 800f344:	3334      	adds	r3, #52	; 0x34
 800f346:	4619      	mov	r1, r3
 800f348:	4610      	mov	r0, r2
 800f34a:	f002 ffc9 	bl	80122e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800f34e:	687b      	ldr	r3, [r7, #4]
 800f350:	4618      	mov	r0, r3
 800f352:	3708      	adds	r7, #8
 800f354:	46bd      	mov	sp, r7
 800f356:	bd80      	pop	{r7, pc}
 800f358:	0802b948 	.word	0x0802b948

0800f35c <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>:
    virtual ~GenericCallback()
 800f35c:	b480      	push	{r7}
 800f35e:	b083      	sub	sp, #12
 800f360:	af00      	add	r7, sp, #0
 800f362:	6078      	str	r0, [r7, #4]
    }
 800f364:	4a04      	ldr	r2, [pc, #16]	; (800f378 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev+0x1c>)
 800f366:	687b      	ldr	r3, [r7, #4]
 800f368:	601a      	str	r2, [r3, #0]
 800f36a:	687b      	ldr	r3, [r7, #4]
 800f36c:	4618      	mov	r0, r3
 800f36e:	370c      	adds	r7, #12
 800f370:	46bd      	mov	sp, r7
 800f372:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f376:	4770      	bx	lr
 800f378:	0802bd70 	.word	0x0802bd70

0800f37c <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED0Ev>:
    virtual ~GenericCallback()
 800f37c:	b580      	push	{r7, lr}
 800f37e:	b082      	sub	sp, #8
 800f380:	af00      	add	r7, sp, #0
 800f382:	6078      	str	r0, [r7, #4]
    }
 800f384:	6878      	ldr	r0, [r7, #4]
 800f386:	f7ff ffe9 	bl	800f35c <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800f38a:	2104      	movs	r1, #4
 800f38c:	6878      	ldr	r0, [r7, #4]
 800f38e:	f019 f9a0 	bl	80286d2 <_ZdlPvj>
 800f392:	687b      	ldr	r3, [r7, #4]
 800f394:	4618      	mov	r0, r3
 800f396:	3708      	adds	r7, #8
 800f398:	46bd      	mov	sp, r7
 800f39a:	bd80      	pop	{r7, pc}

0800f39c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE20handlePressedUpdatedEv>:
    colortype down;          ///< The down
    colortype borderUp;      ///< The border up
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800f39c:	b590      	push	{r4, r7, lr}
 800f39e:	b083      	sub	sp, #12
 800f3a0:	af00      	add	r7, sp, #0
 800f3a2:	6078      	str	r0, [r7, #4]
    {
        borderBox.setColor(T::getPressed() ? down : up);
 800f3a4:	687b      	ldr	r3, [r7, #4]
 800f3a6:	f103 0434 	add.w	r4, r3, #52	; 0x34
 800f3aa:	687b      	ldr	r3, [r7, #4]
 800f3ac:	4618      	mov	r0, r3
 800f3ae:	f7fd fbe5 	bl	800cb7c <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>
 800f3b2:	4603      	mov	r3, r0
 800f3b4:	2b00      	cmp	r3, #0
 800f3b6:	d002      	beq.n	800f3be <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE20handlePressedUpdatedEv+0x22>
 800f3b8:	687b      	ldr	r3, [r7, #4]
 800f3ba:	336c      	adds	r3, #108	; 0x6c
 800f3bc:	e001      	b.n	800f3c2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE20handlePressedUpdatedEv+0x26>
 800f3be:	687b      	ldr	r3, [r7, #4]
 800f3c0:	3368      	adds	r3, #104	; 0x68
 800f3c2:	6819      	ldr	r1, [r3, #0]
 800f3c4:	4620      	mov	r0, r4
 800f3c6:	f7fd fb2d 	bl	800ca24 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800f3ca:	687b      	ldr	r3, [r7, #4]
 800f3cc:	f103 0434 	add.w	r4, r3, #52	; 0x34
 800f3d0:	687b      	ldr	r3, [r7, #4]
 800f3d2:	4618      	mov	r0, r3
 800f3d4:	f7fd fbd2 	bl	800cb7c <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>
 800f3d8:	4603      	mov	r3, r0
 800f3da:	2b00      	cmp	r3, #0
 800f3dc:	d002      	beq.n	800f3e4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE20handlePressedUpdatedEv+0x48>
 800f3de:	687b      	ldr	r3, [r7, #4]
 800f3e0:	3374      	adds	r3, #116	; 0x74
 800f3e2:	e001      	b.n	800f3e8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE20handlePressedUpdatedEv+0x4c>
 800f3e4:	687b      	ldr	r3, [r7, #4]
 800f3e6:	3370      	adds	r3, #112	; 0x70
 800f3e8:	6819      	ldr	r1, [r3, #0]
 800f3ea:	4620      	mov	r0, r4
 800f3ec:	f7fd fc8a 	bl	800cd04 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
        T::handlePressedUpdated();
 800f3f0:	687b      	ldr	r3, [r7, #4]
 800f3f2:	4618      	mov	r0, r3
 800f3f4:	f7fd fc11 	bl	800cc1a <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>
    }
 800f3f8:	bf00      	nop
 800f3fa:	370c      	adds	r7, #12
 800f3fc:	46bd      	mov	sp, r7
 800f3fe:	bd90      	pop	{r4, r7, pc}

0800f400 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE20handlePressedUpdatedEv>:
    Bitmap iconReleased; ///< Icon to display when button is not pressed.
    Bitmap iconPressed;  ///< Icon to display when button is pressed.
    Image iconImage;     ///< The icon image

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800f400:	b590      	push	{r4, r7, lr}
 800f402:	b083      	sub	sp, #12
 800f404:	af00      	add	r7, sp, #0
 800f406:	6078      	str	r0, [r7, #4]
    {
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 800f408:	687b      	ldr	r3, [r7, #4]
 800f40a:	f103 047c 	add.w	r4, r3, #124	; 0x7c
 800f40e:	687b      	ldr	r3, [r7, #4]
 800f410:	4618      	mov	r0, r3
 800f412:	f7fd fbb3 	bl	800cb7c <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>
 800f416:	4603      	mov	r3, r0
 800f418:	2b00      	cmp	r3, #0
 800f41a:	d002      	beq.n	800f422 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE20handlePressedUpdatedEv+0x22>
 800f41c:	687b      	ldr	r3, [r7, #4]
 800f41e:	337a      	adds	r3, #122	; 0x7a
 800f420:	e001      	b.n	800f426 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE20handlePressedUpdatedEv+0x26>
 800f422:	687b      	ldr	r3, [r7, #4]
 800f424:	3378      	adds	r3, #120	; 0x78
 800f426:	4619      	mov	r1, r3
 800f428:	4620      	mov	r0, r4
 800f42a:	f005 fc3e 	bl	8014caa <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 800f42e:	687b      	ldr	r3, [r7, #4]
 800f430:	4618      	mov	r0, r3
 800f432:	f7ff ffb3 	bl	800f39c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE20handlePressedUpdatedEv>
    }
 800f436:	bf00      	nop
 800f438:	370c      	adds	r7, #12
 800f43a:	46bd      	mov	sp, r7
 800f43c:	bd90      	pop	{r4, r7, pc}

0800f43e <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE8setIconXEs>:
    void setIconX(int16_t x)
 800f43e:	b580      	push	{r7, lr}
 800f440:	b082      	sub	sp, #8
 800f442:	af00      	add	r7, sp, #0
 800f444:	6078      	str	r0, [r7, #4]
 800f446:	460b      	mov	r3, r1
 800f448:	807b      	strh	r3, [r7, #2]
        iconImage.setX(x);
 800f44a:	687b      	ldr	r3, [r7, #4]
 800f44c:	337c      	adds	r3, #124	; 0x7c
 800f44e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800f452:	4611      	mov	r1, r2
 800f454:	4618      	mov	r0, r3
 800f456:	f7fd f8b0 	bl	800c5ba <_ZN8touchgfx8Drawable4setXEs>
    }
 800f45a:	bf00      	nop
 800f45c:	3708      	adds	r7, #8
 800f45e:	46bd      	mov	sp, r7
 800f460:	bd80      	pop	{r7, pc}

0800f462 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE8setIconYEs>:
    void setIconY(int16_t y)
 800f462:	b580      	push	{r7, lr}
 800f464:	b082      	sub	sp, #8
 800f466:	af00      	add	r7, sp, #0
 800f468:	6078      	str	r0, [r7, #4]
 800f46a:	460b      	mov	r3, r1
 800f46c:	807b      	strh	r3, [r7, #2]
        iconImage.setY(y);
 800f46e:	687b      	ldr	r3, [r7, #4]
 800f470:	337c      	adds	r3, #124	; 0x7c
 800f472:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800f476:	4611      	mov	r1, r2
 800f478:	4618      	mov	r0, r3
 800f47a:	f7fd f8ad 	bl	800c5d8 <_ZN8touchgfx8Drawable4setYEs>
    }
 800f47e:	bf00      	nop
 800f480:	3708      	adds	r7, #8
 800f482:	46bd      	mov	sp, r7
 800f484:	bd80      	pop	{r7, pc}

0800f486 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 800f486:	b590      	push	{r4, r7, lr}
 800f488:	b083      	sub	sp, #12
 800f48a:	af00      	add	r7, sp, #0
 800f48c:	6078      	str	r0, [r7, #4]
        borderBox.setColor(T::getPressed() ? down : up);
 800f48e:	687b      	ldr	r3, [r7, #4]
 800f490:	f103 0434 	add.w	r4, r3, #52	; 0x34
 800f494:	687b      	ldr	r3, [r7, #4]
 800f496:	4618      	mov	r0, r3
 800f498:	f7fd fb70 	bl	800cb7c <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>
 800f49c:	4603      	mov	r3, r0
 800f49e:	2b00      	cmp	r3, #0
 800f4a0:	d002      	beq.n	800f4a8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x22>
 800f4a2:	687b      	ldr	r3, [r7, #4]
 800f4a4:	336c      	adds	r3, #108	; 0x6c
 800f4a6:	e001      	b.n	800f4ac <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x26>
 800f4a8:	687b      	ldr	r3, [r7, #4]
 800f4aa:	3368      	adds	r3, #104	; 0x68
 800f4ac:	6819      	ldr	r1, [r3, #0]
 800f4ae:	4620      	mov	r0, r4
 800f4b0:	f7fd fab8 	bl	800ca24 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800f4b4:	687b      	ldr	r3, [r7, #4]
 800f4b6:	f103 0434 	add.w	r4, r3, #52	; 0x34
 800f4ba:	687b      	ldr	r3, [r7, #4]
 800f4bc:	4618      	mov	r0, r3
 800f4be:	f7fd fb5d 	bl	800cb7c <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>
 800f4c2:	4603      	mov	r3, r0
 800f4c4:	2b00      	cmp	r3, #0
 800f4c6:	d002      	beq.n	800f4ce <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x48>
 800f4c8:	687b      	ldr	r3, [r7, #4]
 800f4ca:	3374      	adds	r3, #116	; 0x74
 800f4cc:	e001      	b.n	800f4d2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x4c>
 800f4ce:	687b      	ldr	r3, [r7, #4]
 800f4d0:	3370      	adds	r3, #112	; 0x70
 800f4d2:	6819      	ldr	r1, [r3, #0]
 800f4d4:	4620      	mov	r0, r4
 800f4d6:	f7fd fc15 	bl	800cd04 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
        T::handlePressedUpdated();
 800f4da:	687b      	ldr	r3, [r7, #4]
 800f4dc:	4618      	mov	r0, r3
 800f4de:	f7fd fb9c 	bl	800cc1a <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>
    }
 800f4e2:	bf00      	nop
 800f4e4:	370c      	adds	r7, #12
 800f4e6:	46bd      	mov	sp, r7
 800f4e8:	bd90      	pop	{r4, r7, pc}

0800f4ea <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 800f4ea:	b590      	push	{r4, r7, lr}
 800f4ec:	b083      	sub	sp, #12
 800f4ee:	af00      	add	r7, sp, #0
 800f4f0:	6078      	str	r0, [r7, #4]
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 800f4f2:	687b      	ldr	r3, [r7, #4]
 800f4f4:	f103 047c 	add.w	r4, r3, #124	; 0x7c
 800f4f8:	687b      	ldr	r3, [r7, #4]
 800f4fa:	4618      	mov	r0, r3
 800f4fc:	f7fd fb3e 	bl	800cb7c <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>
 800f500:	4603      	mov	r3, r0
 800f502:	2b00      	cmp	r3, #0
 800f504:	d002      	beq.n	800f50c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x22>
 800f506:	687b      	ldr	r3, [r7, #4]
 800f508:	337a      	adds	r3, #122	; 0x7a
 800f50a:	e001      	b.n	800f510 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x26>
 800f50c:	687b      	ldr	r3, [r7, #4]
 800f50e:	3378      	adds	r3, #120	; 0x78
 800f510:	4619      	mov	r1, r3
 800f512:	4620      	mov	r0, r4
 800f514:	f005 fbc9 	bl	8014caa <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 800f518:	687b      	ldr	r3, [r7, #4]
 800f51a:	4618      	mov	r0, r3
 800f51c:	f7ff ffb3 	bl	800f486 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 800f520:	bf00      	nop
 800f522:	370c      	adds	r7, #12
 800f524:	46bd      	mov	sp, r7
 800f526:	bd90      	pop	{r4, r7, pc}

0800f528 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE8setIconXEs>:
    void setIconX(int16_t x)
 800f528:	b580      	push	{r7, lr}
 800f52a:	b082      	sub	sp, #8
 800f52c:	af00      	add	r7, sp, #0
 800f52e:	6078      	str	r0, [r7, #4]
 800f530:	460b      	mov	r3, r1
 800f532:	807b      	strh	r3, [r7, #2]
        iconImage.setX(x);
 800f534:	687b      	ldr	r3, [r7, #4]
 800f536:	337c      	adds	r3, #124	; 0x7c
 800f538:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800f53c:	4611      	mov	r1, r2
 800f53e:	4618      	mov	r0, r3
 800f540:	f7fd f83b 	bl	800c5ba <_ZN8touchgfx8Drawable4setXEs>
    }
 800f544:	bf00      	nop
 800f546:	3708      	adds	r7, #8
 800f548:	46bd      	mov	sp, r7
 800f54a:	bd80      	pop	{r7, pc}

0800f54c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE8setIconYEs>:
    void setIconY(int16_t y)
 800f54c:	b580      	push	{r7, lr}
 800f54e:	b082      	sub	sp, #8
 800f550:	af00      	add	r7, sp, #0
 800f552:	6078      	str	r0, [r7, #4]
 800f554:	460b      	mov	r3, r1
 800f556:	807b      	strh	r3, [r7, #2]
        iconImage.setY(y);
 800f558:	687b      	ldr	r3, [r7, #4]
 800f55a:	337c      	adds	r3, #124	; 0x7c
 800f55c:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800f560:	4611      	mov	r1, r2
 800f562:	4618      	mov	r0, r3
 800f564:	f7fd f838 	bl	800c5d8 <_ZN8touchgfx8Drawable4setYEs>
    }
 800f568:	bf00      	nop
 800f56a:	3708      	adds	r7, #8
 800f56c:	46bd      	mov	sp, r7
 800f56e:	bd80      	pop	{r7, pc}

0800f570 <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800f570:	b580      	push	{r7, lr}
 800f572:	b082      	sub	sp, #8
 800f574:	af00      	add	r7, sp, #0
 800f576:	6078      	str	r0, [r7, #4]
 800f578:	4a05      	ldr	r2, [pc, #20]	; (800f590 <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800f57a:	687b      	ldr	r3, [r7, #4]
 800f57c:	601a      	str	r2, [r3, #0]
 800f57e:	687b      	ldr	r3, [r7, #4]
 800f580:	4618      	mov	r0, r3
 800f582:	f7ff feeb 	bl	800f35c <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800f586:	687b      	ldr	r3, [r7, #4]
 800f588:	4618      	mov	r0, r3
 800f58a:	3708      	adds	r7, #8
 800f58c:	46bd      	mov	sp, r7
 800f58e:	bd80      	pop	{r7, pc}
 800f590:	0802b890 	.word	0x0802b890

0800f594 <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800f594:	b580      	push	{r7, lr}
 800f596:	b082      	sub	sp, #8
 800f598:	af00      	add	r7, sp, #0
 800f59a:	6078      	str	r0, [r7, #4]
 800f59c:	6878      	ldr	r0, [r7, #4]
 800f59e:	f7ff ffe7 	bl	800f570 <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800f5a2:	2110      	movs	r1, #16
 800f5a4:	6878      	ldr	r0, [r7, #4]
 800f5a6:	f019 f894 	bl	80286d2 <_ZdlPvj>
 800f5aa:	687b      	ldr	r3, [r7, #4]
 800f5ac:	4618      	mov	r0, r3
 800f5ae:	3708      	adds	r7, #8
 800f5b0:	46bd      	mov	sp, r7
 800f5b2:	bd80      	pop	{r7, pc}

0800f5b4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class IconButtonStyle : public T
 800f5b4:	b580      	push	{r7, lr}
 800f5b6:	b082      	sub	sp, #8
 800f5b8:	af00      	add	r7, sp, #0
 800f5ba:	6078      	str	r0, [r7, #4]
 800f5bc:	4a08      	ldr	r2, [pc, #32]	; (800f5e0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev+0x2c>)
 800f5be:	687b      	ldr	r3, [r7, #4]
 800f5c0:	601a      	str	r2, [r3, #0]
 800f5c2:	687b      	ldr	r3, [r7, #4]
 800f5c4:	337c      	adds	r3, #124	; 0x7c
 800f5c6:	4618      	mov	r0, r3
 800f5c8:	f7fd fb3c 	bl	800cc44 <_ZN8touchgfx5ImageD1Ev>
 800f5cc:	687b      	ldr	r3, [r7, #4]
 800f5ce:	4618      	mov	r0, r3
 800f5d0:	f7ff fc26 	bl	800ee20 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800f5d4:	687b      	ldr	r3, [r7, #4]
 800f5d6:	4618      	mov	r0, r3
 800f5d8:	3708      	adds	r7, #8
 800f5da:	46bd      	mov	sp, r7
 800f5dc:	bd80      	pop	{r7, pc}
 800f5de:	bf00      	nop
 800f5e0:	0802b8a8 	.word	0x0802b8a8

0800f5e4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
 800f5e4:	b580      	push	{r7, lr}
 800f5e6:	b082      	sub	sp, #8
 800f5e8:	af00      	add	r7, sp, #0
 800f5ea:	6078      	str	r0, [r7, #4]
 800f5ec:	6878      	ldr	r0, [r7, #4]
 800f5ee:	f7ff ffe1 	bl	800f5b4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>
 800f5f2:	21a8      	movs	r1, #168	; 0xa8
 800f5f4:	6878      	ldr	r0, [r7, #4]
 800f5f6:	f019 f86c 	bl	80286d2 <_ZdlPvj>
 800f5fa:	687b      	ldr	r3, [r7, #4]
 800f5fc:	4618      	mov	r0, r3
 800f5fe:	3708      	adds	r7, #8
 800f600:	46bd      	mov	sp, r7
 800f602:	bd80      	pop	{r7, pc}

0800f604 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEED1Ev>:
 800f604:	b580      	push	{r7, lr}
 800f606:	b082      	sub	sp, #8
 800f608:	af00      	add	r7, sp, #0
 800f60a:	6078      	str	r0, [r7, #4]
 800f60c:	4a08      	ldr	r2, [pc, #32]	; (800f630 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEED1Ev+0x2c>)
 800f60e:	687b      	ldr	r3, [r7, #4]
 800f610:	601a      	str	r2, [r3, #0]
 800f612:	687b      	ldr	r3, [r7, #4]
 800f614:	337c      	adds	r3, #124	; 0x7c
 800f616:	4618      	mov	r0, r3
 800f618:	f7fd fb14 	bl	800cc44 <_ZN8touchgfx5ImageD1Ev>
 800f61c:	687b      	ldr	r3, [r7, #4]
 800f61e:	4618      	mov	r0, r3
 800f620:	f7ff fb7c 	bl	800ed1c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEED1Ev>
 800f624:	687b      	ldr	r3, [r7, #4]
 800f626:	4618      	mov	r0, r3
 800f628:	3708      	adds	r7, #8
 800f62a:	46bd      	mov	sp, r7
 800f62c:	bd80      	pop	{r7, pc}
 800f62e:	bf00      	nop
 800f630:	0802b9e4 	.word	0x0802b9e4

0800f634 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEED0Ev>:
 800f634:	b580      	push	{r7, lr}
 800f636:	b082      	sub	sp, #8
 800f638:	af00      	add	r7, sp, #0
 800f63a:	6078      	str	r0, [r7, #4]
 800f63c:	6878      	ldr	r0, [r7, #4]
 800f63e:	f7ff ffe1 	bl	800f604 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEED1Ev>
 800f642:	21a8      	movs	r1, #168	; 0xa8
 800f644:	6878      	ldr	r0, [r7, #4]
 800f646:	f019 f844 	bl	80286d2 <_ZdlPvj>
 800f64a:	687b      	ldr	r3, [r7, #4]
 800f64c:	4618      	mov	r0, r3
 800f64e:	3708      	adds	r7, #8
 800f650:	46bd      	mov	sp, r7
 800f652:	bd80      	pop	{r7, pc}

0800f654 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800f654:	b580      	push	{r7, lr}
 800f656:	b082      	sub	sp, #8
 800f658:	af00      	add	r7, sp, #0
 800f65a:	6078      	str	r0, [r7, #4]
 800f65c:	4a05      	ldr	r2, [pc, #20]	; (800f674 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 800f65e:	687b      	ldr	r3, [r7, #4]
 800f660:	601a      	str	r2, [r3, #0]
 800f662:	687b      	ldr	r3, [r7, #4]
 800f664:	4618      	mov	r0, r3
 800f666:	f7fd fdbf 	bl	800d1e8 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800f66a:	687b      	ldr	r3, [r7, #4]
 800f66c:	4618      	mov	r0, r3
 800f66e:	3708      	adds	r7, #8
 800f670:	46bd      	mov	sp, r7
 800f672:	bd80      	pop	{r7, pc}
 800f674:	0802bba8 	.word	0x0802bba8

0800f678 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800f678:	b580      	push	{r7, lr}
 800f67a:	b082      	sub	sp, #8
 800f67c:	af00      	add	r7, sp, #0
 800f67e:	6078      	str	r0, [r7, #4]
 800f680:	6878      	ldr	r0, [r7, #4]
 800f682:	f7ff ffe7 	bl	800f654 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800f686:	214c      	movs	r1, #76	; 0x4c
 800f688:	6878      	ldr	r0, [r7, #4]
 800f68a:	f019 f822 	bl	80286d2 <_ZdlPvj>
 800f68e:	687b      	ldr	r3, [r7, #4]
 800f690:	4618      	mov	r0, r3
 800f692:	3708      	adds	r7, #8
 800f694:	46bd      	mov	sp, r7
 800f696:	bd80      	pop	{r7, pc}

0800f698 <_ZN8touchgfx13ScalableImageD1Ev>:
 * algorithm used. The rendering algorithm can be changed dynamically. Please note that
 * scaling images is done at runtime and may require a lot of calculations.
 *
 * @note Note that this widget does not support 1 bit per pixel color depth.
 */
class ScalableImage : public Image
 800f698:	b580      	push	{r7, lr}
 800f69a:	b082      	sub	sp, #8
 800f69c:	af00      	add	r7, sp, #0
 800f69e:	6078      	str	r0, [r7, #4]
 800f6a0:	4a05      	ldr	r2, [pc, #20]	; (800f6b8 <_ZN8touchgfx13ScalableImageD1Ev+0x20>)
 800f6a2:	687b      	ldr	r3, [r7, #4]
 800f6a4:	601a      	str	r2, [r3, #0]
 800f6a6:	687b      	ldr	r3, [r7, #4]
 800f6a8:	4618      	mov	r0, r3
 800f6aa:	f7fd facb 	bl	800cc44 <_ZN8touchgfx5ImageD1Ev>
 800f6ae:	687b      	ldr	r3, [r7, #4]
 800f6b0:	4618      	mov	r0, r3
 800f6b2:	3708      	adds	r7, #8
 800f6b4:	46bd      	mov	sp, r7
 800f6b6:	bd80      	pop	{r7, pc}
 800f6b8:	0802ca30 	.word	0x0802ca30

0800f6bc <_ZN8touchgfx13ScalableImageD0Ev>:
 800f6bc:	b580      	push	{r7, lr}
 800f6be:	b082      	sub	sp, #8
 800f6c0:	af00      	add	r7, sp, #0
 800f6c2:	6078      	str	r0, [r7, #4]
 800f6c4:	6878      	ldr	r0, [r7, #4]
 800f6c6:	f7ff ffe7 	bl	800f698 <_ZN8touchgfx13ScalableImageD1Ev>
 800f6ca:	212c      	movs	r1, #44	; 0x2c
 800f6cc:	6878      	ldr	r0, [r7, #4]
 800f6ce:	f019 f800 	bl	80286d2 <_ZdlPvj>
 800f6d2:	687b      	ldr	r3, [r7, #4]
 800f6d4:	4618      	mov	r0, r3
 800f6d6:	3708      	adds	r7, #8
 800f6d8:	46bd      	mov	sp, r7
 800f6da:	bd80      	pop	{r7, pc}

0800f6dc <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 * to implement a progress indicator. For more specific implementations see classes that
 * inherit from AbstractProgressIndicator.
 *
 * @see BoxProgress, CircleProgress, ImageProgress, LineProgress, TextProgress
 */
class AbstractProgressIndicator : public Container
 800f6dc:	b580      	push	{r7, lr}
 800f6de:	b082      	sub	sp, #8
 800f6e0:	af00      	add	r7, sp, #0
 800f6e2:	6078      	str	r0, [r7, #4]
 800f6e4:	4a0a      	ldr	r2, [pc, #40]	; (800f710 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev+0x34>)
 800f6e6:	687b      	ldr	r3, [r7, #4]
 800f6e8:	601a      	str	r2, [r3, #0]
 800f6ea:	687b      	ldr	r3, [r7, #4]
 800f6ec:	3358      	adds	r3, #88	; 0x58
 800f6ee:	4618      	mov	r0, r3
 800f6f0:	f7fd f9ec 	bl	800cacc <_ZN8touchgfx9ContainerD1Ev>
 800f6f4:	687b      	ldr	r3, [r7, #4]
 800f6f6:	332c      	adds	r3, #44	; 0x2c
 800f6f8:	4618      	mov	r0, r3
 800f6fa:	f7fd faa3 	bl	800cc44 <_ZN8touchgfx5ImageD1Ev>
 800f6fe:	687b      	ldr	r3, [r7, #4]
 800f700:	4618      	mov	r0, r3
 800f702:	f7fd f9e3 	bl	800cacc <_ZN8touchgfx9ContainerD1Ev>
 800f706:	687b      	ldr	r3, [r7, #4]
 800f708:	4618      	mov	r0, r3
 800f70a:	3708      	adds	r7, #8
 800f70c:	46bd      	mov	sp, r7
 800f70e:	bd80      	pop	{r7, pc}
 800f710:	0802c538 	.word	0x0802c538

0800f714 <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800f714:	b580      	push	{r7, lr}
 800f716:	b082      	sub	sp, #8
 800f718:	af00      	add	r7, sp, #0
 800f71a:	6078      	str	r0, [r7, #4]
 800f71c:	6878      	ldr	r0, [r7, #4]
 800f71e:	f7ff ffdd 	bl	800f6dc <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>
 800f722:	21b4      	movs	r1, #180	; 0xb4
 800f724:	6878      	ldr	r0, [r7, #4]
 800f726:	f018 ffd4 	bl	80286d2 <_ZdlPvj>
 800f72a:	687b      	ldr	r3, [r7, #4]
 800f72c:	4618      	mov	r0, r3
 800f72e:	3708      	adds	r7, #8
 800f730:	46bd      	mov	sp, r7
 800f732:	bd80      	pop	{r7, pc}

0800f734 <_ZN8touchgfx12CanvasWidgetD1Ev>:
 * Class for drawing complex polygons on the display using CanvasWidgetRenderer. The
 * CanvasWidget is used by passing it to a Canvas object, drawing the outline of the
 * object and then having CanvasWidget render the outline on the display using the
 * assigned painter.
 */
class CanvasWidget : public Widget
 800f734:	b580      	push	{r7, lr}
 800f736:	b082      	sub	sp, #8
 800f738:	af00      	add	r7, sp, #0
 800f73a:	6078      	str	r0, [r7, #4]
 800f73c:	4a05      	ldr	r2, [pc, #20]	; (800f754 <_ZN8touchgfx12CanvasWidgetD1Ev+0x20>)
 800f73e:	687b      	ldr	r3, [r7, #4]
 800f740:	601a      	str	r2, [r3, #0]
 800f742:	687b      	ldr	r3, [r7, #4]
 800f744:	4618      	mov	r0, r3
 800f746:	f7fd f927 	bl	800c998 <_ZN8touchgfx6WidgetD1Ev>
 800f74a:	687b      	ldr	r3, [r7, #4]
 800f74c:	4618      	mov	r0, r3
 800f74e:	3708      	adds	r7, #8
 800f750:	46bd      	mov	sp, r7
 800f752:	bd80      	pop	{r7, pc}
 800f754:	0802c82c 	.word	0x0802c82c

0800f758 <_ZN8touchgfx12CanvasWidgetD0Ev>:
 800f758:	b580      	push	{r7, lr}
 800f75a:	b082      	sub	sp, #8
 800f75c:	af00      	add	r7, sp, #0
 800f75e:	6078      	str	r0, [r7, #4]
 800f760:	6878      	ldr	r0, [r7, #4]
 800f762:	f7ff ffe7 	bl	800f734 <_ZN8touchgfx12CanvasWidgetD1Ev>
 800f766:	212c      	movs	r1, #44	; 0x2c
 800f768:	6878      	ldr	r0, [r7, #4]
 800f76a:	f018 ffb2 	bl	80286d2 <_ZdlPvj>
 800f76e:	687b      	ldr	r3, [r7, #4]
 800f770:	4618      	mov	r0, r3
 800f772:	3708      	adds	r7, #8
 800f774:	46bd      	mov	sp, r7
 800f776:	bd80      	pop	{r7, pc}

0800f778 <_ZN8touchgfx4LineD1Ev>:
 *            line.setStart(1.1f, 1.1f); // Will use (35/32, 35/32) = (1.09375f, 1.09375f)
 *            int x, y;
 *            line.getStart(&x, &y); // Will return (1, 1)
 *       @endcode.
 */
class Line : public CanvasWidget
 800f778:	b580      	push	{r7, lr}
 800f77a:	b082      	sub	sp, #8
 800f77c:	af00      	add	r7, sp, #0
 800f77e:	6078      	str	r0, [r7, #4]
 800f780:	4a05      	ldr	r2, [pc, #20]	; (800f798 <_ZN8touchgfx4LineD1Ev+0x20>)
 800f782:	687b      	ldr	r3, [r7, #4]
 800f784:	601a      	str	r2, [r3, #0]
 800f786:	687b      	ldr	r3, [r7, #4]
 800f788:	4618      	mov	r0, r3
 800f78a:	f7ff ffd3 	bl	800f734 <_ZN8touchgfx12CanvasWidgetD1Ev>
 800f78e:	687b      	ldr	r3, [r7, #4]
 800f790:	4618      	mov	r0, r3
 800f792:	3708      	adds	r7, #8
 800f794:	46bd      	mov	sp, r7
 800f796:	bd80      	pop	{r7, pc}
 800f798:	0802c9b8 	.word	0x0802c9b8

0800f79c <_ZN8touchgfx4LineD0Ev>:
 800f79c:	b580      	push	{r7, lr}
 800f79e:	b082      	sub	sp, #8
 800f7a0:	af00      	add	r7, sp, #0
 800f7a2:	6078      	str	r0, [r7, #4]
 800f7a4:	6878      	ldr	r0, [r7, #4]
 800f7a6:	f7ff ffe7 	bl	800f778 <_ZN8touchgfx4LineD1Ev>
 800f7aa:	2170      	movs	r1, #112	; 0x70
 800f7ac:	6878      	ldr	r0, [r7, #4]
 800f7ae:	f018 ff90 	bl	80286d2 <_ZdlPvj>
 800f7b2:	687b      	ldr	r3, [r7, #4]
 800f7b4:	4618      	mov	r0, r3
 800f7b6:	3708      	adds	r7, #8
 800f7b8:	46bd      	mov	sp, r7
 800f7ba:	bd80      	pop	{r7, pc}

0800f7bc <_ZN8touchgfx12LineProgressD1Ev>:
 * horizontal or vertical, but can start at any coordinate and finish at any coordinate.
 *
 * @note As LineProgress uses CanvasWidgetRenderer, it is important that a buffer is set up by
 *       calling CanvasWidgetRendere::setBuffer().
 */
class LineProgress : public AbstractProgressIndicator
 800f7bc:	b580      	push	{r7, lr}
 800f7be:	b082      	sub	sp, #8
 800f7c0:	af00      	add	r7, sp, #0
 800f7c2:	6078      	str	r0, [r7, #4]
 800f7c4:	4a08      	ldr	r2, [pc, #32]	; (800f7e8 <_ZN8touchgfx12LineProgressD1Ev+0x2c>)
 800f7c6:	687b      	ldr	r3, [r7, #4]
 800f7c8:	601a      	str	r2, [r3, #0]
 800f7ca:	687b      	ldr	r3, [r7, #4]
 800f7cc:	33b4      	adds	r3, #180	; 0xb4
 800f7ce:	4618      	mov	r0, r3
 800f7d0:	f7ff ffd2 	bl	800f778 <_ZN8touchgfx4LineD1Ev>
 800f7d4:	687b      	ldr	r3, [r7, #4]
 800f7d6:	4618      	mov	r0, r3
 800f7d8:	f7ff ff80 	bl	800f6dc <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>
 800f7dc:	687b      	ldr	r3, [r7, #4]
 800f7de:	4618      	mov	r0, r3
 800f7e0:	3708      	adds	r7, #8
 800f7e2:	46bd      	mov	sp, r7
 800f7e4:	bd80      	pop	{r7, pc}
 800f7e6:	bf00      	nop
 800f7e8:	0802c440 	.word	0x0802c440

0800f7ec <_ZN8touchgfx12LineProgressD0Ev>:
 800f7ec:	b580      	push	{r7, lr}
 800f7ee:	b082      	sub	sp, #8
 800f7f0:	af00      	add	r7, sp, #0
 800f7f2:	6078      	str	r0, [r7, #4]
 800f7f4:	6878      	ldr	r0, [r7, #4]
 800f7f6:	f7ff ffe1 	bl	800f7bc <_ZN8touchgfx12LineProgressD1Ev>
 800f7fa:	f44f 719a 	mov.w	r1, #308	; 0x134
 800f7fe:	6878      	ldr	r0, [r7, #4]
 800f800:	f018 ff67 	bl	80286d2 <_ZdlPvj>
 800f804:	687b      	ldr	r3, [r7, #4]
 800f806:	4618      	mov	r0, r3
 800f808:	3708      	adds	r7, #8
 800f80a:	46bd      	mov	sp, r7
 800f80c:	bd80      	pop	{r7, pc}
	...

0800f810 <_ZN8touchgfx13PainterRGB565D1Ev>:
class PainterRGB565 : public AbstractPainterRGB565, public AbstractPainterColor
 800f810:	b580      	push	{r7, lr}
 800f812:	b082      	sub	sp, #8
 800f814:	af00      	add	r7, sp, #0
 800f816:	6078      	str	r0, [r7, #4]
 800f818:	4a09      	ldr	r2, [pc, #36]	; (800f840 <_ZN8touchgfx13PainterRGB565D1Ev+0x30>)
 800f81a:	687b      	ldr	r3, [r7, #4]
 800f81c:	601a      	str	r2, [r3, #0]
 800f81e:	4a09      	ldr	r2, [pc, #36]	; (800f844 <_ZN8touchgfx13PainterRGB565D1Ev+0x34>)
 800f820:	687b      	ldr	r3, [r7, #4]
 800f822:	609a      	str	r2, [r3, #8]
 800f824:	687b      	ldr	r3, [r7, #4]
 800f826:	3308      	adds	r3, #8
 800f828:	4618      	mov	r0, r3
 800f82a:	f7fd fdaf 	bl	800d38c <_ZN8touchgfx20AbstractPainterColorD1Ev>
 800f82e:	687b      	ldr	r3, [r7, #4]
 800f830:	4618      	mov	r0, r3
 800f832:	f7fd fe37 	bl	800d4a4 <_ZN8touchgfx21AbstractPainterRGB565D1Ev>
 800f836:	687b      	ldr	r3, [r7, #4]
 800f838:	4618      	mov	r0, r3
 800f83a:	3708      	adds	r7, #8
 800f83c:	46bd      	mov	sp, r7
 800f83e:	bd80      	pop	{r7, pc}
 800f840:	0802c7f4 	.word	0x0802c7f4
 800f844:	0802c818 	.word	0x0802c818

0800f848 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800f848:	f1a0 0008 	sub.w	r0, r0, #8
 800f84c:	e7e0      	b.n	800f810 <_ZN8touchgfx13PainterRGB565D1Ev>
 800f84e:	bf00      	nop

0800f850 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800f850:	b580      	push	{r7, lr}
 800f852:	b082      	sub	sp, #8
 800f854:	af00      	add	r7, sp, #0
 800f856:	6078      	str	r0, [r7, #4]
 800f858:	6878      	ldr	r0, [r7, #4]
 800f85a:	f7ff ffd9 	bl	800f810 <_ZN8touchgfx13PainterRGB565D1Ev>
 800f85e:	2114      	movs	r1, #20
 800f860:	6878      	ldr	r0, [r7, #4]
 800f862:	f018 ff36 	bl	80286d2 <_ZdlPvj>
 800f866:	687b      	ldr	r3, [r7, #4]
 800f868:	4618      	mov	r0, r3
 800f86a:	3708      	adds	r7, #8
 800f86c:	46bd      	mov	sp, r7
 800f86e:	bd80      	pop	{r7, pc}

0800f870 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800f870:	f1a0 0008 	sub.w	r0, r0, #8
 800f874:	e7ec      	b.n	800f850 <_ZN8touchgfx13PainterRGB565D0Ev>

0800f876 <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800f876:	b580      	push	{r7, lr}
 800f878:	b082      	sub	sp, #8
 800f87a:	af00      	add	r7, sp, #0
 800f87c:	6078      	str	r0, [r7, #4]
 800f87e:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800f880:	687b      	ldr	r3, [r7, #4]
 800f882:	685b      	ldr	r3, [r3, #4]
 800f884:	687a      	ldr	r2, [r7, #4]
 800f886:	68d2      	ldr	r2, [r2, #12]
 800f888:	1052      	asrs	r2, r2, #1
 800f88a:	1898      	adds	r0, r3, r2
 800f88c:	687b      	ldr	r3, [r7, #4]
 800f88e:	68db      	ldr	r3, [r3, #12]
 800f890:	f003 0301 	and.w	r3, r3, #1
 800f894:	2b00      	cmp	r3, #0
 800f896:	d102      	bne.n	800f89e <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800f898:	687b      	ldr	r3, [r7, #4]
 800f89a:	689b      	ldr	r3, [r3, #8]
 800f89c:	e00a      	b.n	800f8b4 <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800f89e:	687b      	ldr	r3, [r7, #4]
 800f8a0:	685b      	ldr	r3, [r3, #4]
 800f8a2:	687a      	ldr	r2, [r7, #4]
 800f8a4:	68d2      	ldr	r2, [r2, #12]
 800f8a6:	1052      	asrs	r2, r2, #1
 800f8a8:	4413      	add	r3, r2
 800f8aa:	681b      	ldr	r3, [r3, #0]
 800f8ac:	687a      	ldr	r2, [r7, #4]
 800f8ae:	6892      	ldr	r2, [r2, #8]
 800f8b0:	4413      	add	r3, r2
 800f8b2:	681b      	ldr	r3, [r3, #0]
 800f8b4:	6839      	ldr	r1, [r7, #0]
 800f8b6:	4798      	blx	r3
    }
 800f8b8:	bf00      	nop
 800f8ba:	3708      	adds	r7, #8
 800f8bc:	46bd      	mov	sp, r7
 800f8be:	bd80      	pop	{r7, pc}

0800f8c0 <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800f8c0:	b480      	push	{r7}
 800f8c2:	b083      	sub	sp, #12
 800f8c4:	af00      	add	r7, sp, #0
 800f8c6:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800f8c8:	687b      	ldr	r3, [r7, #4]
 800f8ca:	685b      	ldr	r3, [r3, #4]
 800f8cc:	2b00      	cmp	r3, #0
 800f8ce:	d010      	beq.n	800f8f2 <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800f8d0:	687b      	ldr	r3, [r7, #4]
 800f8d2:	689b      	ldr	r3, [r3, #8]
 800f8d4:	2b00      	cmp	r3, #0
 800f8d6:	d107      	bne.n	800f8e8 <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800f8d8:	687b      	ldr	r3, [r7, #4]
 800f8da:	68db      	ldr	r3, [r3, #12]
 800f8dc:	f003 0301 	and.w	r3, r3, #1
 800f8e0:	2b00      	cmp	r3, #0
 800f8e2:	d101      	bne.n	800f8e8 <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800f8e4:	2301      	movs	r3, #1
 800f8e6:	e000      	b.n	800f8ea <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800f8e8:	2300      	movs	r3, #0
 800f8ea:	2b01      	cmp	r3, #1
 800f8ec:	d001      	beq.n	800f8f2 <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800f8ee:	2301      	movs	r3, #1
 800f8f0:	e000      	b.n	800f8f4 <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800f8f2:	2300      	movs	r3, #0
    }
 800f8f4:	4618      	mov	r0, r3
 800f8f6:	370c      	adds	r7, #12
 800f8f8:	46bd      	mov	sp, r7
 800f8fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f8fe:	4770      	bx	lr

0800f900 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
 800f900:	b590      	push	{r4, r7, lr}
 800f902:	b083      	sub	sp, #12
 800f904:	af00      	add	r7, sp, #0
 800f906:	6078      	str	r0, [r7, #4]
    {
        iconImage.setAlpha(T::getAlpha());
 800f908:	687b      	ldr	r3, [r7, #4]
 800f90a:	f103 047c 	add.w	r4, r3, #124	; 0x7c
 800f90e:	687b      	ldr	r3, [r7, #4]
 800f910:	4618      	mov	r0, r3
 800f912:	f7fd f940 	bl	800cb96 <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>
 800f916:	4603      	mov	r3, r0
 800f918:	4619      	mov	r1, r3
 800f91a:	4620      	mov	r0, r4
 800f91c:	f7fd f8c6 	bl	800caac <_ZN8touchgfx5Image8setAlphaEh>
        T::handleAlphaUpdated();
 800f920:	687b      	ldr	r3, [r7, #4]
 800f922:	4618      	mov	r0, r3
 800f924:	f000 f804 	bl	800f930 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>
    }
 800f928:	bf00      	nop
 800f92a:	370c      	adds	r7, #12
 800f92c:	46bd      	mov	sp, r7
 800f92e:	bd90      	pop	{r4, r7, pc}

0800f930 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
 800f930:	b590      	push	{r4, r7, lr}
 800f932:	b083      	sub	sp, #12
 800f934:	af00      	add	r7, sp, #0
 800f936:	6078      	str	r0, [r7, #4]
    {
        borderBox.setAlpha(T::getAlpha());
 800f938:	687b      	ldr	r3, [r7, #4]
 800f93a:	f103 0434 	add.w	r4, r3, #52	; 0x34
 800f93e:	687b      	ldr	r3, [r7, #4]
 800f940:	4618      	mov	r0, r3
 800f942:	f7fd f928 	bl	800cb96 <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>
 800f946:	4603      	mov	r3, r0
 800f948:	4619      	mov	r1, r3
 800f94a:	4620      	mov	r0, r4
 800f94c:	f7fd f878 	bl	800ca40 <_ZN8touchgfx3Box8setAlphaEh>
        T::handleAlphaUpdated();
 800f950:	687b      	ldr	r3, [r7, #4]
 800f952:	4618      	mov	r0, r3
 800f954:	f7fd f96b 	bl	800cc2e <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>
    }
 800f958:	bf00      	nop
 800f95a:	370c      	adds	r7, #12
 800f95c:	46bd      	mov	sp, r7
 800f95e:	bd90      	pop	{r4, r7, pc}

0800f960 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE18handleAlphaUpdatedEv>:
    virtual void handleAlphaUpdated()
 800f960:	b590      	push	{r4, r7, lr}
 800f962:	b083      	sub	sp, #12
 800f964:	af00      	add	r7, sp, #0
 800f966:	6078      	str	r0, [r7, #4]
        iconImage.setAlpha(T::getAlpha());
 800f968:	687b      	ldr	r3, [r7, #4]
 800f96a:	f103 047c 	add.w	r4, r3, #124	; 0x7c
 800f96e:	687b      	ldr	r3, [r7, #4]
 800f970:	4618      	mov	r0, r3
 800f972:	f7fd f910 	bl	800cb96 <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>
 800f976:	4603      	mov	r3, r0
 800f978:	4619      	mov	r1, r3
 800f97a:	4620      	mov	r0, r4
 800f97c:	f7fd f896 	bl	800caac <_ZN8touchgfx5Image8setAlphaEh>
        T::handleAlphaUpdated();
 800f980:	687b      	ldr	r3, [r7, #4]
 800f982:	4618      	mov	r0, r3
 800f984:	f000 f804 	bl	800f990 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE18handleAlphaUpdatedEv>
    }
 800f988:	bf00      	nop
 800f98a:	370c      	adds	r7, #12
 800f98c:	46bd      	mov	sp, r7
 800f98e:	bd90      	pop	{r4, r7, pc}

0800f990 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE18handleAlphaUpdatedEv>:
    virtual void handleAlphaUpdated()
 800f990:	b590      	push	{r4, r7, lr}
 800f992:	b083      	sub	sp, #12
 800f994:	af00      	add	r7, sp, #0
 800f996:	6078      	str	r0, [r7, #4]
        borderBox.setAlpha(T::getAlpha());
 800f998:	687b      	ldr	r3, [r7, #4]
 800f99a:	f103 0434 	add.w	r4, r3, #52	; 0x34
 800f99e:	687b      	ldr	r3, [r7, #4]
 800f9a0:	4618      	mov	r0, r3
 800f9a2:	f7fd f8f8 	bl	800cb96 <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>
 800f9a6:	4603      	mov	r3, r0
 800f9a8:	4619      	mov	r1, r3
 800f9aa:	4620      	mov	r0, r4
 800f9ac:	f7fd f848 	bl	800ca40 <_ZN8touchgfx3Box8setAlphaEh>
        T::handleAlphaUpdated();
 800f9b0:	687b      	ldr	r3, [r7, #4]
 800f9b2:	4618      	mov	r0, r3
 800f9b4:	f7fd f93b 	bl	800cc2e <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>
    }
 800f9b8:	bf00      	nop
 800f9ba:	370c      	adds	r7, #12
 800f9bc:	46bd      	mov	sp, r7
 800f9be:	bd90      	pop	{r4, r7, pc}

0800f9c0 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800f9c0:	b480      	push	{r7}
 800f9c2:	af00      	add	r7, sp, #0
    return bitmap_database;
 800f9c4:	4b02      	ldr	r3, [pc, #8]	; (800f9d0 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800f9c6:	4618      	mov	r0, r3
 800f9c8:	46bd      	mov	sp, r7
 800f9ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f9ce:	4770      	bx	lr
 800f9d0:	0802be84 	.word	0x0802be84

0800f9d4 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800f9d4:	b480      	push	{r7}
 800f9d6:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800f9d8:	2309      	movs	r3, #9
}
 800f9da:	4618      	mov	r0, r3
 800f9dc:	46bd      	mov	sp, r7
 800f9de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f9e2:	4770      	bx	lr

0800f9e4 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
     * @param  prevChar The Unicode value of the previous character.
     * @param  glyph    the glyph object for the current character.
     *
     * @return The kerning distance between prevChar and glyph char.
     */
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800f9e4:	b480      	push	{r7}
 800f9e6:	b085      	sub	sp, #20
 800f9e8:	af00      	add	r7, sp, #0
 800f9ea:	60f8      	str	r0, [r7, #12]
 800f9ec:	460b      	mov	r3, r1
 800f9ee:	607a      	str	r2, [r7, #4]
 800f9f0:	817b      	strh	r3, [r7, #10]
    {
        (void)prevChar; // Unused variable
        (void)glyph;    // Unused variable
        return 0;
 800f9f2:	2300      	movs	r3, #0
    }
 800f9f4:	4618      	mov	r0, r3
 800f9f6:	3714      	adds	r7, #20
 800f9f8:	46bd      	mov	sp, r7
 800f9fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f9fe:	4770      	bx	lr

0800fa00 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    /**
     * Gets GSUB table. Currently only used for Devanagari fonts.
     *
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
 800fa00:	b480      	push	{r7}
 800fa02:	b083      	sub	sp, #12
 800fa04:	af00      	add	r7, sp, #0
 800fa06:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800fa08:	2300      	movs	r3, #0
    }
 800fa0a:	4618      	mov	r0, r3
 800fa0c:	370c      	adds	r7, #12
 800fa0e:	46bd      	mov	sp, r7
 800fa10:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa14:	4770      	bx	lr

0800fa16 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    /**
     * Gets the contextual forms table used in arabic fonts.
     *
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800fa16:	b480      	push	{r7}
 800fa18:	b083      	sub	sp, #12
 800fa1a:	af00      	add	r7, sp, #0
 800fa1c:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800fa1e:	2300      	movs	r3, #0
    }
 800fa20:	4618      	mov	r0, r3
 800fa22:	370c      	adds	r7, #12
 800fa24:	46bd      	mov	sp, r7
 800fa26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa2a:	4770      	bx	lr

0800fa2c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800fa2c:	b480      	push	{r7}
 800fa2e:	b085      	sub	sp, #20
 800fa30:	af00      	add	r7, sp, #0
 800fa32:	60f8      	str	r0, [r7, #12]
 800fa34:	60b9      	str	r1, [r7, #8]
 800fa36:	4613      	mov	r3, r2
 800fa38:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800fa3a:	4a07      	ldr	r2, [pc, #28]	; (800fa58 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800fa3c:	68fb      	ldr	r3, [r7, #12]
 800fa3e:	6013      	str	r3, [r2, #0]
        fonts = f;
 800fa40:	4a06      	ldr	r2, [pc, #24]	; (800fa5c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800fa42:	68bb      	ldr	r3, [r7, #8]
 800fa44:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800fa46:	4a06      	ldr	r2, [pc, #24]	; (800fa60 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800fa48:	88fb      	ldrh	r3, [r7, #6]
 800fa4a:	8013      	strh	r3, [r2, #0]
    }
 800fa4c:	bf00      	nop
 800fa4e:	3714      	adds	r7, #20
 800fa50:	46bd      	mov	sp, r7
 800fa52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa56:	4770      	bx	lr
 800fa58:	2000e218 	.word	0x2000e218
 800fa5c:	2000e220 	.word	0x2000e220
 800fa60:	2000e21c 	.word	0x2000e21c

0800fa64 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800fa64:	b40e      	push	{r1, r2, r3}
 800fa66:	b580      	push	{r7, lr}
 800fa68:	b085      	sub	sp, #20
 800fa6a:	af00      	add	r7, sp, #0
 800fa6c:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800fa6e:	f107 0320 	add.w	r3, r7, #32
 800fa72:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800fa74:	68bb      	ldr	r3, [r7, #8]
 800fa76:	69fa      	ldr	r2, [r7, #28]
 800fa78:	2100      	movs	r1, #0
 800fa7a:	6878      	ldr	r0, [r7, #4]
 800fa7c:	f008 fcaa 	bl	80183d4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800fa80:	4603      	mov	r3, r0
 800fa82:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800fa84:	89fb      	ldrh	r3, [r7, #14]
}
 800fa86:	4618      	mov	r0, r3
 800fa88:	3714      	adds	r7, #20
 800fa8a:	46bd      	mov	sp, r7
 800fa8c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800fa90:	b003      	add	sp, #12
 800fa92:	4770      	bx	lr

0800fa94 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800fa94:	b40c      	push	{r2, r3}
 800fa96:	b580      	push	{r7, lr}
 800fa98:	b084      	sub	sp, #16
 800fa9a:	af00      	add	r7, sp, #0
 800fa9c:	6078      	str	r0, [r7, #4]
 800fa9e:	460b      	mov	r3, r1
 800faa0:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800faa2:	f107 031c 	add.w	r3, r7, #28
 800faa6:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800faa8:	78f9      	ldrb	r1, [r7, #3]
 800faaa:	68bb      	ldr	r3, [r7, #8]
 800faac:	69ba      	ldr	r2, [r7, #24]
 800faae:	6878      	ldr	r0, [r7, #4]
 800fab0:	f008 fc90 	bl	80183d4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800fab4:	4603      	mov	r3, r0
 800fab6:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800fab8:	89fb      	ldrh	r3, [r7, #14]
}
 800faba:	4618      	mov	r0, r3
 800fabc:	3710      	adds	r7, #16
 800fabe:	46bd      	mov	sp, r7
 800fac0:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800fac4:	b002      	add	sp, #8
 800fac6:	4770      	bx	lr

0800fac8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800fac8:	b580      	push	{r7, lr}
 800faca:	b08a      	sub	sp, #40	; 0x28
 800facc:	af00      	add	r7, sp, #0
 800face:	6078      	str	r0, [r7, #4]
 800fad0:	460b      	mov	r3, r1
 800fad2:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800fad4:	687b      	ldr	r3, [r7, #4]
 800fad6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fad8:	2b00      	cmp	r3, #0
 800fada:	d016      	beq.n	800fb0a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800fadc:	687b      	ldr	r3, [r7, #4]
 800fade:	3322      	adds	r3, #34	; 0x22
 800fae0:	627b      	str	r3, [r7, #36]	; 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800fae2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800fae4:	8adb      	ldrh	r3, [r3, #22]
 800fae6:	2b00      	cmp	r3, #0
 800fae8:	d105      	bne.n	800faf6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800faea:	4b43      	ldr	r3, [pc, #268]	; (800fbf8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800faec:	4a43      	ldr	r2, [pc, #268]	; (800fbfc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800faee:	21c5      	movs	r1, #197	; 0xc5
 800faf0:	4843      	ldr	r0, [pc, #268]	; (800fc00 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800faf2:	f018 fe1d 	bl	8028730 <__assert_func>
            return buffer[pos];
 800faf6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800faf8:	8a9b      	ldrh	r3, [r3, #20]
 800fafa:	461a      	mov	r2, r3
 800fafc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800fafe:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800fb02:	2b00      	cmp	r3, #0
 800fb04:	d001      	beq.n	800fb0a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800fb06:	2301      	movs	r3, #1
 800fb08:	e000      	b.n	800fb0c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800fb0a:	2300      	movs	r3, #0
 800fb0c:	2b00      	cmp	r3, #0
 800fb0e:	d06a      	beq.n	800fbe6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800fb10:	6878      	ldr	r0, [r7, #4]
 800fb12:	f00a f820 	bl	8019b56 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800fb16:	687b      	ldr	r3, [r7, #4]
 800fb18:	3322      	adds	r3, #34	; 0x22
 800fb1a:	623b      	str	r3, [r7, #32]
 800fb1c:	2301      	movs	r3, #1
 800fb1e:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800fb20:	6a3b      	ldr	r3, [r7, #32]
 800fb22:	8adb      	ldrh	r3, [r3, #22]
 800fb24:	8bfa      	ldrh	r2, [r7, #30]
 800fb26:	429a      	cmp	r2, r3
 800fb28:	d305      	bcc.n	800fb36 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800fb2a:	4b36      	ldr	r3, [pc, #216]	; (800fc04 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800fb2c:	4a36      	ldr	r2, [pc, #216]	; (800fc08 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800fb2e:	21cb      	movs	r1, #203	; 0xcb
 800fb30:	4833      	ldr	r0, [pc, #204]	; (800fc00 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800fb32:	f018 fdfd 	bl	8028730 <__assert_func>
            const uint16_t index = pos + offset;
 800fb36:	6a3b      	ldr	r3, [r7, #32]
 800fb38:	8a9a      	ldrh	r2, [r3, #20]
 800fb3a:	8bfb      	ldrh	r3, [r7, #30]
 800fb3c:	4413      	add	r3, r2
 800fb3e:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800fb40:	8bbb      	ldrh	r3, [r7, #28]
 800fb42:	2b09      	cmp	r3, #9
 800fb44:	d801      	bhi.n	800fb4a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800fb46:	8bbb      	ldrh	r3, [r7, #28]
 800fb48:	e001      	b.n	800fb4e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800fb4a:	8bbb      	ldrh	r3, [r7, #28]
 800fb4c:	3b0a      	subs	r3, #10
 800fb4e:	6a3a      	ldr	r2, [r7, #32]
 800fb50:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800fb54:	f640 123f 	movw	r2, #2367	; 0x93f
 800fb58:	4293      	cmp	r3, r2
 800fb5a:	bf0c      	ite	eq
 800fb5c:	2301      	moveq	r3, #1
 800fb5e:	2300      	movne	r3, #0
 800fb60:	b2db      	uxtb	r3, r3
 800fb62:	2b00      	cmp	r3, #0
 800fb64:	d03f      	beq.n	800fbe6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800fb66:	687b      	ldr	r3, [r7, #4]
 800fb68:	3322      	adds	r3, #34	; 0x22
 800fb6a:	687a      	ldr	r2, [r7, #4]
 800fb6c:	3222      	adds	r2, #34	; 0x22
 800fb6e:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800fb70:	68ba      	ldr	r2, [r7, #8]
 800fb72:	8ad2      	ldrh	r2, [r2, #22]
 800fb74:	2a00      	cmp	r2, #0
 800fb76:	d105      	bne.n	800fb84 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800fb78:	4b1f      	ldr	r3, [pc, #124]	; (800fbf8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800fb7a:	4a20      	ldr	r2, [pc, #128]	; (800fbfc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800fb7c:	21c5      	movs	r1, #197	; 0xc5
 800fb7e:	4820      	ldr	r0, [pc, #128]	; (800fc00 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800fb80:	f018 fdd6 	bl	8028730 <__assert_func>
            return buffer[pos];
 800fb84:	68ba      	ldr	r2, [r7, #8]
 800fb86:	8a92      	ldrh	r2, [r2, #20]
 800fb88:	4611      	mov	r1, r2
 800fb8a:	68ba      	ldr	r2, [r7, #8]
 800fb8c:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800fb90:	613b      	str	r3, [r7, #16]
 800fb92:	4613      	mov	r3, r2
 800fb94:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800fb96:	693b      	ldr	r3, [r7, #16]
 800fb98:	8adb      	ldrh	r3, [r3, #22]
 800fb9a:	2b01      	cmp	r3, #1
 800fb9c:	d806      	bhi.n	800fbac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800fb9e:	4b1b      	ldr	r3, [pc, #108]	; (800fc0c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800fba0:	4a1b      	ldr	r2, [pc, #108]	; (800fc10 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800fba2:	f44f 718e 	mov.w	r1, #284	; 0x11c
 800fba6:	4816      	ldr	r0, [pc, #88]	; (800fc00 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800fba8:	f018 fdc2 	bl	8028730 <__assert_func>
            const uint16_t index = pos + 1;
 800fbac:	693b      	ldr	r3, [r7, #16]
 800fbae:	8a9b      	ldrh	r3, [r3, #20]
 800fbb0:	3301      	adds	r3, #1
 800fbb2:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800fbb4:	89bb      	ldrh	r3, [r7, #12]
 800fbb6:	2b09      	cmp	r3, #9
 800fbb8:	d801      	bhi.n	800fbbe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800fbba:	89bb      	ldrh	r3, [r7, #12]
 800fbbc:	e000      	b.n	800fbc0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800fbbe:	2300      	movs	r3, #0
 800fbc0:	693a      	ldr	r2, [r7, #16]
 800fbc2:	89f9      	ldrh	r1, [r7, #14]
 800fbc4:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800fbc8:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800fbca:	687b      	ldr	r3, [r7, #4]
 800fbcc:	3322      	adds	r3, #34	; 0x22
 800fbce:	61bb      	str	r3, [r7, #24]
 800fbd0:	f640 133f 	movw	r3, #2367	; 0x93f
 800fbd4:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800fbd6:	69bb      	ldr	r3, [r7, #24]
 800fbd8:	8a9b      	ldrh	r3, [r3, #20]
 800fbda:	4619      	mov	r1, r3
 800fbdc:	69bb      	ldr	r3, [r7, #24]
 800fbde:	8afa      	ldrh	r2, [r7, #22]
 800fbe0:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800fbe4:	bf00      	nop
        }
    }
    return getNextChar();
 800fbe6:	6878      	ldr	r0, [r7, #4]
 800fbe8:	f009 feb8 	bl	801995c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fbec:	4603      	mov	r3, r0
}
 800fbee:	4618      	mov	r0, r3
 800fbf0:	3728      	adds	r7, #40	; 0x28
 800fbf2:	46bd      	mov	sp, r7
 800fbf4:	bd80      	pop	{r7, pc}
 800fbf6:	bf00      	nop
 800fbf8:	0802a5ac 	.word	0x0802a5ac
 800fbfc:	0802a5b8 	.word	0x0802a5b8
 800fc00:	0802a664 	.word	0x0802a664
 800fc04:	0802a6ac 	.word	0x0802a6ac
 800fc08:	0802a6bc 	.word	0x0802a6bc
 800fc0c:	0802a790 	.word	0x0802a790
 800fc10:	0802a79c 	.word	0x0802a79c

0800fc14 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800fc14:	b580      	push	{r7, lr}
 800fc16:	b082      	sub	sp, #8
 800fc18:	af00      	add	r7, sp, #0
 800fc1a:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800fc1c:	6878      	ldr	r0, [r7, #4]
 800fc1e:	f009 fe64 	bl	80198ea <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800fc22:	bf00      	nop
 800fc24:	3708      	adds	r7, #8
 800fc26:	46bd      	mov	sp, r7
 800fc28:	bd80      	pop	{r7, pc}

0800fc2a <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800fc2a:	b580      	push	{r7, lr}
 800fc2c:	b088      	sub	sp, #32
 800fc2e:	af02      	add	r7, sp, #8
 800fc30:	60f8      	str	r0, [r7, #12]
 800fc32:	1d38      	adds	r0, r7, #4
 800fc34:	e880 0006 	stmia.w	r0, {r1, r2}
 800fc38:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800fc3a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800fc3e:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800fc40:	1d39      	adds	r1, r7, #4
 800fc42:	697b      	ldr	r3, [r7, #20]
 800fc44:	9301      	str	r3, [sp, #4]
 800fc46:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800fc48:	9300      	str	r3, [sp, #0]
 800fc4a:	6a3b      	ldr	r3, [r7, #32]
 800fc4c:	683a      	ldr	r2, [r7, #0]
 800fc4e:	68f8      	ldr	r0, [r7, #12]
 800fc50:	f006 ffb6 	bl	8016bc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800fc54:	bf00      	nop
 800fc56:	3718      	adds	r7, #24
 800fc58:	46bd      	mov	sp, r7
 800fc5a:	bd80      	pop	{r7, pc}

0800fc5c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800fc5c:	b590      	push	{r4, r7, lr}
 800fc5e:	b085      	sub	sp, #20
 800fc60:	af00      	add	r7, sp, #0
 800fc62:	4603      	mov	r3, r0
 800fc64:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800fc66:	2300      	movs	r3, #0
 800fc68:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800fc6a:	88fb      	ldrh	r3, [r7, #6]
 800fc6c:	2b00      	cmp	r3, #0
 800fc6e:	d127      	bne.n	800fcc0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800fc70:	88fb      	ldrh	r3, [r7, #6]
 800fc72:	4a1e      	ldr	r2, [pc, #120]	; (800fcec <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800fc74:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800fc78:	2b00      	cmp	r3, #0
 800fc7a:	d016      	beq.n	800fcaa <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800fc7c:	88fb      	ldrh	r3, [r7, #6]
 800fc7e:	4a1b      	ldr	r2, [pc, #108]	; (800fcec <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800fc80:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800fc84:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800fc86:	68bb      	ldr	r3, [r7, #8]
 800fc88:	681b      	ldr	r3, [r3, #0]
 800fc8a:	68ba      	ldr	r2, [r7, #8]
 800fc8c:	4413      	add	r3, r2
 800fc8e:	4a18      	ldr	r2, [pc, #96]	; (800fcf0 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800fc90:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800fc92:	68bb      	ldr	r3, [r7, #8]
 800fc94:	685b      	ldr	r3, [r3, #4]
 800fc96:	68ba      	ldr	r2, [r7, #8]
 800fc98:	4413      	add	r3, r2
 800fc9a:	4a16      	ldr	r2, [pc, #88]	; (800fcf4 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800fc9c:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800fc9e:	68bb      	ldr	r3, [r7, #8]
 800fca0:	689b      	ldr	r3, [r3, #8]
 800fca2:	68ba      	ldr	r2, [r7, #8]
 800fca4:	4413      	add	r3, r2
 800fca6:	60fb      	str	r3, [r7, #12]
 800fca8:	e00a      	b.n	800fcc0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800fcaa:	4b11      	ldr	r3, [pc, #68]	; (800fcf0 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800fcac:	4a12      	ldr	r2, [pc, #72]	; (800fcf8 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800fcae:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800fcb0:	4a12      	ldr	r2, [pc, #72]	; (800fcfc <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800fcb2:	4b10      	ldr	r3, [pc, #64]	; (800fcf4 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800fcb4:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800fcb6:	88fb      	ldrh	r3, [r7, #6]
 800fcb8:	4a11      	ldr	r2, [pc, #68]	; (800fd00 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800fcba:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800fcbe:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800fcc0:	68fb      	ldr	r3, [r7, #12]
 800fcc2:	2b00      	cmp	r3, #0
 800fcc4:	d00d      	beq.n	800fce2 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800fcc6:	4a0f      	ldr	r2, [pc, #60]	; (800fd04 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800fcc8:	88fb      	ldrh	r3, [r7, #6]
 800fcca:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800fccc:	f000 f83e 	bl	800fd4c <_ZN17TypedTextDatabase8getFontsEv>
 800fcd0:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800fcd2:	f000 f833 	bl	800fd3c <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800fcd6:	4603      	mov	r3, r0
 800fcd8:	461a      	mov	r2, r3
 800fcda:	4621      	mov	r1, r4
 800fcdc:	68f8      	ldr	r0, [r7, #12]
 800fcde:	f7ff fea5 	bl	800fa2c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800fce2:	bf00      	nop
 800fce4:	3714      	adds	r7, #20
 800fce6:	46bd      	mov	sp, r7
 800fce8:	bd90      	pop	{r4, r7, pc}
 800fcea:	bf00      	nop
 800fcec:	2000b278 	.word	0x2000b278
 800fcf0:	2000b280 	.word	0x2000b280
 800fcf4:	2000b284 	.word	0x2000b284
 800fcf8:	0808e74c 	.word	0x0808e74c
 800fcfc:	0808e744 	.word	0x0808e744
 800fd00:	0808e760 	.word	0x0808e760
 800fd04:	2000b27c 	.word	0x2000b27c

0800fd08 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 800fd08:	b480      	push	{r7}
 800fd0a:	b083      	sub	sp, #12
 800fd0c:	af00      	add	r7, sp, #0
 800fd0e:	6078      	str	r0, [r7, #4]
 800fd10:	460b      	mov	r3, r1
 800fd12:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800fd14:	4b07      	ldr	r3, [pc, #28]	; (800fd34 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800fd16:	681a      	ldr	r2, [r3, #0]
 800fd18:	4b07      	ldr	r3, [pc, #28]	; (800fd38 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800fd1a:	6819      	ldr	r1, [r3, #0]
 800fd1c:	887b      	ldrh	r3, [r7, #2]
 800fd1e:	009b      	lsls	r3, r3, #2
 800fd20:	440b      	add	r3, r1
 800fd22:	681b      	ldr	r3, [r3, #0]
 800fd24:	005b      	lsls	r3, r3, #1
 800fd26:	4413      	add	r3, r2
}
 800fd28:	4618      	mov	r0, r3
 800fd2a:	370c      	adds	r7, #12
 800fd2c:	46bd      	mov	sp, r7
 800fd2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd32:	4770      	bx	lr
 800fd34:	2000b280 	.word	0x2000b280
 800fd38:	2000b284 	.word	0x2000b284

0800fd3c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800fd3c:	b480      	push	{r7}
 800fd3e:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800fd40:	2302      	movs	r3, #2
}
 800fd42:	4618      	mov	r0, r3
 800fd44:	46bd      	mov	sp, r7
 800fd46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd4a:	4770      	bx	lr

0800fd4c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800fd4c:	b480      	push	{r7}
 800fd4e:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800fd50:	4b02      	ldr	r3, [pc, #8]	; (800fd5c <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800fd52:	4618      	mov	r0, r3
 800fd54:	46bd      	mov	sp, r7
 800fd56:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd5a:	4770      	bx	lr
 800fd5c:	2000b288 	.word	0x2000b288

0800fd60 <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800fd60:	b580      	push	{r7, lr}
 800fd62:	b082      	sub	sp, #8
 800fd64:	af00      	add	r7, sp, #0
 800fd66:	6078      	str	r0, [r7, #4]
 800fd68:	6039      	str	r1, [r7, #0]
 800fd6a:	687b      	ldr	r3, [r7, #4]
 800fd6c:	2b01      	cmp	r3, #1
 800fd6e:	d113      	bne.n	800fd98 <_Z41__static_initialization_and_destruction_0ii+0x38>
 800fd70:	683b      	ldr	r3, [r7, #0]
 800fd72:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800fd76:	4293      	cmp	r3, r2
 800fd78:	d10e      	bne.n	800fd98 <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 800fd7a:	f7fb fcff 	bl	800b77c <_Z23getFont_verdana_20_4bppv>
 800fd7e:	4603      	mov	r3, r0
};
 800fd80:	4a07      	ldr	r2, [pc, #28]	; (800fda0 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800fd82:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 800fd84:	f7fb fd54 	bl	800b830 <_Z23getFont_verdana_40_4bppv>
 800fd88:	4603      	mov	r3, r0
};
 800fd8a:	4a05      	ldr	r2, [pc, #20]	; (800fda0 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800fd8c:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp())
 800fd8e:	f7fb fc9b 	bl	800b6c8 <_Z23getFont_verdana_10_4bppv>
 800fd92:	4603      	mov	r3, r0
};
 800fd94:	4a02      	ldr	r2, [pc, #8]	; (800fda0 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800fd96:	6093      	str	r3, [r2, #8]
} // namespace TypedTextDatabase
 800fd98:	bf00      	nop
 800fd9a:	3708      	adds	r7, #8
 800fd9c:	46bd      	mov	sp, r7
 800fd9e:	bd80      	pop	{r7, pc}
 800fda0:	2000b288 	.word	0x2000b288

0800fda4 <_GLOBAL__sub_I_touchgfx_fonts>:
 800fda4:	b580      	push	{r7, lr}
 800fda6:	af00      	add	r7, sp, #0
 800fda8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800fdac:	2001      	movs	r0, #1
 800fdae:	f7ff ffd7 	bl	800fd60 <_Z41__static_initialization_and_destruction_0ii>
 800fdb2:	bd80      	pop	{r7, pc}

0800fdb4 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800fdb4:	b580      	push	{r7, lr}
 800fdb6:	b082      	sub	sp, #8
 800fdb8:	af00      	add	r7, sp, #0
 800fdba:	6078      	str	r0, [r7, #4]
 800fdbc:	4a05      	ldr	r2, [pc, #20]	; (800fdd4 <_ZN19FrontendApplicationD1Ev+0x20>)
 800fdbe:	687b      	ldr	r3, [r7, #4]
 800fdc0:	601a      	str	r2, [r3, #0]
 800fdc2:	687b      	ldr	r3, [r7, #4]
 800fdc4:	4618      	mov	r0, r3
 800fdc6:	f7fb ff93 	bl	800bcf0 <_ZN23FrontendApplicationBaseD1Ev>
 800fdca:	687b      	ldr	r3, [r7, #4]
 800fdcc:	4618      	mov	r0, r3
 800fdce:	3708      	adds	r7, #8
 800fdd0:	46bd      	mov	sp, r7
 800fdd2:	bd80      	pop	{r7, pc}
 800fdd4:	0802bf9c 	.word	0x0802bf9c

0800fdd8 <_ZN19FrontendApplicationD0Ev>:
 800fdd8:	b580      	push	{r7, lr}
 800fdda:	b082      	sub	sp, #8
 800fddc:	af00      	add	r7, sp, #0
 800fdde:	6078      	str	r0, [r7, #4]
 800fde0:	6878      	ldr	r0, [r7, #4]
 800fde2:	f7ff ffe7 	bl	800fdb4 <_ZN19FrontendApplicationD1Ev>
 800fde6:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800fdea:	6878      	ldr	r0, [r7, #4]
 800fdec:	f018 fc71 	bl	80286d2 <_ZdlPvj>
 800fdf0:	687b      	ldr	r3, [r7, #4]
 800fdf2:	4618      	mov	r0, r3
 800fdf4:	3708      	adds	r7, #8
 800fdf6:	46bd      	mov	sp, r7
 800fdf8:	bd80      	pop	{r7, pc}

0800fdfa <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800fdfa:	b580      	push	{r7, lr}
 800fdfc:	b082      	sub	sp, #8
 800fdfe:	af00      	add	r7, sp, #0
 800fe00:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800fe02:	687b      	ldr	r3, [r7, #4]
 800fe04:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800fe08:	4618      	mov	r0, r3
 800fe0a:	f000 f82d 	bl	800fe68 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800fe0e:	687b      	ldr	r3, [r7, #4]
 800fe10:	4618      	mov	r0, r3
 800fe12:	f007 fbe5 	bl	80175e0 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800fe16:	bf00      	nop
 800fe18:	3708      	adds	r7, #8
 800fe1a:	46bd      	mov	sp, r7
 800fe1c:	bd80      	pop	{r7, pc}
	...

0800fe20 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800fe20:	b580      	push	{r7, lr}
 800fe22:	b084      	sub	sp, #16
 800fe24:	af00      	add	r7, sp, #0
 800fe26:	60f8      	str	r0, [r7, #12]
 800fe28:	60b9      	str	r1, [r7, #8]
 800fe2a:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800fe2c:	68fb      	ldr	r3, [r7, #12]
 800fe2e:	687a      	ldr	r2, [r7, #4]
 800fe30:	68b9      	ldr	r1, [r7, #8]
 800fe32:	4618      	mov	r0, r3
 800fe34:	f7fb ffac 	bl	800bd90 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800fe38:	4a03      	ldr	r2, [pc, #12]	; (800fe48 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800fe3a:	68fb      	ldr	r3, [r7, #12]
 800fe3c:	601a      	str	r2, [r3, #0]
{

}
 800fe3e:	68fb      	ldr	r3, [r7, #12]
 800fe40:	4618      	mov	r0, r3
 800fe42:	3710      	adds	r7, #16
 800fe44:	46bd      	mov	sp, r7
 800fe46:	bd80      	pop	{r7, pc}
 800fe48:	0802bf9c 	.word	0x0802bf9c

0800fe4c <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800fe4c:	b480      	push	{r7}
 800fe4e:	b083      	sub	sp, #12
 800fe50:	af00      	add	r7, sp, #0
 800fe52:	6078      	str	r0, [r7, #4]
 800fe54:	687b      	ldr	r3, [r7, #4]
 800fe56:	2200      	movs	r2, #0
 800fe58:	601a      	str	r2, [r3, #0]
{

}
 800fe5a:	687b      	ldr	r3, [r7, #4]
 800fe5c:	4618      	mov	r0, r3
 800fe5e:	370c      	adds	r7, #12
 800fe60:	46bd      	mov	sp, r7
 800fe62:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe66:	4770      	bx	lr

0800fe68 <_ZN5Model4tickEv>:

void Model::tick()
{
 800fe68:	b480      	push	{r7}
 800fe6a:	b083      	sub	sp, #12
 800fe6c:	af00      	add	r7, sp, #0
 800fe6e:	6078      	str	r0, [r7, #4]

}
 800fe70:	bf00      	nop
 800fe72:	370c      	adds	r7, #12
 800fe74:	46bd      	mov	sp, r7
 800fe76:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe7a:	4770      	bx	lr

0800fe7c <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800fe7c:	b480      	push	{r7}
 800fe7e:	b083      	sub	sp, #12
 800fe80:	af00      	add	r7, sp, #0
 800fe82:	6078      	str	r0, [r7, #4]
    {
    }
 800fe84:	bf00      	nop
 800fe86:	370c      	adds	r7, #12
 800fe88:	46bd      	mov	sp, r7
 800fe8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe8e:	4770      	bx	lr

0800fe90 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800fe90:	b480      	push	{r7}
 800fe92:	b083      	sub	sp, #12
 800fe94:	af00      	add	r7, sp, #0
 800fe96:	6078      	str	r0, [r7, #4]
    {
    }
 800fe98:	bf00      	nop
 800fe9a:	370c      	adds	r7, #12
 800fe9c:	46bd      	mov	sp, r7
 800fe9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fea2:	4770      	bx	lr

0800fea4 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800fea4:	b480      	push	{r7}
 800fea6:	b083      	sub	sp, #12
 800fea8:	af00      	add	r7, sp, #0
 800feaa:	6078      	str	r0, [r7, #4]
    {
 800feac:	4a04      	ldr	r2, [pc, #16]	; (800fec0 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800feae:	687b      	ldr	r3, [r7, #4]
 800feb0:	601a      	str	r2, [r3, #0]
    }
 800feb2:	687b      	ldr	r3, [r7, #4]
 800feb4:	4618      	mov	r0, r3
 800feb6:	370c      	adds	r7, #12
 800feb8:	46bd      	mov	sp, r7
 800feba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800febe:	4770      	bx	lr
 800fec0:	0802c028 	.word	0x0802c028

0800fec4 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800fec4:	b580      	push	{r7, lr}
 800fec6:	b082      	sub	sp, #8
 800fec8:	af00      	add	r7, sp, #0
 800feca:	6078      	str	r0, [r7, #4]
    }
 800fecc:	6878      	ldr	r0, [r7, #4]
 800fece:	f7ff ffe9 	bl	800fea4 <_ZN8touchgfx9PresenterD1Ev>
 800fed2:	2104      	movs	r1, #4
 800fed4:	6878      	ldr	r0, [r7, #4]
 800fed6:	f018 fbfc 	bl	80286d2 <_ZdlPvj>
 800feda:	687b      	ldr	r3, [r7, #4]
 800fedc:	4618      	mov	r0, r3
 800fede:	3708      	adds	r7, #8
 800fee0:	46bd      	mov	sp, r7
 800fee2:	bd80      	pop	{r7, pc}

0800fee4 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800fee4:	b480      	push	{r7}
 800fee6:	b083      	sub	sp, #12
 800fee8:	af00      	add	r7, sp, #0
 800feea:	6078      	str	r0, [r7, #4]
    {
 800feec:	4a04      	ldr	r2, [pc, #16]	; (800ff00 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800feee:	687b      	ldr	r3, [r7, #4]
 800fef0:	601a      	str	r2, [r3, #0]
    }
 800fef2:	687b      	ldr	r3, [r7, #4]
 800fef4:	4618      	mov	r0, r3
 800fef6:	370c      	adds	r7, #12
 800fef8:	46bd      	mov	sp, r7
 800fefa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fefe:	4770      	bx	lr
 800ff00:	0802c028 	.word	0x0802c028

0800ff04 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800ff04:	b480      	push	{r7}
 800ff06:	b083      	sub	sp, #12
 800ff08:	af00      	add	r7, sp, #0
 800ff0a:	6078      	str	r0, [r7, #4]
 800ff0c:	4a06      	ldr	r2, [pc, #24]	; (800ff28 <_ZN13ModelListenerC1Ev+0x24>)
 800ff0e:	687b      	ldr	r3, [r7, #4]
 800ff10:	601a      	str	r2, [r3, #0]
 800ff12:	687b      	ldr	r3, [r7, #4]
 800ff14:	2200      	movs	r2, #0
 800ff16:	605a      	str	r2, [r3, #4]
 800ff18:	687b      	ldr	r3, [r7, #4]
 800ff1a:	4618      	mov	r0, r3
 800ff1c:	370c      	adds	r7, #12
 800ff1e:	46bd      	mov	sp, r7
 800ff20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff24:	4770      	bx	lr
 800ff26:	bf00      	nop
 800ff28:	0802c018 	.word	0x0802c018

0800ff2c <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800ff2c:	b480      	push	{r7}
 800ff2e:	b083      	sub	sp, #12
 800ff30:	af00      	add	r7, sp, #0
 800ff32:	6078      	str	r0, [r7, #4]
 800ff34:	4a04      	ldr	r2, [pc, #16]	; (800ff48 <_ZN13ModelListenerD1Ev+0x1c>)
 800ff36:	687b      	ldr	r3, [r7, #4]
 800ff38:	601a      	str	r2, [r3, #0]
 800ff3a:	687b      	ldr	r3, [r7, #4]
 800ff3c:	4618      	mov	r0, r3
 800ff3e:	370c      	adds	r7, #12
 800ff40:	46bd      	mov	sp, r7
 800ff42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff46:	4770      	bx	lr
 800ff48:	0802c018 	.word	0x0802c018

0800ff4c <_ZN13ModelListenerD0Ev>:
 800ff4c:	b580      	push	{r7, lr}
 800ff4e:	b082      	sub	sp, #8
 800ff50:	af00      	add	r7, sp, #0
 800ff52:	6078      	str	r0, [r7, #4]
 800ff54:	6878      	ldr	r0, [r7, #4]
 800ff56:	f7ff ffe9 	bl	800ff2c <_ZN13ModelListenerD1Ev>
 800ff5a:	2108      	movs	r1, #8
 800ff5c:	6878      	ldr	r0, [r7, #4]
 800ff5e:	f018 fbb8 	bl	80286d2 <_ZdlPvj>
 800ff62:	687b      	ldr	r3, [r7, #4]
 800ff64:	4618      	mov	r0, r3
 800ff66:	3708      	adds	r7, #8
 800ff68:	46bd      	mov	sp, r7
 800ff6a:	bd80      	pop	{r7, pc}

0800ff6c <_ZN15screenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screenPresenter() {}
 800ff6c:	b580      	push	{r7, lr}
 800ff6e:	b082      	sub	sp, #8
 800ff70:	af00      	add	r7, sp, #0
 800ff72:	6078      	str	r0, [r7, #4]
 800ff74:	4a09      	ldr	r2, [pc, #36]	; (800ff9c <_ZN15screenPresenterD1Ev+0x30>)
 800ff76:	687b      	ldr	r3, [r7, #4]
 800ff78:	601a      	str	r2, [r3, #0]
 800ff7a:	4a09      	ldr	r2, [pc, #36]	; (800ffa0 <_ZN15screenPresenterD1Ev+0x34>)
 800ff7c:	687b      	ldr	r3, [r7, #4]
 800ff7e:	605a      	str	r2, [r3, #4]
 800ff80:	687b      	ldr	r3, [r7, #4]
 800ff82:	3304      	adds	r3, #4
 800ff84:	4618      	mov	r0, r3
 800ff86:	f7ff ffd1 	bl	800ff2c <_ZN13ModelListenerD1Ev>
 800ff8a:	687b      	ldr	r3, [r7, #4]
 800ff8c:	4618      	mov	r0, r3
 800ff8e:	f7ff ff89 	bl	800fea4 <_ZN8touchgfx9PresenterD1Ev>
 800ff92:	687b      	ldr	r3, [r7, #4]
 800ff94:	4618      	mov	r0, r3
 800ff96:	3708      	adds	r7, #8
 800ff98:	46bd      	mov	sp, r7
 800ff9a:	bd80      	pop	{r7, pc}
 800ff9c:	0802bff0 	.word	0x0802bff0
 800ffa0:	0802c008 	.word	0x0802c008

0800ffa4 <_ZThn4_N15screenPresenterD1Ev>:
 800ffa4:	f1a0 0004 	sub.w	r0, r0, #4
 800ffa8:	e7e0      	b.n	800ff6c <_ZN15screenPresenterD1Ev>
 800ffaa:	bf00      	nop

0800ffac <_ZN15screenPresenterD0Ev>:
 800ffac:	b580      	push	{r7, lr}
 800ffae:	b082      	sub	sp, #8
 800ffb0:	af00      	add	r7, sp, #0
 800ffb2:	6078      	str	r0, [r7, #4]
 800ffb4:	6878      	ldr	r0, [r7, #4]
 800ffb6:	f7ff ffd9 	bl	800ff6c <_ZN15screenPresenterD1Ev>
 800ffba:	2110      	movs	r1, #16
 800ffbc:	6878      	ldr	r0, [r7, #4]
 800ffbe:	f018 fb88 	bl	80286d2 <_ZdlPvj>
 800ffc2:	687b      	ldr	r3, [r7, #4]
 800ffc4:	4618      	mov	r0, r3
 800ffc6:	3708      	adds	r7, #8
 800ffc8:	46bd      	mov	sp, r7
 800ffca:	bd80      	pop	{r7, pc}

0800ffcc <_ZThn4_N15screenPresenterD0Ev>:
 800ffcc:	f1a0 0004 	sub.w	r0, r0, #4
 800ffd0:	e7ec      	b.n	800ffac <_ZN15screenPresenterD0Ev>
	...

0800ffd4 <_ZN15screenPresenterC1ER10screenView>:
#include <gui/screen_screen/screenView.hpp>
#include <gui/screen_screen/screenPresenter.hpp>

screenPresenter::screenPresenter(screenView& v)
 800ffd4:	b580      	push	{r7, lr}
 800ffd6:	b082      	sub	sp, #8
 800ffd8:	af00      	add	r7, sp, #0
 800ffda:	6078      	str	r0, [r7, #4]
 800ffdc:	6039      	str	r1, [r7, #0]
    : view(v)
 800ffde:	687b      	ldr	r3, [r7, #4]
 800ffe0:	4618      	mov	r0, r3
 800ffe2:	f7ff ff7f 	bl	800fee4 <_ZN8touchgfx9PresenterC1Ev>
 800ffe6:	687b      	ldr	r3, [r7, #4]
 800ffe8:	3304      	adds	r3, #4
 800ffea:	4618      	mov	r0, r3
 800ffec:	f7ff ff8a 	bl	800ff04 <_ZN13ModelListenerC1Ev>
 800fff0:	4a06      	ldr	r2, [pc, #24]	; (801000c <_ZN15screenPresenterC1ER10screenView+0x38>)
 800fff2:	687b      	ldr	r3, [r7, #4]
 800fff4:	601a      	str	r2, [r3, #0]
 800fff6:	4a06      	ldr	r2, [pc, #24]	; (8010010 <_ZN15screenPresenterC1ER10screenView+0x3c>)
 800fff8:	687b      	ldr	r3, [r7, #4]
 800fffa:	605a      	str	r2, [r3, #4]
 800fffc:	687b      	ldr	r3, [r7, #4]
 800fffe:	683a      	ldr	r2, [r7, #0]
 8010000:	60da      	str	r2, [r3, #12]
{

}
 8010002:	687b      	ldr	r3, [r7, #4]
 8010004:	4618      	mov	r0, r3
 8010006:	3708      	adds	r7, #8
 8010008:	46bd      	mov	sp, r7
 801000a:	bd80      	pop	{r7, pc}
 801000c:	0802bff0 	.word	0x0802bff0
 8010010:	0802c008 	.word	0x0802c008

08010014 <_ZN15screenPresenter8activateEv>:

void screenPresenter::activate()
{
 8010014:	b480      	push	{r7}
 8010016:	b083      	sub	sp, #12
 8010018:	af00      	add	r7, sp, #0
 801001a:	6078      	str	r0, [r7, #4]

}
 801001c:	bf00      	nop
 801001e:	370c      	adds	r7, #12
 8010020:	46bd      	mov	sp, r7
 8010022:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010026:	4770      	bx	lr

08010028 <_ZN15screenPresenter10deactivateEv>:

void screenPresenter::deactivate()
{
 8010028:	b480      	push	{r7}
 801002a:	b083      	sub	sp, #12
 801002c:	af00      	add	r7, sp, #0
 801002e:	6078      	str	r0, [r7, #4]

}
 8010030:	bf00      	nop
 8010032:	370c      	adds	r7, #12
 8010034:	46bd      	mov	sp, r7
 8010036:	f85d 7b04 	ldr.w	r7, [sp], #4
 801003a:	4770      	bx	lr

0801003c <_ZN10screenViewD1Ev>:

class screenView : public screenViewBase
{
public:
    screenView();
    virtual ~screenView() {}
 801003c:	b580      	push	{r7, lr}
 801003e:	b082      	sub	sp, #8
 8010040:	af00      	add	r7, sp, #0
 8010042:	6078      	str	r0, [r7, #4]
 8010044:	4a05      	ldr	r2, [pc, #20]	; (801005c <_ZN10screenViewD1Ev+0x20>)
 8010046:	687b      	ldr	r3, [r7, #4]
 8010048:	601a      	str	r2, [r3, #0]
 801004a:	687b      	ldr	r3, [r7, #4]
 801004c:	4618      	mov	r0, r3
 801004e:	f7fe fd39 	bl	800eac4 <_ZN14screenViewBaseD1Ev>
 8010052:	687b      	ldr	r3, [r7, #4]
 8010054:	4618      	mov	r0, r3
 8010056:	3708      	adds	r7, #8
 8010058:	46bd      	mov	sp, r7
 801005a:	bd80      	pop	{r7, pc}
 801005c:	0802c040 	.word	0x0802c040

08010060 <_ZN10screenViewD0Ev>:
 8010060:	b580      	push	{r7, lr}
 8010062:	b082      	sub	sp, #8
 8010064:	af00      	add	r7, sp, #0
 8010066:	6078      	str	r0, [r7, #4]
 8010068:	6878      	ldr	r0, [r7, #4]
 801006a:	f7ff ffe7 	bl	801003c <_ZN10screenViewD1Ev>
 801006e:	f241 5174 	movw	r1, #5492	; 0x1574
 8010072:	6878      	ldr	r0, [r7, #4]
 8010074:	f018 fb2d 	bl	80286d2 <_ZdlPvj>
 8010078:	687b      	ldr	r3, [r7, #4]
 801007a:	4618      	mov	r0, r3
 801007c:	3708      	adds	r7, #8
 801007e:	46bd      	mov	sp, r7
 8010080:	bd80      	pop	{r7, pc}
	...

08010084 <_ZN10screenViewC1Ev>:
#include <gui/screen_screen/screenView.hpp>

screenView::screenView()
 8010084:	b580      	push	{r7, lr}
 8010086:	b082      	sub	sp, #8
 8010088:	af00      	add	r7, sp, #0
 801008a:	6078      	str	r0, [r7, #4]
 801008c:	687b      	ldr	r3, [r7, #4]
 801008e:	4618      	mov	r0, r3
 8010090:	f7fd fae4 	bl	800d65c <_ZN14screenViewBaseC1Ev>
 8010094:	4a03      	ldr	r2, [pc, #12]	; (80100a4 <_ZN10screenViewC1Ev+0x20>)
 8010096:	687b      	ldr	r3, [r7, #4]
 8010098:	601a      	str	r2, [r3, #0]
{

}
 801009a:	687b      	ldr	r3, [r7, #4]
 801009c:	4618      	mov	r0, r3
 801009e:	3708      	adds	r7, #8
 80100a0:	46bd      	mov	sp, r7
 80100a2:	bd80      	pop	{r7, pc}
 80100a4:	0802c040 	.word	0x0802c040

080100a8 <_ZN10screenView11setupScreenEv>:

void screenView::setupScreen()
{
 80100a8:	b580      	push	{r7, lr}
 80100aa:	b082      	sub	sp, #8
 80100ac:	af00      	add	r7, sp, #0
 80100ae:	6078      	str	r0, [r7, #4]
    screenViewBase::setupScreen();
 80100b0:	687b      	ldr	r3, [r7, #4]
 80100b2:	4618      	mov	r0, r3
 80100b4:	f7fe fd7d 	bl	800ebb2 <_ZN14screenViewBase11setupScreenEv>
}
 80100b8:	bf00      	nop
 80100ba:	3708      	adds	r7, #8
 80100bc:	46bd      	mov	sp, r7
 80100be:	bd80      	pop	{r7, pc}

080100c0 <_ZN10screenView14tearDownScreenEv>:

void screenView::tearDownScreen()
{
 80100c0:	b580      	push	{r7, lr}
 80100c2:	b082      	sub	sp, #8
 80100c4:	af00      	add	r7, sp, #0
 80100c6:	6078      	str	r0, [r7, #4]
    screenViewBase::tearDownScreen();
 80100c8:	687b      	ldr	r3, [r7, #4]
 80100ca:	4618      	mov	r0, r3
 80100cc:	f7fc fc00 	bl	800c8d0 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 80100d0:	bf00      	nop
 80100d2:	3708      	adds	r7, #8
 80100d4:	46bd      	mov	sp, r7
 80100d6:	bd80      	pop	{r7, pc}

080100d8 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 80100d8:	b480      	push	{r7}
 80100da:	b083      	sub	sp, #12
 80100dc:	af00      	add	r7, sp, #0
 80100de:	6078      	str	r0, [r7, #4]
    {
 80100e0:	4a04      	ldr	r2, [pc, #16]	; (80100f4 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 80100e2:	687b      	ldr	r3, [r7, #4]
 80100e4:	601a      	str	r2, [r3, #0]
    }
 80100e6:	687b      	ldr	r3, [r7, #4]
 80100e8:	4618      	mov	r0, r3
 80100ea:	370c      	adds	r7, #12
 80100ec:	46bd      	mov	sp, r7
 80100ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80100f2:	4770      	bx	lr
 80100f4:	0802c0a4 	.word	0x0802c0a4

080100f8 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 80100f8:	b580      	push	{r7, lr}
 80100fa:	b082      	sub	sp, #8
 80100fc:	af00      	add	r7, sp, #0
 80100fe:	6078      	str	r0, [r7, #4]
    }
 8010100:	6878      	ldr	r0, [r7, #4]
 8010102:	f7ff ffe9 	bl	80100d8 <_ZN8touchgfx15TouchControllerD1Ev>
 8010106:	2104      	movs	r1, #4
 8010108:	6878      	ldr	r0, [r7, #4]
 801010a:	f018 fae2 	bl	80286d2 <_ZdlPvj>
 801010e:	687b      	ldr	r3, [r7, #4]
 8010110:	4618      	mov	r0, r3
 8010112:	3708      	adds	r7, #8
 8010114:	46bd      	mov	sp, r7
 8010116:	bd80      	pop	{r7, pc}

08010118 <_ZN20STM32TouchController4initEv>:
#include <STM32TouchController.hpp>
#include "../STM32F469/stm32469i_discovery_ts.h"


void STM32TouchController::init()
{
 8010118:	b580      	push	{r7, lr}
 801011a:	b082      	sub	sp, #8
 801011c:	af00      	add	r7, sp, #0
 801011e:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
	BSP_TS_Init(320,240);
 8010120:	21f0      	movs	r1, #240	; 0xf0
 8010122:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8010126:	f7fa ff43 	bl	800afb0 <BSP_TS_Init>
}
 801012a:	bf00      	nop
 801012c:	3708      	adds	r7, #8
 801012e:	46bd      	mov	sp, r7
 8010130:	bd80      	pop	{r7, pc}

08010132 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8010132:	b580      	push	{r7, lr}
 8010134:	b088      	sub	sp, #32
 8010136:	af00      	add	r7, sp, #0
 8010138:	60f8      	str	r0, [r7, #12]
 801013a:	60b9      	str	r1, [r7, #8]
 801013c:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
	TS_StateTypeDef state = { 0 };
 801013e:	f107 0314 	add.w	r3, r7, #20
 8010142:	2200      	movs	r2, #0
 8010144:	601a      	str	r2, [r3, #0]
 8010146:	605a      	str	r2, [r3, #4]
 8010148:	811a      	strh	r2, [r3, #8]
	BSP_TS_GetState(&state);
 801014a:	f107 0314 	add.w	r3, r7, #20
 801014e:	4618      	mov	r0, r3
 8010150:	f7fa ff84 	bl	800b05c <BSP_TS_GetState>
	if (state.touchDetected)
 8010154:	7d3b      	ldrb	r3, [r7, #20]
 8010156:	2b00      	cmp	r3, #0
 8010158:	d009      	beq.n	801016e <_ZN20STM32TouchController11sampleTouchERlS0_+0x3c>
	{
		x = state.touchX[0];
 801015a:	8afb      	ldrh	r3, [r7, #22]
 801015c:	461a      	mov	r2, r3
 801015e:	68bb      	ldr	r3, [r7, #8]
 8010160:	601a      	str	r2, [r3, #0]
		y = state.touchY[0];
 8010162:	8b7b      	ldrh	r3, [r7, #26]
 8010164:	461a      	mov	r2, r3
 8010166:	687b      	ldr	r3, [r7, #4]
 8010168:	601a      	str	r2, [r3, #0]

		return true;
 801016a:	2301      	movs	r3, #1
 801016c:	e000      	b.n	8010170 <_ZN20STM32TouchController11sampleTouchERlS0_+0x3e>
	}

	return false;
 801016e:	2300      	movs	r3, #0
}
 8010170:	4618      	mov	r0, r3
 8010172:	3720      	adds	r7, #32
 8010174:	46bd      	mov	sp, r7
 8010176:	bd80      	pop	{r7, pc}

08010178 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8010178:	b580      	push	{r7, lr}
 801017a:	b082      	sub	sp, #8
 801017c:	af00      	add	r7, sp, #0
 801017e:	6078      	str	r0, [r7, #4]
 8010180:	4a05      	ldr	r2, [pc, #20]	; (8010198 <_ZN20STM32TouchControllerD1Ev+0x20>)
 8010182:	687b      	ldr	r3, [r7, #4]
 8010184:	601a      	str	r2, [r3, #0]
 8010186:	687b      	ldr	r3, [r7, #4]
 8010188:	4618      	mov	r0, r3
 801018a:	f7ff ffa5 	bl	80100d8 <_ZN8touchgfx15TouchControllerD1Ev>
 801018e:	687b      	ldr	r3, [r7, #4]
 8010190:	4618      	mov	r0, r3
 8010192:	3708      	adds	r7, #8
 8010194:	46bd      	mov	sp, r7
 8010196:	bd80      	pop	{r7, pc}
 8010198:	0802c08c 	.word	0x0802c08c

0801019c <_ZN20STM32TouchControllerD0Ev>:
 801019c:	b580      	push	{r7, lr}
 801019e:	b082      	sub	sp, #8
 80101a0:	af00      	add	r7, sp, #0
 80101a2:	6078      	str	r0, [r7, #4]
 80101a4:	6878      	ldr	r0, [r7, #4]
 80101a6:	f7ff ffe7 	bl	8010178 <_ZN20STM32TouchControllerD1Ev>
 80101aa:	2104      	movs	r1, #4
 80101ac:	6878      	ldr	r0, [r7, #4]
 80101ae:	f018 fa90 	bl	80286d2 <_ZdlPvj>
 80101b2:	687b      	ldr	r3, [r7, #4]
 80101b4:	4618      	mov	r0, r3
 80101b6:	3708      	adds	r7, #8
 80101b8:	46bd      	mov	sp, r7
 80101ba:	bd80      	pop	{r7, pc}

080101bc <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 80101bc:	b480      	push	{r7}
 80101be:	af00      	add	r7, sp, #0

}
 80101c0:	bf00      	nop
 80101c2:	46bd      	mov	sp, r7
 80101c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101c8:	4770      	bx	lr
	...

080101cc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 80101cc:	b480      	push	{r7}
 80101ce:	b083      	sub	sp, #12
 80101d0:	af00      	add	r7, sp, #0
 80101d2:	4603      	mov	r3, r0
 80101d4:	71fb      	strb	r3, [r7, #7]
    switch (id)
 80101d6:	79fb      	ldrb	r3, [r7, #7]
 80101d8:	2b03      	cmp	r3, #3
 80101da:	d80c      	bhi.n	80101f6 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 80101dc:	a201      	add	r2, pc, #4	; (adr r2, 80101e4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 80101de:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80101e2:	bf00      	nop
 80101e4:	080101f5 	.word	0x080101f5
 80101e8:	080101f5 	.word	0x080101f5
 80101ec:	080101f5 	.word	0x080101f5
 80101f0:	080101f5 	.word	0x080101f5
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 80101f4:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 80101f6:	bf00      	nop
 80101f8:	370c      	adds	r7, #12
 80101fa:	46bd      	mov	sp, r7
 80101fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010200:	4770      	bx	lr
 8010202:	bf00      	nop

08010204 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 8010204:	b480      	push	{r7}
 8010206:	b083      	sub	sp, #12
 8010208:	af00      	add	r7, sp, #0
 801020a:	4603      	mov	r3, r0
 801020c:	71fb      	strb	r3, [r7, #7]
    switch (id)
 801020e:	79fb      	ldrb	r3, [r7, #7]
 8010210:	2b03      	cmp	r3, #3
 8010212:	d80c      	bhi.n	801022e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 8010214:	a201      	add	r2, pc, #4	; (adr r2, 801021c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 8010216:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801021a:	bf00      	nop
 801021c:	0801022d 	.word	0x0801022d
 8010220:	0801022d 	.word	0x0801022d
 8010224:	0801022d 	.word	0x0801022d
 8010228:	0801022d 	.word	0x0801022d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 801022c:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 801022e:	bf00      	nop
 8010230:	370c      	adds	r7, #12
 8010232:	46bd      	mov	sp, r7
 8010234:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010238:	4770      	bx	lr
 801023a:	bf00      	nop

0801023c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 801023c:	b480      	push	{r7}
 801023e:	b083      	sub	sp, #12
 8010240:	af00      	add	r7, sp, #0
 8010242:	4603      	mov	r3, r0
 8010244:	71fb      	strb	r3, [r7, #7]
    switch (id)
 8010246:	79fb      	ldrb	r3, [r7, #7]
 8010248:	2b03      	cmp	r3, #3
 801024a:	d80c      	bhi.n	8010266 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 801024c:	a201      	add	r2, pc, #4	; (adr r2, 8010254 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 801024e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010252:	bf00      	nop
 8010254:	08010265 	.word	0x08010265
 8010258:	08010265 	.word	0x08010265
 801025c:	08010265 	.word	0x08010265
 8010260:	08010265 	.word	0x08010265
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 8010264:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 8010266:	bf00      	nop
 8010268:	370c      	adds	r7, #12
 801026a:	46bd      	mov	sp, r7
 801026c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010270:	4770      	bx	lr
 8010272:	bf00      	nop

08010274 <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 8010274:	b480      	push	{r7}
 8010276:	b083      	sub	sp, #12
 8010278:	af00      	add	r7, sp, #0
 801027a:	6078      	str	r0, [r7, #4]
    {
 801027c:	4a04      	ldr	r2, [pc, #16]	; (8010290 <_ZN8touchgfx3HALD1Ev+0x1c>)
 801027e:	687b      	ldr	r3, [r7, #4]
 8010280:	601a      	str	r2, [r3, #0]
    }
 8010282:	687b      	ldr	r3, [r7, #4]
 8010284:	4618      	mov	r0, r3
 8010286:	370c      	adds	r7, #12
 8010288:	46bd      	mov	sp, r7
 801028a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801028e:	4770      	bx	lr
 8010290:	0802c6a8 	.word	0x0802c6a8

08010294 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 8010294:	b580      	push	{r7, lr}
 8010296:	b082      	sub	sp, #8
 8010298:	af00      	add	r7, sp, #0
 801029a:	6078      	str	r0, [r7, #4]
    }
 801029c:	6878      	ldr	r0, [r7, #4]
 801029e:	f7ff ffe9 	bl	8010274 <_ZN8touchgfx3HALD1Ev>
 80102a2:	217c      	movs	r1, #124	; 0x7c
 80102a4:	6878      	ldr	r0, [r7, #4]
 80102a6:	f018 fa14 	bl	80286d2 <_ZdlPvj>
 80102aa:	687b      	ldr	r3, [r7, #4]
 80102ac:	4618      	mov	r0, r3
 80102ae:	3708      	adds	r7, #8
 80102b0:	46bd      	mov	sp, r7
 80102b2:	bd80      	pop	{r7, pc}

080102b4 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 80102b4:	b480      	push	{r7}
 80102b6:	b083      	sub	sp, #12
 80102b8:	af00      	add	r7, sp, #0
 80102ba:	6078      	str	r0, [r7, #4]
 80102bc:	460b      	mov	r3, r1
 80102be:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 80102c0:	687b      	ldr	r3, [r7, #4]
 80102c2:	78fa      	ldrb	r2, [r7, #3]
 80102c4:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
        displayOrientationChangeRequested = true;
 80102c8:	687b      	ldr	r3, [r7, #4]
 80102ca:	2201      	movs	r2, #1
 80102cc:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
    }
 80102d0:	bf00      	nop
 80102d2:	370c      	adds	r7, #12
 80102d4:	46bd      	mov	sp, r7
 80102d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80102da:	4770      	bx	lr

080102dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80102dc:	b580      	push	{r7, lr}
 80102de:	b082      	sub	sp, #8
 80102e0:	af00      	add	r7, sp, #0
 80102e2:	6078      	str	r0, [r7, #4]
 80102e4:	460b      	mov	r3, r1
 80102e6:	807b      	strh	r3, [r7, #2]
 80102e8:	4613      	mov	r3, r2
 80102ea:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80102ec:	4b0c      	ldr	r3, [pc, #48]	; (8010320 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 80102ee:	881b      	ldrh	r3, [r3, #0]
 80102f0:	887a      	ldrh	r2, [r7, #2]
 80102f2:	429a      	cmp	r2, r3
 80102f4:	d304      	bcc.n	8010300 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 80102f6:	4b0b      	ldr	r3, [pc, #44]	; (8010324 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 80102f8:	881b      	ldrh	r3, [r3, #0]
 80102fa:	883a      	ldrh	r2, [r7, #0]
 80102fc:	429a      	cmp	r2, r3
 80102fe:	d205      	bcs.n	801030c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 8010300:	4b09      	ldr	r3, [pc, #36]	; (8010328 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 8010302:	4a0a      	ldr	r2, [pc, #40]	; (801032c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 8010304:	219e      	movs	r1, #158	; 0x9e
 8010306:	480a      	ldr	r0, [pc, #40]	; (8010330 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 8010308:	f018 fa12 	bl	8028730 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 801030c:	4a09      	ldr	r2, [pc, #36]	; (8010334 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 801030e:	887b      	ldrh	r3, [r7, #2]
 8010310:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 8010312:	4a09      	ldr	r2, [pc, #36]	; (8010338 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 8010314:	883b      	ldrh	r3, [r7, #0]
 8010316:	8013      	strh	r3, [r2, #0]
    }
 8010318:	bf00      	nop
 801031a:	3708      	adds	r7, #8
 801031c:	46bd      	mov	sp, r7
 801031e:	bd80      	pop	{r7, pc}
 8010320:	2000e1b4 	.word	0x2000e1b4
 8010324:	2000e1b6 	.word	0x2000e1b6
 8010328:	0802a850 	.word	0x0802a850
 801032c:	0802a8b4 	.word	0x0802a8b4
 8010330:	0802a8f8 	.word	0x0802a8f8
 8010334:	2000e1ba 	.word	0x2000e1ba
 8010338:	2000e1bc 	.word	0x2000e1bc

0801033c <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 801033c:	b580      	push	{r7, lr}
 801033e:	b082      	sub	sp, #8
 8010340:	af00      	add	r7, sp, #0
 8010342:	6078      	str	r0, [r7, #4]
        if (useDMAAcceleration)
 8010344:	687b      	ldr	r3, [r7, #4]
 8010346:	f893 307a 	ldrb.w	r3, [r3, #122]	; 0x7a
 801034a:	2b00      	cmp	r3, #0
 801034c:	d009      	beq.n	8010362 <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
            return dma.getBlitCaps();
 801034e:	687b      	ldr	r3, [r7, #4]
 8010350:	685a      	ldr	r2, [r3, #4]
 8010352:	687b      	ldr	r3, [r7, #4]
 8010354:	685b      	ldr	r3, [r3, #4]
 8010356:	681b      	ldr	r3, [r3, #0]
 8010358:	681b      	ldr	r3, [r3, #0]
 801035a:	4610      	mov	r0, r2
 801035c:	4798      	blx	r3
 801035e:	4603      	mov	r3, r0
 8010360:	e000      	b.n	8010364 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        return static_cast<BlitOperations>(0);
 8010362:	2300      	movs	r3, #0
    }
 8010364:	4618      	mov	r0, r3
 8010366:	3708      	adds	r7, #8
 8010368:	46bd      	mov	sp, r7
 801036a:	bd80      	pop	{r7, pc}

0801036c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 801036c:	b580      	push	{r7, lr}
 801036e:	b082      	sub	sp, #8
 8010370:	af00      	add	r7, sp, #0
 8010372:	6078      	str	r0, [r7, #4]
        swapFrameBuffers();
 8010374:	6878      	ldr	r0, [r7, #4]
 8010376:	f002 ffe3 	bl	8013340 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 801037a:	687b      	ldr	r3, [r7, #4]
 801037c:	681b      	ldr	r3, [r3, #0]
 801037e:	33ac      	adds	r3, #172	; 0xac
 8010380:	681b      	ldr	r3, [r3, #0]
 8010382:	6878      	ldr	r0, [r7, #4]
 8010384:	4798      	blx	r3
    }
 8010386:	bf00      	nop
 8010388:	3708      	adds	r7, #8
 801038a:	46bd      	mov	sp, r7
 801038c:	bd80      	pop	{r7, pc}

0801038e <_ZN8touchgfx3HAL9sampleKeyERh>:
    virtual bool sampleKey(uint8_t& key)
 801038e:	b480      	push	{r7}
 8010390:	b083      	sub	sp, #12
 8010392:	af00      	add	r7, sp, #0
 8010394:	6078      	str	r0, [r7, #4]
 8010396:	6039      	str	r1, [r7, #0]
        return false;
 8010398:	2300      	movs	r3, #0
    }
 801039a:	4618      	mov	r0, r3
 801039c:	370c      	adds	r7, #12
 801039e:	46bd      	mov	sp, r7
 80103a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80103a4:	4770      	bx	lr
	...

080103a8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80103a8:	b580      	push	{r7, lr}
 80103aa:	b084      	sub	sp, #16
 80103ac:	af00      	add	r7, sp, #0
 80103ae:	60f8      	str	r0, [r7, #12]
 80103b0:	60b9      	str	r1, [r7, #8]
 80103b2:	607a      	str	r2, [r7, #4]
 80103b4:	603b      	str	r3, [r7, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80103b6:	68bb      	ldr	r3, [r7, #8]
 80103b8:	2b00      	cmp	r3, #0
 80103ba:	d106      	bne.n	80103ca <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 80103bc:	4b0f      	ldr	r3, [pc, #60]	; (80103fc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 80103be:	4a10      	ldr	r2, [pc, #64]	; (8010400 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 80103c0:	f240 21d2 	movw	r1, #722	; 0x2d2
 80103c4:	480f      	ldr	r0, [pc, #60]	; (8010404 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 80103c6:	f018 f9b3 	bl	8028730 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 80103ca:	68fb      	ldr	r3, [r7, #12]
 80103cc:	68ba      	ldr	r2, [r7, #8]
 80103ce:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80103d0:	68fb      	ldr	r3, [r7, #12]
 80103d2:	687a      	ldr	r2, [r7, #4]
 80103d4:	641a      	str	r2, [r3, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80103d6:	687b      	ldr	r3, [r7, #4]
 80103d8:	2b00      	cmp	r3, #0
 80103da:	bf14      	ite	ne
 80103dc:	2301      	movne	r3, #1
 80103de:	2300      	moveq	r3, #0
 80103e0:	b2da      	uxtb	r2, r3
 80103e2:	4b09      	ldr	r3, [pc, #36]	; (8010408 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 80103e4:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80103e6:	68fb      	ldr	r3, [r7, #12]
 80103e8:	681b      	ldr	r3, [r3, #0]
 80103ea:	338c      	adds	r3, #140	; 0x8c
 80103ec:	681b      	ldr	r3, [r3, #0]
 80103ee:	6839      	ldr	r1, [r7, #0]
 80103f0:	68f8      	ldr	r0, [r7, #12]
 80103f2:	4798      	blx	r3
    }
 80103f4:	bf00      	nop
 80103f6:	3710      	adds	r7, #16
 80103f8:	46bd      	mov	sp, r7
 80103fa:	bd80      	pop	{r7, pc}
 80103fc:	0802a93c 	.word	0x0802a93c
 8010400:	0802a974 	.word	0x0802a974
 8010404:	0802a8f8 	.word	0x0802a8f8
 8010408:	2000e1be 	.word	0x2000e1be

0801040c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
    virtual void setAnimationStorage(void* animationStorage)
 801040c:	b480      	push	{r7}
 801040e:	b083      	sub	sp, #12
 8010410:	af00      	add	r7, sp, #0
 8010412:	6078      	str	r0, [r7, #4]
 8010414:	6039      	str	r1, [r7, #0]
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8010416:	687b      	ldr	r3, [r7, #4]
 8010418:	683a      	ldr	r2, [r7, #0]
 801041a:	645a      	str	r2, [r3, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 801041c:	683b      	ldr	r3, [r7, #0]
 801041e:	2b00      	cmp	r3, #0
 8010420:	bf14      	ite	ne
 8010422:	2301      	movne	r3, #1
 8010424:	2300      	moveq	r3, #0
 8010426:	b2da      	uxtb	r2, r3
 8010428:	4b03      	ldr	r3, [pc, #12]	; (8010438 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 801042a:	701a      	strb	r2, [r3, #0]
    }
 801042c:	bf00      	nop
 801042e:	370c      	adds	r7, #12
 8010430:	46bd      	mov	sp, r7
 8010432:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010436:	4770      	bx	lr
 8010438:	2000e1bf 	.word	0x2000e1bf

0801043c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
    virtual FlashDataReader* getFlashDataReader() const
 801043c:	b480      	push	{r7}
 801043e:	b083      	sub	sp, #12
 8010440:	af00      	add	r7, sp, #0
 8010442:	6078      	str	r0, [r7, #4]
        return 0;
 8010444:	2300      	movs	r3, #0
    }
 8010446:	4618      	mov	r0, r3
 8010448:	370c      	adds	r7, #12
 801044a:	46bd      	mov	sp, r7
 801044c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010450:	4770      	bx	lr

08010452 <_ZN8touchgfx3HAL9taskDelayEt>:
    virtual void taskDelay(uint16_t ms)
 8010452:	b580      	push	{r7, lr}
 8010454:	b082      	sub	sp, #8
 8010456:	af00      	add	r7, sp, #0
 8010458:	6078      	str	r0, [r7, #4]
 801045a:	460b      	mov	r3, r1
 801045c:	807b      	strh	r3, [r7, #2]
        if (taskDelayFunc)
 801045e:	687b      	ldr	r3, [r7, #4]
 8010460:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010462:	2b00      	cmp	r3, #0
 8010464:	d004      	beq.n	8010470 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
            taskDelayFunc(ms);
 8010466:	687b      	ldr	r3, [r7, #4]
 8010468:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801046a:	887a      	ldrh	r2, [r7, #2]
 801046c:	4610      	mov	r0, r2
 801046e:	4798      	blx	r3
    }
 8010470:	bf00      	nop
 8010472:	3708      	adds	r7, #8
 8010474:	46bd      	mov	sp, r7
 8010476:	bd80      	pop	{r7, pc}

08010478 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
    virtual uint16_t getTFTCurrentLine()
 8010478:	b480      	push	{r7}
 801047a:	b083      	sub	sp, #12
 801047c:	af00      	add	r7, sp, #0
 801047e:	6078      	str	r0, [r7, #4]
        return 0xFFFFu;
 8010480:	f64f 73ff 	movw	r3, #65535	; 0xffff
    }
 8010484:	4618      	mov	r0, r3
 8010486:	370c      	adds	r7, #12
 8010488:	46bd      	mov	sp, r7
 801048a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801048e:	4770      	bx	lr

08010490 <_ZN8touchgfx3HAL10getDMATypeEv>:
    virtual DMAType getDMAType()
 8010490:	b580      	push	{r7, lr}
 8010492:	b082      	sub	sp, #8
 8010494:	af00      	add	r7, sp, #0
 8010496:	6078      	str	r0, [r7, #4]
        return dma.getDMAType();
 8010498:	687b      	ldr	r3, [r7, #4]
 801049a:	685a      	ldr	r2, [r3, #4]
 801049c:	687b      	ldr	r3, [r7, #4]
 801049e:	685b      	ldr	r3, [r3, #4]
 80104a0:	681b      	ldr	r3, [r3, #0]
 80104a2:	3318      	adds	r3, #24
 80104a4:	681b      	ldr	r3, [r3, #0]
 80104a6:	4610      	mov	r0, r2
 80104a8:	4798      	blx	r3
 80104aa:	4603      	mov	r3, r0
    }
 80104ac:	4618      	mov	r0, r3
 80104ae:	3708      	adds	r7, #8
 80104b0:	46bd      	mov	sp, r7
 80104b2:	bd80      	pop	{r7, pc}

080104b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 80104b4:	b480      	push	{r7}
 80104b6:	b085      	sub	sp, #20
 80104b8:	af00      	add	r7, sp, #0
 80104ba:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 80104bc:	687b      	ldr	r3, [r7, #4]
 80104be:	f893 2078 	ldrb.w	r2, [r3, #120]	; 0x78
 80104c2:	687b      	ldr	r3, [r7, #4]
 80104c4:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 80104c8:	429a      	cmp	r2, r3
 80104ca:	d011      	beq.n	80104f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 80104cc:	4b14      	ldr	r3, [pc, #80]	; (8010520 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 80104ce:	781b      	ldrb	r3, [r3, #0]
 80104d0:	2b00      	cmp	r3, #0
 80104d2:	d11e      	bne.n	8010512 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 80104d4:	4b13      	ldr	r3, [pc, #76]	; (8010524 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 80104d6:	881b      	ldrh	r3, [r3, #0]
 80104d8:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80104da:	4b13      	ldr	r3, [pc, #76]	; (8010528 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 80104dc:	881a      	ldrh	r2, [r3, #0]
 80104de:	4b11      	ldr	r3, [pc, #68]	; (8010524 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 80104e0:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 80104e2:	4a11      	ldr	r2, [pc, #68]	; (8010528 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 80104e4:	89bb      	ldrh	r3, [r7, #12]
 80104e6:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 80104e8:	4b0d      	ldr	r3, [pc, #52]	; (8010520 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 80104ea:	2201      	movs	r2, #1
 80104ec:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 80104ee:	e010      	b.n	8010512 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 80104f0:	4b0b      	ldr	r3, [pc, #44]	; (8010520 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 80104f2:	781b      	ldrb	r3, [r3, #0]
 80104f4:	2b00      	cmp	r3, #0
 80104f6:	d00c      	beq.n	8010512 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 80104f8:	4b0a      	ldr	r3, [pc, #40]	; (8010524 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 80104fa:	881b      	ldrh	r3, [r3, #0]
 80104fc:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80104fe:	4b0a      	ldr	r3, [pc, #40]	; (8010528 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8010500:	881a      	ldrh	r2, [r3, #0]
 8010502:	4b08      	ldr	r3, [pc, #32]	; (8010524 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 8010504:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 8010506:	4a08      	ldr	r2, [pc, #32]	; (8010528 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8010508:	89fb      	ldrh	r3, [r7, #14]
 801050a:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 801050c:	4b04      	ldr	r3, [pc, #16]	; (8010520 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 801050e:	2200      	movs	r2, #0
 8010510:	701a      	strb	r2, [r3, #0]
    }
 8010512:	bf00      	nop
 8010514:	3714      	adds	r7, #20
 8010516:	46bd      	mov	sp, r7
 8010518:	f85d 7b04 	ldr.w	r7, [sp], #4
 801051c:	4770      	bx	lr
 801051e:	bf00      	nop
 8010520:	2000e1b8 	.word	0x2000e1b8
 8010524:	2000e1b6 	.word	0x2000e1b6
 8010528:	2000e1b4 	.word	0x2000e1b4

0801052c <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Invalidate D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
 801052c:	b480      	push	{r7}
 801052e:	b083      	sub	sp, #12
 8010530:	af00      	add	r7, sp, #0
 8010532:	6078      	str	r0, [r7, #4]
    {
    }
 8010534:	bf00      	nop
 8010536:	370c      	adds	r7, #12
 8010538:	46bd      	mov	sp, r7
 801053a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801053e:	4770      	bx	lr

08010540 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Flush D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
 8010540:	b480      	push	{r7}
 8010542:	b083      	sub	sp, #12
 8010544:	af00      	add	r7, sp, #0
 8010546:	6078      	str	r0, [r7, #4]
    {
    }
 8010548:	bf00      	nop
 801054a:	370c      	adds	r7, #12
 801054c:	46bd      	mov	sp, r7
 801054e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010552:	4770      	bx	lr

08010554 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 8010554:	b580      	push	{r7, lr}
 8010556:	b082      	sub	sp, #8
 8010558:	af00      	add	r7, sp, #0
 801055a:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 801055c:	687b      	ldr	r3, [r7, #4]
 801055e:	4618      	mov	r0, r3
 8010560:	f002 f94c 	bl	80127fc <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 8010564:	bf00      	nop
 8010566:	3708      	adds	r7, #8
 8010568:	46bd      	mov	sp, r7
 801056a:	bd80      	pop	{r7, pc}

0801056c <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 801056c:	b580      	push	{r7, lr}
 801056e:	b082      	sub	sp, #8
 8010570:	af00      	add	r7, sp, #0
 8010572:	6078      	str	r0, [r7, #4]
 8010574:	4a05      	ldr	r2, [pc, #20]	; (801058c <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 8010576:	687b      	ldr	r3, [r7, #4]
 8010578:	601a      	str	r2, [r3, #0]
 801057a:	687b      	ldr	r3, [r7, #4]
 801057c:	4618      	mov	r0, r3
 801057e:	f7ff fe79 	bl	8010274 <_ZN8touchgfx3HALD1Ev>
 8010582:	687b      	ldr	r3, [r7, #4]
 8010584:	4618      	mov	r0, r3
 8010586:	3708      	adds	r7, #8
 8010588:	46bd      	mov	sp, r7
 801058a:	bd80      	pop	{r7, pc}
 801058c:	0802c308 	.word	0x0802c308

08010590 <_ZN20TouchGFXGeneratedHALD0Ev>:
 8010590:	b580      	push	{r7, lr}
 8010592:	b082      	sub	sp, #8
 8010594:	af00      	add	r7, sp, #0
 8010596:	6078      	str	r0, [r7, #4]
 8010598:	6878      	ldr	r0, [r7, #4]
 801059a:	f7ff ffe7 	bl	801056c <_ZN20TouchGFXGeneratedHALD1Ev>
 801059e:	217c      	movs	r1, #124	; 0x7c
 80105a0:	6878      	ldr	r0, [r7, #4]
 80105a2:	f018 f896 	bl	80286d2 <_ZdlPvj>
 80105a6:	687b      	ldr	r3, [r7, #4]
 80105a8:	4618      	mov	r0, r3
 80105aa:	3708      	adds	r7, #8
 80105ac:	46bd      	mov	sp, r7
 80105ae:	bd80      	pop	{r7, pc}

080105b0 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 80105b0:	b580      	push	{r7, lr}
 80105b2:	b082      	sub	sp, #8
 80105b4:	af00      	add	r7, sp, #0
 80105b6:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 80105b8:	687b      	ldr	r3, [r7, #4]
 80105ba:	4618      	mov	r0, r3
 80105bc:	f7ff ffca 	bl	8010554 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 80105c0:	bf00      	nop
 80105c2:	3708      	adds	r7, #8
 80105c4:	46bd      	mov	sp, r7
 80105c6:	bd80      	pop	{r7, pc}

080105c8 <_ZN11TouchGFXHAL10initializeEv>:
 */
//#warning "A user must call touchgfx::startNewTransfer(); once touchgfxDisplayDriverTransmitBlock() has succesfully sent a block."
//#warning "A user must implement C-methods touchgfxDisplayDriverTransmitActive() and touchgfxDisplayDriverTransmitBlock() used by the Partial Framebuffer Strategy."

void TouchGFXHAL::initialize()
{
 80105c8:	b580      	push	{r7, lr}
 80105ca:	b082      	sub	sp, #8
 80105cc:	af00      	add	r7, sp, #0
 80105ce:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80105d0:	687b      	ldr	r3, [r7, #4]
 80105d2:	4618      	mov	r0, r3
 80105d4:	f001 f866 	bl	80116a4 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 80105d8:	bf00      	nop
 80105da:	3708      	adds	r7, #8
 80105dc:	46bd      	mov	sp, r7
 80105de:	bd80      	pop	{r7, pc}

080105e0 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 80105e0:	b580      	push	{r7, lr}
 80105e2:	b082      	sub	sp, #8
 80105e4:	af00      	add	r7, sp, #0
 80105e6:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80105e8:	687b      	ldr	r3, [r7, #4]
 80105ea:	4618      	mov	r0, r3
 80105ec:	f001 f8d8 	bl	80117a0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 80105f0:	4603      	mov	r3, r0
}
 80105f2:	4618      	mov	r0, r3
 80105f4:	3708      	adds	r7, #8
 80105f6:	46bd      	mov	sp, r7
 80105f8:	bd80      	pop	{r7, pc}

080105fa <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 80105fa:	b580      	push	{r7, lr}
 80105fc:	b082      	sub	sp, #8
 80105fe:	af00      	add	r7, sp, #0
 8010600:	6078      	str	r0, [r7, #4]
 8010602:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8010604:	687b      	ldr	r3, [r7, #4]
 8010606:	6839      	ldr	r1, [r7, #0]
 8010608:	4618      	mov	r0, r3
 801060a:	f001 f8d4 	bl	80117b6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 801060e:	bf00      	nop
 8010610:	3708      	adds	r7, #8
 8010612:	46bd      	mov	sp, r7
 8010614:	bd80      	pop	{r7, pc}

08010616 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8010616:	b580      	push	{r7, lr}
 8010618:	b082      	sub	sp, #8
 801061a:	af00      	add	r7, sp, #0
 801061c:	6078      	str	r0, [r7, #4]
 801061e:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8010620:	687b      	ldr	r3, [r7, #4]
 8010622:	6839      	ldr	r1, [r7, #0]
 8010624:	4618      	mov	r0, r3
 8010626:	f001 f8d1 	bl	80117cc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 801062a:	bf00      	nop
 801062c:	3708      	adds	r7, #8
 801062e:	46bd      	mov	sp, r7
 8010630:	bd80      	pop	{r7, pc}

08010632 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 8010632:	b580      	push	{r7, lr}
 8010634:	b084      	sub	sp, #16
 8010636:	af00      	add	r7, sp, #0
 8010638:	60f8      	str	r0, [r7, #12]
 801063a:	60b9      	str	r1, [r7, #8]
 801063c:	607a      	str	r2, [r7, #4]
 801063e:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 8010640:	68f8      	ldr	r0, [r7, #12]
 8010642:	683b      	ldr	r3, [r7, #0]
 8010644:	687a      	ldr	r2, [r7, #4]
 8010646:	68b9      	ldr	r1, [r7, #8]
 8010648:	f001 f903 	bl	8011852 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 801064c:	4603      	mov	r3, r0
}
 801064e:	4618      	mov	r0, r3
 8010650:	3710      	adds	r7, #16
 8010652:	46bd      	mov	sp, r7
 8010654:	bd80      	pop	{r7, pc}

08010656 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 8010656:	b580      	push	{r7, lr}
 8010658:	b082      	sub	sp, #8
 801065a:	af00      	add	r7, sp, #0
 801065c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 801065e:	687b      	ldr	r3, [r7, #4]
 8010660:	4618      	mov	r0, r3
 8010662:	f001 f84f 	bl	8011704 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 8010666:	bf00      	nop
 8010668:	3708      	adds	r7, #8
 801066a:	46bd      	mov	sp, r7
 801066c:	bd80      	pop	{r7, pc}

0801066e <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 801066e:	b580      	push	{r7, lr}
 8010670:	b082      	sub	sp, #8
 8010672:	af00      	add	r7, sp, #0
 8010674:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8010676:	687b      	ldr	r3, [r7, #4]
 8010678:	4618      	mov	r0, r3
 801067a:	f001 f84d 	bl	8011718 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 801067e:	bf00      	nop
 8010680:	3708      	adds	r7, #8
 8010682:	46bd      	mov	sp, r7
 8010684:	bd80      	pop	{r7, pc}

08010686 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 8010686:	b580      	push	{r7, lr}
 8010688:	b082      	sub	sp, #8
 801068a:	af00      	add	r7, sp, #0
 801068c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 801068e:	687b      	ldr	r3, [r7, #4]
 8010690:	4618      	mov	r0, r3
 8010692:	f001 f84b 	bl	801172c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 8010696:	bf00      	nop
 8010698:	3708      	adds	r7, #8
 801069a:	46bd      	mov	sp, r7
 801069c:	bd80      	pop	{r7, pc}

0801069e <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 801069e:	b580      	push	{r7, lr}
 80106a0:	b082      	sub	sp, #8
 80106a2:	af00      	add	r7, sp, #0
 80106a4:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80106a6:	687b      	ldr	r3, [r7, #4]
 80106a8:	4618      	mov	r0, r3
 80106aa:	f001 f849 	bl	8011740 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 80106ae:	bf00      	nop
 80106b0:	3708      	adds	r7, #8
 80106b2:	46bd      	mov	sp, r7
 80106b4:	bd80      	pop	{r7, pc}

080106b6 <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 80106b6:	b580      	push	{r7, lr}
 80106b8:	b082      	sub	sp, #8
 80106ba:	af00      	add	r7, sp, #0
 80106bc:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 80106be:	687b      	ldr	r3, [r7, #4]
 80106c0:	4618      	mov	r0, r3
 80106c2:	f001 f847 	bl	8011754 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 80106c6:	4603      	mov	r3, r0
}
 80106c8:	4618      	mov	r0, r3
 80106ca:	3708      	adds	r7, #8
 80106cc:	46bd      	mov	sp, r7
 80106ce:	bd80      	pop	{r7, pc}

080106d0 <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 80106d0:	b580      	push	{r7, lr}
 80106d2:	b082      	sub	sp, #8
 80106d4:	af00      	add	r7, sp, #0
 80106d6:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 80106d8:	687b      	ldr	r3, [r7, #4]
 80106da:	4618      	mov	r0, r3
 80106dc:	f001 f847 	bl	801176e <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 80106e0:	bf00      	nop
 80106e2:	3708      	adds	r7, #8
 80106e4:	46bd      	mov	sp, r7
 80106e6:	bd80      	pop	{r7, pc}

080106e8 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80106e8:	b580      	push	{r7, lr}
 80106ea:	b082      	sub	sp, #8
 80106ec:	af00      	add	r7, sp, #0
 80106ee:	6078      	str	r0, [r7, #4]
 80106f0:	4a05      	ldr	r2, [pc, #20]	; (8010708 <_ZN11TouchGFXHALD1Ev+0x20>)
 80106f2:	687b      	ldr	r3, [r7, #4]
 80106f4:	601a      	str	r2, [r3, #0]
 80106f6:	687b      	ldr	r3, [r7, #4]
 80106f8:	4618      	mov	r0, r3
 80106fa:	f7ff ff37 	bl	801056c <_ZN20TouchGFXGeneratedHALD1Ev>
 80106fe:	687b      	ldr	r3, [r7, #4]
 8010700:	4618      	mov	r0, r3
 8010702:	3708      	adds	r7, #8
 8010704:	46bd      	mov	sp, r7
 8010706:	bd80      	pop	{r7, pc}
 8010708:	0802c0bc 	.word	0x0802c0bc

0801070c <_ZN11TouchGFXHALD0Ev>:
 801070c:	b580      	push	{r7, lr}
 801070e:	b082      	sub	sp, #8
 8010710:	af00      	add	r7, sp, #0
 8010712:	6078      	str	r0, [r7, #4]
 8010714:	6878      	ldr	r0, [r7, #4]
 8010716:	f7ff ffe7 	bl	80106e8 <_ZN11TouchGFXHALD1Ev>
 801071a:	217c      	movs	r1, #124	; 0x7c
 801071c:	6878      	ldr	r0, [r7, #4]
 801071e:	f017 ffd8 	bl	80286d2 <_ZdlPvj>
 8010722:	687b      	ldr	r3, [r7, #4]
 8010724:	4618      	mov	r0, r3
 8010726:	3708      	adds	r7, #8
 8010728:	46bd      	mov	sp, r7
 801072a:	bd80      	pop	{r7, pc}

0801072c <touchgfxDisplayDriverTransmitActive>:
extern void DisplayDriver_TransferCompleteCallback();

static uint8_t isTransmittingData = 0;

uint32_t touchgfxDisplayDriverTransmitActive(void)
{
 801072c:	b480      	push	{r7}
 801072e:	af00      	add	r7, sp, #0
	return isTransmittingData;
 8010730:	4b03      	ldr	r3, [pc, #12]	; (8010740 <touchgfxDisplayDriverTransmitActive+0x14>)
 8010732:	781b      	ldrb	r3, [r3, #0]
}
 8010734:	4618      	mov	r0, r3
 8010736:	46bd      	mov	sp, r7
 8010738:	f85d 7b04 	ldr.w	r7, [sp], #4
 801073c:	4770      	bx	lr
 801073e:	bf00      	nop
 8010740:	2000b294 	.word	0x2000b294

08010744 <touchgfxDisplayDriverTransmitBlock>:

void touchgfxDisplayDriverTransmitBlock(uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h)
{
 8010744:	b480      	push	{r7}
 8010746:	b085      	sub	sp, #20
 8010748:	af00      	add	r7, sp, #0
 801074a:	60f8      	str	r0, [r7, #12]
 801074c:	4608      	mov	r0, r1
 801074e:	4611      	mov	r1, r2
 8010750:	461a      	mov	r2, r3
 8010752:	4603      	mov	r3, r0
 8010754:	817b      	strh	r3, [r7, #10]
 8010756:	460b      	mov	r3, r1
 8010758:	813b      	strh	r3, [r7, #8]
 801075a:	4613      	mov	r3, r2
 801075c:	80fb      	strh	r3, [r7, #6]
//	isTransmittingData = 1;
//	ILI9341_SetWindow(x, y, x+w-1, y+h-1);
//	ILI9341_DrawBitmap(w, h, pixels);
}
 801075e:	bf00      	nop
 8010760:	3714      	adds	r7, #20
 8010762:	46bd      	mov	sp, r7
 8010764:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010768:	4770      	bx	lr
	...

0801076c <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 801076c:	b480      	push	{r7}
 801076e:	af00      	add	r7, sp, #0
    fb_sem = 0;
 8010770:	4b05      	ldr	r3, [pc, #20]	; (8010788 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 8010772:	2200      	movs	r2, #0
 8010774:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 8010776:	4b05      	ldr	r3, [pc, #20]	; (801078c <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 8010778:	2200      	movs	r2, #0
 801077a:	601a      	str	r2, [r3, #0]
}
 801077c:	bf00      	nop
 801077e:	46bd      	mov	sp, r7
 8010780:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010784:	4770      	bx	lr
 8010786:	bf00      	nop
 8010788:	2000b298 	.word	0x2000b298
 801078c:	2000b29c 	.word	0x2000b29c

08010790 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 8010790:	b480      	push	{r7}
 8010792:	af00      	add	r7, sp, #0
    while (fb_sem);
 8010794:	bf00      	nop
 8010796:	4b08      	ldr	r3, [pc, #32]	; (80107b8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 8010798:	681b      	ldr	r3, [r3, #0]
 801079a:	2b00      	cmp	r3, #0
 801079c:	bf14      	ite	ne
 801079e:	2301      	movne	r3, #1
 80107a0:	2300      	moveq	r3, #0
 80107a2:	b2db      	uxtb	r3, r3
 80107a4:	2b00      	cmp	r3, #0
 80107a6:	d1f6      	bne.n	8010796 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 80107a8:	4b03      	ldr	r3, [pc, #12]	; (80107b8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 80107aa:	2201      	movs	r2, #1
 80107ac:	601a      	str	r2, [r3, #0]
}
 80107ae:	bf00      	nop
 80107b0:	46bd      	mov	sp, r7
 80107b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80107b6:	4770      	bx	lr
 80107b8:	2000b298 	.word	0x2000b298

080107bc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 80107bc:	b480      	push	{r7}
 80107be:	af00      	add	r7, sp, #0
    fb_sem = 0;
 80107c0:	4b03      	ldr	r3, [pc, #12]	; (80107d0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 80107c2:	2200      	movs	r2, #0
 80107c4:	601a      	str	r2, [r3, #0]
}
 80107c6:	bf00      	nop
 80107c8:	46bd      	mov	sp, r7
 80107ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80107ce:	4770      	bx	lr
 80107d0:	2000b298 	.word	0x2000b298

080107d4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 80107d4:	b480      	push	{r7}
 80107d6:	af00      	add	r7, sp, #0
    fb_sem = 1;
 80107d8:	4b03      	ldr	r3, [pc, #12]	; (80107e8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 80107da:	2201      	movs	r2, #1
 80107dc:	601a      	str	r2, [r3, #0]
}
 80107de:	bf00      	nop
 80107e0:	46bd      	mov	sp, r7
 80107e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80107e6:	4770      	bx	lr
 80107e8:	2000b298 	.word	0x2000b298

080107ec <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 80107ec:	b480      	push	{r7}
 80107ee:	af00      	add	r7, sp, #0
    fb_sem = 0;
 80107f0:	4b03      	ldr	r3, [pc, #12]	; (8010800 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 80107f2:	2200      	movs	r2, #0
 80107f4:	601a      	str	r2, [r3, #0]
}
 80107f6:	bf00      	nop
 80107f8:	46bd      	mov	sp, r7
 80107fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80107fe:	4770      	bx	lr
 8010800:	2000b298 	.word	0x2000b298

08010804 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 8010804:	b480      	push	{r7}
 8010806:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 8010808:	4b03      	ldr	r3, [pc, #12]	; (8010818 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 801080a:	2201      	movs	r2, #1
 801080c:	601a      	str	r2, [r3, #0]
}
 801080e:	bf00      	nop
 8010810:	46bd      	mov	sp, r7
 8010812:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010816:	4770      	bx	lr
 8010818:	2000b29c 	.word	0x2000b29c

0801081c <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 801081c:	b480      	push	{r7}
 801081e:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 8010820:	4b03      	ldr	r3, [pc, #12]	; (8010830 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 8010822:	2200      	movs	r2, #0
 8010824:	601a      	str	r2, [r3, #0]
}
 8010826:	bf00      	nop
 8010828:	46bd      	mov	sp, r7
 801082a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801082e:	4770      	bx	lr
 8010830:	2000b29c 	.word	0x2000b29c

08010834 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 8010834:	b580      	push	{r7, lr}
 8010836:	af00      	add	r7, sp, #0
    if (vsync_sem)
 8010838:	4b0a      	ldr	r3, [pc, #40]	; (8010864 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 801083a:	681b      	ldr	r3, [r3, #0]
 801083c:	2b00      	cmp	r3, #0
 801083e:	bf14      	ite	ne
 8010840:	2301      	movne	r3, #1
 8010842:	2300      	moveq	r3, #0
 8010844:	b2db      	uxtb	r3, r3
 8010846:	2b00      	cmp	r3, #0
 8010848:	d00a      	beq.n	8010860 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 801084a:	4b06      	ldr	r3, [pc, #24]	; (8010864 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 801084c:	2200      	movs	r2, #0
 801084e:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 8010850:	f7fb f904 	bl	800ba5c <_ZN8touchgfx3HAL11getInstanceEv>
 8010854:	4603      	mov	r3, r0
 8010856:	681a      	ldr	r2, [r3, #0]
 8010858:	3270      	adds	r2, #112	; 0x70
 801085a:	6812      	ldr	r2, [r2, #0]
 801085c:	4618      	mov	r0, r3
 801085e:	4790      	blx	r2
    }
}
 8010860:	bf00      	nop
 8010862:	bd80      	pop	{r7, pc}
 8010864:	2000b29c 	.word	0x2000b29c

08010868 <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 8010868:	b480      	push	{r7}
 801086a:	b083      	sub	sp, #12
 801086c:	af00      	add	r7, sp, #0
 801086e:	6078      	str	r0, [r7, #4]
    {
 8010870:	4a04      	ldr	r2, [pc, #16]	; (8010884 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 8010872:	687b      	ldr	r3, [r7, #4]
 8010874:	601a      	str	r2, [r3, #0]
    }
 8010876:	687b      	ldr	r3, [r7, #4]
 8010878:	4618      	mov	r0, r3
 801087a:	370c      	adds	r7, #12
 801087c:	46bd      	mov	sp, r7
 801087e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010882:	4770      	bx	lr
 8010884:	0802c1e4 	.word	0x0802c1e4

08010888 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 8010888:	b580      	push	{r7, lr}
 801088a:	b082      	sub	sp, #8
 801088c:	af00      	add	r7, sp, #0
 801088e:	6078      	str	r0, [r7, #4]
    }
 8010890:	6878      	ldr	r0, [r7, #4]
 8010892:	f7ff ffe9 	bl	8010868 <_ZN8touchgfx9DMA_QueueD1Ev>
 8010896:	2104      	movs	r1, #4
 8010898:	6878      	ldr	r0, [r7, #4]
 801089a:	f017 ff1a 	bl	80286d2 <_ZdlPvj>
 801089e:	687b      	ldr	r3, [r7, #4]
 80108a0:	4618      	mov	r0, r3
 80108a2:	3708      	adds	r7, #8
 80108a4:	46bd      	mov	sp, r7
 80108a6:	bd80      	pop	{r7, pc}

080108a8 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    {
        waitForFrameBufferSemaphore();
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
 80108a8:	b480      	push	{r7}
 80108aa:	b083      	sub	sp, #12
 80108ac:	af00      	add	r7, sp, #0
 80108ae:	6078      	str	r0, [r7, #4]
    {
    }
 80108b0:	bf00      	nop
 80108b2:	370c      	adds	r7, #12
 80108b4:	46bd      	mov	sp, r7
 80108b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80108ba:	4770      	bx	lr

080108bc <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA_Interface implementation. As
     * default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
 80108bc:	b480      	push	{r7}
 80108be:	b083      	sub	sp, #12
 80108c0:	af00      	add	r7, sp, #0
 80108c2:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 80108c4:	2300      	movs	r3, #0
    }
 80108c6:	4618      	mov	r0, r3
 80108c8:	370c      	adds	r7, #12
 80108ca:	46bd      	mov	sp, r7
 80108cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80108d0:	4770      	bx	lr
	...

080108d4 <_ZN8touchgfx13DMA_InterfaceD1Ev>:

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 80108d4:	b480      	push	{r7}
 80108d6:	b083      	sub	sp, #12
 80108d8:	af00      	add	r7, sp, #0
 80108da:	6078      	str	r0, [r7, #4]
    {
 80108dc:	4a04      	ldr	r2, [pc, #16]	; (80108f0 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 80108de:	687b      	ldr	r3, [r7, #4]
 80108e0:	601a      	str	r2, [r3, #0]
    }
 80108e2:	687b      	ldr	r3, [r7, #4]
 80108e4:	4618      	mov	r0, r3
 80108e6:	370c      	adds	r7, #12
 80108e8:	46bd      	mov	sp, r7
 80108ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80108ee:	4770      	bx	lr
 80108f0:	0802c780 	.word	0x0802c780

080108f4 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 80108f4:	b580      	push	{r7, lr}
 80108f6:	b082      	sub	sp, #8
 80108f8:	af00      	add	r7, sp, #0
 80108fa:	6078      	str	r0, [r7, #4]
    }
 80108fc:	6878      	ldr	r0, [r7, #4]
 80108fe:	f7ff ffe9 	bl	80108d4 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 8010902:	210c      	movs	r1, #12
 8010904:	6878      	ldr	r0, [r7, #4]
 8010906:	f017 fee4 	bl	80286d2 <_ZdlPvj>
 801090a:	687b      	ldr	r3, [r7, #4]
 801090c:	4618      	mov	r0, r3
 801090e:	3708      	adds	r7, #8
 8010910:	46bd      	mov	sp, r7
 8010912:	bd80      	pop	{r7, pc}

08010914 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 8010914:	b480      	push	{r7}
 8010916:	b083      	sub	sp, #12
 8010918:	af00      	add	r7, sp, #0
 801091a:	6078      	str	r0, [r7, #4]
 801091c:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 801091e:	4a09      	ldr	r2, [pc, #36]	; (8010944 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 8010920:	687b      	ldr	r3, [r7, #4]
 8010922:	601a      	str	r2, [r3, #0]
 8010924:	687b      	ldr	r3, [r7, #4]
 8010926:	683a      	ldr	r2, [r7, #0]
 8010928:	605a      	str	r2, [r3, #4]
 801092a:	687b      	ldr	r3, [r7, #4]
 801092c:	2200      	movs	r2, #0
 801092e:	721a      	strb	r2, [r3, #8]
 8010930:	687b      	ldr	r3, [r7, #4]
 8010932:	2200      	movs	r2, #0
 8010934:	725a      	strb	r2, [r3, #9]
    {
    }
 8010936:	687b      	ldr	r3, [r7, #4]
 8010938:	4618      	mov	r0, r3
 801093a:	370c      	adds	r7, #12
 801093c:	46bd      	mov	sp, r7
 801093e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010942:	4770      	bx	lr
 8010944:	0802c780 	.word	0x0802c780

08010948 <_ZN8STM32DMA18signalDMAInterruptEv>:
    /**
     * @fn virtual void STM32DMA::signalDMAInterrupt();
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
 8010948:	b480      	push	{r7}
 801094a:	b083      	sub	sp, #12
 801094c:	af00      	add	r7, sp, #0
 801094e:	6078      	str	r0, [r7, #4]
    {
    }
 8010950:	bf00      	nop
 8010952:	370c      	adds	r7, #12
 8010954:	46bd      	mov	sp, r7
 8010956:	f85d 7b04 	ldr.w	r7, [sp], #4
 801095a:	4770      	bx	lr

0801095c <_ZN8STM32DMA5flushEv>:
     * @fn virtual void STM32DMA::flush();
     *
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
 801095c:	b480      	push	{r7}
 801095e:	b083      	sub	sp, #12
 8010960:	af00      	add	r7, sp, #0
 8010962:	6078      	str	r0, [r7, #4]
    {
    }
 8010964:	bf00      	nop
 8010966:	370c      	adds	r7, #12
 8010968:	46bd      	mov	sp, r7
 801096a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801096e:	4770      	bx	lr

08010970 <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 8010970:	b580      	push	{r7, lr}
 8010972:	b082      	sub	sp, #8
 8010974:	af00      	add	r7, sp, #0
 8010976:	6078      	str	r0, [r7, #4]
 8010978:	687b      	ldr	r3, [r7, #4]
 801097a:	330c      	adds	r3, #12
 801097c:	4618      	mov	r0, r3
 801097e:	f7fb fcf7 	bl	800c370 <_ZN8touchgfx9colortypeC1Ev>
 8010982:	687b      	ldr	r3, [r7, #4]
 8010984:	4618      	mov	r0, r3
 8010986:	3708      	adds	r7, #8
 8010988:	46bd      	mov	sp, r7
 801098a:	bd80      	pop	{r7, pc}

0801098c <_ZN8STM32DMAC1Ev>:
  */

#include <STM32DMA.hpp>
#include <assert.h>

STM32DMA::STM32DMA()
 801098c:	b580      	push	{r7, lr}
 801098e:	b082      	sub	sp, #8
 8010990:	af00      	add	r7, sp, #0
 8010992:	6078      	str	r0, [r7, #4]
    : DMA_Interface(q), q(&b, 1)
 8010994:	687a      	ldr	r2, [r7, #4]
 8010996:	687b      	ldr	r3, [r7, #4]
 8010998:	330c      	adds	r3, #12
 801099a:	4619      	mov	r1, r3
 801099c:	4610      	mov	r0, r2
 801099e:	f7ff ffb9 	bl	8010914 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 80109a2:	4a0b      	ldr	r2, [pc, #44]	; (80109d0 <_ZN8STM32DMAC1Ev+0x44>)
 80109a4:	687b      	ldr	r3, [r7, #4]
 80109a6:	601a      	str	r2, [r3, #0]
 80109a8:	687b      	ldr	r3, [r7, #4]
 80109aa:	f103 000c 	add.w	r0, r3, #12
 80109ae:	687b      	ldr	r3, [r7, #4]
 80109b0:	3320      	adds	r3, #32
 80109b2:	2201      	movs	r2, #1
 80109b4:	4619      	mov	r1, r3
 80109b6:	f002 fe17 	bl	80135e8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 80109ba:	687b      	ldr	r3, [r7, #4]
 80109bc:	3320      	adds	r3, #32
 80109be:	4618      	mov	r0, r3
 80109c0:	f7ff ffd6 	bl	8010970 <_ZN8touchgfx6BlitOpC1Ev>
{
}
 80109c4:	687b      	ldr	r3, [r7, #4]
 80109c6:	4618      	mov	r0, r3
 80109c8:	3708      	adds	r7, #8
 80109ca:	46bd      	mov	sp, r7
 80109cc:	bd80      	pop	{r7, pc}
 80109ce:	bf00      	nop
 80109d0:	0802c194 	.word	0x0802c194

080109d4 <_ZN8STM32DMA11getBlitCapsEv>:

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
 80109d4:	b480      	push	{r7}
 80109d6:	b083      	sub	sp, #12
 80109d8:	af00      	add	r7, sp, #0
 80109da:	6078      	str	r0, [r7, #4]
    return static_cast<touchgfx::BlitOperations>(0);
 80109dc:	2300      	movs	r3, #0
}
 80109de:	4618      	mov	r0, r3
 80109e0:	370c      	adds	r7, #12
 80109e2:	46bd      	mov	sp, r7
 80109e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80109e8:	4770      	bx	lr
	...

080109ec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 80109ec:	b580      	push	{r7, lr}
 80109ee:	b082      	sub	sp, #8
 80109f0:	af00      	add	r7, sp, #0
 80109f2:	6078      	str	r0, [r7, #4]
 80109f4:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 80109f6:	4b03      	ldr	r3, [pc, #12]	; (8010a04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 80109f8:	4a03      	ldr	r2, [pc, #12]	; (8010a08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 80109fa:	2122      	movs	r1, #34	; 0x22
 80109fc:	4803      	ldr	r0, [pc, #12]	; (8010a0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 80109fe:	f017 fe97 	bl	8028730 <__assert_func>
 8010a02:	bf00      	nop
 8010a04:	0802a9c4 	.word	0x0802a9c4
 8010a08:	0802a9e8 	.word	0x0802a9e8
 8010a0c:	0802aa28 	.word	0x0802aa28

08010a10 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8010a10:	b580      	push	{r7, lr}
 8010a12:	b082      	sub	sp, #8
 8010a14:	af00      	add	r7, sp, #0
 8010a16:	6078      	str	r0, [r7, #4]
 8010a18:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 8010a1a:	4b03      	ldr	r3, [pc, #12]	; (8010a28 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8010a1c:	4a03      	ldr	r2, [pc, #12]	; (8010a2c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 8010a1e:	2127      	movs	r1, #39	; 0x27
 8010a20:	4803      	ldr	r0, [pc, #12]	; (8010a30 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 8010a22:	f017 fe85 	bl	8028730 <__assert_func>
 8010a26:	bf00      	nop
 8010a28:	0802a9c4 	.word	0x0802a9c4
 8010a2c:	0802aa54 	.word	0x0802aa54
 8010a30:	0802aa28 	.word	0x0802aa28

08010a34 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8010a34:	b580      	push	{r7, lr}
 8010a36:	b082      	sub	sp, #8
 8010a38:	af00      	add	r7, sp, #0
 8010a3a:	6078      	str	r0, [r7, #4]
 8010a3c:	4a08      	ldr	r2, [pc, #32]	; (8010a60 <_ZN8STM32DMAD1Ev+0x2c>)
 8010a3e:	687b      	ldr	r3, [r7, #4]
 8010a40:	601a      	str	r2, [r3, #0]
 8010a42:	687b      	ldr	r3, [r7, #4]
 8010a44:	330c      	adds	r3, #12
 8010a46:	4618      	mov	r0, r3
 8010a48:	f000 f81c 	bl	8010a84 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 8010a4c:	687b      	ldr	r3, [r7, #4]
 8010a4e:	4618      	mov	r0, r3
 8010a50:	f7ff ff40 	bl	80108d4 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 8010a54:	687b      	ldr	r3, [r7, #4]
 8010a56:	4618      	mov	r0, r3
 8010a58:	3708      	adds	r7, #8
 8010a5a:	46bd      	mov	sp, r7
 8010a5c:	bd80      	pop	{r7, pc}
 8010a5e:	bf00      	nop
 8010a60:	0802c194 	.word	0x0802c194

08010a64 <_ZN8STM32DMAD0Ev>:
 8010a64:	b580      	push	{r7, lr}
 8010a66:	b082      	sub	sp, #8
 8010a68:	af00      	add	r7, sp, #0
 8010a6a:	6078      	str	r0, [r7, #4]
 8010a6c:	6878      	ldr	r0, [r7, #4]
 8010a6e:	f7ff ffe1 	bl	8010a34 <_ZN8STM32DMAD1Ev>
 8010a72:	2144      	movs	r1, #68	; 0x44
 8010a74:	6878      	ldr	r0, [r7, #4]
 8010a76:	f017 fe2c 	bl	80286d2 <_ZdlPvj>
 8010a7a:	687b      	ldr	r3, [r7, #4]
 8010a7c:	4618      	mov	r0, r3
 8010a7e:	3708      	adds	r7, #8
 8010a80:	46bd      	mov	sp, r7
 8010a82:	bd80      	pop	{r7, pc}

08010a84 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 8010a84:	b580      	push	{r7, lr}
 8010a86:	b082      	sub	sp, #8
 8010a88:	af00      	add	r7, sp, #0
 8010a8a:	6078      	str	r0, [r7, #4]
 8010a8c:	4a05      	ldr	r2, [pc, #20]	; (8010aa4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 8010a8e:	687b      	ldr	r3, [r7, #4]
 8010a90:	601a      	str	r2, [r3, #0]
 8010a92:	687b      	ldr	r3, [r7, #4]
 8010a94:	4618      	mov	r0, r3
 8010a96:	f7ff fee7 	bl	8010868 <_ZN8touchgfx9DMA_QueueD1Ev>
 8010a9a:	687b      	ldr	r3, [r7, #4]
 8010a9c:	4618      	mov	r0, r3
 8010a9e:	3708      	adds	r7, #8
 8010aa0:	46bd      	mov	sp, r7
 8010aa2:	bd80      	pop	{r7, pc}
 8010aa4:	0802c7d0 	.word	0x0802c7d0

08010aa8 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8010aa8:	b580      	push	{r7, lr}
 8010aaa:	b082      	sub	sp, #8
 8010aac:	af00      	add	r7, sp, #0
 8010aae:	6078      	str	r0, [r7, #4]
 8010ab0:	6878      	ldr	r0, [r7, #4]
 8010ab2:	f7ff ffe7 	bl	8010a84 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 8010ab6:	2114      	movs	r1, #20
 8010ab8:	6878      	ldr	r0, [r7, #4]
 8010aba:	f017 fe0a 	bl	80286d2 <_ZdlPvj>
 8010abe:	687b      	ldr	r3, [r7, #4]
 8010ac0:	4618      	mov	r0, r3
 8010ac2:	3708      	adds	r7, #8
 8010ac4:	46bd      	mov	sp, r7
 8010ac6:	bd80      	pop	{r7, pc}

08010ac8 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 8010ac8:	b480      	push	{r7}
 8010aca:	b083      	sub	sp, #12
 8010acc:	af00      	add	r7, sp, #0
 8010ace:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 8010ad0:	4a04      	ldr	r2, [pc, #16]	; (8010ae4 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 8010ad2:	687b      	ldr	r3, [r7, #4]
 8010ad4:	6013      	str	r3, [r2, #0]
    }
 8010ad6:	bf00      	nop
 8010ad8:	370c      	adds	r7, #12
 8010ada:	46bd      	mov	sp, r7
 8010adc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ae0:	4770      	bx	lr
 8010ae2:	bf00      	nop
 8010ae4:	2000e224 	.word	0x2000e224

08010ae8 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 8010ae8:	b480      	push	{r7}
 8010aea:	b085      	sub	sp, #20
 8010aec:	af00      	add	r7, sp, #0
 8010aee:	60f8      	str	r0, [r7, #12]
 8010af0:	60b9      	str	r1, [r7, #8]
 8010af2:	607a      	str	r2, [r7, #4]
 8010af4:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8010af6:	4a0b      	ldr	r2, [pc, #44]	; (8010b24 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 8010af8:	68fb      	ldr	r3, [r7, #12]
 8010afa:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 8010afc:	68fb      	ldr	r3, [r7, #12]
 8010afe:	68ba      	ldr	r2, [r7, #8]
 8010b00:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 8010b02:	68fb      	ldr	r3, [r7, #12]
 8010b04:	687a      	ldr	r2, [r7, #4]
 8010b06:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 8010b08:	68fb      	ldr	r3, [r7, #12]
 8010b0a:	683a      	ldr	r2, [r7, #0]
 8010b0c:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 8010b0e:	68fb      	ldr	r3, [r7, #12]
 8010b10:	69ba      	ldr	r2, [r7, #24]
 8010b12:	611a      	str	r2, [r3, #16]
    {
    }
 8010b14:	68fb      	ldr	r3, [r7, #12]
 8010b16:	4618      	mov	r0, r3
 8010b18:	3714      	adds	r7, #20
 8010b1a:	46bd      	mov	sp, r7
 8010b1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010b20:	4770      	bx	lr
 8010b22:	bf00      	nop
 8010b24:	0802c2cc 	.word	0x0802c2cc

08010b28 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 8010b28:	b480      	push	{r7}
 8010b2a:	b083      	sub	sp, #12
 8010b2c:	af00      	add	r7, sp, #0
 8010b2e:	6078      	str	r0, [r7, #4]
    {
 8010b30:	4a04      	ldr	r2, [pc, #16]	; (8010b44 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 8010b32:	687b      	ldr	r3, [r7, #4]
 8010b34:	601a      	str	r2, [r3, #0]
    }
 8010b36:	687b      	ldr	r3, [r7, #4]
 8010b38:	4618      	mov	r0, r3
 8010b3a:	370c      	adds	r7, #12
 8010b3c:	46bd      	mov	sp, r7
 8010b3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010b42:	4770      	bx	lr
 8010b44:	0802c2cc 	.word	0x0802c2cc

08010b48 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 8010b48:	b580      	push	{r7, lr}
 8010b4a:	b082      	sub	sp, #8
 8010b4c:	af00      	add	r7, sp, #0
 8010b4e:	6078      	str	r0, [r7, #4]
    }
 8010b50:	6878      	ldr	r0, [r7, #4]
 8010b52:	f7ff ffe9 	bl	8010b28 <_ZN8touchgfx7MVPHeapD1Ev>
 8010b56:	2114      	movs	r1, #20
 8010b58:	6878      	ldr	r0, [r7, #4]
 8010b5a:	f017 fdba 	bl	80286d2 <_ZdlPvj>
 8010b5e:	687b      	ldr	r3, [r7, #4]
 8010b60:	4618      	mov	r0, r3
 8010b62:	3708      	adds	r7, #8
 8010b64:	46bd      	mov	sp, r7
 8010b66:	bd80      	pop	{r7, pc}

08010b68 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 8010b68:	b480      	push	{r7}
 8010b6a:	b083      	sub	sp, #12
 8010b6c:	af00      	add	r7, sp, #0
 8010b6e:	6078      	str	r0, [r7, #4]
    {
 8010b70:	4a04      	ldr	r2, [pc, #16]	; (8010b84 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 8010b72:	687b      	ldr	r3, [r7, #4]
 8010b74:	601a      	str	r2, [r3, #0]
    }
 8010b76:	687b      	ldr	r3, [r7, #4]
 8010b78:	4618      	mov	r0, r3
 8010b7a:	370c      	adds	r7, #12
 8010b7c:	46bd      	mov	sp, r7
 8010b7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010b82:	4770      	bx	lr
 8010b84:	0802cd10 	.word	0x0802cd10

08010b88 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 8010b88:	b580      	push	{r7, lr}
 8010b8a:	b082      	sub	sp, #8
 8010b8c:	af00      	add	r7, sp, #0
 8010b8e:	6078      	str	r0, [r7, #4]
    }
 8010b90:	6878      	ldr	r0, [r7, #4]
 8010b92:	f7ff ffe9 	bl	8010b68 <_ZN8touchgfx3LCDD1Ev>
 8010b96:	2108      	movs	r1, #8
 8010b98:	6878      	ldr	r0, [r7, #4]
 8010b9a:	f017 fd9a 	bl	80286d2 <_ZdlPvj>
 8010b9e:	687b      	ldr	r3, [r7, #4]
 8010ba0:	4618      	mov	r0, r3
 8010ba2:	3708      	adds	r7, #8
 8010ba4:	46bd      	mov	sp, r7
 8010ba6:	bd80      	pop	{r7, pc}

08010ba8 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 8010ba8:	b480      	push	{r7}
 8010baa:	b083      	sub	sp, #12
 8010bac:	af00      	add	r7, sp, #0
 8010bae:	6078      	str	r0, [r7, #4]
            : startX(0),
 8010bb0:	687b      	ldr	r3, [r7, #4]
 8010bb2:	2200      	movs	r2, #0
 8010bb4:	801a      	strh	r2, [r3, #0]
              startY(0),
 8010bb6:	687b      	ldr	r3, [r7, #4]
 8010bb8:	2200      	movs	r2, #0
 8010bba:	805a      	strh	r2, [r3, #2]
              downX(0),
 8010bbc:	687b      	ldr	r3, [r7, #4]
 8010bbe:	2200      	movs	r2, #0
 8010bc0:	809a      	strh	r2, [r3, #4]
              downY(0),
 8010bc2:	687b      	ldr	r3, [r7, #4]
 8010bc4:	2200      	movs	r2, #0
 8010bc6:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 8010bc8:	687b      	ldr	r3, [r7, #4]
 8010bca:	2200      	movs	r2, #0
 8010bcc:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 8010bce:	687b      	ldr	r3, [r7, #4]
 8010bd0:	2200      	movs	r2, #0
 8010bd2:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 8010bd4:	687b      	ldr	r3, [r7, #4]
 8010bd6:	2200      	movs	r2, #0
 8010bd8:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 8010bda:	687b      	ldr	r3, [r7, #4]
 8010bdc:	2200      	movs	r2, #0
 8010bde:	739a      	strb	r2, [r3, #14]
        {
        }
 8010be0:	687b      	ldr	r3, [r7, #4]
 8010be2:	4618      	mov	r0, r3
 8010be4:	370c      	adds	r7, #12
 8010be6:	46bd      	mov	sp, r7
 8010be8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010bec:	4770      	bx	lr

08010bee <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 8010bee:	b580      	push	{r7, lr}
 8010bf0:	b082      	sub	sp, #8
 8010bf2:	af00      	add	r7, sp, #0
 8010bf4:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 8010bf6:	687b      	ldr	r3, [r7, #4]
 8010bf8:	4618      	mov	r0, r3
 8010bfa:	f7ff ffd5 	bl	8010ba8 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 8010bfe:	687b      	ldr	r3, [r7, #4]
 8010c00:	2200      	movs	r2, #0
 8010c02:	611a      	str	r2, [r3, #16]
 8010c04:	687b      	ldr	r3, [r7, #4]
 8010c06:	2200      	movs	r2, #0
 8010c08:	829a      	strh	r2, [r3, #20]
    {
    }
 8010c0a:	687b      	ldr	r3, [r7, #4]
 8010c0c:	4618      	mov	r0, r3
 8010c0e:	3708      	adds	r7, #8
 8010c10:	46bd      	mov	sp, r7
 8010c12:	bd80      	pop	{r7, pc}

08010c14 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 8010c14:	b580      	push	{r7, lr}
 8010c16:	b084      	sub	sp, #16
 8010c18:	af00      	add	r7, sp, #0
 8010c1a:	60f8      	str	r0, [r7, #12]
 8010c1c:	60b9      	str	r1, [r7, #8]
 8010c1e:	607a      	str	r2, [r7, #4]
 8010c20:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 8010c22:	4a55      	ldr	r2, [pc, #340]	; (8010d78 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 8010c24:	68fb      	ldr	r3, [r7, #12]
 8010c26:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 8010c28:	68fb      	ldr	r3, [r7, #12]
 8010c2a:	68ba      	ldr	r2, [r7, #8]
 8010c2c:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 8010c2e:	68fb      	ldr	r3, [r7, #12]
 8010c30:	687a      	ldr	r2, [r7, #4]
 8010c32:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 8010c34:	68fb      	ldr	r3, [r7, #12]
 8010c36:	683a      	ldr	r2, [r7, #0]
 8010c38:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 8010c3a:	68fb      	ldr	r3, [r7, #12]
 8010c3c:	2200      	movs	r2, #0
 8010c3e:	611a      	str	r2, [r3, #16]
          buttonController(0),
 8010c40:	68fb      	ldr	r3, [r7, #12]
 8010c42:	2200      	movs	r2, #0
 8010c44:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 8010c46:	68fb      	ldr	r3, [r7, #12]
 8010c48:	2200      	movs	r2, #0
 8010c4a:	619a      	str	r2, [r3, #24]
          gestures(),
 8010c4c:	68fb      	ldr	r3, [r7, #12]
 8010c4e:	331c      	adds	r3, #28
 8010c50:	4618      	mov	r0, r3
 8010c52:	f7ff ffcc 	bl	8010bee <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 8010c56:	68fb      	ldr	r3, [r7, #12]
 8010c58:	2200      	movs	r2, #0
 8010c5a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          taskDelayFunc(0),
 8010c5e:	68fb      	ldr	r3, [r7, #12]
 8010c60:	2200      	movs	r2, #0
 8010c62:	639a      	str	r2, [r3, #56]	; 0x38
          frameBuffer0(0),
 8010c64:	68fb      	ldr	r3, [r7, #12]
 8010c66:	2200      	movs	r2, #0
 8010c68:	63da      	str	r2, [r3, #60]	; 0x3c
          frameBuffer1(0),
 8010c6a:	68fb      	ldr	r3, [r7, #12]
 8010c6c:	2200      	movs	r2, #0
 8010c6e:	641a      	str	r2, [r3, #64]	; 0x40
          frameBuffer2(0),
 8010c70:	68fb      	ldr	r3, [r7, #12]
 8010c72:	2200      	movs	r2, #0
 8010c74:	645a      	str	r2, [r3, #68]	; 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8010c76:	68fb      	ldr	r3, [r7, #12]
 8010c78:	2200      	movs	r2, #0
 8010c7a:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
          fingerSize(1),
 8010c7e:	68fb      	ldr	r3, [r7, #12]
 8010c80:	2201      	movs	r2, #1
 8010c82:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
          lockDMAToPorch(false),
 8010c86:	68fb      	ldr	r3, [r7, #12]
 8010c88:	2200      	movs	r2, #0
 8010c8a:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
          frameBufferUpdatedThisFrame(false),
 8010c8e:	68fb      	ldr	r3, [r7, #12]
 8010c90:	2200      	movs	r2, #0
 8010c92:	f883 204b 	strb.w	r2, [r3, #75]	; 0x4b
          auxiliaryLCD(0),
 8010c96:	68fb      	ldr	r3, [r7, #12]
 8010c98:	2200      	movs	r2, #0
 8010c9a:	64da      	str	r2, [r3, #76]	; 0x4c
          partialFrameBufferRect(),
 8010c9c:	68fb      	ldr	r3, [r7, #12]
 8010c9e:	3350      	adds	r3, #80	; 0x50
 8010ca0:	4618      	mov	r0, r3
 8010ca2:	f7fb fb8e 	bl	800c3c2 <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 8010ca6:	68fb      	ldr	r3, [r7, #12]
 8010ca8:	2200      	movs	r2, #0
 8010caa:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          listener(0),
 8010cae:	68fb      	ldr	r3, [r7, #12]
 8010cb0:	2200      	movs	r2, #0
 8010cb2:	65da      	str	r2, [r3, #92]	; 0x5c
          lastX(0),
 8010cb4:	68fb      	ldr	r3, [r7, #12]
 8010cb6:	2200      	movs	r2, #0
 8010cb8:	661a      	str	r2, [r3, #96]	; 0x60
          lastY(0),
 8010cba:	68fb      	ldr	r3, [r7, #12]
 8010cbc:	2200      	movs	r2, #0
 8010cbe:	665a      	str	r2, [r3, #100]	; 0x64
          touchSampleRate(1),
 8010cc0:	68fb      	ldr	r3, [r7, #12]
 8010cc2:	2201      	movs	r2, #1
 8010cc4:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
          mcuLoadPct(0),
 8010cc8:	68fb      	ldr	r3, [r7, #12]
 8010cca:	2200      	movs	r2, #0
 8010ccc:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
          vSyncCnt(0),
 8010cd0:	68fb      	ldr	r3, [r7, #12]
 8010cd2:	2200      	movs	r2, #0
 8010cd4:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
          vSyncForFrame(1),
 8010cd8:	68fb      	ldr	r3, [r7, #12]
 8010cda:	2201      	movs	r2, #1
 8010cdc:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
          vSyncCompensationEnabled(false),
 8010ce0:	68fb      	ldr	r3, [r7, #12]
 8010ce2:	2200      	movs	r2, #0
 8010ce4:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
          clientDirty(false),
 8010ce8:	68fb      	ldr	r3, [r7, #12]
 8010cea:	2200      	movs	r2, #0
 8010cec:	f883 206d 	strb.w	r2, [r3, #109]	; 0x6d
          swapRequested(false),
 8010cf0:	68fb      	ldr	r3, [r7, #12]
 8010cf2:	2200      	movs	r2, #0
 8010cf4:	f883 206e 	strb.w	r2, [r3, #110]	; 0x6e
          lastTouched(false),
 8010cf8:	68fb      	ldr	r3, [r7, #12]
 8010cfa:	2200      	movs	r2, #0
 8010cfc:	f883 206f 	strb.w	r2, [r3, #111]	; 0x6f
          updateMCULoad(0),
 8010d00:	68fb      	ldr	r3, [r7, #12]
 8010d02:	2200      	movs	r2, #0
 8010d04:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          cc_begin(0),
 8010d08:	68fb      	ldr	r3, [r7, #12]
 8010d0a:	2200      	movs	r2, #0
 8010d0c:	675a      	str	r2, [r3, #116]	; 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8010d0e:	68fb      	ldr	r3, [r7, #12]
 8010d10:	2200      	movs	r2, #0
 8010d12:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
          displayOrientationChangeRequested(false),
 8010d16:	68fb      	ldr	r3, [r7, #12]
 8010d18:	2200      	movs	r2, #0
 8010d1a:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
          useDMAAcceleration(true),
 8010d1e:	68fb      	ldr	r3, [r7, #12]
 8010d20:	2201      	movs	r2, #1
 8010d22:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
          lastRenderMethod(HARDWARE)
 8010d26:	68fb      	ldr	r3, [r7, #12]
 8010d28:	2201      	movs	r2, #1
 8010d2a:	f883 207b 	strb.w	r2, [r3, #123]	; 0x7b
        instance = this;
 8010d2e:	4a13      	ldr	r2, [pc, #76]	; (8010d7c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 8010d30:	68fb      	ldr	r3, [r7, #12]
 8010d32:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8010d34:	4a12      	ldr	r2, [pc, #72]	; (8010d80 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 8010d36:	8b3b      	ldrh	r3, [r7, #24]
 8010d38:	8013      	strh	r3, [r2, #0]
 8010d3a:	4b11      	ldr	r3, [pc, #68]	; (8010d80 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 8010d3c:	881a      	ldrh	r2, [r3, #0]
 8010d3e:	4b11      	ldr	r3, [pc, #68]	; (8010d84 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 8010d40:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8010d42:	4a11      	ldr	r2, [pc, #68]	; (8010d88 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 8010d44:	8bbb      	ldrh	r3, [r7, #28]
 8010d46:	8013      	strh	r3, [r2, #0]
 8010d48:	4b0f      	ldr	r3, [pc, #60]	; (8010d88 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 8010d4a:	881a      	ldrh	r2, [r3, #0]
 8010d4c:	4b0f      	ldr	r3, [pc, #60]	; (8010d8c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 8010d4e:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 8010d50:	4b0f      	ldr	r3, [pc, #60]	; (8010d90 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 8010d52:	2200      	movs	r2, #0
 8010d54:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8010d56:	8b3a      	ldrh	r2, [r7, #24]
 8010d58:	8bbb      	ldrh	r3, [r7, #28]
 8010d5a:	429a      	cmp	r2, r3
 8010d5c:	bf34      	ite	cc
 8010d5e:	2301      	movcc	r3, #1
 8010d60:	2300      	movcs	r3, #0
 8010d62:	b2db      	uxtb	r3, r3
 8010d64:	461a      	mov	r2, r3
 8010d66:	68fb      	ldr	r3, [r7, #12]
 8010d68:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 8010d6c:	68fb      	ldr	r3, [r7, #12]
 8010d6e:	4618      	mov	r0, r3
 8010d70:	3710      	adds	r7, #16
 8010d72:	46bd      	mov	sp, r7
 8010d74:	bd80      	pop	{r7, pc}
 8010d76:	bf00      	nop
 8010d78:	0802c6a8 	.word	0x0802c6a8
 8010d7c:	2000e1c0 	.word	0x2000e1c0
 8010d80:	2000e1b4 	.word	0x2000e1b4
 8010d84:	2000e1ba 	.word	0x2000e1ba
 8010d88:	2000e1b6 	.word	0x2000e1b6
 8010d8c:	2000e1bc 	.word	0x2000e1bc
 8010d90:	2000e1b8 	.word	0x2000e1b8

08010d94 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 8010d94:	b580      	push	{r7, lr}
 8010d96:	b082      	sub	sp, #8
 8010d98:	af00      	add	r7, sp, #0
 8010d9a:	6078      	str	r0, [r7, #4]
 8010d9c:	6039      	str	r1, [r7, #0]
    {
        app.gotoscreenScreenNoTransition();
 8010d9e:	683b      	ldr	r3, [r7, #0]
 8010da0:	4618      	mov	r0, r3
 8010da2:	f7fb f857 	bl	800be54 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>
    }
 8010da6:	bf00      	nop
 8010da8:	3708      	adds	r7, #8
 8010daa:	46bd      	mov	sp, r7
 8010dac:	bd80      	pop	{r7, pc}
	...

08010db0 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 8010db0:	b580      	push	{r7, lr}
 8010db2:	b086      	sub	sp, #24
 8010db4:	af02      	add	r7, sp, #8
 8010db6:	60f8      	str	r0, [r7, #12]
 8010db8:	60b9      	str	r1, [r7, #8]
 8010dba:	607a      	str	r2, [r7, #4]
 8010dbc:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 8010dbe:	68f8      	ldr	r0, [r7, #12]
 8010dc0:	69bb      	ldr	r3, [r7, #24]
 8010dc2:	9300      	str	r3, [sp, #0]
 8010dc4:	683b      	ldr	r3, [r7, #0]
 8010dc6:	687a      	ldr	r2, [r7, #4]
 8010dc8:	68b9      	ldr	r1, [r7, #8]
 8010dca:	f7ff fe8d 	bl	8010ae8 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 8010dce:	4a04      	ldr	r2, [pc, #16]	; (8010de0 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 8010dd0:	68fb      	ldr	r3, [r7, #12]
 8010dd2:	601a      	str	r2, [r3, #0]
    {

    }
 8010dd4:	68fb      	ldr	r3, [r7, #12]
 8010dd6:	4618      	mov	r0, r3
 8010dd8:	3710      	adds	r7, #16
 8010dda:	46bd      	mov	sp, r7
 8010ddc:	bd80      	pop	{r7, pc}
 8010dde:	bf00      	nop
 8010de0:	0802c2b8 	.word	0x0802c2b8

08010de4 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8010de4:	b580      	push	{r7, lr}
 8010de6:	af00      	add	r7, sp, #0
 8010de8:	4801      	ldr	r0, [pc, #4]	; (8010df0 <__tcf_0+0xc>)
 8010dea:	f000 f95f 	bl	80110ac <_ZN12FrontendHeapD1Ev>
 8010dee:	bd80      	pop	{r7, pc}
 8010df0:	2000b2a0 	.word	0x2000b2a0

08010df4 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 8010df4:	b580      	push	{r7, lr}
 8010df6:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 8010df8:	4b11      	ldr	r3, [pc, #68]	; (8010e40 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8010dfa:	681b      	ldr	r3, [r3, #0]
 8010dfc:	f3bf 8f5b 	dmb	ish
 8010e00:	f003 0301 	and.w	r3, r3, #1
 8010e04:	2b00      	cmp	r3, #0
 8010e06:	bf0c      	ite	eq
 8010e08:	2301      	moveq	r3, #1
 8010e0a:	2300      	movne	r3, #0
 8010e0c:	b2db      	uxtb	r3, r3
 8010e0e:	2b00      	cmp	r3, #0
 8010e10:	d013      	beq.n	8010e3a <_ZN12FrontendHeap11getInstanceEv+0x46>
 8010e12:	480b      	ldr	r0, [pc, #44]	; (8010e40 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8010e14:	f017 fc5f 	bl	80286d6 <__cxa_guard_acquire>
 8010e18:	4603      	mov	r3, r0
 8010e1a:	2b00      	cmp	r3, #0
 8010e1c:	bf14      	ite	ne
 8010e1e:	2301      	movne	r3, #1
 8010e20:	2300      	moveq	r3, #0
 8010e22:	b2db      	uxtb	r3, r3
 8010e24:	2b00      	cmp	r3, #0
 8010e26:	d008      	beq.n	8010e3a <_ZN12FrontendHeap11getInstanceEv+0x46>
 8010e28:	4806      	ldr	r0, [pc, #24]	; (8010e44 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 8010e2a:	f000 f867 	bl	8010efc <_ZN12FrontendHeapC1Ev>
 8010e2e:	4806      	ldr	r0, [pc, #24]	; (8010e48 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 8010e30:	f017 fc9c 	bl	802876c <atexit>
 8010e34:	4802      	ldr	r0, [pc, #8]	; (8010e40 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8010e36:	f017 fc5a 	bl	80286ee <__cxa_guard_release>
        return instance;
 8010e3a:	4b02      	ldr	r3, [pc, #8]	; (8010e44 <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 8010e3c:	4618      	mov	r0, r3
 8010e3e:	bd80      	pop	{r7, pc}
 8010e40:	2000c9bc 	.word	0x2000c9bc
 8010e44:	2000b2a0 	.word	0x2000b2a0
 8010e48:	08010de5 	.word	0x08010de5

08010e4c <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 8010e4c:	b580      	push	{r7, lr}
 8010e4e:	b082      	sub	sp, #8
 8010e50:	af00      	add	r7, sp, #0
 8010e52:	6078      	str	r0, [r7, #4]
 8010e54:	4a05      	ldr	r2, [pc, #20]	; (8010e6c <_ZN16FrontendHeapBaseD1Ev+0x20>)
 8010e56:	687b      	ldr	r3, [r7, #4]
 8010e58:	601a      	str	r2, [r3, #0]
 8010e5a:	687b      	ldr	r3, [r7, #4]
 8010e5c:	4618      	mov	r0, r3
 8010e5e:	f7ff fe63 	bl	8010b28 <_ZN8touchgfx7MVPHeapD1Ev>
 8010e62:	687b      	ldr	r3, [r7, #4]
 8010e64:	4618      	mov	r0, r3
 8010e66:	3708      	adds	r7, #8
 8010e68:	46bd      	mov	sp, r7
 8010e6a:	bd80      	pop	{r7, pc}
 8010e6c:	0802c2b8 	.word	0x0802c2b8

08010e70 <_ZN16FrontendHeapBaseD0Ev>:
 8010e70:	b580      	push	{r7, lr}
 8010e72:	b082      	sub	sp, #8
 8010e74:	af00      	add	r7, sp, #0
 8010e76:	6078      	str	r0, [r7, #4]
 8010e78:	6878      	ldr	r0, [r7, #4]
 8010e7a:	f7ff ffe7 	bl	8010e4c <_ZN16FrontendHeapBaseD1Ev>
 8010e7e:	2114      	movs	r1, #20
 8010e80:	6878      	ldr	r0, [r7, #4]
 8010e82:	f017 fc26 	bl	80286d2 <_ZdlPvj>
 8010e86:	687b      	ldr	r3, [r7, #4]
 8010e88:	4618      	mov	r0, r3
 8010e8a:	3708      	adds	r7, #8
 8010e8c:	46bd      	mov	sp, r7
 8010e8e:	bd80      	pop	{r7, pc}

08010e90 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 8010e90:	b580      	push	{r7, lr}
 8010e92:	b082      	sub	sp, #8
 8010e94:	af00      	add	r7, sp, #0
 8010e96:	6078      	str	r0, [r7, #4]
 8010e98:	687b      	ldr	r3, [r7, #4]
 8010e9a:	4618      	mov	r0, r3
 8010e9c:	f000 ffae 	bl	8011dfc <_ZN8touchgfx17AbstractPartitionC1Ev>
 8010ea0:	4a03      	ldr	r2, [pc, #12]	; (8010eb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 8010ea2:	687b      	ldr	r3, [r7, #4]
 8010ea4:	601a      	str	r2, [r3, #0]
 8010ea6:	687b      	ldr	r3, [r7, #4]
 8010ea8:	4618      	mov	r0, r3
 8010eaa:	3708      	adds	r7, #8
 8010eac:	46bd      	mov	sp, r7
 8010eae:	bd80      	pop	{r7, pc}
 8010eb0:	0802c284 	.word	0x0802c284

08010eb4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 8010eb4:	b580      	push	{r7, lr}
 8010eb6:	b082      	sub	sp, #8
 8010eb8:	af00      	add	r7, sp, #0
 8010eba:	6078      	str	r0, [r7, #4]
 8010ebc:	687b      	ldr	r3, [r7, #4]
 8010ebe:	4618      	mov	r0, r3
 8010ec0:	f000 ff9c 	bl	8011dfc <_ZN8touchgfx17AbstractPartitionC1Ev>
 8010ec4:	4a03      	ldr	r2, [pc, #12]	; (8010ed4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 8010ec6:	687b      	ldr	r3, [r7, #4]
 8010ec8:	601a      	str	r2, [r3, #0]
 8010eca:	687b      	ldr	r3, [r7, #4]
 8010ecc:	4618      	mov	r0, r3
 8010ece:	3708      	adds	r7, #8
 8010ed0:	46bd      	mov	sp, r7
 8010ed2:	bd80      	pop	{r7, pc}
 8010ed4:	0802c250 	.word	0x0802c250

08010ed8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 8010ed8:	b580      	push	{r7, lr}
 8010eda:	b082      	sub	sp, #8
 8010edc:	af00      	add	r7, sp, #0
 8010ede:	6078      	str	r0, [r7, #4]
 8010ee0:	687b      	ldr	r3, [r7, #4]
 8010ee2:	4618      	mov	r0, r3
 8010ee4:	f000 ff8a 	bl	8011dfc <_ZN8touchgfx17AbstractPartitionC1Ev>
 8010ee8:	4a03      	ldr	r2, [pc, #12]	; (8010ef8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 8010eea:	687b      	ldr	r3, [r7, #4]
 8010eec:	601a      	str	r2, [r3, #0]
 8010eee:	687b      	ldr	r3, [r7, #4]
 8010ef0:	4618      	mov	r0, r3
 8010ef2:	3708      	adds	r7, #8
 8010ef4:	46bd      	mov	sp, r7
 8010ef6:	bd80      	pop	{r7, pc}
 8010ef8:	0802c21c 	.word	0x0802c21c

08010efc <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 8010efc:	b590      	push	{r4, r7, lr}
 8010efe:	b085      	sub	sp, #20
 8010f00:	af02      	add	r7, sp, #8
 8010f02:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 8010f04:	6878      	ldr	r0, [r7, #4]
 8010f06:	687b      	ldr	r3, [r7, #4]
 8010f08:	f103 0114 	add.w	r1, r3, #20
 8010f0c:	687b      	ldr	r3, [r7, #4]
 8010f0e:	f103 042c 	add.w	r4, r3, #44	; 0x2c
 8010f12:	687b      	ldr	r3, [r7, #4]
 8010f14:	f503 53ad 	add.w	r3, r3, #5536	; 0x15a0
 8010f18:	3308      	adds	r3, #8
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 8010f1a:	687a      	ldr	r2, [r7, #4]
 8010f1c:	f502 52ae 	add.w	r2, r2, #5568	; 0x15c0
                     app(model, *this)
 8010f20:	9200      	str	r2, [sp, #0]
 8010f22:	4622      	mov	r2, r4
 8010f24:	f7ff ff44 	bl	8010db0 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 8010f28:	4a19      	ldr	r2, [pc, #100]	; (8010f90 <_ZN12FrontendHeapC1Ev+0x94>)
 8010f2a:	687b      	ldr	r3, [r7, #4]
 8010f2c:	601a      	str	r2, [r3, #0]
 8010f2e:	687b      	ldr	r3, [r7, #4]
 8010f30:	3314      	adds	r3, #20
 8010f32:	4618      	mov	r0, r3
 8010f34:	f7ff ffac 	bl	8010e90 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8010f38:	687b      	ldr	r3, [r7, #4]
 8010f3a:	332c      	adds	r3, #44	; 0x2c
 8010f3c:	4618      	mov	r0, r3
 8010f3e:	f7ff ffb9 	bl	8010eb4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8010f42:	687b      	ldr	r3, [r7, #4]
 8010f44:	f503 53ad 	add.w	r3, r3, #5536	; 0x15a0
 8010f48:	3308      	adds	r3, #8
 8010f4a:	4618      	mov	r0, r3
 8010f4c:	f7ff ffc4 	bl	8010ed8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8010f50:	687b      	ldr	r3, [r7, #4]
 8010f52:	f503 53ad 	add.w	r3, r3, #5536	; 0x15a0
 8010f56:	331c      	adds	r3, #28
 8010f58:	4618      	mov	r0, r3
 8010f5a:	f7fe ff77 	bl	800fe4c <_ZN5ModelC1Ev>
 8010f5e:	687b      	ldr	r3, [r7, #4]
 8010f60:	f503 50ae 	add.w	r0, r3, #5568	; 0x15c0
 8010f64:	687b      	ldr	r3, [r7, #4]
 8010f66:	f503 53ad 	add.w	r3, r3, #5536	; 0x15a0
 8010f6a:	331c      	adds	r3, #28
 8010f6c:	687a      	ldr	r2, [r7, #4]
 8010f6e:	4619      	mov	r1, r3
 8010f70:	f7fe ff56 	bl	800fe20 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 8010f74:	687a      	ldr	r2, [r7, #4]
 8010f76:	687b      	ldr	r3, [r7, #4]
 8010f78:	f503 53ae 	add.w	r3, r3, #5568	; 0x15c0
 8010f7c:	4619      	mov	r1, r3
 8010f7e:	4610      	mov	r0, r2
 8010f80:	f7ff ff08 	bl	8010d94 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 8010f84:	687b      	ldr	r3, [r7, #4]
 8010f86:	4618      	mov	r0, r3
 8010f88:	370c      	adds	r7, #12
 8010f8a:	46bd      	mov	sp, r7
 8010f8c:	bd90      	pop	{r4, r7, pc}
 8010f8e:	bf00      	nop
 8010f90:	0802c208 	.word	0x0802c208

08010f94 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 8010f94:	b580      	push	{r7, lr}
 8010f96:	b086      	sub	sp, #24
 8010f98:	af02      	add	r7, sp, #8
 8010f9a:	60f8      	str	r0, [r7, #12]
 8010f9c:	60b9      	str	r1, [r7, #8]
 8010f9e:	607a      	str	r2, [r7, #4]
 8010fa0:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 8010fa2:	68f8      	ldr	r0, [r7, #12]
 8010fa4:	8bbb      	ldrh	r3, [r7, #28]
 8010fa6:	9301      	str	r3, [sp, #4]
 8010fa8:	8b3b      	ldrh	r3, [r7, #24]
 8010faa:	9300      	str	r3, [sp, #0]
 8010fac:	683b      	ldr	r3, [r7, #0]
 8010fae:	687a      	ldr	r2, [r7, #4]
 8010fb0:	68b9      	ldr	r1, [r7, #8]
 8010fb2:	f7ff fe2f 	bl	8010c14 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 8010fb6:	4a04      	ldr	r2, [pc, #16]	; (8010fc8 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 8010fb8:	68fb      	ldr	r3, [r7, #12]
 8010fba:	601a      	str	r2, [r3, #0]
    }
 8010fbc:	68fb      	ldr	r3, [r7, #12]
 8010fbe:	4618      	mov	r0, r3
 8010fc0:	3710      	adds	r7, #16
 8010fc2:	46bd      	mov	sp, r7
 8010fc4:	bd80      	pop	{r7, pc}
 8010fc6:	bf00      	nop
 8010fc8:	0802c308 	.word	0x0802c308

08010fcc <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8010fcc:	b580      	push	{r7, lr}
 8010fce:	b086      	sub	sp, #24
 8010fd0:	af02      	add	r7, sp, #8
 8010fd2:	60f8      	str	r0, [r7, #12]
 8010fd4:	60b9      	str	r1, [r7, #8]
 8010fd6:	607a      	str	r2, [r7, #4]
 8010fd8:	603b      	str	r3, [r7, #0]
 8010fda:	68f8      	ldr	r0, [r7, #12]
 8010fdc:	8bbb      	ldrh	r3, [r7, #28]
 8010fde:	9301      	str	r3, [sp, #4]
 8010fe0:	8b3b      	ldrh	r3, [r7, #24]
 8010fe2:	9300      	str	r3, [sp, #0]
 8010fe4:	683b      	ldr	r3, [r7, #0]
 8010fe6:	687a      	ldr	r2, [r7, #4]
 8010fe8:	68b9      	ldr	r1, [r7, #8]
 8010fea:	f7ff ffd3 	bl	8010f94 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 8010fee:	4a04      	ldr	r2, [pc, #16]	; (8011000 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 8010ff0:	68fb      	ldr	r3, [r7, #12]
 8010ff2:	601a      	str	r2, [r3, #0]
    }
 8010ff4:	68fb      	ldr	r3, [r7, #12]
 8010ff6:	4618      	mov	r0, r3
 8010ff8:	3710      	adds	r7, #16
 8010ffa:	46bd      	mov	sp, r7
 8010ffc:	bd80      	pop	{r7, pc}
 8010ffe:	bf00      	nop
 8011000:	0802c0bc 	.word	0x0802c0bc

08011004 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 8011004:	b480      	push	{r7}
 8011006:	b083      	sub	sp, #12
 8011008:	af00      	add	r7, sp, #0
 801100a:	6078      	str	r0, [r7, #4]
 801100c:	4a04      	ldr	r2, [pc, #16]	; (8011020 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 801100e:	687b      	ldr	r3, [r7, #4]
 8011010:	601a      	str	r2, [r3, #0]
 8011012:	687b      	ldr	r3, [r7, #4]
 8011014:	4618      	mov	r0, r3
 8011016:	370c      	adds	r7, #12
 8011018:	46bd      	mov	sp, r7
 801101a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801101e:	4770      	bx	lr
 8011020:	0802c0a4 	.word	0x0802c0a4

08011024 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 8011024:	b580      	push	{r7, lr}
 8011026:	b082      	sub	sp, #8
 8011028:	af00      	add	r7, sp, #0
 801102a:	6078      	str	r0, [r7, #4]
 801102c:	687b      	ldr	r3, [r7, #4]
 801102e:	4618      	mov	r0, r3
 8011030:	f7ff ffe8 	bl	8011004 <_ZN8touchgfx15TouchControllerC1Ev>
 8011034:	4a03      	ldr	r2, [pc, #12]	; (8011044 <_ZN20STM32TouchControllerC1Ev+0x20>)
 8011036:	687b      	ldr	r3, [r7, #4]
 8011038:	601a      	str	r2, [r3, #0]
 801103a:	687b      	ldr	r3, [r7, #4]
 801103c:	4618      	mov	r0, r3
 801103e:	3708      	adds	r7, #8
 8011040:	46bd      	mov	sp, r7
 8011042:	bd80      	pop	{r7, pc}
 8011044:	0802c08c 	.word	0x0802c08c

08011048 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 320, 240);

void touchgfx_init()
{
 8011048:	b590      	push	{r4, r7, lr}
 801104a:	b085      	sub	sp, #20
 801104c:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 801104e:	f7fe fcb7 	bl	800f9c0 <_ZN14BitmapDatabase11getInstanceEv>
 8011052:	4604      	mov	r4, r0
 8011054:	f7fe fcbe 	bl	800f9d4 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8011058:	4603      	mov	r3, r0
 801105a:	4619      	mov	r1, r3
 801105c:	2300      	movs	r3, #0
 801105e:	9300      	str	r3, [sp, #0]
 8011060:	2300      	movs	r3, #0
 8011062:	2200      	movs	r2, #0
 8011064:	4620      	mov	r0, r4
 8011066:	f009 fbc5 	bl	801a7f4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 801106a:	4809      	ldr	r0, [pc, #36]	; (8011090 <touchgfx_init+0x48>)
 801106c:	f7ff fd2c 	bl	8010ac8 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 8011070:	2000      	movs	r0, #0
 8011072:	f7fe fdf3 	bl	800fc5c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8011076:	4807      	ldr	r0, [pc, #28]	; (8011094 <touchgfx_init+0x4c>)
 8011078:	f009 fb24 	bl	801a6c4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 801107c:	f7ff feba 	bl	8010df4 <_ZN12FrontendHeap11getInstanceEv>
 8011080:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8011082:	4805      	ldr	r0, [pc, #20]	; (8011098 <touchgfx_init+0x50>)
 8011084:	f7ff faa0 	bl	80105c8 <_ZN11TouchGFXHAL10initializeEv>
}
 8011088:	bf00      	nop
 801108a:	370c      	adds	r7, #12
 801108c:	46bd      	mov	sp, r7
 801108e:	bd90      	pop	{r4, r7, pc}
 8011090:	2000ca8c 	.word	0x2000ca8c
 8011094:	20000054 	.word	0x20000054
 8011098:	2000ca90 	.word	0x2000ca90

0801109c <touchgfx_components_init>:

void touchgfx_components_init()
{
 801109c:	b480      	push	{r7}
 801109e:	af00      	add	r7, sp, #0
}
 80110a0:	bf00      	nop
 80110a2:	46bd      	mov	sp, r7
 80110a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80110a8:	4770      	bx	lr
	...

080110ac <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 80110ac:	b580      	push	{r7, lr}
 80110ae:	b082      	sub	sp, #8
 80110b0:	af00      	add	r7, sp, #0
 80110b2:	6078      	str	r0, [r7, #4]
 80110b4:	4a11      	ldr	r2, [pc, #68]	; (80110fc <_ZN12FrontendHeapD1Ev+0x50>)
 80110b6:	687b      	ldr	r3, [r7, #4]
 80110b8:	601a      	str	r2, [r3, #0]
 80110ba:	687b      	ldr	r3, [r7, #4]
 80110bc:	f503 53ae 	add.w	r3, r3, #5568	; 0x15c0
 80110c0:	4618      	mov	r0, r3
 80110c2:	f7fe fe77 	bl	800fdb4 <_ZN19FrontendApplicationD1Ev>
 80110c6:	687b      	ldr	r3, [r7, #4]
 80110c8:	f503 53ad 	add.w	r3, r3, #5536	; 0x15a0
 80110cc:	3308      	adds	r3, #8
 80110ce:	4618      	mov	r0, r3
 80110d0:	f000 f828 	bl	8011124 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80110d4:	687b      	ldr	r3, [r7, #4]
 80110d6:	332c      	adds	r3, #44	; 0x2c
 80110d8:	4618      	mov	r0, r3
 80110da:	f000 f845 	bl	8011168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80110de:	687b      	ldr	r3, [r7, #4]
 80110e0:	3314      	adds	r3, #20
 80110e2:	4618      	mov	r0, r3
 80110e4:	f000 f864 	bl	80111b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80110e8:	687b      	ldr	r3, [r7, #4]
 80110ea:	4618      	mov	r0, r3
 80110ec:	f7ff feae 	bl	8010e4c <_ZN16FrontendHeapBaseD1Ev>
 80110f0:	687b      	ldr	r3, [r7, #4]
 80110f2:	4618      	mov	r0, r3
 80110f4:	3708      	adds	r7, #8
 80110f6:	46bd      	mov	sp, r7
 80110f8:	bd80      	pop	{r7, pc}
 80110fa:	bf00      	nop
 80110fc:	0802c208 	.word	0x0802c208

08011100 <_ZN12FrontendHeapD0Ev>:
 8011100:	b580      	push	{r7, lr}
 8011102:	b082      	sub	sp, #8
 8011104:	af00      	add	r7, sp, #0
 8011106:	6078      	str	r0, [r7, #4]
 8011108:	6878      	ldr	r0, [r7, #4]
 801110a:	f7ff ffcf 	bl	80110ac <_ZN12FrontendHeapD1Ev>
 801110e:	f241 711c 	movw	r1, #5916	; 0x171c
 8011112:	6878      	ldr	r0, [r7, #4]
 8011114:	f017 fadd 	bl	80286d2 <_ZdlPvj>
 8011118:	687b      	ldr	r3, [r7, #4]
 801111a:	4618      	mov	r0, r3
 801111c:	3708      	adds	r7, #8
 801111e:	46bd      	mov	sp, r7
 8011120:	bd80      	pop	{r7, pc}
	...

08011124 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8011124:	b580      	push	{r7, lr}
 8011126:	b082      	sub	sp, #8
 8011128:	af00      	add	r7, sp, #0
 801112a:	6078      	str	r0, [r7, #4]
 801112c:	4a05      	ldr	r2, [pc, #20]	; (8011144 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 801112e:	687b      	ldr	r3, [r7, #4]
 8011130:	601a      	str	r2, [r3, #0]
 8011132:	687b      	ldr	r3, [r7, #4]
 8011134:	4618      	mov	r0, r3
 8011136:	f000 fe60 	bl	8011dfa <_ZN8touchgfx17AbstractPartitionD1Ev>
 801113a:	687b      	ldr	r3, [r7, #4]
 801113c:	4618      	mov	r0, r3
 801113e:	3708      	adds	r7, #8
 8011140:	46bd      	mov	sp, r7
 8011142:	bd80      	pop	{r7, pc}
 8011144:	0802c21c 	.word	0x0802c21c

08011148 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8011148:	b580      	push	{r7, lr}
 801114a:	b082      	sub	sp, #8
 801114c:	af00      	add	r7, sp, #0
 801114e:	6078      	str	r0, [r7, #4]
 8011150:	6878      	ldr	r0, [r7, #4]
 8011152:	f7ff ffe7 	bl	8011124 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8011156:	2114      	movs	r1, #20
 8011158:	6878      	ldr	r0, [r7, #4]
 801115a:	f017 faba 	bl	80286d2 <_ZdlPvj>
 801115e:	687b      	ldr	r3, [r7, #4]
 8011160:	4618      	mov	r0, r3
 8011162:	3708      	adds	r7, #8
 8011164:	46bd      	mov	sp, r7
 8011166:	bd80      	pop	{r7, pc}

08011168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8011168:	b580      	push	{r7, lr}
 801116a:	b082      	sub	sp, #8
 801116c:	af00      	add	r7, sp, #0
 801116e:	6078      	str	r0, [r7, #4]
 8011170:	4a05      	ldr	r2, [pc, #20]	; (8011188 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 8011172:	687b      	ldr	r3, [r7, #4]
 8011174:	601a      	str	r2, [r3, #0]
 8011176:	687b      	ldr	r3, [r7, #4]
 8011178:	4618      	mov	r0, r3
 801117a:	f000 fe3e 	bl	8011dfa <_ZN8touchgfx17AbstractPartitionD1Ev>
 801117e:	687b      	ldr	r3, [r7, #4]
 8011180:	4618      	mov	r0, r3
 8011182:	3708      	adds	r7, #8
 8011184:	46bd      	mov	sp, r7
 8011186:	bd80      	pop	{r7, pc}
 8011188:	0802c250 	.word	0x0802c250

0801118c <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 801118c:	b580      	push	{r7, lr}
 801118e:	b082      	sub	sp, #8
 8011190:	af00      	add	r7, sp, #0
 8011192:	6078      	str	r0, [r7, #4]
 8011194:	6878      	ldr	r0, [r7, #4]
 8011196:	f7ff ffe7 	bl	8011168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 801119a:	f241 517c 	movw	r1, #5500	; 0x157c
 801119e:	6878      	ldr	r0, [r7, #4]
 80111a0:	f017 fa97 	bl	80286d2 <_ZdlPvj>
 80111a4:	687b      	ldr	r3, [r7, #4]
 80111a6:	4618      	mov	r0, r3
 80111a8:	3708      	adds	r7, #8
 80111aa:	46bd      	mov	sp, r7
 80111ac:	bd80      	pop	{r7, pc}
	...

080111b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80111b0:	b580      	push	{r7, lr}
 80111b2:	b082      	sub	sp, #8
 80111b4:	af00      	add	r7, sp, #0
 80111b6:	6078      	str	r0, [r7, #4]
 80111b8:	4a05      	ldr	r2, [pc, #20]	; (80111d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 80111ba:	687b      	ldr	r3, [r7, #4]
 80111bc:	601a      	str	r2, [r3, #0]
 80111be:	687b      	ldr	r3, [r7, #4]
 80111c0:	4618      	mov	r0, r3
 80111c2:	f000 fe1a 	bl	8011dfa <_ZN8touchgfx17AbstractPartitionD1Ev>
 80111c6:	687b      	ldr	r3, [r7, #4]
 80111c8:	4618      	mov	r0, r3
 80111ca:	3708      	adds	r7, #8
 80111cc:	46bd      	mov	sp, r7
 80111ce:	bd80      	pop	{r7, pc}
 80111d0:	0802c284 	.word	0x0802c284

080111d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80111d4:	b580      	push	{r7, lr}
 80111d6:	b082      	sub	sp, #8
 80111d8:	af00      	add	r7, sp, #0
 80111da:	6078      	str	r0, [r7, #4]
 80111dc:	6878      	ldr	r0, [r7, #4]
 80111de:	f7ff ffe7 	bl	80111b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80111e2:	2118      	movs	r1, #24
 80111e4:	6878      	ldr	r0, [r7, #4]
 80111e6:	f017 fa74 	bl	80286d2 <_ZdlPvj>
 80111ea:	687b      	ldr	r3, [r7, #4]
 80111ec:	4618      	mov	r0, r3
 80111ee:	3708      	adds	r7, #8
 80111f0:	46bd      	mov	sp, r7
 80111f2:	bd80      	pop	{r7, pc}

080111f4 <_ZN8touchgfx8LCD16bppD1Ev>:
class LCD16bpp : public LCD
 80111f4:	b580      	push	{r7, lr}
 80111f6:	b082      	sub	sp, #8
 80111f8:	af00      	add	r7, sp, #0
 80111fa:	6078      	str	r0, [r7, #4]
 80111fc:	4a05      	ldr	r2, [pc, #20]	; (8011214 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 80111fe:	687b      	ldr	r3, [r7, #4]
 8011200:	601a      	str	r2, [r3, #0]
 8011202:	687b      	ldr	r3, [r7, #4]
 8011204:	4618      	mov	r0, r3
 8011206:	f7ff fcaf 	bl	8010b68 <_ZN8touchgfx3LCDD1Ev>
 801120a:	687b      	ldr	r3, [r7, #4]
 801120c:	4618      	mov	r0, r3
 801120e:	3708      	adds	r7, #8
 8011210:	46bd      	mov	sp, r7
 8011212:	bd80      	pop	{r7, pc}
 8011214:	0802d178 	.word	0x0802d178

08011218 <_ZN8touchgfx8LCD16bppD0Ev>:
 8011218:	b580      	push	{r7, lr}
 801121a:	b082      	sub	sp, #8
 801121c:	af00      	add	r7, sp, #0
 801121e:	6078      	str	r0, [r7, #4]
 8011220:	6878      	ldr	r0, [r7, #4]
 8011222:	f7ff ffe7 	bl	80111f4 <_ZN8touchgfx8LCD16bppD1Ev>
 8011226:	2184      	movs	r1, #132	; 0x84
 8011228:	6878      	ldr	r0, [r7, #4]
 801122a:	f017 fa52 	bl	80286d2 <_ZdlPvj>
 801122e:	687b      	ldr	r3, [r7, #4]
 8011230:	4618      	mov	r0, r3
 8011232:	3708      	adds	r7, #8
 8011234:	46bd      	mov	sp, r7
 8011236:	bd80      	pop	{r7, pc}

08011238 <_Z41__static_initialization_and_destruction_0ii>:
     */
     if (OSWrappers::isVSyncAvailable())
     {
         hal.backPorchExited();
     }
}
 8011238:	b580      	push	{r7, lr}
 801123a:	b084      	sub	sp, #16
 801123c:	af02      	add	r7, sp, #8
 801123e:	6078      	str	r0, [r7, #4]
 8011240:	6039      	str	r1, [r7, #0]
 8011242:	687b      	ldr	r3, [r7, #4]
 8011244:	2b01      	cmp	r3, #1
 8011246:	d118      	bne.n	801127a <_Z41__static_initialization_and_destruction_0ii+0x42>
 8011248:	683b      	ldr	r3, [r7, #0]
 801124a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801124e:	4293      	cmp	r3, r2
 8011250:	d113      	bne.n	801127a <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 8011252:	4817      	ldr	r0, [pc, #92]	; (80112b0 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 8011254:	f7ff fee6 	bl	8011024 <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 8011258:	4816      	ldr	r0, [pc, #88]	; (80112b4 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 801125a:	f7ff fb97 	bl	801098c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 801125e:	4816      	ldr	r0, [pc, #88]	; (80112b8 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8011260:	f00d fd8c 	bl	801ed7c <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 320, 240);
 8011264:	23f0      	movs	r3, #240	; 0xf0
 8011266:	9301      	str	r3, [sp, #4]
 8011268:	f44f 73a0 	mov.w	r3, #320	; 0x140
 801126c:	9300      	str	r3, [sp, #0]
 801126e:	4b10      	ldr	r3, [pc, #64]	; (80112b0 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 8011270:	4a11      	ldr	r2, [pc, #68]	; (80112b8 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8011272:	4910      	ldr	r1, [pc, #64]	; (80112b4 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8011274:	4811      	ldr	r0, [pc, #68]	; (80112bc <_Z41__static_initialization_and_destruction_0ii+0x84>)
 8011276:	f7ff fea9 	bl	8010fcc <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 801127a:	687b      	ldr	r3, [r7, #4]
 801127c:	2b00      	cmp	r3, #0
 801127e:	d113      	bne.n	80112a8 <_Z41__static_initialization_and_destruction_0ii+0x70>
 8011280:	683b      	ldr	r3, [r7, #0]
 8011282:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011286:	4293      	cmp	r3, r2
 8011288:	d10e      	bne.n	80112a8 <_Z41__static_initialization_and_destruction_0ii+0x70>
 801128a:	480c      	ldr	r0, [pc, #48]	; (80112bc <_Z41__static_initialization_and_destruction_0ii+0x84>)
 801128c:	f7ff fa2c 	bl	80106e8 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 8011290:	480b      	ldr	r0, [pc, #44]	; (80112c0 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 8011292:	f7fa f843 	bl	800b31c <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 8011296:	4808      	ldr	r0, [pc, #32]	; (80112b8 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8011298:	f7ff ffac 	bl	80111f4 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 801129c:	4805      	ldr	r0, [pc, #20]	; (80112b4 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 801129e:	f7ff fbc9 	bl	8010a34 <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 80112a2:	4803      	ldr	r0, [pc, #12]	; (80112b0 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 80112a4:	f7fe ff68 	bl	8010178 <_ZN20STM32TouchControllerD1Ev>
}
 80112a8:	bf00      	nop
 80112aa:	3708      	adds	r7, #8
 80112ac:	46bd      	mov	sp, r7
 80112ae:	bd80      	pop	{r7, pc}
 80112b0:	2000c9c0 	.word	0x2000c9c0
 80112b4:	2000c9c4 	.word	0x2000c9c4
 80112b8:	2000ca08 	.word	0x2000ca08
 80112bc:	2000ca90 	.word	0x2000ca90
 80112c0:	20000054 	.word	0x20000054

080112c4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 80112c4:	b480      	push	{r7}
 80112c6:	b083      	sub	sp, #12
 80112c8:	af00      	add	r7, sp, #0
 80112ca:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 80112cc:	2301      	movs	r3, #1
    }
 80112ce:	4618      	mov	r0, r3
 80112d0:	370c      	adds	r7, #12
 80112d2:	46bd      	mov	sp, r7
 80112d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80112d8:	4770      	bx	lr

080112da <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 80112da:	b480      	push	{r7}
 80112dc:	b083      	sub	sp, #12
 80112de:	af00      	add	r7, sp, #0
 80112e0:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 80112e2:	230c      	movs	r3, #12
    }
 80112e4:	4618      	mov	r0, r3
 80112e6:	370c      	adds	r7, #12
 80112e8:	46bd      	mov	sp, r7
 80112ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80112ee:	4770      	bx	lr

080112f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 80112f0:	b480      	push	{r7}
 80112f2:	b083      	sub	sp, #12
 80112f4:	af00      	add	r7, sp, #0
 80112f6:	6078      	str	r0, [r7, #4]
 80112f8:	460b      	mov	r3, r1
 80112fa:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 80112fc:	887a      	ldrh	r2, [r7, #2]
 80112fe:	4613      	mov	r3, r2
 8011300:	005b      	lsls	r3, r3, #1
 8011302:	4413      	add	r3, r2
 8011304:	009b      	lsls	r3, r3, #2
 8011306:	3308      	adds	r3, #8
 8011308:	687a      	ldr	r2, [r7, #4]
 801130a:	4413      	add	r3, r2
    }
 801130c:	4618      	mov	r0, r3
 801130e:	370c      	adds	r7, #12
 8011310:	46bd      	mov	sp, r7
 8011312:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011316:	4770      	bx	lr

08011318 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 8011318:	b480      	push	{r7}
 801131a:	b083      	sub	sp, #12
 801131c:	af00      	add	r7, sp, #0
 801131e:	6078      	str	r0, [r7, #4]
 8011320:	460b      	mov	r3, r1
 8011322:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 8011324:	887a      	ldrh	r2, [r7, #2]
 8011326:	4613      	mov	r3, r2
 8011328:	005b      	lsls	r3, r3, #1
 801132a:	4413      	add	r3, r2
 801132c:	009b      	lsls	r3, r3, #2
 801132e:	3308      	adds	r3, #8
 8011330:	687a      	ldr	r2, [r7, #4]
 8011332:	4413      	add	r3, r2
    }
 8011334:	4618      	mov	r0, r3
 8011336:	370c      	adds	r7, #12
 8011338:	46bd      	mov	sp, r7
 801133a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801133e:	4770      	bx	lr

08011340 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 8011340:	b480      	push	{r7}
 8011342:	b083      	sub	sp, #12
 8011344:	af00      	add	r7, sp, #0
 8011346:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 8011348:	2301      	movs	r3, #1
    }
 801134a:	4618      	mov	r0, r3
 801134c:	370c      	adds	r7, #12
 801134e:	46bd      	mov	sp, r7
 8011350:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011354:	4770      	bx	lr

08011356 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 8011356:	b480      	push	{r7}
 8011358:	b083      	sub	sp, #12
 801135a:	af00      	add	r7, sp, #0
 801135c:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 801135e:	f241 5374 	movw	r3, #5492	; 0x1574
    }
 8011362:	4618      	mov	r0, r3
 8011364:	370c      	adds	r7, #12
 8011366:	46bd      	mov	sp, r7
 8011368:	f85d 7b04 	ldr.w	r7, [sp], #4
 801136c:	4770      	bx	lr

0801136e <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 801136e:	b480      	push	{r7}
 8011370:	b083      	sub	sp, #12
 8011372:	af00      	add	r7, sp, #0
 8011374:	6078      	str	r0, [r7, #4]
 8011376:	460b      	mov	r3, r1
 8011378:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 801137a:	887b      	ldrh	r3, [r7, #2]
 801137c:	f241 5274 	movw	r2, #5492	; 0x1574
 8011380:	fb02 f303 	mul.w	r3, r2, r3
 8011384:	3308      	adds	r3, #8
 8011386:	687a      	ldr	r2, [r7, #4]
 8011388:	4413      	add	r3, r2
    }
 801138a:	4618      	mov	r0, r3
 801138c:	370c      	adds	r7, #12
 801138e:	46bd      	mov	sp, r7
 8011390:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011394:	4770      	bx	lr

08011396 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 8011396:	b480      	push	{r7}
 8011398:	b083      	sub	sp, #12
 801139a:	af00      	add	r7, sp, #0
 801139c:	6078      	str	r0, [r7, #4]
 801139e:	460b      	mov	r3, r1
 80113a0:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 80113a2:	887b      	ldrh	r3, [r7, #2]
 80113a4:	f241 5274 	movw	r2, #5492	; 0x1574
 80113a8:	fb02 f303 	mul.w	r3, r2, r3
 80113ac:	3308      	adds	r3, #8
 80113ae:	687a      	ldr	r2, [r7, #4]
 80113b0:	4413      	add	r3, r2
    }
 80113b2:	4618      	mov	r0, r3
 80113b4:	370c      	adds	r7, #12
 80113b6:	46bd      	mov	sp, r7
 80113b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80113bc:	4770      	bx	lr

080113be <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 80113be:	b480      	push	{r7}
 80113c0:	b083      	sub	sp, #12
 80113c2:	af00      	add	r7, sp, #0
 80113c4:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 80113c6:	2301      	movs	r3, #1
    }
 80113c8:	4618      	mov	r0, r3
 80113ca:	370c      	adds	r7, #12
 80113cc:	46bd      	mov	sp, r7
 80113ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80113d2:	4770      	bx	lr

080113d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 80113d4:	b480      	push	{r7}
 80113d6:	b083      	sub	sp, #12
 80113d8:	af00      	add	r7, sp, #0
 80113da:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 80113dc:	2310      	movs	r3, #16
    }
 80113de:	4618      	mov	r0, r3
 80113e0:	370c      	adds	r7, #12
 80113e2:	46bd      	mov	sp, r7
 80113e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80113e8:	4770      	bx	lr

080113ea <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 80113ea:	b480      	push	{r7}
 80113ec:	b083      	sub	sp, #12
 80113ee:	af00      	add	r7, sp, #0
 80113f0:	6078      	str	r0, [r7, #4]
 80113f2:	460b      	mov	r3, r1
 80113f4:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 80113f6:	887b      	ldrh	r3, [r7, #2]
 80113f8:	011b      	lsls	r3, r3, #4
 80113fa:	3308      	adds	r3, #8
 80113fc:	687a      	ldr	r2, [r7, #4]
 80113fe:	4413      	add	r3, r2
    }
 8011400:	4618      	mov	r0, r3
 8011402:	370c      	adds	r7, #12
 8011404:	46bd      	mov	sp, r7
 8011406:	f85d 7b04 	ldr.w	r7, [sp], #4
 801140a:	4770      	bx	lr

0801140c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 801140c:	b480      	push	{r7}
 801140e:	b083      	sub	sp, #12
 8011410:	af00      	add	r7, sp, #0
 8011412:	6078      	str	r0, [r7, #4]
 8011414:	460b      	mov	r3, r1
 8011416:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8011418:	887b      	ldrh	r3, [r7, #2]
 801141a:	011b      	lsls	r3, r3, #4
 801141c:	3308      	adds	r3, #8
 801141e:	687a      	ldr	r2, [r7, #4]
 8011420:	4413      	add	r3, r2
    }
 8011422:	4618      	mov	r0, r3
 8011424:	370c      	adds	r7, #12
 8011426:	46bd      	mov	sp, r7
 8011428:	f85d 7b04 	ldr.w	r7, [sp], #4
 801142c:	4770      	bx	lr

0801142e <_GLOBAL__sub_I_touchgfx_init>:
 801142e:	b580      	push	{r7, lr}
 8011430:	af00      	add	r7, sp, #0
 8011432:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011436:	2001      	movs	r0, #1
 8011438:	f7ff fefe 	bl	8011238 <_Z41__static_initialization_and_destruction_0ii>
 801143c:	bd80      	pop	{r7, pc}

0801143e <_GLOBAL__sub_D_touchgfx_init>:
 801143e:	b580      	push	{r7, lr}
 8011440:	af00      	add	r7, sp, #0
 8011442:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011446:	2000      	movs	r0, #0
 8011448:	f7ff fef6 	bl	8011238 <_Z41__static_initialization_and_destruction_0ii>
 801144c:	bd80      	pop	{r7, pc}
	...

08011450 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 8011450:	b480      	push	{r7}
 8011452:	b083      	sub	sp, #12
 8011454:	af00      	add	r7, sp, #0
 8011456:	6078      	str	r0, [r7, #4]
    {
 8011458:	4a04      	ldr	r2, [pc, #16]	; (801146c <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 801145a:	687b      	ldr	r3, [r7, #4]
 801145c:	601a      	str	r2, [r3, #0]
    }
 801145e:	687b      	ldr	r3, [r7, #4]
 8011460:	4618      	mov	r0, r3
 8011462:	370c      	adds	r7, #12
 8011464:	46bd      	mov	sp, r7
 8011466:	f85d 7b04 	ldr.w	r7, [sp], #4
 801146a:	4770      	bx	lr
 801146c:	0802c3e0 	.word	0x0802c3e0

08011470 <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 8011470:	b580      	push	{r7, lr}
 8011472:	b082      	sub	sp, #8
 8011474:	af00      	add	r7, sp, #0
 8011476:	6078      	str	r0, [r7, #4]
    }
 8011478:	6878      	ldr	r0, [r7, #4]
 801147a:	f7ff ffe9 	bl	8011450 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 801147e:	2104      	movs	r1, #4
 8011480:	6878      	ldr	r0, [r7, #4]
 8011482:	f017 f926 	bl	80286d2 <_ZdlPvj>
 8011486:	687b      	ldr	r3, [r7, #4]
 8011488:	4618      	mov	r0, r3
 801148a:	3708      	adds	r7, #8
 801148c:	46bd      	mov	sp, r7
 801148e:	bd80      	pop	{r7, pc}

08011490 <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 8011490:	b480      	push	{r7}
 8011492:	b083      	sub	sp, #12
 8011494:	af00      	add	r7, sp, #0
 8011496:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 8011498:	687b      	ldr	r3, [r7, #4]
 801149a:	f893 306a 	ldrb.w	r3, [r3, #106]	; 0x6a
 801149e:	3301      	adds	r3, #1
 80114a0:	b2da      	uxtb	r2, r3
 80114a2:	687b      	ldr	r3, [r7, #4]
 80114a4:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
    }
 80114a8:	bf00      	nop
 80114aa:	370c      	adds	r7, #12
 80114ac:	46bd      	mov	sp, r7
 80114ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80114b2:	4770      	bx	lr

080114b4 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 80114b4:	b480      	push	{r7}
 80114b6:	b083      	sub	sp, #12
 80114b8:	af00      	add	r7, sp, #0
 80114ba:	6078      	str	r0, [r7, #4]
 80114bc:	6039      	str	r1, [r7, #0]
        frameBufferAllocator = allocator;
 80114be:	687b      	ldr	r3, [r7, #4]
 80114c0:	683a      	ldr	r2, [r7, #0]
 80114c2:	619a      	str	r2, [r3, #24]
    }
 80114c4:	bf00      	nop
 80114c6:	370c      	adds	r7, #12
 80114c8:	46bd      	mov	sp, r7
 80114ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80114ce:	4770      	bx	lr

080114d0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 80114d0:	b580      	push	{r7, lr}
 80114d2:	b082      	sub	sp, #8
 80114d4:	af00      	add	r7, sp, #0
 80114d6:	6078      	str	r0, [r7, #4]
 80114d8:	460b      	mov	r3, r1
 80114da:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 80114dc:	78fb      	ldrb	r3, [r7, #3]
 80114de:	2b00      	cmp	r3, #0
 80114e0:	d002      	beq.n	80114e8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 80114e2:	78fb      	ldrb	r3, [r7, #3]
 80114e4:	2b02      	cmp	r3, #2
 80114e6:	d105      	bne.n	80114f4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 80114e8:	687b      	ldr	r3, [r7, #4]
 80114ea:	78fa      	ldrb	r2, [r7, #3]
 80114ec:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 80114f0:	2301      	movs	r3, #1
 80114f2:	e027      	b.n	8011544 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 80114f4:	78fb      	ldrb	r3, [r7, #3]
 80114f6:	2b01      	cmp	r3, #1
 80114f8:	d123      	bne.n	8011542 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 80114fa:	687b      	ldr	r3, [r7, #4]
 80114fc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80114fe:	2b00      	cmp	r3, #0
 8011500:	d014      	beq.n	801152c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 8011502:	687b      	ldr	r3, [r7, #4]
 8011504:	681b      	ldr	r3, [r3, #0]
 8011506:	339c      	adds	r3, #156	; 0x9c
 8011508:	681b      	ldr	r3, [r3, #0]
 801150a:	6878      	ldr	r0, [r7, #4]
 801150c:	4798      	blx	r3
 801150e:	4603      	mov	r3, r0
 8011510:	461a      	mov	r2, r3
 8011512:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011516:	429a      	cmp	r2, r3
 8011518:	d008      	beq.n	801152c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 801151a:	4b0c      	ldr	r3, [pc, #48]	; (801154c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 801151c:	781b      	ldrb	r3, [r3, #0]
 801151e:	f083 0301 	eor.w	r3, r3, #1
 8011522:	b2db      	uxtb	r3, r3
 8011524:	2b00      	cmp	r3, #0
 8011526:	d001      	beq.n	801152c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 8011528:	2301      	movs	r3, #1
 801152a:	e000      	b.n	801152e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 801152c:	2300      	movs	r3, #0
 801152e:	2b00      	cmp	r3, #0
 8011530:	d005      	beq.n	801153e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 8011532:	687b      	ldr	r3, [r7, #4]
 8011534:	78fa      	ldrb	r2, [r7, #3]
 8011536:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 801153a:	2301      	movs	r3, #1
 801153c:	e002      	b.n	8011544 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 801153e:	2300      	movs	r3, #0
 8011540:	e000      	b.n	8011544 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 8011542:	2300      	movs	r3, #0
    }
 8011544:	4618      	mov	r0, r3
 8011546:	3708      	adds	r7, #8
 8011548:	46bd      	mov	sp, r7
 801154a:	bd80      	pop	{r7, pc}
 801154c:	2000e1be 	.word	0x2000e1be

08011550 <_ZN8touchgfx5paint8tearDownEv>:
{
    blendL8CLUT = data;
}

void tearDown()
{
 8011550:	b480      	push	{r7}
 8011552:	af00      	add	r7, sp, #0
}
 8011554:	bf00      	nop
 8011556:	46bd      	mov	sp, r7
 8011558:	f85d 7b04 	ldr.w	r7, [sp], #4
 801155c:	4770      	bx	lr
	...

08011560 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8011560:	b480      	push	{r7}
 8011562:	b08b      	sub	sp, #44	; 0x2c
 8011564:	af00      	add	r7, sp, #0
 8011566:	60f8      	str	r0, [r7, #12]
 8011568:	60b9      	str	r1, [r7, #8]
 801156a:	607a      	str	r2, [r7, #4]
 801156c:	70fb      	strb	r3, [r7, #3]
    uint16_t* framebuffer = ptr;
 801156e:	68fb      	ldr	r3, [r7, #12]
 8011570:	627b      	str	r3, [r7, #36]	; 0x24
    const uint16_t* const lineEnd = framebuffer + count;
 8011572:	68bb      	ldr	r3, [r7, #8]
 8011574:	005b      	lsls	r3, r3, #1
 8011576:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8011578:	4413      	add	r3, r2
 801157a:	623b      	str	r3, [r7, #32]
    if (alpha == 0xFF)
 801157c:	78fb      	ldrb	r3, [r7, #3]
 801157e:	2bff      	cmp	r3, #255	; 0xff
 8011580:	d110      	bne.n	80115a4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>
    {
        do
        {
            *framebuffer = color565;
 8011582:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8011584:	b29a      	uxth	r2, r3
 8011586:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011588:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < lineEnd);
 801158a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801158c:	3302      	adds	r3, #2
 801158e:	627b      	str	r3, [r7, #36]	; 0x24
 8011590:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8011592:	6a3b      	ldr	r3, [r7, #32]
 8011594:	429a      	cmp	r2, r3
 8011596:	bf34      	ite	cc
 8011598:	2301      	movcc	r3, #1
 801159a:	2300      	movcs	r3, #0
 801159c:	b2db      	uxtb	r3, r3
 801159e:	2b00      	cmp	r3, #0
 80115a0:	d1ef      	bne.n	8011582 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x22>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 80115a2:	e077      	b.n	8011694 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x134>
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 80115a4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80115a6:	b29a      	uxth	r2, r3
 80115a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80115aa:	881b      	ldrh	r3, [r3, #0]
 80115ac:	83fa      	strh	r2, [r7, #30]
 80115ae:	83bb      	strh	r3, [r7, #28]
 80115b0:	78fb      	ldrb	r3, [r7, #3]
 80115b2:	76fb      	strb	r3, [r7, #27]
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 80115b4:	8bfb      	ldrh	r3, [r7, #30]
 80115b6:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80115ba:	f023 0307 	bic.w	r3, r3, #7
 80115be:	b299      	uxth	r1, r3
 80115c0:	8bfb      	ldrh	r3, [r7, #30]
 80115c2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80115c6:	b29a      	uxth	r2, r3
 80115c8:	8bfb      	ldrh	r3, [r7, #30]
 80115ca:	f003 031f 	and.w	r3, r3, #31
 80115ce:	b29b      	uxth	r3, r3
 80115d0:	8339      	strh	r1, [r7, #24]
 80115d2:	82fa      	strh	r2, [r7, #22]
 80115d4:	82bb      	strh	r3, [r7, #20]
 80115d6:	8bbb      	ldrh	r3, [r7, #28]
 80115d8:	827b      	strh	r3, [r7, #18]
 80115da:	7efb      	ldrb	r3, [r7, #27]
 80115dc:	747b      	strb	r3, [r7, #17]
    const uint8_t ialpha = 0xFF - alpha;
 80115de:	7c7b      	ldrb	r3, [r7, #17]
 80115e0:	43db      	mvns	r3, r3
 80115e2:	743b      	strb	r3, [r7, #16]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80115e4:	8b3b      	ldrh	r3, [r7, #24]
 80115e6:	7c7a      	ldrb	r2, [r7, #17]
 80115e8:	fb03 f202 	mul.w	r2, r3, r2
 80115ec:	8a7b      	ldrh	r3, [r7, #18]
 80115ee:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80115f2:	7c39      	ldrb	r1, [r7, #16]
 80115f4:	fb01 f303 	mul.w	r3, r1, r3
 80115f8:	4413      	add	r3, r2
 80115fa:	4a29      	ldr	r2, [pc, #164]	; (80116a0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x140>)
 80115fc:	fb82 1203 	smull	r1, r2, r2, r3
 8011600:	441a      	add	r2, r3
 8011602:	11d2      	asrs	r2, r2, #7
 8011604:	17db      	asrs	r3, r3, #31
 8011606:	1ad3      	subs	r3, r2, r3
 8011608:	b21b      	sxth	r3, r3
 801160a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801160e:	f023 0307 	bic.w	r3, r3, #7
 8011612:	b21a      	sxth	r2, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8011614:	8afb      	ldrh	r3, [r7, #22]
 8011616:	7c79      	ldrb	r1, [r7, #17]
 8011618:	fb03 f101 	mul.w	r1, r3, r1
 801161c:	8a7b      	ldrh	r3, [r7, #18]
 801161e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8011622:	7c38      	ldrb	r0, [r7, #16]
 8011624:	fb00 f303 	mul.w	r3, r0, r3
 8011628:	440b      	add	r3, r1
 801162a:	491d      	ldr	r1, [pc, #116]	; (80116a0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x140>)
 801162c:	fb81 0103 	smull	r0, r1, r1, r3
 8011630:	4419      	add	r1, r3
 8011632:	11c9      	asrs	r1, r1, #7
 8011634:	17db      	asrs	r3, r3, #31
 8011636:	1acb      	subs	r3, r1, r3
 8011638:	b21b      	sxth	r3, r3
 801163a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801163e:	b21b      	sxth	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8011640:	4313      	orrs	r3, r2
 8011642:	b21a      	sxth	r2, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8011644:	8abb      	ldrh	r3, [r7, #20]
 8011646:	7c79      	ldrb	r1, [r7, #17]
 8011648:	fb03 f101 	mul.w	r1, r3, r1
 801164c:	8a7b      	ldrh	r3, [r7, #18]
 801164e:	f003 031f 	and.w	r3, r3, #31
 8011652:	7c38      	ldrb	r0, [r7, #16]
 8011654:	fb00 f303 	mul.w	r3, r0, r3
 8011658:	440b      	add	r3, r1
 801165a:	4911      	ldr	r1, [pc, #68]	; (80116a0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x140>)
 801165c:	fb81 0103 	smull	r0, r1, r1, r3
 8011660:	4419      	add	r1, r3
 8011662:	11c9      	asrs	r1, r1, #7
 8011664:	17db      	asrs	r3, r3, #31
 8011666:	1acb      	subs	r3, r1, r3
 8011668:	b21b      	sxth	r3, r3
 801166a:	f003 031f 	and.w	r3, r3, #31
 801166e:	b21b      	sxth	r3, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8011670:	4313      	orrs	r3, r2
 8011672:	b21b      	sxth	r3, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8011674:	b29a      	uxth	r2, r3
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 8011676:	bf00      	nop
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8011678:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801167a:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < lineEnd);
 801167c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801167e:	3302      	adds	r3, #2
 8011680:	627b      	str	r3, [r7, #36]	; 0x24
 8011682:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8011684:	6a3b      	ldr	r3, [r7, #32]
 8011686:	429a      	cmp	r2, r3
 8011688:	bf34      	ite	cc
 801168a:	2301      	movcc	r3, #1
 801168c:	2300      	movcs	r3, #0
 801168e:	b2db      	uxtb	r3, r3
 8011690:	2b00      	cmp	r3, #0
 8011692:	d187      	bne.n	80115a4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>
}
 8011694:	bf00      	nop
 8011696:	372c      	adds	r7, #44	; 0x2c
 8011698:	46bd      	mov	sp, r7
 801169a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801169e:	4770      	bx	lr
 80116a0:	80808081 	.word	0x80808081

080116a4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
                   3, /* number of blocks */
                   2  /* bytes per pixel */
                   > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 80116a4:	b5b0      	push	{r4, r5, r7, lr}
 80116a6:	b082      	sub	sp, #8
 80116a8:	af00      	add	r7, sp, #0
 80116aa:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 80116ac:	687b      	ldr	r3, [r7, #4]
 80116ae:	4618      	mov	r0, r3
 80116b0:	f001 f8f9 	bl	80128a6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80116b4:	687d      	ldr	r5, [r7, #4]
 80116b6:	687b      	ldr	r3, [r7, #4]
 80116b8:	681b      	ldr	r3, [r3, #0]
 80116ba:	3364      	adds	r3, #100	; 0x64
 80116bc:	681c      	ldr	r4, [r3, #0]
 80116be:	f005 fef3 	bl	80174a8 <_ZN8touchgfx11Application11getInstanceEv>
 80116c2:	4603      	mov	r3, r0
 80116c4:	4619      	mov	r1, r3
 80116c6:	4628      	mov	r0, r5
 80116c8:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 80116ca:	687b      	ldr	r3, [r7, #4]
 80116cc:	681b      	ldr	r3, [r3, #0]
 80116ce:	3380      	adds	r3, #128	; 0x80
 80116d0:	681b      	ldr	r3, [r3, #0]
 80116d2:	6878      	ldr	r0, [r7, #4]
 80116d4:	4798      	blx	r3
    enableInterrupts();
 80116d6:	687b      	ldr	r3, [r7, #4]
 80116d8:	681b      	ldr	r3, [r3, #0]
 80116da:	3378      	adds	r3, #120	; 0x78
 80116dc:	681b      	ldr	r3, [r3, #0]
 80116de:	6878      	ldr	r0, [r7, #4]
 80116e0:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 80116e2:	687b      	ldr	r3, [r7, #4]
 80116e4:	4906      	ldr	r1, [pc, #24]	; (8011700 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 80116e6:	4618      	mov	r0, r3
 80116e8:	f7ff fee4 	bl	80114b4 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
 80116ec:	687b      	ldr	r3, [r7, #4]
 80116ee:	2102      	movs	r1, #2
 80116f0:	4618      	mov	r0, r3
 80116f2:	f7ff feed 	bl	80114d0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
}
 80116f6:	bf00      	nop
 80116f8:	3708      	adds	r7, #8
 80116fa:	46bd      	mov	sp, r7
 80116fc:	bdb0      	pop	{r4, r5, r7, pc}
 80116fe:	bf00      	nop
 8011700:	2000cb0c 	.word	0x2000cb0c

08011704 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 8011704:	b480      	push	{r7}
 8011706:	b083      	sub	sp, #12
 8011708:	af00      	add	r7, sp, #0
 801170a:	6078      	str	r0, [r7, #4]
}
 801170c:	bf00      	nop
 801170e:	370c      	adds	r7, #12
 8011710:	46bd      	mov	sp, r7
 8011712:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011716:	4770      	bx	lr

08011718 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 8011718:	b480      	push	{r7}
 801171a:	b083      	sub	sp, #12
 801171c:	af00      	add	r7, sp, #0
 801171e:	6078      	str	r0, [r7, #4]
}
 8011720:	bf00      	nop
 8011722:	370c      	adds	r7, #12
 8011724:	46bd      	mov	sp, r7
 8011726:	f85d 7b04 	ldr.w	r7, [sp], #4
 801172a:	4770      	bx	lr

0801172c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 801172c:	b480      	push	{r7}
 801172e:	b083      	sub	sp, #12
 8011730:	af00      	add	r7, sp, #0
 8011732:	6078      	str	r0, [r7, #4]
}
 8011734:	bf00      	nop
 8011736:	370c      	adds	r7, #12
 8011738:	46bd      	mov	sp, r7
 801173a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801173e:	4770      	bx	lr

08011740 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 8011740:	b480      	push	{r7}
 8011742:	b083      	sub	sp, #12
 8011744:	af00      	add	r7, sp, #0
 8011746:	6078      	str	r0, [r7, #4]
}
 8011748:	bf00      	nop
 801174a:	370c      	adds	r7, #12
 801174c:	46bd      	mov	sp, r7
 801174e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011752:	4770      	bx	lr

08011754 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 8011754:	b580      	push	{r7, lr}
 8011756:	b082      	sub	sp, #8
 8011758:	af00      	add	r7, sp, #0
 801175a:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 801175c:	687b      	ldr	r3, [r7, #4]
 801175e:	4618      	mov	r0, r3
 8011760:	f001 f888 	bl	8012874 <_ZN8touchgfx3HAL10beginFrameEv>
 8011764:	4603      	mov	r3, r0
}
 8011766:	4618      	mov	r0, r3
 8011768:	3708      	adds	r7, #8
 801176a:	46bd      	mov	sp, r7
 801176c:	bd80      	pop	{r7, pc}

0801176e <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 801176e:	b580      	push	{r7, lr}
 8011770:	b082      	sub	sp, #8
 8011772:	af00      	add	r7, sp, #0
 8011774:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 8011776:	bf00      	nop
 8011778:	f7fe ffd8 	bl	801072c <touchgfxDisplayDriverTransmitActive>
 801177c:	4603      	mov	r3, r0
 801177e:	2b00      	cmp	r3, #0
 8011780:	bf14      	ite	ne
 8011782:	2301      	movne	r3, #1
 8011784:	2300      	moveq	r3, #0
 8011786:	b2db      	uxtb	r3, r3
 8011788:	2b00      	cmp	r3, #0
 801178a:	d1f5      	bne.n	8011778 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 801178c:	687b      	ldr	r3, [r7, #4]
 801178e:	4618      	mov	r0, r3
 8011790:	f001 f87c 	bl	801288c <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 8011794:	f7ff f842 	bl	801081c <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 8011798:	bf00      	nop
 801179a:	3708      	adds	r7, #8
 801179c:	46bd      	mov	sp, r7
 801179e:	bd80      	pop	{r7, pc}

080117a0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 80117a0:	b480      	push	{r7}
 80117a2:	b083      	sub	sp, #12
 80117a4:	af00      	add	r7, sp, #0
 80117a6:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 80117a8:	2300      	movs	r3, #0
}
 80117aa:	4618      	mov	r0, r3
 80117ac:	370c      	adds	r7, #12
 80117ae:	46bd      	mov	sp, r7
 80117b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80117b4:	4770      	bx	lr

080117b6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 80117b6:	b480      	push	{r7}
 80117b8:	b083      	sub	sp, #12
 80117ba:	af00      	add	r7, sp, #0
 80117bc:	6078      	str	r0, [r7, #4]
 80117be:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 80117c0:	bf00      	nop
 80117c2:	370c      	adds	r7, #12
 80117c4:	46bd      	mov	sp, r7
 80117c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80117ca:	4770      	bx	lr

080117cc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 80117cc:	b580      	push	{r7, lr}
 80117ce:	b088      	sub	sp, #32
 80117d0:	af02      	add	r7, sp, #8
 80117d2:	6078      	str	r0, [r7, #4]
 80117d4:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 80117d6:	687b      	ldr	r3, [r7, #4]
 80117d8:	6839      	ldr	r1, [r7, #0]
 80117da:	4618      	mov	r0, r3
 80117dc:	f001 f814 	bl	8012808 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 80117e0:	687b      	ldr	r3, [r7, #4]
 80117e2:	699a      	ldr	r2, [r3, #24]
 80117e4:	687b      	ldr	r3, [r7, #4]
 80117e6:	699b      	ldr	r3, [r3, #24]
 80117e8:	681b      	ldr	r3, [r3, #0]
 80117ea:	3304      	adds	r3, #4
 80117ec:	681b      	ldr	r3, [r3, #0]
 80117ee:	4610      	mov	r0, r2
 80117f0:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 80117f2:	f7fe ff9b 	bl	801072c <touchgfxDisplayDriverTransmitActive>
 80117f6:	4603      	mov	r3, r0
 80117f8:	2b00      	cmp	r3, #0
 80117fa:	bf0c      	ite	eq
 80117fc:	2301      	moveq	r3, #1
 80117fe:	2300      	movne	r3, #0
 8011800:	b2db      	uxtb	r3, r3
 8011802:	2b00      	cmp	r3, #0
 8011804:	d021      	beq.n	801184a <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 8011806:	f107 030c 	add.w	r3, r7, #12
 801180a:	4618      	mov	r0, r3
 801180c:	f7fa fdd9 	bl	800c3c2 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 8011810:	687b      	ldr	r3, [r7, #4]
 8011812:	699a      	ldr	r2, [r3, #24]
 8011814:	687b      	ldr	r3, [r7, #4]
 8011816:	699b      	ldr	r3, [r3, #24]
 8011818:	681b      	ldr	r3, [r3, #0]
 801181a:	330c      	adds	r3, #12
 801181c:	681b      	ldr	r3, [r3, #0]
 801181e:	f107 010c 	add.w	r1, r7, #12
 8011822:	4610      	mov	r0, r2
 8011824:	4798      	blx	r3
 8011826:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 8011828:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 801182c:	b299      	uxth	r1, r3
 801182e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8011832:	b29a      	uxth	r2, r3
 8011834:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 8011838:	b298      	uxth	r0, r3
 801183a:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 801183e:	b29b      	uxth	r3, r3
 8011840:	9300      	str	r3, [sp, #0]
 8011842:	4603      	mov	r3, r0
 8011844:	6978      	ldr	r0, [r7, #20]
 8011846:	f7fe ff7d 	bl	8010744 <touchgfxDisplayDriverTransmitBlock>
    }
}
 801184a:	bf00      	nop
 801184c:	3718      	adds	r7, #24
 801184e:	46bd      	mov	sp, r7
 8011850:	bd80      	pop	{r7, pc}

08011852 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 8011852:	b580      	push	{r7, lr}
 8011854:	b084      	sub	sp, #16
 8011856:	af00      	add	r7, sp, #0
 8011858:	60f8      	str	r0, [r7, #12]
 801185a:	60b9      	str	r1, [r7, #8]
 801185c:	607a      	str	r2, [r7, #4]
 801185e:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 8011860:	68f8      	ldr	r0, [r7, #12]
 8011862:	683b      	ldr	r3, [r7, #0]
 8011864:	687a      	ldr	r2, [r7, #4]
 8011866:	68b9      	ldr	r1, [r7, #8]
 8011868:	f001 f93f 	bl	8012aea <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 801186c:	4603      	mov	r3, r0
}
 801186e:	4618      	mov	r0, r3
 8011870:	3710      	adds	r7, #16
 8011872:	46bd      	mov	sp, r7
 8011874:	bd80      	pop	{r7, pc}

08011876 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
void FrameBufferAllocatorWaitOnTransfer()
{
 8011876:	b480      	push	{r7}
 8011878:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
   */
}
 801187a:	bf00      	nop
 801187c:	46bd      	mov	sp, r7
 801187e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011882:	4770      	bx	lr

08011884 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
void FrameBufferAllocatorSignalBlockDrawn()
{
 8011884:	b480      	push	{r7}
 8011886:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
   */
}
 8011888:	bf00      	nop
 801188a:	46bd      	mov	sp, r7
 801188c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011890:	4770      	bx	lr

08011892 <touchgfxSignalVSync>:
}
}

extern "C"
void touchgfxSignalVSync(void)
{
 8011892:	b580      	push	{r7, lr}
 8011894:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 8011896:	f7fa f8e1 	bl	800ba5c <_ZN8touchgfx3HAL11getInstanceEv>
 801189a:	4603      	mov	r3, r0
 801189c:	4618      	mov	r0, r3
 801189e:	f7ff fdf7 	bl	8011490 <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 80118a2:	f7fe ffaf 	bl	8010804 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 80118a6:	bf00      	nop
 80118a8:	bd80      	pop	{r7, pc}
	...

080118ac <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 80118ac:	b480      	push	{r7}
 80118ae:	b083      	sub	sp, #12
 80118b0:	af00      	add	r7, sp, #0
 80118b2:	6078      	str	r0, [r7, #4]
 80118b4:	4a04      	ldr	r2, [pc, #16]	; (80118c8 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 80118b6:	687b      	ldr	r3, [r7, #4]
 80118b8:	601a      	str	r2, [r3, #0]
 80118ba:	687b      	ldr	r3, [r7, #4]
 80118bc:	4618      	mov	r0, r3
 80118be:	370c      	adds	r7, #12
 80118c0:	46bd      	mov	sp, r7
 80118c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80118c6:	4770      	bx	lr
 80118c8:	0802c3e0 	.word	0x0802c3e0

080118cc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 80118cc:	b5b0      	push	{r4, r5, r7, lr}
 80118ce:	b084      	sub	sp, #16
 80118d0:	af00      	add	r7, sp, #0
 80118d2:	6078      	str	r0, [r7, #4]
    {
 80118d4:	687b      	ldr	r3, [r7, #4]
 80118d6:	4618      	mov	r0, r3
 80118d8:	f7ff ffe8 	bl	80118ac <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 80118dc:	4a1a      	ldr	r2, [pc, #104]	; (8011948 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x7c>)
 80118de:	687b      	ldr	r3, [r7, #4]
 80118e0:	601a      	str	r2, [r3, #0]
 80118e2:	687b      	ldr	r3, [r7, #4]
 80118e4:	f503 53b4 	add.w	r3, r3, #5760	; 0x1680
 80118e8:	3308      	adds	r3, #8
 80118ea:	2402      	movs	r4, #2
 80118ec:	461d      	mov	r5, r3
 80118ee:	e004      	b.n	80118fa <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x2e>
 80118f0:	4628      	mov	r0, r5
 80118f2:	f7fa fd66 	bl	800c3c2 <_ZN8touchgfx4RectC1Ev>
 80118f6:	3508      	adds	r5, #8
 80118f8:	3c01      	subs	r4, #1
 80118fa:	2c00      	cmp	r4, #0
 80118fc:	daf8      	bge.n	80118f0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 80118fe:	687b      	ldr	r3, [r7, #4]
 8011900:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011904:	461a      	mov	r2, r3
 8011906:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801190a:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        drawingBlock = -1;
 801190e:	687b      	ldr	r3, [r7, #4]
 8011910:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011914:	461a      	mov	r2, r3
 8011916:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801191a:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        for (uint32_t i = 0; i < blocks; i++)
 801191e:	2300      	movs	r3, #0
 8011920:	60fb      	str	r3, [r7, #12]
 8011922:	e008      	b.n	8011936 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 8011924:	687a      	ldr	r2, [r7, #4]
 8011926:	68fb      	ldr	r3, [r7, #12]
 8011928:	4413      	add	r3, r2
 801192a:	3304      	adds	r3, #4
 801192c:	2200      	movs	r2, #0
 801192e:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 8011930:	68fb      	ldr	r3, [r7, #12]
 8011932:	3301      	adds	r3, #1
 8011934:	60fb      	str	r3, [r7, #12]
 8011936:	68fb      	ldr	r3, [r7, #12]
 8011938:	2b02      	cmp	r3, #2
 801193a:	d9f3      	bls.n	8011924 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x58>
        }
    }
 801193c:	687b      	ldr	r3, [r7, #4]
 801193e:	4618      	mov	r0, r3
 8011940:	3710      	adds	r7, #16
 8011942:	46bd      	mov	sp, r7
 8011944:	bdb0      	pop	{r4, r5, r7, pc}
 8011946:	bf00      	nop
 8011948:	0802c2dc 	.word	0x0802c2dc

0801194c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 801194c:	b580      	push	{r7, lr}
 801194e:	b082      	sub	sp, #8
 8011950:	af00      	add	r7, sp, #0
 8011952:	6078      	str	r0, [r7, #4]
 8011954:	4a05      	ldr	r2, [pc, #20]	; (801196c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev+0x20>)
 8011956:	687b      	ldr	r3, [r7, #4]
 8011958:	601a      	str	r2, [r3, #0]
 801195a:	687b      	ldr	r3, [r7, #4]
 801195c:	4618      	mov	r0, r3
 801195e:	f7ff fd77 	bl	8011450 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 8011962:	687b      	ldr	r3, [r7, #4]
 8011964:	4618      	mov	r0, r3
 8011966:	3708      	adds	r7, #8
 8011968:	46bd      	mov	sp, r7
 801196a:	bd80      	pop	{r7, pc}
 801196c:	0802c2dc 	.word	0x0802c2dc

08011970 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED0Ev>:
 8011970:	b580      	push	{r7, lr}
 8011972:	b082      	sub	sp, #8
 8011974:	af00      	add	r7, sp, #0
 8011976:	6078      	str	r0, [r7, #4]
 8011978:	6878      	ldr	r0, [r7, #4]
 801197a:	f7ff ffe7 	bl	801194c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>
 801197e:	f241 61a8 	movw	r1, #5800	; 0x16a8
 8011982:	6878      	ldr	r0, [r7, #4]
 8011984:	f016 fea5 	bl	80286d2 <_ZdlPvj>
 8011988:	687b      	ldr	r3, [r7, #4]
 801198a:	4618      	mov	r0, r3
 801198c:	3708      	adds	r7, #8
 801198e:	46bd      	mov	sp, r7
 8011990:	bd80      	pop	{r7, pc}
	...

08011994 <_Z41__static_initialization_and_destruction_0ii>:
 8011994:	b580      	push	{r7, lr}
 8011996:	b082      	sub	sp, #8
 8011998:	af00      	add	r7, sp, #0
 801199a:	6078      	str	r0, [r7, #4]
 801199c:	6039      	str	r1, [r7, #0]
 801199e:	687b      	ldr	r3, [r7, #4]
 80119a0:	2b01      	cmp	r3, #1
 80119a2:	d107      	bne.n	80119b4 <_Z41__static_initialization_and_destruction_0ii+0x20>
 80119a4:	683b      	ldr	r3, [r7, #0]
 80119a6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80119aa:	4293      	cmp	r3, r2
 80119ac:	d102      	bne.n	80119b4 <_Z41__static_initialization_and_destruction_0ii+0x20>
                   > blockAllocator;
 80119ae:	4809      	ldr	r0, [pc, #36]	; (80119d4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80119b0:	f7ff ff8c 	bl	80118cc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev>
 80119b4:	687b      	ldr	r3, [r7, #4]
 80119b6:	2b00      	cmp	r3, #0
 80119b8:	d107      	bne.n	80119ca <_Z41__static_initialization_and_destruction_0ii+0x36>
 80119ba:	683b      	ldr	r3, [r7, #0]
 80119bc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80119c0:	4293      	cmp	r3, r2
 80119c2:	d102      	bne.n	80119ca <_Z41__static_initialization_and_destruction_0ii+0x36>
 80119c4:	4803      	ldr	r0, [pc, #12]	; (80119d4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80119c6:	f7ff ffc1 	bl	801194c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>
}
 80119ca:	bf00      	nop
 80119cc:	3708      	adds	r7, #8
 80119ce:	46bd      	mov	sp, r7
 80119d0:	bd80      	pop	{r7, pc}
 80119d2:	bf00      	nop
 80119d4:	2000cb0c 	.word	0x2000cb0c

080119d8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 80119d8:	b580      	push	{r7, lr}
 80119da:	b086      	sub	sp, #24
 80119dc:	af00      	add	r7, sp, #0
 80119de:	60f8      	str	r0, [r7, #12]
 80119e0:	4608      	mov	r0, r1
 80119e2:	4611      	mov	r1, r2
 80119e4:	461a      	mov	r2, r3
 80119e6:	4603      	mov	r3, r0
 80119e8:	817b      	strh	r3, [r7, #10]
 80119ea:	460b      	mov	r3, r1
 80119ec:	813b      	strh	r3, [r7, #8]
 80119ee:	4613      	mov	r3, r2
 80119f0:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 80119f2:	68fb      	ldr	r3, [r7, #12]
 80119f4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80119f8:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 80119fc:	3301      	adds	r3, #1
 80119fe:	68fa      	ldr	r2, [r7, #12]
 8011a00:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8011a04:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        if (drawingBlock == blocks)
 8011a08:	68fb      	ldr	r3, [r7, #12]
 8011a0a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011a0e:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8011a12:	2b03      	cmp	r3, #3
 8011a14:	d109      	bne.n	8011a2a <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 8011a16:	68fb      	ldr	r3, [r7, #12]
 8011a18:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011a1c:	461a      	mov	r2, r3
 8011a1e:	2300      	movs	r3, #0
 8011a20:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        }
        while (state[drawingBlock] != EMPTY)
 8011a24:	e001      	b.n	8011a2a <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 8011a26:	f7ff ff26 	bl	8011876 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 8011a2a:	68fb      	ldr	r3, [r7, #12]
 8011a2c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011a30:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8011a34:	68fa      	ldr	r2, [r7, #12]
 8011a36:	4413      	add	r3, r2
 8011a38:	791b      	ldrb	r3, [r3, #4]
 8011a3a:	b2db      	uxtb	r3, r3
 8011a3c:	2b00      	cmp	r3, #0
 8011a3e:	bf14      	ite	ne
 8011a40:	2301      	movne	r3, #1
 8011a42:	2300      	moveq	r3, #0
 8011a44:	b2db      	uxtb	r3, r3
 8011a46:	2b00      	cmp	r3, #0
 8011a48:	d1ed      	bne.n	8011a26 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 8011a4a:	68fb      	ldr	r3, [r7, #12]
 8011a4c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011a50:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8011a54:	68fa      	ldr	r2, [r7, #12]
 8011a56:	4413      	add	r3, r2
 8011a58:	791b      	ldrb	r3, [r3, #4]
 8011a5a:	b2db      	uxtb	r3, r3
 8011a5c:	2b00      	cmp	r3, #0
 8011a5e:	d005      	beq.n	8011a6c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 8011a60:	4b38      	ldr	r3, [pc, #224]	; (8011b44 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 8011a62:	4a39      	ldr	r2, [pc, #228]	; (8011b48 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x170>)
 8011a64:	21aa      	movs	r1, #170	; 0xaa
 8011a66:	4839      	ldr	r0, [pc, #228]	; (8011b4c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x174>)
 8011a68:	f016 fe62 	bl	8028730 <__assert_func>
        state[drawingBlock] = ALLOCATED;
 8011a6c:	68fb      	ldr	r3, [r7, #12]
 8011a6e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011a72:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8011a76:	68fa      	ldr	r2, [r7, #12]
 8011a78:	4413      	add	r3, r2
 8011a7a:	2201      	movs	r2, #1
 8011a7c:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 8011a7e:	88fb      	ldrh	r3, [r7, #6]
 8011a80:	005b      	lsls	r3, r3, #1
 8011a82:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 8011a84:	697b      	ldr	r3, [r7, #20]
 8011a86:	f44f 62f0 	mov.w	r2, #1920	; 0x780
 8011a8a:	fbb2 f3f3 	udiv	r3, r2, r3
 8011a8e:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 8011a90:	68fb      	ldr	r3, [r7, #12]
 8011a92:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011a96:	f8d3 26a4 	ldr.w	r2, [r3, #1700]	; 0x6a4
 8011a9a:	4613      	mov	r3, r2
 8011a9c:	011b      	lsls	r3, r3, #4
 8011a9e:	1a9b      	subs	r3, r3, r2
 8011aa0:	01db      	lsls	r3, r3, #7
 8011aa2:	3308      	adds	r3, #8
 8011aa4:	68fa      	ldr	r2, [r7, #12]
 8011aa6:	441a      	add	r2, r3
 8011aa8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011aaa:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 8011aac:	68fb      	ldr	r3, [r7, #12]
 8011aae:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011ab2:	f8d3 26a4 	ldr.w	r2, [r3, #1700]	; 0x6a4
 8011ab6:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8011aba:	68fb      	ldr	r3, [r7, #12]
 8011abc:	f202 22d1 	addw	r2, r2, #721	; 0x2d1
 8011ac0:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 8011ac4:	68fb      	ldr	r3, [r7, #12]
 8011ac6:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011aca:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8011ace:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 8011ad2:	68fa      	ldr	r2, [r7, #12]
 8011ad4:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 8011ad8:	00db      	lsls	r3, r3, #3
 8011ada:	4413      	add	r3, r2
 8011adc:	460a      	mov	r2, r1
 8011ade:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 8011ae0:	68fb      	ldr	r3, [r7, #12]
 8011ae2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011ae6:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8011aea:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 8011aee:	68fa      	ldr	r2, [r7, #12]
 8011af0:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 8011af4:	00db      	lsls	r3, r3, #3
 8011af6:	4413      	add	r3, r2
 8011af8:	460a      	mov	r2, r1
 8011afa:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 8011afc:	8c3a      	ldrh	r2, [r7, #32]
 8011afe:	693b      	ldr	r3, [r7, #16]
 8011b00:	429a      	cmp	r2, r3
 8011b02:	bfa8      	it	ge
 8011b04:	461a      	movge	r2, r3
 8011b06:	68fb      	ldr	r3, [r7, #12]
 8011b08:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011b0c:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8011b10:	b211      	sxth	r1, r2
 8011b12:	68fa      	ldr	r2, [r7, #12]
 8011b14:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 8011b18:	00db      	lsls	r3, r3, #3
 8011b1a:	4413      	add	r3, r2
 8011b1c:	460a      	mov	r2, r1
 8011b1e:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 8011b20:	68fb      	ldr	r3, [r7, #12]
 8011b22:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011b26:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8011b2a:	68fa      	ldr	r2, [r7, #12]
 8011b2c:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 8011b30:	00db      	lsls	r3, r3, #3
 8011b32:	4413      	add	r3, r2
 8011b34:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8011b38:	b29b      	uxth	r3, r3
    }
 8011b3a:	4618      	mov	r0, r3
 8011b3c:	3718      	adds	r7, #24
 8011b3e:	46bd      	mov	sp, r7
 8011b40:	bd80      	pop	{r7, pc}
 8011b42:	bf00      	nop
 8011b44:	0802ac08 	.word	0x0802ac08
 8011b48:	0802ac28 	.word	0x0802ac28
 8011b4c:	0802ad5c 	.word	0x0802ad5c

08011b50 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 8011b50:	b580      	push	{r7, lr}
 8011b52:	b082      	sub	sp, #8
 8011b54:	af00      	add	r7, sp, #0
 8011b56:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 8011b58:	687b      	ldr	r3, [r7, #4]
 8011b5a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011b5e:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8011b62:	687a      	ldr	r2, [r7, #4]
 8011b64:	4413      	add	r3, r2
 8011b66:	791b      	ldrb	r3, [r3, #4]
 8011b68:	b2db      	uxtb	r3, r3
 8011b6a:	2b01      	cmp	r3, #1
 8011b6c:	d005      	beq.n	8011b7a <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 8011b6e:	4b0a      	ldr	r3, [pc, #40]	; (8011b98 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 8011b70:	4a0a      	ldr	r2, [pc, #40]	; (8011b9c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 8011b72:	21b9      	movs	r1, #185	; 0xb9
 8011b74:	480a      	ldr	r0, [pc, #40]	; (8011ba0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 8011b76:	f016 fddb 	bl	8028730 <__assert_func>
        state[drawingBlock] = DRAWN;
 8011b7a:	687b      	ldr	r3, [r7, #4]
 8011b7c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011b80:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8011b84:	687a      	ldr	r2, [r7, #4]
 8011b86:	4413      	add	r3, r2
 8011b88:	2202      	movs	r2, #2
 8011b8a:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 8011b8c:	f7ff fe7a 	bl	8011884 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 8011b90:	bf00      	nop
 8011b92:	3708      	adds	r7, #8
 8011b94:	46bd      	mov	sp, r7
 8011b96:	bd80      	pop	{r7, pc}
 8011b98:	0802adb0 	.word	0x0802adb0
 8011b9c:	0802add4 	.word	0x0802add4
 8011ba0:	0802ad5c 	.word	0x0802ad5c

08011ba4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 8011ba4:	b480      	push	{r7}
 8011ba6:	b085      	sub	sp, #20
 8011ba8:	af00      	add	r7, sp, #0
 8011baa:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 8011bac:	2300      	movs	r3, #0
 8011bae:	60fb      	str	r3, [r7, #12]
 8011bb0:	e011      	b.n	8011bd6 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 8011bb2:	687a      	ldr	r2, [r7, #4]
 8011bb4:	68fb      	ldr	r3, [r7, #12]
 8011bb6:	4413      	add	r3, r2
 8011bb8:	3304      	adds	r3, #4
 8011bba:	781b      	ldrb	r3, [r3, #0]
 8011bbc:	b2db      	uxtb	r3, r3
 8011bbe:	2b02      	cmp	r3, #2
 8011bc0:	bf0c      	ite	eq
 8011bc2:	2301      	moveq	r3, #1
 8011bc4:	2300      	movne	r3, #0
 8011bc6:	b2db      	uxtb	r3, r3
 8011bc8:	2b00      	cmp	r3, #0
 8011bca:	d001      	beq.n	8011bd0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 8011bcc:	2301      	movs	r3, #1
 8011bce:	e006      	b.n	8011bde <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 8011bd0:	68fb      	ldr	r3, [r7, #12]
 8011bd2:	3301      	adds	r3, #1
 8011bd4:	60fb      	str	r3, [r7, #12]
 8011bd6:	68fb      	ldr	r3, [r7, #12]
 8011bd8:	2b02      	cmp	r3, #2
 8011bda:	d9ea      	bls.n	8011bb2 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 8011bdc:	2300      	movs	r3, #0
    }
 8011bde:	4618      	mov	r0, r3
 8011be0:	3714      	adds	r7, #20
 8011be2:	46bd      	mov	sp, r7
 8011be4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011be8:	4770      	bx	lr
	...

08011bec <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 8011bec:	b580      	push	{r7, lr}
 8011bee:	b082      	sub	sp, #8
 8011bf0:	af00      	add	r7, sp, #0
 8011bf2:	6078      	str	r0, [r7, #4]
 8011bf4:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 8011bf6:	687b      	ldr	r3, [r7, #4]
 8011bf8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011bfc:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8011c00:	3301      	adds	r3, #1
 8011c02:	687a      	ldr	r2, [r7, #4]
 8011c04:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8011c08:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        if (sendingBlock == blocks)
 8011c0c:	687b      	ldr	r3, [r7, #4]
 8011c0e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011c12:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8011c16:	2b03      	cmp	r3, #3
 8011c18:	d106      	bne.n	8011c28 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 8011c1a:	687b      	ldr	r3, [r7, #4]
 8011c1c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011c20:	461a      	mov	r2, r3
 8011c22:	2300      	movs	r3, #0
 8011c24:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        }
        assert(state[sendingBlock] == DRAWN);
 8011c28:	687b      	ldr	r3, [r7, #4]
 8011c2a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011c2e:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8011c32:	687a      	ldr	r2, [r7, #4]
 8011c34:	4413      	add	r3, r2
 8011c36:	791b      	ldrb	r3, [r3, #4]
 8011c38:	b2db      	uxtb	r3, r3
 8011c3a:	2b02      	cmp	r3, #2
 8011c3c:	d005      	beq.n	8011c4a <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 8011c3e:	4b16      	ldr	r3, [pc, #88]	; (8011c98 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 8011c40:	4a16      	ldr	r2, [pc, #88]	; (8011c9c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 8011c42:	21dd      	movs	r1, #221	; 0xdd
 8011c44:	4816      	ldr	r0, [pc, #88]	; (8011ca0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb4>)
 8011c46:	f016 fd73 	bl	8028730 <__assert_func>
        rect = blockRect[sendingBlock];
 8011c4a:	687b      	ldr	r3, [r7, #4]
 8011c4c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011c50:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8011c54:	683a      	ldr	r2, [r7, #0]
 8011c56:	6879      	ldr	r1, [r7, #4]
 8011c58:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 8011c5c:	00db      	lsls	r3, r3, #3
 8011c5e:	440b      	add	r3, r1
 8011c60:	cb03      	ldmia	r3!, {r0, r1}
 8011c62:	6010      	str	r0, [r2, #0]
 8011c64:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 8011c66:	687b      	ldr	r3, [r7, #4]
 8011c68:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011c6c:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8011c70:	687a      	ldr	r2, [r7, #4]
 8011c72:	4413      	add	r3, r2
 8011c74:	2203      	movs	r2, #3
 8011c76:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 8011c78:	687b      	ldr	r3, [r7, #4]
 8011c7a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011c7e:	f8d3 26a0 	ldr.w	r2, [r3, #1696]	; 0x6a0
 8011c82:	4613      	mov	r3, r2
 8011c84:	011b      	lsls	r3, r3, #4
 8011c86:	1a9b      	subs	r3, r3, r2
 8011c88:	01db      	lsls	r3, r3, #7
 8011c8a:	3308      	adds	r3, #8
 8011c8c:	687a      	ldr	r2, [r7, #4]
 8011c8e:	4413      	add	r3, r2
    }
 8011c90:	4618      	mov	r0, r3
 8011c92:	3708      	adds	r7, #8
 8011c94:	46bd      	mov	sp, r7
 8011c96:	bd80      	pop	{r7, pc}
 8011c98:	0802aea8 	.word	0x0802aea8
 8011c9c:	0802aec8 	.word	0x0802aec8
 8011ca0:	0802ad5c 	.word	0x0802ad5c

08011ca4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 8011ca4:	b580      	push	{r7, lr}
 8011ca6:	b084      	sub	sp, #16
 8011ca8:	af00      	add	r7, sp, #0
 8011caa:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 8011cac:	687b      	ldr	r3, [r7, #4]
 8011cae:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011cb2:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8011cb6:	3301      	adds	r3, #1
 8011cb8:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 8011cba:	68fb      	ldr	r3, [r7, #12]
 8011cbc:	2b03      	cmp	r3, #3
 8011cbe:	d101      	bne.n	8011cc4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 8011cc0:	2300      	movs	r3, #0
 8011cc2:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 8011cc4:	687a      	ldr	r2, [r7, #4]
 8011cc6:	68fb      	ldr	r3, [r7, #12]
 8011cc8:	4413      	add	r3, r2
 8011cca:	3304      	adds	r3, #4
 8011ccc:	781b      	ldrb	r3, [r3, #0]
 8011cce:	b2db      	uxtb	r3, r3
 8011cd0:	2b02      	cmp	r3, #2
 8011cd2:	d005      	beq.n	8011ce0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 8011cd4:	4b07      	ldr	r3, [pc, #28]	; (8011cf4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 8011cd6:	4a08      	ldr	r2, [pc, #32]	; (8011cf8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 8011cd8:	21ea      	movs	r1, #234	; 0xea
 8011cda:	4808      	ldr	r0, [pc, #32]	; (8011cfc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 8011cdc:	f016 fd28 	bl	8028730 <__assert_func>
        return blockRect[nextSendingBlock];
 8011ce0:	68fb      	ldr	r3, [r7, #12]
 8011ce2:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 8011ce6:	00db      	lsls	r3, r3, #3
 8011ce8:	687a      	ldr	r2, [r7, #4]
 8011cea:	4413      	add	r3, r2
    }
 8011cec:	4618      	mov	r0, r3
 8011cee:	3710      	adds	r7, #16
 8011cf0:	46bd      	mov	sp, r7
 8011cf2:	bd80      	pop	{r7, pc}
 8011cf4:	0802afc8 	.word	0x0802afc8
 8011cf8:	0802afec 	.word	0x0802afec
 8011cfc:	0802ad5c 	.word	0x0802ad5c

08011d00 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 8011d00:	b480      	push	{r7}
 8011d02:	b085      	sub	sp, #20
 8011d04:	af00      	add	r7, sp, #0
 8011d06:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 8011d08:	687b      	ldr	r3, [r7, #4]
 8011d0a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011d0e:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8011d12:	3301      	adds	r3, #1
 8011d14:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 8011d16:	68fb      	ldr	r3, [r7, #12]
 8011d18:	2b03      	cmp	r3, #3
 8011d1a:	d101      	bne.n	8011d20 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 8011d1c:	2300      	movs	r3, #0
 8011d1e:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 8011d20:	687a      	ldr	r2, [r7, #4]
 8011d22:	68fb      	ldr	r3, [r7, #12]
 8011d24:	4413      	add	r3, r2
 8011d26:	3304      	adds	r3, #4
 8011d28:	781b      	ldrb	r3, [r3, #0]
 8011d2a:	b2db      	uxtb	r3, r3
 8011d2c:	2b00      	cmp	r3, #0
 8011d2e:	bf0c      	ite	eq
 8011d30:	2301      	moveq	r3, #1
 8011d32:	2300      	movne	r3, #0
 8011d34:	b2db      	uxtb	r3, r3
    }
 8011d36:	4618      	mov	r0, r3
 8011d38:	3714      	adds	r7, #20
 8011d3a:	46bd      	mov	sp, r7
 8011d3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011d40:	4770      	bx	lr
	...

08011d44 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 8011d44:	b580      	push	{r7, lr}
 8011d46:	b082      	sub	sp, #8
 8011d48:	af00      	add	r7, sp, #0
 8011d4a:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 8011d4c:	687b      	ldr	r3, [r7, #4]
 8011d4e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011d52:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8011d56:	687a      	ldr	r2, [r7, #4]
 8011d58:	4413      	add	r3, r2
 8011d5a:	791b      	ldrb	r3, [r3, #4]
 8011d5c:	b2db      	uxtb	r3, r3
 8011d5e:	2b03      	cmp	r3, #3
 8011d60:	d005      	beq.n	8011d6e <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 8011d62:	4b09      	ldr	r3, [pc, #36]	; (8011d88 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 8011d64:	4a09      	ldr	r2, [pc, #36]	; (8011d8c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 8011d66:	21ff      	movs	r1, #255	; 0xff
 8011d68:	4809      	ldr	r0, [pc, #36]	; (8011d90 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 8011d6a:	f016 fce1 	bl	8028730 <__assert_func>
        state[sendingBlock] = EMPTY;
 8011d6e:	687b      	ldr	r3, [r7, #4]
 8011d70:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011d74:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8011d78:	687a      	ldr	r2, [r7, #4]
 8011d7a:	4413      	add	r3, r2
 8011d7c:	2200      	movs	r2, #0
 8011d7e:	711a      	strb	r2, [r3, #4]
    }
 8011d80:	bf00      	nop
 8011d82:	3708      	adds	r7, #8
 8011d84:	46bd      	mov	sp, r7
 8011d86:	bd80      	pop	{r7, pc}
 8011d88:	0802b0cc 	.word	0x0802b0cc
 8011d8c:	0802b0ec 	.word	0x0802b0ec
 8011d90:	0802ad5c 	.word	0x0802ad5c

08011d94 <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 8011d94:	b580      	push	{r7, lr}
 8011d96:	af00      	add	r7, sp, #0
 8011d98:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011d9c:	2001      	movs	r0, #1
 8011d9e:	f7ff fdf9 	bl	8011994 <_Z41__static_initialization_and_destruction_0ii>
 8011da2:	bd80      	pop	{r7, pc}

08011da4 <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 8011da4:	b580      	push	{r7, lr}
 8011da6:	af00      	add	r7, sp, #0
 8011da8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011dac:	2000      	movs	r0, #0
 8011dae:	f7ff fdf1 	bl	8011994 <_Z41__static_initialization_and_destruction_0ii>
 8011db2:	bd80      	pop	{r7, pc}

08011db4 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8011db4:	8880      	ldrh	r0, [r0, #4]
 8011db6:	4770      	bx	lr

08011db8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8011db8:	b570      	push	{r4, r5, r6, lr}
 8011dba:	6803      	ldr	r3, [r0, #0]
 8011dbc:	4605      	mov	r5, r0
 8011dbe:	460c      	mov	r4, r1
 8011dc0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011dc2:	2100      	movs	r1, #0
 8011dc4:	4798      	blx	r3
 8011dc6:	682b      	ldr	r3, [r5, #0]
 8011dc8:	4606      	mov	r6, r0
 8011dca:	6a1b      	ldr	r3, [r3, #32]
 8011dcc:	4628      	mov	r0, r5
 8011dce:	4798      	blx	r3
 8011dd0:	1ba4      	subs	r4, r4, r6
 8011dd2:	b2a4      	uxth	r4, r4
 8011dd4:	fbb4 f0f0 	udiv	r0, r4, r0
 8011dd8:	bd70      	pop	{r4, r5, r6, pc}

08011dda <_ZN8touchgfx17AbstractPartition5clearEv>:
 8011dda:	2300      	movs	r3, #0
 8011ddc:	8083      	strh	r3, [r0, #4]
 8011dde:	4770      	bx	lr

08011de0 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8011de0:	b510      	push	{r4, lr}
 8011de2:	6803      	ldr	r3, [r0, #0]
 8011de4:	8881      	ldrh	r1, [r0, #4]
 8011de6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011de8:	4604      	mov	r4, r0
 8011dea:	4798      	blx	r3
 8011dec:	88a3      	ldrh	r3, [r4, #4]
 8011dee:	3301      	adds	r3, #1
 8011df0:	80a3      	strh	r3, [r4, #4]
 8011df2:	bd10      	pop	{r4, pc}

08011df4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8011df4:	6803      	ldr	r3, [r0, #0]
 8011df6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011df8:	4718      	bx	r3

08011dfa <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8011dfa:	4770      	bx	lr

08011dfc <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8011dfc:	4a02      	ldr	r2, [pc, #8]	; (8011e08 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8011dfe:	6002      	str	r2, [r0, #0]
 8011e00:	2200      	movs	r2, #0
 8011e02:	8082      	strh	r2, [r0, #4]
 8011e04:	4770      	bx	lr
 8011e06:	bf00      	nop
 8011e08:	0802c40c 	.word	0x0802c40c

08011e0c <_ZN8touchgfx12LineProgress10setPainterERNS_15AbstractPainterE>:
 8011e0c:	f8c0 10dc 	str.w	r1, [r0, #220]	; 0xdc
 8011e10:	4770      	bx	lr

08011e12 <_ZNK8touchgfx12LineProgress8getStartERiS1_>:
 8011e12:	b530      	push	{r4, r5, lr}
 8011e14:	f8d0 4124 	ldr.w	r4, [r0, #292]	; 0x124
 8011e18:	2520      	movs	r5, #32
 8011e1a:	fb94 f4f5 	sdiv	r4, r4, r5
 8011e1e:	600c      	str	r4, [r1, #0]
 8011e20:	f8d0 3128 	ldr.w	r3, [r0, #296]	; 0x128
 8011e24:	fb93 f3f5 	sdiv	r3, r3, r5
 8011e28:	6013      	str	r3, [r2, #0]
 8011e2a:	bd30      	pop	{r4, r5, pc}

08011e2c <_ZN8touchgfx12LineProgress6setEndEii>:
 8011e2c:	0149      	lsls	r1, r1, #5
 8011e2e:	0152      	lsls	r2, r2, #5
 8011e30:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 8011e34:	f8c0 2130 	str.w	r2, [r0, #304]	; 0x130
 8011e38:	4770      	bx	lr

08011e3a <_ZNK8touchgfx12LineProgress6getEndERiS1_>:
 8011e3a:	b530      	push	{r4, r5, lr}
 8011e3c:	f8d0 412c 	ldr.w	r4, [r0, #300]	; 0x12c
 8011e40:	2520      	movs	r5, #32
 8011e42:	fb94 f4f5 	sdiv	r4, r4, r5
 8011e46:	600c      	str	r4, [r1, #0]
 8011e48:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 8011e4c:	fb93 f3f5 	sdiv	r3, r3, r5
 8011e50:	6013      	str	r3, [r2, #0]
 8011e52:	bd30      	pop	{r4, r5, pc}

08011e54 <_ZNK8touchgfx12LineProgress12getLineWidthEv>:
 8011e54:	f8d0 00f0 	ldr.w	r0, [r0, #240]	; 0xf0
 8011e58:	2320      	movs	r3, #32
 8011e5a:	fb90 f0f3 	sdiv	r0, r0, r3
 8011e5e:	4770      	bx	lr

08011e60 <_ZN8touchgfx12LineProgress8setStartEii>:
 8011e60:	0149      	lsls	r1, r1, #5
 8011e62:	0152      	lsls	r2, r2, #5
 8011e64:	f8c0 1124 	str.w	r1, [r0, #292]	; 0x124
 8011e68:	f8c0 2128 	str.w	r2, [r0, #296]	; 0x128
 8011e6c:	30b4      	adds	r0, #180	; 0xb4
 8011e6e:	f001 bf7a 	b.w	8013d66 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

08011e72 <_ZN8touchgfx12LineProgress12setLineWidthEi>:
 8011e72:	f8d0 30f0 	ldr.w	r3, [r0, #240]	; 0xf0
 8011e76:	0149      	lsls	r1, r1, #5
 8011e78:	4299      	cmp	r1, r3
 8011e7a:	d004      	beq.n	8011e86 <_ZN8touchgfx12LineProgress12setLineWidthEi+0x14>
 8011e7c:	f8c0 10f0 	str.w	r1, [r0, #240]	; 0xf0
 8011e80:	30b4      	adds	r0, #180	; 0xb4
 8011e82:	f001 be7a 	b.w	8013b7a <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011e86:	4770      	bx	lr

08011e88 <_ZN8touchgfx12LineProgress18setLineEndingStyleENS_4Line17LINE_ENDING_STYLEE>:
 8011e88:	30b4      	adds	r0, #180	; 0xb4
 8011e8a:	f001 bf91 	b.w	8013db0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>

08011e8e <_ZNK8touchgfx12LineProgress18getLineEndingStyleEv>:
 8011e8e:	30b4      	adds	r0, #180	; 0xb4
 8011e90:	f001 be70 	b.w	8013b74 <_ZNK8touchgfx4Line18getLineEndingStyleEv>

08011e94 <_ZN8touchgfx12LineProgress8setAlphaEh>:
 8011e94:	b538      	push	{r3, r4, r5, lr}
 8011e96:	4604      	mov	r4, r0
 8011e98:	460d      	mov	r5, r1
 8011e9a:	f000 f8cd 	bl	8012038 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8011e9e:	f884 50da 	strb.w	r5, [r4, #218]	; 0xda
 8011ea2:	bd38      	pop	{r3, r4, r5, pc}

08011ea4 <_ZN8touchgfx12LineProgress8setValueEi>:
 8011ea4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011ea6:	f8b0 3090 	ldrh.w	r3, [r0, #144]	; 0x90
 8011eaa:	4604      	mov	r4, r0
 8011eac:	b33b      	cbz	r3, 8011efe <_ZN8touchgfx12LineProgress8setValueEi+0x5a>
 8011eae:	f000 f90e 	bl	80120ce <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8011eb2:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 8011eb6:	4620      	mov	r0, r4
 8011eb8:	f000 f92b 	bl	8012112 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8011ebc:	f8d4 1124 	ldr.w	r1, [r4, #292]	; 0x124
 8011ec0:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
 8011ec4:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 8011ec8:	f8d4 5130 	ldr.w	r5, [r4, #304]	; 0x130
 8011ecc:	f8b4 6090 	ldrh.w	r6, [r4, #144]	; 0x90
 8011ed0:	1a5b      	subs	r3, r3, r1
 8011ed2:	1aad      	subs	r5, r5, r2
 8011ed4:	2720      	movs	r7, #32
 8011ed6:	015b      	lsls	r3, r3, #5
 8011ed8:	016d      	lsls	r5, r5, #5
 8011eda:	fb93 f3f6 	sdiv	r3, r3, r6
 8011ede:	fb95 f5f6 	sdiv	r5, r5, r6
 8011ee2:	4343      	muls	r3, r0
 8011ee4:	4368      	muls	r0, r5
 8011ee6:	fb93 f3f7 	sdiv	r3, r3, r7
 8011eea:	fb90 f0f7 	sdiv	r0, r0, r7
 8011eee:	4419      	add	r1, r3
 8011ef0:	4402      	add	r2, r0
 8011ef2:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8011ef6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8011efa:	f001 bf3f 	b.w	8013d7c <_ZN8touchgfx4Line9updateEndENS_7CWRUtil2Q5ES2_>
 8011efe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08011f00 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 8011f00:	b510      	push	{r4, lr}
 8011f02:	6803      	ldr	r3, [r0, #0]
 8011f04:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011f08:	4604      	mov	r4, r0
 8011f0a:	4798      	blx	r3
 8011f0c:	b140      	cbz	r0, 8011f20 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x20>
 8011f0e:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011f12:	b12b      	cbz	r3, 8011f20 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x20>
 8011f14:	6823      	ldr	r3, [r4, #0]
 8011f16:	4620      	mov	r0, r4
 8011f18:	695b      	ldr	r3, [r3, #20]
 8011f1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011f1e:	4718      	bx	r3
 8011f20:	bd10      	pop	{r4, pc}

08011f22 <_ZN8touchgfx12LineProgress28setProgressIndicatorPositionEssss>:
 8011f22:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011f26:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
 8011f2a:	461d      	mov	r5, r3
 8011f2c:	2300      	movs	r3, #0
 8011f2e:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
 8011f32:	4604      	mov	r4, r0
 8011f34:	460f      	mov	r7, r1
 8011f36:	4690      	mov	r8, r2
 8011f38:	4629      	mov	r1, r5
 8011f3a:	4632      	mov	r2, r6
 8011f3c:	30b4      	adds	r0, #180	; 0xb4
 8011f3e:	f7fa fbb6 	bl	800c6ae <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011f42:	9606      	str	r6, [sp, #24]
 8011f44:	462b      	mov	r3, r5
 8011f46:	4642      	mov	r2, r8
 8011f48:	4639      	mov	r1, r7
 8011f4a:	4620      	mov	r0, r4
 8011f4c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011f50:	f000 b939 	b.w	80121c6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>

08011f54 <_ZN8touchgfx12LineProgressC1Ev>:
 8011f54:	b570      	push	{r4, r5, r6, lr}
 8011f56:	4604      	mov	r4, r0
 8011f58:	4625      	mov	r5, r4
 8011f5a:	f000 f961 	bl	8012220 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8011f5e:	4b0f      	ldr	r3, [pc, #60]	; (8011f9c <_ZN8touchgfx12LineProgressC1Ev+0x48>)
 8011f60:	f845 3bb4 	str.w	r3, [r5], #180
 8011f64:	2600      	movs	r6, #0
 8011f66:	4628      	mov	r0, r5
 8011f68:	f001 fde4 	bl	8013b34 <_ZN8touchgfx4LineC1Ev>
 8011f6c:	4629      	mov	r1, r5
 8011f6e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8011f72:	f8c4 6124 	str.w	r6, [r4, #292]	; 0x124
 8011f76:	f8c4 6128 	str.w	r6, [r4, #296]	; 0x128
 8011f7a:	f8c4 612c 	str.w	r6, [r4, #300]	; 0x12c
 8011f7e:	f8c4 6130 	str.w	r6, [r4, #304]	; 0x130
 8011f82:	f000 f9ad 	bl	80122e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011f86:	4628      	mov	r0, r5
 8011f88:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8011f8c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8011f90:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 8011f94:	f7fa fb8b 	bl	800c6ae <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011f98:	4620      	mov	r0, r4
 8011f9a:	bd70      	pop	{r4, r5, r6, pc}
 8011f9c:	0802c440 	.word	0x0802c440

08011fa0 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8011fa0:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 8011fa4:	4770      	bx	lr

08011fa6 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 8011fa6:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8011faa:	4770      	bx	lr

08011fac <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8011fac:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8011fb0:	4770      	bx	lr

08011fb2 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8011fb2:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 8011fb6:	4770      	bx	lr

08011fb8 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 8011fb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011fba:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8011fbe:	461e      	mov	r6, r3
 8011fc0:	6803      	ldr	r3, [r0, #0]
 8011fc2:	460f      	mov	r7, r1
 8011fc4:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8011fc8:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8011fcc:	4604      	mov	r4, r0
 8011fce:	4615      	mov	r5, r2
 8011fd0:	4798      	blx	r3
 8011fd2:	b93e      	cbnz	r6, 8011fe4 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 8011fd4:	1bed      	subs	r5, r5, r7
 8011fd6:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 8011fda:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011fde:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8011fe2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011fe4:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 8011fe8:	e7f7      	b.n	8011fda <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

08011fea <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 8011fea:	b510      	push	{r4, lr}
 8011fec:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8011ff0:	600c      	str	r4, [r1, #0]
 8011ff2:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 8011ff6:	6011      	str	r1, [r2, #0]
 8011ff8:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8011ffc:	801a      	strh	r2, [r3, #0]
 8011ffe:	9b02      	ldr	r3, [sp, #8]
 8012000:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 8012004:	801a      	strh	r2, [r3, #0]
 8012006:	bd10      	pop	{r4, pc}

08012008 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 8012008:	b510      	push	{r4, lr}
 801200a:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 801200e:	600c      	str	r4, [r1, #0]
 8012010:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 8012014:	6011      	str	r1, [r2, #0]
 8012016:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 801201a:	801a      	strh	r2, [r3, #0]
 801201c:	bd10      	pop	{r4, pc}

0801201e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 801201e:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8012022:	600b      	str	r3, [r1, #0]
 8012024:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8012028:	6013      	str	r3, [r2, #0]
 801202a:	4770      	bx	lr

0801202c <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 801202c:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 8012030:	4770      	bx	lr

08012032 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 8012032:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 8012036:	4770      	bx	lr

08012038 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 8012038:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 801203c:	4770      	bx	lr

0801203e <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 801203e:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8012042:	4770      	bx	lr

08012044 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 8012044:	b570      	push	{r4, r5, r6, lr}
 8012046:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 801204a:	428d      	cmp	r5, r1
 801204c:	bfb8      	it	lt
 801204e:	460d      	movlt	r5, r1
 8012050:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 8012054:	428d      	cmp	r5, r1
 8012056:	4604      	mov	r4, r0
 8012058:	bfa8      	it	ge
 801205a:	460d      	movge	r5, r1
 801205c:	4616      	mov	r6, r2
 801205e:	b99a      	cbnz	r2, 8012088 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8012060:	6803      	ldr	r3, [r0, #0]
 8012062:	4629      	mov	r1, r5
 8012064:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012068:	4798      	blx	r3
 801206a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801206e:	b368      	cbz	r0, 80120cc <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8012070:	6803      	ldr	r3, [r0, #0]
 8012072:	68db      	ldr	r3, [r3, #12]
 8012074:	4798      	blx	r3
 8012076:	b348      	cbz	r0, 80120cc <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8012078:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801207c:	6803      	ldr	r3, [r0, #0]
 801207e:	4621      	mov	r1, r4
 8012080:	689b      	ldr	r3, [r3, #8]
 8012082:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012086:	4718      	bx	r3
 8012088:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 801208c:	2b00      	cmp	r3, #0
 801208e:	dd08      	ble.n	80120a2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8012090:	f005 fa0a 	bl	80174a8 <_ZN8touchgfx11Application11getInstanceEv>
 8012094:	4621      	mov	r1, r4
 8012096:	3004      	adds	r0, #4
 8012098:	f005 fa2b 	bl	80174f2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 801209c:	2300      	movs	r3, #0
 801209e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 80120a2:	6823      	ldr	r3, [r4, #0]
 80120a4:	4620      	mov	r0, r4
 80120a6:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80120aa:	4798      	blx	r3
 80120ac:	2300      	movs	r3, #0
 80120ae:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 80120b2:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 80120b6:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 80120ba:	f005 f9f5 	bl	80174a8 <_ZN8touchgfx11Application11getInstanceEv>
 80120be:	4621      	mov	r1, r4
 80120c0:	3004      	adds	r0, #4
 80120c2:	f005 fabf 	bl	8017644 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 80120c6:	2301      	movs	r3, #1
 80120c8:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 80120cc:	bd70      	pop	{r4, r5, r6, pc}

080120ce <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 80120ce:	b510      	push	{r4, lr}
 80120d0:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80120d4:	4299      	cmp	r1, r3
 80120d6:	bfb8      	it	lt
 80120d8:	4619      	movlt	r1, r3
 80120da:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80120de:	4299      	cmp	r1, r3
 80120e0:	bfa8      	it	ge
 80120e2:	4619      	movge	r1, r3
 80120e4:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 80120e8:	428b      	cmp	r3, r1
 80120ea:	4604      	mov	r4, r0
 80120ec:	d010      	beq.n	8012110 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80120ee:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 80120f2:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 80120f6:	b158      	cbz	r0, 8012110 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80120f8:	6803      	ldr	r3, [r0, #0]
 80120fa:	68db      	ldr	r3, [r3, #12]
 80120fc:	4798      	blx	r3
 80120fe:	b138      	cbz	r0, 8012110 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8012100:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 8012104:	6803      	ldr	r3, [r0, #0]
 8012106:	4621      	mov	r1, r4
 8012108:	689b      	ldr	r3, [r3, #8]
 801210a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801210e:	4718      	bx	r3
 8012110:	bd10      	pop	{r4, pc}

08012112 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 8012112:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012114:	4604      	mov	r4, r0
 8012116:	460d      	mov	r5, r1
 8012118:	b1a9      	cbz	r1, 8012146 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 801211a:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 801211e:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 8012122:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 8012126:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 801212a:	ab01      	add	r3, sp, #4
 801212c:	1a12      	subs	r2, r2, r0
 801212e:	1b89      	subs	r1, r1, r6
 8012130:	1a38      	subs	r0, r7, r0
 8012132:	f006 fc47 	bl	80189c4 <_ZN8touchgfx6muldivElllRl>
 8012136:	4629      	mov	r1, r5
 8012138:	ab01      	add	r3, sp, #4
 801213a:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 801213e:	4430      	add	r0, r6
 8012140:	f006 fc40 	bl	80189c4 <_ZN8touchgfx6muldivElllRl>
 8012144:	b285      	uxth	r5, r0
 8012146:	4628      	mov	r0, r5
 8012148:	b003      	add	sp, #12
 801214a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801214c <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 801214c:	b570      	push	{r4, r5, r6, lr}
 801214e:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8012152:	4604      	mov	r4, r0
 8012154:	2b00      	cmp	r3, #0
 8012156:	d035      	beq.n	80121c4 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012158:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 801215c:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8012160:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 8012164:	3001      	adds	r0, #1
 8012166:	1ad2      	subs	r2, r2, r3
 8012168:	b212      	sxth	r2, r2
 801216a:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 801216e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8012172:	2100      	movs	r1, #0
 8012174:	b280      	uxth	r0, r0
 8012176:	47a8      	blx	r5
 8012178:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 801217c:	6823      	ldr	r3, [r4, #0]
 801217e:	4401      	add	r1, r0
 8012180:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012184:	4620      	mov	r0, r4
 8012186:	4798      	blx	r3
 8012188:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 801218c:	429a      	cmp	r2, r3
 801218e:	db19      	blt.n	80121c4 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012190:	2500      	movs	r5, #0
 8012192:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8012196:	f005 f987 	bl	80174a8 <_ZN8touchgfx11Application11getInstanceEv>
 801219a:	4621      	mov	r1, r4
 801219c:	3004      	adds	r0, #4
 801219e:	f005 f9a8 	bl	80174f2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80121a2:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80121a6:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 80121aa:	b158      	cbz	r0, 80121c4 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80121ac:	6803      	ldr	r3, [r0, #0]
 80121ae:	68db      	ldr	r3, [r3, #12]
 80121b0:	4798      	blx	r3
 80121b2:	b138      	cbz	r0, 80121c4 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80121b4:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80121b8:	6803      	ldr	r3, [r0, #0]
 80121ba:	4621      	mov	r1, r4
 80121bc:	689b      	ldr	r3, [r3, #8]
 80121be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80121c2:	4718      	bx	r3
 80121c4:	bd70      	pop	{r4, r5, r6, pc}

080121c6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 80121c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80121ca:	4604      	mov	r4, r0
 80121cc:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 80121d0:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 80121d4:	460e      	mov	r6, r1
 80121d6:	4615      	mov	r5, r2
 80121d8:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80121dc:	4619      	mov	r1, r3
 80121de:	463a      	mov	r2, r7
 80121e0:	3058      	adds	r0, #88	; 0x58
 80121e2:	4698      	mov	r8, r3
 80121e4:	f7fa fa63 	bl	800c6ae <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80121e8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 80121ec:	4446      	add	r6, r8
 80121ee:	42b3      	cmp	r3, r6
 80121f0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80121f4:	bfb8      	it	lt
 80121f6:	8126      	strhlt	r6, [r4, #8]
 80121f8:	443d      	add	r5, r7
 80121fa:	42ab      	cmp	r3, r5
 80121fc:	bfb8      	it	lt
 80121fe:	8165      	strhlt	r5, [r4, #10]
 8012200:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012204 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8012204:	b510      	push	{r4, lr}
 8012206:	4604      	mov	r4, r0
 8012208:	302c      	adds	r0, #44	; 0x2c
 801220a:	f002 fd4e 	bl	8014caa <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801220e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8012212:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8012216:	4620      	mov	r0, r4
 8012218:	f7fa fa49 	bl	800c6ae <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801221c:	bd10      	pop	{r4, pc}
	...

08012220 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8012220:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012222:	4604      	mov	r4, r0
 8012224:	4626      	mov	r6, r4
 8012226:	2500      	movs	r5, #0
 8012228:	f7fa f91e 	bl	800c468 <_ZN8touchgfx8DrawableC1Ev>
 801222c:	4b23      	ldr	r3, [pc, #140]	; (80122bc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 801222e:	62a5      	str	r5, [r4, #40]	; 0x28
 8012230:	f846 3b2c 	str.w	r3, [r6], #44
 8012234:	2226      	movs	r2, #38	; 0x26
 8012236:	4629      	mov	r1, r5
 8012238:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801223c:	4630      	mov	r0, r6
 801223e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8012242:	f016 fcef 	bl	8028c24 <memset>
 8012246:	4630      	mov	r0, r6
 8012248:	f7fa f90e 	bl	800c468 <_ZN8touchgfx8DrawableC1Ev>
 801224c:	a902      	add	r1, sp, #8
 801224e:	4b1c      	ldr	r3, [pc, #112]	; (80122c0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8012250:	62e3      	str	r3, [r4, #44]	; 0x2c
 8012252:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8012256:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 801225a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 801225e:	4630      	mov	r0, r6
 8012260:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8012264:	f002 fd21 	bl	8014caa <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012268:	4638      	mov	r0, r7
 801226a:	f7fa f8fd 	bl	800c468 <_ZN8touchgfx8DrawableC1Ev>
 801226e:	4b15      	ldr	r3, [pc, #84]	; (80122c4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8012270:	65a3      	str	r3, [r4, #88]	; 0x58
 8012272:	2364      	movs	r3, #100	; 0x64
 8012274:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8012278:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 801227c:	4b12      	ldr	r3, [pc, #72]	; (80122c8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 801227e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8012282:	4629      	mov	r1, r5
 8012284:	4630      	mov	r0, r6
 8012286:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 801228a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 801228e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8012292:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8012296:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 801229a:	f7fa f98e 	bl	800c5ba <_ZN8touchgfx8Drawable4setXEs>
 801229e:	4629      	mov	r1, r5
 80122a0:	4630      	mov	r0, r6
 80122a2:	f7fa f999 	bl	800c5d8 <_ZN8touchgfx8Drawable4setYEs>
 80122a6:	4631      	mov	r1, r6
 80122a8:	4620      	mov	r0, r4
 80122aa:	f000 f819 	bl	80122e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80122ae:	4620      	mov	r0, r4
 80122b0:	4639      	mov	r1, r7
 80122b2:	f000 f815 	bl	80122e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80122b6:	4620      	mov	r0, r4
 80122b8:	b003      	add	sp, #12
 80122ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80122bc:	0802c538 	.word	0x0802c538
 80122c0:	0802cc94 	.word	0x0802cc94
 80122c4:	0802c60c 	.word	0x0802c60c
 80122c8:	080190ad 	.word	0x080190ad

080122cc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80122cc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80122ce:	2000      	movs	r0, #0
 80122d0:	b12b      	cbz	r3, 80122de <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80122d2:	b920      	cbnz	r0, 80122de <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80122d4:	1a5a      	subs	r2, r3, r1
 80122d6:	4250      	negs	r0, r2
 80122d8:	4150      	adcs	r0, r2
 80122da:	699b      	ldr	r3, [r3, #24]
 80122dc:	e7f8      	b.n	80122d0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80122de:	4770      	bx	lr

080122e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80122e0:	2300      	movs	r3, #0
 80122e2:	6148      	str	r0, [r1, #20]
 80122e4:	618b      	str	r3, [r1, #24]
 80122e6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80122e8:	b913      	cbnz	r3, 80122f0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80122ea:	6281      	str	r1, [r0, #40]	; 0x28
 80122ec:	4770      	bx	lr
 80122ee:	4613      	mov	r3, r2
 80122f0:	699a      	ldr	r2, [r3, #24]
 80122f2:	2a00      	cmp	r2, #0
 80122f4:	d1fb      	bne.n	80122ee <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80122f6:	6199      	str	r1, [r3, #24]
 80122f8:	4770      	bx	lr

080122fa <_ZN8touchgfx9Container9removeAllEv>:
 80122fa:	2200      	movs	r2, #0
 80122fc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80122fe:	b123      	cbz	r3, 801230a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8012300:	6999      	ldr	r1, [r3, #24]
 8012302:	6281      	str	r1, [r0, #40]	; 0x28
 8012304:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8012308:	e7f8      	b.n	80122fc <_ZN8touchgfx9Container9removeAllEv+0x2>
 801230a:	4770      	bx	lr

0801230c <_ZN8touchgfx9Container6unlinkEv>:
 801230c:	2300      	movs	r3, #0
 801230e:	6283      	str	r3, [r0, #40]	; 0x28
 8012310:	4770      	bx	lr

08012312 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8012312:	2200      	movs	r2, #0
 8012314:	8002      	strh	r2, [r0, #0]
 8012316:	8042      	strh	r2, [r0, #2]
 8012318:	8082      	strh	r2, [r0, #4]
 801231a:	80c2      	strh	r2, [r0, #6]
 801231c:	4770      	bx	lr

0801231e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 801231e:	b570      	push	{r4, r5, r6, lr}
 8012320:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012322:	460d      	mov	r5, r1
 8012324:	4616      	mov	r6, r2
 8012326:	b13c      	cbz	r4, 8012338 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8012328:	6823      	ldr	r3, [r4, #0]
 801232a:	4620      	mov	r0, r4
 801232c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801232e:	4632      	mov	r2, r6
 8012330:	4629      	mov	r1, r5
 8012332:	4798      	blx	r3
 8012334:	69a4      	ldr	r4, [r4, #24]
 8012336:	e7f6      	b.n	8012326 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8012338:	bd70      	pop	{r4, r5, r6, pc}

0801233a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 801233a:	b538      	push	{r3, r4, r5, lr}
 801233c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801233e:	460d      	mov	r5, r1
 8012340:	b134      	cbz	r4, 8012350 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8012342:	682b      	ldr	r3, [r5, #0]
 8012344:	4621      	mov	r1, r4
 8012346:	689b      	ldr	r3, [r3, #8]
 8012348:	4628      	mov	r0, r5
 801234a:	4798      	blx	r3
 801234c:	69a4      	ldr	r4, [r4, #24]
 801234e:	e7f7      	b.n	8012340 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8012350:	bd38      	pop	{r3, r4, r5, pc}

08012352 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8012352:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012354:	b19b      	cbz	r3, 801237e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8012356:	428b      	cmp	r3, r1
 8012358:	d109      	bne.n	801236e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 801235a:	699a      	ldr	r2, [r3, #24]
 801235c:	2100      	movs	r1, #0
 801235e:	6159      	str	r1, [r3, #20]
 8012360:	6282      	str	r2, [r0, #40]	; 0x28
 8012362:	b902      	cbnz	r2, 8012366 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8012364:	4770      	bx	lr
 8012366:	6199      	str	r1, [r3, #24]
 8012368:	4770      	bx	lr
 801236a:	4613      	mov	r3, r2
 801236c:	b13a      	cbz	r2, 801237e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801236e:	699a      	ldr	r2, [r3, #24]
 8012370:	428a      	cmp	r2, r1
 8012372:	d1fa      	bne.n	801236a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8012374:	698a      	ldr	r2, [r1, #24]
 8012376:	619a      	str	r2, [r3, #24]
 8012378:	2300      	movs	r3, #0
 801237a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 801237e:	4770      	bx	lr

08012380 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8012380:	b410      	push	{r4}
 8012382:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012384:	4604      	mov	r4, r0
 8012386:	b92b      	cbnz	r3, 8012394 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8012388:	6803      	ldr	r3, [r0, #0]
 801238a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801238e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8012390:	4611      	mov	r1, r2
 8012392:	4718      	bx	r3
 8012394:	b941      	cbnz	r1, 80123a8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8012396:	6193      	str	r3, [r2, #24]
 8012398:	6282      	str	r2, [r0, #40]	; 0x28
 801239a:	6154      	str	r4, [r2, #20]
 801239c:	f85d 4b04 	ldr.w	r4, [sp], #4
 80123a0:	4770      	bx	lr
 80123a2:	4603      	mov	r3, r0
 80123a4:	2800      	cmp	r0, #0
 80123a6:	d0f9      	beq.n	801239c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80123a8:	4299      	cmp	r1, r3
 80123aa:	6998      	ldr	r0, [r3, #24]
 80123ac:	d1f9      	bne.n	80123a2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80123ae:	6190      	str	r0, [r2, #24]
 80123b0:	618a      	str	r2, [r1, #24]
 80123b2:	e7f2      	b.n	801239a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080123b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80123b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80123b8:	461f      	mov	r7, r3
 80123ba:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80123be:	460d      	mov	r5, r1
 80123c0:	4616      	mov	r6, r2
 80123c2:	b103      	cbz	r3, 80123c6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80123c4:	6038      	str	r0, [r7, #0]
 80123c6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80123c8:	b314      	cbz	r4, 8012410 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80123ca:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80123ce:	b1eb      	cbz	r3, 801240c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80123d0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80123d4:	428d      	cmp	r5, r1
 80123d6:	db19      	blt.n	801240c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80123d8:	8923      	ldrh	r3, [r4, #8]
 80123da:	b289      	uxth	r1, r1
 80123dc:	440b      	add	r3, r1
 80123de:	b21b      	sxth	r3, r3
 80123e0:	429d      	cmp	r5, r3
 80123e2:	da13      	bge.n	801240c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80123e4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80123e8:	4296      	cmp	r6, r2
 80123ea:	db0f      	blt.n	801240c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80123ec:	8963      	ldrh	r3, [r4, #10]
 80123ee:	b292      	uxth	r2, r2
 80123f0:	4413      	add	r3, r2
 80123f2:	b21b      	sxth	r3, r3
 80123f4:	429e      	cmp	r6, r3
 80123f6:	da09      	bge.n	801240c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80123f8:	6823      	ldr	r3, [r4, #0]
 80123fa:	1ab2      	subs	r2, r6, r2
 80123fc:	1a69      	subs	r1, r5, r1
 80123fe:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8012402:	b212      	sxth	r2, r2
 8012404:	463b      	mov	r3, r7
 8012406:	b209      	sxth	r1, r1
 8012408:	4620      	mov	r0, r4
 801240a:	47c0      	blx	r8
 801240c:	69a4      	ldr	r4, [r4, #24]
 801240e:	e7db      	b.n	80123c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8012410:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012414 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8012414:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012418:	4c6e      	ldr	r4, [pc, #440]	; (80125d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801241a:	b0a1      	sub	sp, #132	; 0x84
 801241c:	6824      	ldr	r4, [r4, #0]
 801241e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8012420:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8012424:	9303      	str	r3, [sp, #12]
 8012426:	2400      	movs	r4, #0
 8012428:	802c      	strh	r4, [r5, #0]
 801242a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 801242c:	802c      	strh	r4, [r5, #0]
 801242e:	601c      	str	r4, [r3, #0]
 8012430:	4606      	mov	r6, r0
 8012432:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8012436:	f7ff ffbd 	bl	80123b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801243a:	f1b9 0f03 	cmp.w	r9, #3
 801243e:	f340 80c2 	ble.w	80125c6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8012442:	4631      	mov	r1, r6
 8012444:	a80c      	add	r0, sp, #48	; 0x30
 8012446:	f006 f98b 	bl	8018760 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801244a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801244e:	9306      	str	r3, [sp, #24]
 8012450:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8012454:	9307      	str	r3, [sp, #28]
 8012456:	9b03      	ldr	r3, [sp, #12]
 8012458:	f8d3 a000 	ldr.w	sl, [r3]
 801245c:	f1ba 0f00 	cmp.w	sl, #0
 8012460:	f000 80b4 	beq.w	80125cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8012464:	4651      	mov	r1, sl
 8012466:	a810      	add	r0, sp, #64	; 0x40
 8012468:	f006 f97a 	bl	8018760 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801246c:	9b01      	ldr	r3, [sp, #4]
 801246e:	9a06      	ldr	r2, [sp, #24]
 8012470:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8012474:	189d      	adds	r5, r3, r2
 8012476:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 801247a:	9a07      	ldr	r2, [sp, #28]
 801247c:	2002      	movs	r0, #2
 801247e:	fb91 f1f0 	sdiv	r1, r1, r0
 8012482:	4419      	add	r1, r3
 8012484:	1a6d      	subs	r5, r5, r1
 8012486:	9b02      	ldr	r3, [sp, #8]
 8012488:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801248c:	4413      	add	r3, r2
 801248e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8012492:	fb92 f2f0 	sdiv	r2, r2, r0
 8012496:	440a      	add	r2, r1
 8012498:	1a9b      	subs	r3, r3, r2
 801249a:	435b      	muls	r3, r3
 801249c:	fb05 3505 	mla	r5, r5, r5, r3
 80124a0:	4f4d      	ldr	r7, [pc, #308]	; (80125d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80124a2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80124a4:	ac10      	add	r4, sp, #64	; 0x40
 80124a6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80124a8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80124aa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80124ac:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80124ae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80124b0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80124b4:	f1b9 0f0c 	cmp.w	r9, #12
 80124b8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80124bc:	f04f 0303 	mov.w	r3, #3
 80124c0:	bfc8      	it	gt
 80124c2:	4698      	movgt	r8, r3
 80124c4:	f8cd 9000 	str.w	r9, [sp]
 80124c8:	f04f 0400 	mov.w	r4, #0
 80124cc:	bfdc      	itt	le
 80124ce:	f109 32ff 	addle.w	r2, r9, #4294967295	; 0xffffffff
 80124d2:	fb92 f8f3 	sdivle	r8, r2, r3
 80124d6:	1c63      	adds	r3, r4, #1
 80124d8:	aa10      	add	r2, sp, #64	; 0x40
 80124da:	f004 0401 	and.w	r4, r4, #1
 80124de:	9308      	str	r3, [sp, #32]
 80124e0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80124e4:	9b00      	ldr	r3, [sp, #0]
 80124e6:	fb93 f3f8 	sdiv	r3, r3, r8
 80124ea:	b29b      	uxth	r3, r3
 80124ec:	3404      	adds	r4, #4
 80124ee:	f04f 0b00 	mov.w	fp, #0
 80124f2:	9304      	str	r3, [sp, #16]
 80124f4:	9a04      	ldr	r2, [sp, #16]
 80124f6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80124fa:	fb13 f302 	smulbb	r3, r3, r2
 80124fe:	9a01      	ldr	r2, [sp, #4]
 8012500:	b29b      	uxth	r3, r3
 8012502:	1899      	adds	r1, r3, r2
 8012504:	9305      	str	r3, [sp, #20]
 8012506:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801250a:	b209      	sxth	r1, r1
 801250c:	4299      	cmp	r1, r3
 801250e:	db4d      	blt.n	80125ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012510:	8932      	ldrh	r2, [r6, #8]
 8012512:	4413      	add	r3, r2
 8012514:	b21b      	sxth	r3, r3
 8012516:	4299      	cmp	r1, r3
 8012518:	da48      	bge.n	80125ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801251a:	9b04      	ldr	r3, [sp, #16]
 801251c:	6827      	ldr	r7, [r4, #0]
 801251e:	fb17 f703 	smulbb	r7, r7, r3
 8012522:	9b02      	ldr	r3, [sp, #8]
 8012524:	b2bf      	uxth	r7, r7
 8012526:	18fa      	adds	r2, r7, r3
 8012528:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 801252c:	b212      	sxth	r2, r2
 801252e:	429a      	cmp	r2, r3
 8012530:	db3c      	blt.n	80125ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012532:	8970      	ldrh	r0, [r6, #10]
 8012534:	4403      	add	r3, r0
 8012536:	b21b      	sxth	r3, r3
 8012538:	429a      	cmp	r2, r3
 801253a:	da37      	bge.n	80125ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801253c:	2300      	movs	r3, #0
 801253e:	930b      	str	r3, [sp, #44]	; 0x2c
 8012540:	4630      	mov	r0, r6
 8012542:	ab0b      	add	r3, sp, #44	; 0x2c
 8012544:	f7ff ff36 	bl	80123b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8012548:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801254a:	b37a      	cbz	r2, 80125ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801254c:	4552      	cmp	r2, sl
 801254e:	d02d      	beq.n	80125ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012550:	4611      	mov	r1, r2
 8012552:	a80e      	add	r0, sp, #56	; 0x38
 8012554:	9209      	str	r2, [sp, #36]	; 0x24
 8012556:	f006 f903 	bl	8018760 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801255a:	9a06      	ldr	r2, [sp, #24]
 801255c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8012560:	9b01      	ldr	r3, [sp, #4]
 8012562:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8012566:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 801256a:	4413      	add	r3, r2
 801256c:	f04f 0e02 	mov.w	lr, #2
 8012570:	fb91 f1fe 	sdiv	r1, r1, lr
 8012574:	4401      	add	r1, r0
 8012576:	1a58      	subs	r0, r3, r1
 8012578:	9a07      	ldr	r2, [sp, #28]
 801257a:	9b02      	ldr	r3, [sp, #8]
 801257c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8012580:	fb9c fcfe 	sdiv	ip, ip, lr
 8012584:	4413      	add	r3, r2
 8012586:	448c      	add	ip, r1
 8012588:	eba3 030c 	sub.w	r3, r3, ip
 801258c:	435b      	muls	r3, r3
 801258e:	fb00 3300 	mla	r3, r0, r0, r3
 8012592:	42ab      	cmp	r3, r5
 8012594:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012596:	d208      	bcs.n	80125aa <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8012598:	9803      	ldr	r0, [sp, #12]
 801259a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801259c:	6001      	str	r1, [r0, #0]
 801259e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80125a0:	9805      	ldr	r0, [sp, #20]
 80125a2:	8008      	strh	r0, [r1, #0]
 80125a4:	992b      	ldr	r1, [sp, #172]	; 0xac
 80125a6:	461d      	mov	r5, r3
 80125a8:	800f      	strh	r7, [r1, #0]
 80125aa:	4692      	mov	sl, r2
 80125ac:	f10b 0b01 	add.w	fp, fp, #1
 80125b0:	f1bb 0f04 	cmp.w	fp, #4
 80125b4:	f104 0408 	add.w	r4, r4, #8
 80125b8:	d19c      	bne.n	80124f4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80125ba:	9b00      	ldr	r3, [sp, #0]
 80125bc:	9c08      	ldr	r4, [sp, #32]
 80125be:	444b      	add	r3, r9
 80125c0:	4544      	cmp	r4, r8
 80125c2:	9300      	str	r3, [sp, #0]
 80125c4:	d187      	bne.n	80124d6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 80125c6:	b021      	add	sp, #132	; 0x84
 80125c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80125cc:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 80125d0:	e766      	b.n	80124a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 80125d2:	bf00      	nop
 80125d4:	2000e1c0 	.word	0x2000e1c0
 80125d8:	0802b1bc 	.word	0x0802b1bc

080125dc <_ZN8touchgfx4RectaNERKS0_>:
 80125dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80125e0:	f9b1 7000 	ldrsh.w	r7, [r1]
 80125e4:	888c      	ldrh	r4, [r1, #4]
 80125e6:	f9b0 9000 	ldrsh.w	r9, [r0]
 80125ea:	443c      	add	r4, r7
 80125ec:	b2a4      	uxth	r4, r4
 80125ee:	fa0f f884 	sxth.w	r8, r4
 80125f2:	45c1      	cmp	r9, r8
 80125f4:	da2f      	bge.n	8012656 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80125f6:	8882      	ldrh	r2, [r0, #4]
 80125f8:	444a      	add	r2, r9
 80125fa:	b292      	uxth	r2, r2
 80125fc:	fa0f fe82 	sxth.w	lr, r2
 8012600:	4577      	cmp	r7, lr
 8012602:	da28      	bge.n	8012656 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012604:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8012608:	88cb      	ldrh	r3, [r1, #6]
 801260a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801260e:	442b      	add	r3, r5
 8012610:	b21b      	sxth	r3, r3
 8012612:	429e      	cmp	r6, r3
 8012614:	da1f      	bge.n	8012656 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012616:	88c3      	ldrh	r3, [r0, #6]
 8012618:	4433      	add	r3, r6
 801261a:	b29b      	uxth	r3, r3
 801261c:	fa0f fc83 	sxth.w	ip, r3
 8012620:	4565      	cmp	r5, ip
 8012622:	da18      	bge.n	8012656 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012624:	454f      	cmp	r7, r9
 8012626:	bfb8      	it	lt
 8012628:	464f      	movlt	r7, r9
 801262a:	42b5      	cmp	r5, r6
 801262c:	bfb8      	it	lt
 801262e:	4635      	movlt	r5, r6
 8012630:	45f0      	cmp	r8, lr
 8012632:	bfd8      	it	le
 8012634:	4622      	movle	r2, r4
 8012636:	1bd2      	subs	r2, r2, r7
 8012638:	8082      	strh	r2, [r0, #4]
 801263a:	884a      	ldrh	r2, [r1, #2]
 801263c:	88c9      	ldrh	r1, [r1, #6]
 801263e:	8007      	strh	r7, [r0, #0]
 8012640:	440a      	add	r2, r1
 8012642:	b292      	uxth	r2, r2
 8012644:	b211      	sxth	r1, r2
 8012646:	458c      	cmp	ip, r1
 8012648:	bfa8      	it	ge
 801264a:	4613      	movge	r3, r2
 801264c:	1b5b      	subs	r3, r3, r5
 801264e:	80c3      	strh	r3, [r0, #6]
 8012650:	8045      	strh	r5, [r0, #2]
 8012652:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012656:	2300      	movs	r3, #0
 8012658:	8003      	strh	r3, [r0, #0]
 801265a:	8043      	strh	r3, [r0, #2]
 801265c:	8083      	strh	r3, [r0, #4]
 801265e:	80c3      	strh	r3, [r0, #6]
 8012660:	e7f7      	b.n	8012652 <_ZN8touchgfx4RectaNERKS0_+0x76>

08012662 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8012662:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012666:	2b00      	cmp	r3, #0
 8012668:	dd06      	ble.n	8012678 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 801266a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 801266e:	2800      	cmp	r0, #0
 8012670:	bfcc      	ite	gt
 8012672:	2000      	movgt	r0, #0
 8012674:	2001      	movle	r0, #1
 8012676:	4770      	bx	lr
 8012678:	2001      	movs	r0, #1
 801267a:	4770      	bx	lr

0801267c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 801267c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012680:	2300      	movs	r3, #0
 8012682:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8012684:	8003      	strh	r3, [r0, #0]
 8012686:	4604      	mov	r4, r0
 8012688:	8043      	strh	r3, [r0, #2]
 801268a:	8083      	strh	r3, [r0, #4]
 801268c:	80c3      	strh	r3, [r0, #6]
 801268e:	2d00      	cmp	r5, #0
 8012690:	d040      	beq.n	8012714 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8012692:	1d28      	adds	r0, r5, #4
 8012694:	f7ff ffe5 	bl	8012662 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012698:	b988      	cbnz	r0, 80126be <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 801269a:	4620      	mov	r0, r4
 801269c:	f7ff ffe1 	bl	8012662 <_ZNK8touchgfx4Rect7isEmptyEv>
 80126a0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80126a4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80126a8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80126ac:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80126b0:	b138      	cbz	r0, 80126c2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80126b2:	8022      	strh	r2, [r4, #0]
 80126b4:	8063      	strh	r3, [r4, #2]
 80126b6:	f8a4 e004 	strh.w	lr, [r4, #4]
 80126ba:	f8a4 c006 	strh.w	ip, [r4, #6]
 80126be:	69ad      	ldr	r5, [r5, #24]
 80126c0:	e7e5      	b.n	801268e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80126c2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80126c6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80126ca:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80126ce:	4290      	cmp	r0, r2
 80126d0:	4607      	mov	r7, r0
 80126d2:	bfa8      	it	ge
 80126d4:	4617      	movge	r7, r2
 80126d6:	4472      	add	r2, lr
 80126d8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80126dc:	8027      	strh	r7, [r4, #0]
 80126de:	4299      	cmp	r1, r3
 80126e0:	460e      	mov	r6, r1
 80126e2:	4440      	add	r0, r8
 80126e4:	bfa8      	it	ge
 80126e6:	461e      	movge	r6, r3
 80126e8:	4471      	add	r1, lr
 80126ea:	4463      	add	r3, ip
 80126ec:	b200      	sxth	r0, r0
 80126ee:	b212      	sxth	r2, r2
 80126f0:	b209      	sxth	r1, r1
 80126f2:	b21b      	sxth	r3, r3
 80126f4:	4290      	cmp	r0, r2
 80126f6:	bfac      	ite	ge
 80126f8:	ebc7 0200 	rsbge	r2, r7, r0
 80126fc:	ebc7 0202 	rsblt	r2, r7, r2
 8012700:	4299      	cmp	r1, r3
 8012702:	bfac      	ite	ge
 8012704:	ebc6 0301 	rsbge	r3, r6, r1
 8012708:	ebc6 0303 	rsblt	r3, r6, r3
 801270c:	8066      	strh	r6, [r4, #2]
 801270e:	80a2      	strh	r2, [r4, #4]
 8012710:	80e3      	strh	r3, [r4, #6]
 8012712:	e7d4      	b.n	80126be <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012714:	4620      	mov	r0, r4
 8012716:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801271a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 801271a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801271e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8012722:	b383      	cbz	r3, 8012786 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012724:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012726:	b374      	cbz	r4, 8012786 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012728:	f9b1 5000 	ldrsh.w	r5, [r1]
 801272c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8012730:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8012734:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8012738:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801273c:	b303      	cbz	r3, 8012780 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801273e:	4668      	mov	r0, sp
 8012740:	1d21      	adds	r1, r4, #4
 8012742:	f8ad 5000 	strh.w	r5, [sp]
 8012746:	f8ad 6002 	strh.w	r6, [sp, #2]
 801274a:	f8ad 7004 	strh.w	r7, [sp, #4]
 801274e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8012752:	f7ff ff43 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 8012756:	4668      	mov	r0, sp
 8012758:	f7ff ff83 	bl	8012662 <_ZNK8touchgfx4Rect7isEmptyEv>
 801275c:	b980      	cbnz	r0, 8012780 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801275e:	f8bd 3000 	ldrh.w	r3, [sp]
 8012762:	88a2      	ldrh	r2, [r4, #4]
 8012764:	1a9b      	subs	r3, r3, r2
 8012766:	f8ad 3000 	strh.w	r3, [sp]
 801276a:	88e2      	ldrh	r2, [r4, #6]
 801276c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012770:	1a9b      	subs	r3, r3, r2
 8012772:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012776:	6823      	ldr	r3, [r4, #0]
 8012778:	4669      	mov	r1, sp
 801277a:	689b      	ldr	r3, [r3, #8]
 801277c:	4620      	mov	r0, r4
 801277e:	4798      	blx	r3
 8012780:	69a4      	ldr	r4, [r4, #24]
 8012782:	2c00      	cmp	r4, #0
 8012784:	d1d8      	bne.n	8012738 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8012786:	b002      	add	sp, #8
 8012788:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801278c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 801278c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801278e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8012792:	460d      	mov	r5, r1
 8012794:	4616      	mov	r6, r2
 8012796:	b323      	cbz	r3, 80127e2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012798:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801279a:	b314      	cbz	r4, 80127e2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 801279c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80127a0:	b1eb      	cbz	r3, 80127de <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80127a2:	6828      	ldr	r0, [r5, #0]
 80127a4:	6869      	ldr	r1, [r5, #4]
 80127a6:	466b      	mov	r3, sp
 80127a8:	c303      	stmia	r3!, {r0, r1}
 80127aa:	4668      	mov	r0, sp
 80127ac:	1d21      	adds	r1, r4, #4
 80127ae:	f7ff ff15 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 80127b2:	4668      	mov	r0, sp
 80127b4:	f7ff ff55 	bl	8012662 <_ZNK8touchgfx4Rect7isEmptyEv>
 80127b8:	b988      	cbnz	r0, 80127de <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80127ba:	f8bd 3000 	ldrh.w	r3, [sp]
 80127be:	88a2      	ldrh	r2, [r4, #4]
 80127c0:	1a9b      	subs	r3, r3, r2
 80127c2:	f8ad 3000 	strh.w	r3, [sp]
 80127c6:	88e2      	ldrh	r2, [r4, #6]
 80127c8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80127cc:	1a9b      	subs	r3, r3, r2
 80127ce:	f8ad 3002 	strh.w	r3, [sp, #2]
 80127d2:	6823      	ldr	r3, [r4, #0]
 80127d4:	4632      	mov	r2, r6
 80127d6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80127d8:	4669      	mov	r1, sp
 80127da:	4620      	mov	r0, r4
 80127dc:	4798      	blx	r3
 80127de:	69a4      	ldr	r4, [r4, #24]
 80127e0:	e7db      	b.n	801279a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80127e2:	b002      	add	sp, #8
 80127e4:	bd70      	pop	{r4, r5, r6, pc}

080127e6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80127e6:	b513      	push	{r0, r1, r4, lr}
 80127e8:	6803      	ldr	r3, [r0, #0]
 80127ea:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 80127ee:	2300      	movs	r3, #0
 80127f0:	e9cd 3300 	strd	r3, r3, [sp]
 80127f4:	466b      	mov	r3, sp
 80127f6:	47a0      	blx	r4
 80127f8:	b002      	add	sp, #8
 80127fa:	bd10      	pop	{r4, pc}

080127fc <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80127fc:	2301      	movs	r3, #1
 80127fe:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8012802:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8012806:	4770      	bx	lr

08012808 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8012808:	2301      	movs	r3, #1
 801280a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 801280e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8012812:	4770      	bx	lr

08012814 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8012814:	6843      	ldr	r3, [r0, #4]
 8012816:	2201      	movs	r2, #1
 8012818:	725a      	strb	r2, [r3, #9]
 801281a:	6840      	ldr	r0, [r0, #4]
 801281c:	6803      	ldr	r3, [r0, #0]
 801281e:	691b      	ldr	r3, [r3, #16]
 8012820:	4718      	bx	r3

08012822 <_ZN8touchgfx3HAL8flushDMAEv>:
 8012822:	6840      	ldr	r0, [r0, #4]
 8012824:	6803      	ldr	r3, [r0, #0]
 8012826:	689b      	ldr	r3, [r3, #8]
 8012828:	4718      	bx	r3

0801282a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 801282a:	b530      	push	{r4, r5, lr}
 801282c:	b08b      	sub	sp, #44	; 0x2c
 801282e:	6804      	ldr	r4, [r0, #0]
 8012830:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8012834:	9509      	str	r5, [sp, #36]	; 0x24
 8012836:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 801283a:	9508      	str	r5, [sp, #32]
 801283c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8012840:	9507      	str	r5, [sp, #28]
 8012842:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8012846:	9506      	str	r5, [sp, #24]
 8012848:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 801284c:	9505      	str	r5, [sp, #20]
 801284e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8012852:	9504      	str	r5, [sp, #16]
 8012854:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8012858:	9503      	str	r5, [sp, #12]
 801285a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 801285e:	9502      	str	r5, [sp, #8]
 8012860:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8012864:	e9cd 3500 	strd	r3, r5, [sp]
 8012868:	4613      	mov	r3, r2
 801286a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 801286c:	2200      	movs	r2, #0
 801286e:	47a0      	blx	r4
 8012870:	b00b      	add	sp, #44	; 0x2c
 8012872:	bd30      	pop	{r4, r5, pc}

08012874 <_ZN8touchgfx3HAL10beginFrameEv>:
 8012874:	4b04      	ldr	r3, [pc, #16]	; (8012888 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8012876:	781b      	ldrb	r3, [r3, #0]
 8012878:	b123      	cbz	r3, 8012884 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 801287a:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 801287e:	f080 0001 	eor.w	r0, r0, #1
 8012882:	4770      	bx	lr
 8012884:	2001      	movs	r0, #1
 8012886:	4770      	bx	lr
 8012888:	2000e1be 	.word	0x2000e1be

0801288c <_ZN8touchgfx3HAL8endFrameEv>:
 801288c:	b510      	push	{r4, lr}
 801288e:	4604      	mov	r4, r0
 8012890:	6840      	ldr	r0, [r0, #4]
 8012892:	6803      	ldr	r3, [r0, #0]
 8012894:	689b      	ldr	r3, [r3, #8]
 8012896:	4798      	blx	r3
 8012898:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 801289c:	b113      	cbz	r3, 80128a4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 801289e:	2301      	movs	r3, #1
 80128a0:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80128a4:	bd10      	pop	{r4, pc}

080128a6 <_ZN8touchgfx3HAL10initializeEv>:
 80128a6:	b510      	push	{r4, lr}
 80128a8:	4604      	mov	r4, r0
 80128aa:	f7fd ff5f 	bl	801076c <_ZN8touchgfx10OSWrappers10initializeEv>
 80128ae:	f7fd fc85 	bl	80101bc <_ZN8touchgfx4GPIO4initEv>
 80128b2:	6860      	ldr	r0, [r4, #4]
 80128b4:	6803      	ldr	r3, [r0, #0]
 80128b6:	68db      	ldr	r3, [r3, #12]
 80128b8:	4798      	blx	r3
 80128ba:	68e0      	ldr	r0, [r4, #12]
 80128bc:	6803      	ldr	r3, [r0, #0]
 80128be:	689b      	ldr	r3, [r3, #8]
 80128c0:	4798      	blx	r3
 80128c2:	6823      	ldr	r3, [r4, #0]
 80128c4:	4620      	mov	r0, r4
 80128c6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80128c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80128cc:	4718      	bx	r3

080128ce <_ZN8touchgfx3HAL9taskEntryEv>:
 80128ce:	b508      	push	{r3, lr}
 80128d0:	6803      	ldr	r3, [r0, #0]
 80128d2:	4604      	mov	r4, r0
 80128d4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80128d8:	4798      	blx	r3
 80128da:	6823      	ldr	r3, [r4, #0]
 80128dc:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80128de:	4620      	mov	r0, r4
 80128e0:	4798      	blx	r3
 80128e2:	f7fd ffa7 	bl	8010834 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 80128e6:	6823      	ldr	r3, [r4, #0]
 80128e8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80128ea:	e7f8      	b.n	80128de <_ZN8touchgfx3HAL9taskEntryEv+0x10>

080128ec <_ZN8touchgfx3HAL4tickEv>:
 80128ec:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80128ee:	6803      	ldr	r3, [r0, #0]
 80128f0:	4d5b      	ldr	r5, [pc, #364]	; (8012a60 <_ZN8touchgfx3HAL4tickEv+0x174>)
 80128f2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80128f6:	4604      	mov	r4, r0
 80128f8:	4798      	blx	r3
 80128fa:	2800      	cmp	r0, #0
 80128fc:	f000 8095 	beq.w	8012a2a <_ZN8touchgfx3HAL4tickEv+0x13e>
 8012900:	2001      	movs	r0, #1
 8012902:	f7fd fc63 	bl	80101cc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8012906:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 801290a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801290e:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8012912:	2600      	movs	r6, #0
 8012914:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8012918:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 801291c:	b133      	cbz	r3, 801292c <_ZN8touchgfx3HAL4tickEv+0x40>
 801291e:	6823      	ldr	r3, [r4, #0]
 8012920:	4620      	mov	r0, r4
 8012922:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8012926:	4798      	blx	r3
 8012928:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 801292c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8012930:	6862      	ldr	r2, [r4, #4]
 8012932:	f083 0301 	eor.w	r3, r3, #1
 8012936:	7253      	strb	r3, [r2, #9]
 8012938:	2601      	movs	r6, #1
 801293a:	702e      	strb	r6, [r5, #0]
 801293c:	f004 fdb4 	bl	80174a8 <_ZN8touchgfx11Application11getInstanceEv>
 8012940:	6803      	ldr	r3, [r0, #0]
 8012942:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012944:	4798      	blx	r3
 8012946:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 801294a:	b90b      	cbnz	r3, 8012950 <_ZN8touchgfx3HAL4tickEv+0x64>
 801294c:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8012950:	f004 fdaa 	bl	80174a8 <_ZN8touchgfx11Application11getInstanceEv>
 8012954:	6803      	ldr	r3, [r0, #0]
 8012956:	695b      	ldr	r3, [r3, #20]
 8012958:	4798      	blx	r3
 801295a:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 801295c:	6803      	ldr	r3, [r0, #0]
 801295e:	691b      	ldr	r3, [r3, #16]
 8012960:	4798      	blx	r3
 8012962:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8012966:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 801296a:	3b01      	subs	r3, #1
 801296c:	b2db      	uxtb	r3, r3
 801296e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8012972:	b10a      	cbz	r2, 8012978 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8012974:	2b00      	cmp	r3, #0
 8012976:	d1eb      	bne.n	8012950 <_ZN8touchgfx3HAL4tickEv+0x64>
 8012978:	4a3a      	ldr	r2, [pc, #232]	; (8012a64 <_ZN8touchgfx3HAL4tickEv+0x178>)
 801297a:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 801297e:	7813      	ldrb	r3, [r2, #0]
 8012980:	3301      	adds	r3, #1
 8012982:	b25b      	sxtb	r3, r3
 8012984:	4299      	cmp	r1, r3
 8012986:	7013      	strb	r3, [r2, #0]
 8012988:	dc10      	bgt.n	80129ac <_ZN8touchgfx3HAL4tickEv+0xc0>
 801298a:	68e0      	ldr	r0, [r4, #12]
 801298c:	2300      	movs	r3, #0
 801298e:	7013      	strb	r3, [r2, #0]
 8012990:	6803      	ldr	r3, [r0, #0]
 8012992:	aa03      	add	r2, sp, #12
 8012994:	68db      	ldr	r3, [r3, #12]
 8012996:	a902      	add	r1, sp, #8
 8012998:	4798      	blx	r3
 801299a:	6823      	ldr	r3, [r4, #0]
 801299c:	2800      	cmp	r0, #0
 801299e:	d050      	beq.n	8012a42 <_ZN8touchgfx3HAL4tickEv+0x156>
 80129a0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80129a4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80129a8:	4620      	mov	r0, r4
 80129aa:	4798      	blx	r3
 80129ac:	6960      	ldr	r0, [r4, #20]
 80129ae:	2300      	movs	r3, #0
 80129b0:	f88d 3007 	strb.w	r3, [sp, #7]
 80129b4:	b158      	cbz	r0, 80129ce <_ZN8touchgfx3HAL4tickEv+0xe2>
 80129b6:	6803      	ldr	r3, [r0, #0]
 80129b8:	f10d 0107 	add.w	r1, sp, #7
 80129bc:	68db      	ldr	r3, [r3, #12]
 80129be:	4798      	blx	r3
 80129c0:	b128      	cbz	r0, 80129ce <_ZN8touchgfx3HAL4tickEv+0xe2>
 80129c2:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80129c4:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80129c8:	6803      	ldr	r3, [r0, #0]
 80129ca:	68db      	ldr	r3, [r3, #12]
 80129cc:	4798      	blx	r3
 80129ce:	f104 001c 	add.w	r0, r4, #28
 80129d2:	f015 fa9f 	bl	8027f14 <_ZN8touchgfx8Gestures4tickEv>
 80129d6:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 80129da:	b30b      	cbz	r3, 8012a20 <_ZN8touchgfx3HAL4tickEv+0x134>
 80129dc:	6920      	ldr	r0, [r4, #16]
 80129de:	6803      	ldr	r3, [r0, #0]
 80129e0:	691b      	ldr	r3, [r3, #16]
 80129e2:	4798      	blx	r3
 80129e4:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80129e6:	4606      	mov	r6, r0
 80129e8:	b903      	cbnz	r3, 80129ec <_ZN8touchgfx3HAL4tickEv+0x100>
 80129ea:	6760      	str	r0, [r4, #116]	; 0x74
 80129ec:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80129ee:	4a1e      	ldr	r2, [pc, #120]	; (8012a68 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 80129f0:	1af3      	subs	r3, r6, r3
 80129f2:	4293      	cmp	r3, r2
 80129f4:	d914      	bls.n	8012a20 <_ZN8touchgfx3HAL4tickEv+0x134>
 80129f6:	6920      	ldr	r0, [r4, #16]
 80129f8:	6803      	ldr	r3, [r0, #0]
 80129fa:	699b      	ldr	r3, [r3, #24]
 80129fc:	4798      	blx	r3
 80129fe:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8012a00:	2264      	movs	r2, #100	; 0x64
 8012a02:	1af3      	subs	r3, r6, r3
 8012a04:	fbb3 f3f2 	udiv	r3, r3, r2
 8012a08:	fbb0 f0f3 	udiv	r0, r0, r3
 8012a0c:	2800      	cmp	r0, #0
 8012a0e:	dc1d      	bgt.n	8012a4c <_ZN8touchgfx3HAL4tickEv+0x160>
 8012a10:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8012a14:	6920      	ldr	r0, [r4, #16]
 8012a16:	6803      	ldr	r3, [r0, #0]
 8012a18:	2100      	movs	r1, #0
 8012a1a:	69db      	ldr	r3, [r3, #28]
 8012a1c:	4798      	blx	r3
 8012a1e:	6766      	str	r6, [r4, #116]	; 0x74
 8012a20:	f004 fd42 	bl	80174a8 <_ZN8touchgfx11Application11getInstanceEv>
 8012a24:	6803      	ldr	r3, [r0, #0]
 8012a26:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012a28:	4798      	blx	r3
 8012a2a:	6823      	ldr	r3, [r4, #0]
 8012a2c:	4620      	mov	r0, r4
 8012a2e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8012a32:	4798      	blx	r3
 8012a34:	2001      	movs	r0, #1
 8012a36:	f7fd fbe5 	bl	8010204 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8012a3a:	2300      	movs	r3, #0
 8012a3c:	702b      	strb	r3, [r5, #0]
 8012a3e:	b004      	add	sp, #16
 8012a40:	bd70      	pop	{r4, r5, r6, pc}
 8012a42:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8012a46:	4620      	mov	r0, r4
 8012a48:	4798      	blx	r3
 8012a4a:	e7af      	b.n	80129ac <_ZN8touchgfx3HAL4tickEv+0xc0>
 8012a4c:	2863      	cmp	r0, #99	; 0x63
 8012a4e:	bfcb      	itete	gt
 8012a50:	2300      	movgt	r3, #0
 8012a52:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8012a56:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8012a5a:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8012a5e:	e7d9      	b.n	8012a14 <_ZN8touchgfx3HAL4tickEv+0x128>
 8012a60:	2000e1c4 	.word	0x2000e1c4
 8012a64:	2000e1c5 	.word	0x2000e1c5
 8012a68:	05f5e100 	.word	0x05f5e100

08012a6c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8012a6c:	b510      	push	{r4, lr}
 8012a6e:	4604      	mov	r4, r0
 8012a70:	f7fd fea4 	bl	80107bc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8012a74:	6863      	ldr	r3, [r4, #4]
 8012a76:	2200      	movs	r2, #0
 8012a78:	729a      	strb	r2, [r3, #10]
 8012a7a:	bd10      	pop	{r4, pc}

08012a7c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8012a7c:	65c1      	str	r1, [r0, #92]	; 0x5c
 8012a7e:	301c      	adds	r0, #28
 8012a80:	f015 ba46 	b.w	8027f10 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08012a84 <_ZN8touchgfx3HAL5touchEll>:
 8012a84:	b530      	push	{r4, r5, lr}
 8012a86:	b087      	sub	sp, #28
 8012a88:	4604      	mov	r4, r0
 8012a8a:	a804      	add	r0, sp, #16
 8012a8c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8012a90:	f004 fae0 	bl	8017054 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8012a94:	9b04      	ldr	r3, [sp, #16]
 8012a96:	f8ad 300c 	strh.w	r3, [sp, #12]
 8012a9a:	a906      	add	r1, sp, #24
 8012a9c:	9b05      	ldr	r3, [sp, #20]
 8012a9e:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8012aa2:	a803      	add	r0, sp, #12
 8012aa4:	f004 fb28 	bl	80170f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8012aa8:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8012aac:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8012ab0:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8012ab4:	f104 001c 	add.w	r0, r4, #28
 8012ab8:	b189      	cbz	r1, 8012ade <_ZN8touchgfx3HAL5touchEll+0x5a>
 8012aba:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8012abe:	9300      	str	r3, [sp, #0]
 8012ac0:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8012ac4:	4613      	mov	r3, r2
 8012ac6:	462a      	mov	r2, r5
 8012ac8:	f015 fa32 	bl	8027f30 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8012acc:	b128      	cbz	r0, 8012ada <_ZN8touchgfx3HAL5touchEll+0x56>
 8012ace:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8012ad2:	6623      	str	r3, [r4, #96]	; 0x60
 8012ad4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012ad8:	6663      	str	r3, [r4, #100]	; 0x64
 8012ada:	b007      	add	sp, #28
 8012adc:	bd30      	pop	{r4, r5, pc}
 8012ade:	f015 fa67 	bl	8027fb0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8012ae2:	2301      	movs	r3, #1
 8012ae4:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8012ae8:	e7f1      	b.n	8012ace <_ZN8touchgfx3HAL5touchEll+0x4a>

08012aea <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8012aea:	b510      	push	{r4, lr}
 8012aec:	2b00      	cmp	r3, #0
 8012aee:	d046      	beq.n	8012b7e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8012af0:	ea81 0002 	eor.w	r0, r1, r2
 8012af4:	07c4      	lsls	r4, r0, #31
 8012af6:	d508      	bpl.n	8012b0a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8012af8:	440b      	add	r3, r1
 8012afa:	3a01      	subs	r2, #1
 8012afc:	428b      	cmp	r3, r1
 8012afe:	d93e      	bls.n	8012b7e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8012b00:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8012b04:	f801 0b01 	strb.w	r0, [r1], #1
 8012b08:	e7f8      	b.n	8012afc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8012b0a:	07d0      	lsls	r0, r2, #31
 8012b0c:	bf42      	ittt	mi
 8012b0e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8012b12:	f801 0b01 	strbmi.w	r0, [r1], #1
 8012b16:	f103 33ff 	addmi.w	r3, r3, #4294967295	; 0xffffffff
 8012b1a:	2b01      	cmp	r3, #1
 8012b1c:	d911      	bls.n	8012b42 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8012b1e:	ea81 0402 	eor.w	r4, r1, r2
 8012b22:	07a4      	lsls	r4, r4, #30
 8012b24:	4610      	mov	r0, r2
 8012b26:	d022      	beq.n	8012b6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8012b28:	f023 0401 	bic.w	r4, r3, #1
 8012b2c:	440c      	add	r4, r1
 8012b2e:	428c      	cmp	r4, r1
 8012b30:	4602      	mov	r2, r0
 8012b32:	d904      	bls.n	8012b3e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8012b34:	8812      	ldrh	r2, [r2, #0]
 8012b36:	f821 2b02 	strh.w	r2, [r1], #2
 8012b3a:	3002      	adds	r0, #2
 8012b3c:	e7f7      	b.n	8012b2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8012b3e:	f003 0301 	and.w	r3, r3, #1
 8012b42:	f023 0003 	bic.w	r0, r3, #3
 8012b46:	4408      	add	r0, r1
 8012b48:	4288      	cmp	r0, r1
 8012b4a:	4614      	mov	r4, r2
 8012b4c:	d904      	bls.n	8012b58 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8012b4e:	6824      	ldr	r4, [r4, #0]
 8012b50:	f841 4b04 	str.w	r4, [r1], #4
 8012b54:	3204      	adds	r2, #4
 8012b56:	e7f7      	b.n	8012b48 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8012b58:	f003 0303 	and.w	r3, r3, #3
 8012b5c:	440b      	add	r3, r1
 8012b5e:	3a01      	subs	r2, #1
 8012b60:	428b      	cmp	r3, r1
 8012b62:	d90c      	bls.n	8012b7e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8012b64:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8012b68:	f801 0b01 	strb.w	r0, [r1], #1
 8012b6c:	e7f8      	b.n	8012b60 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8012b6e:	0790      	lsls	r0, r2, #30
 8012b70:	d0e7      	beq.n	8012b42 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8012b72:	f832 0b02 	ldrh.w	r0, [r2], #2
 8012b76:	f821 0b02 	strh.w	r0, [r1], #2
 8012b7a:	3b02      	subs	r3, #2
 8012b7c:	e7e1      	b.n	8012b42 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8012b7e:	2001      	movs	r0, #1
 8012b80:	bd10      	pop	{r4, pc}

08012b82 <_ZN8touchgfx3HAL7noTouchEv>:
 8012b82:	b510      	push	{r4, lr}
 8012b84:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8012b88:	4604      	mov	r4, r0
 8012b8a:	b153      	cbz	r3, 8012ba2 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8012b8c:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8012b90:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8012b94:	2101      	movs	r1, #1
 8012b96:	301c      	adds	r0, #28
 8012b98:	f015 fa0a 	bl	8027fb0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8012b9c:	2300      	movs	r3, #0
 8012b9e:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8012ba2:	bd10      	pop	{r4, pc}

08012ba4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8012ba4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012ba8:	b085      	sub	sp, #20
 8012baa:	ad04      	add	r5, sp, #16
 8012bac:	4604      	mov	r4, r0
 8012bae:	2000      	movs	r0, #0
 8012bb0:	f845 0d04 	str.w	r0, [r5, #-4]!
 8012bb4:	69a0      	ldr	r0, [r4, #24]
 8012bb6:	6806      	ldr	r6, [r0, #0]
 8012bb8:	9501      	str	r5, [sp, #4]
 8012bba:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8012bbe:	9500      	str	r5, [sp, #0]
 8012bc0:	6835      	ldr	r5, [r6, #0]
 8012bc2:	4699      	mov	r9, r3
 8012bc4:	460f      	mov	r7, r1
 8012bc6:	4690      	mov	r8, r2
 8012bc8:	47a8      	blx	r5
 8012bca:	4d10      	ldr	r5, [pc, #64]	; (8012c0c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8012bcc:	4606      	mov	r6, r0
 8012bce:	f8a5 9000 	strh.w	r9, [r5]
 8012bd2:	f7f8 ff4f 	bl	800ba74 <_ZN8touchgfx3HAL3lcdEv>
 8012bd6:	6803      	ldr	r3, [r0, #0]
 8012bd8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012bda:	4798      	blx	r3
 8012bdc:	b128      	cbz	r0, 8012bea <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8012bde:	2801      	cmp	r0, #1
 8012be0:	d00b      	beq.n	8012bfa <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8012be2:	4630      	mov	r0, r6
 8012be4:	b005      	add	sp, #20
 8012be6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012bea:	882b      	ldrh	r3, [r5, #0]
 8012bec:	fb08 7203 	mla	r2, r8, r3, r7
 8012bf0:	9b03      	ldr	r3, [sp, #12]
 8012bf2:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8012bf6:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012bf8:	e7f3      	b.n	8012be2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8012bfa:	882a      	ldrh	r2, [r5, #0]
 8012bfc:	9b03      	ldr	r3, [sp, #12]
 8012bfe:	fb08 7202 	mla	r2, r8, r2, r7
 8012c02:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012c06:	1a9a      	subs	r2, r3, r2
 8012c08:	63e2      	str	r2, [r4, #60]	; 0x3c
 8012c0a:	e7ea      	b.n	8012be2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8012c0c:	2000e1ba 	.word	0x2000e1ba

08012c10 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8012c10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012c12:	b08b      	sub	sp, #44	; 0x2c
 8012c14:	4617      	mov	r7, r2
 8012c16:	4604      	mov	r4, r0
 8012c18:	460e      	mov	r6, r1
 8012c1a:	461d      	mov	r5, r3
 8012c1c:	f7f8 ff2a 	bl	800ba74 <_ZN8touchgfx3HAL3lcdEv>
 8012c20:	6803      	ldr	r3, [r0, #0]
 8012c22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012c24:	4798      	blx	r3
 8012c26:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8012c2a:	9007      	str	r0, [sp, #28]
 8012c2c:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8012c30:	4b0d      	ldr	r3, [pc, #52]	; (8012c68 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8012c32:	6822      	ldr	r2, [r4, #0]
 8012c34:	881b      	ldrh	r3, [r3, #0]
 8012c36:	9306      	str	r3, [sp, #24]
 8012c38:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8012c3c:	9305      	str	r3, [sp, #20]
 8012c3e:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8012c42:	9304      	str	r3, [sp, #16]
 8012c44:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012c48:	9303      	str	r3, [sp, #12]
 8012c4a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012c4e:	9302      	str	r3, [sp, #8]
 8012c50:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012c54:	e9cd 5300 	strd	r5, r3, [sp]
 8012c58:	4631      	mov	r1, r6
 8012c5a:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8012c5c:	463b      	mov	r3, r7
 8012c5e:	2200      	movs	r2, #0
 8012c60:	4620      	mov	r0, r4
 8012c62:	47a8      	blx	r5
 8012c64:	b00b      	add	sp, #44	; 0x2c
 8012c66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012c68:	2000e1ba 	.word	0x2000e1ba

08012c6c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8012c6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012c70:	4698      	mov	r8, r3
 8012c72:	6803      	ldr	r3, [r0, #0]
 8012c74:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8012c76:	4b15      	ldr	r3, [pc, #84]	; (8012ccc <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8012c78:	b08b      	sub	sp, #44	; 0x2c
 8012c7a:	4617      	mov	r7, r2
 8012c7c:	f8b3 9000 	ldrh.w	r9, [r3]
 8012c80:	460e      	mov	r6, r1
 8012c82:	4604      	mov	r4, r0
 8012c84:	f7f8 fef6 	bl	800ba74 <_ZN8touchgfx3HAL3lcdEv>
 8012c88:	6803      	ldr	r3, [r0, #0]
 8012c8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012c8c:	4798      	blx	r3
 8012c8e:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8012c92:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8012c96:	2302      	movs	r3, #2
 8012c98:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8012c9c:	2301      	movs	r3, #1
 8012c9e:	9305      	str	r3, [sp, #20]
 8012ca0:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8012ca4:	9304      	str	r3, [sp, #16]
 8012ca6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8012caa:	9303      	str	r3, [sp, #12]
 8012cac:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8012cb0:	9302      	str	r3, [sp, #8]
 8012cb2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012cb6:	2200      	movs	r2, #0
 8012cb8:	e9cd 8300 	strd	r8, r3, [sp]
 8012cbc:	4631      	mov	r1, r6
 8012cbe:	463b      	mov	r3, r7
 8012cc0:	4620      	mov	r0, r4
 8012cc2:	47a8      	blx	r5
 8012cc4:	b00b      	add	sp, #44	; 0x2c
 8012cc6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012cca:	bf00      	nop
 8012ccc:	2000e1ba 	.word	0x2000e1ba

08012cd0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8012cd0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012cd4:	4698      	mov	r8, r3
 8012cd6:	6803      	ldr	r3, [r0, #0]
 8012cd8:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8012cda:	4b11      	ldr	r3, [pc, #68]	; (8012d20 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8012cdc:	b087      	sub	sp, #28
 8012cde:	f8b3 9000 	ldrh.w	r9, [r3]
 8012ce2:	460e      	mov	r6, r1
 8012ce4:	4617      	mov	r7, r2
 8012ce6:	4604      	mov	r4, r0
 8012ce8:	f7f8 fec4 	bl	800ba74 <_ZN8touchgfx3HAL3lcdEv>
 8012cec:	6803      	ldr	r3, [r0, #0]
 8012cee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012cf0:	4798      	blx	r3
 8012cf2:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8012cf6:	f8cd 900c 	str.w	r9, [sp, #12]
 8012cfa:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8012cfe:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8012d02:	9302      	str	r3, [sp, #8]
 8012d04:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8012d08:	9301      	str	r3, [sp, #4]
 8012d0a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012d0e:	9300      	str	r3, [sp, #0]
 8012d10:	463a      	mov	r2, r7
 8012d12:	4643      	mov	r3, r8
 8012d14:	4631      	mov	r1, r6
 8012d16:	4620      	mov	r0, r4
 8012d18:	47a8      	blx	r5
 8012d1a:	b007      	add	sp, #28
 8012d1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012d20:	2000e1ba 	.word	0x2000e1ba

08012d24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8012d24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d28:	4604      	mov	r4, r0
 8012d2a:	b08f      	sub	sp, #60	; 0x3c
 8012d2c:	4610      	mov	r0, r2
 8012d2e:	460d      	mov	r5, r1
 8012d30:	4691      	mov	r9, r2
 8012d32:	461e      	mov	r6, r3
 8012d34:	f007 fcde 	bl	801a6f4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8012d38:	2800      	cmp	r0, #0
 8012d3a:	f000 809d 	beq.w	8012e78 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8012d3e:	6823      	ldr	r3, [r4, #0]
 8012d40:	f8df b198 	ldr.w	fp, [pc, #408]	; 8012edc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8012d44:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012d46:	f8df a198 	ldr.w	sl, [pc, #408]	; 8012ee0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8012d4a:	4f61      	ldr	r7, [pc, #388]	; (8012ed0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8012d4c:	4620      	mov	r0, r4
 8012d4e:	4798      	blx	r3
 8012d50:	6823      	ldr	r3, [r4, #0]
 8012d52:	4620      	mov	r0, r4
 8012d54:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012d56:	4798      	blx	r3
 8012d58:	f8bb 3000 	ldrh.w	r3, [fp]
 8012d5c:	9301      	str	r3, [sp, #4]
 8012d5e:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8012d62:	f8ba 3000 	ldrh.w	r3, [sl]
 8012d66:	9302      	str	r3, [sp, #8]
 8012d68:	883b      	ldrh	r3, [r7, #0]
 8012d6a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8012d6e:	9303      	str	r3, [sp, #12]
 8012d70:	4b58      	ldr	r3, [pc, #352]	; (8012ed4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8012d72:	9305      	str	r3, [sp, #20]
 8012d74:	881a      	ldrh	r2, [r3, #0]
 8012d76:	9204      	str	r2, [sp, #16]
 8012d78:	4640      	mov	r0, r8
 8012d7a:	f007 fd4f 	bl	801a81c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012d7e:	8038      	strh	r0, [r7, #0]
 8012d80:	4640      	mov	r0, r8
 8012d82:	f007 fd7f 	bl	801a884 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012d86:	9b05      	ldr	r3, [sp, #20]
 8012d88:	b280      	uxth	r0, r0
 8012d8a:	8018      	strh	r0, [r3, #0]
 8012d8c:	4b52      	ldr	r3, [pc, #328]	; (8012ed8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8012d8e:	781b      	ldrb	r3, [r3, #0]
 8012d90:	2b00      	cmp	r3, #0
 8012d92:	d174      	bne.n	8012e7e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8012d94:	883b      	ldrh	r3, [r7, #0]
 8012d96:	f8ab 3000 	strh.w	r3, [fp]
 8012d9a:	f8aa 0000 	strh.w	r0, [sl]
 8012d9e:	4648      	mov	r0, r9
 8012da0:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8012da4:	f007 fca6 	bl	801a6f4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8012da8:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8012dac:	2200      	movs	r2, #0
 8012dae:	4611      	mov	r1, r2
 8012db0:	4628      	mov	r0, r5
 8012db2:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8012db6:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8012dba:	f7f9 fc1c 	bl	800c5f6 <_ZN8touchgfx8Drawable5setXYEss>
 8012dbe:	2301      	movs	r3, #1
 8012dc0:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8012dc4:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8012dc8:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8012dcc:	2b00      	cmp	r3, #0
 8012dce:	dd5c      	ble.n	8012e8a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8012dd0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8012dd4:	2b00      	cmp	r3, #0
 8012dd6:	dd58      	ble.n	8012e8a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8012dd8:	462a      	mov	r2, r5
 8012dda:	ab0a      	add	r3, sp, #40	; 0x28
 8012ddc:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8012de0:	6851      	ldr	r1, [r2, #4]
 8012de2:	c303      	stmia	r3!, {r0, r1}
 8012de4:	4631      	mov	r1, r6
 8012de6:	a80a      	add	r0, sp, #40	; 0x28
 8012de8:	f7ff fbf8 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 8012dec:	4b38      	ldr	r3, [pc, #224]	; (8012ed0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8012dee:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012df2:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8012df6:	2100      	movs	r1, #0
 8012df8:	aa0a      	add	r2, sp, #40	; 0x28
 8012dfa:	4b36      	ldr	r3, [pc, #216]	; (8012ed4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8012dfc:	910c      	str	r1, [sp, #48]	; 0x30
 8012dfe:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012e02:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012e06:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012e0a:	ab08      	add	r3, sp, #32
 8012e0c:	e883 0003 	stmia.w	r3, {r0, r1}
 8012e10:	4618      	mov	r0, r3
 8012e12:	a90c      	add	r1, sp, #48	; 0x30
 8012e14:	f7ff fbe2 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 8012e18:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8012e1a:	2b00      	cmp	r3, #0
 8012e1c:	d13c      	bne.n	8012e98 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8012e1e:	2000      	movs	r0, #0
 8012e20:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8012e24:	2600      	movs	r6, #0
 8012e26:	682a      	ldr	r2, [r5, #0]
 8012e28:	696b      	ldr	r3, [r5, #20]
 8012e2a:	616e      	str	r6, [r5, #20]
 8012e2c:	9305      	str	r3, [sp, #20]
 8012e2e:	6892      	ldr	r2, [r2, #8]
 8012e30:	a908      	add	r1, sp, #32
 8012e32:	4628      	mov	r0, r5
 8012e34:	4790      	blx	r2
 8012e36:	9b05      	ldr	r3, [sp, #20]
 8012e38:	616b      	str	r3, [r5, #20]
 8012e3a:	4652      	mov	r2, sl
 8012e3c:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8012e40:	4649      	mov	r1, r9
 8012e42:	4628      	mov	r0, r5
 8012e44:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8012e48:	f7f9 fbd5 	bl	800c5f6 <_ZN8touchgfx8Drawable5setXYEss>
 8012e4c:	4b23      	ldr	r3, [pc, #140]	; (8012edc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8012e4e:	9a01      	ldr	r2, [sp, #4]
 8012e50:	801a      	strh	r2, [r3, #0]
 8012e52:	4b23      	ldr	r3, [pc, #140]	; (8012ee0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8012e54:	9a02      	ldr	r2, [sp, #8]
 8012e56:	801a      	strh	r2, [r3, #0]
 8012e58:	4b1d      	ldr	r3, [pc, #116]	; (8012ed0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8012e5a:	9a03      	ldr	r2, [sp, #12]
 8012e5c:	801a      	strh	r2, [r3, #0]
 8012e5e:	4b1d      	ldr	r3, [pc, #116]	; (8012ed4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8012e60:	9a04      	ldr	r2, [sp, #16]
 8012e62:	801a      	strh	r2, [r3, #0]
 8012e64:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8012e68:	6823      	ldr	r3, [r4, #0]
 8012e6a:	4620      	mov	r0, r4
 8012e6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012e6e:	4798      	blx	r3
 8012e70:	6823      	ldr	r3, [r4, #0]
 8012e72:	4620      	mov	r0, r4
 8012e74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012e76:	4798      	blx	r3
 8012e78:	b00f      	add	sp, #60	; 0x3c
 8012e7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012e7e:	883b      	ldrh	r3, [r7, #0]
 8012e80:	f8ab 0000 	strh.w	r0, [fp]
 8012e84:	f8aa 3000 	strh.w	r3, [sl]
 8012e88:	e789      	b.n	8012d9e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8012e8a:	462a      	mov	r2, r5
 8012e8c:	ab0a      	add	r3, sp, #40	; 0x28
 8012e8e:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8012e92:	6851      	ldr	r1, [r2, #4]
 8012e94:	c303      	stmia	r3!, {r0, r1}
 8012e96:	e7a9      	b.n	8012dec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8012e98:	a807      	add	r0, sp, #28
 8012e9a:	f007 fe2f 	bl	801aafc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012e9e:	4606      	mov	r6, r0
 8012ea0:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8012ea2:	6803      	ldr	r3, [r0, #0]
 8012ea4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012ea6:	4798      	blx	r3
 8012ea8:	4286      	cmp	r6, r0
 8012eaa:	d1b8      	bne.n	8012e1e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8012eac:	f7f8 fde2 	bl	800ba74 <_ZN8touchgfx3HAL3lcdEv>
 8012eb0:	6803      	ldr	r3, [r0, #0]
 8012eb2:	4606      	mov	r6, r0
 8012eb4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012eb6:	9305      	str	r3, [sp, #20]
 8012eb8:	a807      	add	r0, sp, #28
 8012eba:	f007 fe1f 	bl	801aafc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012ebe:	9b05      	ldr	r3, [sp, #20]
 8012ec0:	4601      	mov	r1, r0
 8012ec2:	4630      	mov	r0, r6
 8012ec4:	4798      	blx	r3
 8012ec6:	f080 0001 	eor.w	r0, r0, #1
 8012eca:	b2c0      	uxtb	r0, r0
 8012ecc:	e7a8      	b.n	8012e20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8012ece:	bf00      	nop
 8012ed0:	2000e1b4 	.word	0x2000e1b4
 8012ed4:	2000e1b6 	.word	0x2000e1b6
 8012ed8:	2000e1b8 	.word	0x2000e1b8
 8012edc:	2000e1ba 	.word	0x2000e1ba
 8012ee0:	2000e1bc 	.word	0x2000e1bc

08012ee4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8012ee4:	b510      	push	{r4, lr}
 8012ee6:	4b07      	ldr	r3, [pc, #28]	; (8012f04 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8012ee8:	781b      	ldrb	r3, [r3, #0]
 8012eea:	4604      	mov	r4, r0
 8012eec:	b13b      	cbz	r3, 8012efe <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8012eee:	6803      	ldr	r3, [r0, #0]
 8012ef0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012ef2:	4798      	blx	r3
 8012ef4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8012ef6:	4283      	cmp	r3, r0
 8012ef8:	d101      	bne.n	8012efe <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8012efa:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8012efc:	bd10      	pop	{r4, pc}
 8012efe:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012f00:	e7fc      	b.n	8012efc <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8012f02:	bf00      	nop
 8012f04:	2000e1be 	.word	0x2000e1be

08012f08 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8012f08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012f0c:	b08a      	sub	sp, #40	; 0x28
 8012f0e:	461d      	mov	r5, r3
 8012f10:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8012f14:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012f18:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012f1c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012f20:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012f24:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012f28:	2400      	movs	r4, #0
 8012f2a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012f2e:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8012f32:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012f36:	4690      	mov	r8, r2
 8012f38:	4607      	mov	r7, r0
 8012f3a:	9404      	str	r4, [sp, #16]
 8012f3c:	f88d 4020 	strb.w	r4, [sp, #32]
 8012f40:	f7ff ffd0 	bl	8012ee4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012f44:	fb06 8505 	mla	r5, r6, r5, r8
 8012f48:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012f4c:	6878      	ldr	r0, [r7, #4]
 8012f4e:	9505      	str	r5, [sp, #20]
 8012f50:	f8ad 601e 	strh.w	r6, [sp, #30]
 8012f54:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012f58:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8012f5c:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8012f60:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8012f64:	6803      	ldr	r3, [r0, #0]
 8012f66:	a901      	add	r1, sp, #4
 8012f68:	685b      	ldr	r3, [r3, #4]
 8012f6a:	4798      	blx	r3
 8012f6c:	b00a      	add	sp, #40	; 0x28
 8012f6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012f72 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8012f72:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012f76:	b08b      	sub	sp, #44	; 0x2c
 8012f78:	2400      	movs	r4, #0
 8012f7a:	461d      	mov	r5, r3
 8012f7c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8012f80:	4688      	mov	r8, r1
 8012f82:	4691      	mov	r9, r2
 8012f84:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8012f88:	9404      	str	r4, [sp, #16]
 8012f8a:	4607      	mov	r7, r0
 8012f8c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8012f90:	f7ff ffa8 	bl	8012ee4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012f94:	fb06 9505 	mla	r5, r6, r5, r9
 8012f98:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012f9c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012fa0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012fa4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8012fa8:	6878      	ldr	r0, [r7, #4]
 8012faa:	9505      	str	r5, [sp, #20]
 8012fac:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012fb0:	f8ad 401c 	strh.w	r4, [sp, #28]
 8012fb4:	f8ad 601e 	strh.w	r6, [sp, #30]
 8012fb8:	f8cd 8010 	str.w	r8, [sp, #16]
 8012fbc:	f8ad 4020 	strh.w	r4, [sp, #32]
 8012fc0:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012fc4:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8012fc8:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8012fcc:	6803      	ldr	r3, [r0, #0]
 8012fce:	a901      	add	r1, sp, #4
 8012fd0:	685b      	ldr	r3, [r3, #4]
 8012fd2:	4798      	blx	r3
 8012fd4:	b00b      	add	sp, #44	; 0x2c
 8012fd6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08012fdc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8012fdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012fe0:	b08a      	sub	sp, #40	; 0x28
 8012fe2:	4698      	mov	r8, r3
 8012fe4:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8012fe8:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8012fec:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8012ff0:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8012ff4:	2300      	movs	r3, #0
 8012ff6:	2d0b      	cmp	r5, #11
 8012ff8:	4606      	mov	r6, r0
 8012ffa:	9304      	str	r3, [sp, #16]
 8012ffc:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8013000:	d138      	bne.n	8013074 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8013002:	2380      	movs	r3, #128	; 0x80
 8013004:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013008:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801300c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013010:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013014:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013018:	f88d 0020 	strb.w	r0, [sp, #32]
 801301c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013020:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013024:	4630      	mov	r0, r6
 8013026:	9203      	str	r2, [sp, #12]
 8013028:	f7ff ff5c 	bl	8012ee4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801302c:	2c0b      	cmp	r4, #11
 801302e:	bf98      	it	ls
 8013030:	4b1b      	ldrls	r3, [pc, #108]	; (80130a0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8013032:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8013036:	bf98      	it	ls
 8013038:	5d19      	ldrbls	r1, [r3, r4]
 801303a:	f8ad 701e 	strh.w	r7, [sp, #30]
 801303e:	bf88      	it	hi
 8013040:	2100      	movhi	r1, #0
 8013042:	fb02 8307 	mla	r3, r2, r7, r8
 8013046:	10c9      	asrs	r1, r1, #3
 8013048:	fb01 0003 	mla	r0, r1, r3, r0
 801304c:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8013050:	9005      	str	r0, [sp, #20]
 8013052:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013056:	6870      	ldr	r0, [r6, #4]
 8013058:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 801305c:	2300      	movs	r3, #0
 801305e:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013062:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8013066:	6803      	ldr	r3, [r0, #0]
 8013068:	a901      	add	r1, sp, #4
 801306a:	685b      	ldr	r3, [r3, #4]
 801306c:	4798      	blx	r3
 801306e:	b00a      	add	sp, #40	; 0x28
 8013070:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013074:	2d02      	cmp	r5, #2
 8013076:	d109      	bne.n	801308c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8013078:	28ff      	cmp	r0, #255	; 0xff
 801307a:	d105      	bne.n	8013088 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 801307c:	f1bc 0f00 	cmp.w	ip, #0
 8013080:	bf14      	ite	ne
 8013082:	2340      	movne	r3, #64	; 0x40
 8013084:	2320      	moveq	r3, #32
 8013086:	e7bd      	b.n	8013004 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013088:	2340      	movs	r3, #64	; 0x40
 801308a:	e7bb      	b.n	8013004 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801308c:	28ff      	cmp	r0, #255	; 0xff
 801308e:	d105      	bne.n	801309c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8013090:	f1bc 0f00 	cmp.w	ip, #0
 8013094:	bf14      	ite	ne
 8013096:	2304      	movne	r3, #4
 8013098:	2301      	moveq	r3, #1
 801309a:	e7b3      	b.n	8013004 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801309c:	2304      	movs	r3, #4
 801309e:	e7b1      	b.n	8013004 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80130a0:	0802c694 	.word	0x0802c694

080130a4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 80130a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80130a8:	b08b      	sub	sp, #44	; 0x2c
 80130aa:	461d      	mov	r5, r3
 80130ac:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 80130b0:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 80130b4:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 80130b8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80130bc:	bf14      	ite	ne
 80130be:	2308      	movne	r3, #8
 80130c0:	2302      	moveq	r3, #2
 80130c2:	2400      	movs	r4, #0
 80130c4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80130c8:	4688      	mov	r8, r1
 80130ca:	4693      	mov	fp, r2
 80130cc:	9404      	str	r4, [sp, #16]
 80130ce:	4607      	mov	r7, r0
 80130d0:	f7ff ff08 	bl	8012ee4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80130d4:	2e0b      	cmp	r6, #11
 80130d6:	bf98      	it	ls
 80130d8:	4b15      	ldrls	r3, [pc, #84]	; (8013130 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 80130da:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80130de:	bf98      	it	ls
 80130e0:	5d9c      	ldrbls	r4, [r3, r6]
 80130e2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80130e6:	f8ad 3018 	strh.w	r3, [sp, #24]
 80130ea:	fb05 b50a 	mla	r5, r5, sl, fp
 80130ee:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80130f2:	f8ad 301a 	strh.w	r3, [sp, #26]
 80130f6:	10e4      	asrs	r4, r4, #3
 80130f8:	fb04 0405 	mla	r4, r4, r5, r0
 80130fc:	2300      	movs	r3, #0
 80130fe:	6878      	ldr	r0, [r7, #4]
 8013100:	9405      	str	r4, [sp, #20]
 8013102:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013106:	f8ad a01e 	strh.w	sl, [sp, #30]
 801310a:	f8cd 8010 	str.w	r8, [sp, #16]
 801310e:	f88d 9020 	strb.w	r9, [sp, #32]
 8013112:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8013116:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801311a:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 801311e:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8013122:	6803      	ldr	r3, [r0, #0]
 8013124:	a901      	add	r1, sp, #4
 8013126:	685b      	ldr	r3, [r3, #4]
 8013128:	4798      	blx	r3
 801312a:	b00b      	add	sp, #44	; 0x2c
 801312c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013130:	0802c694 	.word	0x0802c694

08013134 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8013134:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013138:	461e      	mov	r6, r3
 801313a:	4b0a      	ldr	r3, [pc, #40]	; (8013164 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 801313c:	460f      	mov	r7, r1
 801313e:	881d      	ldrh	r5, [r3, #0]
 8013140:	4690      	mov	r8, r2
 8013142:	f7f8 fc97 	bl	800ba74 <_ZN8touchgfx3HAL3lcdEv>
 8013146:	6803      	ldr	r3, [r0, #0]
 8013148:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801314a:	4798      	blx	r3
 801314c:	280b      	cmp	r0, #11
 801314e:	bf9a      	itte	ls
 8013150:	4b05      	ldrls	r3, [pc, #20]	; (8013168 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8013152:	5c1c      	ldrbls	r4, [r3, r0]
 8013154:	2400      	movhi	r4, #0
 8013156:	fb08 7005 	mla	r0, r8, r5, r7
 801315a:	10e4      	asrs	r4, r4, #3
 801315c:	fb04 6000 	mla	r0, r4, r0, r6
 8013160:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013164:	2000e1ba 	.word	0x2000e1ba
 8013168:	0802c694 	.word	0x0802c694

0801316c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 801316c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801316e:	b08b      	sub	sp, #44	; 0x2c
 8013170:	461f      	mov	r7, r3
 8013172:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013176:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801317a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801317e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013182:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013186:	f8ad 301a 	strh.w	r3, [sp, #26]
 801318a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801318e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013192:	2500      	movs	r5, #0
 8013194:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013198:	f88d 3020 	strb.w	r3, [sp, #32]
 801319c:	4604      	mov	r4, r0
 801319e:	4616      	mov	r6, r2
 80131a0:	9504      	str	r5, [sp, #16]
 80131a2:	f7ff fe9f 	bl	8012ee4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80131a6:	463a      	mov	r2, r7
 80131a8:	4631      	mov	r1, r6
 80131aa:	4603      	mov	r3, r0
 80131ac:	4620      	mov	r0, r4
 80131ae:	f7ff ffc1 	bl	8013134 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80131b2:	4b0e      	ldr	r3, [pc, #56]	; (80131ec <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 80131b4:	9005      	str	r0, [sp, #20]
 80131b6:	881b      	ldrh	r3, [r3, #0]
 80131b8:	f8ad 301e 	strh.w	r3, [sp, #30]
 80131bc:	f7f8 fc5a 	bl	800ba74 <_ZN8touchgfx3HAL3lcdEv>
 80131c0:	6803      	ldr	r3, [r0, #0]
 80131c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80131c4:	4798      	blx	r3
 80131c6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80131c8:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 80131cc:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80131d0:	9304      	str	r3, [sp, #16]
 80131d2:	6860      	ldr	r0, [r4, #4]
 80131d4:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80131d8:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80131dc:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 80131e0:	6803      	ldr	r3, [r0, #0]
 80131e2:	a901      	add	r1, sp, #4
 80131e4:	685b      	ldr	r3, [r3, #4]
 80131e6:	4798      	blx	r3
 80131e8:	b00b      	add	sp, #44	; 0x2c
 80131ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80131ec:	2000e1ba 	.word	0x2000e1ba

080131f0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80131f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80131f2:	b08d      	sub	sp, #52	; 0x34
 80131f4:	466b      	mov	r3, sp
 80131f6:	e883 0006 	stmia.w	r3, {r1, r2}
 80131fa:	2300      	movs	r3, #0
 80131fc:	9306      	str	r3, [sp, #24]
 80131fe:	6803      	ldr	r3, [r0, #0]
 8013200:	f8bd 6000 	ldrh.w	r6, [sp]
 8013204:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013206:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 801320a:	2501      	movs	r5, #1
 801320c:	9503      	str	r5, [sp, #12]
 801320e:	4604      	mov	r4, r0
 8013210:	4798      	blx	r3
 8013212:	463a      	mov	r2, r7
 8013214:	4631      	mov	r1, r6
 8013216:	4603      	mov	r3, r0
 8013218:	4620      	mov	r0, r4
 801321a:	f7ff ff8b 	bl	8013134 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801321e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8013220:	9307      	str	r3, [sp, #28]
 8013222:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8013226:	f8ad 3020 	strh.w	r3, [sp, #32]
 801322a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801322e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8013232:	4b0f      	ldr	r3, [pc, #60]	; (8013270 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8013234:	9004      	str	r0, [sp, #16]
 8013236:	881b      	ldrh	r3, [r3, #0]
 8013238:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 801323c:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8013240:	f7f8 fc18 	bl	800ba74 <_ZN8touchgfx3HAL3lcdEv>
 8013244:	6803      	ldr	r3, [r0, #0]
 8013246:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013248:	4798      	blx	r3
 801324a:	23ff      	movs	r3, #255	; 0xff
 801324c:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8013250:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013254:	6860      	ldr	r0, [r4, #4]
 8013256:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 801325a:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801325e:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8013262:	6803      	ldr	r3, [r0, #0]
 8013264:	a903      	add	r1, sp, #12
 8013266:	685b      	ldr	r3, [r3, #4]
 8013268:	4798      	blx	r3
 801326a:	6c60      	ldr	r0, [r4, #68]	; 0x44
 801326c:	b00d      	add	sp, #52	; 0x34
 801326e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013270:	2000e1ba 	.word	0x2000e1ba

08013274 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8013274:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013278:	b08c      	sub	sp, #48	; 0x30
 801327a:	461e      	mov	r6, r3
 801327c:	466d      	mov	r5, sp
 801327e:	2300      	movs	r3, #0
 8013280:	e885 0006 	stmia.w	r5, {r1, r2}
 8013284:	9306      	str	r3, [sp, #24]
 8013286:	6803      	ldr	r3, [r0, #0]
 8013288:	f8bd 7000 	ldrh.w	r7, [sp]
 801328c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801328e:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8013292:	2501      	movs	r5, #1
 8013294:	9503      	str	r5, [sp, #12]
 8013296:	4604      	mov	r4, r0
 8013298:	4798      	blx	r3
 801329a:	4642      	mov	r2, r8
 801329c:	4639      	mov	r1, r7
 801329e:	4603      	mov	r3, r0
 80132a0:	4620      	mov	r0, r4
 80132a2:	f7ff ff47 	bl	8013134 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80132a6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80132aa:	f8ad 3020 	strh.w	r3, [sp, #32]
 80132ae:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80132b2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80132b6:	4b11      	ldr	r3, [pc, #68]	; (80132fc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 80132b8:	9004      	str	r0, [sp, #16]
 80132ba:	881b      	ldrh	r3, [r3, #0]
 80132bc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80132c0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80132c2:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80132c6:	9607      	str	r6, [sp, #28]
 80132c8:	f7f8 fbd4 	bl	800ba74 <_ZN8touchgfx3HAL3lcdEv>
 80132cc:	6803      	ldr	r3, [r0, #0]
 80132ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80132d0:	4798      	blx	r3
 80132d2:	23ff      	movs	r3, #255	; 0xff
 80132d4:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80132d8:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80132dc:	6860      	ldr	r0, [r4, #4]
 80132de:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80132e2:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80132e6:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80132ea:	6803      	ldr	r3, [r0, #0]
 80132ec:	a903      	add	r1, sp, #12
 80132ee:	685b      	ldr	r3, [r3, #4]
 80132f0:	4798      	blx	r3
 80132f2:	4630      	mov	r0, r6
 80132f4:	b00c      	add	sp, #48	; 0x30
 80132f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80132fa:	bf00      	nop
 80132fc:	2000e1ba 	.word	0x2000e1ba

08013300 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8013300:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013302:	b085      	sub	sp, #20
 8013304:	ac02      	add	r4, sp, #8
 8013306:	e884 0006 	stmia.w	r4, {r1, r2}
 801330a:	4605      	mov	r5, r0
 801330c:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8013310:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8013314:	f7ff fde6 	bl	8012ee4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013318:	463a      	mov	r2, r7
 801331a:	4603      	mov	r3, r0
 801331c:	4631      	mov	r1, r6
 801331e:	4628      	mov	r0, r5
 8013320:	f7ff ff08 	bl	8013134 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013324:	4a05      	ldr	r2, [pc, #20]	; (801333c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8013326:	682b      	ldr	r3, [r5, #0]
 8013328:	8812      	ldrh	r2, [r2, #0]
 801332a:	9200      	str	r2, [sp, #0]
 801332c:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801332e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8013332:	4603      	mov	r3, r0
 8013334:	4628      	mov	r0, r5
 8013336:	47b0      	blx	r6
 8013338:	b005      	add	sp, #20
 801333a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801333c:	2000e1ba 	.word	0x2000e1ba

08013340 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8013340:	b570      	push	{r4, r5, r6, lr}
 8013342:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8013346:	4604      	mov	r4, r0
 8013348:	b19b      	cbz	r3, 8013372 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 801334a:	2002      	movs	r0, #2
 801334c:	f7fc ff76 	bl	801023c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8013350:	2300      	movs	r3, #0
 8013352:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8013356:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 801335a:	6823      	ldr	r3, [r4, #0]
 801335c:	4620      	mov	r0, r4
 801335e:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8013362:	f7ff fdbf 	bl	8012ee4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013366:	462b      	mov	r3, r5
 8013368:	4601      	mov	r1, r0
 801336a:	4620      	mov	r0, r4
 801336c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013370:	4718      	bx	r3
 8013372:	bd70      	pop	{r4, r5, r6, pc}

08013374 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8013374:	b538      	push	{r3, r4, r5, lr}
 8013376:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 801337a:	428b      	cmp	r3, r1
 801337c:	4604      	mov	r4, r0
 801337e:	460d      	mov	r5, r1
 8013380:	d006      	beq.n	8013390 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8013382:	6803      	ldr	r3, [r0, #0]
 8013384:	b929      	cbnz	r1, 8013392 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8013386:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801338a:	4798      	blx	r3
 801338c:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8013390:	bd38      	pop	{r3, r4, r5, pc}
 8013392:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8013396:	e7f8      	b.n	801338a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08013398 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8013398:	b510      	push	{r4, lr}
 801339a:	4b0d      	ldr	r3, [pc, #52]	; (80133d0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 801339c:	781b      	ldrb	r3, [r3, #0]
 801339e:	4604      	mov	r4, r0
 80133a0:	b95b      	cbnz	r3, 80133ba <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80133a2:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 80133a6:	2b02      	cmp	r3, #2
 80133a8:	d007      	beq.n	80133ba <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80133aa:	6840      	ldr	r0, [r0, #4]
 80133ac:	f000 f928 	bl	8013600 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80133b0:	b118      	cbz	r0, 80133ba <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80133b2:	6862      	ldr	r2, [r4, #4]
 80133b4:	7a53      	ldrb	r3, [r2, #9]
 80133b6:	2b00      	cmp	r3, #0
 80133b8:	d0fc      	beq.n	80133b4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80133ba:	f7fd f9e9 	bl	8010790 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80133be:	4620      	mov	r0, r4
 80133c0:	2100      	movs	r1, #0
 80133c2:	f7ff ffd7 	bl	8013374 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80133c6:	4620      	mov	r0, r4
 80133c8:	f7ff fd8c 	bl	8012ee4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80133cc:	bd10      	pop	{r4, pc}
 80133ce:	bf00      	nop
 80133d0:	2000e1be 	.word	0x2000e1be

080133d4 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80133d4:	b570      	push	{r4, r5, r6, lr}
 80133d6:	4604      	mov	r4, r0
 80133d8:	6803      	ldr	r3, [r0, #0]
 80133da:	b919      	cbnz	r1, 80133e4 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80133dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80133de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80133e2:	4718      	bx	r3
 80133e4:	2200      	movs	r2, #0
 80133e6:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 80133ea:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 80133ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80133f0:	4798      	blx	r3
 80133f2:	6863      	ldr	r3, [r4, #4]
 80133f4:	2101      	movs	r1, #1
 80133f6:	4605      	mov	r5, r0
 80133f8:	7299      	strb	r1, [r3, #10]
 80133fa:	4620      	mov	r0, r4
 80133fc:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8013400:	f7ff ffb8 	bl	8013374 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8013404:	4628      	mov	r0, r5
 8013406:	bd70      	pop	{r4, r5, r6, pc}

08013408 <_ZN8touchgfx13DMA_Interface5flushEv>:
 8013408:	6803      	ldr	r3, [r0, #0]
 801340a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801340c:	4718      	bx	r3

0801340e <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 801340e:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8013412:	1a13      	subs	r3, r2, r0
 8013414:	4258      	negs	r0, r3
 8013416:	4158      	adcs	r0, r3
 8013418:	4770      	bx	lr

0801341a <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 801341a:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 801341e:	1a9b      	subs	r3, r3, r2
 8013420:	2b00      	cmp	r3, #0
 8013422:	bfdc      	itt	le
 8013424:	6882      	ldrle	r2, [r0, #8]
 8013426:	189b      	addle	r3, r3, r2
 8013428:	2b01      	cmp	r3, #1
 801342a:	bfcc      	ite	gt
 801342c:	2000      	movgt	r0, #0
 801342e:	2001      	movle	r0, #1
 8013430:	4770      	bx	lr

08013432 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8013432:	6902      	ldr	r2, [r0, #16]
 8013434:	6843      	ldr	r3, [r0, #4]
 8013436:	2024      	movs	r0, #36	; 0x24
 8013438:	fb00 3002 	mla	r0, r0, r2, r3
 801343c:	4770      	bx	lr

0801343e <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 801343e:	6803      	ldr	r3, [r0, #0]
 8013440:	691b      	ldr	r3, [r3, #16]
 8013442:	4718      	bx	r3

08013444 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8013444:	b570      	push	{r4, r5, r6, lr}
 8013446:	2301      	movs	r3, #1
 8013448:	7203      	strb	r3, [r0, #8]
 801344a:	4604      	mov	r4, r0
 801344c:	6840      	ldr	r0, [r0, #4]
 801344e:	6803      	ldr	r3, [r0, #0]
 8013450:	699b      	ldr	r3, [r3, #24]
 8013452:	4798      	blx	r3
 8013454:	6803      	ldr	r3, [r0, #0]
 8013456:	2b40      	cmp	r3, #64	; 0x40
 8013458:	4605      	mov	r5, r0
 801345a:	d00c      	beq.n	8013476 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801345c:	d810      	bhi.n	8013480 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 801345e:	2b04      	cmp	r3, #4
 8013460:	d01d      	beq.n	801349e <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8013462:	d804      	bhi.n	801346e <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8013464:	2b01      	cmp	r3, #1
 8013466:	d006      	beq.n	8013476 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013468:	2b02      	cmp	r3, #2
 801346a:	d02c      	beq.n	80134c6 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 801346c:	bd70      	pop	{r4, r5, r6, pc}
 801346e:	2b08      	cmp	r3, #8
 8013470:	d01d      	beq.n	80134ae <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8013472:	2b20      	cmp	r3, #32
 8013474:	d1fa      	bne.n	801346c <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8013476:	6823      	ldr	r3, [r4, #0]
 8013478:	4620      	mov	r0, r4
 801347a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801347c:	4798      	blx	r3
 801347e:	e013      	b.n	80134a8 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8013480:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8013484:	d0f7      	beq.n	8013476 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013486:	d804      	bhi.n	8013492 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8013488:	2b80      	cmp	r3, #128	; 0x80
 801348a:	d0f4      	beq.n	8013476 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801348c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8013490:	e7f0      	b.n	8013474 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8013492:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8013496:	d0ee      	beq.n	8013476 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013498:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 801349c:	e7e5      	b.n	801346a <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 801349e:	6823      	ldr	r3, [r4, #0]
 80134a0:	7f01      	ldrb	r1, [r0, #28]
 80134a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80134a4:	4620      	mov	r0, r4
 80134a6:	4798      	blx	r3
 80134a8:	6823      	ldr	r3, [r4, #0]
 80134aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80134ac:	e006      	b.n	80134bc <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 80134ae:	6823      	ldr	r3, [r4, #0]
 80134b0:	7f01      	ldrb	r1, [r0, #28]
 80134b2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80134b4:	4620      	mov	r0, r4
 80134b6:	4798      	blx	r3
 80134b8:	6823      	ldr	r3, [r4, #0]
 80134ba:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80134bc:	4629      	mov	r1, r5
 80134be:	4620      	mov	r0, r4
 80134c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80134c4:	4718      	bx	r3
 80134c6:	6823      	ldr	r3, [r4, #0]
 80134c8:	4620      	mov	r0, r4
 80134ca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80134cc:	4798      	blx	r3
 80134ce:	e7f3      	b.n	80134b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

080134d0 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80134d0:	4770      	bx	lr

080134d2 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80134d2:	4770      	bx	lr

080134d4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80134d4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80134d8:	1ad2      	subs	r2, r2, r3
 80134da:	2a00      	cmp	r2, #0
 80134dc:	b510      	push	{r4, lr}
 80134de:	bfdc      	itt	le
 80134e0:	6884      	ldrle	r4, [r0, #8]
 80134e2:	1912      	addle	r2, r2, r4
 80134e4:	2a01      	cmp	r2, #1
 80134e6:	dd16      	ble.n	8013516 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80134e8:	6842      	ldr	r2, [r0, #4]
 80134ea:	2424      	movs	r4, #36	; 0x24
 80134ec:	fb04 2303 	mla	r3, r4, r3, r2
 80134f0:	f101 0220 	add.w	r2, r1, #32
 80134f4:	f851 4b04 	ldr.w	r4, [r1], #4
 80134f8:	f843 4b04 	str.w	r4, [r3], #4
 80134fc:	4291      	cmp	r1, r2
 80134fe:	d1f9      	bne.n	80134f4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8013500:	780a      	ldrb	r2, [r1, #0]
 8013502:	701a      	strb	r2, [r3, #0]
 8013504:	68c3      	ldr	r3, [r0, #12]
 8013506:	6882      	ldr	r2, [r0, #8]
 8013508:	f3bf 8f5b 	dmb	ish
 801350c:	3301      	adds	r3, #1
 801350e:	429a      	cmp	r2, r3
 8013510:	bfd8      	it	le
 8013512:	1a9b      	suble	r3, r3, r2
 8013514:	60c3      	str	r3, [r0, #12]
 8013516:	bd10      	pop	{r4, pc}

08013518 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8013518:	6903      	ldr	r3, [r0, #16]
 801351a:	6882      	ldr	r2, [r0, #8]
 801351c:	f3bf 8f5b 	dmb	ish
 8013520:	3301      	adds	r3, #1
 8013522:	429a      	cmp	r2, r3
 8013524:	bfd8      	it	le
 8013526:	1a9b      	suble	r3, r3, r2
 8013528:	6103      	str	r3, [r0, #16]
 801352a:	4770      	bx	lr

0801352c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 801352c:	b570      	push	{r4, r5, r6, lr}
 801352e:	4604      	mov	r4, r0
 8013530:	460e      	mov	r6, r1
 8013532:	6860      	ldr	r0, [r4, #4]
 8013534:	6803      	ldr	r3, [r0, #0]
 8013536:	685b      	ldr	r3, [r3, #4]
 8013538:	4798      	blx	r3
 801353a:	2800      	cmp	r0, #0
 801353c:	d1f9      	bne.n	8013532 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 801353e:	4d0d      	ldr	r5, [pc, #52]	; (8013574 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8013540:	6828      	ldr	r0, [r5, #0]
 8013542:	6803      	ldr	r3, [r0, #0]
 8013544:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013546:	4798      	blx	r3
 8013548:	f7fd f944 	bl	80107d4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 801354c:	6828      	ldr	r0, [r5, #0]
 801354e:	2101      	movs	r1, #1
 8013550:	f7ff ff10 	bl	8013374 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8013554:	6860      	ldr	r0, [r4, #4]
 8013556:	6803      	ldr	r3, [r0, #0]
 8013558:	4631      	mov	r1, r6
 801355a:	689b      	ldr	r3, [r3, #8]
 801355c:	4798      	blx	r3
 801355e:	6823      	ldr	r3, [r4, #0]
 8013560:	4620      	mov	r0, r4
 8013562:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013564:	4798      	blx	r3
 8013566:	6828      	ldr	r0, [r5, #0]
 8013568:	6803      	ldr	r3, [r0, #0]
 801356a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801356e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8013570:	4718      	bx	r3
 8013572:	bf00      	nop
 8013574:	2000e1c0 	.word	0x2000e1c0

08013578 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8013578:	b508      	push	{r3, lr}
 801357a:	f7fd f909 	bl	8010790 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801357e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8013582:	f7fd b91b 	b.w	80107bc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08013586 <_ZN8touchgfx13DMA_Interface5startEv>:
 8013586:	b510      	push	{r4, lr}
 8013588:	4604      	mov	r4, r0
 801358a:	6840      	ldr	r0, [r0, #4]
 801358c:	6803      	ldr	r3, [r0, #0]
 801358e:	681b      	ldr	r3, [r3, #0]
 8013590:	4798      	blx	r3
 8013592:	b948      	cbnz	r0, 80135a8 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8013594:	7a63      	ldrb	r3, [r4, #9]
 8013596:	b13b      	cbz	r3, 80135a8 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8013598:	7a23      	ldrb	r3, [r4, #8]
 801359a:	b92b      	cbnz	r3, 80135a8 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801359c:	6823      	ldr	r3, [r4, #0]
 801359e:	4620      	mov	r0, r4
 80135a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80135a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80135a6:	4718      	bx	r3
 80135a8:	bd10      	pop	{r4, pc}

080135aa <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80135aa:	b570      	push	{r4, r5, r6, lr}
 80135ac:	4604      	mov	r4, r0
 80135ae:	6840      	ldr	r0, [r0, #4]
 80135b0:	6803      	ldr	r3, [r0, #0]
 80135b2:	681b      	ldr	r3, [r3, #0]
 80135b4:	4798      	blx	r3
 80135b6:	4605      	mov	r5, r0
 80135b8:	b930      	cbnz	r0, 80135c8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80135ba:	7a23      	ldrb	r3, [r4, #8]
 80135bc:	b123      	cbz	r3, 80135c8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80135be:	6860      	ldr	r0, [r4, #4]
 80135c0:	6803      	ldr	r3, [r0, #0]
 80135c2:	695b      	ldr	r3, [r3, #20]
 80135c4:	4798      	blx	r3
 80135c6:	7225      	strb	r5, [r4, #8]
 80135c8:	6860      	ldr	r0, [r4, #4]
 80135ca:	6803      	ldr	r3, [r0, #0]
 80135cc:	681b      	ldr	r3, [r3, #0]
 80135ce:	4798      	blx	r3
 80135d0:	b928      	cbnz	r0, 80135de <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80135d2:	6823      	ldr	r3, [r4, #0]
 80135d4:	4620      	mov	r0, r4
 80135d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80135d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80135dc:	4718      	bx	r3
 80135de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80135e2:	f7fd b903 	b.w	80107ec <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

080135e8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80135e8:	b510      	push	{r4, lr}
 80135ea:	4c04      	ldr	r4, [pc, #16]	; (80135fc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80135ec:	6082      	str	r2, [r0, #8]
 80135ee:	2200      	movs	r2, #0
 80135f0:	e9c0 4100 	strd	r4, r1, [r0]
 80135f4:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80135f8:	bd10      	pop	{r4, pc}
 80135fa:	bf00      	nop
 80135fc:	0802c7d0 	.word	0x0802c7d0

08013600 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8013600:	6840      	ldr	r0, [r0, #4]
 8013602:	6803      	ldr	r3, [r0, #0]
 8013604:	681b      	ldr	r3, [r3, #0]
 8013606:	4718      	bx	r3

08013608 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8013608:	b508      	push	{r3, lr}
 801360a:	4b05      	ldr	r3, [pc, #20]	; (8013620 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 801360c:	6818      	ldr	r0, [r3, #0]
 801360e:	6803      	ldr	r3, [r0, #0]
 8013610:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8013614:	4798      	blx	r3
 8013616:	1e43      	subs	r3, r0, #1
 8013618:	4258      	negs	r0, r3
 801361a:	4158      	adcs	r0, r3
 801361c:	bd08      	pop	{r3, pc}
 801361e:	bf00      	nop
 8013620:	2000e1c0 	.word	0x2000e1c0

08013624 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8013624:	b430      	push	{r4, r5}
 8013626:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 801362a:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 801362e:	8a02      	ldrh	r2, [r0, #16]
 8013630:	9202      	str	r2, [sp, #8]
 8013632:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8013636:	68c2      	ldr	r2, [r0, #12]
 8013638:	4629      	mov	r1, r5
 801363a:	4620      	mov	r0, r4
 801363c:	bc30      	pop	{r4, r5}
 801363e:	f7fd bf8f 	b.w	8011560 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08013642 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8013642:	f7fd bf85 	b.w	8011550 <_ZN8touchgfx5paint8tearDownEv>

08013646 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
 8013646:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 801364a:	4770      	bx	lr

0801364c <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:
 801364c:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8013650:	4770      	bx	lr

08013652 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
 8013652:	b510      	push	{r4, lr}
 8013654:	2200      	movs	r2, #0
 8013656:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 801365a:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 801365e:	8002      	strh	r2, [r0, #0]
 8013660:	8042      	strh	r2, [r0, #2]
 8013662:	8084      	strh	r4, [r0, #4]
 8013664:	80c1      	strh	r1, [r0, #6]
 8013666:	bd10      	pop	{r4, pc}

08013668 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
 8013668:	2200      	movs	r2, #0
 801366a:	8002      	strh	r2, [r0, #0]
 801366c:	8042      	strh	r2, [r0, #2]
 801366e:	8082      	strh	r2, [r0, #4]
 8013670:	80c2      	strh	r2, [r0, #6]
 8013672:	4770      	bx	lr

08013674 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8013674:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8013676:	6803      	ldr	r3, [r0, #0]
 8013678:	460d      	mov	r5, r1
 801367a:	4604      	mov	r4, r0
 801367c:	4601      	mov	r1, r0
 801367e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8013680:	a802      	add	r0, sp, #8
 8013682:	4798      	blx	r3
 8013684:	6828      	ldr	r0, [r5, #0]
 8013686:	6869      	ldr	r1, [r5, #4]
 8013688:	466b      	mov	r3, sp
 801368a:	c303      	stmia	r3!, {r0, r1}
 801368c:	4668      	mov	r0, sp
 801368e:	4619      	mov	r1, r3
 8013690:	f7fe ffa4 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 8013694:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8013696:	b188      	cbz	r0, 80136bc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8013698:	6803      	ldr	r3, [r0, #0]
 801369a:	1d21      	adds	r1, r4, #4
 801369c:	68db      	ldr	r3, [r3, #12]
 801369e:	4798      	blx	r3
 80136a0:	b160      	cbz	r0, 80136bc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80136a2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80136a6:	2b00      	cmp	r3, #0
 80136a8:	dd08      	ble.n	80136bc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80136aa:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 80136ae:	2d00      	cmp	r5, #0
 80136b0:	dd04      	ble.n	80136bc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80136b2:	4a2b      	ldr	r2, [pc, #172]	; (8013760 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 80136b4:	7812      	ldrb	r2, [r2, #0]
 80136b6:	b11a      	cbz	r2, 80136c0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 80136b8:	2a01      	cmp	r2, #1
 80136ba:	d029      	beq.n	8013710 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 80136bc:	b004      	add	sp, #16
 80136be:	bd70      	pop	{r4, r5, r6, pc}
 80136c0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80136c4:	441d      	add	r5, r3
 80136c6:	b2ad      	uxth	r5, r5
 80136c8:	b22e      	sxth	r6, r5
 80136ca:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80136ce:	42b3      	cmp	r3, r6
 80136d0:	daf4      	bge.n	80136bc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80136d2:	6823      	ldr	r3, [r4, #0]
 80136d4:	4669      	mov	r1, sp
 80136d6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80136d8:	4620      	mov	r0, r4
 80136da:	4798      	blx	r3
 80136dc:	b940      	cbnz	r0, 80136f0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80136de:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80136e2:	2b01      	cmp	r3, #1
 80136e4:	d004      	beq.n	80136f0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80136e6:	3301      	adds	r3, #1
 80136e8:	105b      	asrs	r3, r3, #1
 80136ea:	f8ad 3006 	strh.w	r3, [sp, #6]
 80136ee:	e7f0      	b.n	80136d2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 80136f0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80136f4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80136f8:	4413      	add	r3, r2
 80136fa:	b29b      	uxth	r3, r3
 80136fc:	441a      	add	r2, r3
 80136fe:	b212      	sxth	r2, r2
 8013700:	4296      	cmp	r6, r2
 8013702:	f8ad 3002 	strh.w	r3, [sp, #2]
 8013706:	dae0      	bge.n	80136ca <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8013708:	1aeb      	subs	r3, r5, r3
 801370a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801370e:	e7dc      	b.n	80136ca <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8013710:	f8bd 5000 	ldrh.w	r5, [sp]
 8013714:	441d      	add	r5, r3
 8013716:	b2ad      	uxth	r5, r5
 8013718:	b22e      	sxth	r6, r5
 801371a:	f9bd 3000 	ldrsh.w	r3, [sp]
 801371e:	42b3      	cmp	r3, r6
 8013720:	dacc      	bge.n	80136bc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8013722:	6823      	ldr	r3, [r4, #0]
 8013724:	4669      	mov	r1, sp
 8013726:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8013728:	4620      	mov	r0, r4
 801372a:	4798      	blx	r3
 801372c:	b940      	cbnz	r0, 8013740 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801372e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8013732:	2b01      	cmp	r3, #1
 8013734:	d004      	beq.n	8013740 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8013736:	3301      	adds	r3, #1
 8013738:	105b      	asrs	r3, r3, #1
 801373a:	f8ad 3004 	strh.w	r3, [sp, #4]
 801373e:	e7f0      	b.n	8013722 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8013740:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8013744:	f8bd 3000 	ldrh.w	r3, [sp]
 8013748:	4413      	add	r3, r2
 801374a:	b29b      	uxth	r3, r3
 801374c:	441a      	add	r2, r3
 801374e:	b212      	sxth	r2, r2
 8013750:	4296      	cmp	r6, r2
 8013752:	f8ad 3000 	strh.w	r3, [sp]
 8013756:	dae0      	bge.n	801371a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8013758:	1aeb      	subs	r3, r5, r3
 801375a:	f8ad 3004 	strh.w	r3, [sp, #4]
 801375e:	e7dc      	b.n	801371a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8013760:	2000e1b8 	.word	0x2000e1b8

08013764 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8013764:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013766:	6803      	ldr	r3, [r0, #0]
 8013768:	4604      	mov	r4, r0
 801376a:	4601      	mov	r1, r0
 801376c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801376e:	4668      	mov	r0, sp
 8013770:	4798      	blx	r3
 8013772:	2100      	movs	r1, #0
 8013774:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8013778:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801377c:	9102      	str	r1, [sp, #8]
 801377e:	4668      	mov	r0, sp
 8013780:	a902      	add	r1, sp, #8
 8013782:	f8ad 200c 	strh.w	r2, [sp, #12]
 8013786:	f8ad 300e 	strh.w	r3, [sp, #14]
 801378a:	f7fe ff27 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 801378e:	6823      	ldr	r3, [r4, #0]
 8013790:	4669      	mov	r1, sp
 8013792:	691b      	ldr	r3, [r3, #16]
 8013794:	4620      	mov	r0, r4
 8013796:	4798      	blx	r3
 8013798:	b004      	add	sp, #16
 801379a:	bd10      	pop	{r4, pc}

0801379c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 801379c:	2101      	movs	r1, #1
 801379e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80137a2:	490b      	ldr	r1, [pc, #44]	; (80137d0 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 80137a4:	6001      	str	r1, [r0, #0]
 80137a6:	2200      	movs	r2, #0
 80137a8:	21ff      	movs	r1, #255	; 0xff
 80137aa:	8082      	strh	r2, [r0, #4]
 80137ac:	80c2      	strh	r2, [r0, #6]
 80137ae:	8102      	strh	r2, [r0, #8]
 80137b0:	8142      	strh	r2, [r0, #10]
 80137b2:	8182      	strh	r2, [r0, #12]
 80137b4:	81c2      	strh	r2, [r0, #14]
 80137b6:	8202      	strh	r2, [r0, #16]
 80137b8:	8242      	strh	r2, [r0, #18]
 80137ba:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80137be:	61c2      	str	r2, [r0, #28]
 80137c0:	8402      	strh	r2, [r0, #32]
 80137c2:	8442      	strh	r2, [r0, #34]	; 0x22
 80137c4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80137c8:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 80137cc:	6282      	str	r2, [r0, #40]	; 0x28
 80137ce:	4770      	bx	lr
 80137d0:	0802c82c 	.word	0x0802c82c

080137d4 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 80137d4:	f101 0364 	add.w	r3, r1, #100	; 0x64
 80137d8:	4602      	mov	r2, r0
 80137da:	cb03      	ldmia	r3!, {r0, r1}
 80137dc:	6010      	str	r0, [r2, #0]
 80137de:	6051      	str	r1, [r2, #4]
 80137e0:	4610      	mov	r0, r2
 80137e2:	4770      	bx	lr

080137e4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 80137e4:	b507      	push	{r0, r1, r2, lr}
 80137e6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80137ea:	ab01      	add	r3, sp, #4
 80137ec:	6809      	ldr	r1, [r1, #0]
 80137ee:	6800      	ldr	r0, [r0, #0]
 80137f0:	f005 f8e8 	bl	80189c4 <_ZN8touchgfx6muldivElllRl>
 80137f4:	b003      	add	sp, #12
 80137f6:	f85d fb04 	ldr.w	pc, [sp], #4

080137fa <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 80137fa:	6800      	ldr	r0, [r0, #0]
 80137fc:	2800      	cmp	r0, #0
 80137fe:	bfb9      	ittee	lt
 8013800:	2320      	movlt	r3, #32
 8013802:	fb90 f0f3 	sdivlt	r0, r0, r3
 8013806:	301f      	addge	r0, #31
 8013808:	1140      	asrge	r0, r0, #5
 801380a:	4770      	bx	lr

0801380c <_ZNK8touchgfx4Line17invalidateContentEv>:
 801380c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013810:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8013814:	b089      	sub	sp, #36	; 0x24
 8013816:	4604      	mov	r4, r0
 8013818:	b353      	cbz	r3, 8013870 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 801381a:	6803      	ldr	r3, [r0, #0]
 801381c:	4601      	mov	r1, r0
 801381e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8013820:	a802      	add	r0, sp, #8
 8013822:	4798      	blx	r3
 8013824:	2220      	movs	r2, #32
 8013826:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 801382a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801382c:	fb9a f0f2 	sdiv	r0, sl, r2
 8013830:	fb91 f5f2 	sdiv	r5, r1, r2
 8013834:	1b40      	subs	r0, r0, r5
 8013836:	2800      	cmp	r0, #0
 8013838:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801383a:	fb93 f6f2 	sdiv	r6, r3, r2
 801383e:	bfb8      	it	lt
 8013840:	4240      	neglt	r0, r0
 8013842:	0076      	lsls	r6, r6, #1
 8013844:	4286      	cmp	r6, r0
 8013846:	f8d4 b000 	ldr.w	fp, [r4]
 801384a:	dc0c      	bgt.n	8013866 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 801384c:	6b25      	ldr	r5, [r4, #48]	; 0x30
 801384e:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8013852:	fb95 f0f2 	sdiv	r0, r5, r2
 8013856:	fb98 f7f2 	sdiv	r7, r8, r2
 801385a:	1bc0      	subs	r0, r0, r7
 801385c:	2800      	cmp	r0, #0
 801385e:	bfb8      	it	lt
 8013860:	4240      	neglt	r0, r0
 8013862:	4286      	cmp	r6, r0
 8013864:	dd07      	ble.n	8013876 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8013866:	f8db 3010 	ldr.w	r3, [fp, #16]
 801386a:	a902      	add	r1, sp, #8
 801386c:	4620      	mov	r0, r4
 801386e:	4798      	blx	r3
 8013870:	b009      	add	sp, #36	; 0x24
 8013872:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013876:	3301      	adds	r3, #1
 8013878:	2002      	movs	r0, #2
 801387a:	f10d 0920 	add.w	r9, sp, #32
 801387e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8013882:	4103      	asrs	r3, r0
 8013884:	f849 3d08 	str.w	r3, [r9, #-8]!
 8013888:	eb01 060a 	add.w	r6, r1, sl
 801388c:	eb08 0705 	add.w	r7, r8, r5
 8013890:	fb96 f6f0 	sdiv	r6, r6, r0
 8013894:	fb97 f7f0 	sdiv	r7, r7, r0
 8013898:	4648      	mov	r0, r9
 801389a:	9101      	str	r1, [sp, #4]
 801389c:	b236      	sxth	r6, r6
 801389e:	b23f      	sxth	r7, r7
 80138a0:	fb96 f6f2 	sdiv	r6, r6, r2
 80138a4:	fb97 f7f2 	sdiv	r7, r7, r2
 80138a8:	f7ff ffa7 	bl	80137fa <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80138ac:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80138b0:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 80138b4:	9901      	ldr	r1, [sp, #4]
 80138b6:	4293      	cmp	r3, r2
 80138b8:	fa1f fe87 	uxth.w	lr, r7
 80138bc:	fa1f fc86 	uxth.w	ip, r6
 80138c0:	eba1 0a0a 	sub.w	sl, r1, sl
 80138c4:	b280      	uxth	r0, r0
 80138c6:	da54      	bge.n	8013972 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 80138c8:	ebac 0100 	sub.w	r1, ip, r0
 80138cc:	b289      	uxth	r1, r1
 80138ce:	4460      	add	r0, ip
 80138d0:	f1ba 0f00 	cmp.w	sl, #0
 80138d4:	b20e      	sxth	r6, r1
 80138d6:	b280      	uxth	r0, r0
 80138d8:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 80138dc:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 80138e0:	da29      	bge.n	8013936 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 80138e2:	eba8 0505 	sub.w	r5, r8, r5
 80138e6:	2d00      	cmp	r5, #0
 80138e8:	da2a      	bge.n	8013940 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 80138ea:	fa1f f88a 	uxth.w	r8, sl
 80138ee:	eba0 0008 	sub.w	r0, r0, r8
 80138f2:	fa1f f58c 	uxth.w	r5, ip
 80138f6:	4443      	add	r3, r8
 80138f8:	f8ad 0014 	strh.w	r0, [sp, #20]
 80138fc:	1a59      	subs	r1, r3, r1
 80138fe:	ebae 0005 	sub.w	r0, lr, r5
 8013902:	f8ad a010 	strh.w	sl, [sp, #16]
 8013906:	f8ad c012 	strh.w	ip, [sp, #18]
 801390a:	f8ad 0016 	strh.w	r0, [sp, #22]
 801390e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013912:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013916:	f8ad 101c 	strh.w	r1, [sp, #28]
 801391a:	442a      	add	r2, r5
 801391c:	eba2 0e0e 	sub.w	lr, r2, lr
 8013920:	f8ad e01e 	strh.w	lr, [sp, #30]
 8013924:	f8db 3010 	ldr.w	r3, [fp, #16]
 8013928:	a904      	add	r1, sp, #16
 801392a:	4620      	mov	r0, r4
 801392c:	4798      	blx	r3
 801392e:	6823      	ldr	r3, [r4, #0]
 8013930:	4649      	mov	r1, r9
 8013932:	691b      	ldr	r3, [r3, #16]
 8013934:	e79a      	b.n	801386c <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8013936:	d003      	beq.n	8013940 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8013938:	eba8 0505 	sub.w	r5, r8, r5
 801393c:	2d00      	cmp	r5, #0
 801393e:	dcd4      	bgt.n	80138ea <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8013940:	fa1f f88a 	uxth.w	r8, sl
 8013944:	4443      	add	r3, r8
 8013946:	fa1f f58c 	uxth.w	r5, ip
 801394a:	1a59      	subs	r1, r3, r1
 801394c:	eba0 0008 	sub.w	r0, r0, r8
 8013950:	ebae 0305 	sub.w	r3, lr, r5
 8013954:	f8ad 6010 	strh.w	r6, [sp, #16]
 8013958:	f8ad c012 	strh.w	ip, [sp, #18]
 801395c:	f8ad 1014 	strh.w	r1, [sp, #20]
 8013960:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013964:	f8ad a018 	strh.w	sl, [sp, #24]
 8013968:	f8ad 701a 	strh.w	r7, [sp, #26]
 801396c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8013970:	e7d3      	b.n	801391a <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8013972:	ebae 0100 	sub.w	r1, lr, r0
 8013976:	b289      	uxth	r1, r1
 8013978:	4470      	add	r0, lr
 801397a:	f1ba 0f00 	cmp.w	sl, #0
 801397e:	b20f      	sxth	r7, r1
 8013980:	b280      	uxth	r0, r0
 8013982:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8013986:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 801398a:	da20      	bge.n	80139ce <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 801398c:	eba8 0505 	sub.w	r5, r8, r5
 8013990:	2d00      	cmp	r5, #0
 8013992:	da21      	bge.n	80139d8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8013994:	fa1f f88e 	uxth.w	r8, lr
 8013998:	fa1f f58a 	uxth.w	r5, sl
 801399c:	4443      	add	r3, r8
 801399e:	442a      	add	r2, r5
 80139a0:	f8ad e010 	strh.w	lr, [sp, #16]
 80139a4:	1b40      	subs	r0, r0, r5
 80139a6:	ebac 0e08 	sub.w	lr, ip, r8
 80139aa:	1a51      	subs	r1, r2, r1
 80139ac:	eba3 0c0c 	sub.w	ip, r3, ip
 80139b0:	f8ad a012 	strh.w	sl, [sp, #18]
 80139b4:	f8ad e014 	strh.w	lr, [sp, #20]
 80139b8:	f8ad 0016 	strh.w	r0, [sp, #22]
 80139bc:	f8ad 6018 	strh.w	r6, [sp, #24]
 80139c0:	f8ad 701a 	strh.w	r7, [sp, #26]
 80139c4:	f8ad c01c 	strh.w	ip, [sp, #28]
 80139c8:	f8ad 101e 	strh.w	r1, [sp, #30]
 80139cc:	e7aa      	b.n	8013924 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 80139ce:	d003      	beq.n	80139d8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80139d0:	eba8 0505 	sub.w	r5, r8, r5
 80139d4:	2d00      	cmp	r5, #0
 80139d6:	dcdd      	bgt.n	8013994 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 80139d8:	fa1f f58e 	uxth.w	r5, lr
 80139dc:	fa1f f88a 	uxth.w	r8, sl
 80139e0:	4442      	add	r2, r8
 80139e2:	442b      	add	r3, r5
 80139e4:	f8ad 7012 	strh.w	r7, [sp, #18]
 80139e8:	1a51      	subs	r1, r2, r1
 80139ea:	ebac 0705 	sub.w	r7, ip, r5
 80139ee:	eba0 0008 	sub.w	r0, r0, r8
 80139f2:	eba3 0c0c 	sub.w	ip, r3, ip
 80139f6:	f8ad e010 	strh.w	lr, [sp, #16]
 80139fa:	f8ad 7014 	strh.w	r7, [sp, #20]
 80139fe:	f8ad 1016 	strh.w	r1, [sp, #22]
 8013a02:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013a06:	f8ad a01a 	strh.w	sl, [sp, #26]
 8013a0a:	f8ad c01c 	strh.w	ip, [sp, #28]
 8013a0e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013a12:	e787      	b.n	8013924 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08013a14 <_ZN8touchgfx7CWRUtil4sineEi>:
 8013a14:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8013a18:	fb90 f2f3 	sdiv	r2, r0, r3
 8013a1c:	fb02 0013 	mls	r0, r2, r3, r0
 8013a20:	2800      	cmp	r0, #0
 8013a22:	bfb8      	it	lt
 8013a24:	18c0      	addlt	r0, r0, r3
 8013a26:	285a      	cmp	r0, #90	; 0x5a
 8013a28:	4b09      	ldr	r3, [pc, #36]	; (8013a50 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8013a2a:	dc02      	bgt.n	8013a32 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8013a2c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8013a30:	4770      	bx	lr
 8013a32:	28b4      	cmp	r0, #180	; 0xb4
 8013a34:	dc02      	bgt.n	8013a3c <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8013a36:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8013a3a:	e7f7      	b.n	8013a2c <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8013a3c:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8013a40:	bfd4      	ite	le
 8013a42:	38b4      	suble	r0, #180	; 0xb4
 8013a44:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8013a48:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8013a4c:	4240      	negs	r0, r0
 8013a4e:	4770      	bx	lr
 8013a50:	0802c8f8 	.word	0x0802c8f8

08013a54 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8013a54:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8013a58:	bf2c      	ite	cs
 8013a5a:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8013a5e:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8013a62:	2300      	movs	r3, #0
 8013a64:	1899      	adds	r1, r3, r2
 8013a66:	4288      	cmp	r0, r1
 8013a68:	bf24      	itt	cs
 8013a6a:	1853      	addcs	r3, r2, r1
 8013a6c:	1a40      	subcs	r0, r0, r1
 8013a6e:	0892      	lsrs	r2, r2, #2
 8013a70:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8013a74:	d1f6      	bne.n	8013a64 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8013a76:	4618      	mov	r0, r3
 8013a78:	4770      	bx	lr

08013a7a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8013a7a:	b510      	push	{r4, lr}
 8013a7c:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8013a80:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8013a84:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8013a88:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8013a8c:	13a4      	asrs	r4, r4, #14
 8013a8e:	139b      	asrs	r3, r3, #14
 8013a90:	429c      	cmp	r4, r3
 8013a92:	bfb8      	it	lt
 8013a94:	461c      	movlt	r4, r3
 8013a96:	2c01      	cmp	r4, #1
 8013a98:	dd07      	ble.n	8013aaa <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8013a9a:	fb91 f1f4 	sdiv	r1, r1, r4
 8013a9e:	fb90 f0f4 	sdiv	r0, r0, r4
 8013aa2:	f7ff ffea 	bl	8013a7a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8013aa6:	4360      	muls	r0, r4
 8013aa8:	bd10      	pop	{r4, pc}
 8013aaa:	4340      	muls	r0, r0
 8013aac:	fb01 0001 	mla	r0, r1, r1, r0
 8013ab0:	f7ff ffd0 	bl	8013a54 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8013ab4:	e7f8      	b.n	8013aa8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>
	...

08013ab8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8013ab8:	2800      	cmp	r0, #0
 8013aba:	b508      	push	{r3, lr}
 8013abc:	da05      	bge.n	8013aca <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8013abe:	4240      	negs	r0, r0
 8013ac0:	f7ff fffa 	bl	8013ab8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8013ac4:	4240      	negs	r0, r0
 8013ac6:	b240      	sxtb	r0, r0
 8013ac8:	bd08      	pop	{r3, pc}
 8013aca:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8013ace:	dc11      	bgt.n	8013af4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8013ad0:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8013ad4:	dd09      	ble.n	8013aea <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8013ad6:	4340      	muls	r0, r0
 8013ad8:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8013adc:	f7ff ffba 	bl	8013a54 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8013ae0:	f7ff ffea 	bl	8013ab8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8013ae4:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8013ae8:	e7ed      	b.n	8013ac6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8013aea:	3003      	adds	r0, #3
 8013aec:	10c0      	asrs	r0, r0, #3
 8013aee:	4b02      	ldr	r3, [pc, #8]	; (8013af8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8013af0:	5618      	ldrsb	r0, [r3, r0]
 8013af2:	e7e9      	b.n	8013ac8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8013af4:	2000      	movs	r0, #0
 8013af6:	e7e7      	b.n	8013ac8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8013af8:	0802c89c 	.word	0x0802c89c

08013afc <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8013afc:	4281      	cmp	r1, r0
 8013afe:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013b00:	460c      	mov	r4, r1
 8013b02:	4615      	mov	r5, r2
 8013b04:	dd07      	ble.n	8013b16 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8013b06:	4601      	mov	r1, r0
 8013b08:	4620      	mov	r0, r4
 8013b0a:	f7ff fff7 	bl	8013afc <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8013b0e:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8013b12:	b003      	add	sp, #12
 8013b14:	bd30      	pop	{r4, r5, pc}
 8013b16:	f7ff ffb0 	bl	8013a7a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8013b1a:	6028      	str	r0, [r5, #0]
 8013b1c:	2800      	cmp	r0, #0
 8013b1e:	d0f8      	beq.n	8013b12 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8013b20:	4602      	mov	r2, r0
 8013b22:	ab01      	add	r3, sp, #4
 8013b24:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8013b28:	4620      	mov	r0, r4
 8013b2a:	f004 ff4b 	bl	80189c4 <_ZN8touchgfx6muldivElllRl>
 8013b2e:	f7ff ffc3 	bl	8013ab8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8013b32:	e7ee      	b.n	8013b12 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08013b34 <_ZN8touchgfx4LineC1Ev>:
 8013b34:	b510      	push	{r4, lr}
 8013b36:	4604      	mov	r4, r0
 8013b38:	f7ff fe30 	bl	801379c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8013b3c:	4b0c      	ldr	r3, [pc, #48]	; (8013b70 <_ZN8touchgfx4LineC1Ev+0x3c>)
 8013b3e:	6023      	str	r3, [r4, #0]
 8013b40:	2220      	movs	r2, #32
 8013b42:	2300      	movs	r3, #0
 8013b44:	63e2      	str	r2, [r4, #60]	; 0x3c
 8013b46:	2212      	movs	r2, #18
 8013b48:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8013b4c:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8013b50:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8013b54:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8013b58:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8013b5c:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8013b60:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8013b64:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8013b68:	66e2      	str	r2, [r4, #108]	; 0x6c
 8013b6a:	60a3      	str	r3, [r4, #8]
 8013b6c:	4620      	mov	r0, r4
 8013b6e:	bd10      	pop	{r4, pc}
 8013b70:	0802c9b8 	.word	0x0802c9b8

08013b74 <_ZNK8touchgfx4Line18getLineEndingStyleEv>:
 8013b74:	f890 0040 	ldrb.w	r0, [r0, #64]	; 0x40
 8013b78:	4770      	bx	lr

08013b7a <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8013b7a:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8013b7e:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8013b80:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013b82:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8013b84:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8013b86:	1aff      	subs	r7, r7, r3
 8013b88:	4604      	mov	r4, r0
 8013b8a:	eba5 0502 	sub.w	r5, r5, r2
 8013b8e:	d142      	bne.n	8013c16 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8013b90:	b955      	cbnz	r5, 8013ba8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8013b92:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8013b96:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8013b9a:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8013b9e:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8013ba2:	b002      	add	sp, #8
 8013ba4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013ba8:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8013bac:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8013bb0:	4629      	mov	r1, r5
 8013bb2:	4642      	mov	r2, r8
 8013bb4:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8013bb6:	f004 ff24 	bl	8018a02 <_ZN8touchgfx6muldivElll>
 8013bba:	2502      	movs	r5, #2
 8013bbc:	4642      	mov	r2, r8
 8013bbe:	fb90 f6f5 	sdiv	r6, r0, r5
 8013bc2:	4639      	mov	r1, r7
 8013bc4:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8013bc6:	f004 ff1c 	bl	8018a02 <_ZN8touchgfx6muldivElll>
 8013bca:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8013bce:	fb90 f5f5 	sdiv	r5, r0, r5
 8013bd2:	f1b9 0f00 	cmp.w	r9, #0
 8013bd6:	d067      	beq.n	8013ca8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8013bd8:	f1b9 0f02 	cmp.w	r9, #2
 8013bdc:	d878      	bhi.n	8013cd0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8013bde:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8013be0:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8013be2:	1b93      	subs	r3, r2, r6
 8013be4:	1b5b      	subs	r3, r3, r5
 8013be6:	6463      	str	r3, [r4, #68]	; 0x44
 8013be8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8013bea:	18e9      	adds	r1, r5, r3
 8013bec:	1b89      	subs	r1, r1, r6
 8013bee:	6561      	str	r1, [r4, #84]	; 0x54
 8013bf0:	1b81      	subs	r1, r0, r6
 8013bf2:	4429      	add	r1, r5
 8013bf4:	64a1      	str	r1, [r4, #72]	; 0x48
 8013bf6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8013bf8:	4430      	add	r0, r6
 8013bfa:	186f      	adds	r7, r5, r1
 8013bfc:	4432      	add	r2, r6
 8013bfe:	1b49      	subs	r1, r1, r5
 8013c00:	4437      	add	r7, r6
 8013c02:	4428      	add	r0, r5
 8013c04:	4431      	add	r1, r6
 8013c06:	1b52      	subs	r2, r2, r5
 8013c08:	1b5b      	subs	r3, r3, r5
 8013c0a:	65a7      	str	r7, [r4, #88]	; 0x58
 8013c0c:	64e0      	str	r0, [r4, #76]	; 0x4c
 8013c0e:	65e1      	str	r1, [r4, #92]	; 0x5c
 8013c10:	6522      	str	r2, [r4, #80]	; 0x50
 8013c12:	1b9b      	subs	r3, r3, r6
 8013c14:	e05b      	b.n	8013cce <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8013c16:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8013c1a:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8013c1e:	2d00      	cmp	r5, #0
 8013c20:	d0c6      	beq.n	8013bb0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8013c22:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8013c26:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8013c2a:	fb93 f2f8 	sdiv	r2, r3, r8
 8013c2e:	fb08 3312 	mls	r3, r8, r2, r3
 8013c32:	b353      	cbz	r3, 8013c8a <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8013c34:	fb98 f2f3 	sdiv	r2, r8, r3
 8013c38:	fb03 8812 	mls	r8, r3, r2, r8
 8013c3c:	f1b8 0f00 	cmp.w	r8, #0
 8013c40:	d1f3      	bne.n	8013c2a <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8013c42:	2b01      	cmp	r3, #1
 8013c44:	bf1c      	itt	ne
 8013c46:	fb95 f5f3 	sdivne	r5, r5, r3
 8013c4a:	fb97 f7f3 	sdivne	r7, r7, r3
 8013c4e:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8013c52:	f24b 5104 	movw	r1, #46340	; 0xb504
 8013c56:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8013c5a:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8013c5e:	428b      	cmp	r3, r1
 8013c60:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8013c64:	4608      	mov	r0, r1
 8013c66:	dd01      	ble.n	8013c6c <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8013c68:	428a      	cmp	r2, r1
 8013c6a:	dc10      	bgt.n	8013c8e <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8013c6c:	fb90 f3f3 	sdiv	r3, r0, r3
 8013c70:	fb90 f2f2 	sdiv	r2, r0, r2
 8013c74:	4293      	cmp	r3, r2
 8013c76:	bfa8      	it	ge
 8013c78:	4613      	movge	r3, r2
 8013c7a:	435f      	muls	r7, r3
 8013c7c:	435d      	muls	r5, r3
 8013c7e:	4629      	mov	r1, r5
 8013c80:	4638      	mov	r0, r7
 8013c82:	f7ff fefa 	bl	8013a7a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8013c86:	4680      	mov	r8, r0
 8013c88:	e792      	b.n	8013bb0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8013c8a:	4643      	mov	r3, r8
 8013c8c:	e7d9      	b.n	8013c42 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8013c8e:	fb93 f3f1 	sdiv	r3, r3, r1
 8013c92:	fb92 f2f1 	sdiv	r2, r2, r1
 8013c96:	4293      	cmp	r3, r2
 8013c98:	bfcc      	ite	gt
 8013c9a:	3301      	addgt	r3, #1
 8013c9c:	1c53      	addle	r3, r2, #1
 8013c9e:	fb97 f7f3 	sdiv	r7, r7, r3
 8013ca2:	fb95 f5f3 	sdiv	r5, r5, r3
 8013ca6:	e7ea      	b.n	8013c7e <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8013ca8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8013caa:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8013cac:	1b93      	subs	r3, r2, r6
 8013cae:	6463      	str	r3, [r4, #68]	; 0x44
 8013cb0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8013cb2:	18e9      	adds	r1, r5, r3
 8013cb4:	6561      	str	r1, [r4, #84]	; 0x54
 8013cb6:	1b81      	subs	r1, r0, r6
 8013cb8:	64a1      	str	r1, [r4, #72]	; 0x48
 8013cba:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8013cbc:	4430      	add	r0, r6
 8013cbe:	186f      	adds	r7, r5, r1
 8013cc0:	4432      	add	r2, r6
 8013cc2:	1b49      	subs	r1, r1, r5
 8013cc4:	65a7      	str	r7, [r4, #88]	; 0x58
 8013cc6:	64e0      	str	r0, [r4, #76]	; 0x4c
 8013cc8:	65e1      	str	r1, [r4, #92]	; 0x5c
 8013cca:	6522      	str	r2, [r4, #80]	; 0x50
 8013ccc:	1b5b      	subs	r3, r3, r5
 8013cce:	6623      	str	r3, [r4, #96]	; 0x60
 8013cd0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8013cd2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8013cd4:	9200      	str	r2, [sp, #0]
 8013cd6:	9301      	str	r3, [sp, #4]
 8013cd8:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8013cdc:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8013ce0:	680f      	ldr	r7, [r1, #0]
 8013ce2:	9800      	ldr	r0, [sp, #0]
 8013ce4:	42ba      	cmp	r2, r7
 8013ce6:	bfa8      	it	ge
 8013ce8:	463a      	movge	r2, r7
 8013cea:	4287      	cmp	r7, r0
 8013cec:	bfc8      	it	gt
 8013cee:	9700      	strgt	r7, [sp, #0]
 8013cf0:	690f      	ldr	r7, [r1, #16]
 8013cf2:	9801      	ldr	r0, [sp, #4]
 8013cf4:	42bb      	cmp	r3, r7
 8013cf6:	bfa8      	it	ge
 8013cf8:	463b      	movge	r3, r7
 8013cfa:	3104      	adds	r1, #4
 8013cfc:	4287      	cmp	r7, r0
 8013cfe:	bfc8      	it	gt
 8013d00:	9701      	strgt	r7, [sp, #4]
 8013d02:	458c      	cmp	ip, r1
 8013d04:	d1ec      	bne.n	8013ce0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8013d06:	4668      	mov	r0, sp
 8013d08:	2720      	movs	r7, #32
 8013d0a:	fb92 f8f7 	sdiv	r8, r2, r7
 8013d0e:	fb93 f7f7 	sdiv	r7, r3, r7
 8013d12:	f7ff fd72 	bl	80137fa <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8013d16:	4682      	mov	sl, r0
 8013d18:	a801      	add	r0, sp, #4
 8013d1a:	f7ff fd6e 	bl	80137fa <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8013d1e:	ebaa 0208 	sub.w	r2, sl, r8
 8013d22:	1bc0      	subs	r0, r0, r7
 8013d24:	f1b9 0f01 	cmp.w	r9, #1
 8013d28:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8013d2c:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8013d30:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8013d34:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8013d38:	f47f af33 	bne.w	8013ba2 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8013d3c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8013d3e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8013d40:	1b83      	subs	r3, r0, r6
 8013d42:	6463      	str	r3, [r4, #68]	; 0x44
 8013d44:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8013d46:	18ea      	adds	r2, r5, r3
 8013d48:	6562      	str	r2, [r4, #84]	; 0x54
 8013d4a:	1b8a      	subs	r2, r1, r6
 8013d4c:	64a2      	str	r2, [r4, #72]	; 0x48
 8013d4e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8013d50:	4431      	add	r1, r6
 8013d52:	18af      	adds	r7, r5, r2
 8013d54:	4406      	add	r6, r0
 8013d56:	1b52      	subs	r2, r2, r5
 8013d58:	1b5d      	subs	r5, r3, r5
 8013d5a:	65a7      	str	r7, [r4, #88]	; 0x58
 8013d5c:	64e1      	str	r1, [r4, #76]	; 0x4c
 8013d5e:	65e2      	str	r2, [r4, #92]	; 0x5c
 8013d60:	6526      	str	r6, [r4, #80]	; 0x50
 8013d62:	6625      	str	r5, [r4, #96]	; 0x60
 8013d64:	e71d      	b.n	8013ba2 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08013d66 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8013d66:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013d68:	428b      	cmp	r3, r1
 8013d6a:	d102      	bne.n	8013d72 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8013d6c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8013d6e:	4293      	cmp	r3, r2
 8013d70:	d003      	beq.n	8013d7a <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8013d72:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8013d76:	f7ff bf00 	b.w	8013b7a <_ZN8touchgfx4Line17updateCachedShapeEv>
 8013d7a:	4770      	bx	lr

08013d7c <_ZN8touchgfx4Line9updateEndENS_7CWRUtil2Q5ES2_>:
 8013d7c:	b570      	push	{r4, r5, r6, lr}
 8013d7e:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8013d80:	428b      	cmp	r3, r1
 8013d82:	4604      	mov	r4, r0
 8013d84:	460e      	mov	r6, r1
 8013d86:	4615      	mov	r5, r2
 8013d88:	d102      	bne.n	8013d90 <_ZN8touchgfx4Line9updateEndENS_7CWRUtil2Q5ES2_+0x14>
 8013d8a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8013d8c:	4293      	cmp	r3, r2
 8013d8e:	d00e      	beq.n	8013dae <_ZN8touchgfx4Line9updateEndENS_7CWRUtil2Q5ES2_+0x32>
 8013d90:	6823      	ldr	r3, [r4, #0]
 8013d92:	4620      	mov	r0, r4
 8013d94:	699b      	ldr	r3, [r3, #24]
 8013d96:	4798      	blx	r3
 8013d98:	4620      	mov	r0, r4
 8013d9a:	e9c4 650d 	strd	r6, r5, [r4, #52]	; 0x34
 8013d9e:	f7ff feec 	bl	8013b7a <_ZN8touchgfx4Line17updateCachedShapeEv>
 8013da2:	6823      	ldr	r3, [r4, #0]
 8013da4:	4620      	mov	r0, r4
 8013da6:	699b      	ldr	r3, [r3, #24]
 8013da8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013dac:	4718      	bx	r3
 8013dae:	bd70      	pop	{r4, r5, r6, pc}

08013db0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8013db0:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8013db4:	f7ff bee1 	b.w	8013b7a <_ZN8touchgfx4Line17updateCachedShapeEv>

08013db8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8013db8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013dbc:	b0a0      	sub	sp, #128	; 0x80
 8013dbe:	4604      	mov	r4, r0
 8013dc0:	460a      	mov	r2, r1
 8013dc2:	4601      	mov	r1, r0
 8013dc4:	a804      	add	r0, sp, #16
 8013dc6:	f014 fa43 	bl	8028250 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8013dca:	2300      	movs	r3, #0
 8013dcc:	9301      	str	r3, [sp, #4]
 8013dce:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8013dd2:	2b01      	cmp	r3, #1
 8013dd4:	d17c      	bne.n	8013ed0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8013dd6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8013dd8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8013dda:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8013ddc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8013dde:	1ac0      	subs	r0, r0, r3
 8013de0:	eba1 0102 	sub.w	r1, r1, r2
 8013de4:	d437      	bmi.n	8013e56 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8013de6:	2900      	cmp	r1, #0
 8013de8:	aa01      	add	r2, sp, #4
 8013dea:	db2e      	blt.n	8013e4a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8013dec:	f7ff fe86 	bl	8013afc <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8013df0:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8013df4:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8013df6:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8013df8:	a804      	add	r0, sp, #16
 8013dfa:	f014 fba9 	bl	8028550 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8013dfe:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8013e00:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8013e02:	a804      	add	r0, sp, #16
 8013e04:	f014 fbf1 	bl	80285ea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013e08:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8013e0a:	2db3      	cmp	r5, #179	; 0xb3
 8013e0c:	dc33      	bgt.n	8013e76 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8013e0e:	eba6 0805 	sub.w	r8, r6, r5
 8013e12:	4640      	mov	r0, r8
 8013e14:	f7ff fdfe 	bl	8013a14 <_ZN8touchgfx7CWRUtil4sineEi>
 8013e18:	a902      	add	r1, sp, #8
 8013e1a:	9002      	str	r0, [sp, #8]
 8013e1c:	a801      	add	r0, sp, #4
 8013e1e:	f7ff fce1 	bl	80137e4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013e22:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8013e24:	1847      	adds	r7, r0, r1
 8013e26:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8013e2a:	f7ff fdf3 	bl	8013a14 <_ZN8touchgfx7CWRUtil4sineEi>
 8013e2e:	a903      	add	r1, sp, #12
 8013e30:	9003      	str	r0, [sp, #12]
 8013e32:	a801      	add	r0, sp, #4
 8013e34:	f7ff fcd6 	bl	80137e4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013e38:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8013e3a:	4639      	mov	r1, r7
 8013e3c:	1a12      	subs	r2, r2, r0
 8013e3e:	a804      	add	r0, sp, #16
 8013e40:	f014 fbd3 	bl	80285ea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013e44:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8013e46:	441d      	add	r5, r3
 8013e48:	e7df      	b.n	8013e0a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8013e4a:	4249      	negs	r1, r1
 8013e4c:	f7ff fe56 	bl	8013afc <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8013e50:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8013e54:	e7ce      	b.n	8013df4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8013e56:	2900      	cmp	r1, #0
 8013e58:	f1c0 0000 	rsb	r0, r0, #0
 8013e5c:	aa01      	add	r2, sp, #4
 8013e5e:	db04      	blt.n	8013e6a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8013e60:	f7ff fe4c 	bl	8013afc <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8013e64:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8013e68:	e7c4      	b.n	8013df4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8013e6a:	4249      	negs	r1, r1
 8013e6c:	f7ff fe46 	bl	8013afc <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8013e70:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8013e74:	e7be      	b.n	8013df4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8013e76:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8013e78:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8013e7a:	a804      	add	r0, sp, #16
 8013e7c:	f014 fbb5 	bl	80285ea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013e80:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8013e82:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8013e84:	a804      	add	r0, sp, #16
 8013e86:	f014 fbb0 	bl	80285ea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013e8a:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8013e8c:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8013e90:	2d00      	cmp	r5, #0
 8013e92:	dd31      	ble.n	8013ef8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8013e94:	eb05 0806 	add.w	r8, r5, r6
 8013e98:	4640      	mov	r0, r8
 8013e9a:	f7ff fdbb 	bl	8013a14 <_ZN8touchgfx7CWRUtil4sineEi>
 8013e9e:	a902      	add	r1, sp, #8
 8013ea0:	9002      	str	r0, [sp, #8]
 8013ea2:	a801      	add	r0, sp, #4
 8013ea4:	f7ff fc9e 	bl	80137e4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013ea8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8013eaa:	1847      	adds	r7, r0, r1
 8013eac:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8013eb0:	f7ff fdb0 	bl	8013a14 <_ZN8touchgfx7CWRUtil4sineEi>
 8013eb4:	a903      	add	r1, sp, #12
 8013eb6:	9003      	str	r0, [sp, #12]
 8013eb8:	a801      	add	r0, sp, #4
 8013eba:	f7ff fc93 	bl	80137e4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013ebe:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8013ec0:	4639      	mov	r1, r7
 8013ec2:	1a12      	subs	r2, r2, r0
 8013ec4:	a804      	add	r0, sp, #16
 8013ec6:	f014 fb90 	bl	80285ea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013eca:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8013ecc:	1aed      	subs	r5, r5, r3
 8013ece:	e7df      	b.n	8013e90 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8013ed0:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8013ed2:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8013ed4:	a804      	add	r0, sp, #16
 8013ed6:	f014 fb3b 	bl	8028550 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8013eda:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8013edc:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8013ede:	a804      	add	r0, sp, #16
 8013ee0:	f014 fb83 	bl	80285ea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013ee4:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8013ee6:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8013ee8:	a804      	add	r0, sp, #16
 8013eea:	f014 fb7e 	bl	80285ea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013eee:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8013ef0:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8013ef2:	a804      	add	r0, sp, #16
 8013ef4:	f014 fb79 	bl	80285ea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013ef8:	21ff      	movs	r1, #255	; 0xff
 8013efa:	a804      	add	r0, sp, #16
 8013efc:	f014 fa64 	bl	80283c8 <_ZN8touchgfx6Canvas6renderEh>
 8013f00:	4b04      	ldr	r3, [pc, #16]	; (8013f14 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8013f02:	9304      	str	r3, [sp, #16]
 8013f04:	4604      	mov	r4, r0
 8013f06:	a80c      	add	r0, sp, #48	; 0x30
 8013f08:	f000 ff3c 	bl	8014d84 <_ZN8touchgfx7OutlineD1Ev>
 8013f0c:	4620      	mov	r0, r4
 8013f0e:	b020      	add	sp, #128	; 0x80
 8013f10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013f14:	0802d1d0 	.word	0x0802d1d0

08013f18 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8013f18:	b508      	push	{r3, lr}
 8013f1a:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8013f1e:	b10b      	cbz	r3, 8013f24 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
 8013f20:	f7f8 faf2 	bl	800c508 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8013f24:	bd08      	pop	{r3, pc}

08013f26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 8013f26:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8013f2a:	4770      	bx	lr

08013f2c <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 8013f2c:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8013f30:	4770      	bx	lr

08013f32 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 8013f32:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013f34:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8013f38:	2bff      	cmp	r3, #255	; 0xff
 8013f3a:	b085      	sub	sp, #20
 8013f3c:	4604      	mov	r4, r0
 8013f3e:	460d      	mov	r5, r1
 8013f40:	d128      	bne.n	8013f94 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 8013f42:	f101 0626 	add.w	r6, r1, #38	; 0x26
 8013f46:	4631      	mov	r1, r6
 8013f48:	4668      	mov	r0, sp
 8013f4a:	f006 fccf 	bl	801a8ec <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013f4e:	4630      	mov	r0, r6
 8013f50:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
 8013f54:	f006 fc62 	bl	801a81c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013f58:	4287      	cmp	r7, r0
 8013f5a:	d11b      	bne.n	8013f94 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 8013f5c:	4630      	mov	r0, r6
 8013f5e:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 8013f62:	f006 fc8f 	bl	801a884 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013f66:	4287      	cmp	r7, r0
 8013f68:	d114      	bne.n	8013f94 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 8013f6a:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8013f6e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8013f72:	2100      	movs	r1, #0
 8013f74:	466b      	mov	r3, sp
 8013f76:	9102      	str	r1, [sp, #8]
 8013f78:	cb03      	ldmia	r3!, {r0, r1}
 8013f7a:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 8013f7e:	6020      	str	r0, [r4, #0]
 8013f80:	6061      	str	r1, [r4, #4]
 8013f82:	4620      	mov	r0, r4
 8013f84:	4619      	mov	r1, r3
 8013f86:	f8ad 200c 	strh.w	r2, [sp, #12]
 8013f8a:	f7fe fb27 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 8013f8e:	4620      	mov	r0, r4
 8013f90:	b005      	add	sp, #20
 8013f92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013f94:	2300      	movs	r3, #0
 8013f96:	8023      	strh	r3, [r4, #0]
 8013f98:	8063      	strh	r3, [r4, #2]
 8013f9a:	80a3      	strh	r3, [r4, #4]
 8013f9c:	80e3      	strh	r3, [r4, #6]
 8013f9e:	e7f6      	b.n	8013f8e <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

08013fa0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 8013fa0:	b538      	push	{r3, r4, r5, lr}
 8013fa2:	2300      	movs	r3, #0
 8013fa4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8013fa8:	8083      	strh	r3, [r0, #4]
 8013faa:	80c3      	strh	r3, [r0, #6]
 8013fac:	8103      	strh	r3, [r0, #8]
 8013fae:	8143      	strh	r3, [r0, #10]
 8013fb0:	8183      	strh	r3, [r0, #12]
 8013fb2:	81c3      	strh	r3, [r0, #14]
 8013fb4:	8203      	strh	r3, [r0, #16]
 8013fb6:	8243      	strh	r3, [r0, #18]
 8013fb8:	61c3      	str	r3, [r0, #28]
 8013fba:	8403      	strh	r3, [r0, #32]
 8013fbc:	8443      	strh	r3, [r0, #34]	; 0x22
 8013fbe:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 8013fc2:	2501      	movs	r5, #1
 8013fc4:	4b08      	ldr	r3, [pc, #32]	; (8013fe8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 8013fc6:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 8013fca:	6003      	str	r3, [r0, #0]
 8013fcc:	880b      	ldrh	r3, [r1, #0]
 8013fce:	84c3      	strh	r3, [r0, #38]	; 0x26
 8013fd0:	23ff      	movs	r3, #255	; 0xff
 8013fd2:	4604      	mov	r4, r0
 8013fd4:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8013fd8:	f000 fe67 	bl	8014caa <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8013fdc:	4b03      	ldr	r3, [pc, #12]	; (8013fec <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
 8013fde:	6023      	str	r3, [r4, #0]
 8013fe0:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8013fe4:	4620      	mov	r0, r4
 8013fe6:	bd38      	pop	{r3, r4, r5, pc}
 8013fe8:	0802cc94 	.word	0x0802cc94
 8013fec:	0802ca30 	.word	0x0802ca30

08013ff0 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 8013ff0:	4603      	mov	r3, r0
 8013ff2:	3026      	adds	r0, #38	; 0x26
 8013ff4:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8013ff8:	b90b      	cbnz	r3, 8013ffe <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 8013ffa:	f004 bc55 	b.w	80188a8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8013ffe:	f004 bc63 	b.w	80188c8 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

08014004 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8014004:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014008:	4604      	mov	r4, r0
 801400a:	b0b3      	sub	sp, #204	; 0xcc
 801400c:	469b      	mov	fp, r3
 801400e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8014012:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8014016:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
 801401a:	ab11      	add	r3, sp, #68	; 0x44
 801401c:	2500      	movs	r5, #0
 801401e:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 8014022:	4618      	mov	r0, r3
 8014024:	9206      	str	r2, [sp, #24]
 8014026:	9511      	str	r5, [sp, #68]	; 0x44
 8014028:	9307      	str	r3, [sp, #28]
 801402a:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
 801402e:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
 8014032:	f7fe fad3 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 8014036:	9b07      	ldr	r3, [sp, #28]
 8014038:	e893 0003 	ldmia.w	r3, {r0, r1}
 801403c:	ad13      	add	r5, sp, #76	; 0x4c
 801403e:	e885 0003 	stmia.w	r5, {r0, r1}
 8014042:	6821      	ldr	r1, [r4, #0]
 8014044:	4620      	mov	r0, r4
 8014046:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8014048:	4629      	mov	r1, r5
 801404a:	47b0      	blx	r6
 801404c:	4621      	mov	r1, r4
 801404e:	a815      	add	r0, sp, #84	; 0x54
 8014050:	f004 fb86 	bl	8018760 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014054:	a815      	add	r0, sp, #84	; 0x54
 8014056:	f003 f87d 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801405a:	9b07      	ldr	r3, [sp, #28]
 801405c:	1d26      	adds	r6, r4, #4
 801405e:	4618      	mov	r0, r3
 8014060:	4631      	mov	r1, r6
 8014062:	f003 f8bb 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014066:	4628      	mov	r0, r5
 8014068:	f104 0526 	add.w	r5, r4, #38	; 0x26
 801406c:	f003 f872 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014070:	4628      	mov	r0, r5
 8014072:	f006 fcbf 	bl	801a9f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8014076:	9007      	str	r0, [sp, #28]
 8014078:	2800      	cmp	r0, #0
 801407a:	f000 80ce 	beq.w	801421a <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
 801407e:	f8db 200c 	ldr.w	r2, [fp, #12]
 8014082:	920c      	str	r2, [sp, #48]	; 0x30
 8014084:	f8da 2000 	ldr.w	r2, [sl]
 8014088:	f8db 1000 	ldr.w	r1, [fp]
 801408c:	920d      	str	r2, [sp, #52]	; 0x34
 801408e:	f8da 2004 	ldr.w	r2, [sl, #4]
 8014092:	9109      	str	r1, [sp, #36]	; 0x24
 8014094:	920e      	str	r2, [sp, #56]	; 0x38
 8014096:	f8db 1004 	ldr.w	r1, [fp, #4]
 801409a:	f8da 2008 	ldr.w	r2, [sl, #8]
 801409e:	910a      	str	r1, [sp, #40]	; 0x28
 80140a0:	920f      	str	r2, [sp, #60]	; 0x3c
 80140a2:	f8db 1008 	ldr.w	r1, [fp, #8]
 80140a6:	f8da 200c 	ldr.w	r2, [sl, #12]
 80140aa:	910b      	str	r1, [sp, #44]	; 0x2c
 80140ac:	9210      	str	r2, [sp, #64]	; 0x40
 80140ae:	a90d      	add	r1, sp, #52	; 0x34
 80140b0:	4632      	mov	r2, r6
 80140b2:	a809      	add	r0, sp, #36	; 0x24
 80140b4:	f003 f876 	bl	80171a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80140b8:	4632      	mov	r2, r6
 80140ba:	a90e      	add	r1, sp, #56	; 0x38
 80140bc:	a80a      	add	r0, sp, #40	; 0x28
 80140be:	f003 f871 	bl	80171a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80140c2:	4632      	mov	r2, r6
 80140c4:	a90f      	add	r1, sp, #60	; 0x3c
 80140c6:	a80b      	add	r0, sp, #44	; 0x2c
 80140c8:	f003 f86c 	bl	80171a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80140cc:	4632      	mov	r2, r6
 80140ce:	a910      	add	r1, sp, #64	; 0x40
 80140d0:	a80c      	add	r0, sp, #48	; 0x30
 80140d2:	f003 f867 	bl	80171a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80140d6:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 80140da:	ed97 3a00 	vldr	s6, [r7]
 80140de:	edd7 4a01 	vldr	s9, [r7, #4]
 80140e2:	ed99 2a00 	vldr	s4, [r9]
 80140e6:	edd8 2a00 	vldr	s5, [r8]
 80140ea:	edd9 3a01 	vldr	s7, [r9, #4]
 80140ee:	ed98 4a01 	vldr	s8, [r8, #4]
 80140f2:	ed99 5a02 	vldr	s10, [r9, #8]
 80140f6:	edd8 5a02 	vldr	s11, [r8, #8]
 80140fa:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 80140fe:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8014102:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
 8014106:	eef0 6a67 	vmov.f32	s13, s15
 801410a:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 801410e:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
 8014112:	eeb0 7a67 	vmov.f32	s14, s15
 8014116:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 801411a:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
 801411e:	eeb0 6a67 	vmov.f32	s12, s15
 8014122:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8014126:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 801412a:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
 801412e:	ee16 6a10 	vmov	r6, s12
 8014132:	eeb0 6a67 	vmov.f32	s12, s15
 8014136:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801413a:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 801413e:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
 8014142:	ee16 0a10 	vmov	r0, s12
 8014146:	eeb0 6a67 	vmov.f32	s12, s15
 801414a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801414e:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8014152:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
 8014156:	ee16 1a10 	vmov	r1, s12
 801415a:	eeb0 6a67 	vmov.f32	s12, s15
 801415e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8014162:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8014166:	ee16 2a10 	vmov	r2, s12
 801416a:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 801416e:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8014172:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8014176:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 801417a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801417e:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8014182:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8014186:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 801418a:	f8d7 a008 	ldr.w	sl, [r7, #8]
 801418e:	9624      	str	r6, [sp, #144]	; 0x90
 8014190:	68ff      	ldr	r7, [r7, #12]
 8014192:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
 8014196:	922d      	str	r2, [sp, #180]	; 0xb4
 8014198:	4a21      	ldr	r2, [pc, #132]	; (8014220 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
 801419a:	9b06      	ldr	r3, [sp, #24]
 801419c:	8812      	ldrh	r2, [r2, #0]
 801419e:	9317      	str	r3, [sp, #92]	; 0x5c
 80141a0:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 80141a4:	9b07      	ldr	r3, [sp, #28]
 80141a6:	9218      	str	r2, [sp, #96]	; 0x60
 80141a8:	4628      	mov	r0, r5
 80141aa:	9319      	str	r3, [sp, #100]	; 0x64
 80141ac:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
 80141b0:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 80141b4:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 80141b8:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 80141bc:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 80141c0:	9731      	str	r7, [sp, #196]	; 0xc4
 80141c2:	f006 fc47 	bl	801aa54 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80141c6:	901a      	str	r0, [sp, #104]	; 0x68
 80141c8:	4628      	mov	r0, r5
 80141ca:	f006 fb27 	bl	801a81c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80141ce:	901b      	str	r0, [sp, #108]	; 0x6c
 80141d0:	4628      	mov	r0, r5
 80141d2:	f006 fb57 	bl	801a884 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80141d6:	901c      	str	r0, [sp, #112]	; 0x70
 80141d8:	4628      	mov	r0, r5
 80141da:	f006 fb1f 	bl	801a81c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80141de:	4b11      	ldr	r3, [pc, #68]	; (8014224 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
 80141e0:	901d      	str	r0, [sp, #116]	; 0x74
 80141e2:	681b      	ldr	r3, [r3, #0]
 80141e4:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80141e8:	b10a      	cbz	r2, 80141ee <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
 80141ea:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80141ec:	b905      	cbnz	r5, 80141f0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
 80141ee:	689d      	ldr	r5, [r3, #8]
 80141f0:	682b      	ldr	r3, [r5, #0]
 80141f2:	4620      	mov	r0, r4
 80141f4:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 80141f6:	f7ff fefb 	bl	8013ff0 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 80141fa:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80141fe:	9304      	str	r3, [sp, #16]
 8014200:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8014204:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8014208:	ab13      	add	r3, sp, #76	; 0x4c
 801420a:	9301      	str	r3, [sp, #4]
 801420c:	ab15      	add	r3, sp, #84	; 0x54
 801420e:	9300      	str	r3, [sp, #0]
 8014210:	aa1e      	add	r2, sp, #120	; 0x78
 8014212:	ab19      	add	r3, sp, #100	; 0x64
 8014214:	a917      	add	r1, sp, #92	; 0x5c
 8014216:	4628      	mov	r0, r5
 8014218:	47b0      	blx	r6
 801421a:	b033      	add	sp, #204	; 0xcc
 801421c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014220:	2000e1ba 	.word	0x2000e1ba
 8014224:	2000e1c0 	.word	0x2000e1c0

08014228 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 8014228:	b570      	push	{r4, r5, r6, lr}
 801422a:	ed2d 8b04 	vpush	{d8-d9}
 801422e:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8014232:	b098      	sub	sp, #96	; 0x60
 8014234:	4604      	mov	r4, r0
 8014236:	460e      	mov	r6, r1
 8014238:	2b00      	cmp	r3, #0
 801423a:	d065      	beq.n	8014308 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
 801423c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8014240:	ed9f 8a38 	vldr	s16, [pc, #224]	; 8014324 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
 8014244:	ee09 3a10 	vmov	s18, r3
 8014248:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801424c:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8014250:	ee08 3a90 	vmov	s17, r3
 8014254:	4628      	mov	r0, r5
 8014256:	4b34      	ldr	r3, [pc, #208]	; (8014328 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
 8014258:	930c      	str	r3, [sp, #48]	; 0x30
 801425a:	930d      	str	r3, [sp, #52]	; 0x34
 801425c:	930e      	str	r3, [sp, #56]	; 0x38
 801425e:	930f      	str	r3, [sp, #60]	; 0x3c
 8014260:	f006 fadc 	bl	801a81c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014264:	ee07 0a90 	vmov	s15, r0
 8014268:	4628      	mov	r0, r5
 801426a:	eef8 9ae7 	vcvt.f32.s32	s19, s15
 801426e:	f006 fb09 	bl	801a884 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014272:	4b2e      	ldr	r3, [pc, #184]	; (801432c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
 8014274:	781b      	ldrb	r3, [r3, #0]
 8014276:	ee07 0a90 	vmov	s15, r0
 801427a:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 801427e:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 8014282:	2b01      	cmp	r3, #1
 8014284:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8014288:	ee39 9a08 	vadd.f32	s18, s18, s16
 801428c:	ee78 8a88 	vadd.f32	s17, s17, s16
 8014290:	eef0 7a48 	vmov.f32	s15, s16
 8014294:	d13c      	bne.n	8014310 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
 8014296:	eef0 6a69 	vmov.f32	s13, s19
 801429a:	eeb0 6a47 	vmov.f32	s12, s14
 801429e:	eef0 5a47 	vmov.f32	s11, s14
 80142a2:	ee19 3a90 	vmov	r3, s19
 80142a6:	eeb0 7a48 	vmov.f32	s14, s16
 80142aa:	eef0 9a48 	vmov.f32	s19, s16
 80142ae:	9314      	str	r3, [sp, #80]	; 0x50
 80142b0:	ab14      	add	r3, sp, #80	; 0x50
 80142b2:	9303      	str	r3, [sp, #12]
 80142b4:	ab10      	add	r3, sp, #64	; 0x40
 80142b6:	9302      	str	r3, [sp, #8]
 80142b8:	ab0c      	add	r3, sp, #48	; 0x30
 80142ba:	9301      	str	r3, [sp, #4]
 80142bc:	ab08      	add	r3, sp, #32
 80142be:	9300      	str	r3, [sp, #0]
 80142c0:	2200      	movs	r2, #0
 80142c2:	ab04      	add	r3, sp, #16
 80142c4:	4631      	mov	r1, r6
 80142c6:	4620      	mov	r0, r4
 80142c8:	edcd 7a04 	vstr	s15, [sp, #16]
 80142cc:	ed8d 9a05 	vstr	s18, [sp, #20]
 80142d0:	ed8d 9a06 	vstr	s18, [sp, #24]
 80142d4:	edcd 7a07 	vstr	s15, [sp, #28]
 80142d8:	edcd 7a08 	vstr	s15, [sp, #32]
 80142dc:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
 80142e0:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 80142e4:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
 80142e8:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 80142ec:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
 80142f0:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
 80142f4:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 80142f8:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 80142fc:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
 8014300:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
 8014304:	f7ff fe7e 	bl	8014004 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8014308:	b018      	add	sp, #96	; 0x60
 801430a:	ecbd 8b04 	vpop	{d8-d9}
 801430e:	bd70      	pop	{r4, r5, r6, pc}
 8014310:	eef0 6a47 	vmov.f32	s13, s14
 8014314:	eef0 5a69 	vmov.f32	s11, s19
 8014318:	eeb0 6a48 	vmov.f32	s12, s16
 801431c:	ee18 3a10 	vmov	r3, s16
 8014320:	e7c5      	b.n	80142ae <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
 8014322:	bf00      	nop
 8014324:	00000000 	.word	0x00000000
 8014328:	42c80000 	.word	0x42c80000
 801432c:	2000e1b8 	.word	0x2000e1b8

08014330 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8014330:	2000      	movs	r0, #0
 8014332:	4770      	bx	lr

08014334 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8014334:	4b07      	ldr	r3, [pc, #28]	; (8014354 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8014336:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8014338:	881b      	ldrh	r3, [r3, #0]
 801433a:	4293      	cmp	r3, r2
 801433c:	bf81      	itttt	hi
 801433e:	4b06      	ldrhi	r3, [pc, #24]	; (8014358 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8014340:	681b      	ldrhi	r3, [r3, #0]
 8014342:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8014346:	7858      	ldrbhi	r0, [r3, #1]
 8014348:	bf8c      	ite	hi
 801434a:	f000 0003 	andhi.w	r0, r0, #3
 801434e:	2000      	movls	r0, #0
 8014350:	4770      	bx	lr
 8014352:	bf00      	nop
 8014354:	2000e21c 	.word	0x2000e21c
 8014358:	2000e218 	.word	0x2000e218

0801435c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 801435c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014360:	4b10      	ldr	r3, [pc, #64]	; (80143a4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8014362:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014364:	881b      	ldrh	r3, [r3, #0]
 8014366:	428b      	cmp	r3, r1
 8014368:	4604      	mov	r4, r0
 801436a:	d918      	bls.n	801439e <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 801436c:	6803      	ldr	r3, [r0, #0]
 801436e:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8014370:	4b0d      	ldr	r3, [pc, #52]	; (80143a8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8014372:	6818      	ldr	r0, [r3, #0]
 8014374:	f7fb fcc8 	bl	800fd08 <_ZNK8touchgfx5Texts7getTextEt>
 8014378:	6823      	ldr	r3, [r4, #0]
 801437a:	4606      	mov	r6, r0
 801437c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801437e:	4620      	mov	r0, r4
 8014380:	4798      	blx	r3
 8014382:	6823      	ldr	r3, [r4, #0]
 8014384:	4607      	mov	r7, r0
 8014386:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801438a:	4620      	mov	r0, r4
 801438c:	4798      	blx	r3
 801438e:	463a      	mov	r2, r7
 8014390:	4603      	mov	r3, r0
 8014392:	4631      	mov	r1, r6
 8014394:	4620      	mov	r0, r4
 8014396:	46ac      	mov	ip, r5
 8014398:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801439c:	4760      	bx	ip
 801439e:	2000      	movs	r0, #0
 80143a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80143a4:	2000e21c 	.word	0x2000e21c
 80143a8:	2000e224 	.word	0x2000e224

080143ac <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80143ac:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80143b0:	4b17      	ldr	r3, [pc, #92]	; (8014410 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80143b2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80143b4:	881b      	ldrh	r3, [r3, #0]
 80143b6:	428b      	cmp	r3, r1
 80143b8:	4604      	mov	r4, r0
 80143ba:	d926      	bls.n	801440a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 80143bc:	4b15      	ldr	r3, [pc, #84]	; (8014414 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 80143be:	681b      	ldr	r3, [r3, #0]
 80143c0:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80143c4:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80143c8:	4b13      	ldr	r3, [pc, #76]	; (8014418 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80143ca:	7855      	ldrb	r5, [r2, #1]
 80143cc:	681b      	ldr	r3, [r3, #0]
 80143ce:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 80143d2:	6833      	ldr	r3, [r6, #0]
 80143d4:	69df      	ldr	r7, [r3, #28]
 80143d6:	4b11      	ldr	r3, [pc, #68]	; (801441c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80143d8:	6818      	ldr	r0, [r3, #0]
 80143da:	f7fb fc95 	bl	800fd08 <_ZNK8touchgfx5Texts7getTextEt>
 80143de:	6823      	ldr	r3, [r4, #0]
 80143e0:	4680      	mov	r8, r0
 80143e2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80143e4:	4620      	mov	r0, r4
 80143e6:	4798      	blx	r3
 80143e8:	6823      	ldr	r3, [r4, #0]
 80143ea:	4681      	mov	r9, r0
 80143ec:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80143f0:	4620      	mov	r0, r4
 80143f2:	4798      	blx	r3
 80143f4:	f3c5 0581 	ubfx	r5, r5, #2, #2
 80143f8:	9000      	str	r0, [sp, #0]
 80143fa:	464b      	mov	r3, r9
 80143fc:	4642      	mov	r2, r8
 80143fe:	4629      	mov	r1, r5
 8014400:	4630      	mov	r0, r6
 8014402:	47b8      	blx	r7
 8014404:	b003      	add	sp, #12
 8014406:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801440a:	2000      	movs	r0, #0
 801440c:	e7fa      	b.n	8014404 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 801440e:	bf00      	nop
 8014410:	2000e21c 	.word	0x2000e21c
 8014414:	2000e218 	.word	0x2000e218
 8014418:	2000e220 	.word	0x2000e220
 801441c:	2000e224 	.word	0x2000e224

08014420 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8014420:	b40e      	push	{r1, r2, r3}
 8014422:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014426:	4b2f      	ldr	r3, [pc, #188]	; (80144e4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8014428:	881a      	ldrh	r2, [r3, #0]
 801442a:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 801442c:	429a      	cmp	r2, r3
 801442e:	b09d      	sub	sp, #116	; 0x74
 8014430:	4604      	mov	r4, r0
 8014432:	d954      	bls.n	80144de <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8014434:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80144e8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8014438:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80144ec <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 801443c:	aa26      	add	r2, sp, #152	; 0x98
 801443e:	9202      	str	r2, [sp, #8]
 8014440:	f8d9 2000 	ldr.w	r2, [r9]
 8014444:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8014448:	f8d8 3000 	ldr.w	r3, [r8]
 801444c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8014450:	682b      	ldr	r3, [r5, #0]
 8014452:	4628      	mov	r0, r5
 8014454:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014456:	4798      	blx	r3
 8014458:	b207      	sxth	r7, r0
 801445a:	4606      	mov	r6, r0
 801445c:	a803      	add	r0, sp, #12
 801445e:	f004 fe52 	bl	8019106 <_ZN8touchgfx12TextProviderC1Ev>
 8014462:	682b      	ldr	r3, [r5, #0]
 8014464:	4628      	mov	r0, r5
 8014466:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014468:	4798      	blx	r3
 801446a:	682b      	ldr	r3, [r5, #0]
 801446c:	4682      	mov	sl, r0
 801446e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014470:	4628      	mov	r0, r5
 8014472:	4798      	blx	r3
 8014474:	4653      	mov	r3, sl
 8014476:	9000      	str	r0, [sp, #0]
 8014478:	9a02      	ldr	r2, [sp, #8]
 801447a:	9925      	ldr	r1, [sp, #148]	; 0x94
 801447c:	a803      	add	r0, sp, #12
 801447e:	f004 fe9d 	bl	80191bc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014482:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014484:	f8d9 3000 	ldr.w	r3, [r9]
 8014488:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 801448c:	8925      	ldrh	r5, [r4, #8]
 801448e:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8014492:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8014496:	eba5 050c 	sub.w	r5, r5, ip
 801449a:	784a      	ldrb	r2, [r1, #1]
 801449c:	f8d8 3000 	ldr.w	r3, [r8]
 80144a0:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 80144a4:	b22d      	sxth	r5, r5
 80144a6:	9500      	str	r5, [sp, #0]
 80144a8:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80144ac:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80144b0:	a803      	add	r0, sp, #12
 80144b2:	f002 fb55 	bl	8016b60 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 80144b6:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 80144ba:	18b9      	adds	r1, r7, r2
 80144bc:	2900      	cmp	r1, #0
 80144be:	b203      	sxth	r3, r0
 80144c0:	dd0b      	ble.n	80144da <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 80144c2:	3b01      	subs	r3, #1
 80144c4:	fb13 f302 	smulbb	r3, r3, r2
 80144c8:	fb16 3300 	smlabb	r3, r6, r0, r3
 80144cc:	b21f      	sxth	r7, r3
 80144ce:	4638      	mov	r0, r7
 80144d0:	b01d      	add	sp, #116	; 0x74
 80144d2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80144d6:	b003      	add	sp, #12
 80144d8:	4770      	bx	lr
 80144da:	2b00      	cmp	r3, #0
 80144dc:	dcf7      	bgt.n	80144ce <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80144de:	2700      	movs	r7, #0
 80144e0:	e7f5      	b.n	80144ce <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80144e2:	bf00      	nop
 80144e4:	2000e21c 	.word	0x2000e21c
 80144e8:	2000e218 	.word	0x2000e218
 80144ec:	2000e220 	.word	0x2000e220

080144f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 80144f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80144f4:	4bbc      	ldr	r3, [pc, #752]	; (80147e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 80144f6:	460c      	mov	r4, r1
 80144f8:	881b      	ldrh	r3, [r3, #0]
 80144fa:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 80144fc:	428b      	cmp	r3, r1
 80144fe:	b0a9      	sub	sp, #164	; 0xa4
 8014500:	4680      	mov	r8, r0
 8014502:	d809      	bhi.n	8014518 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8014504:	2300      	movs	r3, #0
 8014506:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801450a:	e9c0 3200 	strd	r3, r2, [r0]
 801450e:	6083      	str	r3, [r0, #8]
 8014510:	4640      	mov	r0, r8
 8014512:	b029      	add	sp, #164	; 0xa4
 8014514:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014518:	4eb4      	ldr	r6, [pc, #720]	; (80147ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 801451a:	6833      	ldr	r3, [r6, #0]
 801451c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8014520:	4bb3      	ldr	r3, [pc, #716]	; (80147f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8014522:	681b      	ldr	r3, [r3, #0]
 8014524:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8014528:	4bb2      	ldr	r3, [pc, #712]	; (80147f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801452a:	6818      	ldr	r0, [r3, #0]
 801452c:	f7fb fbec 	bl	800fd08 <_ZNK8touchgfx5Texts7getTextEt>
 8014530:	682b      	ldr	r3, [r5, #0]
 8014532:	4681      	mov	r9, r0
 8014534:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014536:	4628      	mov	r0, r5
 8014538:	4798      	blx	r3
 801453a:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 801453c:	b203      	sxth	r3, r0
 801453e:	4407      	add	r7, r0
 8014540:	9304      	str	r3, [sp, #16]
 8014542:	b2bb      	uxth	r3, r7
 8014544:	9303      	str	r3, [sp, #12]
 8014546:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801454a:	4682      	mov	sl, r0
 801454c:	a80f      	add	r0, sp, #60	; 0x3c
 801454e:	2b00      	cmp	r3, #0
 8014550:	f040 80a6 	bne.w	80146a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8014554:	f004 fdd7 	bl	8019106 <_ZN8touchgfx12TextProviderC1Ev>
 8014558:	682b      	ldr	r3, [r5, #0]
 801455a:	4628      	mov	r0, r5
 801455c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801455e:	4798      	blx	r3
 8014560:	682b      	ldr	r3, [r5, #0]
 8014562:	4606      	mov	r6, r0
 8014564:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014566:	4628      	mov	r0, r5
 8014568:	4798      	blx	r3
 801456a:	6823      	ldr	r3, [r4, #0]
 801456c:	4607      	mov	r7, r0
 801456e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014570:	4620      	mov	r0, r4
 8014572:	4798      	blx	r3
 8014574:	6823      	ldr	r3, [r4, #0]
 8014576:	4683      	mov	fp, r0
 8014578:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801457c:	4620      	mov	r0, r4
 801457e:	4798      	blx	r3
 8014580:	463b      	mov	r3, r7
 8014582:	e9cd b000 	strd	fp, r0, [sp]
 8014586:	4649      	mov	r1, r9
 8014588:	4632      	mov	r2, r6
 801458a:	a80f      	add	r0, sp, #60	; 0x3c
 801458c:	f004 fe2b 	bl	80191e6 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8014590:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8014594:	f8df b254 	ldr.w	fp, [pc, #596]	; 80147ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8014598:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801459c:	f04f 0600 	mov.w	r6, #0
 80145a0:	bf0c      	ite	eq
 80145a2:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 80145a6:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 80145aa:	4637      	mov	r7, r6
 80145ac:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80145ae:	f8db 3000 	ldr.w	r3, [fp]
 80145b2:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80145b6:	4629      	mov	r1, r5
 80145b8:	785b      	ldrb	r3, [r3, #1]
 80145ba:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80145be:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80145c2:	a80f      	add	r0, sp, #60	; 0x3c
 80145c4:	f001 ffe7 	bl	8016596 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80145c8:	9b03      	ldr	r3, [sp, #12]
 80145ca:	4286      	cmp	r6, r0
 80145cc:	bfb8      	it	lt
 80145ce:	4606      	movlt	r6, r0
 80145d0:	3701      	adds	r7, #1
 80145d2:	eba9 0903 	sub.w	r9, r9, r3
 80145d6:	a80f      	add	r0, sp, #60	; 0x3c
 80145d8:	b236      	sxth	r6, r6
 80145da:	b2bf      	uxth	r7, r7
 80145dc:	fa0f f989 	sxth.w	r9, r9
 80145e0:	f004 fdb8 	bl	8019154 <_ZN8touchgfx12TextProvider11endOfStringEv>
 80145e4:	b918      	cbnz	r0, 80145ee <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80145e6:	7a2b      	ldrb	r3, [r5, #8]
 80145e8:	444b      	add	r3, r9
 80145ea:	2b00      	cmp	r3, #0
 80145ec:	dcde      	bgt.n	80145ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 80145ee:	9b03      	ldr	r3, [sp, #12]
 80145f0:	9a04      	ldr	r2, [sp, #16]
 80145f2:	f895 9009 	ldrb.w	r9, [r5, #9]
 80145f6:	fb13 f707 	smulbb	r7, r3, r7
 80145fa:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80145fc:	1aff      	subs	r7, r7, r3
 80145fe:	b2bf      	uxth	r7, r7
 8014600:	b23b      	sxth	r3, r7
 8014602:	429a      	cmp	r2, r3
 8014604:	bfa8      	it	ge
 8014606:	4657      	movge	r7, sl
 8014608:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801460c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8014610:	6823      	ldr	r3, [r4, #0]
 8014612:	bf08      	it	eq
 8014614:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8014618:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801461a:	bf18      	it	ne
 801461c:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8014620:	4620      	mov	r0, r4
 8014622:	4798      	blx	r3
 8014624:	444f      	add	r7, r9
 8014626:	fa1f f987 	uxth.w	r9, r7
 801462a:	2801      	cmp	r0, #1
 801462c:	fa0f f789 	sxth.w	r7, r9
 8014630:	b2b3      	uxth	r3, r6
 8014632:	f000 80e1 	beq.w	80147f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8014636:	2802      	cmp	r0, #2
 8014638:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 801463c:	f000 80e2 	beq.w	8014804 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8014640:	7aea      	ldrb	r2, [r5, #11]
 8014642:	7b2d      	ldrb	r5, [r5, #12]
 8014644:	b236      	sxth	r6, r6
 8014646:	1ab6      	subs	r6, r6, r2
 8014648:	442a      	add	r2, r5
 801464a:	4413      	add	r3, r2
 801464c:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8014650:	fa1f fa86 	uxth.w	sl, r6
 8014654:	b29b      	uxth	r3, r3
 8014656:	2a02      	cmp	r2, #2
 8014658:	fa0f fb8a 	sxth.w	fp, sl
 801465c:	b21e      	sxth	r6, r3
 801465e:	f000 80d5 	beq.w	801480c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8014662:	2a03      	cmp	r2, #3
 8014664:	f000 80dd 	beq.w	8014822 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8014668:	2a01      	cmp	r2, #1
 801466a:	f040 80e5 	bne.w	8014838 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 801466e:	8925      	ldrh	r5, [r4, #8]
 8014670:	4633      	mov	r3, r6
 8014672:	eba5 0909 	sub.w	r9, r5, r9
 8014676:	463e      	mov	r6, r7
 8014678:	465d      	mov	r5, fp
 801467a:	461f      	mov	r7, r3
 801467c:	fa0f fb89 	sxth.w	fp, r9
 8014680:	4b5c      	ldr	r3, [pc, #368]	; (80147f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8014682:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8014684:	6818      	ldr	r0, [r3, #0]
 8014686:	f7fb fb3f 	bl	800fd08 <_ZNK8touchgfx5Texts7getTextEt>
 801468a:	f8a8 b000 	strh.w	fp, [r8]
 801468e:	f8a8 5002 	strh.w	r5, [r8, #2]
 8014692:	f8a8 6004 	strh.w	r6, [r8, #4]
 8014696:	f8a8 7006 	strh.w	r7, [r8, #6]
 801469a:	f8c8 0008 	str.w	r0, [r8, #8]
 801469e:	e737      	b.n	8014510 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80146a0:	f004 fd31 	bl	8019106 <_ZN8touchgfx12TextProviderC1Ev>
 80146a4:	682b      	ldr	r3, [r5, #0]
 80146a6:	4628      	mov	r0, r5
 80146a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80146aa:	4798      	blx	r3
 80146ac:	682b      	ldr	r3, [r5, #0]
 80146ae:	4607      	mov	r7, r0
 80146b0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80146b2:	4628      	mov	r0, r5
 80146b4:	4798      	blx	r3
 80146b6:	6823      	ldr	r3, [r4, #0]
 80146b8:	4683      	mov	fp, r0
 80146ba:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80146bc:	4620      	mov	r0, r4
 80146be:	4798      	blx	r3
 80146c0:	6822      	ldr	r2, [r4, #0]
 80146c2:	9005      	str	r0, [sp, #20]
 80146c4:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 80146c8:	4620      	mov	r0, r4
 80146ca:	4790      	blx	r2
 80146cc:	9b05      	ldr	r3, [sp, #20]
 80146ce:	9001      	str	r0, [sp, #4]
 80146d0:	463a      	mov	r2, r7
 80146d2:	4649      	mov	r1, r9
 80146d4:	9300      	str	r3, [sp, #0]
 80146d6:	a80f      	add	r0, sp, #60	; 0x3c
 80146d8:	465b      	mov	r3, fp
 80146da:	f004 fd84 	bl	80191e6 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80146de:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80146e2:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 80146e6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80146e8:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 80146ec:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80146f0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80146f4:	bf0a      	itet	eq
 80146f6:	464a      	moveq	r2, r9
 80146f8:	461a      	movne	r2, r3
 80146fa:	4699      	moveq	r9, r3
 80146fc:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8014700:	1ad2      	subs	r2, r2, r3
 8014702:	6833      	ldr	r3, [r6, #0]
 8014704:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8014708:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 801470c:	af0f      	add	r7, sp, #60	; 0x3c
 801470e:	7859      	ldrb	r1, [r3, #1]
 8014710:	9707      	str	r7, [sp, #28]
 8014712:	2300      	movs	r3, #0
 8014714:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8014718:	f8ad 3018 	strh.w	r3, [sp, #24]
 801471c:	f88d 1020 	strb.w	r1, [sp, #32]
 8014720:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8014724:	9509      	str	r5, [sp, #36]	; 0x24
 8014726:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801472a:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801472e:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8014732:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8014736:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801473a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801473e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8014742:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014746:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801474a:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 801474e:	b350      	cbz	r0, 80147a6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8014750:	682b      	ldr	r3, [r5, #0]
 8014752:	4628      	mov	r0, r5
 8014754:	695b      	ldr	r3, [r3, #20]
 8014756:	4798      	blx	r3
 8014758:	4607      	mov	r7, r0
 801475a:	b320      	cbz	r0, 80147a6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801475c:	9809      	ldr	r0, [sp, #36]	; 0x24
 801475e:	6803      	ldr	r3, [r0, #0]
 8014760:	4639      	mov	r1, r7
 8014762:	68db      	ldr	r3, [r3, #12]
 8014764:	4798      	blx	r3
 8014766:	4606      	mov	r6, r0
 8014768:	b1e8      	cbz	r0, 80147a6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801476a:	7b43      	ldrb	r3, [r0, #13]
 801476c:	7a82      	ldrb	r2, [r0, #10]
 801476e:	005b      	lsls	r3, r3, #1
 8014770:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014774:	4313      	orrs	r3, r2
 8014776:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801477a:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 801477e:	2b06      	cmp	r3, #6
 8014780:	d111      	bne.n	80147a6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8014782:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014784:	6803      	ldr	r3, [r0, #0]
 8014786:	4632      	mov	r2, r6
 8014788:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801478a:	4639      	mov	r1, r7
 801478c:	4798      	blx	r3
 801478e:	7b73      	ldrb	r3, [r6, #13]
 8014790:	005b      	lsls	r3, r3, #1
 8014792:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014796:	7ab3      	ldrb	r3, [r6, #10]
 8014798:	4313      	orrs	r3, r2
 801479a:	4418      	add	r0, r3
 801479c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80147a0:	4418      	add	r0, r3
 80147a2:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 80147a6:	2600      	movs	r6, #0
 80147a8:	4637      	mov	r7, r6
 80147aa:	a806      	add	r0, sp, #24
 80147ac:	f002 f8d4 	bl	8016958 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80147b0:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 80147b4:	9b03      	ldr	r3, [sp, #12]
 80147b6:	4286      	cmp	r6, r0
 80147b8:	eba9 0903 	sub.w	r9, r9, r3
 80147bc:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80147c0:	bfb8      	it	lt
 80147c2:	4606      	movlt	r6, r0
 80147c4:	3701      	adds	r7, #1
 80147c6:	b236      	sxth	r6, r6
 80147c8:	b2bf      	uxth	r7, r7
 80147ca:	fa0f f989 	sxth.w	r9, r9
 80147ce:	2b00      	cmp	r3, #0
 80147d0:	f43f af0d 	beq.w	80145ee <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80147d4:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 80147d8:	2b00      	cmp	r3, #0
 80147da:	f47f af08 	bne.w	80145ee <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80147de:	7a2b      	ldrb	r3, [r5, #8]
 80147e0:	444b      	add	r3, r9
 80147e2:	2b00      	cmp	r3, #0
 80147e4:	dce1      	bgt.n	80147aa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 80147e6:	e702      	b.n	80145ee <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80147e8:	2000e21c 	.word	0x2000e21c
 80147ec:	2000e218 	.word	0x2000e218
 80147f0:	2000e220 	.word	0x2000e220
 80147f4:	2000e224 	.word	0x2000e224
 80147f8:	ebaa 0606 	sub.w	r6, sl, r6
 80147fc:	2002      	movs	r0, #2
 80147fe:	fb96 f6f0 	sdiv	r6, r6, r0
 8014802:	e71d      	b.n	8014640 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8014804:	441e      	add	r6, r3
 8014806:	ebaa 0606 	sub.w	r6, sl, r6
 801480a:	e719      	b.n	8014640 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 801480c:	8925      	ldrh	r5, [r4, #8]
 801480e:	1aed      	subs	r5, r5, r3
 8014810:	eba5 050a 	sub.w	r5, r5, sl
 8014814:	fa0f fb85 	sxth.w	fp, r5
 8014818:	8965      	ldrh	r5, [r4, #10]
 801481a:	eba5 0509 	sub.w	r5, r5, r9
 801481e:	b22d      	sxth	r5, r5
 8014820:	e72e      	b.n	8014680 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8014822:	8965      	ldrh	r5, [r4, #10]
 8014824:	1aed      	subs	r5, r5, r3
 8014826:	eba5 050a 	sub.w	r5, r5, sl
 801482a:	4633      	mov	r3, r6
 801482c:	b22d      	sxth	r5, r5
 801482e:	463e      	mov	r6, r7
 8014830:	f04f 0b00 	mov.w	fp, #0
 8014834:	461f      	mov	r7, r3
 8014836:	e723      	b.n	8014680 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8014838:	2500      	movs	r5, #0
 801483a:	e721      	b.n	8014680 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

0801483c <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 801483c:	b513      	push	{r0, r1, r4, lr}
 801483e:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8014842:	4604      	mov	r4, r0
 8014844:	b1fb      	cbz	r3, 8014886 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8014846:	4b16      	ldr	r3, [pc, #88]	; (80148a0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8014848:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801484a:	881b      	ldrh	r3, [r3, #0]
 801484c:	428b      	cmp	r3, r1
 801484e:	d91a      	bls.n	8014886 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8014850:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8014854:	2b00      	cmp	r3, #0
 8014856:	dd16      	ble.n	8014886 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8014858:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801485c:	2b00      	cmp	r3, #0
 801485e:	dd12      	ble.n	8014886 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8014860:	4b10      	ldr	r3, [pc, #64]	; (80148a4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8014862:	6818      	ldr	r0, [r3, #0]
 8014864:	f7fb fa50 	bl	800fd08 <_ZNK8touchgfx5Texts7getTextEt>
 8014868:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 801486c:	6822      	ldr	r2, [r4, #0]
 801486e:	2b00      	cmp	r3, #0
 8014870:	db06      	blt.n	8014880 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8014872:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8014876:	2b00      	cmp	r3, #0
 8014878:	db02      	blt.n	8014880 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801487a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801487c:	4298      	cmp	r0, r3
 801487e:	d004      	beq.n	801488a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8014880:	6953      	ldr	r3, [r2, #20]
 8014882:	4620      	mov	r0, r4
 8014884:	4798      	blx	r3
 8014886:	b002      	add	sp, #8
 8014888:	bd10      	pop	{r4, pc}
 801488a:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 801488e:	c903      	ldmia	r1, {r0, r1}
 8014890:	466b      	mov	r3, sp
 8014892:	e883 0003 	stmia.w	r3, {r0, r1}
 8014896:	6912      	ldr	r2, [r2, #16]
 8014898:	4619      	mov	r1, r3
 801489a:	4620      	mov	r0, r4
 801489c:	4790      	blx	r2
 801489e:	e7f2      	b.n	8014886 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80148a0:	2000e21c 	.word	0x2000e21c
 80148a4:	2000e224 	.word	0x2000e224

080148a8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80148a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80148ac:	4b44      	ldr	r3, [pc, #272]	; (80149c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80148ae:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80148b0:	881b      	ldrh	r3, [r3, #0]
 80148b2:	4293      	cmp	r3, r2
 80148b4:	b08e      	sub	sp, #56	; 0x38
 80148b6:	4604      	mov	r4, r0
 80148b8:	d97e      	bls.n	80149b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80148ba:	6808      	ldr	r0, [r1, #0]
 80148bc:	4d41      	ldr	r5, [pc, #260]	; (80149c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80148be:	6849      	ldr	r1, [r1, #4]
 80148c0:	ab05      	add	r3, sp, #20
 80148c2:	c303      	stmia	r3!, {r0, r1}
 80148c4:	4611      	mov	r1, r2
 80148c6:	6828      	ldr	r0, [r5, #0]
 80148c8:	f7fb fa1e 	bl	800fd08 <_ZNK8touchgfx5Texts7getTextEt>
 80148cc:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80148d0:	2b00      	cmp	r3, #0
 80148d2:	db11      	blt.n	80148f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80148d4:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80148d8:	2b00      	cmp	r3, #0
 80148da:	db0d      	blt.n	80148f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80148dc:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80148de:	4298      	cmp	r0, r3
 80148e0:	d10a      	bne.n	80148f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80148e2:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 80148e6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80148ea:	ab09      	add	r3, sp, #36	; 0x24
 80148ec:	e883 0003 	stmia.w	r3, {r0, r1}
 80148f0:	4619      	mov	r1, r3
 80148f2:	a805      	add	r0, sp, #20
 80148f4:	f7fd fe72 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 80148f8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80148fc:	2b00      	cmp	r3, #0
 80148fe:	dd5b      	ble.n	80149b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8014900:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8014904:	2b00      	cmp	r3, #0
 8014906:	dd57      	ble.n	80149b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8014908:	4f2f      	ldr	r7, [pc, #188]	; (80149c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 801490a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 801490c:	683b      	ldr	r3, [r7, #0]
 801490e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8014912:	4b2e      	ldr	r3, [pc, #184]	; (80149cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8014914:	681b      	ldr	r3, [r3, #0]
 8014916:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801491a:	2e00      	cmp	r6, #0
 801491c:	d04c      	beq.n	80149b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801491e:	6823      	ldr	r3, [r4, #0]
 8014920:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8014924:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014926:	4620      	mov	r0, r4
 8014928:	4798      	blx	r3
 801492a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 801492c:	683b      	ldr	r3, [r7, #0]
 801492e:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8014932:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8014936:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 801493a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801493c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8014940:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8014944:	785b      	ldrb	r3, [r3, #1]
 8014946:	9609      	str	r6, [sp, #36]	; 0x24
 8014948:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801494c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8014950:	4b1f      	ldr	r3, [pc, #124]	; (80149d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8014952:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8014956:	681b      	ldr	r3, [r3, #0]
 8014958:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 801495c:	910b      	str	r1, [sp, #44]	; 0x2c
 801495e:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8014962:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8014966:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 801496a:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 801496e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8014972:	b10a      	cbz	r2, 8014978 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8014974:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8014976:	b906      	cbnz	r6, 801497a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8014978:	689e      	ldr	r6, [r3, #8]
 801497a:	af07      	add	r7, sp, #28
 801497c:	4621      	mov	r1, r4
 801497e:	4638      	mov	r0, r7
 8014980:	f003 feee 	bl	8018760 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014984:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8014986:	6828      	ldr	r0, [r5, #0]
 8014988:	f7fb f9be 	bl	800fd08 <_ZNK8touchgfx5Texts7getTextEt>
 801498c:	6823      	ldr	r3, [r4, #0]
 801498e:	4605      	mov	r5, r0
 8014990:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014992:	4620      	mov	r0, r4
 8014994:	4798      	blx	r3
 8014996:	6823      	ldr	r3, [r4, #0]
 8014998:	4680      	mov	r8, r0
 801499a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801499e:	4620      	mov	r0, r4
 80149a0:	4798      	blx	r3
 80149a2:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80149a6:	ab09      	add	r3, sp, #36	; 0x24
 80149a8:	9300      	str	r3, [sp, #0]
 80149aa:	9501      	str	r5, [sp, #4]
 80149ac:	ab05      	add	r3, sp, #20
 80149ae:	e897 0006 	ldmia.w	r7, {r1, r2}
 80149b2:	4630      	mov	r0, r6
 80149b4:	f7fb f939 	bl	800fc2a <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80149b8:	b00e      	add	sp, #56	; 0x38
 80149ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80149be:	bf00      	nop
 80149c0:	2000e21c 	.word	0x2000e21c
 80149c4:	2000e224 	.word	0x2000e224
 80149c8:	2000e218 	.word	0x2000e218
 80149cc:	2000e220 	.word	0x2000e220
 80149d0:	2000e1c0 	.word	0x2000e1c0

080149d4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 80149d4:	b538      	push	{r3, r4, r5, lr}
 80149d6:	4b0e      	ldr	r3, [pc, #56]	; (8014a10 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 80149d8:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80149da:	881b      	ldrh	r3, [r3, #0]
 80149dc:	429a      	cmp	r2, r3
 80149de:	4604      	mov	r4, r0
 80149e0:	d214      	bcs.n	8014a0c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80149e2:	6803      	ldr	r3, [r0, #0]
 80149e4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80149e6:	4798      	blx	r3
 80149e8:	6823      	ldr	r3, [r4, #0]
 80149ea:	4605      	mov	r5, r0
 80149ec:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80149ee:	4620      	mov	r0, r4
 80149f0:	4798      	blx	r3
 80149f2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80149f6:	b22d      	sxth	r5, r5
 80149f8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80149fc:	4601      	mov	r1, r0
 80149fe:	bf06      	itte	eq
 8014a00:	4602      	moveq	r2, r0
 8014a02:	4629      	moveq	r1, r5
 8014a04:	462a      	movne	r2, r5
 8014a06:	4620      	mov	r0, r4
 8014a08:	f7f7 fe51 	bl	800c6ae <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8014a0c:	bd38      	pop	{r3, r4, r5, pc}
 8014a0e:	bf00      	nop
 8014a10:	2000e21c 	.word	0x2000e21c

08014a14 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8014a14:	b530      	push	{r4, r5, lr}
 8014a16:	888b      	ldrh	r3, [r1, #4]
 8014a18:	8583      	strh	r3, [r0, #44]	; 0x2c
 8014a1a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8014a1e:	b085      	sub	sp, #20
 8014a20:	4604      	mov	r4, r0
 8014a22:	b923      	cbnz	r3, 8014a2e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8014a24:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8014a28:	b90b      	cbnz	r3, 8014a2e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8014a2a:	f7ff ffd3 	bl	80149d4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8014a2e:	6823      	ldr	r3, [r4, #0]
 8014a30:	466d      	mov	r5, sp
 8014a32:	4621      	mov	r1, r4
 8014a34:	4628      	mov	r0, r5
 8014a36:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8014a3a:	4798      	blx	r3
 8014a3c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8014a40:	343c      	adds	r4, #60	; 0x3c
 8014a42:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8014a46:	b005      	add	sp, #20
 8014a48:	bd30      	pop	{r4, r5, pc}

08014a4a <_ZNK8touchgfx3Box12getSolidRectEv>:
 8014a4a:	2300      	movs	r3, #0
 8014a4c:	8083      	strh	r3, [r0, #4]
 8014a4e:	80c3      	strh	r3, [r0, #6]
 8014a50:	8003      	strh	r3, [r0, #0]
 8014a52:	8043      	strh	r3, [r0, #2]
 8014a54:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8014a58:	2bff      	cmp	r3, #255	; 0xff
 8014a5a:	bf01      	itttt	eq
 8014a5c:	890b      	ldrheq	r3, [r1, #8]
 8014a5e:	8083      	strheq	r3, [r0, #4]
 8014a60:	894b      	ldrheq	r3, [r1, #10]
 8014a62:	80c3      	strheq	r3, [r0, #6]
 8014a64:	4770      	bx	lr
	...

08014a68 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8014a68:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014a6a:	4604      	mov	r4, r0
 8014a6c:	6808      	ldr	r0, [r1, #0]
 8014a6e:	6849      	ldr	r1, [r1, #4]
 8014a70:	466b      	mov	r3, sp
 8014a72:	c303      	stmia	r3!, {r0, r1}
 8014a74:	6823      	ldr	r3, [r4, #0]
 8014a76:	4669      	mov	r1, sp
 8014a78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014a7a:	4620      	mov	r0, r4
 8014a7c:	4798      	blx	r3
 8014a7e:	4b08      	ldr	r3, [pc, #32]	; (8014aa0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8014a80:	681b      	ldr	r3, [r3, #0]
 8014a82:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8014a86:	b10a      	cbz	r2, 8014a8c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8014a88:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014a8a:	b900      	cbnz	r0, 8014a8e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8014a8c:	6898      	ldr	r0, [r3, #8]
 8014a8e:	6803      	ldr	r3, [r0, #0]
 8014a90:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8014a92:	6a1d      	ldr	r5, [r3, #32]
 8014a94:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8014a98:	4669      	mov	r1, sp
 8014a9a:	47a8      	blx	r5
 8014a9c:	b003      	add	sp, #12
 8014a9e:	bd30      	pop	{r4, r5, pc}
 8014aa0:	2000e1c0 	.word	0x2000e1c0

08014aa4 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8014aa4:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8014aa8:	b12a      	cbz	r2, 8014ab6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8014aaa:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8014aae:	b112      	cbz	r2, 8014ab6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8014ab0:	6803      	ldr	r3, [r0, #0]
 8014ab2:	695b      	ldr	r3, [r3, #20]
 8014ab4:	4718      	bx	r3
 8014ab6:	4770      	bx	lr

08014ab8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8014ab8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014abc:	4b2f      	ldr	r3, [pc, #188]	; (8014b7c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8014abe:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8014ac0:	881b      	ldrh	r3, [r3, #0]
 8014ac2:	4293      	cmp	r3, r2
 8014ac4:	b08d      	sub	sp, #52	; 0x34
 8014ac6:	4604      	mov	r4, r0
 8014ac8:	460f      	mov	r7, r1
 8014aca:	d954      	bls.n	8014b76 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8014acc:	4b2c      	ldr	r3, [pc, #176]	; (8014b80 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8014ace:	6819      	ldr	r1, [r3, #0]
 8014ad0:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8014ad4:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8014ad8:	4a2a      	ldr	r2, [pc, #168]	; (8014b84 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8014ada:	6812      	ldr	r2, [r2, #0]
 8014adc:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8014ae0:	2900      	cmp	r1, #0
 8014ae2:	d048      	beq.n	8014b76 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8014ae4:	785a      	ldrb	r2, [r3, #1]
 8014ae6:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8014aea:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8014aee:	4b26      	ldr	r3, [pc, #152]	; (8014b88 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8014af0:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8014af4:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8014af8:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8014afc:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8014afe:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8014b02:	9107      	str	r1, [sp, #28]
 8014b04:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8014b08:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8014b0c:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8014b10:	681a      	ldr	r2, [r3, #0]
 8014b12:	f88d 8020 	strb.w	r8, [sp, #32]
 8014b16:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8014b1a:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8014b1e:	9609      	str	r6, [sp, #36]	; 0x24
 8014b20:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8014b24:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8014b28:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8014b2c:	b10b      	cbz	r3, 8014b32 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8014b2e:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8014b30:	b905      	cbnz	r5, 8014b34 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8014b32:	6895      	ldr	r5, [r2, #8]
 8014b34:	ae05      	add	r6, sp, #20
 8014b36:	4621      	mov	r1, r4
 8014b38:	4630      	mov	r0, r6
 8014b3a:	f003 fe11 	bl	8018760 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014b3e:	4b13      	ldr	r3, [pc, #76]	; (8014b8c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8014b40:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8014b42:	6818      	ldr	r0, [r3, #0]
 8014b44:	f7fb f8e0 	bl	800fd08 <_ZNK8touchgfx5Texts7getTextEt>
 8014b48:	6823      	ldr	r3, [r4, #0]
 8014b4a:	4680      	mov	r8, r0
 8014b4c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014b4e:	4620      	mov	r0, r4
 8014b50:	4798      	blx	r3
 8014b52:	6823      	ldr	r3, [r4, #0]
 8014b54:	4681      	mov	r9, r0
 8014b56:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014b5a:	4620      	mov	r0, r4
 8014b5c:	4798      	blx	r3
 8014b5e:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8014b62:	ab07      	add	r3, sp, #28
 8014b64:	9300      	str	r3, [sp, #0]
 8014b66:	f8cd 8004 	str.w	r8, [sp, #4]
 8014b6a:	463b      	mov	r3, r7
 8014b6c:	e896 0006 	ldmia.w	r6, {r1, r2}
 8014b70:	4628      	mov	r0, r5
 8014b72:	f7fb f85a 	bl	800fc2a <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8014b76:	b00d      	add	sp, #52	; 0x34
 8014b78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014b7c:	2000e21c 	.word	0x2000e21c
 8014b80:	2000e218 	.word	0x2000e218
 8014b84:	2000e220 	.word	0x2000e220
 8014b88:	2000e1c0 	.word	0x2000e1c0
 8014b8c:	2000e224 	.word	0x2000e224

08014b90 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 8014b90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014b94:	4604      	mov	r4, r0
 8014b96:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8014b98:	8962      	ldrh	r2, [r4, #10]
 8014b9a:	b218      	sxth	r0, r3
 8014b9c:	460e      	mov	r6, r1
 8014b9e:	005b      	lsls	r3, r3, #1
 8014ba0:	8921      	ldrh	r1, [r4, #8]
 8014ba2:	b29b      	uxth	r3, r3
 8014ba4:	1ac9      	subs	r1, r1, r3
 8014ba6:	b08e      	sub	sp, #56	; 0x38
 8014ba8:	b209      	sxth	r1, r1
 8014baa:	1ad3      	subs	r3, r2, r3
 8014bac:	b21b      	sxth	r3, r3
 8014bae:	2900      	cmp	r1, #0
 8014bb0:	f8ad 0000 	strh.w	r0, [sp]
 8014bb4:	f8ad 0002 	strh.w	r0, [sp, #2]
 8014bb8:	f8ad 1004 	strh.w	r1, [sp, #4]
 8014bbc:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014bc0:	dd5e      	ble.n	8014c80 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8014bc2:	2b00      	cmp	r3, #0
 8014bc4:	dd5c      	ble.n	8014c80 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8014bc6:	6830      	ldr	r0, [r6, #0]
 8014bc8:	6871      	ldr	r1, [r6, #4]
 8014bca:	ab02      	add	r3, sp, #8
 8014bcc:	c303      	stmia	r3!, {r0, r1}
 8014bce:	4669      	mov	r1, sp
 8014bd0:	a802      	add	r0, sp, #8
 8014bd2:	f7fd fd03 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 8014bd6:	4620      	mov	r0, r4
 8014bd8:	a902      	add	r1, sp, #8
 8014bda:	f7ff ff45 	bl	8014a68 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 8014bde:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 8014be0:	2800      	cmp	r0, #0
 8014be2:	d05f      	beq.n	8014ca4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8014be4:	8963      	ldrh	r3, [r4, #10]
 8014be6:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8014bea:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014bee:	1a1f      	subs	r7, r3, r0
 8014bf0:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 8014bf4:	b202      	sxth	r2, r0
 8014bf6:	2500      	movs	r5, #0
 8014bf8:	b21b      	sxth	r3, r3
 8014bfa:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 8014bfe:	1a09      	subs	r1, r1, r0
 8014c00:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8014c04:	9506      	str	r5, [sp, #24]
 8014c06:	f8ad 201e 	strh.w	r2, [sp, #30]
 8014c0a:	f8ad 5020 	strh.w	r5, [sp, #32]
 8014c0e:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 8014c12:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8014c16:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8014c1a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8014c1e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8014c22:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 8014c26:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8014c2a:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8014c2e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014c32:	af04      	add	r7, sp, #16
 8014c34:	ab06      	add	r3, sp, #24
 8014c36:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8014c3a:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014c3e:	e887 0003 	stmia.w	r7, {r0, r1}
 8014c42:	4631      	mov	r1, r6
 8014c44:	4638      	mov	r0, r7
 8014c46:	f7fd fcc9 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 8014c4a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8014c4e:	2b00      	cmp	r3, #0
 8014c50:	dd12      	ble.n	8014c78 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8014c52:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8014c56:	2b00      	cmp	r3, #0
 8014c58:	dd0e      	ble.n	8014c78 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8014c5a:	6823      	ldr	r3, [r4, #0]
 8014c5c:	4639      	mov	r1, r7
 8014c5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014c60:	4620      	mov	r0, r4
 8014c62:	4798      	blx	r3
 8014c64:	f7f6 ff06 	bl	800ba74 <_ZN8touchgfx3HAL3lcdEv>
 8014c68:	6803      	ldr	r3, [r0, #0]
 8014c6a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014c6c:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8014c70:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8014c74:	4639      	mov	r1, r7
 8014c76:	47c0      	blx	r8
 8014c78:	3501      	adds	r5, #1
 8014c7a:	2d04      	cmp	r5, #4
 8014c7c:	d1da      	bne.n	8014c34 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 8014c7e:	e011      	b.n	8014ca4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8014c80:	6830      	ldr	r0, [r6, #0]
 8014c82:	6871      	ldr	r1, [r6, #4]
 8014c84:	ab06      	add	r3, sp, #24
 8014c86:	c303      	stmia	r3!, {r0, r1}
 8014c88:	6823      	ldr	r3, [r4, #0]
 8014c8a:	a906      	add	r1, sp, #24
 8014c8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014c8e:	4620      	mov	r0, r4
 8014c90:	4798      	blx	r3
 8014c92:	f7f6 feef 	bl	800ba74 <_ZN8touchgfx3HAL3lcdEv>
 8014c96:	6803      	ldr	r3, [r0, #0]
 8014c98:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014c9a:	6a1d      	ldr	r5, [r3, #32]
 8014c9c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8014ca0:	a906      	add	r1, sp, #24
 8014ca2:	47a8      	blx	r5
 8014ca4:	b00e      	add	sp, #56	; 0x38
 8014ca6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014caa <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8014caa:	b570      	push	{r4, r5, r6, lr}
 8014cac:	880b      	ldrh	r3, [r1, #0]
 8014cae:	84c3      	strh	r3, [r0, #38]	; 0x26
 8014cb0:	4604      	mov	r4, r0
 8014cb2:	4608      	mov	r0, r1
 8014cb4:	460d      	mov	r5, r1
 8014cb6:	f005 fdb1 	bl	801a81c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014cba:	4606      	mov	r6, r0
 8014cbc:	4628      	mov	r0, r5
 8014cbe:	f005 fde1 	bl	801a884 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014cc2:	6823      	ldr	r3, [r4, #0]
 8014cc4:	4605      	mov	r5, r0
 8014cc6:	4631      	mov	r1, r6
 8014cc8:	4620      	mov	r0, r4
 8014cca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014ccc:	4798      	blx	r3
 8014cce:	6823      	ldr	r3, [r4, #0]
 8014cd0:	4629      	mov	r1, r5
 8014cd2:	4620      	mov	r0, r4
 8014cd4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014cd6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014cda:	4718      	bx	r3

08014cdc <_ZNK8touchgfx5Image12getSolidRectEv>:
 8014cdc:	b510      	push	{r4, lr}
 8014cde:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8014ce2:	2bff      	cmp	r3, #255	; 0xff
 8014ce4:	4604      	mov	r4, r0
 8014ce6:	d006      	beq.n	8014cf6 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8014ce8:	2300      	movs	r3, #0
 8014cea:	8003      	strh	r3, [r0, #0]
 8014cec:	8043      	strh	r3, [r0, #2]
 8014cee:	8083      	strh	r3, [r0, #4]
 8014cf0:	80c3      	strh	r3, [r0, #6]
 8014cf2:	4620      	mov	r0, r4
 8014cf4:	bd10      	pop	{r4, pc}
 8014cf6:	3126      	adds	r1, #38	; 0x26
 8014cf8:	f005 fdf8 	bl	801a8ec <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8014cfc:	e7f9      	b.n	8014cf2 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

08014d00 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8014d00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014d04:	4604      	mov	r4, r0
 8014d06:	b088      	sub	sp, #32
 8014d08:	f854 3b26 	ldr.w	r3, [r4], #38
 8014d0c:	2500      	movs	r5, #0
 8014d0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014d10:	460f      	mov	r7, r1
 8014d12:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8014d16:	a904      	add	r1, sp, #16
 8014d18:	4606      	mov	r6, r0
 8014d1a:	4798      	blx	r3
 8014d1c:	4620      	mov	r0, r4
 8014d1e:	f005 fd7d 	bl	801a81c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014d22:	4680      	mov	r8, r0
 8014d24:	4620      	mov	r0, r4
 8014d26:	f005 fdad 	bl	801a884 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014d2a:	9506      	str	r5, [sp, #24]
 8014d2c:	ad06      	add	r5, sp, #24
 8014d2e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8014d32:	4639      	mov	r1, r7
 8014d34:	4628      	mov	r0, r5
 8014d36:	f8ad 801c 	strh.w	r8, [sp, #28]
 8014d3a:	f7fd fc4f 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 8014d3e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8014d42:	2b00      	cmp	r3, #0
 8014d44:	dd19      	ble.n	8014d7a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8014d46:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8014d4a:	2b00      	cmp	r3, #0
 8014d4c:	dd15      	ble.n	8014d7a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8014d4e:	4b0c      	ldr	r3, [pc, #48]	; (8014d80 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8014d50:	681b      	ldr	r3, [r3, #0]
 8014d52:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8014d56:	b10a      	cbz	r2, 8014d5c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8014d58:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014d5a:	b900      	cbnz	r0, 8014d5e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8014d5c:	6898      	ldr	r0, [r3, #8]
 8014d5e:	6801      	ldr	r1, [r0, #0]
 8014d60:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014d64:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8014d68:	2701      	movs	r7, #1
 8014d6a:	9702      	str	r7, [sp, #8]
 8014d6c:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8014d70:	e9cd 5600 	strd	r5, r6, [sp]
 8014d74:	688d      	ldr	r5, [r1, #8]
 8014d76:	4621      	mov	r1, r4
 8014d78:	47a8      	blx	r5
 8014d7a:	b008      	add	sp, #32
 8014d7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014d80:	2000e1c0 	.word	0x2000e1c0

08014d84 <_ZN8touchgfx7OutlineD1Ev>:
 8014d84:	4770      	bx	lr

08014d86 <_ZN8touchgfx7OutlineD0Ev>:
 8014d86:	b510      	push	{r4, lr}
 8014d88:	2130      	movs	r1, #48	; 0x30
 8014d8a:	4604      	mov	r4, r0
 8014d8c:	f013 fca1 	bl	80286d2 <_ZdlPvj>
 8014d90:	4620      	mov	r0, r4
 8014d92:	bd10      	pop	{r4, pc}

08014d94 <_ZN8touchgfx7Outline5resetEv>:
 8014d94:	b510      	push	{r4, lr}
 8014d96:	4604      	mov	r4, r0
 8014d98:	f000 fe96 	bl	8015ac8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8014d9c:	60e0      	str	r0, [r4, #12]
 8014d9e:	f000 fe99 	bl	8015ad4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8014da2:	68e3      	ldr	r3, [r4, #12]
 8014da4:	6123      	str	r3, [r4, #16]
 8014da6:	08c0      	lsrs	r0, r0, #3
 8014da8:	2200      	movs	r2, #0
 8014daa:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8014dae:	3801      	subs	r0, #1
 8014db0:	6060      	str	r0, [r4, #4]
 8014db2:	60a2      	str	r2, [r4, #8]
 8014db4:	8019      	strh	r1, [r3, #0]
 8014db6:	8059      	strh	r1, [r3, #2]
 8014db8:	809a      	strh	r2, [r3, #4]
 8014dba:	80da      	strh	r2, [r3, #6]
 8014dbc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014dbe:	f023 0301 	bic.w	r3, r3, #1
 8014dc2:	f043 0302 	orr.w	r3, r3, #2
 8014dc6:	6263      	str	r3, [r4, #36]	; 0x24
 8014dc8:	bd10      	pop	{r4, pc}
	...

08014dcc <_ZN8touchgfx7OutlineC1Ev>:
 8014dcc:	b510      	push	{r4, lr}
 8014dce:	4b0a      	ldr	r3, [pc, #40]	; (8014df8 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8014dd0:	6003      	str	r3, [r0, #0]
 8014dd2:	2300      	movs	r3, #0
 8014dd4:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8014dd8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8014ddc:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8014de0:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8014de4:	6243      	str	r3, [r0, #36]	; 0x24
 8014de6:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8014dea:	4604      	mov	r4, r0
 8014dec:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8014df0:	f7ff ffd0 	bl	8014d94 <_ZN8touchgfx7Outline5resetEv>
 8014df4:	4620      	mov	r0, r4
 8014df6:	bd10      	pop	{r4, pc}
 8014df8:	0802cd00 	.word	0x0802cd00

08014dfc <_ZN8touchgfx7Outline10renderLineEiiii>:
 8014dfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e00:	b093      	sub	sp, #76	; 0x4c
 8014e02:	1156      	asrs	r6, r2, #5
 8014e04:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8014e06:	9305      	str	r3, [sp, #20]
 8014e08:	f004 051f 	and.w	r5, r4, #31
 8014e0c:	1153      	asrs	r3, r2, #5
 8014e0e:	9504      	str	r5, [sp, #16]
 8014e10:	1165      	asrs	r5, r4, #5
 8014e12:	9303      	str	r3, [sp, #12]
 8014e14:	42ae      	cmp	r6, r5
 8014e16:	ea4f 1364 	mov.w	r3, r4, asr #5
 8014e1a:	9306      	str	r3, [sp, #24]
 8014e1c:	f002 031f 	and.w	r3, r2, #31
 8014e20:	f040 80f8 	bne.w	8015014 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8014e24:	9c04      	ldr	r4, [sp, #16]
 8014e26:	9a05      	ldr	r2, [sp, #20]
 8014e28:	42a3      	cmp	r3, r4
 8014e2a:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8014e2e:	6902      	ldr	r2, [r0, #16]
 8014e30:	d125      	bne.n	8014e7e <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8014e32:	f9b2 3000 	ldrsh.w	r3, [r2]
 8014e36:	459e      	cmp	lr, r3
 8014e38:	d103      	bne.n	8014e42 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8014e3a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8014e3e:	429e      	cmp	r6, r3
 8014e40:	d035      	beq.n	8014eae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014e42:	88d1      	ldrh	r1, [r2, #6]
 8014e44:	8893      	ldrh	r3, [r2, #4]
 8014e46:	430b      	orrs	r3, r1
 8014e48:	d010      	beq.n	8014e6c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8014e4a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8014e4e:	2b00      	cmp	r3, #0
 8014e50:	db0c      	blt.n	8014e6c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8014e52:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8014e54:	428b      	cmp	r3, r1
 8014e56:	da09      	bge.n	8014e6c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8014e58:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8014e5c:	428b      	cmp	r3, r1
 8014e5e:	bf38      	it	cc
 8014e60:	3208      	addcc	r2, #8
 8014e62:	f103 0301 	add.w	r3, r3, #1
 8014e66:	bf38      	it	cc
 8014e68:	6102      	strcc	r2, [r0, #16]
 8014e6a:	6083      	str	r3, [r0, #8]
 8014e6c:	6903      	ldr	r3, [r0, #16]
 8014e6e:	9a03      	ldr	r2, [sp, #12]
 8014e70:	f8a3 e000 	strh.w	lr, [r3]
 8014e74:	805a      	strh	r2, [r3, #2]
 8014e76:	2200      	movs	r2, #0
 8014e78:	809a      	strh	r2, [r3, #4]
 8014e7a:	80da      	strh	r2, [r3, #6]
 8014e7c:	e017      	b.n	8014eae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014e7e:	9c05      	ldr	r4, [sp, #20]
 8014e80:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8014e84:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8014e88:	f004 041f 	and.w	r4, r4, #31
 8014e8c:	114e      	asrs	r6, r1, #5
 8014e8e:	9402      	str	r4, [sp, #8]
 8014e90:	9c04      	ldr	r4, [sp, #16]
 8014e92:	4576      	cmp	r6, lr
 8014e94:	f001 0c1f 	and.w	ip, r1, #31
 8014e98:	eba4 0403 	sub.w	r4, r4, r3
 8014e9c:	d10a      	bne.n	8014eb4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8014e9e:	9b02      	ldr	r3, [sp, #8]
 8014ea0:	449c      	add	ip, r3
 8014ea2:	44a0      	add	r8, r4
 8014ea4:	fb04 a40c 	mla	r4, r4, ip, sl
 8014ea8:	f8a2 8004 	strh.w	r8, [r2, #4]
 8014eac:	80d4      	strh	r4, [r2, #6]
 8014eae:	b013      	add	sp, #76	; 0x4c
 8014eb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014eb4:	9d05      	ldr	r5, [sp, #20]
 8014eb6:	1a69      	subs	r1, r5, r1
 8014eb8:	bf5b      	ittet	pl
 8014eba:	f1cc 0520 	rsbpl	r5, ip, #32
 8014ebe:	436c      	mulpl	r4, r5
 8014ec0:	2500      	movmi	r5, #0
 8014ec2:	2520      	movpl	r5, #32
 8014ec4:	bf44      	itt	mi
 8014ec6:	fb04 f40c 	mulmi.w	r4, r4, ip
 8014eca:	4249      	negmi	r1, r1
 8014ecc:	9501      	str	r5, [sp, #4]
 8014ece:	9f01      	ldr	r7, [sp, #4]
 8014ed0:	fb94 f5f1 	sdiv	r5, r4, r1
 8014ed4:	fb01 4415 	mls	r4, r1, r5, r4
 8014ed8:	bf54      	ite	pl
 8014eda:	f04f 0901 	movpl.w	r9, #1
 8014ede:	f04f 39ff 	movmi.w	r9, #4294967295	; 0xffffffff
 8014ee2:	2c00      	cmp	r4, #0
 8014ee4:	bfb8      	it	lt
 8014ee6:	f105 35ff 	addlt.w	r5, r5, #4294967295	; 0xffffffff
 8014eea:	44bc      	add	ip, r7
 8014eec:	44a8      	add	r8, r5
 8014eee:	fb05 ac0c 	mla	ip, r5, ip, sl
 8014ef2:	f8a2 8004 	strh.w	r8, [r2, #4]
 8014ef6:	f8a2 c006 	strh.w	ip, [r2, #6]
 8014efa:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014efe:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8014f02:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8014f06:	bfb8      	it	lt
 8014f08:	1864      	addlt	r4, r4, r1
 8014f0a:	ea58 0202 	orrs.w	r2, r8, r2
 8014f0e:	444e      	add	r6, r9
 8014f10:	d011      	beq.n	8014f36 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8014f12:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8014f16:	f1b8 0f00 	cmp.w	r8, #0
 8014f1a:	db0c      	blt.n	8014f36 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8014f1c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8014f1e:	4590      	cmp	r8, r2
 8014f20:	da09      	bge.n	8014f36 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8014f22:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8014f26:	4590      	cmp	r8, r2
 8014f28:	bf3c      	itt	cc
 8014f2a:	f10c 0208 	addcc.w	r2, ip, #8
 8014f2e:	6102      	strcc	r2, [r0, #16]
 8014f30:	f108 0201 	add.w	r2, r8, #1
 8014f34:	6082      	str	r2, [r0, #8]
 8014f36:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014f3a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8014f3e:	f8ac 6000 	strh.w	r6, [ip]
 8014f42:	2700      	movs	r7, #0
 8014f44:	45b6      	cmp	lr, r6
 8014f46:	f8ac 2002 	strh.w	r2, [ip, #2]
 8014f4a:	f8ac 7004 	strh.w	r7, [ip, #4]
 8014f4e:	f8ac 7006 	strh.w	r7, [ip, #6]
 8014f52:	442b      	add	r3, r5
 8014f54:	d04d      	beq.n	8014ff2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8014f56:	9f04      	ldr	r7, [sp, #16]
 8014f58:	1aff      	subs	r7, r7, r3
 8014f5a:	443d      	add	r5, r7
 8014f5c:	016d      	lsls	r5, r5, #5
 8014f5e:	fb95 f8f1 	sdiv	r8, r5, r1
 8014f62:	fb01 5518 	mls	r5, r1, r8, r5
 8014f66:	2d00      	cmp	r5, #0
 8014f68:	bfb8      	it	lt
 8014f6a:	f108 38ff 	addlt.w	r8, r8, #4294967295	; 0xffffffff
 8014f6e:	f108 0701 	add.w	r7, r8, #1
 8014f72:	bfb8      	it	lt
 8014f74:	186d      	addlt	r5, r5, r1
 8014f76:	1a64      	subs	r4, r4, r1
 8014f78:	9703      	str	r7, [sp, #12]
 8014f7a:	f04f 0a00 	mov.w	sl, #0
 8014f7e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014f82:	1964      	adds	r4, r4, r5
 8014f84:	bf58      	it	pl
 8014f86:	9f03      	ldrpl	r7, [sp, #12]
 8014f88:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8014f8c:	bf48      	it	mi
 8014f8e:	4647      	movmi	r7, r8
 8014f90:	44bb      	add	fp, r7
 8014f92:	f8ac b004 	strh.w	fp, [ip, #4]
 8014f96:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014f9a:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014f9e:	f8ac b006 	strh.w	fp, [ip, #6]
 8014fa2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014fa6:	443b      	add	r3, r7
 8014fa8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014fac:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014fb0:	bf58      	it	pl
 8014fb2:	1a64      	subpl	r4, r4, r1
 8014fb4:	ea5b 0707 	orrs.w	r7, fp, r7
 8014fb8:	444e      	add	r6, r9
 8014fba:	d011      	beq.n	8014fe0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8014fbc:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8014fc0:	f1bb 0f00 	cmp.w	fp, #0
 8014fc4:	db0c      	blt.n	8014fe0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8014fc6:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014fc8:	45bb      	cmp	fp, r7
 8014fca:	da09      	bge.n	8014fe0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8014fcc:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014fd0:	45bb      	cmp	fp, r7
 8014fd2:	bf3c      	itt	cc
 8014fd4:	f10c 0708 	addcc.w	r7, ip, #8
 8014fd8:	6107      	strcc	r7, [r0, #16]
 8014fda:	f10b 0701 	add.w	r7, fp, #1
 8014fde:	6087      	str	r7, [r0, #8]
 8014fe0:	6907      	ldr	r7, [r0, #16]
 8014fe2:	45b6      	cmp	lr, r6
 8014fe4:	803e      	strh	r6, [r7, #0]
 8014fe6:	807a      	strh	r2, [r7, #2]
 8014fe8:	f8a7 a004 	strh.w	sl, [r7, #4]
 8014fec:	f8a7 a006 	strh.w	sl, [r7, #6]
 8014ff0:	d1c5      	bne.n	8014f7e <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 8014ff2:	9a04      	ldr	r2, [sp, #16]
 8014ff4:	1ad3      	subs	r3, r2, r3
 8014ff6:	6902      	ldr	r2, [r0, #16]
 8014ff8:	8891      	ldrh	r1, [r2, #4]
 8014ffa:	88d6      	ldrh	r6, [r2, #6]
 8014ffc:	4419      	add	r1, r3
 8014ffe:	8091      	strh	r1, [r2, #4]
 8015000:	9902      	ldr	r1, [sp, #8]
 8015002:	f101 0c20 	add.w	ip, r1, #32
 8015006:	9901      	ldr	r1, [sp, #4]
 8015008:	ebac 0c01 	sub.w	ip, ip, r1
 801500c:	fb03 630c 	mla	r3, r3, ip, r6
 8015010:	80d3      	strh	r3, [r2, #6]
 8015012:	e74c      	b.n	8014eae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8015014:	9d05      	ldr	r5, [sp, #20]
 8015016:	1aa2      	subs	r2, r4, r2
 8015018:	eba5 0501 	sub.w	r5, r5, r1
 801501c:	9508      	str	r5, [sp, #32]
 801501e:	9202      	str	r2, [sp, #8]
 8015020:	f140 8128 	bpl.w	8015274 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8015024:	9a03      	ldr	r2, [sp, #12]
 8015026:	2a00      	cmp	r2, #0
 8015028:	f6ff af41 	blt.w	8014eae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801502c:	9a02      	ldr	r2, [sp, #8]
 801502e:	4252      	negs	r2, r2
 8015030:	9202      	str	r2, [sp, #8]
 8015032:	9a06      	ldr	r2, [sp, #24]
 8015034:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8015038:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 801503c:	9206      	str	r2, [sp, #24]
 801503e:	462a      	mov	r2, r5
 8015040:	940b      	str	r4, [sp, #44]	; 0x2c
 8015042:	435a      	muls	r2, r3
 8015044:	2400      	movs	r4, #0
 8015046:	9d02      	ldr	r5, [sp, #8]
 8015048:	9401      	str	r4, [sp, #4]
 801504a:	9c02      	ldr	r4, [sp, #8]
 801504c:	fb92 f4f4 	sdiv	r4, r2, r4
 8015050:	fb05 2214 	mls	r2, r5, r4, r2
 8015054:	2a00      	cmp	r2, #0
 8015056:	9207      	str	r2, [sp, #28]
 8015058:	bfbc      	itt	lt
 801505a:	1952      	addlt	r2, r2, r5
 801505c:	9207      	strlt	r2, [sp, #28]
 801505e:	9a01      	ldr	r2, [sp, #4]
 8015060:	6905      	ldr	r5, [r0, #16]
 8015062:	bfb8      	it	lt
 8015064:	f104 34ff 	addlt.w	r4, r4, #4294967295	; 0xffffffff
 8015068:	eb04 0901 	add.w	r9, r4, r1
 801506c:	429a      	cmp	r2, r3
 801506e:	ea4f 1669 	mov.w	r6, r9, asr #5
 8015072:	f040 8112 	bne.w	801529a <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8015076:	f9b5 3000 	ldrsh.w	r3, [r5]
 801507a:	429e      	cmp	r6, r3
 801507c:	d104      	bne.n	8015088 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 801507e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015082:	9a03      	ldr	r2, [sp, #12]
 8015084:	429a      	cmp	r2, r3
 8015086:	d01b      	beq.n	80150c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8015088:	88ea      	ldrh	r2, [r5, #6]
 801508a:	88ab      	ldrh	r3, [r5, #4]
 801508c:	4313      	orrs	r3, r2
 801508e:	d010      	beq.n	80150b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8015090:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015094:	2a00      	cmp	r2, #0
 8015096:	db0c      	blt.n	80150b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8015098:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801509a:	429a      	cmp	r2, r3
 801509c:	da09      	bge.n	80150b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 801509e:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 80150a2:	429a      	cmp	r2, r3
 80150a4:	bf38      	it	cc
 80150a6:	3508      	addcc	r5, #8
 80150a8:	f102 0201 	add.w	r2, r2, #1
 80150ac:	bf38      	it	cc
 80150ae:	6105      	strcc	r5, [r0, #16]
 80150b0:	6082      	str	r2, [r0, #8]
 80150b2:	6903      	ldr	r3, [r0, #16]
 80150b4:	9a03      	ldr	r2, [sp, #12]
 80150b6:	805a      	strh	r2, [r3, #2]
 80150b8:	2200      	movs	r2, #0
 80150ba:	801e      	strh	r6, [r3, #0]
 80150bc:	809a      	strh	r2, [r3, #4]
 80150be:	80da      	strh	r2, [r3, #6]
 80150c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80150c2:	9a03      	ldr	r2, [sp, #12]
 80150c4:	6901      	ldr	r1, [r0, #16]
 80150c6:	441a      	add	r2, r3
 80150c8:	f9b1 3000 	ldrsh.w	r3, [r1]
 80150cc:	42b3      	cmp	r3, r6
 80150ce:	d103      	bne.n	80150d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80150d0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80150d4:	429a      	cmp	r2, r3
 80150d6:	d01a      	beq.n	801510e <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80150d8:	88cc      	ldrh	r4, [r1, #6]
 80150da:	888b      	ldrh	r3, [r1, #4]
 80150dc:	4323      	orrs	r3, r4
 80150de:	d010      	beq.n	8015102 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80150e0:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80150e4:	2c00      	cmp	r4, #0
 80150e6:	db0c      	blt.n	8015102 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80150e8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80150ea:	429c      	cmp	r4, r3
 80150ec:	da09      	bge.n	8015102 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80150ee:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80150f2:	429c      	cmp	r4, r3
 80150f4:	bf38      	it	cc
 80150f6:	3108      	addcc	r1, #8
 80150f8:	f104 0401 	add.w	r4, r4, #1
 80150fc:	bf38      	it	cc
 80150fe:	6101      	strcc	r1, [r0, #16]
 8015100:	6084      	str	r4, [r0, #8]
 8015102:	6903      	ldr	r3, [r0, #16]
 8015104:	2100      	movs	r1, #0
 8015106:	801e      	strh	r6, [r3, #0]
 8015108:	805a      	strh	r2, [r3, #2]
 801510a:	8099      	strh	r1, [r3, #4]
 801510c:	80d9      	strh	r1, [r3, #6]
 801510e:	9b06      	ldr	r3, [sp, #24]
 8015110:	4293      	cmp	r3, r2
 8015112:	f000 8082 	beq.w	801521a <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8015116:	9b08      	ldr	r3, [sp, #32]
 8015118:	9c02      	ldr	r4, [sp, #8]
 801511a:	9902      	ldr	r1, [sp, #8]
 801511c:	015b      	lsls	r3, r3, #5
 801511e:	fb93 f1f1 	sdiv	r1, r3, r1
 8015122:	fb04 3311 	mls	r3, r4, r1, r3
 8015126:	2b00      	cmp	r3, #0
 8015128:	9103      	str	r1, [sp, #12]
 801512a:	9308      	str	r3, [sp, #32]
 801512c:	da04      	bge.n	8015138 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 801512e:	1e4b      	subs	r3, r1, #1
 8015130:	9303      	str	r3, [sp, #12]
 8015132:	9b08      	ldr	r3, [sp, #32]
 8015134:	4423      	add	r3, r4
 8015136:	9308      	str	r3, [sp, #32]
 8015138:	9b07      	ldr	r3, [sp, #28]
 801513a:	9902      	ldr	r1, [sp, #8]
 801513c:	1a5b      	subs	r3, r3, r1
 801513e:	9307      	str	r3, [sp, #28]
 8015140:	9b01      	ldr	r3, [sp, #4]
 8015142:	f1c3 0320 	rsb	r3, r3, #32
 8015146:	930e      	str	r3, [sp, #56]	; 0x38
 8015148:	990e      	ldr	r1, [sp, #56]	; 0x38
 801514a:	9b01      	ldr	r3, [sp, #4]
 801514c:	1a5b      	subs	r3, r3, r1
 801514e:	464f      	mov	r7, r9
 8015150:	930a      	str	r3, [sp, #40]	; 0x28
 8015152:	2600      	movs	r6, #0
 8015154:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8015158:	185b      	adds	r3, r3, r1
 801515a:	bf58      	it	pl
 801515c:	9902      	ldrpl	r1, [sp, #8]
 801515e:	9307      	str	r3, [sp, #28]
 8015160:	bf5d      	ittte	pl
 8015162:	1a5b      	subpl	r3, r3, r1
 8015164:	9307      	strpl	r3, [sp, #28]
 8015166:	9b03      	ldrpl	r3, [sp, #12]
 8015168:	9903      	ldrmi	r1, [sp, #12]
 801516a:	bf58      	it	pl
 801516c:	1c59      	addpl	r1, r3, #1
 801516e:	4489      	add	r9, r1
 8015170:	2a00      	cmp	r2, #0
 8015172:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8015176:	db2e      	blt.n	80151d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8015178:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801517a:	4293      	cmp	r3, r2
 801517c:	dd2b      	ble.n	80151d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801517e:	9c01      	ldr	r4, [sp, #4]
 8015180:	6905      	ldr	r5, [r0, #16]
 8015182:	46a0      	mov	r8, r4
 8015184:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015186:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 801518a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 801518e:	45a0      	cmp	r8, r4
 8015190:	f040 814f 	bne.w	8015432 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8015194:	f9b5 1000 	ldrsh.w	r1, [r5]
 8015198:	4551      	cmp	r1, sl
 801519a:	d103      	bne.n	80151a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 801519c:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80151a0:	4291      	cmp	r1, r2
 80151a2:	d018      	beq.n	80151d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80151a4:	ea5c 010e 	orrs.w	r1, ip, lr
 80151a8:	d00f      	beq.n	80151ca <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80151aa:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80151ae:	2900      	cmp	r1, #0
 80151b0:	db0b      	blt.n	80151ca <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80151b2:	428b      	cmp	r3, r1
 80151b4:	dd09      	ble.n	80151ca <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80151b6:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80151ba:	4299      	cmp	r1, r3
 80151bc:	bf38      	it	cc
 80151be:	3508      	addcc	r5, #8
 80151c0:	f101 0101 	add.w	r1, r1, #1
 80151c4:	bf38      	it	cc
 80151c6:	6105      	strcc	r5, [r0, #16]
 80151c8:	6081      	str	r1, [r0, #8]
 80151ca:	6903      	ldr	r3, [r0, #16]
 80151cc:	f8a3 a000 	strh.w	sl, [r3]
 80151d0:	805a      	strh	r2, [r3, #2]
 80151d2:	809e      	strh	r6, [r3, #4]
 80151d4:	80de      	strh	r6, [r3, #6]
 80151d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80151d8:	6901      	ldr	r1, [r0, #16]
 80151da:	441a      	add	r2, r3
 80151dc:	88cc      	ldrh	r4, [r1, #6]
 80151de:	888b      	ldrh	r3, [r1, #4]
 80151e0:	4323      	orrs	r3, r4
 80151e2:	d010      	beq.n	8015206 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80151e4:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80151e8:	2c00      	cmp	r4, #0
 80151ea:	db0c      	blt.n	8015206 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80151ec:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80151ee:	429c      	cmp	r4, r3
 80151f0:	da09      	bge.n	8015206 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80151f2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80151f6:	429c      	cmp	r4, r3
 80151f8:	bf38      	it	cc
 80151fa:	3108      	addcc	r1, #8
 80151fc:	f104 0401 	add.w	r4, r4, #1
 8015200:	bf38      	it	cc
 8015202:	6101      	strcc	r1, [r0, #16]
 8015204:	6084      	str	r4, [r0, #8]
 8015206:	6903      	ldr	r3, [r0, #16]
 8015208:	f8a3 a000 	strh.w	sl, [r3]
 801520c:	805a      	strh	r2, [r3, #2]
 801520e:	809e      	strh	r6, [r3, #4]
 8015210:	80de      	strh	r6, [r3, #6]
 8015212:	9b06      	ldr	r3, [sp, #24]
 8015214:	4293      	cmp	r3, r2
 8015216:	464f      	mov	r7, r9
 8015218:	d19c      	bne.n	8015154 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 801521a:	9b01      	ldr	r3, [sp, #4]
 801521c:	6907      	ldr	r7, [r0, #16]
 801521e:	f1c3 0620 	rsb	r6, r3, #32
 8015222:	9b05      	ldr	r3, [sp, #20]
 8015224:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8015228:	9b04      	ldr	r3, [sp, #16]
 801522a:	429e      	cmp	r6, r3
 801522c:	f040 81cc 	bne.w	80155c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8015230:	f9b7 3000 	ldrsh.w	r3, [r7]
 8015234:	459e      	cmp	lr, r3
 8015236:	d104      	bne.n	8015242 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8015238:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 801523c:	429a      	cmp	r2, r3
 801523e:	f43f ae36 	beq.w	8014eae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8015242:	88f9      	ldrh	r1, [r7, #6]
 8015244:	88bb      	ldrh	r3, [r7, #4]
 8015246:	430b      	orrs	r3, r1
 8015248:	d010      	beq.n	801526c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801524a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 801524e:	2b00      	cmp	r3, #0
 8015250:	db0c      	blt.n	801526c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8015252:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8015254:	428b      	cmp	r3, r1
 8015256:	da09      	bge.n	801526c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8015258:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 801525c:	428b      	cmp	r3, r1
 801525e:	bf38      	it	cc
 8015260:	3708      	addcc	r7, #8
 8015262:	f103 0301 	add.w	r3, r3, #1
 8015266:	bf38      	it	cc
 8015268:	6107      	strcc	r7, [r0, #16]
 801526a:	6083      	str	r3, [r0, #8]
 801526c:	6903      	ldr	r3, [r0, #16]
 801526e:	f8a3 e000 	strh.w	lr, [r3]
 8015272:	e5ff      	b.n	8014e74 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8015274:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8015276:	9c03      	ldr	r4, [sp, #12]
 8015278:	42a2      	cmp	r2, r4
 801527a:	f6ff ae18 	blt.w	8014eae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801527e:	9c06      	ldr	r4, [sp, #24]
 8015280:	42a2      	cmp	r2, r4
 8015282:	bfb8      	it	lt
 8015284:	3201      	addlt	r2, #1
 8015286:	9c08      	ldr	r4, [sp, #32]
 8015288:	bfb8      	it	lt
 801528a:	9206      	strlt	r2, [sp, #24]
 801528c:	f1c3 0220 	rsb	r2, r3, #32
 8015290:	4362      	muls	r2, r4
 8015292:	2401      	movs	r4, #1
 8015294:	940b      	str	r4, [sp, #44]	; 0x2c
 8015296:	2420      	movs	r4, #32
 8015298:	e6d5      	b.n	8015046 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 801529a:	f009 021f 	and.w	r2, r9, #31
 801529e:	ea4f 1861 	mov.w	r8, r1, asr #5
 80152a2:	920c      	str	r2, [sp, #48]	; 0x30
 80152a4:	9a01      	ldr	r2, [sp, #4]
 80152a6:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 80152aa:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 80152ae:	45b0      	cmp	r8, r6
 80152b0:	f001 011f 	and.w	r1, r1, #31
 80152b4:	eba2 0203 	sub.w	r2, r2, r3
 80152b8:	d108      	bne.n	80152cc <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80152ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80152bc:	4419      	add	r1, r3
 80152be:	4496      	add	lr, r2
 80152c0:	fb02 a101 	mla	r1, r2, r1, sl
 80152c4:	f8a5 e004 	strh.w	lr, [r5, #4]
 80152c8:	80e9      	strh	r1, [r5, #6]
 80152ca:	e6f9      	b.n	80150c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80152cc:	2c00      	cmp	r4, #0
 80152ce:	f2c0 80a9 	blt.w	8015424 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 80152d2:	2701      	movs	r7, #1
 80152d4:	f1c1 0c20 	rsb	ip, r1, #32
 80152d8:	970a      	str	r7, [sp, #40]	; 0x28
 80152da:	fb02 f20c 	mul.w	r2, r2, ip
 80152de:	2720      	movs	r7, #32
 80152e0:	9709      	str	r7, [sp, #36]	; 0x24
 80152e2:	fb92 fcf4 	sdiv	ip, r2, r4
 80152e6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80152e8:	fb04 221c 	mls	r2, r4, ip, r2
 80152ec:	2a00      	cmp	r2, #0
 80152ee:	bfb8      	it	lt
 80152f0:	f10c 3cff 	addlt.w	ip, ip, #4294967295	; 0xffffffff
 80152f4:	4439      	add	r1, r7
 80152f6:	fb0c a101 	mla	r1, ip, r1, sl
 80152fa:	80e9      	strh	r1, [r5, #6]
 80152fc:	44e6      	add	lr, ip
 80152fe:	990a      	ldr	r1, [sp, #40]	; 0x28
 8015300:	f8a5 e004 	strh.w	lr, [r5, #4]
 8015304:	eb08 0501 	add.w	r5, r8, r1
 8015308:	6901      	ldr	r1, [r0, #16]
 801530a:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 801530e:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8015312:	bfb8      	it	lt
 8015314:	1912      	addlt	r2, r2, r4
 8015316:	ea58 070e 	orrs.w	r7, r8, lr
 801531a:	d010      	beq.n	801533e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801531c:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8015320:	f1be 0f00 	cmp.w	lr, #0
 8015324:	db0b      	blt.n	801533e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8015326:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8015328:	45be      	cmp	lr, r7
 801532a:	da08      	bge.n	801533e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801532c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8015330:	45be      	cmp	lr, r7
 8015332:	bf3c      	itt	cc
 8015334:	3108      	addcc	r1, #8
 8015336:	6101      	strcc	r1, [r0, #16]
 8015338:	f10e 0101 	add.w	r1, lr, #1
 801533c:	6081      	str	r1, [r0, #8]
 801533e:	6901      	ldr	r1, [r0, #16]
 8015340:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8015344:	800d      	strh	r5, [r1, #0]
 8015346:	f04f 0e00 	mov.w	lr, #0
 801534a:	42ae      	cmp	r6, r5
 801534c:	f8a1 8002 	strh.w	r8, [r1, #2]
 8015350:	f8a1 e004 	strh.w	lr, [r1, #4]
 8015354:	f8a1 e006 	strh.w	lr, [r1, #6]
 8015358:	4463      	add	r3, ip
 801535a:	d054      	beq.n	8015406 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 801535c:	9901      	ldr	r1, [sp, #4]
 801535e:	1ac9      	subs	r1, r1, r3
 8015360:	4461      	add	r1, ip
 8015362:	0149      	lsls	r1, r1, #5
 8015364:	fb91 fef4 	sdiv	lr, r1, r4
 8015368:	fb04 111e 	mls	r1, r4, lr, r1
 801536c:	2900      	cmp	r1, #0
 801536e:	bfb8      	it	lt
 8015370:	f10e 3eff 	addlt.w	lr, lr, #4294967295	; 0xffffffff
 8015374:	f10e 0701 	add.w	r7, lr, #1
 8015378:	bfb8      	it	lt
 801537a:	1909      	addlt	r1, r1, r4
 801537c:	1b12      	subs	r2, r2, r4
 801537e:	970d      	str	r7, [sp, #52]	; 0x34
 8015380:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8015384:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8015386:	f8ba b004 	ldrh.w	fp, [sl, #4]
 801538a:	1852      	adds	r2, r2, r1
 801538c:	bf54      	ite	pl
 801538e:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8015392:	46f4      	movmi	ip, lr
 8015394:	44e3      	add	fp, ip
 8015396:	f8aa b004 	strh.w	fp, [sl, #4]
 801539a:	f8ba b006 	ldrh.w	fp, [sl, #6]
 801539e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 80153a2:	f8aa b006 	strh.w	fp, [sl, #6]
 80153a6:	4463      	add	r3, ip
 80153a8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80153ac:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80153b0:	f8bc a004 	ldrh.w	sl, [ip, #4]
 80153b4:	bf58      	it	pl
 80153b6:	1b12      	subpl	r2, r2, r4
 80153b8:	443d      	add	r5, r7
 80153ba:	ea5b 070a 	orrs.w	r7, fp, sl
 80153be:	d014      	beq.n	80153ea <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80153c0:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 80153c4:	f1ba 0f00 	cmp.w	sl, #0
 80153c8:	db0f      	blt.n	80153ea <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80153ca:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80153cc:	45ba      	cmp	sl, r7
 80153ce:	da0c      	bge.n	80153ea <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80153d0:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 80153d4:	45ba      	cmp	sl, r7
 80153d6:	bf38      	it	cc
 80153d8:	f10c 0c08 	addcc.w	ip, ip, #8
 80153dc:	f10a 0a01 	add.w	sl, sl, #1
 80153e0:	bf38      	it	cc
 80153e2:	f8c0 c010 	strcc.w	ip, [r0, #16]
 80153e6:	f8c0 a008 	str.w	sl, [r0, #8]
 80153ea:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80153ee:	f04f 0700 	mov.w	r7, #0
 80153f2:	42ae      	cmp	r6, r5
 80153f4:	f8ac 5000 	strh.w	r5, [ip]
 80153f8:	f8ac 8002 	strh.w	r8, [ip, #2]
 80153fc:	f8ac 7004 	strh.w	r7, [ip, #4]
 8015400:	f8ac 7006 	strh.w	r7, [ip, #6]
 8015404:	d1bc      	bne.n	8015380 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8015406:	6904      	ldr	r4, [r0, #16]
 8015408:	9a01      	ldr	r2, [sp, #4]
 801540a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801540c:	1ad3      	subs	r3, r2, r3
 801540e:	88a2      	ldrh	r2, [r4, #4]
 8015410:	441a      	add	r2, r3
 8015412:	80a2      	strh	r2, [r4, #4]
 8015414:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015416:	3120      	adds	r1, #32
 8015418:	1a89      	subs	r1, r1, r2
 801541a:	88e2      	ldrh	r2, [r4, #6]
 801541c:	fb03 2301 	mla	r3, r3, r1, r2
 8015420:	80e3      	strh	r3, [r4, #6]
 8015422:	e64d      	b.n	80150c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8015424:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8015428:	970a      	str	r7, [sp, #40]	; 0x28
 801542a:	434a      	muls	r2, r1
 801542c:	4264      	negs	r4, r4
 801542e:	2700      	movs	r7, #0
 8015430:	e756      	b.n	80152e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8015432:	ea4f 1867 	mov.w	r8, r7, asr #5
 8015436:	f009 031f 	and.w	r3, r9, #31
 801543a:	45d0      	cmp	r8, sl
 801543c:	f007 071f 	and.w	r7, r7, #31
 8015440:	930f      	str	r3, [sp, #60]	; 0x3c
 8015442:	fa1f fc8c 	uxth.w	ip, ip
 8015446:	fa1f fe8e 	uxth.w	lr, lr
 801544a:	d10a      	bne.n	8015462 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 801544c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801544e:	449c      	add	ip, r3
 8015450:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015452:	f8a5 c004 	strh.w	ip, [r5, #4]
 8015456:	441f      	add	r7, r3
 8015458:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801545a:	fb03 e707 	mla	r7, r3, r7, lr
 801545e:	80ef      	strh	r7, [r5, #6]
 8015460:	e6b9      	b.n	80151d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8015462:	2900      	cmp	r1, #0
 8015464:	f2c0 80a8 	blt.w	80155b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8015468:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801546a:	f1c7 0320 	rsb	r3, r7, #32
 801546e:	4363      	muls	r3, r4
 8015470:	2401      	movs	r4, #1
 8015472:	940d      	str	r4, [sp, #52]	; 0x34
 8015474:	2420      	movs	r4, #32
 8015476:	940c      	str	r4, [sp, #48]	; 0x30
 8015478:	fb93 f4f1 	sdiv	r4, r3, r1
 801547c:	fb01 3b14 	mls	fp, r1, r4, r3
 8015480:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015482:	f1bb 0f00 	cmp.w	fp, #0
 8015486:	bfb8      	it	lt
 8015488:	f104 34ff 	addlt.w	r4, r4, #4294967295	; 0xffffffff
 801548c:	441f      	add	r7, r3
 801548e:	fb04 e707 	mla	r7, r4, r7, lr
 8015492:	44a4      	add	ip, r4
 8015494:	f8a5 c004 	strh.w	ip, [r5, #4]
 8015498:	80ef      	strh	r7, [r5, #6]
 801549a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801549e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80154a0:	f8bc e006 	ldrh.w	lr, [ip, #6]
 80154a4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80154a8:	bfb8      	it	lt
 80154aa:	448b      	addlt	fp, r1
 80154ac:	eb08 0503 	add.w	r5, r8, r3
 80154b0:	ea5e 0307 	orrs.w	r3, lr, r7
 80154b4:	d011      	beq.n	80154da <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80154b6:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 80154ba:	f1be 0f00 	cmp.w	lr, #0
 80154be:	db0c      	blt.n	80154da <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80154c0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80154c2:	45be      	cmp	lr, r7
 80154c4:	da09      	bge.n	80154da <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80154c6:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80154ca:	45be      	cmp	lr, r7
 80154cc:	bf3c      	itt	cc
 80154ce:	f10c 0708 	addcc.w	r7, ip, #8
 80154d2:	6107      	strcc	r7, [r0, #16]
 80154d4:	f10e 0701 	add.w	r7, lr, #1
 80154d8:	6087      	str	r7, [r0, #8]
 80154da:	6907      	ldr	r7, [r0, #16]
 80154dc:	b213      	sxth	r3, r2
 80154de:	9310      	str	r3, [sp, #64]	; 0x40
 80154e0:	807b      	strh	r3, [r7, #2]
 80154e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80154e4:	803d      	strh	r5, [r7, #0]
 80154e6:	4555      	cmp	r5, sl
 80154e8:	80be      	strh	r6, [r7, #4]
 80154ea:	80fe      	strh	r6, [r7, #6]
 80154ec:	eb04 0c03 	add.w	ip, r4, r3
 80154f0:	d051      	beq.n	8015596 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 80154f2:	9b01      	ldr	r3, [sp, #4]
 80154f4:	eba3 070c 	sub.w	r7, r3, ip
 80154f8:	443c      	add	r4, r7
 80154fa:	0164      	lsls	r4, r4, #5
 80154fc:	fb94 f8f1 	sdiv	r8, r4, r1
 8015500:	fb01 4418 	mls	r4, r1, r8, r4
 8015504:	2c00      	cmp	r4, #0
 8015506:	bfb8      	it	lt
 8015508:	f108 38ff 	addlt.w	r8, r8, #4294967295	; 0xffffffff
 801550c:	ebab 0301 	sub.w	r3, fp, r1
 8015510:	f108 0701 	add.w	r7, r8, #1
 8015514:	bfb8      	it	lt
 8015516:	1864      	addlt	r4, r4, r1
 8015518:	9309      	str	r3, [sp, #36]	; 0x24
 801551a:	9711      	str	r7, [sp, #68]	; 0x44
 801551c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801551e:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8015522:	191b      	adds	r3, r3, r4
 8015524:	bf58      	it	pl
 8015526:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8015528:	f8be b004 	ldrh.w	fp, [lr, #4]
 801552c:	9309      	str	r3, [sp, #36]	; 0x24
 801552e:	bf48      	it	mi
 8015530:	4647      	movmi	r7, r8
 8015532:	44bb      	add	fp, r7
 8015534:	f8ae b004 	strh.w	fp, [lr, #4]
 8015538:	f8be b006 	ldrh.w	fp, [lr, #6]
 801553c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8015540:	f8ae b006 	strh.w	fp, [lr, #6]
 8015544:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8015548:	44bc      	add	ip, r7
 801554a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 801554c:	f8be b006 	ldrh.w	fp, [lr, #6]
 8015550:	443d      	add	r5, r7
 8015552:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8015556:	bf5c      	itt	pl
 8015558:	1a5b      	subpl	r3, r3, r1
 801555a:	9309      	strpl	r3, [sp, #36]	; 0x24
 801555c:	ea5b 0307 	orrs.w	r3, fp, r7
 8015560:	d011      	beq.n	8015586 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8015562:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8015566:	f1bb 0f00 	cmp.w	fp, #0
 801556a:	db0c      	blt.n	8015586 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801556c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801556e:	45bb      	cmp	fp, r7
 8015570:	da09      	bge.n	8015586 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8015572:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8015576:	45bb      	cmp	fp, r7
 8015578:	bf3c      	itt	cc
 801557a:	f10e 0708 	addcc.w	r7, lr, #8
 801557e:	6107      	strcc	r7, [r0, #16]
 8015580:	f10b 0701 	add.w	r7, fp, #1
 8015584:	6087      	str	r7, [r0, #8]
 8015586:	6907      	ldr	r7, [r0, #16]
 8015588:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801558a:	803d      	strh	r5, [r7, #0]
 801558c:	4555      	cmp	r5, sl
 801558e:	807b      	strh	r3, [r7, #2]
 8015590:	80be      	strh	r6, [r7, #4]
 8015592:	80fe      	strh	r6, [r7, #6]
 8015594:	d1c2      	bne.n	801551c <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8015596:	9b01      	ldr	r3, [sp, #4]
 8015598:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801559a:	eba3 0c0c 	sub.w	ip, r3, ip
 801559e:	6903      	ldr	r3, [r0, #16]
 80155a0:	8899      	ldrh	r1, [r3, #4]
 80155a2:	4461      	add	r1, ip
 80155a4:	8099      	strh	r1, [r3, #4]
 80155a6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80155a8:	3720      	adds	r7, #32
 80155aa:	1a7f      	subs	r7, r7, r1
 80155ac:	88d9      	ldrh	r1, [r3, #6]
 80155ae:	fb0c 1c07 	mla	ip, ip, r7, r1
 80155b2:	f8a3 c006 	strh.w	ip, [r3, #6]
 80155b6:	e60e      	b.n	80151d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80155b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80155ba:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80155be:	940d      	str	r4, [sp, #52]	; 0x34
 80155c0:	437b      	muls	r3, r7
 80155c2:	4249      	negs	r1, r1
 80155c4:	2400      	movs	r4, #0
 80155c6:	e756      	b.n	8015476 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 80155c8:	9905      	ldr	r1, [sp, #20]
 80155ca:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 80155ce:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 80155d2:	f001 011f 	and.w	r1, r1, #31
 80155d6:	ea4f 1b69 	mov.w	fp, r9, asr #5
 80155da:	9102      	str	r1, [sp, #8]
 80155dc:	9904      	ldr	r1, [sp, #16]
 80155de:	45f3      	cmp	fp, lr
 80155e0:	f009 0c1f 	and.w	ip, r9, #31
 80155e4:	eba1 0406 	sub.w	r4, r1, r6
 80155e8:	d108      	bne.n	80155fc <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 80155ea:	9b02      	ldr	r3, [sp, #8]
 80155ec:	449c      	add	ip, r3
 80155ee:	44a0      	add	r8, r4
 80155f0:	fb04 a40c 	mla	r4, r4, ip, sl
 80155f4:	f8a7 8004 	strh.w	r8, [r7, #4]
 80155f8:	80fc      	strh	r4, [r7, #6]
 80155fa:	e458      	b.n	8014eae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80155fc:	9905      	ldr	r1, [sp, #20]
 80155fe:	ebb1 0109 	subs.w	r1, r1, r9
 8015602:	bf5b      	ittet	pl
 8015604:	f1cc 0520 	rsbpl	r5, ip, #32
 8015608:	436c      	mulpl	r4, r5
 801560a:	2500      	movmi	r5, #0
 801560c:	2520      	movpl	r5, #32
 801560e:	bf44      	itt	mi
 8015610:	fb04 f40c 	mulmi.w	r4, r4, ip
 8015614:	4249      	negmi	r1, r1
 8015616:	9501      	str	r5, [sp, #4]
 8015618:	9b01      	ldr	r3, [sp, #4]
 801561a:	fb94 f5f1 	sdiv	r5, r4, r1
 801561e:	fb01 4415 	mls	r4, r1, r5, r4
 8015622:	bf54      	ite	pl
 8015624:	f04f 0901 	movpl.w	r9, #1
 8015628:	f04f 39ff 	movmi.w	r9, #4294967295	; 0xffffffff
 801562c:	2c00      	cmp	r4, #0
 801562e:	bfb8      	it	lt
 8015630:	f105 35ff 	addlt.w	r5, r5, #4294967295	; 0xffffffff
 8015634:	449c      	add	ip, r3
 8015636:	44a8      	add	r8, r5
 8015638:	fb05 ac0c 	mla	ip, r5, ip, sl
 801563c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8015640:	f8a7 c006 	strh.w	ip, [r7, #6]
 8015644:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8015648:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801564c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8015650:	bfb8      	it	lt
 8015652:	1864      	addlt	r4, r4, r1
 8015654:	ea58 0707 	orrs.w	r7, r8, r7
 8015658:	eb0b 0309 	add.w	r3, fp, r9
 801565c:	d011      	beq.n	8015682 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 801565e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8015662:	f1b8 0f00 	cmp.w	r8, #0
 8015666:	db0c      	blt.n	8015682 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8015668:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801566a:	45b8      	cmp	r8, r7
 801566c:	da09      	bge.n	8015682 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 801566e:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8015672:	45b8      	cmp	r8, r7
 8015674:	bf3c      	itt	cc
 8015676:	f10c 0708 	addcc.w	r7, ip, #8
 801567a:	6107      	strcc	r7, [r0, #16]
 801567c:	f108 0701 	add.w	r7, r8, #1
 8015680:	6087      	str	r7, [r0, #8]
 8015682:	6907      	ldr	r7, [r0, #16]
 8015684:	f04f 0c00 	mov.w	ip, #0
 8015688:	b212      	sxth	r2, r2
 801568a:	459e      	cmp	lr, r3
 801568c:	803b      	strh	r3, [r7, #0]
 801568e:	807a      	strh	r2, [r7, #2]
 8015690:	f8a7 c004 	strh.w	ip, [r7, #4]
 8015694:	f8a7 c006 	strh.w	ip, [r7, #6]
 8015698:	442e      	add	r6, r5
 801569a:	d04d      	beq.n	8015738 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 801569c:	9f04      	ldr	r7, [sp, #16]
 801569e:	1bbf      	subs	r7, r7, r6
 80156a0:	443d      	add	r5, r7
 80156a2:	016d      	lsls	r5, r5, #5
 80156a4:	fb95 f8f1 	sdiv	r8, r5, r1
 80156a8:	fb01 5518 	mls	r5, r1, r8, r5
 80156ac:	4565      	cmp	r5, ip
 80156ae:	bfb8      	it	lt
 80156b0:	f108 38ff 	addlt.w	r8, r8, #4294967295	; 0xffffffff
 80156b4:	f108 0701 	add.w	r7, r8, #1
 80156b8:	bfb8      	it	lt
 80156ba:	186d      	addlt	r5, r5, r1
 80156bc:	1a64      	subs	r4, r4, r1
 80156be:	9703      	str	r7, [sp, #12]
 80156c0:	f04f 0a00 	mov.w	sl, #0
 80156c4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80156c8:	1964      	adds	r4, r4, r5
 80156ca:	bf58      	it	pl
 80156cc:	9f03      	ldrpl	r7, [sp, #12]
 80156ce:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80156d2:	bf48      	it	mi
 80156d4:	4647      	movmi	r7, r8
 80156d6:	44bb      	add	fp, r7
 80156d8:	f8ac b004 	strh.w	fp, [ip, #4]
 80156dc:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80156e0:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80156e4:	f8ac b006 	strh.w	fp, [ip, #6]
 80156e8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80156ec:	443e      	add	r6, r7
 80156ee:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80156f2:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80156f6:	bf58      	it	pl
 80156f8:	1a64      	subpl	r4, r4, r1
 80156fa:	ea5b 0707 	orrs.w	r7, fp, r7
 80156fe:	444b      	add	r3, r9
 8015700:	d011      	beq.n	8015726 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8015702:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8015706:	f1bb 0f00 	cmp.w	fp, #0
 801570a:	db0c      	blt.n	8015726 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801570c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801570e:	45bb      	cmp	fp, r7
 8015710:	da09      	bge.n	8015726 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8015712:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8015716:	45bb      	cmp	fp, r7
 8015718:	bf3c      	itt	cc
 801571a:	f10c 0708 	addcc.w	r7, ip, #8
 801571e:	6107      	strcc	r7, [r0, #16]
 8015720:	f10b 0701 	add.w	r7, fp, #1
 8015724:	6087      	str	r7, [r0, #8]
 8015726:	6907      	ldr	r7, [r0, #16]
 8015728:	459e      	cmp	lr, r3
 801572a:	803b      	strh	r3, [r7, #0]
 801572c:	807a      	strh	r2, [r7, #2]
 801572e:	f8a7 a004 	strh.w	sl, [r7, #4]
 8015732:	f8a7 a006 	strh.w	sl, [r7, #6]
 8015736:	d1c5      	bne.n	80156c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8015738:	9b04      	ldr	r3, [sp, #16]
 801573a:	1b9e      	subs	r6, r3, r6
 801573c:	6903      	ldr	r3, [r0, #16]
 801573e:	889a      	ldrh	r2, [r3, #4]
 8015740:	4432      	add	r2, r6
 8015742:	809a      	strh	r2, [r3, #4]
 8015744:	9a02      	ldr	r2, [sp, #8]
 8015746:	f102 0c20 	add.w	ip, r2, #32
 801574a:	9a01      	ldr	r2, [sp, #4]
 801574c:	ebac 0c02 	sub.w	ip, ip, r2
 8015750:	88da      	ldrh	r2, [r3, #6]
 8015752:	fb06 260c 	mla	r6, r6, ip, r2
 8015756:	80de      	strh	r6, [r3, #6]
 8015758:	f7ff bba9 	b.w	8014eae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0801575c <_ZN8touchgfx7Outline6lineToEii>:
 801575c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801575e:	079b      	lsls	r3, r3, #30
 8015760:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8015762:	460e      	mov	r6, r1
 8015764:	4615      	mov	r5, r2
 8015766:	d511      	bpl.n	801578c <_ZN8touchgfx7Outline6lineToEii+0x30>
 8015768:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 801576c:	ea86 0701 	eor.w	r7, r6, r1
 8015770:	ea85 0302 	eor.w	r3, r5, r2
 8015774:	433b      	orrs	r3, r7
 8015776:	d009      	beq.n	801578c <_ZN8touchgfx7Outline6lineToEii+0x30>
 8015778:	4633      	mov	r3, r6
 801577a:	9500      	str	r5, [sp, #0]
 801577c:	f7ff fb3e 	bl	8014dfc <_ZN8touchgfx7Outline10renderLineEiiii>
 8015780:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8015782:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8015786:	f043 0301 	orr.w	r3, r3, #1
 801578a:	6243      	str	r3, [r0, #36]	; 0x24
 801578c:	b003      	add	sp, #12
 801578e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015790 <_ZN8touchgfx7Outline6moveToEii>:
 8015790:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015792:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8015794:	4615      	mov	r5, r2
 8015796:	079a      	lsls	r2, r3, #30
 8015798:	4604      	mov	r4, r0
 801579a:	460e      	mov	r6, r1
 801579c:	d401      	bmi.n	80157a2 <_ZN8touchgfx7Outline6moveToEii+0x12>
 801579e:	f7ff faf9 	bl	8014d94 <_ZN8touchgfx7Outline5resetEv>
 80157a2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80157a4:	07db      	lsls	r3, r3, #31
 80157a6:	d504      	bpl.n	80157b2 <_ZN8touchgfx7Outline6moveToEii+0x22>
 80157a8:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 80157ac:	4620      	mov	r0, r4
 80157ae:	f7ff ffd5 	bl	801575c <_ZN8touchgfx7Outline6lineToEii>
 80157b2:	6923      	ldr	r3, [r4, #16]
 80157b4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80157b8:	1170      	asrs	r0, r6, #5
 80157ba:	4290      	cmp	r0, r2
 80157bc:	ea4f 1165 	mov.w	r1, r5, asr #5
 80157c0:	d103      	bne.n	80157ca <_ZN8touchgfx7Outline6moveToEii+0x3a>
 80157c2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80157c6:	4291      	cmp	r1, r2
 80157c8:	d01a      	beq.n	8015800 <_ZN8touchgfx7Outline6moveToEii+0x70>
 80157ca:	88df      	ldrh	r7, [r3, #6]
 80157cc:	889a      	ldrh	r2, [r3, #4]
 80157ce:	433a      	orrs	r2, r7
 80157d0:	d010      	beq.n	80157f4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80157d2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80157d6:	2a00      	cmp	r2, #0
 80157d8:	db0c      	blt.n	80157f4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80157da:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80157dc:	42ba      	cmp	r2, r7
 80157de:	da09      	bge.n	80157f4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80157e0:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 80157e4:	42ba      	cmp	r2, r7
 80157e6:	bf38      	it	cc
 80157e8:	3308      	addcc	r3, #8
 80157ea:	f102 0201 	add.w	r2, r2, #1
 80157ee:	bf38      	it	cc
 80157f0:	6123      	strcc	r3, [r4, #16]
 80157f2:	60a2      	str	r2, [r4, #8]
 80157f4:	6923      	ldr	r3, [r4, #16]
 80157f6:	2200      	movs	r2, #0
 80157f8:	8018      	strh	r0, [r3, #0]
 80157fa:	8059      	strh	r1, [r3, #2]
 80157fc:	809a      	strh	r2, [r3, #4]
 80157fe:	80da      	strh	r2, [r3, #6]
 8015800:	6166      	str	r6, [r4, #20]
 8015802:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8015806:	6225      	str	r5, [r4, #32]
 8015808:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801580a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 801580a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801580e:	b0d0      	sub	sp, #320	; 0x140
 8015810:	466c      	mov	r4, sp
 8015812:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8015816:	4627      	mov	r7, r4
 8015818:	1a0d      	subs	r5, r1, r0
 801581a:	2d48      	cmp	r5, #72	; 0x48
 801581c:	f100 0308 	add.w	r3, r0, #8
 8015820:	f340 80d5 	ble.w	80159ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8015824:	112d      	asrs	r5, r5, #4
 8015826:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 801582a:	f9b0 9000 	ldrsh.w	r9, [r0]
 801582e:	6816      	ldr	r6, [r2, #0]
 8015830:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8015834:	6006      	str	r6, [r0, #0]
 8015836:	6856      	ldr	r6, [r2, #4]
 8015838:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801583c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8015840:	6046      	str	r6, [r0, #4]
 8015842:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8015846:	f8a2 8002 	strh.w	r8, [r2, #2]
 801584a:	f8a2 e004 	strh.w	lr, [r2, #4]
 801584e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8015852:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8015856:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 801585a:	4565      	cmp	r5, ip
 801585c:	f1a1 0208 	sub.w	r2, r1, #8
 8015860:	db06      	blt.n	8015870 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8015862:	d119      	bne.n	8015898 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8015864:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8015868:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 801586c:	42ae      	cmp	r6, r5
 801586e:	dd13      	ble.n	8015898 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8015870:	460e      	mov	r6, r1
 8015872:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8015876:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 801587a:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 801587e:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8015882:	601d      	str	r5, [r3, #0]
 8015884:	6875      	ldr	r5, [r6, #4]
 8015886:	605d      	str	r5, [r3, #4]
 8015888:	f821 9c08 	strh.w	r9, [r1, #-8]
 801588c:	f821 cc06 	strh.w	ip, [r1, #-6]
 8015890:	f821 8c04 	strh.w	r8, [r1, #-4]
 8015894:	f821 ec02 	strh.w	lr, [r1, #-2]
 8015898:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801589c:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 80158a0:	42ae      	cmp	r6, r5
 80158a2:	db06      	blt.n	80158b2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 80158a4:	d116      	bne.n	80158d4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80158a6:	f9b0 c000 	ldrsh.w	ip, [r0]
 80158aa:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 80158ae:	45ac      	cmp	ip, r5
 80158b0:	da10      	bge.n	80158d4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80158b2:	681d      	ldr	r5, [r3, #0]
 80158b4:	f9b0 8000 	ldrsh.w	r8, [r0]
 80158b8:	6005      	str	r5, [r0, #0]
 80158ba:	685d      	ldr	r5, [r3, #4]
 80158bc:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80158c0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80158c4:	f8a0 8008 	strh.w	r8, [r0, #8]
 80158c8:	6045      	str	r5, [r0, #4]
 80158ca:	8146      	strh	r6, [r0, #10]
 80158cc:	f8a0 e00c 	strh.w	lr, [r0, #12]
 80158d0:	f8a0 c00e 	strh.w	ip, [r0, #14]
 80158d4:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80158d8:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80158dc:	4565      	cmp	r5, ip
 80158de:	db06      	blt.n	80158ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80158e0:	d119      	bne.n	8015916 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80158e2:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80158e6:	f9b0 5000 	ldrsh.w	r5, [r0]
 80158ea:	42ae      	cmp	r6, r5
 80158ec:	da13      	bge.n	8015916 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80158ee:	460e      	mov	r6, r1
 80158f0:	f9b0 9000 	ldrsh.w	r9, [r0]
 80158f4:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80158f8:	6005      	str	r5, [r0, #0]
 80158fa:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 80158fe:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8015902:	6875      	ldr	r5, [r6, #4]
 8015904:	6045      	str	r5, [r0, #4]
 8015906:	f821 9c08 	strh.w	r9, [r1, #-8]
 801590a:	f821 cc06 	strh.w	ip, [r1, #-6]
 801590e:	f821 8c04 	strh.w	r8, [r1, #-4]
 8015912:	f821 ec02 	strh.w	lr, [r1, #-2]
 8015916:	3308      	adds	r3, #8
 8015918:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 801591c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8015920:	45e6      	cmp	lr, ip
 8015922:	dbf8      	blt.n	8015916 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8015924:	d105      	bne.n	8015932 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8015926:	f9b3 6000 	ldrsh.w	r6, [r3]
 801592a:	f9b0 5000 	ldrsh.w	r5, [r0]
 801592e:	42ae      	cmp	r6, r5
 8015930:	dbf1      	blt.n	8015916 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8015932:	4615      	mov	r5, r2
 8015934:	3a08      	subs	r2, #8
 8015936:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 801593a:	45b4      	cmp	ip, r6
 801593c:	dbf9      	blt.n	8015932 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801593e:	d105      	bne.n	801594c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8015940:	f9b0 8000 	ldrsh.w	r8, [r0]
 8015944:	f9b2 6000 	ldrsh.w	r6, [r2]
 8015948:	45b0      	cmp	r8, r6
 801594a:	dbf2      	blt.n	8015932 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801594c:	4293      	cmp	r3, r2
 801594e:	f1a5 0608 	sub.w	r6, r5, #8
 8015952:	d816      	bhi.n	8015982 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8015954:	f8d6 c000 	ldr.w	ip, [r6]
 8015958:	f9b3 a000 	ldrsh.w	sl, [r3]
 801595c:	f8c3 c000 	str.w	ip, [r3]
 8015960:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8015964:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8015968:	f8d6 c004 	ldr.w	ip, [r6, #4]
 801596c:	f8c3 c004 	str.w	ip, [r3, #4]
 8015970:	f825 ac08 	strh.w	sl, [r5, #-8]
 8015974:	f825 ec06 	strh.w	lr, [r5, #-6]
 8015978:	f825 9c04 	strh.w	r9, [r5, #-4]
 801597c:	f825 8c02 	strh.w	r8, [r5, #-2]
 8015980:	e7c9      	b.n	8015916 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8015982:	f8d6 e000 	ldr.w	lr, [r6]
 8015986:	f9b0 a000 	ldrsh.w	sl, [r0]
 801598a:	f8c0 e000 	str.w	lr, [r0]
 801598e:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8015992:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8015996:	f8d6 e004 	ldr.w	lr, [r6, #4]
 801599a:	f8c0 e004 	str.w	lr, [r0, #4]
 801599e:	f825 ac08 	strh.w	sl, [r5, #-8]
 80159a2:	f825 cc06 	strh.w	ip, [r5, #-6]
 80159a6:	f825 9c04 	strh.w	r9, [r5, #-4]
 80159aa:	f825 8c02 	strh.w	r8, [r5, #-2]
 80159ae:	1acd      	subs	r5, r1, r3
 80159b0:	1a16      	subs	r6, r2, r0
 80159b2:	10ed      	asrs	r5, r5, #3
 80159b4:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 80159b8:	bfb5      	itete	lt
 80159ba:	e9c4 0200 	strdlt	r0, r2, [r4]
 80159be:	e9c4 3100 	strdge	r3, r1, [r4]
 80159c2:	460a      	movlt	r2, r1
 80159c4:	4603      	movge	r3, r0
 80159c6:	3408      	adds	r4, #8
 80159c8:	4618      	mov	r0, r3
 80159ca:	4611      	mov	r1, r2
 80159cc:	e724      	b.n	8015818 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80159ce:	4299      	cmp	r1, r3
 80159d0:	d928      	bls.n	8015a24 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 80159d2:	f1a3 0210 	sub.w	r2, r3, #16
 80159d6:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80159da:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80159de:	45ac      	cmp	ip, r5
 80159e0:	db06      	blt.n	80159f0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80159e2:	d11d      	bne.n	8015a20 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80159e4:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80159e8:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80159ec:	42ae      	cmp	r6, r5
 80159ee:	da17      	bge.n	8015a20 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80159f0:	4615      	mov	r5, r2
 80159f2:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80159f6:	f855 6f08 	ldr.w	r6, [r5, #8]!
 80159fa:	6116      	str	r6, [r2, #16]
 80159fc:	686e      	ldr	r6, [r5, #4]
 80159fe:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8015a02:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8015a06:	f8a2 9008 	strh.w	r9, [r2, #8]
 8015a0a:	42a8      	cmp	r0, r5
 8015a0c:	6156      	str	r6, [r2, #20]
 8015a0e:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8015a12:	f8a2 800c 	strh.w	r8, [r2, #12]
 8015a16:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8015a1a:	f1a2 0208 	sub.w	r2, r2, #8
 8015a1e:	d1da      	bne.n	80159d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8015a20:	3308      	adds	r3, #8
 8015a22:	e7d4      	b.n	80159ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8015a24:	42bc      	cmp	r4, r7
 8015a26:	d903      	bls.n	8015a30 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8015a28:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8015a2c:	3c08      	subs	r4, #8
 8015a2e:	e6f3      	b.n	8015818 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8015a30:	b050      	add	sp, #320	; 0x140
 8015a32:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08015a36 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8015a36:	b510      	push	{r4, lr}
 8015a38:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8015a3a:	07da      	lsls	r2, r3, #31
 8015a3c:	4604      	mov	r4, r0
 8015a3e:	d507      	bpl.n	8015a50 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8015a40:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8015a44:	f7ff fe8a 	bl	801575c <_ZN8touchgfx7Outline6lineToEii>
 8015a48:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8015a4a:	f023 0301 	bic.w	r3, r3, #1
 8015a4e:	6243      	str	r3, [r0, #36]	; 0x24
 8015a50:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8015a52:	079b      	lsls	r3, r3, #30
 8015a54:	d521      	bpl.n	8015a9a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8015a56:	6923      	ldr	r3, [r4, #16]
 8015a58:	88d9      	ldrh	r1, [r3, #6]
 8015a5a:	889a      	ldrh	r2, [r3, #4]
 8015a5c:	430a      	orrs	r2, r1
 8015a5e:	d010      	beq.n	8015a82 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8015a60:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8015a64:	2a00      	cmp	r2, #0
 8015a66:	db0c      	blt.n	8015a82 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8015a68:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8015a6a:	428a      	cmp	r2, r1
 8015a6c:	da09      	bge.n	8015a82 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8015a6e:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8015a72:	4291      	cmp	r1, r2
 8015a74:	bf88      	it	hi
 8015a76:	3308      	addhi	r3, #8
 8015a78:	f102 0201 	add.w	r2, r2, #1
 8015a7c:	bf88      	it	hi
 8015a7e:	6123      	strhi	r3, [r4, #16]
 8015a80:	60a2      	str	r2, [r4, #8]
 8015a82:	68a1      	ldr	r1, [r4, #8]
 8015a84:	b129      	cbz	r1, 8015a92 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8015a86:	6863      	ldr	r3, [r4, #4]
 8015a88:	4299      	cmp	r1, r3
 8015a8a:	d802      	bhi.n	8015a92 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8015a8c:	68e0      	ldr	r0, [r4, #12]
 8015a8e:	f7ff febc 	bl	801580a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8015a92:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8015a94:	f023 0302 	bic.w	r3, r3, #2
 8015a98:	6263      	str	r3, [r4, #36]	; 0x24
 8015a9a:	68e0      	ldr	r0, [r4, #12]
 8015a9c:	bd10      	pop	{r4, pc}
	...

08015aa0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8015aa0:	4b02      	ldr	r3, [pc, #8]	; (8015aac <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8015aa2:	6018      	str	r0, [r3, #0]
 8015aa4:	4b02      	ldr	r3, [pc, #8]	; (8015ab0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8015aa6:	6019      	str	r1, [r3, #0]
 8015aa8:	4770      	bx	lr
 8015aaa:	bf00      	nop
 8015aac:	2000e1c8 	.word	0x2000e1c8
 8015ab0:	2000e1cc 	.word	0x2000e1cc

08015ab4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8015ab4:	4a02      	ldr	r2, [pc, #8]	; (8015ac0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8015ab6:	2300      	movs	r3, #0
 8015ab8:	6013      	str	r3, [r2, #0]
 8015aba:	4a02      	ldr	r2, [pc, #8]	; (8015ac4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8015abc:	6013      	str	r3, [r2, #0]
 8015abe:	4770      	bx	lr
 8015ac0:	2000e1c8 	.word	0x2000e1c8
 8015ac4:	2000e1cc 	.word	0x2000e1cc

08015ac8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8015ac8:	4b01      	ldr	r3, [pc, #4]	; (8015ad0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8015aca:	6818      	ldr	r0, [r3, #0]
 8015acc:	4770      	bx	lr
 8015ace:	bf00      	nop
 8015ad0:	2000e1c8 	.word	0x2000e1c8

08015ad4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8015ad4:	4b01      	ldr	r3, [pc, #4]	; (8015adc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8015ad6:	6818      	ldr	r0, [r3, #0]
 8015ad8:	4770      	bx	lr
 8015ada:	bf00      	nop
 8015adc:	2000e1cc 	.word	0x2000e1cc

08015ae0 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8015ae0:	b510      	push	{r4, lr}
 8015ae2:	6803      	ldr	r3, [r0, #0]
 8015ae4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015ae6:	460c      	mov	r4, r1
 8015ae8:	4798      	blx	r3
 8015aea:	1b03      	subs	r3, r0, r4
 8015aec:	4258      	negs	r0, r3
 8015aee:	4158      	adcs	r0, r3
 8015af0:	bd10      	pop	{r4, pc}
	...

08015af4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8015af4:	4b01      	ldr	r3, [pc, #4]	; (8015afc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8015af6:	6019      	str	r1, [r3, #0]
 8015af8:	4770      	bx	lr
 8015afa:	bf00      	nop
 8015afc:	2000e1d0 	.word	0x2000e1d0

08015b00 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8015b00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b04:	4696      	mov	lr, r2
 8015b06:	4605      	mov	r5, r0
 8015b08:	4614      	mov	r4, r2
 8015b0a:	460e      	mov	r6, r1
 8015b0c:	461f      	mov	r7, r3
 8015b0e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015b12:	b097      	sub	sp, #92	; 0x5c
 8015b14:	f10d 0c1c 	add.w	ip, sp, #28
 8015b18:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015b1c:	f8de 3000 	ldr.w	r3, [lr]
 8015b20:	f8cc 3000 	str.w	r3, [ip]
 8015b24:	f104 0e14 	add.w	lr, r4, #20
 8015b28:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015b2c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8015b30:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015b34:	f8de 3000 	ldr.w	r3, [lr]
 8015b38:	f8cc 3000 	str.w	r3, [ip]
 8015b3c:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8015b40:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015b44:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8015b48:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015b4c:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8015b50:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8015b54:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8015b58:	f8de 3000 	ldr.w	r3, [lr]
 8015b5c:	f8cc 3000 	str.w	r3, [ip]
 8015b60:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8015b62:	682b      	ldr	r3, [r5, #0]
 8015b64:	9201      	str	r2, [sp, #4]
 8015b66:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8015b6a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8015b6c:	9200      	str	r2, [sp, #0]
 8015b6e:	f8cd 8008 	str.w	r8, [sp, #8]
 8015b72:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8015b76:	aa07      	add	r2, sp, #28
 8015b78:	463b      	mov	r3, r7
 8015b7a:	4631      	mov	r1, r6
 8015b7c:	4628      	mov	r0, r5
 8015b7e:	47d8      	blx	fp
 8015b80:	46a6      	mov	lr, r4
 8015b82:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015b86:	f10d 0c1c 	add.w	ip, sp, #28
 8015b8a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015b8e:	f8de 3000 	ldr.w	r3, [lr]
 8015b92:	f8cc 3000 	str.w	r3, [ip]
 8015b96:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8015b9a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015b9e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8015ba2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015ba6:	343c      	adds	r4, #60	; 0x3c
 8015ba8:	f8de 3000 	ldr.w	r3, [lr]
 8015bac:	f8cc 3000 	str.w	r3, [ip]
 8015bb0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015bb2:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8015bb6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015bba:	6823      	ldr	r3, [r4, #0]
 8015bbc:	f8cc 3000 	str.w	r3, [ip]
 8015bc0:	682b      	ldr	r3, [r5, #0]
 8015bc2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8015bc6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8015bc8:	9201      	str	r2, [sp, #4]
 8015bca:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8015bcc:	9200      	str	r2, [sp, #0]
 8015bce:	f8cd 8008 	str.w	r8, [sp, #8]
 8015bd2:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8015bd4:	aa07      	add	r2, sp, #28
 8015bd6:	463b      	mov	r3, r7
 8015bd8:	4631      	mov	r1, r6
 8015bda:	4628      	mov	r0, r5
 8015bdc:	47a0      	blx	r4
 8015bde:	b017      	add	sp, #92	; 0x5c
 8015be0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015be4 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8015be4:	2000      	movs	r0, #0
 8015be6:	4770      	bx	lr

08015be8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8015be8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015bec:	b08d      	sub	sp, #52	; 0x34
 8015bee:	4688      	mov	r8, r1
 8015bf0:	9916      	ldr	r1, [sp, #88]	; 0x58
 8015bf2:	f8d3 c000 	ldr.w	ip, [r3]
 8015bf6:	680f      	ldr	r7, [r1, #0]
 8015bf8:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8015bfc:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8015c00:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8015c04:	edd3 6a07 	vldr	s13, [r3, #28]
 8015c08:	9918      	ldr	r1, [sp, #96]	; 0x60
 8015c0a:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8015c0e:	f9b1 9000 	ldrsh.w	r9, [r1]
 8015c12:	f9ba 1000 	ldrsh.w	r1, [sl]
 8015c16:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8015c1a:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8015c1e:	eba7 070c 	sub.w	r7, r7, ip
 8015c22:	42bc      	cmp	r4, r7
 8015c24:	bfa8      	it	ge
 8015c26:	463c      	movge	r4, r7
 8015c28:	ee07 4a90 	vmov	s15, r4
 8015c2c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8015c30:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8015c34:	ee25 4a04 	vmul.f32	s8, s10, s8
 8015c38:	ee65 4a24 	vmul.f32	s9, s10, s9
 8015c3c:	ee25 5a27 	vmul.f32	s10, s10, s15
 8015c40:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8015c44:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8015c48:	eb09 0e0c 	add.w	lr, r9, ip
 8015c4c:	4571      	cmp	r1, lr
 8015c4e:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8015c52:	ee32 1a05 	vadd.f32	s2, s4, s10
 8015c56:	ee36 0a84 	vadd.f32	s0, s13, s8
 8015c5a:	ee61 1a87 	vmul.f32	s3, s3, s14
 8015c5e:	ee22 2a07 	vmul.f32	s4, s4, s14
 8015c62:	f340 808d 	ble.w	8015d80 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8015c66:	eba1 060e 	sub.w	r6, r1, lr
 8015c6a:	fb96 f5f4 	sdiv	r5, r6, r4
 8015c6e:	ee07 5a10 	vmov	s14, r5
 8015c72:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015c76:	2d00      	cmp	r5, #0
 8015c78:	fb04 6615 	mls	r6, r4, r5, r6
 8015c7c:	eea7 0a04 	vfma.f32	s0, s14, s8
 8015c80:	eee7 0a24 	vfma.f32	s1, s14, s9
 8015c84:	eea7 1a05 	vfma.f32	s2, s14, s10
 8015c88:	dd13      	ble.n	8015cb2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8015c8a:	ee70 6a44 	vsub.f32	s13, s0, s8
 8015c8e:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8015c92:	eef5 6a40 	vcmp.f32	s13, #0.0
 8015c96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015c9a:	bf18      	it	ne
 8015c9c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8015ca0:	ee31 2a45 	vsub.f32	s4, s2, s10
 8015ca4:	bf08      	it	eq
 8015ca6:	eeb0 7a67 	vmoveq.f32	s14, s15
 8015caa:	ee61 1a87 	vmul.f32	s3, s3, s14
 8015cae:	ee22 2a07 	vmul.f32	s4, s4, s14
 8015cb2:	fb05 f204 	mul.w	r2, r5, r4
 8015cb6:	1abf      	subs	r7, r7, r2
 8015cb8:	4494      	add	ip, r2
 8015cba:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8015cbe:	4411      	add	r1, r2
 8015cc0:	eb09 020c 	add.w	r2, r9, ip
 8015cc4:	443a      	add	r2, r7
 8015cc6:	b209      	sxth	r1, r1
 8015cc8:	428a      	cmp	r2, r1
 8015cca:	bfc4      	itt	gt
 8015ccc:	eba1 0209 	subgt.w	r2, r1, r9
 8015cd0:	eba2 070c 	subgt.w	r7, r2, ip
 8015cd4:	2f00      	cmp	r7, #0
 8015cd6:	dd50      	ble.n	8015d7a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8015cd8:	fb97 f1f4 	sdiv	r1, r7, r4
 8015cdc:	fb04 7211 	mls	r2, r4, r1, r7
 8015ce0:	b90a      	cbnz	r2, 8015ce6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8015ce2:	3901      	subs	r1, #1
 8015ce4:	4622      	mov	r2, r4
 8015ce6:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8015cea:	6840      	ldr	r0, [r0, #4]
 8015cec:	900b      	str	r0, [sp, #44]	; 0x2c
 8015cee:	f8d0 a000 	ldr.w	sl, [r0]
 8015cf2:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8015cf4:	9008      	str	r0, [sp, #32]
 8015cf6:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8015cfa:	9818      	ldr	r0, [sp, #96]	; 0x60
 8015cfc:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8015d00:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8015d04:	695b      	ldr	r3, [r3, #20]
 8015d06:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8015d08:	445b      	add	r3, fp
 8015d0a:	eef0 6a42 	vmov.f32	s13, s4
 8015d0e:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8015d12:	ee21 3a23 	vmul.f32	s6, s2, s7
 8015d16:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8015d1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015d1e:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8015d22:	9307      	str	r3, [sp, #28]
 8015d24:	ee17 7a90 	vmov	r7, s15
 8015d28:	ee73 7a42 	vsub.f32	s15, s6, s4
 8015d2c:	eeb0 7a61 	vmov.f32	s14, s3
 8015d30:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8015d34:	ee16 3a90 	vmov	r3, s13
 8015d38:	fb97 f7f4 	sdiv	r7, r7, r4
 8015d3c:	ee17 ca90 	vmov	ip, s15
 8015d40:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8015d44:	fb9c fcf4 	sdiv	ip, ip, r4
 8015d48:	fb0c 3306 	mla	r3, ip, r6, r3
 8015d4c:	9302      	str	r3, [sp, #8]
 8015d4e:	ee17 3a10 	vmov	r3, s14
 8015d52:	44b6      	add	lr, r6
 8015d54:	fb04 e505 	mla	r5, r4, r5, lr
 8015d58:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8015d5c:	fb07 3706 	mla	r7, r7, r6, r3
 8015d60:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8015d64:	e9cd 4700 	strd	r4, r7, [sp]
 8015d68:	2900      	cmp	r1, #0
 8015d6a:	bfcc      	ite	gt
 8015d6c:	46a1      	movgt	r9, r4
 8015d6e:	4691      	movle	r9, r2
 8015d70:	eba9 0306 	sub.w	r3, r9, r6
 8015d74:	f8da 4008 	ldr.w	r4, [sl, #8]
 8015d78:	47a0      	blx	r4
 8015d7a:	b00d      	add	sp, #52	; 0x34
 8015d7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d80:	2500      	movs	r5, #0
 8015d82:	462e      	mov	r6, r5
 8015d84:	e799      	b.n	8015cba <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08015d88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8015d88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d8c:	b0db      	sub	sp, #364	; 0x16c
 8015d8e:	461d      	mov	r5, r3
 8015d90:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8015d94:	930a      	str	r3, [sp, #40]	; 0x28
 8015d96:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8015d9a:	930b      	str	r3, [sp, #44]	; 0x2c
 8015d9c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8015da0:	9310      	str	r3, [sp, #64]	; 0x40
 8015da2:	6803      	ldr	r3, [r0, #0]
 8015da4:	910f      	str	r1, [sp, #60]	; 0x3c
 8015da6:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8015da8:	9009      	str	r0, [sp, #36]	; 0x24
 8015daa:	4614      	mov	r4, r2
 8015dac:	4629      	mov	r1, r5
 8015dae:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8015db2:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8015db6:	47b8      	blx	r7
 8015db8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015dba:	6058      	str	r0, [r3, #4]
 8015dbc:	2800      	cmp	r0, #0
 8015dbe:	f000 83a1 	beq.w	8016504 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015dc2:	682b      	ldr	r3, [r5, #0]
 8015dc4:	9314      	str	r3, [sp, #80]	; 0x50
 8015dc6:	686b      	ldr	r3, [r5, #4]
 8015dc8:	9315      	str	r3, [sp, #84]	; 0x54
 8015dca:	4bc4      	ldr	r3, [pc, #784]	; (80160dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8015dcc:	ed94 7a02 	vldr	s14, [r4, #8]
 8015dd0:	7819      	ldrb	r1, [r3, #0]
 8015dd2:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8015dd6:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8015dda:	2900      	cmp	r1, #0
 8015ddc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8015de0:	bf16      	itet	ne
 8015de2:	4619      	movne	r1, r3
 8015de4:	4611      	moveq	r1, r2
 8015de6:	4613      	movne	r3, r2
 8015de8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015dec:	9116      	str	r1, [sp, #88]	; 0x58
 8015dee:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8015df2:	f240 8387 	bls.w	8016504 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015df6:	ed94 7a07 	vldr	s14, [r4, #28]
 8015dfa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8015dfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015e02:	f240 837f 	bls.w	8016504 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015e06:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8015e0a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8015e0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015e12:	f240 8377 	bls.w	8016504 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015e16:	6822      	ldr	r2, [r4, #0]
 8015e18:	4bb1      	ldr	r3, [pc, #708]	; (80160e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8015e1a:	429a      	cmp	r2, r3
 8015e1c:	f2c0 8372 	blt.w	8016504 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015e20:	49b0      	ldr	r1, [pc, #704]	; (80160e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8015e22:	6963      	ldr	r3, [r4, #20]
 8015e24:	428a      	cmp	r2, r1
 8015e26:	f300 836d 	bgt.w	8016504 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015e2a:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8015e2e:	48ae      	ldr	r0, [pc, #696]	; (80160e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8015e30:	33ff      	adds	r3, #255	; 0xff
 8015e32:	4283      	cmp	r3, r0
 8015e34:	f200 8366 	bhi.w	8016504 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015e38:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8015e3a:	4dac      	ldr	r5, [pc, #688]	; (80160ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8015e3c:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8015e40:	33ff      	adds	r3, #255	; 0xff
 8015e42:	42ab      	cmp	r3, r5
 8015e44:	f200 835e 	bhi.w	8016504 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015e48:	6862      	ldr	r2, [r4, #4]
 8015e4a:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8015e4e:	33ff      	adds	r3, #255	; 0xff
 8015e50:	4283      	cmp	r3, r0
 8015e52:	f200 8357 	bhi.w	8016504 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015e56:	69a1      	ldr	r1, [r4, #24]
 8015e58:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8015e5c:	33ff      	adds	r3, #255	; 0xff
 8015e5e:	4283      	cmp	r3, r0
 8015e60:	f200 8350 	bhi.w	8016504 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015e64:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8015e66:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8015e6a:	30ff      	adds	r0, #255	; 0xff
 8015e6c:	42a8      	cmp	r0, r5
 8015e6e:	f200 8349 	bhi.w	8016504 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015e72:	428a      	cmp	r2, r1
 8015e74:	f280 8110 	bge.w	8016098 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8015e78:	429a      	cmp	r2, r3
 8015e7a:	f300 8119 	bgt.w	80160b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8015e7e:	4299      	cmp	r1, r3
 8015e80:	f280 811d 	bge.w	80160be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8015e84:	2502      	movs	r5, #2
 8015e86:	2701      	movs	r7, #1
 8015e88:	46a9      	mov	r9, r5
 8015e8a:	46b8      	mov	r8, r7
 8015e8c:	f04f 0a00 	mov.w	sl, #0
 8015e90:	4621      	mov	r1, r4
 8015e92:	a849      	add	r0, sp, #292	; 0x124
 8015e94:	f003 fe7e 	bl	8019b94 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8015e98:	4622      	mov	r2, r4
 8015e9a:	4653      	mov	r3, sl
 8015e9c:	a949      	add	r1, sp, #292	; 0x124
 8015e9e:	f8cd 9000 	str.w	r9, [sp]
 8015ea2:	a819      	add	r0, sp, #100	; 0x64
 8015ea4:	f003 ffa6 	bl	8019df4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8015ea8:	4622      	mov	r2, r4
 8015eaa:	4653      	mov	r3, sl
 8015eac:	a949      	add	r1, sp, #292	; 0x124
 8015eae:	f8cd 8000 	str.w	r8, [sp]
 8015eb2:	a829      	add	r0, sp, #164	; 0xa4
 8015eb4:	f003 ff9e 	bl	8019df4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8015eb8:	4643      	mov	r3, r8
 8015eba:	4622      	mov	r2, r4
 8015ebc:	a949      	add	r1, sp, #292	; 0x124
 8015ebe:	f8cd 9000 	str.w	r9, [sp]
 8015ec2:	a839      	add	r0, sp, #228	; 0xe4
 8015ec4:	f003 ff96 	bl	8019df4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8015ec8:	42af      	cmp	r7, r5
 8015eca:	bfb5      	itete	lt
 8015ecc:	2300      	movlt	r3, #0
 8015ece:	2301      	movge	r3, #1
 8015ed0:	930e      	strlt	r3, [sp, #56]	; 0x38
 8015ed2:	930e      	strge	r3, [sp, #56]	; 0x38
 8015ed4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015ed6:	e893 0003 	ldmia.w	r3, {r0, r1}
 8015eda:	af12      	add	r7, sp, #72	; 0x48
 8015edc:	bfb9      	ittee	lt
 8015ede:	ad29      	addlt	r5, sp, #164	; 0xa4
 8015ee0:	ac19      	addlt	r4, sp, #100	; 0x64
 8015ee2:	ad19      	addge	r5, sp, #100	; 0x64
 8015ee4:	ac29      	addge	r4, sp, #164	; 0xa4
 8015ee6:	e887 0003 	stmia.w	r7, {r0, r1}
 8015eea:	b928      	cbnz	r0, 8015ef8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8015eec:	4b80      	ldr	r3, [pc, #512]	; (80160f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8015eee:	6818      	ldr	r0, [r3, #0]
 8015ef0:	6803      	ldr	r3, [r0, #0]
 8015ef2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015ef4:	4798      	blx	r3
 8015ef6:	6038      	str	r0, [r7, #0]
 8015ef8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015efa:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8015efe:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015f02:	930c      	str	r3, [sp, #48]	; 0x30
 8015f04:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015f06:	6963      	ldr	r3, [r4, #20]
 8015f08:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015f0a:	440b      	add	r3, r1
 8015f0c:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015f10:	4408      	add	r0, r1
 8015f12:	b200      	sxth	r0, r0
 8015f14:	4283      	cmp	r3, r0
 8015f16:	900d      	str	r0, [sp, #52]	; 0x34
 8015f18:	f280 80dd 	bge.w	80160d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8015f1c:	428b      	cmp	r3, r1
 8015f1e:	da08      	bge.n	8015f32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015f20:	2a00      	cmp	r2, #0
 8015f22:	dd06      	ble.n	8015f32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015f24:	1acb      	subs	r3, r1, r3
 8015f26:	429a      	cmp	r2, r3
 8015f28:	f2c0 80e4 	blt.w	80160f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8015f2c:	2b00      	cmp	r3, #0
 8015f2e:	f300 80e2 	bgt.w	80160f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8015f32:	6967      	ldr	r7, [r4, #20]
 8015f34:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015f36:	443b      	add	r3, r7
 8015f38:	461f      	mov	r7, r3
 8015f3a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015f3c:	1bdf      	subs	r7, r3, r7
 8015f3e:	4297      	cmp	r7, r2
 8015f40:	bfa8      	it	ge
 8015f42:	4617      	movge	r7, r2
 8015f44:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8015f48:	2f00      	cmp	r7, #0
 8015f4a:	f340 8166 	ble.w	801621a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8015f4e:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015f50:	6829      	ldr	r1, [r5, #0]
 8015f52:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015f56:	f9bb 3000 	ldrsh.w	r3, [fp]
 8015f5a:	6820      	ldr	r0, [r4, #0]
 8015f5c:	4411      	add	r1, r2
 8015f5e:	4299      	cmp	r1, r3
 8015f60:	dd1a      	ble.n	8015f98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015f62:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8015f66:	440b      	add	r3, r1
 8015f68:	4402      	add	r2, r0
 8015f6a:	b21b      	sxth	r3, r3
 8015f6c:	429a      	cmp	r2, r3
 8015f6e:	dc13      	bgt.n	8015f98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015f70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f72:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015f74:	681b      	ldr	r3, [r3, #0]
 8015f76:	9206      	str	r2, [sp, #24]
 8015f78:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015f7a:	9205      	str	r2, [sp, #20]
 8015f7c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015f7e:	9500      	str	r5, [sp, #0]
 8015f80:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015f84:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8015f86:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015f88:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8015f8c:	a912      	add	r1, sp, #72	; 0x48
 8015f8e:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8015f92:	aa49      	add	r2, sp, #292	; 0x124
 8015f94:	4623      	mov	r3, r4
 8015f96:	47c8      	blx	r9
 8015f98:	e9d4 2300 	ldrd	r2, r3, [r4]
 8015f9c:	441a      	add	r2, r3
 8015f9e:	6963      	ldr	r3, [r4, #20]
 8015fa0:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8015fa4:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8015fa8:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8015fac:	68a1      	ldr	r1, [r4, #8]
 8015fae:	ed94 6a08 	vldr	s12, [r4, #32]
 8015fb2:	6022      	str	r2, [r4, #0]
 8015fb4:	3301      	adds	r3, #1
 8015fb6:	6163      	str	r3, [r4, #20]
 8015fb8:	69a3      	ldr	r3, [r4, #24]
 8015fba:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015fbe:	3b01      	subs	r3, #1
 8015fc0:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8015fc4:	61a3      	str	r3, [r4, #24]
 8015fc6:	6923      	ldr	r3, [r4, #16]
 8015fc8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015fcc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015fd0:	edd4 6a07 	vldr	s13, [r4, #28]
 8015fd4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015fd8:	440b      	add	r3, r1
 8015fda:	68e1      	ldr	r1, [r4, #12]
 8015fdc:	6123      	str	r3, [r4, #16]
 8015fde:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015fe2:	428b      	cmp	r3, r1
 8015fe4:	edc4 6a07 	vstr	s13, [r4, #28]
 8015fe8:	db15      	blt.n	8016016 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8015fea:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8015fee:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015ff2:	3201      	adds	r2, #1
 8015ff4:	edc4 6a07 	vstr	s13, [r4, #28]
 8015ff8:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8015ffc:	6022      	str	r2, [r4, #0]
 8015ffe:	ee36 7a87 	vadd.f32	s14, s13, s14
 8016002:	1a5b      	subs	r3, r3, r1
 8016004:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8016008:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801600c:	6123      	str	r3, [r4, #16]
 801600e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8016012:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8016016:	e9d5 2300 	ldrd	r2, r3, [r5]
 801601a:	441a      	add	r2, r3
 801601c:	696b      	ldr	r3, [r5, #20]
 801601e:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8016022:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8016026:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801602a:	68a9      	ldr	r1, [r5, #8]
 801602c:	ed95 6a08 	vldr	s12, [r5, #32]
 8016030:	602a      	str	r2, [r5, #0]
 8016032:	3301      	adds	r3, #1
 8016034:	616b      	str	r3, [r5, #20]
 8016036:	69ab      	ldr	r3, [r5, #24]
 8016038:	ee37 7a27 	vadd.f32	s14, s14, s15
 801603c:	3b01      	subs	r3, #1
 801603e:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8016042:	61ab      	str	r3, [r5, #24]
 8016044:	692b      	ldr	r3, [r5, #16]
 8016046:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801604a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801604e:	edd5 6a07 	vldr	s13, [r5, #28]
 8016052:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8016056:	440b      	add	r3, r1
 8016058:	68e9      	ldr	r1, [r5, #12]
 801605a:	612b      	str	r3, [r5, #16]
 801605c:	ee76 6a86 	vadd.f32	s13, s13, s12
 8016060:	428b      	cmp	r3, r1
 8016062:	edc5 6a07 	vstr	s13, [r5, #28]
 8016066:	db15      	blt.n	8016094 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8016068:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801606c:	ee76 6a26 	vadd.f32	s13, s12, s13
 8016070:	3201      	adds	r2, #1
 8016072:	edc5 6a07 	vstr	s13, [r5, #28]
 8016076:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801607a:	602a      	str	r2, [r5, #0]
 801607c:	ee36 7a87 	vadd.f32	s14, s13, s14
 8016080:	1a5b      	subs	r3, r3, r1
 8016082:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8016086:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801608a:	612b      	str	r3, [r5, #16]
 801608c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8016090:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8016094:	3f01      	subs	r7, #1
 8016096:	e757      	b.n	8015f48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8016098:	4299      	cmp	r1, r3
 801609a:	dc13      	bgt.n	80160c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 801609c:	429a      	cmp	r2, r3
 801609e:	da14      	bge.n	80160ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80160a0:	2502      	movs	r5, #2
 80160a2:	2703      	movs	r7, #3
 80160a4:	46a9      	mov	r9, r5
 80160a6:	f04f 0800 	mov.w	r8, #0
 80160aa:	f04f 0a01 	mov.w	sl, #1
 80160ae:	e6ef      	b.n	8015e90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80160b0:	2501      	movs	r5, #1
 80160b2:	2700      	movs	r7, #0
 80160b4:	46a9      	mov	r9, r5
 80160b6:	46b8      	mov	r8, r7
 80160b8:	f04f 0a02 	mov.w	sl, #2
 80160bc:	e6e8      	b.n	8015e90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80160be:	2501      	movs	r5, #1
 80160c0:	2702      	movs	r7, #2
 80160c2:	e6e1      	b.n	8015e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80160c4:	2500      	movs	r5, #0
 80160c6:	2701      	movs	r7, #1
 80160c8:	e7f4      	b.n	80160b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80160ca:	2702      	movs	r7, #2
 80160cc:	2503      	movs	r5, #3
 80160ce:	f04f 0900 	mov.w	r9, #0
 80160d2:	46b8      	mov	r8, r7
 80160d4:	e7e9      	b.n	80160aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80160d6:	4613      	mov	r3, r2
 80160d8:	e728      	b.n	8015f2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80160da:	bf00      	nop
 80160dc:	2000e1b8 	.word	0x2000e1b8
 80160e0:	fffd8f01 	.word	0xfffd8f01
 80160e4:	00027100 	.word	0x00027100
 80160e8:	0004e1ff 	.word	0x0004e1ff
 80160ec:	0004e1fe 	.word	0x0004e1fe
 80160f0:	2000e1c0 	.word	0x2000e1c0
 80160f4:	4613      	mov	r3, r2
 80160f6:	992b      	ldr	r1, [sp, #172]	; 0xac
 80160f8:	9111      	str	r1, [sp, #68]	; 0x44
 80160fa:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80160fe:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8016102:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8016104:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8016108:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 801610c:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8016110:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8016114:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8016118:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 801611c:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8016120:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8016124:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8016128:	469e      	mov	lr, r3
 801612a:	469c      	mov	ip, r3
 801612c:	f04f 0900 	mov.w	r9, #0
 8016130:	f1bc 0f00 	cmp.w	ip, #0
 8016134:	d147      	bne.n	80161c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8016136:	eb03 0c07 	add.w	ip, r3, r7
 801613a:	1ad7      	subs	r7, r2, r3
 801613c:	f1b9 0f00 	cmp.w	r9, #0
 8016140:	d009      	beq.n	8016156 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8016142:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8016146:	9029      	str	r0, [sp, #164]	; 0xa4
 8016148:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 801614c:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8016150:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8016154:	912d      	str	r1, [sp, #180]	; 0xb4
 8016156:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8016158:	9111      	str	r1, [sp, #68]	; 0x44
 801615a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801615e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8016162:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8016166:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801616a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801616e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8016172:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8016176:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801617a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801617e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8016182:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8016186:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801618a:	f04f 0800 	mov.w	r8, #0
 801618e:	f1be 0f00 	cmp.w	lr, #0
 8016192:	d031      	beq.n	80161f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8016194:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8016196:	4431      	add	r1, r6
 8016198:	4549      	cmp	r1, r9
 801619a:	4450      	add	r0, sl
 801619c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80161a0:	ee37 7a04 	vadd.f32	s14, s14, s8
 80161a4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80161a8:	db08      	blt.n	80161bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80161aa:	ee77 7a85 	vadd.f32	s15, s15, s10
 80161ae:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80161b2:	ee37 7a06 	vadd.f32	s14, s14, s12
 80161b6:	3001      	adds	r0, #1
 80161b8:	eba1 0109 	sub.w	r1, r1, r9
 80161bc:	f10e 3eff 	add.w	lr, lr, #4294967295	; 0xffffffff
 80161c0:	f04f 0801 	mov.w	r8, #1
 80161c4:	e7e3      	b.n	801618e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80161c6:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80161c8:	4431      	add	r1, r6
 80161ca:	4541      	cmp	r1, r8
 80161cc:	4450      	add	r0, sl
 80161ce:	ee37 7a24 	vadd.f32	s14, s14, s9
 80161d2:	ee77 7a84 	vadd.f32	s15, s15, s8
 80161d6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80161da:	db08      	blt.n	80161ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80161dc:	ee76 6a85 	vadd.f32	s13, s13, s10
 80161e0:	ee37 7a25 	vadd.f32	s14, s14, s11
 80161e4:	ee77 7a86 	vadd.f32	s15, s15, s12
 80161e8:	3001      	adds	r0, #1
 80161ea:	eba1 0108 	sub.w	r1, r1, r8
 80161ee:	f10c 3cff 	add.w	ip, ip, #4294967295	; 0xffffffff
 80161f2:	f04f 0901 	mov.w	r9, #1
 80161f6:	e79b      	b.n	8016130 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80161f8:	449c      	add	ip, r3
 80161fa:	1aff      	subs	r7, r7, r3
 80161fc:	f1b8 0f00 	cmp.w	r8, #0
 8016200:	d009      	beq.n	8016216 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8016202:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8016206:	9019      	str	r0, [sp, #100]	; 0x64
 8016208:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801620c:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8016210:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8016214:	911d      	str	r1, [sp, #116]	; 0x74
 8016216:	1ad2      	subs	r2, r2, r3
 8016218:	e68b      	b.n	8015f32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801621a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801621c:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 801621e:	2b00      	cmp	r3, #0
 8016220:	f000 80d1 	beq.w	80163c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8016224:	ad19      	add	r5, sp, #100	; 0x64
 8016226:	ac39      	add	r4, sp, #228	; 0xe4
 8016228:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801622a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801622e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8016232:	930c      	str	r3, [sp, #48]	; 0x30
 8016234:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016236:	6963      	ldr	r3, [r4, #20]
 8016238:	440b      	add	r3, r1
 801623a:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801623e:	4408      	add	r0, r1
 8016240:	b200      	sxth	r0, r0
 8016242:	4283      	cmp	r3, r0
 8016244:	900d      	str	r0, [sp, #52]	; 0x34
 8016246:	f280 80c1 	bge.w	80163cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801624a:	428b      	cmp	r3, r1
 801624c:	da08      	bge.n	8016260 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801624e:	2a00      	cmp	r2, #0
 8016250:	dd06      	ble.n	8016260 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8016252:	1acb      	subs	r3, r1, r3
 8016254:	429a      	cmp	r2, r3
 8016256:	f2c0 80bb 	blt.w	80163d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801625a:	2b00      	cmp	r3, #0
 801625c:	f300 80b9 	bgt.w	80163d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8016260:	6967      	ldr	r7, [r4, #20]
 8016262:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016264:	443b      	add	r3, r7
 8016266:	461f      	mov	r7, r3
 8016268:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801626a:	1bdf      	subs	r7, r3, r7
 801626c:	4297      	cmp	r7, r2
 801626e:	bfa8      	it	ge
 8016270:	4617      	movge	r7, r2
 8016272:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8016276:	2f00      	cmp	r7, #0
 8016278:	f340 813c 	ble.w	80164f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 801627c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801627e:	6829      	ldr	r1, [r5, #0]
 8016280:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016284:	f9bb 3000 	ldrsh.w	r3, [fp]
 8016288:	6820      	ldr	r0, [r4, #0]
 801628a:	4411      	add	r1, r2
 801628c:	4299      	cmp	r1, r3
 801628e:	dd1a      	ble.n	80162c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8016290:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8016294:	440b      	add	r3, r1
 8016296:	4402      	add	r2, r0
 8016298:	b21b      	sxth	r3, r3
 801629a:	429a      	cmp	r2, r3
 801629c:	dc13      	bgt.n	80162c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801629e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80162a0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80162a2:	681b      	ldr	r3, [r3, #0]
 80162a4:	9206      	str	r2, [sp, #24]
 80162a6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80162a8:	9205      	str	r2, [sp, #20]
 80162aa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80162ac:	9500      	str	r5, [sp, #0]
 80162ae:	e9cd b203 	strd	fp, r2, [sp, #12]
 80162b2:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80162b4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80162b6:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80162ba:	a912      	add	r1, sp, #72	; 0x48
 80162bc:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80162c0:	aa49      	add	r2, sp, #292	; 0x124
 80162c2:	4623      	mov	r3, r4
 80162c4:	47c8      	blx	r9
 80162c6:	e9d4 2300 	ldrd	r2, r3, [r4]
 80162ca:	441a      	add	r2, r3
 80162cc:	6963      	ldr	r3, [r4, #20]
 80162ce:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80162d2:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80162d6:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80162da:	68a1      	ldr	r1, [r4, #8]
 80162dc:	ed94 6a08 	vldr	s12, [r4, #32]
 80162e0:	6022      	str	r2, [r4, #0]
 80162e2:	3301      	adds	r3, #1
 80162e4:	6163      	str	r3, [r4, #20]
 80162e6:	69a3      	ldr	r3, [r4, #24]
 80162e8:	ee37 7a27 	vadd.f32	s14, s14, s15
 80162ec:	3b01      	subs	r3, #1
 80162ee:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80162f2:	61a3      	str	r3, [r4, #24]
 80162f4:	6923      	ldr	r3, [r4, #16]
 80162f6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80162fa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80162fe:	edd4 6a07 	vldr	s13, [r4, #28]
 8016302:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8016306:	440b      	add	r3, r1
 8016308:	68e1      	ldr	r1, [r4, #12]
 801630a:	6123      	str	r3, [r4, #16]
 801630c:	ee76 6a86 	vadd.f32	s13, s13, s12
 8016310:	428b      	cmp	r3, r1
 8016312:	edc4 6a07 	vstr	s13, [r4, #28]
 8016316:	db15      	blt.n	8016344 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8016318:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801631c:	ee76 6a26 	vadd.f32	s13, s12, s13
 8016320:	3201      	adds	r2, #1
 8016322:	edc4 6a07 	vstr	s13, [r4, #28]
 8016326:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801632a:	6022      	str	r2, [r4, #0]
 801632c:	ee36 7a87 	vadd.f32	s14, s13, s14
 8016330:	1a5b      	subs	r3, r3, r1
 8016332:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8016336:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801633a:	6123      	str	r3, [r4, #16]
 801633c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8016340:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8016344:	e9d5 2300 	ldrd	r2, r3, [r5]
 8016348:	441a      	add	r2, r3
 801634a:	696b      	ldr	r3, [r5, #20]
 801634c:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8016350:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8016354:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8016358:	68a9      	ldr	r1, [r5, #8]
 801635a:	ed95 6a08 	vldr	s12, [r5, #32]
 801635e:	602a      	str	r2, [r5, #0]
 8016360:	3301      	adds	r3, #1
 8016362:	616b      	str	r3, [r5, #20]
 8016364:	69ab      	ldr	r3, [r5, #24]
 8016366:	ee37 7a27 	vadd.f32	s14, s14, s15
 801636a:	3b01      	subs	r3, #1
 801636c:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8016370:	61ab      	str	r3, [r5, #24]
 8016372:	692b      	ldr	r3, [r5, #16]
 8016374:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8016378:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801637c:	edd5 6a07 	vldr	s13, [r5, #28]
 8016380:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8016384:	440b      	add	r3, r1
 8016386:	68e9      	ldr	r1, [r5, #12]
 8016388:	612b      	str	r3, [r5, #16]
 801638a:	ee76 6a86 	vadd.f32	s13, s13, s12
 801638e:	428b      	cmp	r3, r1
 8016390:	edc5 6a07 	vstr	s13, [r5, #28]
 8016394:	db15      	blt.n	80163c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8016396:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801639a:	ee76 6a26 	vadd.f32	s13, s12, s13
 801639e:	3201      	adds	r2, #1
 80163a0:	edc5 6a07 	vstr	s13, [r5, #28]
 80163a4:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80163a8:	602a      	str	r2, [r5, #0]
 80163aa:	ee36 7a87 	vadd.f32	s14, s13, s14
 80163ae:	1a5b      	subs	r3, r3, r1
 80163b0:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80163b4:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80163b8:	612b      	str	r3, [r5, #16]
 80163ba:	ee77 7a27 	vadd.f32	s15, s14, s15
 80163be:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80163c2:	3f01      	subs	r7, #1
 80163c4:	e757      	b.n	8016276 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80163c6:	ad39      	add	r5, sp, #228	; 0xe4
 80163c8:	ac19      	add	r4, sp, #100	; 0x64
 80163ca:	e72d      	b.n	8016228 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80163cc:	4613      	mov	r3, r2
 80163ce:	e744      	b.n	801625a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80163d0:	4613      	mov	r3, r2
 80163d2:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80163d6:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 80163d8:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80163dc:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80163e0:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80163e4:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80163e8:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 80163ec:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 80163f0:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 80163f4:	993d      	ldr	r1, [sp, #244]	; 0xf4
 80163f6:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 80163fa:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 80163fe:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8016402:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8016406:	960e      	str	r6, [sp, #56]	; 0x38
 8016408:	469e      	mov	lr, r3
 801640a:	461f      	mov	r7, r3
 801640c:	f04f 0900 	mov.w	r9, #0
 8016410:	2f00      	cmp	r7, #0
 8016412:	d146      	bne.n	80164a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8016414:	449c      	add	ip, r3
 8016416:	1ad7      	subs	r7, r2, r3
 8016418:	f1b9 0f00 	cmp.w	r9, #0
 801641c:	d009      	beq.n	8016432 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 801641e:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8016422:	9039      	str	r0, [sp, #228]	; 0xe4
 8016424:	913d      	str	r1, [sp, #244]	; 0xf4
 8016426:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 801642a:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 801642e:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8016432:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8016434:	910e      	str	r1, [sp, #56]	; 0x38
 8016436:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801643a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 801643e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8016442:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8016446:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801644a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 801644e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8016452:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8016456:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801645a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 801645e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8016462:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8016466:	f04f 0800 	mov.w	r8, #0
 801646a:	f1be 0f00 	cmp.w	lr, #0
 801646e:	d030      	beq.n	80164d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8016470:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8016472:	4431      	add	r1, r6
 8016474:	4549      	cmp	r1, r9
 8016476:	4450      	add	r0, sl
 8016478:	ee76 6aa4 	vadd.f32	s13, s13, s9
 801647c:	ee37 7a04 	vadd.f32	s14, s14, s8
 8016480:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8016484:	db08      	blt.n	8016498 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8016486:	ee77 7a85 	vadd.f32	s15, s15, s10
 801648a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801648e:	ee37 7a06 	vadd.f32	s14, s14, s12
 8016492:	3001      	adds	r0, #1
 8016494:	eba1 0109 	sub.w	r1, r1, r9
 8016498:	f10e 3eff 	add.w	lr, lr, #4294967295	; 0xffffffff
 801649c:	f04f 0801 	mov.w	r8, #1
 80164a0:	e7e3      	b.n	801646a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80164a2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80164a4:	4431      	add	r1, r6
 80164a6:	4541      	cmp	r1, r8
 80164a8:	4450      	add	r0, sl
 80164aa:	ee37 7a24 	vadd.f32	s14, s14, s9
 80164ae:	ee77 7a84 	vadd.f32	s15, s15, s8
 80164b2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80164b6:	db08      	blt.n	80164ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80164b8:	ee76 6a85 	vadd.f32	s13, s13, s10
 80164bc:	ee37 7a25 	vadd.f32	s14, s14, s11
 80164c0:	ee77 7a86 	vadd.f32	s15, s15, s12
 80164c4:	3001      	adds	r0, #1
 80164c6:	eba1 0108 	sub.w	r1, r1, r8
 80164ca:	3f01      	subs	r7, #1
 80164cc:	f04f 0901 	mov.w	r9, #1
 80164d0:	e79e      	b.n	8016410 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80164d2:	449c      	add	ip, r3
 80164d4:	1aff      	subs	r7, r7, r3
 80164d6:	f1b8 0f00 	cmp.w	r8, #0
 80164da:	d009      	beq.n	80164f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80164dc:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80164e0:	9019      	str	r0, [sp, #100]	; 0x64
 80164e2:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80164e6:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80164ea:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80164ee:	911d      	str	r1, [sp, #116]	; 0x74
 80164f0:	1ad2      	subs	r2, r2, r3
 80164f2:	e6b5      	b.n	8016260 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80164f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80164f6:	681b      	ldr	r3, [r3, #0]
 80164f8:	b923      	cbnz	r3, 8016504 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80164fa:	4b04      	ldr	r3, [pc, #16]	; (801650c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80164fc:	6818      	ldr	r0, [r3, #0]
 80164fe:	6803      	ldr	r3, [r0, #0]
 8016500:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016502:	4798      	blx	r3
 8016504:	b05b      	add	sp, #364	; 0x16c
 8016506:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801650a:	bf00      	nop
 801650c:	2000e1c0 	.word	0x2000e1c0

08016510 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8016510:	b570      	push	{r4, r5, r6, lr}
 8016512:	4604      	mov	r4, r0
 8016514:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8016518:	9805      	ldr	r0, [sp, #20]
 801651a:	6061      	str	r1, [r4, #4]
 801651c:	2500      	movs	r5, #0
 801651e:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8016522:	8263      	strh	r3, [r4, #18]
 8016524:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016528:	8025      	strh	r5, [r4, #0]
 801652a:	7221      	strb	r1, [r4, #8]
 801652c:	7266      	strb	r6, [r4, #9]
 801652e:	60e0      	str	r0, [r4, #12]
 8016530:	8222      	strh	r2, [r4, #16]
 8016532:	82a3      	strh	r3, [r4, #20]
 8016534:	82e5      	strh	r5, [r4, #22]
 8016536:	8325      	strh	r5, [r4, #24]
 8016538:	8365      	strh	r5, [r4, #26]
 801653a:	83a5      	strh	r5, [r4, #28]
 801653c:	83e5      	strh	r5, [r4, #30]
 801653e:	8425      	strh	r5, [r4, #32]
 8016540:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8016544:	b32e      	cbz	r6, 8016592 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8016546:	6803      	ldr	r3, [r0, #0]
 8016548:	695b      	ldr	r3, [r3, #20]
 801654a:	4798      	blx	r3
 801654c:	4606      	mov	r6, r0
 801654e:	b300      	cbz	r0, 8016592 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8016550:	68e0      	ldr	r0, [r4, #12]
 8016552:	6803      	ldr	r3, [r0, #0]
 8016554:	4631      	mov	r1, r6
 8016556:	68db      	ldr	r3, [r3, #12]
 8016558:	4798      	blx	r3
 801655a:	4605      	mov	r5, r0
 801655c:	b1c8      	cbz	r0, 8016592 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801655e:	7b43      	ldrb	r3, [r0, #13]
 8016560:	7a82      	ldrb	r2, [r0, #10]
 8016562:	005b      	lsls	r3, r3, #1
 8016564:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016568:	4313      	orrs	r3, r2
 801656a:	8423      	strh	r3, [r4, #32]
 801656c:	7a63      	ldrb	r3, [r4, #9]
 801656e:	2b06      	cmp	r3, #6
 8016570:	d10f      	bne.n	8016592 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8016572:	68e0      	ldr	r0, [r4, #12]
 8016574:	6803      	ldr	r3, [r0, #0]
 8016576:	462a      	mov	r2, r5
 8016578:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801657a:	4631      	mov	r1, r6
 801657c:	4798      	blx	r3
 801657e:	7b6b      	ldrb	r3, [r5, #13]
 8016580:	005b      	lsls	r3, r3, #1
 8016582:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016586:	7aab      	ldrb	r3, [r5, #10]
 8016588:	4313      	orrs	r3, r2
 801658a:	4418      	add	r0, r3
 801658c:	8c23      	ldrh	r3, [r4, #32]
 801658e:	4418      	add	r0, r3
 8016590:	8420      	strh	r0, [r4, #32]
 8016592:	4620      	mov	r0, r4
 8016594:	bd70      	pop	{r4, r5, r6, pc}

08016596 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8016596:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801659a:	2400      	movs	r4, #0
 801659c:	b085      	sub	sp, #20
 801659e:	4681      	mov	r9, r0
 80165a0:	4688      	mov	r8, r1
 80165a2:	4692      	mov	sl, r2
 80165a4:	469b      	mov	fp, r3
 80165a6:	4627      	mov	r7, r4
 80165a8:	4625      	mov	r5, r4
 80165aa:	4626      	mov	r6, r4
 80165ac:	4554      	cmp	r4, sl
 80165ae:	da2a      	bge.n	8016606 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80165b0:	2300      	movs	r3, #0
 80165b2:	9303      	str	r3, [sp, #12]
 80165b4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80165b8:	429d      	cmp	r5, r3
 80165ba:	d004      	beq.n	80165c6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80165bc:	f242 030b 	movw	r3, #8203	; 0x200b
 80165c0:	429d      	cmp	r5, r3
 80165c2:	bf18      	it	ne
 80165c4:	462f      	movne	r7, r5
 80165c6:	ab03      	add	r3, sp, #12
 80165c8:	4642      	mov	r2, r8
 80165ca:	4659      	mov	r1, fp
 80165cc:	4648      	mov	r0, r9
 80165ce:	f003 f8f7 	bl	80197c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80165d2:	4605      	mov	r5, r0
 80165d4:	b1b8      	cbz	r0, 8016606 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80165d6:	280a      	cmp	r0, #10
 80165d8:	d015      	beq.n	8016606 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80165da:	9a03      	ldr	r2, [sp, #12]
 80165dc:	b18a      	cbz	r2, 8016602 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80165de:	7b50      	ldrb	r0, [r2, #13]
 80165e0:	7a93      	ldrb	r3, [r2, #10]
 80165e2:	8895      	ldrh	r5, [r2, #4]
 80165e4:	0040      	lsls	r0, r0, #1
 80165e6:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80165ea:	4303      	orrs	r3, r0
 80165ec:	9301      	str	r3, [sp, #4]
 80165ee:	f8d8 3000 	ldr.w	r3, [r8]
 80165f2:	4639      	mov	r1, r7
 80165f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80165f6:	4640      	mov	r0, r8
 80165f8:	4798      	blx	r3
 80165fa:	9b01      	ldr	r3, [sp, #4]
 80165fc:	4418      	add	r0, r3
 80165fe:	4406      	add	r6, r0
 8016600:	b2b6      	uxth	r6, r6
 8016602:	3401      	adds	r4, #1
 8016604:	e7d2      	b.n	80165ac <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8016606:	4630      	mov	r0, r6
 8016608:	b005      	add	sp, #20
 801660a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801660e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 801660e:	2a02      	cmp	r2, #2
 8016610:	b530      	push	{r4, r5, lr}
 8016612:	d011      	beq.n	8016638 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8016614:	2a03      	cmp	r2, #3
 8016616:	d01c      	beq.n	8016652 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8016618:	2a01      	cmp	r2, #1
 801661a:	d10c      	bne.n	8016636 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801661c:	888b      	ldrh	r3, [r1, #4]
 801661e:	8801      	ldrh	r1, [r0, #0]
 8016620:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8016624:	8844      	ldrh	r4, [r0, #2]
 8016626:	8004      	strh	r4, [r0, #0]
 8016628:	1a5b      	subs	r3, r3, r1
 801662a:	1a9b      	subs	r3, r3, r2
 801662c:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8016630:	8043      	strh	r3, [r0, #2]
 8016632:	8081      	strh	r1, [r0, #4]
 8016634:	80c2      	strh	r2, [r0, #6]
 8016636:	bd30      	pop	{r4, r5, pc}
 8016638:	88cb      	ldrh	r3, [r1, #6]
 801663a:	8842      	ldrh	r2, [r0, #2]
 801663c:	1a9b      	subs	r3, r3, r2
 801663e:	88c2      	ldrh	r2, [r0, #6]
 8016640:	1a9b      	subs	r3, r3, r2
 8016642:	888a      	ldrh	r2, [r1, #4]
 8016644:	8801      	ldrh	r1, [r0, #0]
 8016646:	8043      	strh	r3, [r0, #2]
 8016648:	1a52      	subs	r2, r2, r1
 801664a:	8881      	ldrh	r1, [r0, #4]
 801664c:	1a52      	subs	r2, r2, r1
 801664e:	8002      	strh	r2, [r0, #0]
 8016650:	e7f1      	b.n	8016636 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8016652:	88cb      	ldrh	r3, [r1, #6]
 8016654:	8841      	ldrh	r1, [r0, #2]
 8016656:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801665a:	f9b0 5000 	ldrsh.w	r5, [r0]
 801665e:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8016662:	8045      	strh	r5, [r0, #2]
 8016664:	1a5b      	subs	r3, r3, r1
 8016666:	1a9b      	subs	r3, r3, r2
 8016668:	8003      	strh	r3, [r0, #0]
 801666a:	8082      	strh	r2, [r0, #4]
 801666c:	80c4      	strh	r4, [r0, #6]
 801666e:	e7e2      	b.n	8016636 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08016670 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8016670:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016674:	b09f      	sub	sp, #124	; 0x7c
 8016676:	9116      	str	r1, [sp, #88]	; 0x58
 8016678:	9317      	str	r3, [sp, #92]	; 0x5c
 801667a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801667c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801667e:	8809      	ldrh	r1, [r1, #0]
 8016680:	889b      	ldrh	r3, [r3, #4]
 8016682:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8016686:	9212      	str	r2, [sp, #72]	; 0x48
 8016688:	440b      	add	r3, r1
 801668a:	b21b      	sxth	r3, r3
 801668c:	9310      	str	r3, [sp, #64]	; 0x40
 801668e:	f8d8 3000 	ldr.w	r3, [r8]
 8016692:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8016696:	7b19      	ldrb	r1, [r3, #12]
 8016698:	7adb      	ldrb	r3, [r3, #11]
 801669a:	9011      	str	r0, [sp, #68]	; 0x44
 801669c:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80166a0:	9114      	str	r1, [sp, #80]	; 0x50
 80166a2:	9315      	str	r3, [sp, #84]	; 0x54
 80166a4:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 80166a8:	2a00      	cmp	r2, #0
 80166aa:	d06a      	beq.n	8016782 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80166ac:	f898 3010 	ldrb.w	r3, [r8, #16]
 80166b0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80166b2:	2b06      	cmp	r3, #6
 80166b4:	bf14      	ite	ne
 80166b6:	2301      	movne	r3, #1
 80166b8:	2302      	moveq	r3, #2
 80166ba:	4413      	add	r3, r2
 80166bc:	f04f 0900 	mov.w	r9, #0
 80166c0:	930f      	str	r3, [sp, #60]	; 0x3c
 80166c2:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80166c6:	464c      	mov	r4, r9
 80166c8:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80166cc:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80166d0:	4293      	cmp	r3, r2
 80166d2:	f280 808f 	bge.w	80167f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80166d6:	2300      	movs	r3, #0
 80166d8:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 80166dc:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80166e0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80166e4:	429c      	cmp	r4, r3
 80166e6:	d006      	beq.n	80166f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 80166e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80166ea:	f242 020b 	movw	r2, #8203	; 0x200b
 80166ee:	4294      	cmp	r4, r2
 80166f0:	bf18      	it	ne
 80166f2:	4623      	movne	r3, r4
 80166f4:	930d      	str	r3, [sp, #52]	; 0x34
 80166f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80166f8:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80166fa:	f8d8 2000 	ldr.w	r2, [r8]
 80166fe:	428b      	cmp	r3, r1
 8016700:	db41      	blt.n	8016786 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8016702:	6813      	ldr	r3, [r2, #0]
 8016704:	4610      	mov	r0, r2
 8016706:	695b      	ldr	r3, [r3, #20]
 8016708:	4798      	blx	r3
 801670a:	4604      	mov	r4, r0
 801670c:	f8d8 0000 	ldr.w	r0, [r8]
 8016710:	6803      	ldr	r3, [r0, #0]
 8016712:	aa1d      	add	r2, sp, #116	; 0x74
 8016714:	689d      	ldr	r5, [r3, #8]
 8016716:	4621      	mov	r1, r4
 8016718:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801671c:	47a8      	blx	r5
 801671e:	901c      	str	r0, [sp, #112]	; 0x70
 8016720:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016724:	429c      	cmp	r4, r3
 8016726:	f000 80eb 	beq.w	8016900 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801672a:	f242 030b 	movw	r3, #8203	; 0x200b
 801672e:	429c      	cmp	r4, r3
 8016730:	f000 80e6 	beq.w	8016900 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8016734:	2c00      	cmp	r4, #0
 8016736:	f000 80f8 	beq.w	801692a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801673a:	2c0a      	cmp	r4, #10
 801673c:	d060      	beq.n	8016800 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801673e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8016740:	b36a      	cbz	r2, 801679e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8016742:	8894      	ldrh	r4, [r2, #4]
 8016744:	f1bb 0f00 	cmp.w	fp, #0
 8016748:	d03b      	beq.n	80167c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 801674a:	f892 900d 	ldrb.w	r9, [r2, #13]
 801674e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016752:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8016756:	f892 900a 	ldrb.w	r9, [r2, #10]
 801675a:	f1bb 0f01 	cmp.w	fp, #1
 801675e:	ea49 0903 	orr.w	r9, r9, r3
 8016762:	d134      	bne.n	80167ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8016764:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016766:	eba6 0609 	sub.w	r6, r6, r9
 801676a:	2b00      	cmp	r3, #0
 801676c:	d14f      	bne.n	801680e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 801676e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016770:	eb09 0306 	add.w	r3, r9, r6
 8016774:	4413      	add	r3, r2
 8016776:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016778:	f9b2 2000 	ldrsh.w	r2, [r2]
 801677c:	4293      	cmp	r3, r2
 801677e:	da51      	bge.n	8016824 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8016780:	e038      	b.n	80167f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8016782:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016784:	e79a      	b.n	80166bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8016786:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801678a:	9301      	str	r3, [sp, #4]
 801678c:	ab1d      	add	r3, sp, #116	; 0x74
 801678e:	9300      	str	r3, [sp, #0]
 8016790:	4659      	mov	r1, fp
 8016792:	ab1c      	add	r3, sp, #112	; 0x70
 8016794:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8016796:	f003 f85c 	bl	8019852 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801679a:	4604      	mov	r4, r0
 801679c:	e7c0      	b.n	8016720 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 801679e:	f8d8 0000 	ldr.w	r0, [r8]
 80167a2:	6803      	ldr	r3, [r0, #0]
 80167a4:	691b      	ldr	r3, [r3, #16]
 80167a6:	4798      	blx	r3
 80167a8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80167ac:	4298      	cmp	r0, r3
 80167ae:	f000 80a7 	beq.w	8016900 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80167b2:	f242 030b 	movw	r3, #8203	; 0x200b
 80167b6:	4298      	cmp	r0, r3
 80167b8:	f000 80a2 	beq.w	8016900 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80167bc:	f1bb 0f00 	cmp.w	fp, #0
 80167c0:	d100      	bne.n	80167c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 80167c2:	444e      	add	r6, r9
 80167c4:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80167c6:	2a00      	cmp	r2, #0
 80167c8:	d1bf      	bne.n	801674a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80167ca:	4691      	mov	r9, r2
 80167cc:	e098      	b.n	8016900 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80167ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80167d0:	2b00      	cmp	r3, #0
 80167d2:	f000 80ac 	beq.w	801692e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 80167d6:	f1bb 0f00 	cmp.w	fp, #0
 80167da:	d118      	bne.n	801680e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80167dc:	f8d8 0000 	ldr.w	r0, [r8]
 80167e0:	990d      	ldr	r1, [sp, #52]	; 0x34
 80167e2:	6803      	ldr	r3, [r0, #0]
 80167e4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80167e6:	4798      	blx	r3
 80167e8:	4406      	add	r6, r0
 80167ea:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80167ec:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80167ee:	1af3      	subs	r3, r6, r3
 80167f0:	4293      	cmp	r3, r2
 80167f2:	dd17      	ble.n	8016824 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80167f4:	2c00      	cmp	r4, #0
 80167f6:	f000 8098 	beq.w	801692a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80167fa:	2c0a      	cmp	r4, #10
 80167fc:	f040 8086 	bne.w	801690c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8016800:	240a      	movs	r4, #10
 8016802:	fab4 f084 	clz	r0, r4
 8016806:	0940      	lsrs	r0, r0, #5
 8016808:	b01f      	add	sp, #124	; 0x7c
 801680a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801680e:	f8d8 0000 	ldr.w	r0, [r8]
 8016812:	990d      	ldr	r1, [sp, #52]	; 0x34
 8016814:	6803      	ldr	r3, [r0, #0]
 8016816:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016818:	4798      	blx	r3
 801681a:	f1bb 0f01 	cmp.w	fp, #1
 801681e:	eba6 0600 	sub.w	r6, r6, r0
 8016822:	d0a4      	beq.n	801676e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8016824:	981c      	ldr	r0, [sp, #112]	; 0x70
 8016826:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016828:	f990 1009 	ldrsb.w	r1, [r0, #9]
 801682c:	f9b3 7000 	ldrsh.w	r7, [r3]
 8016830:	7b43      	ldrb	r3, [r0, #13]
 8016832:	015b      	lsls	r3, r3, #5
 8016834:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016838:	7983      	ldrb	r3, [r0, #6]
 801683a:	4431      	add	r1, r6
 801683c:	4313      	orrs	r3, r2
 801683e:	440b      	add	r3, r1
 8016840:	42bb      	cmp	r3, r7
 8016842:	db5d      	blt.n	8016900 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8016844:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016846:	4299      	cmp	r1, r3
 8016848:	da5a      	bge.n	8016900 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801684a:	f8d8 0000 	ldr.w	r0, [r8]
 801684e:	6803      	ldr	r3, [r0, #0]
 8016850:	42b7      	cmp	r7, r6
 8016852:	bfc8      	it	gt
 8016854:	1bbf      	subgt	r7, r7, r6
 8016856:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016858:	bfcc      	ite	gt
 801685a:	b2bf      	uxthgt	r7, r7
 801685c:	2700      	movle	r7, #0
 801685e:	4798      	blx	r3
 8016860:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016862:	7b5a      	ldrb	r2, [r3, #13]
 8016864:	00d1      	lsls	r1, r2, #3
 8016866:	f401 7580 	and.w	r5, r1, #256	; 0x100
 801686a:	7a19      	ldrb	r1, [r3, #8]
 801686c:	4329      	orrs	r1, r5
 801686e:	0655      	lsls	r5, r2, #25
 8016870:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8016872:	bf44      	itt	mi
 8016874:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8016878:	b209      	sxthmi	r1, r1
 801687a:	1945      	adds	r5, r0, r5
 801687c:	1a6d      	subs	r5, r5, r1
 801687e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8016880:	b2ad      	uxth	r5, r5
 8016882:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8016886:	fa0f fa85 	sxth.w	sl, r5
 801688a:	4551      	cmp	r1, sl
 801688c:	dd3c      	ble.n	8016908 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 801688e:	0112      	lsls	r2, r2, #4
 8016890:	79d8      	ldrb	r0, [r3, #7]
 8016892:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8016896:	4302      	orrs	r2, r0
 8016898:	4492      	add	sl, r2
 801689a:	4551      	cmp	r1, sl
 801689c:	dc30      	bgt.n	8016900 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801689e:	1b4d      	subs	r5, r1, r5
 80168a0:	b22d      	sxth	r5, r5
 80168a2:	468a      	mov	sl, r1
 80168a4:	9319      	str	r3, [sp, #100]	; 0x64
 80168a6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80168a8:	f8d8 0000 	ldr.w	r0, [r8]
 80168ac:	681a      	ldr	r2, [r3, #0]
 80168ae:	6801      	ldr	r1, [r0, #0]
 80168b0:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80168b2:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80168b4:	9313      	str	r3, [sp, #76]	; 0x4c
 80168b6:	9218      	str	r2, [sp, #96]	; 0x60
 80168b8:	6c09      	ldr	r1, [r1, #64]	; 0x40
 80168ba:	4788      	blx	r1
 80168bc:	f898 1006 	ldrb.w	r1, [r8, #6]
 80168c0:	910b      	str	r1, [sp, #44]	; 0x2c
 80168c2:	f898 100e 	ldrb.w	r1, [r8, #14]
 80168c6:	910a      	str	r1, [sp, #40]	; 0x28
 80168c8:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80168cc:	9109      	str	r1, [sp, #36]	; 0x24
 80168ce:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80168d2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80168d4:	9305      	str	r3, [sp, #20]
 80168d6:	b2ad      	uxth	r5, r5
 80168d8:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80168dc:	e9cd 7502 	strd	r7, r5, [sp, #8]
 80168e0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80168e2:	9304      	str	r3, [sp, #16]
 80168e4:	4437      	add	r7, r6
 80168e6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80168e8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80168ea:	9206      	str	r2, [sp, #24]
 80168ec:	b23f      	sxth	r7, r7
 80168ee:	f8cd a004 	str.w	sl, [sp, #4]
 80168f2:	9700      	str	r7, [sp, #0]
 80168f4:	681a      	ldr	r2, [r3, #0]
 80168f6:	9916      	ldr	r1, [sp, #88]	; 0x58
 80168f8:	685b      	ldr	r3, [r3, #4]
 80168fa:	9811      	ldr	r0, [sp, #68]	; 0x44
 80168fc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80168fe:	47a8      	blx	r5
 8016900:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016902:	3301      	adds	r3, #1
 8016904:	930e      	str	r3, [sp, #56]	; 0x38
 8016906:	e6e1      	b.n	80166cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8016908:	2500      	movs	r5, #0
 801690a:	e7cb      	b.n	80168a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 801690c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801690e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016910:	3501      	adds	r5, #1
 8016912:	429d      	cmp	r5, r3
 8016914:	f6bf af75 	bge.w	8016802 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8016918:	4659      	mov	r1, fp
 801691a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801691c:	f7f9 f8d4 	bl	800fac8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016920:	4604      	mov	r4, r0
 8016922:	b110      	cbz	r0, 801692a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8016924:	280a      	cmp	r0, #10
 8016926:	d1f2      	bne.n	801690e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8016928:	e76a      	b.n	8016800 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801692a:	2400      	movs	r4, #0
 801692c:	e769      	b.n	8016802 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801692e:	f1bb 0f00 	cmp.w	fp, #0
 8016932:	f43f af5a 	beq.w	80167ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8016936:	e775      	b.n	8016824 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08016938 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8016938:	b530      	push	{r4, r5, lr}
 801693a:	8ac4      	ldrh	r4, [r0, #22]
 801693c:	8b45      	ldrh	r5, [r0, #26]
 801693e:	8343      	strh	r3, [r0, #26]
 8016940:	442c      	add	r4, r5
 8016942:	1ae4      	subs	r4, r4, r3
 8016944:	82c4      	strh	r4, [r0, #22]
 8016946:	8b83      	ldrh	r3, [r0, #28]
 8016948:	8b04      	ldrh	r4, [r0, #24]
 801694a:	4422      	add	r2, r4
 801694c:	440c      	add	r4, r1
 801694e:	1a59      	subs	r1, r3, r1
 8016950:	83c2      	strh	r2, [r0, #30]
 8016952:	8304      	strh	r4, [r0, #24]
 8016954:	8381      	strh	r1, [r0, #28]
 8016956:	bd30      	pop	{r4, r5, pc}

08016958 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8016958:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801695c:	4604      	mov	r4, r0
 801695e:	8a47      	ldrh	r7, [r0, #18]
 8016960:	68c0      	ldr	r0, [r0, #12]
 8016962:	6803      	ldr	r3, [r0, #0]
 8016964:	b085      	sub	sp, #20
 8016966:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016968:	4798      	blx	r3
 801696a:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 801696e:	7a63      	ldrb	r3, [r4, #9]
 8016970:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8016974:	42b7      	cmp	r7, r6
 8016976:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 801697a:	bfac      	ite	ge
 801697c:	f04f 0900 	movge.w	r9, #0
 8016980:	f04f 0901 	movlt.w	r9, #1
 8016984:	2b05      	cmp	r3, #5
 8016986:	d804      	bhi.n	8016992 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8016988:	e8df f003 	tbb	[pc, r3]
 801698c:	470e0854 	.word	0x470e0854
 8016990:	4c4c      	.short	0x4c4c
 8016992:	2500      	movs	r5, #0
 8016994:	46a9      	mov	r9, r5
 8016996:	462e      	mov	r6, r5
 8016998:	462f      	mov	r7, r5
 801699a:	e00d      	b.n	80169b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 801699c:	42b7      	cmp	r7, r6
 801699e:	bfb4      	ite	lt
 80169a0:	2600      	movlt	r6, #0
 80169a2:	2601      	movge	r6, #1
 80169a4:	2500      	movs	r5, #0
 80169a6:	e7f7      	b.n	8016998 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80169a8:	42b7      	cmp	r7, r6
 80169aa:	464d      	mov	r5, r9
 80169ac:	f04f 0900 	mov.w	r9, #0
 80169b0:	bfb4      	ite	lt
 80169b2:	2600      	movlt	r6, #0
 80169b4:	2601      	movge	r6, #1
 80169b6:	464f      	mov	r7, r9
 80169b8:	f04f 0800 	mov.w	r8, #0
 80169bc:	f8a4 8016 	strh.w	r8, [r4, #22]
 80169c0:	f8a4 8018 	strh.w	r8, [r4, #24]
 80169c4:	f8cd 8004 	str.w	r8, [sp, #4]
 80169c8:	2300      	movs	r3, #0
 80169ca:	9303      	str	r3, [sp, #12]
 80169cc:	8823      	ldrh	r3, [r4, #0]
 80169ce:	2b20      	cmp	r3, #32
 80169d0:	d034      	beq.n	8016a3c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 80169d2:	f242 010b 	movw	r1, #8203	; 0x200b
 80169d6:	1a5a      	subs	r2, r3, r1
 80169d8:	f1d2 0a00 	rsbs	sl, r2, #0
 80169dc:	eb4a 0a02 	adc.w	sl, sl, r2
 80169e0:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80169e4:	4293      	cmp	r3, r2
 80169e6:	d009      	beq.n	80169fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80169e8:	428b      	cmp	r3, r1
 80169ea:	9a01      	ldr	r2, [sp, #4]
 80169ec:	bf18      	it	ne
 80169ee:	461a      	movne	r2, r3
 80169f0:	9201      	str	r2, [sp, #4]
 80169f2:	bf0c      	ite	eq
 80169f4:	f04f 0a01 	moveq.w	sl, #1
 80169f8:	f04f 0a00 	movne.w	sl, #0
 80169fc:	ab03      	add	r3, sp, #12
 80169fe:	68e2      	ldr	r2, [r4, #12]
 8016a00:	7a21      	ldrb	r1, [r4, #8]
 8016a02:	6860      	ldr	r0, [r4, #4]
 8016a04:	f002 fedc 	bl	80197c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016a08:	8020      	strh	r0, [r4, #0]
 8016a0a:	b9d8      	cbnz	r0, 8016a44 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8016a0c:	8ba2      	ldrh	r2, [r4, #28]
 8016a0e:	2300      	movs	r3, #0
 8016a10:	4611      	mov	r1, r2
 8016a12:	4620      	mov	r0, r4
 8016a14:	f7ff ff90 	bl	8016938 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8016a18:	e06e      	b.n	8016af8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8016a1a:	2500      	movs	r5, #0
 8016a1c:	46a9      	mov	r9, r5
 8016a1e:	462e      	mov	r6, r5
 8016a20:	2701      	movs	r7, #1
 8016a22:	e7c9      	b.n	80169b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8016a24:	42b7      	cmp	r7, r6
 8016a26:	f04f 0500 	mov.w	r5, #0
 8016a2a:	bfb4      	ite	lt
 8016a2c:	2700      	movlt	r7, #0
 8016a2e:	2701      	movge	r7, #1
 8016a30:	462e      	mov	r6, r5
 8016a32:	e7c1      	b.n	80169b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8016a34:	2500      	movs	r5, #0
 8016a36:	46a9      	mov	r9, r5
 8016a38:	2601      	movs	r6, #1
 8016a3a:	e7ad      	b.n	8016998 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8016a3c:	9301      	str	r3, [sp, #4]
 8016a3e:	f04f 0a01 	mov.w	sl, #1
 8016a42:	e7db      	b.n	80169fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8016a44:	8b63      	ldrh	r3, [r4, #26]
 8016a46:	280a      	cmp	r0, #10
 8016a48:	f103 0301 	add.w	r3, r3, #1
 8016a4c:	8363      	strh	r3, [r4, #26]
 8016a4e:	d0dd      	beq.n	8016a0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8016a50:	9a03      	ldr	r2, [sp, #12]
 8016a52:	bb62      	cbnz	r2, 8016aae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8016a54:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016a58:	4298      	cmp	r0, r3
 8016a5a:	d003      	beq.n	8016a64 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8016a5c:	f242 030b 	movw	r3, #8203	; 0x200b
 8016a60:	4298      	cmp	r0, r3
 8016a62:	d1b1      	bne.n	80169c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016a64:	8823      	ldrh	r3, [r4, #0]
 8016a66:	8ba1      	ldrh	r1, [r4, #28]
 8016a68:	2b20      	cmp	r3, #32
 8016a6a:	d003      	beq.n	8016a74 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8016a6c:	f242 000b 	movw	r0, #8203	; 0x200b
 8016a70:	4283      	cmp	r3, r0
 8016a72:	d131      	bne.n	8016ad8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8016a74:	f1ba 0f00 	cmp.w	sl, #0
 8016a78:	bf0a      	itet	eq
 8016a7a:	4688      	moveq	r8, r1
 8016a7c:	4650      	movne	r0, sl
 8016a7e:	2001      	moveq	r0, #1
 8016a80:	440a      	add	r2, r1
 8016a82:	8b23      	ldrh	r3, [r4, #24]
 8016a84:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8016a88:	b292      	uxth	r2, r2
 8016a8a:	83a2      	strh	r2, [r4, #28]
 8016a8c:	4413      	add	r3, r2
 8016a8e:	f1b9 0f00 	cmp.w	r9, #0
 8016a92:	d102      	bne.n	8016a9a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8016a94:	2d00      	cmp	r5, #0
 8016a96:	d042      	beq.n	8016b1e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8016a98:	b300      	cbz	r0, 8016adc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8016a9a:	8c21      	ldrh	r1, [r4, #32]
 8016a9c:	4419      	add	r1, r3
 8016a9e:	458c      	cmp	ip, r1
 8016aa0:	da37      	bge.n	8016b12 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8016aa2:	8ae1      	ldrh	r1, [r4, #22]
 8016aa4:	2900      	cmp	r1, #0
 8016aa6:	d034      	beq.n	8016b12 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8016aa8:	4563      	cmp	r3, ip
 8016aaa:	dd8d      	ble.n	80169c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016aac:	e01d      	b.n	8016aea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8016aae:	8893      	ldrh	r3, [r2, #4]
 8016ab0:	8023      	strh	r3, [r4, #0]
 8016ab2:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8016ab6:	9901      	ldr	r1, [sp, #4]
 8016ab8:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8016abc:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8016ac0:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8016ac4:	ea4b 0b00 	orr.w	fp, fp, r0
 8016ac8:	68e0      	ldr	r0, [r4, #12]
 8016aca:	6803      	ldr	r3, [r0, #0]
 8016acc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016ace:	4798      	blx	r3
 8016ad0:	eb0b 0200 	add.w	r2, fp, r0
 8016ad4:	b292      	uxth	r2, r2
 8016ad6:	e7c5      	b.n	8016a64 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8016ad8:	2000      	movs	r0, #0
 8016ada:	e7d1      	b.n	8016a80 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8016adc:	4563      	cmp	r3, ip
 8016ade:	f77f af73 	ble.w	80169c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016ae2:	8ae3      	ldrh	r3, [r4, #22]
 8016ae4:	2b00      	cmp	r3, #0
 8016ae6:	f43f af6f 	beq.w	80169c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016aea:	2301      	movs	r3, #1
 8016aec:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8016af0:	8c22      	ldrh	r2, [r4, #32]
 8016af2:	8be3      	ldrh	r3, [r4, #30]
 8016af4:	4413      	add	r3, r2
 8016af6:	83e3      	strh	r3, [r4, #30]
 8016af8:	68e0      	ldr	r0, [r4, #12]
 8016afa:	6803      	ldr	r3, [r0, #0]
 8016afc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016afe:	4798      	blx	r3
 8016b00:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8016b04:	4418      	add	r0, r3
 8016b06:	8a63      	ldrh	r3, [r4, #18]
 8016b08:	1a18      	subs	r0, r3, r0
 8016b0a:	8260      	strh	r0, [r4, #18]
 8016b0c:	b005      	add	sp, #20
 8016b0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b12:	2300      	movs	r3, #0
 8016b14:	4611      	mov	r1, r2
 8016b16:	4620      	mov	r0, r4
 8016b18:	f7ff ff0e 	bl	8016938 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8016b1c:	e754      	b.n	80169c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016b1e:	4563      	cmp	r3, ip
 8016b20:	dd14      	ble.n	8016b4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8016b22:	b117      	cbz	r7, 8016b2a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8016b24:	2301      	movs	r3, #1
 8016b26:	460a      	mov	r2, r1
 8016b28:	e772      	b.n	8016a10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8016b2a:	2e00      	cmp	r6, #0
 8016b2c:	f43f af4c 	beq.w	80169c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016b30:	2800      	cmp	r0, #0
 8016b32:	f47f af49 	bne.w	80169c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016b36:	f1ba 0f00 	cmp.w	sl, #0
 8016b3a:	d002      	beq.n	8016b42 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8016b3c:	2301      	movs	r3, #1
 8016b3e:	4642      	mov	r2, r8
 8016b40:	e767      	b.n	8016a12 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8016b42:	8ae3      	ldrh	r3, [r4, #22]
 8016b44:	2b00      	cmp	r3, #0
 8016b46:	f43f af3f 	beq.w	80169c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016b4a:	e7d5      	b.n	8016af8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8016b4c:	2800      	cmp	r0, #0
 8016b4e:	f47f af3b 	bne.w	80169c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016b52:	f1ba 0f00 	cmp.w	sl, #0
 8016b56:	f43f af37 	beq.w	80169c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016b5a:	2301      	movs	r3, #1
 8016b5c:	4642      	mov	r2, r8
 8016b5e:	e7da      	b.n	8016b16 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08016b60 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8016b60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016b62:	4605      	mov	r5, r0
 8016b64:	b08f      	sub	sp, #60	; 0x3c
 8016b66:	4617      	mov	r7, r2
 8016b68:	461c      	mov	r4, r3
 8016b6a:	460e      	mov	r6, r1
 8016b6c:	b1d1      	cbz	r1, 8016ba4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8016b6e:	681b      	ldr	r3, [r3, #0]
 8016b70:	4620      	mov	r0, r4
 8016b72:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016b74:	4798      	blx	r3
 8016b76:	4240      	negs	r0, r0
 8016b78:	b200      	sxth	r0, r0
 8016b7a:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8016b7e:	9603      	str	r6, [sp, #12]
 8016b80:	9700      	str	r7, [sp, #0]
 8016b82:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8016b86:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8016b8a:	4629      	mov	r1, r5
 8016b8c:	a805      	add	r0, sp, #20
 8016b8e:	f7ff fcbf 	bl	8016510 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8016b92:	2401      	movs	r4, #1
 8016b94:	a805      	add	r0, sp, #20
 8016b96:	f7ff fedf 	bl	8016958 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8016b9a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8016b9e:	b163      	cbz	r3, 8016bba <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8016ba0:	3401      	adds	r4, #1
 8016ba2:	e7f7      	b.n	8016b94 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8016ba4:	f002 feda 	bl	801995c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016ba8:	2401      	movs	r4, #1
 8016baa:	280a      	cmp	r0, #10
 8016bac:	4628      	mov	r0, r5
 8016bae:	bf08      	it	eq
 8016bb0:	3401      	addeq	r4, #1
 8016bb2:	f002 fed3 	bl	801995c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016bb6:	2800      	cmp	r0, #0
 8016bb8:	d1f7      	bne.n	8016baa <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8016bba:	b2a0      	uxth	r0, r4
 8016bbc:	b00f      	add	sp, #60	; 0x3c
 8016bbe:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016bc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8016bc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016bc4:	b0e3      	sub	sp, #396	; 0x18c
 8016bc6:	461c      	mov	r4, r3
 8016bc8:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8016bca:	4683      	mov	fp, r0
 8016bcc:	4688      	mov	r8, r1
 8016bce:	2b00      	cmp	r3, #0
 8016bd0:	f000 8112 	beq.w	8016df8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016bd4:	6823      	ldr	r3, [r4, #0]
 8016bd6:	2b00      	cmp	r3, #0
 8016bd8:	f000 810e 	beq.w	8016df8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016bdc:	7ba3      	ldrb	r3, [r4, #14]
 8016bde:	2b00      	cmp	r3, #0
 8016be0:	f000 810a 	beq.w	8016df8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016be4:	6810      	ldr	r0, [r2, #0]
 8016be6:	6851      	ldr	r1, [r2, #4]
 8016be8:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8016bec:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8016bf0:	ad0a      	add	r5, sp, #40	; 0x28
 8016bf2:	462b      	mov	r3, r5
 8016bf4:	c303      	stmia	r3!, {r0, r1}
 8016bf6:	2100      	movs	r1, #0
 8016bf8:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8016bfc:	910c      	str	r1, [sp, #48]	; 0x30
 8016bfe:	79a2      	ldrb	r2, [r4, #6]
 8016c00:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8016c04:	a90c      	add	r1, sp, #48	; 0x30
 8016c06:	4628      	mov	r0, r5
 8016c08:	f7ff fd01 	bl	801660e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8016c0c:	a90c      	add	r1, sp, #48	; 0x30
 8016c0e:	4608      	mov	r0, r1
 8016c10:	79a2      	ldrb	r2, [r4, #6]
 8016c12:	f7ff fcfc 	bl	801660e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8016c16:	a817      	add	r0, sp, #92	; 0x5c
 8016c18:	f002 fa75 	bl	8019106 <_ZN8touchgfx12TextProviderC1Ev>
 8016c1c:	6820      	ldr	r0, [r4, #0]
 8016c1e:	6803      	ldr	r3, [r0, #0]
 8016c20:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016c22:	4798      	blx	r3
 8016c24:	4606      	mov	r6, r0
 8016c26:	6820      	ldr	r0, [r4, #0]
 8016c28:	6803      	ldr	r3, [r0, #0]
 8016c2a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016c2c:	4798      	blx	r3
 8016c2e:	4633      	mov	r3, r6
 8016c30:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8016c32:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8016c34:	9000      	str	r0, [sp, #0]
 8016c36:	a817      	add	r0, sp, #92	; 0x5c
 8016c38:	f002 fac0 	bl	80191bc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016c3c:	6820      	ldr	r0, [r4, #0]
 8016c3e:	f894 a004 	ldrb.w	sl, [r4, #4]
 8016c42:	6803      	ldr	r3, [r0, #0]
 8016c44:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016c46:	4798      	blx	r3
 8016c48:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8016c4c:	6823      	ldr	r3, [r4, #0]
 8016c4e:	4607      	mov	r7, r0
 8016c50:	4406      	add	r6, r0
 8016c52:	a830      	add	r0, sp, #192	; 0xc0
 8016c54:	f893 9009 	ldrb.w	r9, [r3, #9]
 8016c58:	f002 fa55 	bl	8019106 <_ZN8touchgfx12TextProviderC1Ev>
 8016c5c:	7c23      	ldrb	r3, [r4, #16]
 8016c5e:	b17b      	cbz	r3, 8016c80 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8016c60:	6820      	ldr	r0, [r4, #0]
 8016c62:	6803      	ldr	r3, [r0, #0]
 8016c64:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016c66:	4798      	blx	r3
 8016c68:	9009      	str	r0, [sp, #36]	; 0x24
 8016c6a:	6820      	ldr	r0, [r4, #0]
 8016c6c:	6802      	ldr	r2, [r0, #0]
 8016c6e:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8016c70:	4790      	blx	r2
 8016c72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016c74:	9000      	str	r0, [sp, #0]
 8016c76:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8016c78:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8016c7a:	a830      	add	r0, sp, #192	; 0xc0
 8016c7c:	f002 fa9e 	bl	80191bc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016c80:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8016c84:	7be2      	ldrb	r2, [r4, #15]
 8016c86:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8016c8a:	1a8a      	subs	r2, r1, r2
 8016c8c:	7c21      	ldrb	r1, [r4, #16]
 8016c8e:	9103      	str	r1, [sp, #12]
 8016c90:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8016c94:	9102      	str	r1, [sp, #8]
 8016c96:	6821      	ldr	r1, [r4, #0]
 8016c98:	9101      	str	r1, [sp, #4]
 8016c9a:	7961      	ldrb	r1, [r4, #5]
 8016c9c:	9100      	str	r1, [sp, #0]
 8016c9e:	b292      	uxth	r2, r2
 8016ca0:	a930      	add	r1, sp, #192	; 0xc0
 8016ca2:	a80e      	add	r0, sp, #56	; 0x38
 8016ca4:	f7ff fc34 	bl	8016510 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8016ca8:	2e00      	cmp	r6, #0
 8016caa:	dc5b      	bgt.n	8016d64 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8016cac:	af17      	add	r7, sp, #92	; 0x5c
 8016cae:	f04f 0900 	mov.w	r9, #0
 8016cb2:	7c23      	ldrb	r3, [r4, #16]
 8016cb4:	2b00      	cmp	r3, #0
 8016cb6:	f000 80b1 	beq.w	8016e1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8016cba:	a80e      	add	r0, sp, #56	; 0x38
 8016cbc:	f7ff fe4c 	bl	8016958 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8016cc0:	f1ba 0f00 	cmp.w	sl, #0
 8016cc4:	f000 80a5 	beq.w	8016e12 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8016cc8:	7c23      	ldrb	r3, [r4, #16]
 8016cca:	9309      	str	r3, [sp, #36]	; 0x24
 8016ccc:	2264      	movs	r2, #100	; 0x64
 8016cce:	4639      	mov	r1, r7
 8016cd0:	a849      	add	r0, sp, #292	; 0x124
 8016cd2:	f012 f83d 	bl	8028d50 <memcpy>
 8016cd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016cd8:	2b00      	cmp	r3, #0
 8016cda:	f000 80a7 	beq.w	8016e2c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8016cde:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8016ce2:	7922      	ldrb	r2, [r4, #4]
 8016ce4:	2a01      	cmp	r2, #1
 8016ce6:	f040 808a 	bne.w	8016dfe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8016cea:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8016cee:	1ac0      	subs	r0, r0, r3
 8016cf0:	2302      	movs	r3, #2
 8016cf2:	fb90 f0f3 	sdiv	r0, r0, r3
 8016cf6:	b200      	sxth	r0, r0
 8016cf8:	7c23      	ldrb	r3, [r4, #16]
 8016cfa:	2b00      	cmp	r3, #0
 8016cfc:	f000 808b 	beq.w	8016e16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8016d00:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8016d04:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8016d08:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8016d0c:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8016d10:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8016d14:	4410      	add	r0, r2
 8016d16:	b200      	sxth	r0, r0
 8016d18:	9000      	str	r0, [sp, #0]
 8016d1a:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8016d1e:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8016d22:	4642      	mov	r2, r8
 8016d24:	2100      	movs	r1, #0
 8016d26:	4658      	mov	r0, fp
 8016d28:	f7ff fca2 	bl	8016670 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8016d2c:	2800      	cmp	r0, #0
 8016d2e:	d163      	bne.n	8016df8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016d30:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8016d34:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8016d38:	b2b2      	uxth	r2, r6
 8016d3a:	4413      	add	r3, r2
 8016d3c:	1a8a      	subs	r2, r1, r2
 8016d3e:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8016d42:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8016d46:	b21b      	sxth	r3, r3
 8016d48:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8016d4c:	2a00      	cmp	r2, #0
 8016d4e:	d153      	bne.n	8016df8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016d50:	6822      	ldr	r2, [r4, #0]
 8016d52:	8869      	ldrh	r1, [r5, #2]
 8016d54:	7a12      	ldrb	r2, [r2, #8]
 8016d56:	1a9b      	subs	r3, r3, r2
 8016d58:	88ea      	ldrh	r2, [r5, #6]
 8016d5a:	440a      	add	r2, r1
 8016d5c:	b212      	sxth	r2, r2
 8016d5e:	4293      	cmp	r3, r2
 8016d60:	dda7      	ble.n	8016cb2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8016d62:	e049      	b.n	8016df8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016d64:	7c23      	ldrb	r3, [r4, #16]
 8016d66:	444f      	add	r7, r9
 8016d68:	b1c3      	cbz	r3, 8016d9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8016d6a:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8016d6e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8016d72:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8016d76:	443b      	add	r3, r7
 8016d78:	4293      	cmp	r3, r2
 8016d7a:	da97      	bge.n	8016cac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8016d7c:	a80e      	add	r0, sp, #56	; 0x38
 8016d7e:	f7ff fdeb 	bl	8016958 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8016d82:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8016d86:	3b01      	subs	r3, #1
 8016d88:	b29b      	uxth	r3, r3
 8016d8a:	454b      	cmp	r3, r9
 8016d8c:	9309      	str	r3, [sp, #36]	; 0x24
 8016d8e:	d021      	beq.n	8016dd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8016d90:	7961      	ldrb	r1, [r4, #5]
 8016d92:	a817      	add	r0, sp, #92	; 0x5c
 8016d94:	f7f8 fe98 	bl	800fac8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016d98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016d9a:	e7f4      	b.n	8016d86 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8016d9c:	fa1f f986 	uxth.w	r9, r6
 8016da0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8016da4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8016da8:	443b      	add	r3, r7
 8016daa:	4293      	cmp	r3, r2
 8016dac:	f6bf af7e 	bge.w	8016cac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8016db0:	a817      	add	r0, sp, #92	; 0x5c
 8016db2:	f002 fdd3 	bl	801995c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016db6:	b1f8      	cbz	r0, 8016df8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016db8:	280a      	cmp	r0, #10
 8016dba:	d1f1      	bne.n	8016da0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8016dbc:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8016dc0:	444b      	add	r3, r9
 8016dc2:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8016dc6:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8016dca:	eba3 0309 	sub.w	r3, r3, r9
 8016dce:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8016dd2:	e7e5      	b.n	8016da0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8016dd4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8016dd8:	b2b3      	uxth	r3, r6
 8016dda:	441a      	add	r2, r3
 8016ddc:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8016de0:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8016de4:	1ad3      	subs	r3, r2, r3
 8016de6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8016dea:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8016dee:	b11b      	cbz	r3, 8016df8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016df0:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8016df4:	2b00      	cmp	r3, #0
 8016df6:	d0ba      	beq.n	8016d6e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8016df8:	b063      	add	sp, #396	; 0x18c
 8016dfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016dfe:	2a02      	cmp	r2, #2
 8016e00:	d105      	bne.n	8016e0e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8016e02:	7be2      	ldrb	r2, [r4, #15]
 8016e04:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8016e08:	1a80      	subs	r0, r0, r2
 8016e0a:	1ac0      	subs	r0, r0, r3
 8016e0c:	e773      	b.n	8016cf6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8016e0e:	2000      	movs	r0, #0
 8016e10:	e772      	b.n	8016cf8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8016e12:	7be0      	ldrb	r0, [r4, #15]
 8016e14:	e770      	b.n	8016cf8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8016e16:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8016e1a:	e773      	b.n	8016d04 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8016e1c:	f1ba 0f00 	cmp.w	sl, #0
 8016e20:	d0f7      	beq.n	8016e12 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8016e22:	2264      	movs	r2, #100	; 0x64
 8016e24:	4639      	mov	r1, r7
 8016e26:	a849      	add	r0, sp, #292	; 0x124
 8016e28:	f011 ff92 	bl	8028d50 <memcpy>
 8016e2c:	2300      	movs	r3, #0
 8016e2e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8016e32:	6821      	ldr	r1, [r4, #0]
 8016e34:	a849      	add	r0, sp, #292	; 0x124
 8016e36:	f7ff fbae 	bl	8016596 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8016e3a:	b203      	sxth	r3, r0
 8016e3c:	e751      	b.n	8016ce2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08016e3e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8016e3e:	2b03      	cmp	r3, #3
 8016e40:	d818      	bhi.n	8016e74 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8016e42:	e8df f003 	tbb	[pc, r3]
 8016e46:	0602      	.short	0x0602
 8016e48:	130d      	.short	0x130d
 8016e4a:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016e4e:	1850      	adds	r0, r2, r1
 8016e50:	4770      	bx	lr
 8016e52:	8803      	ldrh	r3, [r0, #0]
 8016e54:	8880      	ldrh	r0, [r0, #4]
 8016e56:	4418      	add	r0, r3
 8016e58:	b200      	sxth	r0, r0
 8016e5a:	1a80      	subs	r0, r0, r2
 8016e5c:	3801      	subs	r0, #1
 8016e5e:	4770      	bx	lr
 8016e60:	8803      	ldrh	r3, [r0, #0]
 8016e62:	8880      	ldrh	r0, [r0, #4]
 8016e64:	4418      	add	r0, r3
 8016e66:	b200      	sxth	r0, r0
 8016e68:	1a40      	subs	r0, r0, r1
 8016e6a:	e7f7      	b.n	8016e5c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8016e6c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8016e70:	4410      	add	r0, r2
 8016e72:	4770      	bx	lr
 8016e74:	2000      	movs	r0, #0
 8016e76:	4770      	bx	lr

08016e78 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8016e78:	2b03      	cmp	r3, #3
 8016e7a:	d817      	bhi.n	8016eac <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8016e7c:	e8df f003 	tbb	[pc, r3]
 8016e80:	10090602 	.word	0x10090602
 8016e84:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8016e88:	1850      	adds	r0, r2, r1
 8016e8a:	4770      	bx	lr
 8016e8c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8016e90:	e7fa      	b.n	8016e88 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8016e92:	8843      	ldrh	r3, [r0, #2]
 8016e94:	88c0      	ldrh	r0, [r0, #6]
 8016e96:	4418      	add	r0, r3
 8016e98:	b200      	sxth	r0, r0
 8016e9a:	1a80      	subs	r0, r0, r2
 8016e9c:	3801      	subs	r0, #1
 8016e9e:	4770      	bx	lr
 8016ea0:	8843      	ldrh	r3, [r0, #2]
 8016ea2:	88c0      	ldrh	r0, [r0, #6]
 8016ea4:	4418      	add	r0, r3
 8016ea6:	b200      	sxth	r0, r0
 8016ea8:	1a40      	subs	r0, r0, r1
 8016eaa:	e7f7      	b.n	8016e9c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8016eac:	2000      	movs	r0, #0
 8016eae:	4770      	bx	lr

08016eb0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8016eb0:	4b01      	ldr	r3, [pc, #4]	; (8016eb8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8016eb2:	2200      	movs	r2, #0
 8016eb4:	601a      	str	r2, [r3, #0]
 8016eb6:	4770      	bx	lr
 8016eb8:	2000e1d0 	.word	0x2000e1d0

08016ebc <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8016ebc:	4603      	mov	r3, r0
 8016ebe:	b1c8      	cbz	r0, 8016ef4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8016ec0:	0c02      	lsrs	r2, r0, #16
 8016ec2:	0412      	lsls	r2, r2, #16
 8016ec4:	b9a2      	cbnz	r2, 8016ef0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8016ec6:	0403      	lsls	r3, r0, #16
 8016ec8:	2010      	movs	r0, #16
 8016eca:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8016ece:	bf04      	itt	eq
 8016ed0:	021b      	lsleq	r3, r3, #8
 8016ed2:	3008      	addeq	r0, #8
 8016ed4:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8016ed8:	bf04      	itt	eq
 8016eda:	011b      	lsleq	r3, r3, #4
 8016edc:	3004      	addeq	r0, #4
 8016ede:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8016ee2:	bf04      	itt	eq
 8016ee4:	009b      	lsleq	r3, r3, #2
 8016ee6:	3002      	addeq	r0, #2
 8016ee8:	2b00      	cmp	r3, #0
 8016eea:	db04      	blt.n	8016ef6 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8016eec:	3001      	adds	r0, #1
 8016eee:	4770      	bx	lr
 8016ef0:	2000      	movs	r0, #0
 8016ef2:	e7ea      	b.n	8016eca <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8016ef4:	2020      	movs	r0, #32
 8016ef6:	4770      	bx	lr

08016ef8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8016ef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016efc:	b087      	sub	sp, #28
 8016efe:	460d      	mov	r5, r1
 8016f00:	4616      	mov	r6, r2
 8016f02:	4698      	mov	r8, r3
 8016f04:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8016f08:	4601      	mov	r1, r0
 8016f0a:	b120      	cbz	r0, 8016f16 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016f0c:	b11a      	cbz	r2, 8016f16 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016f0e:	2d1f      	cmp	r5, #31
 8016f10:	d801      	bhi.n	8016f16 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016f12:	2b1f      	cmp	r3, #31
 8016f14:	d904      	bls.n	8016f20 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8016f16:	2000      	movs	r0, #0
 8016f18:	6038      	str	r0, [r7, #0]
 8016f1a:	b007      	add	sp, #28
 8016f1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f20:	b97d      	cbnz	r5, 8016f42 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8016f22:	b143      	cbz	r3, 8016f36 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8016f24:	4602      	mov	r2, r0
 8016f26:	e9cd 4700 	strd	r4, r7, [sp]
 8016f2a:	462b      	mov	r3, r5
 8016f2c:	4641      	mov	r1, r8
 8016f2e:	4630      	mov	r0, r6
 8016f30:	f7ff ffe2 	bl	8016ef8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016f34:	e7f1      	b.n	8016f1a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8016f36:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8016f3a:	603b      	str	r3, [r7, #0]
 8016f3c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8016f40:	e7eb      	b.n	8016f1a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8016f42:	fa32 fa05 	lsrs.w	sl, r2, r5
 8016f46:	d106      	bne.n	8016f56 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8016f48:	4346      	muls	r6, r0
 8016f4a:	fbb6 f0f4 	udiv	r0, r6, r4
 8016f4e:	fb04 6610 	mls	r6, r4, r0, r6
 8016f52:	603e      	str	r6, [r7, #0]
 8016f54:	e7e1      	b.n	8016f1a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8016f56:	2201      	movs	r2, #1
 8016f58:	40aa      	lsls	r2, r5
 8016f5a:	3a01      	subs	r2, #1
 8016f5c:	4016      	ands	r6, r2
 8016f5e:	fa00 fb05 	lsl.w	fp, r0, r5
 8016f62:	4630      	mov	r0, r6
 8016f64:	fbbb f9f4 	udiv	r9, fp, r4
 8016f68:	fb0a f309 	mul.w	r3, sl, r9
 8016f6c:	9303      	str	r3, [sp, #12]
 8016f6e:	f7ff ffa5 	bl	8016ebc <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016f72:	462b      	mov	r3, r5
 8016f74:	460a      	mov	r2, r1
 8016f76:	e9cd 4700 	strd	r4, r7, [sp]
 8016f7a:	4601      	mov	r1, r0
 8016f7c:	4630      	mov	r0, r6
 8016f7e:	f7ff ffbb 	bl	8016ef8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016f82:	fb04 b919 	mls	r9, r4, r9, fp
 8016f86:	4606      	mov	r6, r0
 8016f88:	4648      	mov	r0, r9
 8016f8a:	eb05 0108 	add.w	r1, r5, r8
 8016f8e:	f7ff ff95 	bl	8016ebc <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016f92:	ab05      	add	r3, sp, #20
 8016f94:	e9cd 4300 	strd	r4, r3, [sp]
 8016f98:	464a      	mov	r2, r9
 8016f9a:	4603      	mov	r3, r0
 8016f9c:	4650      	mov	r0, sl
 8016f9e:	f7ff ffab 	bl	8016ef8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016fa2:	6839      	ldr	r1, [r7, #0]
 8016fa4:	9a05      	ldr	r2, [sp, #20]
 8016fa6:	9b03      	ldr	r3, [sp, #12]
 8016fa8:	4411      	add	r1, r2
 8016faa:	fbb1 f2f4 	udiv	r2, r1, r4
 8016fae:	18d3      	adds	r3, r2, r3
 8016fb0:	441e      	add	r6, r3
 8016fb2:	fb04 1412 	mls	r4, r4, r2, r1
 8016fb6:	4430      	add	r0, r6
 8016fb8:	603c      	str	r4, [r7, #0]
 8016fba:	e7ae      	b.n	8016f1a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08016fbc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8016fbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016fc0:	b085      	sub	sp, #20
 8016fc2:	f1b0 0900 	subs.w	r9, r0, #0
 8016fc6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016fc8:	461d      	mov	r5, r3
 8016fca:	bfbf      	itttt	lt
 8016fcc:	6823      	ldrlt	r3, [r4, #0]
 8016fce:	425b      	neglt	r3, r3
 8016fd0:	f1c9 0900 	rsblt	r9, r9, #0
 8016fd4:	6023      	strlt	r3, [r4, #0]
 8016fd6:	bfb4      	ite	lt
 8016fd8:	f04f 36ff 	movlt.w	r6, #4294967295	; 0xffffffff
 8016fdc:	2601      	movge	r6, #1
 8016fde:	2a00      	cmp	r2, #0
 8016fe0:	4617      	mov	r7, r2
 8016fe2:	da04      	bge.n	8016fee <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8016fe4:	6823      	ldr	r3, [r4, #0]
 8016fe6:	425b      	negs	r3, r3
 8016fe8:	4257      	negs	r7, r2
 8016fea:	4276      	negs	r6, r6
 8016fec:	6023      	str	r3, [r4, #0]
 8016fee:	2d00      	cmp	r5, #0
 8016ff0:	4638      	mov	r0, r7
 8016ff2:	bfba      	itte	lt
 8016ff4:	426d      	neglt	r5, r5
 8016ff6:	f04f 38ff 	movlt.w	r8, #4294967295	; 0xffffffff
 8016ffa:	f04f 0801 	movge.w	r8, #1
 8016ffe:	f7ff ff5d 	bl	8016ebc <_ZN8touchgfx16TouchCalibration4clzuEm>
 8017002:	ab03      	add	r3, sp, #12
 8017004:	e9cd 5300 	strd	r5, r3, [sp]
 8017008:	463a      	mov	r2, r7
 801700a:	4603      	mov	r3, r0
 801700c:	4648      	mov	r0, r9
 801700e:	f7ff ff73 	bl	8016ef8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8017012:	6823      	ldr	r3, [r4, #0]
 8017014:	9a03      	ldr	r2, [sp, #12]
 8017016:	4546      	cmp	r6, r8
 8017018:	441a      	add	r2, r3
 801701a:	fb92 f3f5 	sdiv	r3, r2, r5
 801701e:	4418      	add	r0, r3
 8017020:	bf18      	it	ne
 8017022:	4240      	negne	r0, r0
 8017024:	fb05 2313 	mls	r3, r5, r3, r2
 8017028:	1c72      	adds	r2, r6, #1
 801702a:	6023      	str	r3, [r4, #0]
 801702c:	d105      	bne.n	801703a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 801702e:	2b00      	cmp	r3, #0
 8017030:	f1c3 0200 	rsb	r2, r3, #0
 8017034:	db0b      	blt.n	801704e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8017036:	6022      	str	r2, [r4, #0]
 8017038:	e006      	b.n	8017048 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801703a:	2e01      	cmp	r6, #1
 801703c:	d104      	bne.n	8017048 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801703e:	2b00      	cmp	r3, #0
 8017040:	da02      	bge.n	8017048 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8017042:	442b      	add	r3, r5
 8017044:	3801      	subs	r0, #1
 8017046:	6023      	str	r3, [r4, #0]
 8017048:	b005      	add	sp, #20
 801704a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801704e:	3801      	subs	r0, #1
 8017050:	1b52      	subs	r2, r2, r5
 8017052:	e7f0      	b.n	8017036 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08017054 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8017054:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8017058:	4c1c      	ldr	r4, [pc, #112]	; (80170cc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801705a:	6807      	ldr	r7, [r0, #0]
 801705c:	69a3      	ldr	r3, [r4, #24]
 801705e:	4605      	mov	r5, r0
 8017060:	b92b      	cbnz	r3, 801706e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8017062:	6840      	ldr	r0, [r0, #4]
 8017064:	e9c5 7000 	strd	r7, r0, [r5]
 8017068:	b004      	add	sp, #16
 801706a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801706e:	68a2      	ldr	r2, [r4, #8]
 8017070:	6820      	ldr	r0, [r4, #0]
 8017072:	ae04      	add	r6, sp, #16
 8017074:	f04f 0802 	mov.w	r8, #2
 8017078:	fb93 f1f8 	sdiv	r1, r3, r8
 801707c:	440a      	add	r2, r1
 801707e:	f846 2d04 	str.w	r2, [r6, #-4]!
 8017082:	69e1      	ldr	r1, [r4, #28]
 8017084:	9600      	str	r6, [sp, #0]
 8017086:	463a      	mov	r2, r7
 8017088:	f7ff ff98 	bl	8016fbc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801708c:	69a3      	ldr	r3, [r4, #24]
 801708e:	686a      	ldr	r2, [r5, #4]
 8017090:	6a21      	ldr	r1, [r4, #32]
 8017092:	9600      	str	r6, [sp, #0]
 8017094:	4607      	mov	r7, r0
 8017096:	6860      	ldr	r0, [r4, #4]
 8017098:	f7ff ff90 	bl	8016fbc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801709c:	6962      	ldr	r2, [r4, #20]
 801709e:	69a3      	ldr	r3, [r4, #24]
 80170a0:	fb93 f8f8 	sdiv	r8, r3, r8
 80170a4:	4442      	add	r2, r8
 80170a6:	9203      	str	r2, [sp, #12]
 80170a8:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80170aa:	682a      	ldr	r2, [r5, #0]
 80170ac:	9600      	str	r6, [sp, #0]
 80170ae:	4407      	add	r7, r0
 80170b0:	68e0      	ldr	r0, [r4, #12]
 80170b2:	f7ff ff83 	bl	8016fbc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80170b6:	9600      	str	r6, [sp, #0]
 80170b8:	4680      	mov	r8, r0
 80170ba:	69a3      	ldr	r3, [r4, #24]
 80170bc:	686a      	ldr	r2, [r5, #4]
 80170be:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80170c0:	6920      	ldr	r0, [r4, #16]
 80170c2:	f7ff ff7b 	bl	8016fbc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80170c6:	4440      	add	r0, r8
 80170c8:	e7cc      	b.n	8017064 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80170ca:	bf00      	nop
 80170cc:	2000e1d4 	.word	0x2000e1d4

080170d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80170d0:	4b07      	ldr	r3, [pc, #28]	; (80170f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80170d2:	781b      	ldrb	r3, [r3, #0]
 80170d4:	2b01      	cmp	r3, #1
 80170d6:	d109      	bne.n	80170ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80170d8:	f9b1 3000 	ldrsh.w	r3, [r1]
 80170dc:	f9b0 2000 	ldrsh.w	r2, [r0]
 80170e0:	8003      	strh	r3, [r0, #0]
 80170e2:	4b04      	ldr	r3, [pc, #16]	; (80170f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80170e4:	881b      	ldrh	r3, [r3, #0]
 80170e6:	3b01      	subs	r3, #1
 80170e8:	1a9b      	subs	r3, r3, r2
 80170ea:	800b      	strh	r3, [r1, #0]
 80170ec:	4770      	bx	lr
 80170ee:	bf00      	nop
 80170f0:	2000e1b8 	.word	0x2000e1b8
 80170f4:	2000e1b4 	.word	0x2000e1b4

080170f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80170f8:	b510      	push	{r4, lr}
 80170fa:	4b07      	ldr	r3, [pc, #28]	; (8017118 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80170fc:	781b      	ldrb	r3, [r3, #0]
 80170fe:	2b01      	cmp	r3, #1
 8017100:	d108      	bne.n	8017114 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8017102:	4b06      	ldr	r3, [pc, #24]	; (801711c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8017104:	880c      	ldrh	r4, [r1, #0]
 8017106:	881b      	ldrh	r3, [r3, #0]
 8017108:	f9b0 2000 	ldrsh.w	r2, [r0]
 801710c:	3b01      	subs	r3, #1
 801710e:	1b1b      	subs	r3, r3, r4
 8017110:	8003      	strh	r3, [r0, #0]
 8017112:	800a      	strh	r2, [r1, #0]
 8017114:	bd10      	pop	{r4, pc}
 8017116:	bf00      	nop
 8017118:	2000e1b8 	.word	0x2000e1b8
 801711c:	2000e1b4 	.word	0x2000e1b4

08017120 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8017120:	b510      	push	{r4, lr}
 8017122:	4b0a      	ldr	r3, [pc, #40]	; (801714c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8017124:	781b      	ldrb	r3, [r3, #0]
 8017126:	2b01      	cmp	r3, #1
 8017128:	d10e      	bne.n	8017148 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801712a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801712e:	8843      	ldrh	r3, [r0, #2]
 8017130:	f9b0 4000 	ldrsh.w	r4, [r0]
 8017134:	8044      	strh	r4, [r0, #2]
 8017136:	18ca      	adds	r2, r1, r3
 8017138:	4b05      	ldr	r3, [pc, #20]	; (8017150 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801713a:	881b      	ldrh	r3, [r3, #0]
 801713c:	1a9b      	subs	r3, r3, r2
 801713e:	8003      	strh	r3, [r0, #0]
 8017140:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8017144:	80c3      	strh	r3, [r0, #6]
 8017146:	8081      	strh	r1, [r0, #4]
 8017148:	bd10      	pop	{r4, pc}
 801714a:	bf00      	nop
 801714c:	2000e1b8 	.word	0x2000e1b8
 8017150:	2000e1b4 	.word	0x2000e1b4

08017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8017154:	4b08      	ldr	r3, [pc, #32]	; (8017178 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8017156:	781b      	ldrb	r3, [r3, #0]
 8017158:	2b01      	cmp	r3, #1
 801715a:	d10c      	bne.n	8017176 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 801715c:	8803      	ldrh	r3, [r0, #0]
 801715e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8017162:	8842      	ldrh	r2, [r0, #2]
 8017164:	8002      	strh	r2, [r0, #0]
 8017166:	185a      	adds	r2, r3, r1
 8017168:	4b04      	ldr	r3, [pc, #16]	; (801717c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801716a:	881b      	ldrh	r3, [r3, #0]
 801716c:	1a9b      	subs	r3, r3, r2
 801716e:	8043      	strh	r3, [r0, #2]
 8017170:	88c3      	ldrh	r3, [r0, #6]
 8017172:	8083      	strh	r3, [r0, #4]
 8017174:	80c1      	strh	r1, [r0, #6]
 8017176:	4770      	bx	lr
 8017178:	2000e1b8 	.word	0x2000e1b8
 801717c:	2000e1b4 	.word	0x2000e1b4

08017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8017180:	b510      	push	{r4, lr}
 8017182:	4b07      	ldr	r3, [pc, #28]	; (80171a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8017184:	781b      	ldrb	r3, [r3, #0]
 8017186:	2b01      	cmp	r3, #1
 8017188:	d108      	bne.n	801719c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801718a:	f9b1 3000 	ldrsh.w	r3, [r1]
 801718e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8017192:	8003      	strh	r3, [r0, #0]
 8017194:	8893      	ldrh	r3, [r2, #4]
 8017196:	3b01      	subs	r3, #1
 8017198:	1b1b      	subs	r3, r3, r4
 801719a:	800b      	strh	r3, [r1, #0]
 801719c:	bd10      	pop	{r4, pc}
 801719e:	bf00      	nop
 80171a0:	2000e1b8 	.word	0x2000e1b8

080171a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 80171a4:	4b0b      	ldr	r3, [pc, #44]	; (80171d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 80171a6:	781b      	ldrb	r3, [r3, #0]
 80171a8:	2b01      	cmp	r3, #1
 80171aa:	d111      	bne.n	80171d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 80171ac:	680b      	ldr	r3, [r1, #0]
 80171ae:	ed90 7a00 	vldr	s14, [r0]
 80171b2:	6003      	str	r3, [r0, #0]
 80171b4:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80171b8:	eddf 6a07 	vldr	s13, [pc, #28]	; 80171d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 80171bc:	ee07 3a90 	vmov	s15, r3
 80171c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80171c4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80171c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80171cc:	edc1 7a00 	vstr	s15, [r1]
 80171d0:	4770      	bx	lr
 80171d2:	bf00      	nop
 80171d4:	2000e1b8 	.word	0x2000e1b8
 80171d8:	38d1b717 	.word	0x38d1b717

080171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80171dc:	b510      	push	{r4, lr}
 80171de:	4b0a      	ldr	r3, [pc, #40]	; (8017208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80171e0:	781b      	ldrb	r3, [r3, #0]
 80171e2:	2b01      	cmp	r3, #1
 80171e4:	460a      	mov	r2, r1
 80171e6:	d10d      	bne.n	8017204 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80171e8:	8881      	ldrh	r1, [r0, #4]
 80171ea:	8803      	ldrh	r3, [r0, #0]
 80171ec:	440b      	add	r3, r1
 80171ee:	4601      	mov	r1, r0
 80171f0:	3b01      	subs	r3, #1
 80171f2:	f821 3b02 	strh.w	r3, [r1], #2
 80171f6:	f7ff ffc3 	bl	8017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80171fa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80171fe:	88c2      	ldrh	r2, [r0, #6]
 8017200:	8082      	strh	r2, [r0, #4]
 8017202:	80c3      	strh	r3, [r0, #6]
 8017204:	bd10      	pop	{r4, pc}
 8017206:	bf00      	nop
 8017208:	2000e1b8 	.word	0x2000e1b8

0801720c <_ZN8touchgfx11Application13requestRedrawEv>:
 801720c:	4b06      	ldr	r3, [pc, #24]	; (8017228 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 801720e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017212:	4b06      	ldr	r3, [pc, #24]	; (801722c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8017214:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8017218:	f9b3 3000 	ldrsh.w	r3, [r3]
 801721c:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8017220:	2100      	movs	r1, #0
 8017222:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8017226:	4770      	bx	lr
 8017228:	2000e1b4 	.word	0x2000e1b4
 801722c:	2000e1b6 	.word	0x2000e1b6

08017230 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8017230:	4b03      	ldr	r3, [pc, #12]	; (8017240 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8017232:	6818      	ldr	r0, [r3, #0]
 8017234:	b110      	cbz	r0, 801723c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8017236:	6803      	ldr	r3, [r0, #0]
 8017238:	699b      	ldr	r3, [r3, #24]
 801723a:	4718      	bx	r3
 801723c:	4770      	bx	lr
 801723e:	bf00      	nop
 8017240:	2000e204 	.word	0x2000e204

08017244 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8017244:	4770      	bx	lr
	...

08017248 <_ZN8touchgfx11Application4drawEv>:
 8017248:	b507      	push	{r0, r1, r2, lr}
 801724a:	4b09      	ldr	r3, [pc, #36]	; (8017270 <_ZN8touchgfx11Application4drawEv+0x28>)
 801724c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017250:	4b08      	ldr	r3, [pc, #32]	; (8017274 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8017252:	f8ad 2004 	strh.w	r2, [sp, #4]
 8017256:	f9b3 3000 	ldrsh.w	r3, [r3]
 801725a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801725e:	6803      	ldr	r3, [r0, #0]
 8017260:	2100      	movs	r1, #0
 8017262:	9100      	str	r1, [sp, #0]
 8017264:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017266:	4669      	mov	r1, sp
 8017268:	4798      	blx	r3
 801726a:	b003      	add	sp, #12
 801726c:	f85d fb04 	ldr.w	pc, [sp], #4
 8017270:	2000e1b4 	.word	0x2000e1b4
 8017274:	2000e1b6 	.word	0x2000e1b6

08017278 <_ZN8touchgfx11Application10invalidateEv>:
 8017278:	4b09      	ldr	r3, [pc, #36]	; (80172a0 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801727a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801727e:	4b09      	ldr	r3, [pc, #36]	; (80172a4 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8017280:	b082      	sub	sp, #8
 8017282:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017286:	f8ad 2004 	strh.w	r2, [sp, #4]
 801728a:	2100      	movs	r1, #0
 801728c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017290:	9100      	str	r1, [sp, #0]
 8017292:	6803      	ldr	r3, [r0, #0]
 8017294:	aa02      	add	r2, sp, #8
 8017296:	e912 0006 	ldmdb	r2, {r1, r2}
 801729a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801729c:	b002      	add	sp, #8
 801729e:	4718      	bx	r3
 80172a0:	2000e1b4 	.word	0x2000e1b4
 80172a4:	2000e1b6 	.word	0x2000e1b6

080172a8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80172a8:	4b03      	ldr	r3, [pc, #12]	; (80172b8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80172aa:	6818      	ldr	r0, [r3, #0]
 80172ac:	b110      	cbz	r0, 80172b4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80172ae:	6803      	ldr	r3, [r0, #0]
 80172b0:	69db      	ldr	r3, [r3, #28]
 80172b2:	4718      	bx	r3
 80172b4:	4770      	bx	lr
 80172b6:	bf00      	nop
 80172b8:	2000e204 	.word	0x2000e204

080172bc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80172bc:	4b03      	ldr	r3, [pc, #12]	; (80172cc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80172be:	6818      	ldr	r0, [r3, #0]
 80172c0:	b110      	cbz	r0, 80172c8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80172c2:	6803      	ldr	r3, [r0, #0]
 80172c4:	6a1b      	ldr	r3, [r3, #32]
 80172c6:	4718      	bx	r3
 80172c8:	4770      	bx	lr
 80172ca:	bf00      	nop
 80172cc:	2000e204 	.word	0x2000e204

080172d0 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80172d0:	2300      	movs	r3, #0
 80172d2:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 80172d6:	4770      	bx	lr

080172d8 <_ZN8touchgfx11Application14handleKeyEventEh>:
 80172d8:	4b03      	ldr	r3, [pc, #12]	; (80172e8 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80172da:	6818      	ldr	r0, [r3, #0]
 80172dc:	b110      	cbz	r0, 80172e4 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80172de:	6803      	ldr	r3, [r0, #0]
 80172e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80172e2:	4718      	bx	r3
 80172e4:	4770      	bx	lr
 80172e6:	bf00      	nop
 80172e8:	2000e204 	.word	0x2000e204

080172ec <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80172ec:	b510      	push	{r4, lr}
 80172ee:	f9b1 4000 	ldrsh.w	r4, [r1]
 80172f2:	888a      	ldrh	r2, [r1, #4]
 80172f4:	f9b0 3000 	ldrsh.w	r3, [r0]
 80172f8:	4422      	add	r2, r4
 80172fa:	b212      	sxth	r2, r2
 80172fc:	4293      	cmp	r3, r2
 80172fe:	da15      	bge.n	801732c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8017300:	8882      	ldrh	r2, [r0, #4]
 8017302:	4413      	add	r3, r2
 8017304:	b21b      	sxth	r3, r3
 8017306:	429c      	cmp	r4, r3
 8017308:	da10      	bge.n	801732c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801730a:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801730e:	88c9      	ldrh	r1, [r1, #6]
 8017310:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8017314:	4419      	add	r1, r3
 8017316:	b209      	sxth	r1, r1
 8017318:	428a      	cmp	r2, r1
 801731a:	da07      	bge.n	801732c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801731c:	88c0      	ldrh	r0, [r0, #6]
 801731e:	4410      	add	r0, r2
 8017320:	b200      	sxth	r0, r0
 8017322:	4283      	cmp	r3, r0
 8017324:	bfac      	ite	ge
 8017326:	2000      	movge	r0, #0
 8017328:	2001      	movlt	r0, #1
 801732a:	bd10      	pop	{r4, pc}
 801732c:	2000      	movs	r0, #0
 801732e:	e7fc      	b.n	801732a <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08017330 <_ZN8touchgfx4Rect10restrictToEss>:
 8017330:	f9b0 3000 	ldrsh.w	r3, [r0]
 8017334:	2b00      	cmp	r3, #0
 8017336:	b510      	push	{r4, lr}
 8017338:	da04      	bge.n	8017344 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 801733a:	8884      	ldrh	r4, [r0, #4]
 801733c:	4423      	add	r3, r4
 801733e:	8083      	strh	r3, [r0, #4]
 8017340:	2300      	movs	r3, #0
 8017342:	8003      	strh	r3, [r0, #0]
 8017344:	f9b0 4000 	ldrsh.w	r4, [r0]
 8017348:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801734c:	1b09      	subs	r1, r1, r4
 801734e:	428b      	cmp	r3, r1
 8017350:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8017354:	bfc8      	it	gt
 8017356:	8081      	strhgt	r1, [r0, #4]
 8017358:	2b00      	cmp	r3, #0
 801735a:	da04      	bge.n	8017366 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 801735c:	88c1      	ldrh	r1, [r0, #6]
 801735e:	440b      	add	r3, r1
 8017360:	80c3      	strh	r3, [r0, #6]
 8017362:	2300      	movs	r3, #0
 8017364:	8043      	strh	r3, [r0, #2]
 8017366:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801736a:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 801736e:	1a52      	subs	r2, r2, r1
 8017370:	4293      	cmp	r3, r2
 8017372:	bfc8      	it	gt
 8017374:	80c2      	strhgt	r2, [r0, #6]
 8017376:	bd10      	pop	{r4, pc}

08017378 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8017378:	b510      	push	{r4, lr}
 801737a:	4b10      	ldr	r3, [pc, #64]	; (80173bc <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 801737c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017380:	4b0f      	ldr	r3, [pc, #60]	; (80173c0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8017382:	460c      	mov	r4, r1
 8017384:	4620      	mov	r0, r4
 8017386:	f9b3 1000 	ldrsh.w	r1, [r3]
 801738a:	f7ff ffd1 	bl	8017330 <_ZN8touchgfx4Rect10restrictToEss>
 801738e:	4b0d      	ldr	r3, [pc, #52]	; (80173c4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8017390:	6818      	ldr	r0, [r3, #0]
 8017392:	b190      	cbz	r0, 80173ba <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8017394:	6803      	ldr	r3, [r0, #0]
 8017396:	4621      	mov	r1, r4
 8017398:	689b      	ldr	r3, [r3, #8]
 801739a:	4798      	blx	r3
 801739c:	4b0a      	ldr	r3, [pc, #40]	; (80173c8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801739e:	6818      	ldr	r0, [r3, #0]
 80173a0:	b118      	cbz	r0, 80173aa <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80173a2:	6803      	ldr	r3, [r0, #0]
 80173a4:	4621      	mov	r1, r4
 80173a6:	689b      	ldr	r3, [r3, #8]
 80173a8:	4798      	blx	r3
 80173aa:	4b08      	ldr	r3, [pc, #32]	; (80173cc <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80173ac:	6818      	ldr	r0, [r3, #0]
 80173ae:	6803      	ldr	r3, [r0, #0]
 80173b0:	4621      	mov	r1, r4
 80173b2:	69db      	ldr	r3, [r3, #28]
 80173b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80173b8:	4718      	bx	r3
 80173ba:	bd10      	pop	{r4, pc}
 80173bc:	2000e1b6 	.word	0x2000e1b6
 80173c0:	2000e1b4 	.word	0x2000e1b4
 80173c4:	2000e204 	.word	0x2000e204
 80173c8:	2000e200 	.word	0x2000e200
 80173cc:	2000e1c0 	.word	0x2000e1c0

080173d0 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80173d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80173d2:	4606      	mov	r6, r0
 80173d4:	4608      	mov	r0, r1
 80173d6:	460f      	mov	r7, r1
 80173d8:	f7fb f943 	bl	8012662 <_ZNK8touchgfx4Rect7isEmptyEv>
 80173dc:	b9e8      	cbnz	r0, 801741a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80173de:	f9b7 5000 	ldrsh.w	r5, [r7]
 80173e2:	f9b6 4000 	ldrsh.w	r4, [r6]
 80173e6:	42a5      	cmp	r5, r4
 80173e8:	db17      	blt.n	801741a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80173ea:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80173ee:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80173f2:	429a      	cmp	r2, r3
 80173f4:	db11      	blt.n	801741a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80173f6:	88b9      	ldrh	r1, [r7, #4]
 80173f8:	440d      	add	r5, r1
 80173fa:	88b1      	ldrh	r1, [r6, #4]
 80173fc:	440c      	add	r4, r1
 80173fe:	b22d      	sxth	r5, r5
 8017400:	b224      	sxth	r4, r4
 8017402:	42a5      	cmp	r5, r4
 8017404:	dc09      	bgt.n	801741a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8017406:	88f8      	ldrh	r0, [r7, #6]
 8017408:	4410      	add	r0, r2
 801740a:	88f2      	ldrh	r2, [r6, #6]
 801740c:	4413      	add	r3, r2
 801740e:	b200      	sxth	r0, r0
 8017410:	b21b      	sxth	r3, r3
 8017412:	4298      	cmp	r0, r3
 8017414:	bfcc      	ite	gt
 8017416:	2000      	movgt	r0, #0
 8017418:	2001      	movle	r0, #1
 801741a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801741c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 801741c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801741e:	4604      	mov	r4, r0
 8017420:	4608      	mov	r0, r1
 8017422:	460d      	mov	r5, r1
 8017424:	f7fb f91d 	bl	8012662 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017428:	b978      	cbnz	r0, 801744a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 801742a:	4620      	mov	r0, r4
 801742c:	f7fb f919 	bl	8012662 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017430:	f9b5 6000 	ldrsh.w	r6, [r5]
 8017434:	b150      	cbz	r0, 801744c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8017436:	8026      	strh	r6, [r4, #0]
 8017438:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801743c:	8063      	strh	r3, [r4, #2]
 801743e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8017442:	80a3      	strh	r3, [r4, #4]
 8017444:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8017448:	80e3      	strh	r3, [r4, #6]
 801744a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801744c:	f9b4 1000 	ldrsh.w	r1, [r4]
 8017450:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8017454:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8017458:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 801745c:	88ed      	ldrh	r5, [r5, #6]
 801745e:	42b1      	cmp	r1, r6
 8017460:	460f      	mov	r7, r1
 8017462:	bfa8      	it	ge
 8017464:	4637      	movge	r7, r6
 8017466:	4293      	cmp	r3, r2
 8017468:	4618      	mov	r0, r3
 801746a:	4466      	add	r6, ip
 801746c:	bfa8      	it	ge
 801746e:	4610      	movge	r0, r2
 8017470:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8017474:	8027      	strh	r7, [r4, #0]
 8017476:	442a      	add	r2, r5
 8017478:	88e5      	ldrh	r5, [r4, #6]
 801747a:	8060      	strh	r0, [r4, #2]
 801747c:	4461      	add	r1, ip
 801747e:	442b      	add	r3, r5
 8017480:	b236      	sxth	r6, r6
 8017482:	b209      	sxth	r1, r1
 8017484:	b212      	sxth	r2, r2
 8017486:	b21b      	sxth	r3, r3
 8017488:	428e      	cmp	r6, r1
 801748a:	bfac      	ite	ge
 801748c:	ebc7 0106 	rsbge	r1, r7, r6
 8017490:	ebc7 0101 	rsblt	r1, r7, r1
 8017494:	429a      	cmp	r2, r3
 8017496:	bfac      	ite	ge
 8017498:	ebc0 0202 	rsbge	r2, r0, r2
 801749c:	ebc0 0203 	rsblt	r2, r0, r3
 80174a0:	80a1      	strh	r1, [r4, #4]
 80174a2:	80e2      	strh	r2, [r4, #6]
 80174a4:	e7d1      	b.n	801744a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

080174a8 <_ZN8touchgfx11Application11getInstanceEv>:
 80174a8:	4b01      	ldr	r3, [pc, #4]	; (80174b0 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80174aa:	6818      	ldr	r0, [r3, #0]
 80174ac:	4770      	bx	lr
 80174ae:	bf00      	nop
 80174b0:	2000e214 	.word	0x2000e214

080174b4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 80174b4:	b510      	push	{r4, lr}
 80174b6:	2300      	movs	r3, #0
 80174b8:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 80174bc:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80174c0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80174c4:	4604      	mov	r4, r0
 80174c6:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80174ca:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 80174ce:	429a      	cmp	r2, r3
 80174d0:	d90e      	bls.n	80174f0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80174d2:	18e2      	adds	r2, r4, r3
 80174d4:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 80174d8:	b122      	cbz	r2, 80174e4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 80174da:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80174de:	6803      	ldr	r3, [r0, #0]
 80174e0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80174e2:	4798      	blx	r3
 80174e4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80174e8:	3301      	adds	r3, #1
 80174ea:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80174ee:	e7ea      	b.n	80174c6 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80174f0:	bd10      	pop	{r4, pc}

080174f2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 80174f2:	b530      	push	{r4, r5, lr}
 80174f4:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 80174f8:	2200      	movs	r2, #0
 80174fa:	b293      	uxth	r3, r2
 80174fc:	429d      	cmp	r5, r3
 80174fe:	d90e      	bls.n	801751e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8017500:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8017504:	428b      	cmp	r3, r1
 8017506:	d10b      	bne.n	8017520 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8017508:	1884      	adds	r4, r0, r2
 801750a:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 801750e:	b13b      	cbz	r3, 8017520 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8017510:	3b01      	subs	r3, #1
 8017512:	b2db      	uxtb	r3, r3
 8017514:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8017518:	b90b      	cbnz	r3, 801751e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 801751a:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 801751e:	bd30      	pop	{r4, r5, pc}
 8017520:	3201      	adds	r2, #1
 8017522:	e7ea      	b.n	80174fa <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08017524 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8017524:	2300      	movs	r3, #0
 8017526:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 801752a:	f100 0284 	add.w	r2, r0, #132	; 0x84
 801752e:	30a4      	adds	r0, #164	; 0xa4
 8017530:	f802 3b01 	strb.w	r3, [r2], #1
 8017534:	4282      	cmp	r2, r0
 8017536:	d1fb      	bne.n	8017530 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8017538:	4770      	bx	lr
	...

0801753c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 801753c:	b570      	push	{r4, r5, r6, lr}
 801753e:	4c0b      	ldr	r4, [pc, #44]	; (801756c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8017540:	4605      	mov	r5, r0
 8017542:	6820      	ldr	r0, [r4, #0]
 8017544:	460e      	mov	r6, r1
 8017546:	b110      	cbz	r0, 801754e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8017548:	6803      	ldr	r3, [r0, #0]
 801754a:	695b      	ldr	r3, [r3, #20]
 801754c:	4798      	blx	r3
 801754e:	1d28      	adds	r0, r5, #4
 8017550:	f7ff ffe8 	bl	8017524 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8017554:	6026      	str	r6, [r4, #0]
 8017556:	6833      	ldr	r3, [r6, #0]
 8017558:	4630      	mov	r0, r6
 801755a:	68db      	ldr	r3, [r3, #12]
 801755c:	4798      	blx	r3
 801755e:	682b      	ldr	r3, [r5, #0]
 8017560:	4628      	mov	r0, r5
 8017562:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017564:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017568:	4718      	bx	r3
 801756a:	bf00      	nop
 801756c:	2000e204 	.word	0x2000e204

08017570 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8017570:	2300      	movs	r3, #0
 8017572:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8017576:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 801757a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801757c:	461a      	mov	r2, r3
 801757e:	461c      	mov	r4, r3
 8017580:	461d      	mov	r5, r3
 8017582:	459c      	cmp	ip, r3
 8017584:	dd1a      	ble.n	80175bc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8017586:	18c6      	adds	r6, r0, r3
 8017588:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 801758c:	b16e      	cbz	r6, 80175aa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 801758e:	429a      	cmp	r2, r3
 8017590:	d008      	beq.n	80175a4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8017592:	fa1f fe82 	uxth.w	lr, r2
 8017596:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 801759a:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 801759e:	1887      	adds	r7, r0, r2
 80175a0:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 80175a4:	3201      	adds	r2, #1
 80175a6:	3301      	adds	r3, #1
 80175a8:	e7eb      	b.n	8017582 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 80175aa:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 80175ae:	4299      	cmp	r1, r3
 80175b0:	bfa8      	it	ge
 80175b2:	3501      	addge	r5, #1
 80175b4:	429e      	cmp	r6, r3
 80175b6:	bfc8      	it	gt
 80175b8:	3401      	addgt	r4, #1
 80175ba:	e7f4      	b.n	80175a6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 80175bc:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 80175c0:	1b49      	subs	r1, r1, r5
 80175c2:	1b1b      	subs	r3, r3, r4
 80175c4:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 80175c8:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80175cc:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80175d0:	4293      	cmp	r3, r2
 80175d2:	dd03      	ble.n	80175dc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 80175d4:	3b01      	subs	r3, #1
 80175d6:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 80175da:	e7f7      	b.n	80175cc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 80175dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080175e0 <_ZN8touchgfx11Application15handleTickEventEv>:
 80175e0:	b570      	push	{r4, r5, r6, lr}
 80175e2:	4d16      	ldr	r5, [pc, #88]	; (801763c <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 80175e4:	4604      	mov	r4, r0
 80175e6:	6828      	ldr	r0, [r5, #0]
 80175e8:	b140      	cbz	r0, 80175fc <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80175ea:	7a03      	ldrb	r3, [r0, #8]
 80175ec:	b933      	cbnz	r3, 80175fc <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80175ee:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80175f2:	6803      	ldr	r3, [r0, #0]
 80175f4:	689b      	ldr	r3, [r3, #8]
 80175f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80175fa:	4718      	bx	r3
 80175fc:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8017600:	4e0f      	ldr	r6, [pc, #60]	; (8017640 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8017602:	b973      	cbnz	r3, 8017622 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8017604:	b168      	cbz	r0, 8017622 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8017606:	7a03      	ldrb	r3, [r0, #8]
 8017608:	b15b      	cbz	r3, 8017622 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801760a:	6830      	ldr	r0, [r6, #0]
 801760c:	b110      	cbz	r0, 8017614 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 801760e:	6803      	ldr	r3, [r0, #0]
 8017610:	691b      	ldr	r3, [r3, #16]
 8017612:	4798      	blx	r3
 8017614:	6828      	ldr	r0, [r5, #0]
 8017616:	6803      	ldr	r3, [r0, #0]
 8017618:	68db      	ldr	r3, [r3, #12]
 801761a:	4798      	blx	r3
 801761c:	2301      	movs	r3, #1
 801761e:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8017622:	3404      	adds	r4, #4
 8017624:	4620      	mov	r0, r4
 8017626:	f7ff ff45 	bl	80174b4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 801762a:	4620      	mov	r0, r4
 801762c:	f7ff ffa0 	bl	8017570 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8017630:	6830      	ldr	r0, [r6, #0]
 8017632:	b110      	cbz	r0, 801763a <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8017634:	6803      	ldr	r3, [r0, #0]
 8017636:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8017638:	e7dd      	b.n	80175f6 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801763a:	bd70      	pop	{r4, r5, r6, pc}
 801763c:	2000e208 	.word	0x2000e208
 8017640:	2000e204 	.word	0x2000e204

08017644 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8017644:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017646:	2300      	movs	r3, #0
 8017648:	4604      	mov	r4, r0
 801764a:	460d      	mov	r5, r1
 801764c:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8017650:	4618      	mov	r0, r3
 8017652:	b29a      	uxth	r2, r3
 8017654:	4291      	cmp	r1, r2
 8017656:	d911      	bls.n	801767c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8017658:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 801765c:	18e6      	adds	r6, r4, r3
 801765e:	42af      	cmp	r7, r5
 8017660:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8017664:	d105      	bne.n	8017672 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8017666:	2aff      	cmp	r2, #255	; 0xff
 8017668:	d002      	beq.n	8017670 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 801766a:	3201      	adds	r2, #1
 801766c:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8017670:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017672:	2a00      	cmp	r2, #0
 8017674:	bf08      	it	eq
 8017676:	2001      	moveq	r0, #1
 8017678:	3301      	adds	r3, #1
 801767a:	e7ea      	b.n	8017652 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 801767c:	b120      	cbz	r0, 8017688 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 801767e:	2920      	cmp	r1, #32
 8017680:	d102      	bne.n	8017688 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8017682:	4620      	mov	r0, r4
 8017684:	f7ff ff74 	bl	8017570 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8017688:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 801768c:	2b1f      	cmp	r3, #31
 801768e:	d8ef      	bhi.n	8017670 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8017690:	18e2      	adds	r2, r4, r3
 8017692:	2101      	movs	r1, #1
 8017694:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8017698:	185a      	adds	r2, r3, r1
 801769a:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 801769e:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80176a2:	e7e5      	b.n	8017670 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

080176a4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80176a4:	4603      	mov	r3, r0
 80176a6:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80176aa:	2200      	movs	r2, #0
 80176ac:	801a      	strh	r2, [r3, #0]
 80176ae:	805a      	strh	r2, [r3, #2]
 80176b0:	809a      	strh	r2, [r3, #4]
 80176b2:	80da      	strh	r2, [r3, #6]
 80176b4:	3308      	adds	r3, #8
 80176b6:	428b      	cmp	r3, r1
 80176b8:	d1f8      	bne.n	80176ac <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80176ba:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80176be:	4770      	bx	lr

080176c0 <_ZN8touchgfx11ApplicationC1Ev>:
 80176c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80176c2:	4606      	mov	r6, r0
 80176c4:	4b1c      	ldr	r3, [pc, #112]	; (8017738 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80176c6:	f846 3b04 	str.w	r3, [r6], #4
 80176ca:	4604      	mov	r4, r0
 80176cc:	2500      	movs	r5, #0
 80176ce:	22a8      	movs	r2, #168	; 0xa8
 80176d0:	2100      	movs	r1, #0
 80176d2:	4630      	mov	r0, r6
 80176d4:	f011 faa6 	bl	8028c24 <memset>
 80176d8:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 80176dc:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80176e0:	f7ff ffe0 	bl	80176a4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80176e4:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80176e8:	f7ff ffdc 	bl	80176a4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80176ec:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80176f0:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80176f4:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 80176f8:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 80176fc:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8017700:	490e      	ldr	r1, [pc, #56]	; (801773c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8017702:	480f      	ldr	r0, [pc, #60]	; (8017740 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8017704:	4f0f      	ldr	r7, [pc, #60]	; (8017744 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8017706:	f010 fbb1 	bl	8027e6c <CRC_Lock>
 801770a:	4b0f      	ldr	r3, [pc, #60]	; (8017748 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 801770c:	b158      	cbz	r0, 8017726 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 801770e:	801d      	strh	r5, [r3, #0]
 8017710:	4a0e      	ldr	r2, [pc, #56]	; (801774c <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8017712:	2300      	movs	r3, #0
 8017714:	6013      	str	r3, [r2, #0]
 8017716:	4a0e      	ldr	r2, [pc, #56]	; (8017750 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8017718:	603b      	str	r3, [r7, #0]
 801771a:	4630      	mov	r0, r6
 801771c:	6013      	str	r3, [r2, #0]
 801771e:	f7ff ff01 	bl	8017524 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8017722:	4620      	mov	r0, r4
 8017724:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017726:	f44f 6280 	mov.w	r2, #1024	; 0x400
 801772a:	2002      	movs	r0, #2
 801772c:	801a      	strh	r2, [r3, #0]
 801772e:	6038      	str	r0, [r7, #0]
 8017730:	f001 fb42 	bl	8018db8 <_ZN8touchgfx6Screen4drawEv>
 8017734:	e7ec      	b.n	8017710 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8017736:	bf00      	nop
 8017738:	0802cd68 	.word	0x0802cd68
 801773c:	b5e8b5cd 	.word	0xb5e8b5cd
 8017740:	f407a5c2 	.word	0xf407a5c2
 8017744:	2000e204 	.word	0x2000e204
 8017748:	20000058 	.word	0x20000058
 801774c:	2000e214 	.word	0x2000e214
 8017750:	2000e208 	.word	0x2000e208

08017754 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8017754:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8017758:	3b01      	subs	r3, #1
 801775a:	b29b      	uxth	r3, r3
 801775c:	428b      	cmp	r3, r1
 801775e:	b510      	push	{r4, lr}
 8017760:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8017764:	d908      	bls.n	8017778 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8017766:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801776a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801776e:	681a      	ldr	r2, [r3, #0]
 8017770:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8017774:	685a      	ldr	r2, [r3, #4]
 8017776:	6062      	str	r2, [r4, #4]
 8017778:	bd10      	pop	{r4, pc}
	...

0801777c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801777c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017780:	4b8f      	ldr	r3, [pc, #572]	; (80179c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8017782:	b08f      	sub	sp, #60	; 0x3c
 8017784:	ac0a      	add	r4, sp, #40	; 0x28
 8017786:	e884 0006 	stmia.w	r4, {r1, r2}
 801778a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801778e:	4b8d      	ldr	r3, [pc, #564]	; (80179c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8017790:	4683      	mov	fp, r0
 8017792:	f9b3 1000 	ldrsh.w	r1, [r3]
 8017796:	4620      	mov	r0, r4
 8017798:	f7ff fdca 	bl	8017330 <_ZN8touchgfx4Rect10restrictToEss>
 801779c:	4620      	mov	r0, r4
 801779e:	f7fa ff60 	bl	8012662 <_ZNK8touchgfx4Rect7isEmptyEv>
 80177a2:	2800      	cmp	r0, #0
 80177a4:	d16a      	bne.n	801787c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80177a6:	9403      	str	r4, [sp, #12]
 80177a8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80177ac:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80177b0:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80177b4:	35a4      	adds	r5, #164	; 0xa4
 80177b6:	9301      	str	r3, [sp, #4]
 80177b8:	b15c      	cbz	r4, 80177d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 80177ba:	4629      	mov	r1, r5
 80177bc:	9803      	ldr	r0, [sp, #12]
 80177be:	f7ff fe07 	bl	80173d0 <_ZNK8touchgfx4Rect8includesERKS0_>
 80177c2:	3c01      	subs	r4, #1
 80177c4:	b118      	cbz	r0, 80177ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 80177c6:	b2a1      	uxth	r1, r4
 80177c8:	9801      	ldr	r0, [sp, #4]
 80177ca:	f7ff ffc3 	bl	8017754 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80177ce:	3d08      	subs	r5, #8
 80177d0:	e7f2      	b.n	80177b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80177d2:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 80177d6:	f8cd a010 	str.w	sl, [sp, #16]
 80177da:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
 80177de:	9302      	str	r3, [sp, #8]
 80177e0:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80177e4:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 80177e8:	9306      	str	r3, [sp, #24]
 80177ea:	445c      	add	r4, fp
 80177ec:	2500      	movs	r5, #0
 80177ee:	4626      	mov	r6, r4
 80177f0:	f8cd a014 	str.w	sl, [sp, #20]
 80177f4:	462f      	mov	r7, r5
 80177f6:	9b05      	ldr	r3, [sp, #20]
 80177f8:	2b00      	cmp	r3, #0
 80177fa:	d073      	beq.n	80178e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80177fc:	9903      	ldr	r1, [sp, #12]
 80177fe:	4630      	mov	r0, r6
 8017800:	f7ff fd74 	bl	80172ec <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017804:	b350      	cbz	r0, 801785c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8017806:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 801780a:	f9b6 c000 	ldrsh.w	ip, [r6]
 801780e:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8017812:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8017816:	45e6      	cmp	lr, ip
 8017818:	db33      	blt.n	8017882 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801781a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801781e:	88b3      	ldrh	r3, [r6, #4]
 8017820:	4472      	add	r2, lr
 8017822:	4463      	add	r3, ip
 8017824:	b212      	sxth	r2, r2
 8017826:	b21b      	sxth	r3, r3
 8017828:	429a      	cmp	r2, r3
 801782a:	dc2a      	bgt.n	8017882 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801782c:	88f3      	ldrh	r3, [r6, #6]
 801782e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8017832:	fa1f f289 	uxth.w	r2, r9
 8017836:	4413      	add	r3, r2
 8017838:	b29b      	uxth	r3, r3
 801783a:	45c8      	cmp	r8, r9
 801783c:	fa1f fc88 	uxth.w	ip, r8
 8017840:	fa0f fe83 	sxth.w	lr, r3
 8017844:	db0f      	blt.n	8017866 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8017846:	eba3 030c 	sub.w	r3, r3, ip
 801784a:	1ac9      	subs	r1, r1, r3
 801784c:	b209      	sxth	r1, r1
 801784e:	2900      	cmp	r1, #0
 8017850:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8017854:	dd12      	ble.n	801787c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8017856:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 801785a:	4605      	mov	r5, r0
 801785c:	9b05      	ldr	r3, [sp, #20]
 801785e:	3b01      	subs	r3, #1
 8017860:	9305      	str	r3, [sp, #20]
 8017862:	3e08      	subs	r6, #8
 8017864:	e7c7      	b.n	80177f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8017866:	4461      	add	r1, ip
 8017868:	b209      	sxth	r1, r1
 801786a:	4571      	cmp	r1, lr
 801786c:	dc38      	bgt.n	80178e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801786e:	eba2 020c 	sub.w	r2, r2, ip
 8017872:	b212      	sxth	r2, r2
 8017874:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8017878:	2a00      	cmp	r2, #0
 801787a:	dcee      	bgt.n	801785a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801787c:	b00f      	add	sp, #60	; 0x3c
 801787e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017882:	45c8      	cmp	r8, r9
 8017884:	db2c      	blt.n	80178e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8017886:	88f3      	ldrh	r3, [r6, #6]
 8017888:	4499      	add	r9, r3
 801788a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 801788e:	4498      	add	r8, r3
 8017890:	fa0f f989 	sxth.w	r9, r9
 8017894:	fa0f f888 	sxth.w	r8, r8
 8017898:	45c1      	cmp	r9, r8
 801789a:	db21      	blt.n	80178e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801789c:	88b3      	ldrh	r3, [r6, #4]
 801789e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80178a2:	fa1f f28c 	uxth.w	r2, ip
 80178a6:	4413      	add	r3, r2
 80178a8:	b29b      	uxth	r3, r3
 80178aa:	45e6      	cmp	lr, ip
 80178ac:	fa1f f88e 	uxth.w	r8, lr
 80178b0:	fa0f f983 	sxth.w	r9, r3
 80178b4:	db0a      	blt.n	80178cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80178b6:	eba3 0308 	sub.w	r3, r3, r8
 80178ba:	1ac9      	subs	r1, r1, r3
 80178bc:	b209      	sxth	r1, r1
 80178be:	2900      	cmp	r1, #0
 80178c0:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80178c4:	ddda      	ble.n	801787c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80178c6:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80178ca:	e7c6      	b.n	801785a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80178cc:	4441      	add	r1, r8
 80178ce:	b209      	sxth	r1, r1
 80178d0:	4549      	cmp	r1, r9
 80178d2:	dc05      	bgt.n	80178e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80178d4:	eba2 0208 	sub.w	r2, r2, r8
 80178d8:	b212      	sxth	r2, r2
 80178da:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80178de:	e7cb      	b.n	8017878 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80178e0:	4607      	mov	r7, r0
 80178e2:	e7bb      	b.n	801785c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80178e4:	2d00      	cmp	r5, #0
 80178e6:	d181      	bne.n	80177ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 80178e8:	2f00      	cmp	r7, #0
 80178ea:	f000 81dd 	beq.w	8017ca8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80178ee:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80178f2:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80178f6:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 80178fa:	b2b3      	uxth	r3, r6
 80178fc:	9305      	str	r3, [sp, #20]
 80178fe:	9a05      	ldr	r2, [sp, #20]
 8017900:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8017904:	4413      	add	r3, r2
 8017906:	b2ba      	uxth	r2, r7
 8017908:	4492      	add	sl, r2
 801790a:	b29b      	uxth	r3, r3
 801790c:	fa1f fa8a 	uxth.w	sl, sl
 8017910:	fa0f f883 	sxth.w	r8, r3
 8017914:	fa0f f98a 	sxth.w	r9, sl
 8017918:	e9cd 2307 	strd	r2, r3, [sp, #28]
 801791c:	9b04      	ldr	r3, [sp, #16]
 801791e:	2b00      	cmp	r3, #0
 8017920:	d052      	beq.n	80179c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8017922:	9903      	ldr	r1, [sp, #12]
 8017924:	4620      	mov	r0, r4
 8017926:	f7ff fce1 	bl	80172ec <_ZNK8touchgfx4Rect9intersectERKS0_>
 801792a:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 801792e:	b1c0      	cbz	r0, 8017962 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017930:	f9b4 e000 	ldrsh.w	lr, [r4]
 8017934:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8017938:	4576      	cmp	r6, lr
 801793a:	dc22      	bgt.n	8017982 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801793c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8017940:	44f4      	add	ip, lr
 8017942:	fa0f fc8c 	sxth.w	ip, ip
 8017946:	45e0      	cmp	r8, ip
 8017948:	db1b      	blt.n	8017982 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801794a:	428f      	cmp	r7, r1
 801794c:	fa1f fc81 	uxth.w	ip, r1
 8017950:	88e1      	ldrh	r1, [r4, #6]
 8017952:	dc0d      	bgt.n	8017970 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8017954:	ebaa 0c0c 	sub.w	ip, sl, ip
 8017958:	eba1 010c 	sub.w	r1, r1, ip
 801795c:	f8a4 9002 	strh.w	r9, [r4, #2]
 8017960:	80e1      	strh	r1, [r4, #6]
 8017962:	4628      	mov	r0, r5
 8017964:	9904      	ldr	r1, [sp, #16]
 8017966:	3901      	subs	r1, #1
 8017968:	9104      	str	r1, [sp, #16]
 801796a:	3c08      	subs	r4, #8
 801796c:	4605      	mov	r5, r0
 801796e:	e7d3      	b.n	8017918 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8017970:	4461      	add	r1, ip
 8017972:	b209      	sxth	r1, r1
 8017974:	4549      	cmp	r1, r9
 8017976:	dcf5      	bgt.n	8017964 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8017978:	eba2 0c0c 	sub.w	ip, r2, ip
 801797c:	f8a4 c006 	strh.w	ip, [r4, #6]
 8017980:	e7ef      	b.n	8017962 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017982:	428f      	cmp	r7, r1
 8017984:	dcee      	bgt.n	8017964 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8017986:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 801798a:	4461      	add	r1, ip
 801798c:	b209      	sxth	r1, r1
 801798e:	4589      	cmp	r9, r1
 8017990:	dbe8      	blt.n	8017964 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8017992:	4576      	cmp	r6, lr
 8017994:	fa1f fc8e 	uxth.w	ip, lr
 8017998:	88a1      	ldrh	r1, [r4, #4]
 801799a:	dc07      	bgt.n	80179ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 801799c:	eba3 0c0c 	sub.w	ip, r3, ip
 80179a0:	eba1 010c 	sub.w	r1, r1, ip
 80179a4:	f8a4 8000 	strh.w	r8, [r4]
 80179a8:	80a1      	strh	r1, [r4, #4]
 80179aa:	e7da      	b.n	8017962 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80179ac:	4461      	add	r1, ip
 80179ae:	b209      	sxth	r1, r1
 80179b0:	4588      	cmp	r8, r1
 80179b2:	dbd7      	blt.n	8017964 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80179b4:	9905      	ldr	r1, [sp, #20]
 80179b6:	eba1 0c0c 	sub.w	ip, r1, ip
 80179ba:	f8a4 c004 	strh.w	ip, [r4, #4]
 80179be:	e7d0      	b.n	8017962 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80179c0:	2000e1b6 	.word	0x2000e1b6
 80179c4:	2000e1b4 	.word	0x2000e1b4
 80179c8:	2d00      	cmp	r5, #0
 80179ca:	f000 816d 	beq.w	8017ca8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80179ce:	9b06      	ldr	r3, [sp, #24]
 80179d0:	445b      	add	r3, fp
 80179d2:	461c      	mov	r4, r3
 80179d4:	9b02      	ldr	r3, [sp, #8]
 80179d6:	3301      	adds	r3, #1
 80179d8:	f000 8166 	beq.w	8017ca8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80179dc:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 80179e0:	4629      	mov	r1, r5
 80179e2:	9803      	ldr	r0, [sp, #12]
 80179e4:	f7ff fcf4 	bl	80173d0 <_ZNK8touchgfx4Rect8includesERKS0_>
 80179e8:	b120      	cbz	r0, 80179f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 80179ea:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80179ee:	9801      	ldr	r0, [sp, #4]
 80179f0:	f7ff feb0 	bl	8017754 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80179f4:	9903      	ldr	r1, [sp, #12]
 80179f6:	4628      	mov	r0, r5
 80179f8:	f7ff fc78 	bl	80172ec <_ZNK8touchgfx4Rect9intersectERKS0_>
 80179fc:	2800      	cmp	r0, #0
 80179fe:	f000 809c 	beq.w	8017b3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8017a02:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8017a06:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8017a0a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8017a0e:	9309      	str	r3, [sp, #36]	; 0x24
 8017a10:	fa1f f189 	uxth.w	r1, r9
 8017a14:	eb01 0c03 	add.w	ip, r1, r3
 8017a18:	fa1f fa8c 	uxth.w	sl, ip
 8017a1c:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8017a20:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8017a24:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8017a28:	b283      	uxth	r3, r0
 8017a2a:	eb03 050c 	add.w	r5, r3, ip
 8017a2e:	b2ad      	uxth	r5, r5
 8017a30:	9505      	str	r5, [sp, #20]
 8017a32:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8017a36:	9504      	str	r5, [sp, #16]
 8017a38:	4548      	cmp	r0, r9
 8017a3a:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8017a3e:	f340 8099 	ble.w	8017b74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8017a42:	1a5b      	subs	r3, r3, r1
 8017a44:	b29b      	uxth	r3, r3
 8017a46:	4596      	cmp	lr, r2
 8017a48:	fa0f f08a 	sxth.w	r0, sl
 8017a4c:	b21e      	sxth	r6, r3
 8017a4e:	dd2e      	ble.n	8017aae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8017a50:	9f02      	ldr	r7, [sp, #8]
 8017a52:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8017a56:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8017a5a:	9f04      	ldr	r7, [sp, #16]
 8017a5c:	1a3f      	subs	r7, r7, r0
 8017a5e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8017a62:	fa1f fe8e 	uxth.w	lr, lr
 8017a66:	b292      	uxth	r2, r2
 8017a68:	ebae 0102 	sub.w	r1, lr, r2
 8017a6c:	44a6      	add	lr, r4
 8017a6e:	4402      	add	r2, r0
 8017a70:	b289      	uxth	r1, r1
 8017a72:	fa0f fe8e 	sxth.w	lr, lr
 8017a76:	b212      	sxth	r2, r2
 8017a78:	b20d      	sxth	r5, r1
 8017a7a:	ebae 0202 	sub.w	r2, lr, r2
 8017a7e:	436f      	muls	r7, r5
 8017a80:	4372      	muls	r2, r6
 8017a82:	4297      	cmp	r7, r2
 8017a84:	db09      	blt.n	8017a9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8017a86:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8017a8a:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8017a8e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8017a92:	449c      	add	ip, r3
 8017a94:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8017a98:	e686      	b.n	80177a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017a9a:	4421      	add	r1, r4
 8017a9c:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8017aa0:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8017aa4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8017aa8:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017aac:	e67c      	b.n	80177a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017aae:	9f04      	ldr	r7, [sp, #16]
 8017ab0:	42b8      	cmp	r0, r7
 8017ab2:	da27      	bge.n	8017b04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8017ab4:	9902      	ldr	r1, [sp, #8]
 8017ab6:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8017aba:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8017abe:	eb05 010e 	add.w	r1, r5, lr
 8017ac2:	fa1f f881 	uxth.w	r8, r1
 8017ac6:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8017aca:	4411      	add	r1, r2
 8017acc:	eba1 0108 	sub.w	r1, r1, r8
 8017ad0:	b289      	uxth	r1, r1
 8017ad2:	fa0f f988 	sxth.w	r9, r8
 8017ad6:	eba2 020e 	sub.w	r2, r2, lr
 8017ada:	fa0f f881 	sxth.w	r8, r1
 8017ade:	1a3f      	subs	r7, r7, r0
 8017ae0:	4372      	muls	r2, r6
 8017ae2:	fb08 f707 	mul.w	r7, r8, r7
 8017ae6:	42ba      	cmp	r2, r7
 8017ae8:	dc06      	bgt.n	8017af8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8017aea:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8017aee:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8017af2:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8017af6:	e7ca      	b.n	8017a8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8017af8:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8017afc:	4429      	add	r1, r5
 8017afe:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8017b02:	e651      	b.n	80177a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017b04:	9805      	ldr	r0, [sp, #20]
 8017b06:	ebaa 0000 	sub.w	r0, sl, r0
 8017b0a:	b280      	uxth	r0, r0
 8017b0c:	2d06      	cmp	r5, #6
 8017b0e:	fa0f fe80 	sxth.w	lr, r0
 8017b12:	d817      	bhi.n	8017b44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8017b14:	9b04      	ldr	r3, [sp, #16]
 8017b16:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8017b1a:	1c6b      	adds	r3, r5, #1
 8017b1c:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8017b20:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8017b24:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8017b28:	9b01      	ldr	r3, [sp, #4]
 8017b2a:	9801      	ldr	r0, [sp, #4]
 8017b2c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8017b30:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8017b34:	805a      	strh	r2, [r3, #2]
 8017b36:	809e      	strh	r6, [r3, #4]
 8017b38:	80d9      	strh	r1, [r3, #6]
 8017b3a:	9b02      	ldr	r3, [sp, #8]
 8017b3c:	3b01      	subs	r3, #1
 8017b3e:	9302      	str	r3, [sp, #8]
 8017b40:	3c08      	subs	r4, #8
 8017b42:	e747      	b.n	80179d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8017b44:	9a02      	ldr	r2, [sp, #8]
 8017b46:	45b6      	cmp	lr, r6
 8017b48:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8017b4c:	db0d      	blt.n	8017b6a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8017b4e:	449c      	add	ip, r3
 8017b50:	fa1f fc8c 	uxth.w	ip, ip
 8017b54:	445a      	add	r2, fp
 8017b56:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8017b5a:	448c      	add	ip, r1
 8017b5c:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8017b60:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8017b64:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8017b68:	e61e      	b.n	80177a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017b6a:	445a      	add	r2, fp
 8017b6c:	4484      	add	ip, r0
 8017b6e:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8017b72:	e78f      	b.n	8017a94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8017b74:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8017b78:	fa1f f18e 	uxth.w	r1, lr
 8017b7c:	eb01 0806 	add.w	r8, r1, r6
 8017b80:	b293      	uxth	r3, r2
 8017b82:	fa1f f888 	uxth.w	r8, r8
 8017b86:	9306      	str	r3, [sp, #24]
 8017b88:	fa0f f388 	sxth.w	r3, r8
 8017b8c:	9307      	str	r3, [sp, #28]
 8017b8e:	9f06      	ldr	r7, [sp, #24]
 8017b90:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8017b94:	443b      	add	r3, r7
 8017b96:	b29b      	uxth	r3, r3
 8017b98:	4596      	cmp	lr, r2
 8017b9a:	9308      	str	r3, [sp, #32]
 8017b9c:	da24      	bge.n	8017be8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8017b9e:	9905      	ldr	r1, [sp, #20]
 8017ba0:	eba3 0308 	sub.w	r3, r3, r8
 8017ba4:	ebaa 0401 	sub.w	r4, sl, r1
 8017ba8:	b2a4      	uxth	r4, r4
 8017baa:	b29b      	uxth	r3, r3
 8017bac:	b225      	sxth	r5, r4
 8017bae:	b219      	sxth	r1, r3
 8017bb0:	eba2 020e 	sub.w	r2, r2, lr
 8017bb4:	eba9 0000 	sub.w	r0, r9, r0
 8017bb8:	436a      	muls	r2, r5
 8017bba:	4348      	muls	r0, r1
 8017bbc:	4282      	cmp	r2, r0
 8017bbe:	9a02      	ldr	r2, [sp, #8]
 8017bc0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8017bc4:	445a      	add	r2, fp
 8017bc6:	dc06      	bgt.n	8017bd6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8017bc8:	9b07      	ldr	r3, [sp, #28]
 8017bca:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8017bce:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8017bd2:	44a4      	add	ip, r4
 8017bd4:	e75e      	b.n	8017a94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8017bd6:	9904      	ldr	r1, [sp, #16]
 8017bd8:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8017bdc:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8017be0:	4433      	add	r3, r6
 8017be2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8017be6:	e5df      	b.n	80177a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017be8:	9f06      	ldr	r7, [sp, #24]
 8017bea:	9b04      	ldr	r3, [sp, #16]
 8017bec:	1bc9      	subs	r1, r1, r7
 8017bee:	fa0f f78a 	sxth.w	r7, sl
 8017bf2:	b289      	uxth	r1, r1
 8017bf4:	429f      	cmp	r7, r3
 8017bf6:	fa0f fe81 	sxth.w	lr, r1
 8017bfa:	dd23      	ble.n	8017c44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8017bfc:	9a05      	ldr	r2, [sp, #20]
 8017bfe:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8017c02:	9d07      	ldr	r5, [sp, #28]
 8017c04:	ebaa 0202 	sub.w	r2, sl, r2
 8017c08:	b292      	uxth	r2, r2
 8017c0a:	eba5 0a03 	sub.w	sl, r5, r3
 8017c0e:	b214      	sxth	r4, r2
 8017c10:	eba9 0000 	sub.w	r0, r9, r0
 8017c14:	9b02      	ldr	r3, [sp, #8]
 8017c16:	fb0e f000 	mul.w	r0, lr, r0
 8017c1a:	fb04 fa0a 	mul.w	sl, r4, sl
 8017c1e:	00db      	lsls	r3, r3, #3
 8017c20:	4550      	cmp	r0, sl
 8017c22:	445b      	add	r3, fp
 8017c24:	db03      	blt.n	8017c2e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8017c26:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8017c2a:	4494      	add	ip, r2
 8017c2c:	e732      	b.n	8017a94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8017c2e:	9a04      	ldr	r2, [sp, #16]
 8017c30:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8017c34:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8017c38:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8017c3c:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017c40:	4431      	add	r1, r6
 8017c42:	e75c      	b.n	8017afe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8017c44:	9b08      	ldr	r3, [sp, #32]
 8017c46:	eba3 0308 	sub.w	r3, r3, r8
 8017c4a:	b29b      	uxth	r3, r3
 8017c4c:	2d06      	cmp	r5, #6
 8017c4e:	b218      	sxth	r0, r3
 8017c50:	d813      	bhi.n	8017c7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8017c52:	9b07      	ldr	r3, [sp, #28]
 8017c54:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8017c58:	1c6b      	adds	r3, r5, #1
 8017c5a:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8017c5e:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8017c62:	9b01      	ldr	r3, [sp, #4]
 8017c64:	9901      	ldr	r1, [sp, #4]
 8017c66:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8017c6a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8017c6e:	805a      	strh	r2, [r3, #2]
 8017c70:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017c72:	809a      	strh	r2, [r3, #4]
 8017c74:	f8a3 e006 	strh.w	lr, [r3, #6]
 8017c78:	e75f      	b.n	8017b3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8017c7a:	9c02      	ldr	r4, [sp, #8]
 8017c7c:	4570      	cmp	r0, lr
 8017c7e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8017c82:	db0d      	blt.n	8017ca0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8017c84:	4431      	add	r1, r6
 8017c86:	9b06      	ldr	r3, [sp, #24]
 8017c88:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8017c8c:	b289      	uxth	r1, r1
 8017c8e:	445c      	add	r4, fp
 8017c90:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8017c94:	4419      	add	r1, r3
 8017c96:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8017c9a:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8017c9e:	e583      	b.n	80177a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017ca0:	445c      	add	r4, fp
 8017ca2:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8017ca6:	e79b      	b.n	8017be0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8017ca8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8017cac:	1e65      	subs	r5, r4, #1
 8017cae:	b2ad      	uxth	r5, r5
 8017cb0:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8017cb4:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8017cb8:	42b5      	cmp	r5, r6
 8017cba:	d044      	beq.n	8017d46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8017cbc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017cc0:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8017cc4:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8017cc8:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8017ccc:	4282      	cmp	r2, r0
 8017cce:	d11f      	bne.n	8017d10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8017cd0:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8017cd4:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8017cd8:	459c      	cmp	ip, r3
 8017cda:	d119      	bne.n	8017d10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8017cdc:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8017ce0:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8017ce4:	19d8      	adds	r0, r3, r7
 8017ce6:	b200      	sxth	r0, r0
 8017ce8:	4288      	cmp	r0, r1
 8017cea:	d109      	bne.n	8017d00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8017cec:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8017cf0:	4413      	add	r3, r2
 8017cf2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8017cf6:	4629      	mov	r1, r5
 8017cf8:	9801      	ldr	r0, [sp, #4]
 8017cfa:	f7ff fd2b 	bl	8017754 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017cfe:	e003      	b.n	8017d08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8017d00:	4411      	add	r1, r2
 8017d02:	b209      	sxth	r1, r1
 8017d04:	42b9      	cmp	r1, r7
 8017d06:	d0f3      	beq.n	8017cf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8017d08:	3d01      	subs	r5, #1
 8017d0a:	b2ad      	uxth	r5, r5
 8017d0c:	3c08      	subs	r4, #8
 8017d0e:	e7d3      	b.n	8017cb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8017d10:	42b9      	cmp	r1, r7
 8017d12:	d1f9      	bne.n	8017d08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8017d14:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8017d18:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8017d1c:	4299      	cmp	r1, r3
 8017d1e:	d1f3      	bne.n	8017d08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8017d20:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8017d24:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8017d28:	181f      	adds	r7, r3, r0
 8017d2a:	b23f      	sxth	r7, r7
 8017d2c:	42ba      	cmp	r2, r7
 8017d2e:	d105      	bne.n	8017d3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8017d30:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8017d34:	440b      	add	r3, r1
 8017d36:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8017d3a:	e7dc      	b.n	8017cf6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8017d3c:	440a      	add	r2, r1
 8017d3e:	b212      	sxth	r2, r2
 8017d40:	4290      	cmp	r0, r2
 8017d42:	d1e1      	bne.n	8017d08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8017d44:	e7f6      	b.n	8017d34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8017d46:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8017d4a:	2e07      	cmp	r6, #7
 8017d4c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8017d50:	d812      	bhi.n	8017d78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8017d52:	1c75      	adds	r5, r6, #1
 8017d54:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8017d58:	9d01      	ldr	r5, [sp, #4]
 8017d5a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8017d5e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8017d62:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8017d66:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8017d6a:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8017d6e:	442c      	add	r4, r5
 8017d70:	8061      	strh	r1, [r4, #2]
 8017d72:	80a2      	strh	r2, [r4, #4]
 8017d74:	80e3      	strh	r3, [r4, #6]
 8017d76:	e581      	b.n	801787c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8017d78:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8017d7c:	3e01      	subs	r6, #1
 8017d7e:	445c      	add	r4, fp
 8017d80:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8017d84:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8017d88:	2500      	movs	r5, #0
 8017d8a:	9305      	str	r3, [sp, #20]
 8017d8c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8017d90:	9302      	str	r3, [sp, #8]
 8017d92:	1e72      	subs	r2, r6, #1
 8017d94:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8017d98:	9304      	str	r3, [sp, #16]
 8017d9a:	4691      	mov	r9, r2
 8017d9c:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8017da0:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
 8017da4:	bf14      	ite	ne
 8017da6:	9905      	ldrne	r1, [sp, #20]
 8017da8:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8017dac:	6818      	ldr	r0, [r3, #0]
 8017dae:	9207      	str	r2, [sp, #28]
 8017db0:	bf18      	it	ne
 8017db2:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8017db6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8017dba:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8017dbe:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8017dc2:	9306      	str	r3, [sp, #24]
 8017dc4:	fb18 f801 	smulbb	r8, r8, r1
 8017dc8:	6859      	ldr	r1, [r3, #4]
 8017dca:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017dce:	4671      	mov	r1, lr
 8017dd0:	a80c      	add	r0, sp, #48	; 0x30
 8017dd2:	f7ff fb23 	bl	801741c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8017dd6:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8017dda:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8017dde:	9b04      	ldr	r3, [sp, #16]
 8017de0:	9a02      	ldr	r2, [sp, #8]
 8017de2:	fb10 f001 	smulbb	r0, r0, r1
 8017de6:	fb02 8803 	mla	r8, r2, r3, r8
 8017dea:	eba0 0108 	sub.w	r1, r0, r8
 8017dee:	f04f 0c08 	mov.w	ip, #8
 8017df2:	fb90 f0fc 	sdiv	r0, r0, ip
 8017df6:	4288      	cmp	r0, r1
 8017df8:	dc20      	bgt.n	8017e3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8017dfa:	4551      	cmp	r1, sl
 8017dfc:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8017e00:	da03      	bge.n	8017e0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8017e02:	b1d9      	cbz	r1, 8017e3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8017e04:	468a      	mov	sl, r1
 8017e06:	464f      	mov	r7, r9
 8017e08:	4635      	mov	r5, r6
 8017e0a:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8017e0e:	f119 0f02 	cmn.w	r9, #2
 8017e12:	d1c5      	bne.n	8017da0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8017e14:	4616      	mov	r6, r2
 8017e16:	3201      	adds	r2, #1
 8017e18:	f1a4 0408 	sub.w	r4, r4, #8
 8017e1c:	d1b6      	bne.n	8017d8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8017e1e:	9b01      	ldr	r3, [sp, #4]
 8017e20:	b2ac      	uxth	r4, r5
 8017e22:	00ed      	lsls	r5, r5, #3
 8017e24:	1958      	adds	r0, r3, r5
 8017e26:	1c7b      	adds	r3, r7, #1
 8017e28:	d10b      	bne.n	8017e42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8017e2a:	4601      	mov	r1, r0
 8017e2c:	9803      	ldr	r0, [sp, #12]
 8017e2e:	f7ff faf5 	bl	801741c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8017e32:	4621      	mov	r1, r4
 8017e34:	9801      	ldr	r0, [sp, #4]
 8017e36:	f7ff fc8d 	bl	8017754 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017e3a:	e4b5      	b.n	80177a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017e3c:	464f      	mov	r7, r9
 8017e3e:	4635      	mov	r5, r6
 8017e40:	e7ed      	b.n	8017e1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8017e42:	9b01      	ldr	r3, [sp, #4]
 8017e44:	00ff      	lsls	r7, r7, #3
 8017e46:	19d9      	adds	r1, r3, r7
 8017e48:	f7ff fae8 	bl	801741c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8017e4c:	9b03      	ldr	r3, [sp, #12]
 8017e4e:	cb03      	ldmia	r3!, {r0, r1}
 8017e50:	445f      	add	r7, fp
 8017e52:	445d      	add	r5, fp
 8017e54:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8017e58:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8017e5c:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8017e60:	9b03      	ldr	r3, [sp, #12]
 8017e62:	6869      	ldr	r1, [r5, #4]
 8017e64:	c303      	stmia	r3!, {r0, r1}
 8017e66:	e7e4      	b.n	8017e32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08017e68 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8017e68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e6c:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8017e70:	b09b      	sub	sp, #108	; 0x6c
 8017e72:	4604      	mov	r4, r0
 8017e74:	4630      	mov	r0, r6
 8017e76:	f7fa fbf4 	bl	8012662 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017e7a:	4605      	mov	r5, r0
 8017e7c:	b948      	cbnz	r0, 8017e92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8017e7e:	6823      	ldr	r3, [r4, #0]
 8017e80:	e896 0006 	ldmia.w	r6, {r1, r2}
 8017e84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017e86:	4620      	mov	r0, r4
 8017e88:	4798      	blx	r3
 8017e8a:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8017e8e:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8017e92:	4bc6      	ldr	r3, [pc, #792]	; (80181ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8017e94:	681b      	ldr	r3, [r3, #0]
 8017e96:	2b00      	cmp	r3, #0
 8017e98:	d03f      	beq.n	8017f1a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8017e9a:	4dc5      	ldr	r5, [pc, #788]	; (80181b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8017e9c:	4628      	mov	r0, r5
 8017e9e:	f7fa fbe0 	bl	8012662 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017ea2:	4606      	mov	r6, r0
 8017ea4:	2800      	cmp	r0, #0
 8017ea6:	d138      	bne.n	8017f1a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8017ea8:	4628      	mov	r0, r5
 8017eaa:	f7ff f939 	bl	8017120 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8017eae:	6823      	ldr	r3, [r4, #0]
 8017eb0:	6829      	ldr	r1, [r5, #0]
 8017eb2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017eb4:	686a      	ldr	r2, [r5, #4]
 8017eb6:	4620      	mov	r0, r4
 8017eb8:	4798      	blx	r3
 8017eba:	802e      	strh	r6, [r5, #0]
 8017ebc:	806e      	strh	r6, [r5, #2]
 8017ebe:	80ae      	strh	r6, [r5, #4]
 8017ec0:	80ee      	strh	r6, [r5, #6]
 8017ec2:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8017ec6:	4dbb      	ldr	r5, [pc, #748]	; (80181b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8017ec8:	4640      	mov	r0, r8
 8017eca:	f7ff fbeb 	bl	80176a4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8017ece:	882e      	ldrh	r6, [r5, #0]
 8017ed0:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8017ed4:	4633      	mov	r3, r6
 8017ed6:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8017eda:	42bb      	cmp	r3, r7
 8017edc:	d224      	bcs.n	8017f28 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8017ede:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8017ee2:	2907      	cmp	r1, #7
 8017ee4:	d816      	bhi.n	8017f14 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8017ee6:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8017eea:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8017eee:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8017ef2:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8017ef6:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8017efa:	1c4a      	adds	r2, r1, #1
 8017efc:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8017f00:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8017f04:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8017f08:	f8a2 a002 	strh.w	sl, [r2, #2]
 8017f0c:	f8a2 e004 	strh.w	lr, [r2, #4]
 8017f10:	f8a2 c006 	strh.w	ip, [r2, #6]
 8017f14:	3301      	adds	r3, #1
 8017f16:	b29b      	uxth	r3, r3
 8017f18:	e7df      	b.n	8017eda <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8017f1a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8017f1e:	2b00      	cmp	r3, #0
 8017f20:	d1cf      	bne.n	8017ec2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8017f22:	b01b      	add	sp, #108	; 0x6c
 8017f24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f28:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8017f2c:	42b3      	cmp	r3, r6
 8017f2e:	d90c      	bls.n	8017f4a <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8017f30:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8017f34:	6822      	ldr	r2, [r4, #0]
 8017f36:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8017f3a:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8017f3c:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8017f40:	4620      	mov	r0, r4
 8017f42:	3601      	adds	r6, #1
 8017f44:	47b8      	blx	r7
 8017f46:	b2b6      	uxth	r6, r6
 8017f48:	e7ee      	b.n	8017f28 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8017f4a:	4a9b      	ldr	r2, [pc, #620]	; (80181b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8017f4c:	6813      	ldr	r3, [r2, #0]
 8017f4e:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8017f52:	2b01      	cmp	r3, #1
 8017f54:	4691      	mov	r9, r2
 8017f56:	f040 80e2 	bne.w	801811e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8017f5a:	8829      	ldrh	r1, [r5, #0]
 8017f5c:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8017f60:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8017f64:	33ae      	adds	r3, #174	; 0xae
 8017f66:	2600      	movs	r6, #0
 8017f68:	428f      	cmp	r7, r1
 8017f6a:	f103 0308 	add.w	r3, r3, #8
 8017f6e:	dd0a      	ble.n	8017f86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8017f70:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8017f74:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8017f78:	4402      	add	r2, r0
 8017f7a:	b212      	sxth	r2, r2
 8017f7c:	4296      	cmp	r6, r2
 8017f7e:	bfb8      	it	lt
 8017f80:	4616      	movlt	r6, r2
 8017f82:	3101      	adds	r1, #1
 8017f84:	e7f0      	b.n	8017f68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8017f86:	4b8d      	ldr	r3, [pc, #564]	; (80181bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8017f88:	f8df 922c 	ldr.w	r9, [pc, #556]	; 80181b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8017f8c:	881b      	ldrh	r3, [r3, #0]
 8017f8e:	2b0f      	cmp	r3, #15
 8017f90:	bf88      	it	hi
 8017f92:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8017f96:	f04f 0300 	mov.w	r3, #0
 8017f9a:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8017f9e:	bf98      	it	ls
 8017fa0:	f04f 0b01 	movls.w	fp, #1
 8017fa4:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8017fa8:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8017fac:	4b82      	ldr	r3, [pc, #520]	; (80181b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8017fae:	4438      	add	r0, r7
 8017fb0:	b207      	sxth	r7, r0
 8017fb2:	6818      	ldr	r0, [r3, #0]
 8017fb4:	42b7      	cmp	r7, r6
 8017fb6:	6803      	ldr	r3, [r0, #0]
 8017fb8:	f280 8083 	bge.w	80180c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8017fbc:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8017fc0:	4798      	blx	r3
 8017fc2:	eb07 030b 	add.w	r3, r7, fp
 8017fc6:	4298      	cmp	r0, r3
 8017fc8:	da07      	bge.n	8017fda <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8017fca:	42b0      	cmp	r0, r6
 8017fcc:	da05      	bge.n	8017fda <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8017fce:	4287      	cmp	r7, r0
 8017fd0:	dd6c      	ble.n	80180ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8017fd2:	2f00      	cmp	r7, #0
 8017fd4:	dd6a      	ble.n	80180ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8017fd6:	4630      	mov	r0, r6
 8017fd8:	e004      	b.n	8017fe4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8017fda:	4287      	cmp	r7, r0
 8017fdc:	dcfb      	bgt.n	8017fd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8017fde:	42b0      	cmp	r0, r6
 8017fe0:	bfa8      	it	ge
 8017fe2:	4630      	movge	r0, r6
 8017fe4:	4b76      	ldr	r3, [pc, #472]	; (80181c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8017fe6:	f8ad 7016 	strh.w	r7, [sp, #22]
 8017fea:	1bc0      	subs	r0, r0, r7
 8017fec:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017ff0:	882f      	ldrh	r7, [r5, #0]
 8017ff2:	f8ad 3018 	strh.w	r3, [sp, #24]
 8017ff6:	2200      	movs	r2, #0
 8017ff8:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017ffc:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018000:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8018004:	42bb      	cmp	r3, r7
 8018006:	d9cd      	bls.n	8017fa4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8018008:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 801800c:	ab07      	add	r3, sp, #28
 801800e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8018012:	6851      	ldr	r1, [r2, #4]
 8018014:	c303      	stmia	r3!, {r0, r1}
 8018016:	a905      	add	r1, sp, #20
 8018018:	a807      	add	r0, sp, #28
 801801a:	f7ff f967 	bl	80172ec <_ZNK8touchgfx4Rect9intersectERKS0_>
 801801e:	2800      	cmp	r0, #0
 8018020:	d04c      	beq.n	80180bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8018022:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8018026:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 801802a:	f8bd a020 	ldrh.w	sl, [sp, #32]
 801802e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8018032:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8018036:	9302      	str	r3, [sp, #8]
 8018038:	4686      	mov	lr, r0
 801803a:	4290      	cmp	r0, r2
 801803c:	4450      	add	r0, sl
 801803e:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8018042:	bfb8      	it	lt
 8018044:	4696      	movlt	lr, r2
 8018046:	4452      	add	r2, sl
 8018048:	4299      	cmp	r1, r3
 801804a:	b280      	uxth	r0, r0
 801804c:	b292      	uxth	r2, r2
 801804e:	468c      	mov	ip, r1
 8018050:	fa0f fa82 	sxth.w	sl, r2
 8018054:	bfb8      	it	lt
 8018056:	469c      	movlt	ip, r3
 8018058:	b203      	sxth	r3, r0
 801805a:	4553      	cmp	r3, sl
 801805c:	bfb8      	it	lt
 801805e:	4602      	movlt	r2, r0
 8018060:	eba2 020e 	sub.w	r2, r2, lr
 8018064:	f8ad 2020 	strh.w	r2, [sp, #32]
 8018068:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801806c:	9b02      	ldr	r3, [sp, #8]
 801806e:	f8ad e01c 	strh.w	lr, [sp, #28]
 8018072:	4411      	add	r1, r2
 8018074:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8018078:	f8ad c01e 	strh.w	ip, [sp, #30]
 801807c:	4413      	add	r3, r2
 801807e:	b289      	uxth	r1, r1
 8018080:	b29b      	uxth	r3, r3
 8018082:	b208      	sxth	r0, r1
 8018084:	b21a      	sxth	r2, r3
 8018086:	4290      	cmp	r0, r2
 8018088:	bfb8      	it	lt
 801808a:	460b      	movlt	r3, r1
 801808c:	eba3 030c 	sub.w	r3, r3, ip
 8018090:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8018094:	a807      	add	r0, sp, #28
 8018096:	f7fa fae4 	bl	8012662 <_ZNK8touchgfx4Rect7isEmptyEv>
 801809a:	b920      	cbnz	r0, 80180a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 801809c:	6823      	ldr	r3, [r4, #0]
 801809e:	a907      	add	r1, sp, #28
 80180a0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80180a2:	4620      	mov	r0, r4
 80180a4:	4798      	blx	r3
 80180a6:	3701      	adds	r7, #1
 80180a8:	b2bf      	uxth	r7, r7
 80180aa:	e7a9      	b.n	8018000 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80180ac:	f8d9 0000 	ldr.w	r0, [r9]
 80180b0:	6803      	ldr	r3, [r0, #0]
 80180b2:	2101      	movs	r1, #1
 80180b4:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80180b8:	4798      	blx	r3
 80180ba:	e773      	b.n	8017fa4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80180bc:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80180c0:	e7e8      	b.n	8018094 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 80180c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80180c4:	4798      	blx	r3
 80180c6:	4b3f      	ldr	r3, [pc, #252]	; (80181c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80180c8:	781b      	ldrb	r3, [r3, #0]
 80180ca:	2b00      	cmp	r3, #0
 80180cc:	f43f af29 	beq.w	8017f22 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80180d0:	2300      	movs	r3, #0
 80180d2:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 80180d6:	882b      	ldrh	r3, [r5, #0]
 80180d8:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 80180dc:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80180e0:	42ab      	cmp	r3, r5
 80180e2:	f4bf af1e 	bcs.w	8017f22 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80180e6:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 80180ea:	2907      	cmp	r1, #7
 80180ec:	d814      	bhi.n	8018118 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 80180ee:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 80180f2:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 80180f6:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 80180fa:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80180fe:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8018102:	1c4a      	adds	r2, r1, #1
 8018104:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8018108:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 801810c:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8018110:	f8a2 c002 	strh.w	ip, [r2, #2]
 8018114:	8097      	strh	r7, [r2, #4]
 8018116:	80d6      	strh	r6, [r2, #6]
 8018118:	3301      	adds	r3, #1
 801811a:	b29b      	uxth	r3, r3
 801811c:	e7e0      	b.n	80180e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 801811e:	2b02      	cmp	r3, #2
 8018120:	f040 8133 	bne.w	801838a <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8018124:	4b28      	ldr	r3, [pc, #160]	; (80181c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8018126:	781b      	ldrb	r3, [r3, #0]
 8018128:	2b01      	cmp	r3, #1
 801812a:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 801812e:	f000 8098 	beq.w	8018262 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8018132:	882a      	ldrh	r2, [r5, #0]
 8018134:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8018138:	3201      	adds	r2, #1
 801813a:	b292      	uxth	r2, r2
 801813c:	2900      	cmp	r1, #0
 801813e:	d0c2      	beq.n	80180c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8018140:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8018144:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8018148:	441e      	add	r6, r3
 801814a:	b236      	sxth	r6, r6
 801814c:	4694      	mov	ip, r2
 801814e:	f04f 0900 	mov.w	r9, #0
 8018152:	fa1f f38c 	uxth.w	r3, ip
 8018156:	4299      	cmp	r1, r3
 8018158:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 801815c:	f240 80bf 	bls.w	80182de <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8018160:	4427      	add	r7, r4
 8018162:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8018166:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 801816a:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 801816e:	4283      	cmp	r3, r0
 8018170:	f340 80a1 	ble.w	80182b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8018174:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8018178:	4406      	add	r6, r0
 801817a:	b236      	sxth	r6, r6
 801817c:	429e      	cmp	r6, r3
 801817e:	bfa8      	it	ge
 8018180:	461e      	movge	r6, r3
 8018182:	46e1      	mov	r9, ip
 8018184:	f10c 0c01 	add.w	ip, ip, #1
 8018188:	e7e3      	b.n	8018152 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 801818a:	d10a      	bne.n	80181a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 801818c:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8018190:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8018194:	4562      	cmp	r2, ip
 8018196:	bfb8      	it	lt
 8018198:	4662      	movlt	r2, ip
 801819a:	4288      	cmp	r0, r1
 801819c:	bfb8      	it	lt
 801819e:	461f      	movlt	r7, r3
 80181a0:	e087      	b.n	80182b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80181a2:	428a      	cmp	r2, r1
 80181a4:	bfb8      	it	lt
 80181a6:	460a      	movlt	r2, r1
 80181a8:	e083      	b.n	80182b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80181aa:	bf00      	nop
 80181ac:	2000e200 	.word	0x2000e200
 80181b0:	2000e20c 	.word	0x2000e20c
 80181b4:	20000058 	.word	0x20000058
 80181b8:	2000e1c0 	.word	0x2000e1c0
 80181bc:	2000e1b6 	.word	0x2000e1b6
 80181c0:	2000e1b4 	.word	0x2000e1b4
 80181c4:	2000e1be 	.word	0x2000e1be
 80181c8:	2000e1b8 	.word	0x2000e1b8
 80181cc:	19a1      	adds	r1, r4, r6
 80181ce:	ab07      	add	r3, sp, #28
 80181d0:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80181d4:	6849      	ldr	r1, [r1, #4]
 80181d6:	c303      	stmia	r3!, {r0, r1}
 80181d8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80181dc:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80181e0:	2b13      	cmp	r3, #19
 80181e2:	bfd8      	it	le
 80181e4:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80181e8:	f8ad 201c 	strh.w	r2, [sp, #28]
 80181ec:	440b      	add	r3, r1
 80181ee:	1a9b      	subs	r3, r3, r2
 80181f0:	a807      	add	r0, sp, #28
 80181f2:	f8ad 3020 	strh.w	r3, [sp, #32]
 80181f6:	f7fe ffad 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80181fa:	a807      	add	r0, sp, #28
 80181fc:	f7fa fa31 	bl	8012662 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018200:	bb78      	cbnz	r0, 8018262 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8018202:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8018206:	f8d9 0000 	ldr.w	r0, [r9]
 801820a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801820e:	f8d0 e000 	ldr.w	lr, [r0]
 8018212:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8018216:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801821a:	f1bc 0f14 	cmp.w	ip, #20
 801821e:	bfa8      	it	ge
 8018220:	f04f 0c14 	movge.w	ip, #20
 8018224:	fa1f fc8c 	uxth.w	ip, ip
 8018228:	f8cd c000 	str.w	ip, [sp]
 801822c:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8018230:	47d8      	blx	fp
 8018232:	4683      	mov	fp, r0
 8018234:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8018238:	a807      	add	r0, sp, #28
 801823a:	f7fe ff71 	bl	8017120 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801823e:	6823      	ldr	r3, [r4, #0]
 8018240:	4426      	add	r6, r4
 8018242:	4620      	mov	r0, r4
 8018244:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8018246:	a907      	add	r1, sp, #28
 8018248:	4798      	blx	r3
 801824a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801824e:	eba0 000b 	sub.w	r0, r0, fp
 8018252:	b200      	sxth	r0, r0
 8018254:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8018258:	b918      	cbnz	r0, 8018262 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801825a:	b2b9      	uxth	r1, r7
 801825c:	4650      	mov	r0, sl
 801825e:	f7ff fa79 	bl	8017754 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018262:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8018266:	f1bb 0f00 	cmp.w	fp, #0
 801826a:	f43f af2c 	beq.w	80180c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801826e:	882b      	ldrh	r3, [r5, #0]
 8018270:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8018274:	3301      	adds	r3, #1
 8018276:	b29b      	uxth	r3, r3
 8018278:	2700      	movs	r7, #0
 801827a:	b299      	uxth	r1, r3
 801827c:	458b      	cmp	fp, r1
 801827e:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8018282:	d9a3      	bls.n	80181cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8018284:	4426      	add	r6, r4
 8018286:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 801828a:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 801828e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8018292:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8018296:	4408      	add	r0, r1
 8018298:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 801829c:	4461      	add	r1, ip
 801829e:	b200      	sxth	r0, r0
 80182a0:	b209      	sxth	r1, r1
 80182a2:	4288      	cmp	r0, r1
 80182a4:	f6bf af71 	bge.w	801818a <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 80182a8:	4584      	cmp	ip, r0
 80182aa:	4662      	mov	r2, ip
 80182ac:	461f      	mov	r7, r3
 80182ae:	bfb8      	it	lt
 80182b0:	4602      	movlt	r2, r0
 80182b2:	3301      	adds	r3, #1
 80182b4:	e7e1      	b.n	801827a <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 80182b6:	d10e      	bne.n	80182d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 80182b8:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 80182bc:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 80182c0:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 80182c4:	4473      	add	r3, lr
 80182c6:	b21b      	sxth	r3, r3
 80182c8:	429e      	cmp	r6, r3
 80182ca:	bfa8      	it	ge
 80182cc:	461e      	movge	r6, r3
 80182ce:	4287      	cmp	r7, r0
 80182d0:	bfb8      	it	lt
 80182d2:	46e1      	movlt	r9, ip
 80182d4:	e756      	b.n	8018184 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80182d6:	4286      	cmp	r6, r0
 80182d8:	bfa8      	it	ge
 80182da:	4606      	movge	r6, r0
 80182dc:	e752      	b.n	8018184 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80182de:	eb0a 0007 	add.w	r0, sl, r7
 80182e2:	4427      	add	r7, r4
 80182e4:	e9cd 2102 	strd	r2, r1, [sp, #8]
 80182e8:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 80182ec:	f1bb 0f13 	cmp.w	fp, #19
 80182f0:	bfde      	ittt	le
 80182f2:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 80182f6:	445e      	addle	r6, fp
 80182f8:	b236      	sxthle	r6, r6
 80182fa:	f7fa f9b2 	bl	8012662 <_ZNK8touchgfx4Rect7isEmptyEv>
 80182fe:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8018302:	2800      	cmp	r0, #0
 8018304:	f47f af1a 	bne.w	801813c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8018308:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 801830c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8018310:	482a      	ldr	r0, [pc, #168]	; (80183bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8018312:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8018316:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 801831a:	6800      	ldr	r0, [r0, #0]
 801831c:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018320:	1ab6      	subs	r6, r6, r2
 8018322:	2e14      	cmp	r6, #20
 8018324:	f8ad 201e 	strh.w	r2, [sp, #30]
 8018328:	f8ad 3020 	strh.w	r3, [sp, #32]
 801832c:	bfa8      	it	ge
 801832e:	2614      	movge	r6, #20
 8018330:	f8d0 c000 	ldr.w	ip, [r0]
 8018334:	b2b6      	uxth	r6, r6
 8018336:	fa1f fb8b 	uxth.w	fp, fp
 801833a:	455e      	cmp	r6, fp
 801833c:	bf94      	ite	ls
 801833e:	9600      	strls	r6, [sp, #0]
 8018340:	f8cd b000 	strhi.w	fp, [sp]
 8018344:	b292      	uxth	r2, r2
 8018346:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 801834a:	b29b      	uxth	r3, r3
 801834c:	b289      	uxth	r1, r1
 801834e:	47b0      	blx	r6
 8018350:	6823      	ldr	r3, [r4, #0]
 8018352:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8018356:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8018358:	a907      	add	r1, sp, #28
 801835a:	4620      	mov	r0, r4
 801835c:	4798      	blx	r3
 801835e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8018362:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8018366:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 801836a:	1a5b      	subs	r3, r3, r1
 801836c:	440a      	add	r2, r1
 801836e:	b21b      	sxth	r3, r3
 8018370:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8018374:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8018378:	2b00      	cmp	r3, #0
 801837a:	f47f aeda 	bne.w	8018132 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 801837e:	fa1f f189 	uxth.w	r1, r9
 8018382:	4650      	mov	r0, sl
 8018384:	f7ff f9e6 	bl	8017754 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018388:	e6d3      	b.n	8018132 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 801838a:	882e      	ldrh	r6, [r5, #0]
 801838c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8018390:	42b3      	cmp	r3, r6
 8018392:	f67f ae98 	bls.w	80180c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8018396:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 801839a:	ab07      	add	r3, sp, #28
 801839c:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80183a0:	6851      	ldr	r1, [r2, #4]
 80183a2:	c303      	stmia	r3!, {r0, r1}
 80183a4:	a807      	add	r0, sp, #28
 80183a6:	f7fa f95c 	bl	8012662 <_ZNK8touchgfx4Rect7isEmptyEv>
 80183aa:	b920      	cbnz	r0, 80183b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 80183ac:	6823      	ldr	r3, [r4, #0]
 80183ae:	a907      	add	r1, sp, #28
 80183b0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80183b2:	4620      	mov	r0, r4
 80183b4:	4798      	blx	r3
 80183b6:	3601      	adds	r6, #1
 80183b8:	b2b6      	uxth	r6, r6
 80183ba:	e7e7      	b.n	801838c <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 80183bc:	2000e1c0 	.word	0x2000e1c0

080183c0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80183c0:	4b03      	ldr	r3, [pc, #12]	; (80183d0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80183c2:	2200      	movs	r2, #0
 80183c4:	801a      	strh	r2, [r3, #0]
 80183c6:	805a      	strh	r2, [r3, #2]
 80183c8:	809a      	strh	r2, [r3, #4]
 80183ca:	80da      	strh	r2, [r3, #6]
 80183cc:	4770      	bx	lr
 80183ce:	bf00      	nop
 80183d0:	2000e20c 	.word	0x2000e20c

080183d4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80183d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183d8:	4606      	mov	r6, r0
 80183da:	b09d      	sub	sp, #116	; 0x74
 80183dc:	a803      	add	r0, sp, #12
 80183de:	4614      	mov	r4, r2
 80183e0:	468a      	mov	sl, r1
 80183e2:	461d      	mov	r5, r3
 80183e4:	f000 fe8f 	bl	8019106 <_ZN8touchgfx12TextProviderC1Ev>
 80183e8:	6833      	ldr	r3, [r6, #0]
 80183ea:	4630      	mov	r0, r6
 80183ec:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80183ee:	4798      	blx	r3
 80183f0:	6833      	ldr	r3, [r6, #0]
 80183f2:	4607      	mov	r7, r0
 80183f4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80183f6:	4630      	mov	r0, r6
 80183f8:	4798      	blx	r3
 80183fa:	462a      	mov	r2, r5
 80183fc:	9000      	str	r0, [sp, #0]
 80183fe:	4621      	mov	r1, r4
 8018400:	463b      	mov	r3, r7
 8018402:	a803      	add	r0, sp, #12
 8018404:	f000 feda 	bl	80191bc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018408:	2500      	movs	r5, #0
 801840a:	462c      	mov	r4, r5
 801840c:	46a9      	mov	r9, r5
 801840e:	46a8      	mov	r8, r5
 8018410:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8018414:	2300      	movs	r3, #0
 8018416:	9302      	str	r3, [sp, #8]
 8018418:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801841c:	429c      	cmp	r4, r3
 801841e:	d002      	beq.n	8018426 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8018420:	455c      	cmp	r4, fp
 8018422:	bf18      	it	ne
 8018424:	4625      	movne	r5, r4
 8018426:	ab02      	add	r3, sp, #8
 8018428:	4632      	mov	r2, r6
 801842a:	4651      	mov	r1, sl
 801842c:	a803      	add	r0, sp, #12
 801842e:	f001 f9c7 	bl	80197c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8018432:	4604      	mov	r4, r0
 8018434:	b108      	cbz	r0, 801843a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8018436:	280a      	cmp	r0, #10
 8018438:	d10a      	bne.n	8018450 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801843a:	45c1      	cmp	r9, r8
 801843c:	bf38      	it	cc
 801843e:	46c1      	movcc	r9, r8
 8018440:	f04f 0800 	mov.w	r8, #0
 8018444:	2c00      	cmp	r4, #0
 8018446:	d1e5      	bne.n	8018414 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8018448:	4648      	mov	r0, r9
 801844a:	b01d      	add	sp, #116	; 0x74
 801844c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018450:	9a02      	ldr	r2, [sp, #8]
 8018452:	2a00      	cmp	r2, #0
 8018454:	d0de      	beq.n	8018414 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8018456:	7b57      	ldrb	r7, [r2, #13]
 8018458:	6833      	ldr	r3, [r6, #0]
 801845a:	8894      	ldrh	r4, [r2, #4]
 801845c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801845e:	007f      	lsls	r7, r7, #1
 8018460:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8018464:	7a97      	ldrb	r7, [r2, #10]
 8018466:	4629      	mov	r1, r5
 8018468:	4307      	orrs	r7, r0
 801846a:	4630      	mov	r0, r6
 801846c:	4798      	blx	r3
 801846e:	4438      	add	r0, r7
 8018470:	4480      	add	r8, r0
 8018472:	fa1f f888 	uxth.w	r8, r8
 8018476:	e7e5      	b.n	8018444 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08018478 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8018478:	b508      	push	{r3, lr}
 801847a:	6803      	ldr	r3, [r0, #0]
 801847c:	68db      	ldr	r3, [r3, #12]
 801847e:	4798      	blx	r3
 8018480:	b128      	cbz	r0, 801848e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8018482:	7b43      	ldrb	r3, [r0, #13]
 8018484:	7a80      	ldrb	r0, [r0, #10]
 8018486:	005b      	lsls	r3, r3, #1
 8018488:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801848c:	4318      	orrs	r0, r3
 801848e:	bd08      	pop	{r3, pc}

08018490 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8018490:	b40e      	push	{r1, r2, r3}
 8018492:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018494:	b09e      	sub	sp, #120	; 0x78
 8018496:	ab23      	add	r3, sp, #140	; 0x8c
 8018498:	4605      	mov	r5, r0
 801849a:	f853 4b04 	ldr.w	r4, [r3], #4
 801849e:	9303      	str	r3, [sp, #12]
 80184a0:	a805      	add	r0, sp, #20
 80184a2:	f000 fe30 	bl	8019106 <_ZN8touchgfx12TextProviderC1Ev>
 80184a6:	682b      	ldr	r3, [r5, #0]
 80184a8:	4628      	mov	r0, r5
 80184aa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80184ac:	4798      	blx	r3
 80184ae:	682b      	ldr	r3, [r5, #0]
 80184b0:	4606      	mov	r6, r0
 80184b2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80184b4:	4628      	mov	r0, r5
 80184b6:	4798      	blx	r3
 80184b8:	4633      	mov	r3, r6
 80184ba:	ae1e      	add	r6, sp, #120	; 0x78
 80184bc:	4621      	mov	r1, r4
 80184be:	9000      	str	r0, [sp, #0]
 80184c0:	9a03      	ldr	r2, [sp, #12]
 80184c2:	2400      	movs	r4, #0
 80184c4:	a805      	add	r0, sp, #20
 80184c6:	f000 fe79 	bl	80191bc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80184ca:	f846 4d68 	str.w	r4, [r6, #-104]!
 80184ce:	462a      	mov	r2, r5
 80184d0:	4633      	mov	r3, r6
 80184d2:	4621      	mov	r1, r4
 80184d4:	a805      	add	r0, sp, #20
 80184d6:	f001 f973 	bl	80197c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80184da:	b1f0      	cbz	r0, 801851a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80184dc:	280a      	cmp	r0, #10
 80184de:	d018      	beq.n	8018512 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80184e0:	9f04      	ldr	r7, [sp, #16]
 80184e2:	b1b7      	cbz	r7, 8018512 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80184e4:	7b78      	ldrb	r0, [r7, #13]
 80184e6:	7a3b      	ldrb	r3, [r7, #8]
 80184e8:	88ea      	ldrh	r2, [r5, #6]
 80184ea:	00c1      	lsls	r1, r0, #3
 80184ec:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80184f0:	4319      	orrs	r1, r3
 80184f2:	0643      	lsls	r3, r0, #25
 80184f4:	bf44      	itt	mi
 80184f6:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 80184fa:	b219      	sxthmi	r1, r3
 80184fc:	0100      	lsls	r0, r0, #4
 80184fe:	79fb      	ldrb	r3, [r7, #7]
 8018500:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8018504:	4303      	orrs	r3, r0
 8018506:	4413      	add	r3, r2
 8018508:	1a5b      	subs	r3, r3, r1
 801850a:	b21b      	sxth	r3, r3
 801850c:	429c      	cmp	r4, r3
 801850e:	bfb8      	it	lt
 8018510:	461c      	movlt	r4, r3
 8018512:	4633      	mov	r3, r6
 8018514:	462a      	mov	r2, r5
 8018516:	2100      	movs	r1, #0
 8018518:	e7dc      	b.n	80184d4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 801851a:	b2a0      	uxth	r0, r4
 801851c:	b01e      	add	sp, #120	; 0x78
 801851e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8018522:	b003      	add	sp, #12
 8018524:	4770      	bx	lr

08018526 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8018526:	7a43      	ldrb	r3, [r0, #9]
 8018528:	8880      	ldrh	r0, [r0, #4]
 801852a:	4418      	add	r0, r3
 801852c:	b280      	uxth	r0, r0
 801852e:	4770      	bx	lr

08018530 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8018530:	6803      	ldr	r3, [r0, #0]
 8018532:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8018534:	4718      	bx	r3

08018536 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8018536:	b40e      	push	{r1, r2, r3}
 8018538:	b570      	push	{r4, r5, r6, lr}
 801853a:	b09d      	sub	sp, #116	; 0x74
 801853c:	ab21      	add	r3, sp, #132	; 0x84
 801853e:	4604      	mov	r4, r0
 8018540:	f853 5b04 	ldr.w	r5, [r3], #4
 8018544:	9302      	str	r3, [sp, #8]
 8018546:	a803      	add	r0, sp, #12
 8018548:	f000 fddd 	bl	8019106 <_ZN8touchgfx12TextProviderC1Ev>
 801854c:	6823      	ldr	r3, [r4, #0]
 801854e:	4620      	mov	r0, r4
 8018550:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8018552:	4798      	blx	r3
 8018554:	6823      	ldr	r3, [r4, #0]
 8018556:	4606      	mov	r6, r0
 8018558:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801855a:	4620      	mov	r0, r4
 801855c:	4798      	blx	r3
 801855e:	4633      	mov	r3, r6
 8018560:	9000      	str	r0, [sp, #0]
 8018562:	9a02      	ldr	r2, [sp, #8]
 8018564:	4629      	mov	r1, r5
 8018566:	a803      	add	r0, sp, #12
 8018568:	f000 fe28 	bl	80191bc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801856c:	a803      	add	r0, sp, #12
 801856e:	f001 f9f5 	bl	801995c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8018572:	2401      	movs	r4, #1
 8018574:	b2a3      	uxth	r3, r4
 8018576:	b140      	cbz	r0, 801858a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8018578:	280a      	cmp	r0, #10
 801857a:	bf08      	it	eq
 801857c:	3301      	addeq	r3, #1
 801857e:	a803      	add	r0, sp, #12
 8018580:	bf08      	it	eq
 8018582:	b21c      	sxtheq	r4, r3
 8018584:	f001 f9ea 	bl	801995c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8018588:	e7f4      	b.n	8018574 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801858a:	4618      	mov	r0, r3
 801858c:	b01d      	add	sp, #116	; 0x74
 801858e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018592:	b003      	add	sp, #12
 8018594:	4770      	bx	lr

08018596 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8018596:	b40e      	push	{r1, r2, r3}
 8018598:	b5f0      	push	{r4, r5, r6, r7, lr}
 801859a:	b09e      	sub	sp, #120	; 0x78
 801859c:	ab23      	add	r3, sp, #140	; 0x8c
 801859e:	4604      	mov	r4, r0
 80185a0:	f853 5b04 	ldr.w	r5, [r3], #4
 80185a4:	9303      	str	r3, [sp, #12]
 80185a6:	a805      	add	r0, sp, #20
 80185a8:	f000 fdad 	bl	8019106 <_ZN8touchgfx12TextProviderC1Ev>
 80185ac:	6823      	ldr	r3, [r4, #0]
 80185ae:	4620      	mov	r0, r4
 80185b0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80185b2:	4798      	blx	r3
 80185b4:	6823      	ldr	r3, [r4, #0]
 80185b6:	4606      	mov	r6, r0
 80185b8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80185ba:	4620      	mov	r0, r4
 80185bc:	4798      	blx	r3
 80185be:	4633      	mov	r3, r6
 80185c0:	4629      	mov	r1, r5
 80185c2:	9000      	str	r0, [sp, #0]
 80185c4:	9a03      	ldr	r2, [sp, #12]
 80185c6:	a805      	add	r0, sp, #20
 80185c8:	ad1e      	add	r5, sp, #120	; 0x78
 80185ca:	f000 fdf7 	bl	80191bc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80185ce:	2100      	movs	r1, #0
 80185d0:	f845 1d68 	str.w	r1, [r5, #-104]!
 80185d4:	4622      	mov	r2, r4
 80185d6:	462b      	mov	r3, r5
 80185d8:	a805      	add	r0, sp, #20
 80185da:	f001 f8f1 	bl	80197c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80185de:	f647 76ff 	movw	r6, #32767	; 0x7fff
 80185e2:	b1d8      	cbz	r0, 801861c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80185e4:	280a      	cmp	r0, #10
 80185e6:	d012      	beq.n	801860e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80185e8:	9804      	ldr	r0, [sp, #16]
 80185ea:	b180      	cbz	r0, 801860e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80185ec:	7b47      	ldrb	r7, [r0, #13]
 80185ee:	88e2      	ldrh	r2, [r4, #6]
 80185f0:	00fb      	lsls	r3, r7, #3
 80185f2:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80185f6:	7a03      	ldrb	r3, [r0, #8]
 80185f8:	430b      	orrs	r3, r1
 80185fa:	0679      	lsls	r1, r7, #25
 80185fc:	bf44      	itt	mi
 80185fe:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018602:	b21b      	sxthmi	r3, r3
 8018604:	1ad3      	subs	r3, r2, r3
 8018606:	b21b      	sxth	r3, r3
 8018608:	429e      	cmp	r6, r3
 801860a:	bfa8      	it	ge
 801860c:	461e      	movge	r6, r3
 801860e:	462b      	mov	r3, r5
 8018610:	4622      	mov	r2, r4
 8018612:	2100      	movs	r1, #0
 8018614:	a805      	add	r0, sp, #20
 8018616:	f001 f8d3 	bl	80197c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801861a:	e7e2      	b.n	80185e2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 801861c:	4630      	mov	r0, r6
 801861e:	b01e      	add	sp, #120	; 0x78
 8018620:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8018624:	b003      	add	sp, #12
 8018626:	4770      	bx	lr

08018628 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8018628:	b513      	push	{r0, r1, r4, lr}
 801862a:	6803      	ldr	r3, [r0, #0]
 801862c:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8018630:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8018634:	f8ad 1004 	strh.w	r1, [sp, #4]
 8018638:	2400      	movs	r4, #0
 801863a:	9400      	str	r4, [sp, #0]
 801863c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8018640:	691b      	ldr	r3, [r3, #16]
 8018642:	4669      	mov	r1, sp
 8018644:	4798      	blx	r3
 8018646:	b002      	add	sp, #8
 8018648:	bd10      	pop	{r4, pc}

0801864a <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801864a:	b538      	push	{r3, r4, r5, lr}
 801864c:	680b      	ldr	r3, [r1, #0]
 801864e:	460c      	mov	r4, r1
 8018650:	68db      	ldr	r3, [r3, #12]
 8018652:	4605      	mov	r5, r0
 8018654:	4798      	blx	r3
 8018656:	6823      	ldr	r3, [r4, #0]
 8018658:	4620      	mov	r0, r4
 801865a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801865c:	4629      	mov	r1, r5
 801865e:	4798      	blx	r3
 8018660:	4628      	mov	r0, r5
 8018662:	bd38      	pop	{r3, r4, r5, pc}

08018664 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8018664:	b410      	push	{r4}
 8018666:	880a      	ldrh	r2, [r1, #0]
 8018668:	8884      	ldrh	r4, [r0, #4]
 801866a:	4422      	add	r2, r4
 801866c:	800a      	strh	r2, [r1, #0]
 801866e:	88c4      	ldrh	r4, [r0, #6]
 8018670:	884a      	ldrh	r2, [r1, #2]
 8018672:	4422      	add	r2, r4
 8018674:	804a      	strh	r2, [r1, #2]
 8018676:	6940      	ldr	r0, [r0, #20]
 8018678:	b120      	cbz	r0, 8018684 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801867a:	6803      	ldr	r3, [r0, #0]
 801867c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018680:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018682:	4718      	bx	r3
 8018684:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018688:	4770      	bx	lr

0801868a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801868a:	b570      	push	{r4, r5, r6, lr}
 801868c:	8882      	ldrh	r2, [r0, #4]
 801868e:	880b      	ldrh	r3, [r1, #0]
 8018690:	4413      	add	r3, r2
 8018692:	800b      	strh	r3, [r1, #0]
 8018694:	88c2      	ldrh	r2, [r0, #6]
 8018696:	884b      	ldrh	r3, [r1, #2]
 8018698:	460c      	mov	r4, r1
 801869a:	4413      	add	r3, r2
 801869c:	804b      	strh	r3, [r1, #2]
 801869e:	4605      	mov	r5, r0
 80186a0:	1d01      	adds	r1, r0, #4
 80186a2:	4620      	mov	r0, r4
 80186a4:	f7f9 ff9a 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 80186a8:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80186ac:	2b00      	cmp	r3, #0
 80186ae:	dd0b      	ble.n	80186c8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80186b0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80186b4:	2b00      	cmp	r3, #0
 80186b6:	dd07      	ble.n	80186c8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80186b8:	6968      	ldr	r0, [r5, #20]
 80186ba:	b128      	cbz	r0, 80186c8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80186bc:	6803      	ldr	r3, [r0, #0]
 80186be:	4621      	mov	r1, r4
 80186c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80186c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80186c6:	4718      	bx	r3
 80186c8:	bd70      	pop	{r4, r5, r6, pc}
	...

080186cc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80186cc:	b570      	push	{r4, r5, r6, lr}
 80186ce:	8882      	ldrh	r2, [r0, #4]
 80186d0:	880b      	ldrh	r3, [r1, #0]
 80186d2:	4413      	add	r3, r2
 80186d4:	800b      	strh	r3, [r1, #0]
 80186d6:	88c2      	ldrh	r2, [r0, #6]
 80186d8:	884b      	ldrh	r3, [r1, #2]
 80186da:	460c      	mov	r4, r1
 80186dc:	4413      	add	r3, r2
 80186de:	804b      	strh	r3, [r1, #2]
 80186e0:	4605      	mov	r5, r0
 80186e2:	1d01      	adds	r1, r0, #4
 80186e4:	4620      	mov	r0, r4
 80186e6:	f7f9 ff79 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 80186ea:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80186ee:	2b00      	cmp	r3, #0
 80186f0:	dd19      	ble.n	8018726 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80186f2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80186f6:	2b00      	cmp	r3, #0
 80186f8:	dd15      	ble.n	8018726 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80186fa:	6968      	ldr	r0, [r5, #20]
 80186fc:	b128      	cbz	r0, 801870a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80186fe:	6803      	ldr	r3, [r0, #0]
 8018700:	4621      	mov	r1, r4
 8018702:	691b      	ldr	r3, [r3, #16]
 8018704:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018708:	4718      	bx	r3
 801870a:	4b07      	ldr	r3, [pc, #28]	; (8018728 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 801870c:	681b      	ldr	r3, [r3, #0]
 801870e:	3304      	adds	r3, #4
 8018710:	429d      	cmp	r5, r3
 8018712:	d108      	bne.n	8018726 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8018714:	f7fe fec8 	bl	80174a8 <_ZN8touchgfx11Application11getInstanceEv>
 8018718:	6803      	ldr	r3, [r0, #0]
 801871a:	6821      	ldr	r1, [r4, #0]
 801871c:	6862      	ldr	r2, [r4, #4]
 801871e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8018720:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018724:	4718      	bx	r3
 8018726:	bd70      	pop	{r4, r5, r6, pc}
 8018728:	2000e204 	.word	0x2000e204

0801872c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 801872c:	b570      	push	{r4, r5, r6, lr}
 801872e:	4604      	mov	r4, r0
 8018730:	4616      	mov	r6, r2
 8018732:	460d      	mov	r5, r1
 8018734:	b901      	cbnz	r1, 8018738 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8018736:	b192      	cbz	r2, 801875e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8018738:	6823      	ldr	r3, [r4, #0]
 801873a:	4620      	mov	r0, r4
 801873c:	699b      	ldr	r3, [r3, #24]
 801873e:	4798      	blx	r3
 8018740:	88e2      	ldrh	r2, [r4, #6]
 8018742:	88a1      	ldrh	r1, [r4, #4]
 8018744:	4432      	add	r2, r6
 8018746:	4429      	add	r1, r5
 8018748:	4620      	mov	r0, r4
 801874a:	b212      	sxth	r2, r2
 801874c:	b209      	sxth	r1, r1
 801874e:	f7f3 ff52 	bl	800c5f6 <_ZN8touchgfx8Drawable5setXYEss>
 8018752:	6823      	ldr	r3, [r4, #0]
 8018754:	4620      	mov	r0, r4
 8018756:	699b      	ldr	r3, [r3, #24]
 8018758:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801875c:	4718      	bx	r3
 801875e:	bd70      	pop	{r4, r5, r6, pc}

08018760 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8018760:	b510      	push	{r4, lr}
 8018762:	4604      	mov	r4, r0
 8018764:	4608      	mov	r0, r1
 8018766:	2300      	movs	r3, #0
 8018768:	8023      	strh	r3, [r4, #0]
 801876a:	8063      	strh	r3, [r4, #2]
 801876c:	6803      	ldr	r3, [r0, #0]
 801876e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8018772:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8018776:	80a1      	strh	r1, [r4, #4]
 8018778:	80e2      	strh	r2, [r4, #6]
 801877a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801877c:	4621      	mov	r1, r4
 801877e:	4798      	blx	r3
 8018780:	4620      	mov	r0, r4
 8018782:	bd10      	pop	{r4, pc}

08018784 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8018784:	b530      	push	{r4, r5, lr}
 8018786:	8083      	strh	r3, [r0, #4]
 8018788:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 801878c:	80c3      	strh	r3, [r0, #6]
 801878e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8018792:	7203      	strb	r3, [r0, #8]
 8018794:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8018798:	f89d 5018 	ldrb.w	r5, [sp, #24]
 801879c:	7243      	strb	r3, [r0, #9]
 801879e:	7a83      	ldrb	r3, [r0, #10]
 80187a0:	6141      	str	r1, [r0, #20]
 80187a2:	f365 0306 	bfi	r3, r5, #0, #7
 80187a6:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80187aa:	8302      	strh	r2, [r0, #24]
 80187ac:	f365 13c7 	bfi	r3, r5, #7, #1
 80187b0:	7283      	strb	r3, [r0, #10]
 80187b2:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80187b6:	72c3      	strb	r3, [r0, #11]
 80187b8:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 80187bc:	7303      	strb	r3, [r0, #12]
 80187be:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80187c2:	81c3      	strh	r3, [r0, #14]
 80187c4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80187c8:	8203      	strh	r3, [r0, #16]
 80187ca:	4b01      	ldr	r3, [pc, #4]	; (80187d0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80187cc:	6003      	str	r3, [r0, #0]
 80187ce:	bd30      	pop	{r4, r5, pc}
 80187d0:	0802ce24 	.word	0x0802ce24

080187d4 <_ZNK8touchgfx9ConstFont4findEt>:
 80187d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80187d6:	6944      	ldr	r4, [r0, #20]
 80187d8:	b3bc      	cbz	r4, 801884a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80187da:	88a3      	ldrh	r3, [r4, #4]
 80187dc:	8b02      	ldrh	r2, [r0, #24]
 80187de:	1acb      	subs	r3, r1, r3
 80187e0:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 80187e4:	d431      	bmi.n	801884a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80187e6:	4293      	cmp	r3, r2
 80187e8:	dd0c      	ble.n	8018804 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80187ea:	230e      	movs	r3, #14
 80187ec:	fb03 4302 	mla	r3, r3, r2, r4
 80187f0:	889b      	ldrh	r3, [r3, #4]
 80187f2:	1a5b      	subs	r3, r3, r1
 80187f4:	1ad3      	subs	r3, r2, r3
 80187f6:	429a      	cmp	r2, r3
 80187f8:	db27      	blt.n	801884a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80187fa:	2b00      	cmp	r3, #0
 80187fc:	bfbc      	itt	lt
 80187fe:	2302      	movlt	r3, #2
 8018800:	fb92 f3f3 	sdivlt	r3, r2, r3
 8018804:	2500      	movs	r5, #0
 8018806:	260e      	movs	r6, #14
 8018808:	4295      	cmp	r5, r2
 801880a:	dc1e      	bgt.n	801884a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801880c:	fb06 4003 	mla	r0, r6, r3, r4
 8018810:	8887      	ldrh	r7, [r0, #4]
 8018812:	42b9      	cmp	r1, r7
 8018814:	d01a      	beq.n	801884c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8018816:	d20d      	bcs.n	8018834 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8018818:	1e5a      	subs	r2, r3, #1
 801881a:	4295      	cmp	r5, r2
 801881c:	dc15      	bgt.n	801884a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801881e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8018822:	1a5b      	subs	r3, r3, r1
 8018824:	1ad3      	subs	r3, r2, r3
 8018826:	429a      	cmp	r2, r3
 8018828:	db0f      	blt.n	801884a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801882a:	429d      	cmp	r5, r3
 801882c:	ddec      	ble.n	8018808 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801882e:	1953      	adds	r3, r2, r5
 8018830:	105b      	asrs	r3, r3, #1
 8018832:	e7e9      	b.n	8018808 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8018834:	1c5d      	adds	r5, r3, #1
 8018836:	42aa      	cmp	r2, r5
 8018838:	db07      	blt.n	801884a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801883a:	8a43      	ldrh	r3, [r0, #18]
 801883c:	1acb      	subs	r3, r1, r3
 801883e:	442b      	add	r3, r5
 8018840:	429d      	cmp	r5, r3
 8018842:	dc02      	bgt.n	801884a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018844:	429a      	cmp	r2, r3
 8018846:	dadf      	bge.n	8018808 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8018848:	e7f1      	b.n	801882e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801884a:	2000      	movs	r0, #0
 801884c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801884e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801884e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018850:	4604      	mov	r4, r0
 8018852:	4617      	mov	r7, r2
 8018854:	461e      	mov	r6, r3
 8018856:	b911      	cbnz	r1, 801885e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8018858:	2500      	movs	r5, #0
 801885a:	4628      	mov	r0, r5
 801885c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801885e:	290a      	cmp	r1, #10
 8018860:	d0fa      	beq.n	8018858 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8018862:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8018866:	4291      	cmp	r1, r2
 8018868:	d0f6      	beq.n	8018858 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801886a:	f242 020b 	movw	r2, #8203	; 0x200b
 801886e:	4291      	cmp	r1, r2
 8018870:	d0f2      	beq.n	8018858 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8018872:	f7ff ffaf 	bl	80187d4 <_ZNK8touchgfx9ConstFont4findEt>
 8018876:	4605      	mov	r5, r0
 8018878:	b950      	cbnz	r0, 8018890 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801887a:	6823      	ldr	r3, [r4, #0]
 801887c:	4620      	mov	r0, r4
 801887e:	691b      	ldr	r3, [r3, #16]
 8018880:	4798      	blx	r3
 8018882:	4601      	mov	r1, r0
 8018884:	4620      	mov	r0, r4
 8018886:	f7ff ffa5 	bl	80187d4 <_ZNK8touchgfx9ConstFont4findEt>
 801888a:	4605      	mov	r5, r0
 801888c:	2800      	cmp	r0, #0
 801888e:	d0e3      	beq.n	8018858 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8018890:	6823      	ldr	r3, [r4, #0]
 8018892:	4629      	mov	r1, r5
 8018894:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8018896:	4620      	mov	r0, r4
 8018898:	4798      	blx	r3
 801889a:	6038      	str	r0, [r7, #0]
 801889c:	6823      	ldr	r3, [r4, #0]
 801889e:	4620      	mov	r0, r4
 80188a0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80188a2:	4798      	blx	r3
 80188a4:	7030      	strb	r0, [r6, #0]
 80188a6:	e7d8      	b.n	801885a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080188a8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 80188a8:	b538      	push	{r3, r4, r5, lr}
 80188aa:	4605      	mov	r5, r0
 80188ac:	f002 f926 	bl	801aafc <_ZNK8touchgfx6Bitmap9getFormatEv>
 80188b0:	4604      	mov	r4, r0
 80188b2:	4628      	mov	r0, r5
 80188b4:	f002 f866 	bl	801a984 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80188b8:	2800      	cmp	r0, #0
 80188ba:	bf14      	ite	ne
 80188bc:	2002      	movne	r0, #2
 80188be:	2000      	moveq	r0, #0
 80188c0:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80188c4:	b280      	uxth	r0, r0
 80188c6:	bd38      	pop	{r3, r4, r5, pc}

080188c8 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 80188c8:	b538      	push	{r3, r4, r5, lr}
 80188ca:	4605      	mov	r5, r0
 80188cc:	f002 f916 	bl	801aafc <_ZNK8touchgfx6Bitmap9getFormatEv>
 80188d0:	4604      	mov	r4, r0
 80188d2:	4628      	mov	r0, r5
 80188d4:	f002 f856 	bl	801a984 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80188d8:	2800      	cmp	r0, #0
 80188da:	bf14      	ite	ne
 80188dc:	2002      	movne	r0, #2
 80188de:	2000      	moveq	r0, #0
 80188e0:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80188e4:	f040 0001 	orr.w	r0, r0, #1
 80188e8:	b280      	uxth	r0, r0
 80188ea:	bd38      	pop	{r3, r4, r5, pc}

080188ec <_ZN8touchgfx4clzuEm>:
 80188ec:	4603      	mov	r3, r0
 80188ee:	b1c8      	cbz	r0, 8018924 <_ZN8touchgfx4clzuEm+0x38>
 80188f0:	0c02      	lsrs	r2, r0, #16
 80188f2:	0412      	lsls	r2, r2, #16
 80188f4:	b9a2      	cbnz	r2, 8018920 <_ZN8touchgfx4clzuEm+0x34>
 80188f6:	0403      	lsls	r3, r0, #16
 80188f8:	2010      	movs	r0, #16
 80188fa:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80188fe:	bf04      	itt	eq
 8018900:	021b      	lsleq	r3, r3, #8
 8018902:	3008      	addeq	r0, #8
 8018904:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8018908:	bf04      	itt	eq
 801890a:	011b      	lsleq	r3, r3, #4
 801890c:	3004      	addeq	r0, #4
 801890e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8018912:	bf04      	itt	eq
 8018914:	009b      	lsleq	r3, r3, #2
 8018916:	3002      	addeq	r0, #2
 8018918:	2b00      	cmp	r3, #0
 801891a:	db04      	blt.n	8018926 <_ZN8touchgfx4clzuEm+0x3a>
 801891c:	3001      	adds	r0, #1
 801891e:	4770      	bx	lr
 8018920:	2000      	movs	r0, #0
 8018922:	e7ea      	b.n	80188fa <_ZN8touchgfx4clzuEm+0xe>
 8018924:	2020      	movs	r0, #32
 8018926:	4770      	bx	lr

08018928 <_ZN8touchgfx7muldivuEmmmRm>:
 8018928:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801892c:	460f      	mov	r7, r1
 801892e:	4615      	mov	r5, r2
 8018930:	461e      	mov	r6, r3
 8018932:	4601      	mov	r1, r0
 8018934:	b100      	cbz	r0, 8018938 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8018936:	b927      	cbnz	r7, 8018942 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8018938:	2000      	movs	r0, #0
 801893a:	6030      	str	r0, [r6, #0]
 801893c:	b002      	add	sp, #8
 801893e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018942:	f7ff ffd3 	bl	80188ec <_ZN8touchgfx4clzuEm>
 8018946:	b980      	cbnz	r0, 801896a <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8018948:	4638      	mov	r0, r7
 801894a:	f7ff ffcf 	bl	80188ec <_ZN8touchgfx4clzuEm>
 801894e:	2800      	cmp	r0, #0
 8018950:	dd05      	ble.n	801895e <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8018952:	4633      	mov	r3, r6
 8018954:	462a      	mov	r2, r5
 8018956:	4638      	mov	r0, r7
 8018958:	f7ff ffe6 	bl	8018928 <_ZN8touchgfx7muldivuEmmmRm>
 801895c:	e7ee      	b.n	801893c <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801895e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8018962:	6033      	str	r3, [r6, #0]
 8018964:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8018968:	e7e8      	b.n	801893c <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801896a:	fa37 f800 	lsrs.w	r8, r7, r0
 801896e:	fb07 f301 	mul.w	r3, r7, r1
 8018972:	d105      	bne.n	8018980 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8018974:	fbb3 f0f5 	udiv	r0, r3, r5
 8018978:	fb05 3510 	mls	r5, r5, r0, r3
 801897c:	6035      	str	r5, [r6, #0]
 801897e:	e7dd      	b.n	801893c <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8018980:	2301      	movs	r3, #1
 8018982:	fa01 fa00 	lsl.w	sl, r1, r0
 8018986:	fa03 f000 	lsl.w	r0, r3, r0
 801898a:	3801      	subs	r0, #1
 801898c:	462a      	mov	r2, r5
 801898e:	4633      	mov	r3, r6
 8018990:	4038      	ands	r0, r7
 8018992:	f7ff ffc9 	bl	8018928 <_ZN8touchgfx7muldivuEmmmRm>
 8018996:	fbba f9f5 	udiv	r9, sl, r5
 801899a:	462a      	mov	r2, r5
 801899c:	4607      	mov	r7, r0
 801899e:	ab01      	add	r3, sp, #4
 80189a0:	fb05 a119 	mls	r1, r5, r9, sl
 80189a4:	4640      	mov	r0, r8
 80189a6:	f7ff ffbf 	bl	8018928 <_ZN8touchgfx7muldivuEmmmRm>
 80189aa:	9b01      	ldr	r3, [sp, #4]
 80189ac:	6832      	ldr	r2, [r6, #0]
 80189ae:	fb08 f409 	mul.w	r4, r8, r9
 80189b2:	441a      	add	r2, r3
 80189b4:	fbb2 f3f5 	udiv	r3, r2, r5
 80189b8:	441c      	add	r4, r3
 80189ba:	443c      	add	r4, r7
 80189bc:	4420      	add	r0, r4
 80189be:	fb05 2513 	mls	r5, r5, r3, r2
 80189c2:	e7db      	b.n	801897c <_ZN8touchgfx7muldivuEmmmRm+0x54>

080189c4 <_ZN8touchgfx6muldivElllRl>:
 80189c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80189c6:	2800      	cmp	r0, #0
 80189c8:	bfba      	itte	lt
 80189ca:	4240      	neglt	r0, r0
 80189cc:	f04f 34ff 	movlt.w	r4, #4294967295	; 0xffffffff
 80189d0:	2401      	movge	r4, #1
 80189d2:	2900      	cmp	r1, #0
 80189d4:	bfbc      	itt	lt
 80189d6:	4249      	neglt	r1, r1
 80189d8:	4264      	neglt	r4, r4
 80189da:	2a00      	cmp	r2, #0
 80189dc:	bfb6      	itet	lt
 80189de:	4265      	neglt	r5, r4
 80189e0:	4625      	movge	r5, r4
 80189e2:	4252      	neglt	r2, r2
 80189e4:	4288      	cmp	r0, r1
 80189e6:	461e      	mov	r6, r3
 80189e8:	bfc2      	ittt	gt
 80189ea:	4603      	movgt	r3, r0
 80189ec:	4608      	movgt	r0, r1
 80189ee:	4619      	movgt	r1, r3
 80189f0:	ab01      	add	r3, sp, #4
 80189f2:	f7ff ff99 	bl	8018928 <_ZN8touchgfx7muldivuEmmmRm>
 80189f6:	9b01      	ldr	r3, [sp, #4]
 80189f8:	4368      	muls	r0, r5
 80189fa:	435c      	muls	r4, r3
 80189fc:	6034      	str	r4, [r6, #0]
 80189fe:	b002      	add	sp, #8
 8018a00:	bd70      	pop	{r4, r5, r6, pc}

08018a02 <_ZN8touchgfx6muldivElll>:
 8018a02:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8018a04:	4606      	mov	r6, r0
 8018a06:	ab01      	add	r3, sp, #4
 8018a08:	460d      	mov	r5, r1
 8018a0a:	4614      	mov	r4, r2
 8018a0c:	f7ff ffda 	bl	80189c4 <_ZN8touchgfx6muldivElllRl>
 8018a10:	2e00      	cmp	r6, #0
 8018a12:	db20      	blt.n	8018a56 <_ZN8touchgfx6muldivElll+0x54>
 8018a14:	bf14      	ite	ne
 8018a16:	2301      	movne	r3, #1
 8018a18:	2300      	moveq	r3, #0
 8018a1a:	2d00      	cmp	r5, #0
 8018a1c:	db1e      	blt.n	8018a5c <_ZN8touchgfx6muldivElll+0x5a>
 8018a1e:	bf14      	ite	ne
 8018a20:	2201      	movne	r2, #1
 8018a22:	2200      	moveq	r2, #0
 8018a24:	2c00      	cmp	r4, #0
 8018a26:	fb03 f202 	mul.w	r2, r3, r2
 8018a2a:	db1a      	blt.n	8018a62 <_ZN8touchgfx6muldivElll+0x60>
 8018a2c:	bf14      	ite	ne
 8018a2e:	2301      	movne	r3, #1
 8018a30:	2300      	moveq	r3, #0
 8018a32:	4353      	muls	r3, r2
 8018a34:	2b01      	cmp	r3, #1
 8018a36:	d117      	bne.n	8018a68 <_ZN8touchgfx6muldivElll+0x66>
 8018a38:	9b01      	ldr	r3, [sp, #4]
 8018a3a:	2c00      	cmp	r4, #0
 8018a3c:	bfb8      	it	lt
 8018a3e:	4264      	neglt	r4, r4
 8018a40:	2b00      	cmp	r3, #0
 8018a42:	f104 0401 	add.w	r4, r4, #1
 8018a46:	bfb8      	it	lt
 8018a48:	425b      	neglt	r3, r3
 8018a4a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8018a4e:	db00      	blt.n	8018a52 <_ZN8touchgfx6muldivElll+0x50>
 8018a50:	3001      	adds	r0, #1
 8018a52:	b002      	add	sp, #8
 8018a54:	bd70      	pop	{r4, r5, r6, pc}
 8018a56:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8018a5a:	e7de      	b.n	8018a1a <_ZN8touchgfx6muldivElll+0x18>
 8018a5c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8018a60:	e7e0      	b.n	8018a24 <_ZN8touchgfx6muldivElll+0x22>
 8018a62:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8018a66:	e7e4      	b.n	8018a32 <_ZN8touchgfx6muldivElll+0x30>
 8018a68:	3301      	adds	r3, #1
 8018a6a:	d1f2      	bne.n	8018a52 <_ZN8touchgfx6muldivElll+0x50>
 8018a6c:	9b01      	ldr	r3, [sp, #4]
 8018a6e:	2c00      	cmp	r4, #0
 8018a70:	bfb8      	it	lt
 8018a72:	4264      	neglt	r4, r4
 8018a74:	2b00      	cmp	r3, #0
 8018a76:	bfb8      	it	lt
 8018a78:	425b      	neglt	r3, r3
 8018a7a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8018a7e:	bfc8      	it	gt
 8018a80:	f100 30ff 	addgt.w	r0, r0, #4294967295	; 0xffffffff
 8018a84:	e7e5      	b.n	8018a52 <_ZN8touchgfx6muldivElll+0x50>

08018a86 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8018a86:	2000      	movs	r0, #0
 8018a88:	4770      	bx	lr

08018a8a <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8018a8a:	2001      	movs	r0, #1
 8018a8c:	4770      	bx	lr

08018a8e <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8018a8e:	2002      	movs	r0, #2
 8018a90:	4770      	bx	lr

08018a92 <_ZN8touchgfx12GestureEventD1Ev>:
 8018a92:	4770      	bx	lr

08018a94 <_ZN8touchgfx9DragEventD1Ev>:
 8018a94:	4770      	bx	lr

08018a96 <_ZN8touchgfx10ClickEventD1Ev>:
 8018a96:	4770      	bx	lr

08018a98 <_ZN8touchgfx10ClickEventD0Ev>:
 8018a98:	b510      	push	{r4, lr}
 8018a9a:	210c      	movs	r1, #12
 8018a9c:	4604      	mov	r4, r0
 8018a9e:	f00f fe18 	bl	80286d2 <_ZdlPvj>
 8018aa2:	4620      	mov	r0, r4
 8018aa4:	bd10      	pop	{r4, pc}

08018aa6 <_ZN8touchgfx9DragEventD0Ev>:
 8018aa6:	b510      	push	{r4, lr}
 8018aa8:	2110      	movs	r1, #16
 8018aaa:	4604      	mov	r4, r0
 8018aac:	f00f fe11 	bl	80286d2 <_ZdlPvj>
 8018ab0:	4620      	mov	r0, r4
 8018ab2:	bd10      	pop	{r4, pc}

08018ab4 <_ZN8touchgfx12GestureEventD0Ev>:
 8018ab4:	b510      	push	{r4, lr}
 8018ab6:	210c      	movs	r1, #12
 8018ab8:	4604      	mov	r4, r0
 8018aba:	f00f fe0a 	bl	80286d2 <_ZdlPvj>
 8018abe:	4620      	mov	r0, r4
 8018ac0:	bd10      	pop	{r4, pc}
	...

08018ac4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8018ac4:	b530      	push	{r4, r5, lr}
 8018ac6:	460d      	mov	r5, r1
 8018ac8:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8018aca:	b087      	sub	sp, #28
 8018acc:	4604      	mov	r4, r0
 8018ace:	b301      	cbz	r1, 8018b12 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8018ad0:	a801      	add	r0, sp, #4
 8018ad2:	f7ff fe45 	bl	8018760 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018ad6:	892a      	ldrh	r2, [r5, #8]
 8018ad8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8018adc:	7928      	ldrb	r0, [r5, #4]
 8018ade:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8018ae2:	f88d 0010 	strb.w	r0, [sp, #16]
 8018ae6:	1ad2      	subs	r2, r2, r3
 8018ae8:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8018aea:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8018aec:	f8ad 1012 	strh.w	r1, [sp, #18]
 8018af0:	441a      	add	r2, r3
 8018af2:	896b      	ldrh	r3, [r5, #10]
 8018af4:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8018af8:	f8ad 2014 	strh.w	r2, [sp, #20]
 8018afc:	1b5b      	subs	r3, r3, r5
 8018afe:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8018b00:	442b      	add	r3, r5
 8018b02:	4d05      	ldr	r5, [pc, #20]	; (8018b18 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8018b04:	9503      	str	r5, [sp, #12]
 8018b06:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018b0a:	6803      	ldr	r3, [r0, #0]
 8018b0c:	a903      	add	r1, sp, #12
 8018b0e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8018b10:	4798      	blx	r3
 8018b12:	b007      	add	sp, #28
 8018b14:	bd30      	pop	{r4, r5, pc}
 8018b16:	bf00      	nop
 8018b18:	0802ceac 	.word	0x0802ceac

08018b1c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8018b1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018b20:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8018b22:	b08a      	sub	sp, #40	; 0x28
 8018b24:	4604      	mov	r4, r0
 8018b26:	460d      	mov	r5, r1
 8018b28:	b113      	cbz	r3, 8018b30 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8018b2a:	790b      	ldrb	r3, [r1, #4]
 8018b2c:	2b00      	cmp	r3, #0
 8018b2e:	d044      	beq.n	8018bba <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8018b30:	f104 0804 	add.w	r8, r4, #4
 8018b34:	4641      	mov	r1, r8
 8018b36:	a803      	add	r0, sp, #12
 8018b38:	f7ff fe12 	bl	8018760 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018b3c:	792b      	ldrb	r3, [r5, #4]
 8018b3e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8018b42:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8018b46:	b983      	cbnz	r3, 8018b6a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8018b48:	892a      	ldrh	r2, [r5, #8]
 8018b4a:	88e9      	ldrh	r1, [r5, #6]
 8018b4c:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8018b50:	1b92      	subs	r2, r2, r6
 8018b52:	1bc9      	subs	r1, r1, r7
 8018b54:	9301      	str	r3, [sp, #4]
 8018b56:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8018b5a:	9300      	str	r3, [sp, #0]
 8018b5c:	b212      	sxth	r2, r2
 8018b5e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8018b62:	b209      	sxth	r1, r1
 8018b64:	4640      	mov	r0, r8
 8018b66:	f7f9 fc55 	bl	8012414 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8018b6a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8018b6c:	b329      	cbz	r1, 8018bba <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8018b6e:	a805      	add	r0, sp, #20
 8018b70:	f7ff fdf6 	bl	8018760 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018b74:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8018b78:	792b      	ldrb	r3, [r5, #4]
 8018b7a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8018b7c:	f88d 3020 	strb.w	r3, [sp, #32]
 8018b80:	1abf      	subs	r7, r7, r2
 8018b82:	88ea      	ldrh	r2, [r5, #6]
 8018b84:	4417      	add	r7, r2
 8018b86:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8018b88:	4417      	add	r7, r2
 8018b8a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8018b8e:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8018b92:	1ab6      	subs	r6, r6, r2
 8018b94:	892a      	ldrh	r2, [r5, #8]
 8018b96:	4416      	add	r6, r2
 8018b98:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018b9a:	4416      	add	r6, r2
 8018b9c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8018ba0:	4a07      	ldr	r2, [pc, #28]	; (8018bc0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8018ba2:	9207      	str	r2, [sp, #28]
 8018ba4:	2600      	movs	r6, #0
 8018ba6:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8018baa:	6803      	ldr	r3, [r0, #0]
 8018bac:	a907      	add	r1, sp, #28
 8018bae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018bb0:	4798      	blx	r3
 8018bb2:	792b      	ldrb	r3, [r5, #4]
 8018bb4:	b10b      	cbz	r3, 8018bba <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8018bb6:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8018bba:	b00a      	add	sp, #40	; 0x28
 8018bbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018bc0:	0802ce84 	.word	0x0802ce84

08018bc4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8018bc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018bc8:	460c      	mov	r4, r1
 8018bca:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8018bcc:	b088      	sub	sp, #32
 8018bce:	4605      	mov	r5, r0
 8018bd0:	2900      	cmp	r1, #0
 8018bd2:	d06d      	beq.n	8018cb0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8018bd4:	4668      	mov	r0, sp
 8018bd6:	f7ff fdc3 	bl	8018760 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018bda:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8018bdc:	88e3      	ldrh	r3, [r4, #6]
 8018bde:	f9bd 8000 	ldrsh.w	r8, [sp]
 8018be2:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8018be6:	440b      	add	r3, r1
 8018be8:	b21b      	sxth	r3, r3
 8018bea:	4543      	cmp	r3, r8
 8018bec:	db31      	blt.n	8018c52 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018bee:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8018bf2:	44c4      	add	ip, r8
 8018bf4:	fa0f fc8c 	sxth.w	ip, ip
 8018bf8:	4563      	cmp	r3, ip
 8018bfa:	da2a      	bge.n	8018c52 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018bfc:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8018bfe:	8926      	ldrh	r6, [r4, #8]
 8018c00:	4416      	add	r6, r2
 8018c02:	b236      	sxth	r6, r6
 8018c04:	42be      	cmp	r6, r7
 8018c06:	db24      	blt.n	8018c52 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018c08:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8018c0c:	4438      	add	r0, r7
 8018c0e:	b200      	sxth	r0, r0
 8018c10:	4286      	cmp	r6, r0
 8018c12:	da1e      	bge.n	8018c52 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018c14:	8963      	ldrh	r3, [r4, #10]
 8018c16:	4419      	add	r1, r3
 8018c18:	b209      	sxth	r1, r1
 8018c1a:	4541      	cmp	r1, r8
 8018c1c:	db08      	blt.n	8018c30 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8018c1e:	4561      	cmp	r1, ip
 8018c20:	da06      	bge.n	8018c30 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8018c22:	89a3      	ldrh	r3, [r4, #12]
 8018c24:	441a      	add	r2, r3
 8018c26:	b212      	sxth	r2, r2
 8018c28:	42ba      	cmp	r2, r7
 8018c2a:	db01      	blt.n	8018c30 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8018c2c:	4282      	cmp	r2, r0
 8018c2e:	db10      	blt.n	8018c52 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018c30:	4b21      	ldr	r3, [pc, #132]	; (8018cb8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8018c32:	9304      	str	r3, [sp, #16]
 8018c34:	2302      	movs	r3, #2
 8018c36:	f88d 3014 	strb.w	r3, [sp, #20]
 8018c3a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8018c3c:	2300      	movs	r3, #0
 8018c3e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018c42:	f8ad 3018 	strh.w	r3, [sp, #24]
 8018c46:	f8ad 301a 	strh.w	r3, [sp, #26]
 8018c4a:	6803      	ldr	r3, [r0, #0]
 8018c4c:	a904      	add	r1, sp, #16
 8018c4e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018c50:	4798      	blx	r3
 8018c52:	1d29      	adds	r1, r5, #4
 8018c54:	a802      	add	r0, sp, #8
 8018c56:	f7ff fd83 	bl	8018760 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018c5a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8018c5e:	88e0      	ldrh	r0, [r4, #6]
 8018c60:	7921      	ldrb	r1, [r4, #4]
 8018c62:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8018c66:	8922      	ldrh	r2, [r4, #8]
 8018c68:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8018c6a:	f88d 1014 	strb.w	r1, [sp, #20]
 8018c6e:	eba3 0808 	sub.w	r8, r3, r8
 8018c72:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8018c76:	1bdf      	subs	r7, r3, r7
 8018c78:	b2bb      	uxth	r3, r7
 8018c7a:	fa1f f888 	uxth.w	r8, r8
 8018c7e:	8967      	ldrh	r7, [r4, #10]
 8018c80:	89a4      	ldrh	r4, [r4, #12]
 8018c82:	4440      	add	r0, r8
 8018c84:	4460      	add	r0, ip
 8018c86:	441a      	add	r2, r3
 8018c88:	44b8      	add	r8, r7
 8018c8a:	4423      	add	r3, r4
 8018c8c:	f8ad 0016 	strh.w	r0, [sp, #22]
 8018c90:	4433      	add	r3, r6
 8018c92:	4432      	add	r2, r6
 8018c94:	44e0      	add	r8, ip
 8018c96:	4c09      	ldr	r4, [pc, #36]	; (8018cbc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8018c98:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8018c9a:	9404      	str	r4, [sp, #16]
 8018c9c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018ca0:	f8ad 801a 	strh.w	r8, [sp, #26]
 8018ca4:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018ca8:	6803      	ldr	r3, [r0, #0]
 8018caa:	a904      	add	r1, sp, #16
 8018cac:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8018cae:	4798      	blx	r3
 8018cb0:	b008      	add	sp, #32
 8018cb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018cb6:	bf00      	nop
 8018cb8:	0802ce84 	.word	0x0802ce84
 8018cbc:	0802ce98 	.word	0x0802ce98

08018cc0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8018cc0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8018cc2:	4604      	mov	r4, r0
 8018cc4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8018cc8:	3201      	adds	r2, #1
 8018cca:	d112      	bne.n	8018cf2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8018ccc:	6803      	ldr	r3, [r0, #0]
 8018cce:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8018cd2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8018cd6:	f8ad 1004 	strh.w	r1, [sp, #4]
 8018cda:	2500      	movs	r5, #0
 8018cdc:	9500      	str	r5, [sp, #0]
 8018cde:	466d      	mov	r5, sp
 8018ce0:	4629      	mov	r1, r5
 8018ce2:	f8ad 2006 	strh.w	r2, [sp, #6]
 8018ce6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018ce8:	4798      	blx	r3
 8018cea:	e895 0003 	ldmia.w	r5, {r0, r1}
 8018cee:	e884 0003 	stmia.w	r4, {r0, r1}
 8018cf2:	4620      	mov	r0, r4
 8018cf4:	b003      	add	sp, #12
 8018cf6:	bd30      	pop	{r4, r5, pc}

08018cf8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8018cf8:	b513      	push	{r0, r1, r4, lr}
 8018cfa:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8018cfe:	3301      	adds	r3, #1
 8018d00:	4604      	mov	r4, r0
 8018d02:	d109      	bne.n	8018d18 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8018d04:	4601      	mov	r1, r0
 8018d06:	4668      	mov	r0, sp
 8018d08:	f7ff fd2a 	bl	8018760 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018d0c:	f8bd 3000 	ldrh.w	r3, [sp]
 8018d10:	8423      	strh	r3, [r4, #32]
 8018d12:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8018d16:	8463      	strh	r3, [r4, #34]	; 0x22
 8018d18:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8018d1c:	b002      	add	sp, #8
 8018d1e:	bd10      	pop	{r4, pc}

08018d20 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8018d20:	b513      	push	{r0, r1, r4, lr}
 8018d22:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8018d26:	3301      	adds	r3, #1
 8018d28:	4604      	mov	r4, r0
 8018d2a:	d109      	bne.n	8018d40 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8018d2c:	4601      	mov	r1, r0
 8018d2e:	4668      	mov	r0, sp
 8018d30:	f7ff fd16 	bl	8018760 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018d34:	f8bd 3000 	ldrh.w	r3, [sp]
 8018d38:	8423      	strh	r3, [r4, #32]
 8018d3a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8018d3e:	8463      	strh	r3, [r4, #34]	; 0x22
 8018d40:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8018d44:	b002      	add	sp, #8
 8018d46:	bd10      	pop	{r4, pc}

08018d48 <_ZN8touchgfx6ScreenC1Ev>:
 8018d48:	b570      	push	{r4, r5, r6, lr}
 8018d4a:	4605      	mov	r5, r0
 8018d4c:	4b16      	ldr	r3, [pc, #88]	; (8018da8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8018d4e:	f845 3b04 	str.w	r3, [r5], #4
 8018d52:	2300      	movs	r3, #0
 8018d54:	8103      	strh	r3, [r0, #8]
 8018d56:	8143      	strh	r3, [r0, #10]
 8018d58:	8183      	strh	r3, [r0, #12]
 8018d5a:	81c3      	strh	r3, [r0, #14]
 8018d5c:	8203      	strh	r3, [r0, #16]
 8018d5e:	8243      	strh	r3, [r0, #18]
 8018d60:	8283      	strh	r3, [r0, #20]
 8018d62:	82c3      	strh	r3, [r0, #22]
 8018d64:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8018d68:	6203      	str	r3, [r0, #32]
 8018d6a:	8483      	strh	r3, [r0, #36]	; 0x24
 8018d6c:	84c3      	strh	r3, [r0, #38]	; 0x26
 8018d6e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8018d72:	4a0e      	ldr	r2, [pc, #56]	; (8018dac <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8018d74:	6343      	str	r3, [r0, #52]	; 0x34
 8018d76:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8018d7a:	4b0d      	ldr	r3, [pc, #52]	; (8018db0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8018d7c:	6042      	str	r2, [r0, #4]
 8018d7e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8018d82:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8018d84:	4a0b      	ldr	r2, [pc, #44]	; (8018db4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8018d86:	4604      	mov	r4, r0
 8018d88:	2101      	movs	r1, #1
 8018d8a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8018d8e:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8018d92:	f9b2 1000 	ldrsh.w	r1, [r2]
 8018d96:	4628      	mov	r0, r5
 8018d98:	4798      	blx	r3
 8018d9a:	6863      	ldr	r3, [r4, #4]
 8018d9c:	4628      	mov	r0, r5
 8018d9e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8018da0:	4631      	mov	r1, r6
 8018da2:	4798      	blx	r3
 8018da4:	4620      	mov	r0, r4
 8018da6:	bd70      	pop	{r4, r5, r6, pc}
 8018da8:	0802cec0 	.word	0x0802cec0
 8018dac:	0802c60c 	.word	0x0802c60c
 8018db0:	2000e1b6 	.word	0x2000e1b6
 8018db4:	2000e1b4 	.word	0x2000e1b4

08018db8 <_ZN8touchgfx6Screen4drawEv>:
 8018db8:	b507      	push	{r0, r1, r2, lr}
 8018dba:	4b09      	ldr	r3, [pc, #36]	; (8018de0 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8018dbc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018dc0:	4b08      	ldr	r3, [pc, #32]	; (8018de4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8018dc2:	f8ad 2004 	strh.w	r2, [sp, #4]
 8018dc6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8018dca:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018dce:	6803      	ldr	r3, [r0, #0]
 8018dd0:	2100      	movs	r1, #0
 8018dd2:	9100      	str	r1, [sp, #0]
 8018dd4:	689b      	ldr	r3, [r3, #8]
 8018dd6:	4669      	mov	r1, sp
 8018dd8:	4798      	blx	r3
 8018dda:	b003      	add	sp, #12
 8018ddc:	f85d fb04 	ldr.w	pc, [sp], #4
 8018de0:	2000e1b4 	.word	0x2000e1b4
 8018de4:	2000e1b6 	.word	0x2000e1b6

08018de8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8018de8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018dec:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8018df0:	2b00      	cmp	r3, #0
 8018df2:	b089      	sub	sp, #36	; 0x24
 8018df4:	4680      	mov	r8, r0
 8018df6:	460c      	mov	r4, r1
 8018df8:	4615      	mov	r5, r2
 8018dfa:	dd0e      	ble.n	8018e1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018dfc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8018e00:	2b00      	cmp	r3, #0
 8018e02:	dd0a      	ble.n	8018e1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018e04:	4628      	mov	r0, r5
 8018e06:	f7ff ff5b 	bl	8018cc0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018e0a:	4621      	mov	r1, r4
 8018e0c:	f7fe fa6e 	bl	80172ec <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018e10:	69eb      	ldr	r3, [r5, #28]
 8018e12:	b928      	cbnz	r0, 8018e20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8018e14:	461d      	mov	r5, r3
 8018e16:	2b00      	cmp	r3, #0
 8018e18:	d1f4      	bne.n	8018e04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8018e1a:	b009      	add	sp, #36	; 0x24
 8018e1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018e20:	ae04      	add	r6, sp, #16
 8018e22:	2b00      	cmp	r3, #0
 8018e24:	f000 80b5 	beq.w	8018f92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8018e28:	682b      	ldr	r3, [r5, #0]
 8018e2a:	4629      	mov	r1, r5
 8018e2c:	68db      	ldr	r3, [r3, #12]
 8018e2e:	a802      	add	r0, sp, #8
 8018e30:	4798      	blx	r3
 8018e32:	4628      	mov	r0, r5
 8018e34:	f7ff ff60 	bl	8018cf8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8018e38:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8018e3c:	4407      	add	r7, r0
 8018e3e:	4628      	mov	r0, r5
 8018e40:	f7ff ff6e 	bl	8018d20 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8018e44:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8018e48:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8018e4c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8018e50:	4418      	add	r0, r3
 8018e52:	4621      	mov	r1, r4
 8018e54:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8018e58:	f8ad 0012 	strh.w	r0, [sp, #18]
 8018e5c:	b23f      	sxth	r7, r7
 8018e5e:	4630      	mov	r0, r6
 8018e60:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018e64:	f8ad 7010 	strh.w	r7, [sp, #16]
 8018e68:	f7f9 fbb8 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 8018e6c:	4628      	mov	r0, r5
 8018e6e:	f7ff ff27 	bl	8018cc0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018e72:	4602      	mov	r2, r0
 8018e74:	e896 0003 	ldmia.w	r6, {r0, r1}
 8018e78:	ab06      	add	r3, sp, #24
 8018e7a:	e883 0003 	stmia.w	r3, {r0, r1}
 8018e7e:	4611      	mov	r1, r2
 8018e80:	4618      	mov	r0, r3
 8018e82:	f7f9 fbab 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 8018e86:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8018e8a:	f9b4 1000 	ldrsh.w	r1, [r4]
 8018e8e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8018e92:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8018e96:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8018e9a:	4299      	cmp	r1, r3
 8018e9c:	d10b      	bne.n	8018eb6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018e9e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018ea2:	4552      	cmp	r2, sl
 8018ea4:	d107      	bne.n	8018eb6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018ea6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8018eaa:	455a      	cmp	r2, fp
 8018eac:	d103      	bne.n	8018eb6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018eae:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8018eb2:	454a      	cmp	r2, r9
 8018eb4:	d06d      	beq.n	8018f92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8018eb6:	f1bb 0f00 	cmp.w	fp, #0
 8018eba:	dd65      	ble.n	8018f88 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8018ebc:	f1b9 0f00 	cmp.w	r9, #0
 8018ec0:	dd62      	ble.n	8018f88 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8018ec2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018ec6:	fa1f f08a 	uxth.w	r0, sl
 8018eca:	4552      	cmp	r2, sl
 8018ecc:	9000      	str	r0, [sp, #0]
 8018ece:	da12      	bge.n	8018ef6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8018ed0:	9301      	str	r3, [sp, #4]
 8018ed2:	9b00      	ldr	r3, [sp, #0]
 8018ed4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018ed8:	f8ad 2012 	strh.w	r2, [sp, #18]
 8018edc:	1a9a      	subs	r2, r3, r2
 8018ede:	f8ad 1010 	strh.w	r1, [sp, #16]
 8018ee2:	f8ad 0014 	strh.w	r0, [sp, #20]
 8018ee6:	f8ad 2016 	strh.w	r2, [sp, #22]
 8018eea:	69ea      	ldr	r2, [r5, #28]
 8018eec:	4631      	mov	r1, r6
 8018eee:	4640      	mov	r0, r8
 8018ef0:	f7ff ff7a 	bl	8018de8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018ef4:	9b01      	ldr	r3, [sp, #4]
 8018ef6:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018efa:	429a      	cmp	r2, r3
 8018efc:	b29f      	uxth	r7, r3
 8018efe:	da0d      	bge.n	8018f1c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8018f00:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018f04:	1aba      	subs	r2, r7, r2
 8018f06:	f8ad a012 	strh.w	sl, [sp, #18]
 8018f0a:	f8ad 2014 	strh.w	r2, [sp, #20]
 8018f0e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8018f12:	69ea      	ldr	r2, [r5, #28]
 8018f14:	4631      	mov	r1, r6
 8018f16:	4640      	mov	r0, r8
 8018f18:	f7ff ff66 	bl	8018de8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018f1c:	8822      	ldrh	r2, [r4, #0]
 8018f1e:	88a3      	ldrh	r3, [r4, #4]
 8018f20:	445f      	add	r7, fp
 8018f22:	4413      	add	r3, r2
 8018f24:	b29b      	uxth	r3, r3
 8018f26:	b2bf      	uxth	r7, r7
 8018f28:	b23a      	sxth	r2, r7
 8018f2a:	b219      	sxth	r1, r3
 8018f2c:	4291      	cmp	r1, r2
 8018f2e:	dd0d      	ble.n	8018f4c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8018f30:	1bdb      	subs	r3, r3, r7
 8018f32:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018f36:	f8ad a012 	strh.w	sl, [sp, #18]
 8018f3a:	f8ad 3014 	strh.w	r3, [sp, #20]
 8018f3e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8018f42:	69ea      	ldr	r2, [r5, #28]
 8018f44:	4631      	mov	r1, r6
 8018f46:	4640      	mov	r0, r8
 8018f48:	f7ff ff4e 	bl	8018de8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018f4c:	88e2      	ldrh	r2, [r4, #6]
 8018f4e:	8863      	ldrh	r3, [r4, #2]
 8018f50:	4413      	add	r3, r2
 8018f52:	9a00      	ldr	r2, [sp, #0]
 8018f54:	444a      	add	r2, r9
 8018f56:	b29b      	uxth	r3, r3
 8018f58:	fa1f f982 	uxth.w	r9, r2
 8018f5c:	fa0f f289 	sxth.w	r2, r9
 8018f60:	b219      	sxth	r1, r3
 8018f62:	428a      	cmp	r2, r1
 8018f64:	da15      	bge.n	8018f92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8018f66:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018f6a:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018f6e:	f8ad 1014 	strh.w	r1, [sp, #20]
 8018f72:	eba3 0309 	sub.w	r3, r3, r9
 8018f76:	f8ad 0010 	strh.w	r0, [sp, #16]
 8018f7a:	f8ad 2012 	strh.w	r2, [sp, #18]
 8018f7e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018f82:	69ea      	ldr	r2, [r5, #28]
 8018f84:	4631      	mov	r1, r6
 8018f86:	e001      	b.n	8018f8c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8018f88:	69ea      	ldr	r2, [r5, #28]
 8018f8a:	4621      	mov	r1, r4
 8018f8c:	4640      	mov	r0, r8
 8018f8e:	f7ff ff2b 	bl	8018de8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018f92:	4628      	mov	r0, r5
 8018f94:	f7ff fe94 	bl	8018cc0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018f98:	6861      	ldr	r1, [r4, #4]
 8018f9a:	4602      	mov	r2, r0
 8018f9c:	6820      	ldr	r0, [r4, #0]
 8018f9e:	4633      	mov	r3, r6
 8018fa0:	c303      	stmia	r3!, {r0, r1}
 8018fa2:	4611      	mov	r1, r2
 8018fa4:	4630      	mov	r0, r6
 8018fa6:	f7f9 fb19 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 8018faa:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8018fae:	2b00      	cmp	r3, #0
 8018fb0:	f77f af33 	ble.w	8018e1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018fb4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8018fb8:	2b00      	cmp	r3, #0
 8018fba:	f77f af2e 	ble.w	8018e1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018fbe:	4628      	mov	r0, r5
 8018fc0:	f7ff fe9a 	bl	8018cf8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8018fc4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8018fc8:	1a18      	subs	r0, r3, r0
 8018fca:	f8ad 0010 	strh.w	r0, [sp, #16]
 8018fce:	4628      	mov	r0, r5
 8018fd0:	f7ff fea6 	bl	8018d20 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8018fd4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8018fd8:	1a18      	subs	r0, r3, r0
 8018fda:	f8ad 0012 	strh.w	r0, [sp, #18]
 8018fde:	682b      	ldr	r3, [r5, #0]
 8018fe0:	4631      	mov	r1, r6
 8018fe2:	689b      	ldr	r3, [r3, #8]
 8018fe4:	4628      	mov	r0, r5
 8018fe6:	4798      	blx	r3
 8018fe8:	e717      	b.n	8018e1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08018fea <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8018fea:	b570      	push	{r4, r5, r6, lr}
 8018fec:	460c      	mov	r4, r1
 8018fee:	b086      	sub	sp, #24
 8018ff0:	1d06      	adds	r6, r0, #4
 8018ff2:	2300      	movs	r3, #0
 8018ff4:	4631      	mov	r1, r6
 8018ff6:	4605      	mov	r5, r0
 8018ff8:	a802      	add	r0, sp, #8
 8018ffa:	9301      	str	r3, [sp, #4]
 8018ffc:	f7ff fbb0 	bl	8018760 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019000:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8019004:	8822      	ldrh	r2, [r4, #0]
 8019006:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801900a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801900e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8019012:	1ad2      	subs	r2, r2, r3
 8019014:	8863      	ldrh	r3, [r4, #2]
 8019016:	f8ad 2010 	strh.w	r2, [sp, #16]
 801901a:	1a5b      	subs	r3, r3, r1
 801901c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8019020:	f8ad 1016 	strh.w	r1, [sp, #22]
 8019024:	aa01      	add	r2, sp, #4
 8019026:	a904      	add	r1, sp, #16
 8019028:	4630      	mov	r0, r6
 801902a:	f8ad 3012 	strh.w	r3, [sp, #18]
 801902e:	f7f9 fbad 	bl	801278c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8019032:	9a01      	ldr	r2, [sp, #4]
 8019034:	b11a      	cbz	r2, 801903e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8019036:	4621      	mov	r1, r4
 8019038:	4628      	mov	r0, r5
 801903a:	f7ff fed5 	bl	8018de8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801903e:	b006      	add	sp, #24
 8019040:	bd70      	pop	{r4, r5, r6, pc}

08019042 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8019042:	b530      	push	{r4, r5, lr}
 8019044:	4602      	mov	r2, r0
 8019046:	4604      	mov	r4, r0
 8019048:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801904c:	b085      	sub	sp, #20
 801904e:	460d      	mov	r5, r1
 8019050:	6851      	ldr	r1, [r2, #4]
 8019052:	466b      	mov	r3, sp
 8019054:	c303      	stmia	r3!, {r0, r1}
 8019056:	4629      	mov	r1, r5
 8019058:	4668      	mov	r0, sp
 801905a:	f7f9 fabf 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 801905e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8019062:	b12b      	cbz	r3, 8019070 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8019064:	4669      	mov	r1, sp
 8019066:	4620      	mov	r0, r4
 8019068:	f7ff ffbf 	bl	8018fea <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801906c:	b005      	add	sp, #20
 801906e:	bd30      	pop	{r4, r5, pc}
 8019070:	3404      	adds	r4, #4
 8019072:	4621      	mov	r1, r4
 8019074:	a802      	add	r0, sp, #8
 8019076:	f7ff fb73 	bl	8018760 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801907a:	f8bd 3000 	ldrh.w	r3, [sp]
 801907e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8019082:	1a9b      	subs	r3, r3, r2
 8019084:	f8ad 3000 	strh.w	r3, [sp]
 8019088:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801908c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8019090:	4669      	mov	r1, sp
 8019092:	1a9b      	subs	r3, r3, r2
 8019094:	4620      	mov	r0, r4
 8019096:	f8ad 3002 	strh.w	r3, [sp, #2]
 801909a:	f7f9 fb3e 	bl	801271a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801909e:	e7e5      	b.n	801906c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080190a0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80190a0:	680a      	ldr	r2, [r1, #0]
 80190a2:	460b      	mov	r3, r1
 80190a4:	6992      	ldr	r2, [r2, #24]
 80190a6:	1d01      	adds	r1, r0, #4
 80190a8:	4618      	mov	r0, r3
 80190aa:	4710      	bx	r2

080190ac <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 80190ac:	4298      	cmp	r0, r3
 80190ae:	d200      	bcs.n	80190b2 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 80190b0:	b913      	cbnz	r3, 80190b8 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 80190b2:	440a      	add	r2, r1
 80190b4:	b210      	sxth	r0, r2
 80190b6:	4770      	bx	lr
 80190b8:	ee07 2a90 	vmov	s15, r2
 80190bc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80190c0:	ee07 0a90 	vmov	s15, r0
 80190c4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80190c8:	ee67 7a27 	vmul.f32	s15, s14, s15
 80190cc:	ee07 3a10 	vmov	s14, r3
 80190d0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80190d4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80190d8:	ee07 1a90 	vmov	s15, r1
 80190dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80190e0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80190e4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80190e8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80190ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190f0:	bfcc      	ite	gt
 80190f2:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80190f6:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80190fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80190fe:	ee17 3a90 	vmov	r3, s15
 8019102:	b218      	sxth	r0, r3
 8019104:	4770      	bx	lr

08019106 <_ZN8touchgfx12TextProviderC1Ev>:
 8019106:	b538      	push	{r3, r4, r5, lr}
 8019108:	2500      	movs	r5, #0
 801910a:	2302      	movs	r3, #2
 801910c:	4604      	mov	r4, r0
 801910e:	e9c0 5500 	strd	r5, r5, [r0]
 8019112:	7403      	strb	r3, [r0, #16]
 8019114:	6145      	str	r5, [r0, #20]
 8019116:	7605      	strb	r5, [r0, #24]
 8019118:	83c5      	strh	r5, [r0, #30]
 801911a:	8405      	strh	r5, [r0, #32]
 801911c:	86c5      	strh	r5, [r0, #54]	; 0x36
 801911e:	8705      	strh	r5, [r0, #56]	; 0x38
 8019120:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8019122:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8019126:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801912a:	220e      	movs	r2, #14
 801912c:	4629      	mov	r1, r5
 801912e:	304c      	adds	r0, #76	; 0x4c
 8019130:	f00f fd78 	bl	8028c24 <memset>
 8019134:	2301      	movs	r3, #1
 8019136:	4620      	mov	r0, r4
 8019138:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801913c:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8019140:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8019144:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8019148:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801914c:	f7f6 fd62 	bl	800fc14 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8019150:	4620      	mov	r0, r4
 8019152:	bd38      	pop	{r3, r4, r5, pc}

08019154 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8019154:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8019156:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801915a:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801915c:	fab0 f080 	clz	r0, r0
 8019160:	0940      	lsrs	r0, r0, #5
 8019162:	4770      	bx	lr

08019164 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8019164:	b530      	push	{r4, r5, lr}
 8019166:	2500      	movs	r5, #0
 8019168:	2401      	movs	r4, #1
 801916a:	6843      	ldr	r3, [r0, #4]
 801916c:	b913      	cbnz	r3, 8019174 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801916e:	6803      	ldr	r3, [r0, #0]
 8019170:	b313      	cbz	r3, 80191b8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8019172:	6043      	str	r3, [r0, #4]
 8019174:	7e03      	ldrb	r3, [r0, #24]
 8019176:	b143      	cbz	r3, 801918a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8019178:	6943      	ldr	r3, [r0, #20]
 801917a:	b12b      	cbz	r3, 8019188 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801917c:	881a      	ldrh	r2, [r3, #0]
 801917e:	b11a      	cbz	r2, 8019188 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8019180:	1c9a      	adds	r2, r3, #2
 8019182:	6142      	str	r2, [r0, #20]
 8019184:	8818      	ldrh	r0, [r3, #0]
 8019186:	bd30      	pop	{r4, r5, pc}
 8019188:	7605      	strb	r5, [r0, #24]
 801918a:	6843      	ldr	r3, [r0, #4]
 801918c:	8819      	ldrh	r1, [r3, #0]
 801918e:	b199      	cbz	r1, 80191b8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8019190:	1c9a      	adds	r2, r3, #2
 8019192:	2902      	cmp	r1, #2
 8019194:	6042      	str	r2, [r0, #4]
 8019196:	d1f5      	bne.n	8019184 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8019198:	7c03      	ldrb	r3, [r0, #16]
 801919a:	2b01      	cmp	r3, #1
 801919c:	d8e5      	bhi.n	801916a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801919e:	1c5a      	adds	r2, r3, #1
 80191a0:	3302      	adds	r3, #2
 80191a2:	7402      	strb	r2, [r0, #16]
 80191a4:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80191a8:	6143      	str	r3, [r0, #20]
 80191aa:	2b00      	cmp	r3, #0
 80191ac:	d0dd      	beq.n	801916a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80191ae:	881b      	ldrh	r3, [r3, #0]
 80191b0:	2b00      	cmp	r3, #0
 80191b2:	d0da      	beq.n	801916a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80191b4:	7604      	strb	r4, [r0, #24]
 80191b6:	e7d8      	b.n	801916a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80191b8:	2000      	movs	r0, #0
 80191ba:	e7e4      	b.n	8019186 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080191bc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80191bc:	b430      	push	{r4, r5}
 80191be:	6001      	str	r1, [r0, #0]
 80191c0:	2100      	movs	r1, #0
 80191c2:	6041      	str	r1, [r0, #4]
 80191c4:	6815      	ldr	r5, [r2, #0]
 80191c6:	6085      	str	r5, [r0, #8]
 80191c8:	6852      	ldr	r2, [r2, #4]
 80191ca:	6443      	str	r3, [r0, #68]	; 0x44
 80191cc:	9b02      	ldr	r3, [sp, #8]
 80191ce:	60c2      	str	r2, [r0, #12]
 80191d0:	7401      	strb	r1, [r0, #16]
 80191d2:	6141      	str	r1, [r0, #20]
 80191d4:	7601      	strb	r1, [r0, #24]
 80191d6:	8701      	strh	r1, [r0, #56]	; 0x38
 80191d8:	8401      	strh	r1, [r0, #32]
 80191da:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 80191de:	6483      	str	r3, [r0, #72]	; 0x48
 80191e0:	bc30      	pop	{r4, r5}
 80191e2:	f7f6 bd17 	b.w	800fc14 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080191e6 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80191e6:	b408      	push	{r3}
 80191e8:	b510      	push	{r4, lr}
 80191ea:	b085      	sub	sp, #20
 80191ec:	ac07      	add	r4, sp, #28
 80191ee:	f854 3b04 	ldr.w	r3, [r4], #4
 80191f2:	9300      	str	r3, [sp, #0]
 80191f4:	4613      	mov	r3, r2
 80191f6:	4622      	mov	r2, r4
 80191f8:	9403      	str	r4, [sp, #12]
 80191fa:	f7ff ffdf 	bl	80191bc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80191fe:	b005      	add	sp, #20
 8019200:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019204:	b001      	add	sp, #4
 8019206:	4770      	bx	lr

08019208 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8019208:	b5f0      	push	{r4, r5, r6, r7, lr}
 801920a:	4605      	mov	r5, r0
 801920c:	4608      	mov	r0, r1
 801920e:	b1e9      	cbz	r1, 801924c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8019210:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8019214:	460b      	mov	r3, r1
 8019216:	f101 0708 	add.w	r7, r1, #8
 801921a:	4622      	mov	r2, r4
 801921c:	6818      	ldr	r0, [r3, #0]
 801921e:	6859      	ldr	r1, [r3, #4]
 8019220:	4626      	mov	r6, r4
 8019222:	c603      	stmia	r6!, {r0, r1}
 8019224:	3308      	adds	r3, #8
 8019226:	42bb      	cmp	r3, r7
 8019228:	4634      	mov	r4, r6
 801922a:	d1f7      	bne.n	801921c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801922c:	6818      	ldr	r0, [r3, #0]
 801922e:	6030      	str	r0, [r6, #0]
 8019230:	889b      	ldrh	r3, [r3, #4]
 8019232:	80b3      	strh	r3, [r6, #4]
 8019234:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8019238:	015b      	lsls	r3, r3, #5
 801923a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801923e:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8019242:	430b      	orrs	r3, r1
 8019244:	425b      	negs	r3, r3
 8019246:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 801924a:	4610      	mov	r0, r2
 801924c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801924e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801924e:	b538      	push	{r3, r4, r5, lr}
 8019250:	460c      	mov	r4, r1
 8019252:	6811      	ldr	r1, [r2, #0]
 8019254:	4610      	mov	r0, r2
 8019256:	68cd      	ldr	r5, [r1, #12]
 8019258:	4619      	mov	r1, r3
 801925a:	47a8      	blx	r5
 801925c:	2800      	cmp	r0, #0
 801925e:	bf08      	it	eq
 8019260:	4620      	moveq	r0, r4
 8019262:	bd38      	pop	{r3, r4, r5, pc}

08019264 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8019264:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019266:	4604      	mov	r4, r0
 8019268:	4615      	mov	r5, r2
 801926a:	4608      	mov	r0, r1
 801926c:	b93a      	cbnz	r2, 801927e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801926e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8019272:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8019276:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801927a:	4628      	mov	r0, r5
 801927c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801927e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8019282:	8893      	ldrh	r3, [r2, #4]
 8019284:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8019288:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801928c:	79ee      	ldrb	r6, [r5, #7]
 801928e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8019292:	4316      	orrs	r6, r2
 8019294:	19da      	adds	r2, r3, r7
 8019296:	b291      	uxth	r1, r2
 8019298:	291d      	cmp	r1, #29
 801929a:	b2b7      	uxth	r7, r6
 801929c:	d87a      	bhi.n	8019394 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801929e:	2201      	movs	r2, #1
 80192a0:	408a      	lsls	r2, r1
 80192a2:	4975      	ldr	r1, [pc, #468]	; (8019478 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 80192a4:	420a      	tst	r2, r1
 80192a6:	ea4f 06e6 	mov.w	r6, r6, asr #3
 80192aa:	d12d      	bne.n	8019308 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 80192ac:	f412 7f60 	tst.w	r2, #896	; 0x380
 80192b0:	d070      	beq.n	8019394 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80192b2:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 80192b6:	462b      	mov	r3, r5
 80192b8:	f105 0e08 	add.w	lr, r5, #8
 80192bc:	4615      	mov	r5, r2
 80192be:	6818      	ldr	r0, [r3, #0]
 80192c0:	6859      	ldr	r1, [r3, #4]
 80192c2:	4694      	mov	ip, r2
 80192c4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80192c8:	3308      	adds	r3, #8
 80192ca:	4573      	cmp	r3, lr
 80192cc:	4662      	mov	r2, ip
 80192ce:	d1f6      	bne.n	80192be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 80192d0:	6818      	ldr	r0, [r3, #0]
 80192d2:	f8cc 0000 	str.w	r0, [ip]
 80192d6:	889b      	ldrh	r3, [r3, #4]
 80192d8:	f8ac 3004 	strh.w	r3, [ip, #4]
 80192dc:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80192e0:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 80192e4:	b2b3      	uxth	r3, r6
 80192e6:	1aca      	subs	r2, r1, r3
 80192e8:	b292      	uxth	r2, r2
 80192ea:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 80192ee:	10d2      	asrs	r2, r2, #3
 80192f0:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 80192f4:	f002 0260 	and.w	r2, r2, #96	; 0x60
 80192f8:	4302      	orrs	r2, r0
 80192fa:	1bcf      	subs	r7, r1, r7
 80192fc:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8019300:	1afb      	subs	r3, r7, r3
 8019302:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8019306:	e7b8      	b.n	801927a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8019308:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801930a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801930e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8019310:	f640 6333 	movw	r3, #3635	; 0xe33
 8019314:	4299      	cmp	r1, r3
 8019316:	d110      	bne.n	801933a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8019318:	6803      	ldr	r3, [r0, #0]
 801931a:	68db      	ldr	r3, [r3, #12]
 801931c:	4798      	blx	r3
 801931e:	7b41      	ldrb	r1, [r0, #13]
 8019320:	00cb      	lsls	r3, r1, #3
 8019322:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8019326:	7a03      	ldrb	r3, [r0, #8]
 8019328:	0648      	lsls	r0, r1, #25
 801932a:	ea43 0302 	orr.w	r3, r3, r2
 801932e:	bf44      	itt	mi
 8019330:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019334:	b21b      	sxthmi	r3, r3
 8019336:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801933a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801933e:	443b      	add	r3, r7
 8019340:	4433      	add	r3, r6
 8019342:	b29b      	uxth	r3, r3
 8019344:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8019348:	462a      	mov	r2, r5
 801934a:	f105 0c08 	add.w	ip, r5, #8
 801934e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8019352:	4635      	mov	r5, r6
 8019354:	6810      	ldr	r0, [r2, #0]
 8019356:	6851      	ldr	r1, [r2, #4]
 8019358:	4637      	mov	r7, r6
 801935a:	c703      	stmia	r7!, {r0, r1}
 801935c:	3208      	adds	r2, #8
 801935e:	4562      	cmp	r2, ip
 8019360:	463e      	mov	r6, r7
 8019362:	d1f7      	bne.n	8019354 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8019364:	6810      	ldr	r0, [r2, #0]
 8019366:	6038      	str	r0, [r7, #0]
 8019368:	8892      	ldrh	r2, [r2, #4]
 801936a:	80ba      	strh	r2, [r7, #4]
 801936c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8019370:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8019374:	10db      	asrs	r3, r3, #3
 8019376:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801937a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801937e:	4313      	orrs	r3, r2
 8019380:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8019384:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8019388:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801938c:	1a9b      	subs	r3, r3, r2
 801938e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8019392:	e772      	b.n	801927a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8019394:	f023 0204 	bic.w	r2, r3, #4
 8019398:	f640 611b 	movw	r1, #3611	; 0xe1b
 801939c:	428a      	cmp	r2, r1
 801939e:	d003      	beq.n	80193a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 80193a0:	f640 621d 	movw	r2, #3613	; 0xe1d
 80193a4:	4293      	cmp	r3, r2
 80193a6:	d120      	bne.n	80193ea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 80193a8:	3b01      	subs	r3, #1
 80193aa:	4602      	mov	r2, r0
 80193ac:	b29b      	uxth	r3, r3
 80193ae:	4629      	mov	r1, r5
 80193b0:	4620      	mov	r0, r4
 80193b2:	f7ff ff4c 	bl	801924e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80193b6:	7b41      	ldrb	r1, [r0, #13]
 80193b8:	00cb      	lsls	r3, r1, #3
 80193ba:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80193be:	7a03      	ldrb	r3, [r0, #8]
 80193c0:	0649      	lsls	r1, r1, #25
 80193c2:	ea43 0302 	orr.w	r3, r3, r2
 80193c6:	bf44      	itt	mi
 80193c8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80193cc:	b21b      	sxthmi	r3, r3
 80193ce:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80193d2:	7b6b      	ldrb	r3, [r5, #13]
 80193d4:	7aaa      	ldrb	r2, [r5, #10]
 80193d6:	005b      	lsls	r3, r3, #1
 80193d8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80193dc:	4313      	orrs	r3, r2
 80193de:	115a      	asrs	r2, r3, #5
 80193e0:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80193e4:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80193e8:	e036      	b.n	8019458 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 80193ea:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 80193ee:	f402 7180 	and.w	r1, r2, #256	; 0x100
 80193f2:	7a2a      	ldrb	r2, [r5, #8]
 80193f4:	f01c 0f40 	tst.w	ip, #64	; 0x40
 80193f8:	ea42 0201 	orr.w	r2, r2, r1
 80193fc:	bf1c      	itt	ne
 80193fe:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8019402:	b212      	sxthne	r2, r2
 8019404:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8019408:	f640 6109 	movw	r1, #3593	; 0xe09
 801940c:	f023 0210 	bic.w	r2, r3, #16
 8019410:	428a      	cmp	r2, r1
 8019412:	d003      	beq.n	801941c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8019414:	f640 6213 	movw	r2, #3603	; 0xe13
 8019418:	4293      	cmp	r3, r2
 801941a:	d12a      	bne.n	8019472 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 801941c:	7b6e      	ldrb	r6, [r5, #13]
 801941e:	0076      	lsls	r6, r6, #1
 8019420:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8019424:	7aae      	ldrb	r6, [r5, #10]
 8019426:	4316      	orrs	r6, r2
 8019428:	f640 6213 	movw	r2, #3603	; 0xe13
 801942c:	4293      	cmp	r3, r2
 801942e:	bf18      	it	ne
 8019430:	f103 33ff 	addne.w	r3, r3, #4294967295	; 0xffffffff
 8019434:	4602      	mov	r2, r0
 8019436:	bf14      	ite	ne
 8019438:	b29b      	uxthne	r3, r3
 801943a:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801943e:	4629      	mov	r1, r5
 8019440:	4620      	mov	r0, r4
 8019442:	f7ff ff04 	bl	801924e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8019446:	7b43      	ldrb	r3, [r0, #13]
 8019448:	7a82      	ldrb	r2, [r0, #10]
 801944a:	005b      	lsls	r3, r3, #1
 801944c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8019450:	4313      	orrs	r3, r2
 8019452:	1af6      	subs	r6, r6, r3
 8019454:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8019458:	7b69      	ldrb	r1, [r5, #13]
 801945a:	00cb      	lsls	r3, r1, #3
 801945c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8019460:	7a2b      	ldrb	r3, [r5, #8]
 8019462:	4313      	orrs	r3, r2
 8019464:	064a      	lsls	r2, r1, #25
 8019466:	bf44      	itt	mi
 8019468:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801946c:	b21b      	sxthmi	r3, r3
 801946e:	1bdb      	subs	r3, r3, r7
 8019470:	e747      	b.n	8019302 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8019472:	2300      	movs	r3, #0
 8019474:	e7b6      	b.n	80193e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8019476:	bf00      	nop
 8019478:	3fc00079 	.word	0x3fc00079

0801947c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801947c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019480:	4604      	mov	r4, r0
 8019482:	b942      	cbnz	r2, 8019496 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8019484:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8019488:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801948c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8019490:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8019494:	e047      	b.n	8019526 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8019496:	7b51      	ldrb	r1, [r2, #13]
 8019498:	8893      	ldrh	r3, [r2, #4]
 801949a:	010d      	lsls	r5, r1, #4
 801949c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 80194a0:	79d5      	ldrb	r5, [r2, #7]
 80194a2:	4305      	orrs	r5, r0
 80194a4:	2d04      	cmp	r5, #4
 80194a6:	bfcc      	ite	gt
 80194a8:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 80194ac:	f04f 0e01 	movle.w	lr, #1
 80194b0:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 80194b4:	f200 80ab 	bhi.w	801960e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 80194b8:	f240 60e7 	movw	r0, #1767	; 0x6e7
 80194bc:	4283      	cmp	r3, r0
 80194be:	d216      	bcs.n	80194ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80194c0:	f240 605b 	movw	r0, #1627	; 0x65b
 80194c4:	4283      	cmp	r3, r0
 80194c6:	d859      	bhi.n	801957c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80194c8:	f240 6057 	movw	r0, #1623	; 0x657
 80194cc:	4283      	cmp	r3, r0
 80194ce:	d20e      	bcs.n	80194ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80194d0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80194d4:	d24a      	bcs.n	801956c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 80194d6:	f240 604e 	movw	r0, #1614	; 0x64e
 80194da:	4283      	cmp	r3, r0
 80194dc:	d207      	bcs.n	80194ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80194de:	f240 601a 	movw	r0, #1562	; 0x61a
 80194e2:	4283      	cmp	r3, r0
 80194e4:	d02a      	beq.n	801953c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80194e6:	d821      	bhi.n	801952c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 80194e8:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 80194ec:	d35b      	bcc.n	80195a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80194ee:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 80194f2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80194f6:	f040 80d0 	bne.w	801969a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80194fa:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 80194fe:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8019502:	f040 80ca 	bne.w	801969a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8019506:	00cb      	lsls	r3, r1, #3
 8019508:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801950c:	7a13      	ldrb	r3, [r2, #8]
 801950e:	0649      	lsls	r1, r1, #25
 8019510:	ea43 0300 	orr.w	r3, r3, r0
 8019514:	bf44      	itt	mi
 8019516:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801951a:	b21b      	sxthmi	r3, r3
 801951c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8019520:	1b5d      	subs	r5, r3, r5
 8019522:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8019526:	4610      	mov	r0, r2
 8019528:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801952c:	f240 604b 	movw	r0, #1611	; 0x64b
 8019530:	4283      	cmp	r3, r0
 8019532:	d338      	bcc.n	80195a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8019534:	f240 604c 	movw	r0, #1612	; 0x64c
 8019538:	4283      	cmp	r3, r0
 801953a:	d9d8      	bls.n	80194ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801953c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8019540:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8019544:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8019548:	f040 80f2 	bne.w	8019730 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801954c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8019550:	f040 80ee 	bne.w	8019730 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8019554:	00cb      	lsls	r3, r1, #3
 8019556:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801955a:	7a13      	ldrb	r3, [r2, #8]
 801955c:	064e      	lsls	r6, r1, #25
 801955e:	ea43 0300 	orr.w	r3, r3, r0
 8019562:	bf44      	itt	mi
 8019564:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019568:	b21b      	sxthmi	r3, r3
 801956a:	e7d9      	b.n	8019520 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801956c:	f240 6054 	movw	r0, #1620	; 0x654
 8019570:	4283      	cmp	r3, r0
 8019572:	d8e3      	bhi.n	801953c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019574:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8019578:	d9e0      	bls.n	801953c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801957a:	e7b8      	b.n	80194ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801957c:	f240 6074 	movw	r0, #1652	; 0x674
 8019580:	4283      	cmp	r3, r0
 8019582:	d0b4      	beq.n	80194ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019584:	d82d      	bhi.n	80195e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8019586:	f240 605e 	movw	r0, #1630	; 0x65e
 801958a:	4283      	cmp	r3, r0
 801958c:	d804      	bhi.n	8019598 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801958e:	f240 605d 	movw	r0, #1629	; 0x65d
 8019592:	4283      	cmp	r3, r0
 8019594:	d3d2      	bcc.n	801953c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019596:	e7aa      	b.n	80194ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019598:	f240 605f 	movw	r0, #1631	; 0x65f
 801959c:	4283      	cmp	r3, r0
 801959e:	d0cd      	beq.n	801953c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80195a0:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 80195a4:	d0a3      	beq.n	80194ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80195a6:	00cb      	lsls	r3, r1, #3
 80195a8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80195ac:	7a13      	ldrb	r3, [r2, #8]
 80195ae:	0649      	lsls	r1, r1, #25
 80195b0:	ea43 0300 	orr.w	r3, r3, r0
 80195b4:	bf44      	itt	mi
 80195b6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80195ba:	b21b      	sxthmi	r3, r3
 80195bc:	1b5d      	subs	r5, r3, r5
 80195be:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80195c2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80195c6:	7b53      	ldrb	r3, [r2, #13]
 80195c8:	015b      	lsls	r3, r3, #5
 80195ca:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80195ce:	7993      	ldrb	r3, [r2, #6]
 80195d0:	430b      	orrs	r3, r1
 80195d2:	005b      	lsls	r3, r3, #1
 80195d4:	2105      	movs	r1, #5
 80195d6:	fb93 f3f1 	sdiv	r3, r3, r1
 80195da:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80195de:	440b      	add	r3, r1
 80195e0:	e756      	b.n	8019490 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 80195e2:	f240 60e2 	movw	r0, #1762	; 0x6e2
 80195e6:	4283      	cmp	r3, r0
 80195e8:	d809      	bhi.n	80195fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80195ea:	f240 60df 	movw	r0, #1759	; 0x6df
 80195ee:	4283      	cmp	r3, r0
 80195f0:	f4bf af7d 	bcs.w	80194ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80195f4:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 80195f8:	2b05      	cmp	r3, #5
 80195fa:	d8d4      	bhi.n	80195a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80195fc:	e777      	b.n	80194ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80195fe:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8019602:	4283      	cmp	r3, r0
 8019604:	d09a      	beq.n	801953c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019606:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801960a:	4283      	cmp	r3, r0
 801960c:	e7ca      	b.n	80195a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801960e:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8019612:	d22b      	bcs.n	801966c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8019614:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8019618:	4283      	cmp	r3, r0
 801961a:	d28f      	bcs.n	801953c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801961c:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8019620:	4283      	cmp	r3, r0
 8019622:	d816      	bhi.n	8019652 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8019624:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8019628:	4283      	cmp	r3, r0
 801962a:	f4bf af60 	bcs.w	80194ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801962e:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8019632:	4283      	cmp	r3, r0
 8019634:	d80a      	bhi.n	801964c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8019636:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801963a:	4283      	cmp	r3, r0
 801963c:	f4bf af57 	bcs.w	80194ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019640:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8019644:	4283      	cmp	r3, r0
 8019646:	f43f af79 	beq.w	801953c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801964a:	e7ac      	b.n	80195a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801964c:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8019650:	e7f8      	b.n	8019644 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8019652:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8019656:	4283      	cmp	r3, r0
 8019658:	d802      	bhi.n	8019660 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801965a:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801965e:	e798      	b.n	8019592 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8019660:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8019664:	4283      	cmp	r3, r0
 8019666:	f47f af42 	bne.w	80194ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801966a:	e767      	b.n	801953c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801966c:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8019670:	4283      	cmp	r3, r0
 8019672:	f43f af63 	beq.w	801953c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019676:	d802      	bhi.n	801967e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8019678:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801967c:	e7f2      	b.n	8019664 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801967e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8019682:	4283      	cmp	r3, r0
 8019684:	d805      	bhi.n	8019692 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8019686:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801968a:	4283      	cmp	r3, r0
 801968c:	f4ff af2f 	bcc.w	80194ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019690:	e754      	b.n	801953c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019692:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8019696:	4283      	cmp	r3, r0
 8019698:	e7af      	b.n	80195fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801969a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801969e:	4617      	mov	r7, r2
 80196a0:	f102 0808 	add.w	r8, r2, #8
 80196a4:	4666      	mov	r6, ip
 80196a6:	6838      	ldr	r0, [r7, #0]
 80196a8:	6879      	ldr	r1, [r7, #4]
 80196aa:	46e6      	mov	lr, ip
 80196ac:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80196b0:	3708      	adds	r7, #8
 80196b2:	4547      	cmp	r7, r8
 80196b4:	46f4      	mov	ip, lr
 80196b6:	d1f6      	bne.n	80196a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80196b8:	6838      	ldr	r0, [r7, #0]
 80196ba:	f8ce 0000 	str.w	r0, [lr]
 80196be:	88b9      	ldrh	r1, [r7, #4]
 80196c0:	f8ae 1004 	strh.w	r1, [lr, #4]
 80196c4:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80196c8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80196cc:	d009      	beq.n	80196e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 80196ce:	7b51      	ldrb	r1, [r2, #13]
 80196d0:	7992      	ldrb	r2, [r2, #6]
 80196d2:	0149      	lsls	r1, r1, #5
 80196d4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80196d8:	4311      	orrs	r1, r2
 80196da:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80196de:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80196e2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80196e6:	b2ad      	uxth	r5, r5
 80196e8:	d00d      	beq.n	8019706 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 80196ea:	442b      	add	r3, r5
 80196ec:	b29b      	uxth	r3, r3
 80196ee:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80196f2:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80196f6:	10db      	asrs	r3, r3, #3
 80196f8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80196fc:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8019700:	4313      	orrs	r3, r2
 8019702:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8019706:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801970a:	00cb      	lsls	r3, r1, #3
 801970c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8019710:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8019714:	064f      	lsls	r7, r1, #25
 8019716:	ea43 0302 	orr.w	r3, r3, r2
 801971a:	bf44      	itt	mi
 801971c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019720:	b21b      	sxthmi	r3, r3
 8019722:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8019726:	1b5b      	subs	r3, r3, r5
 8019728:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801972c:	4632      	mov	r2, r6
 801972e:	e6fa      	b.n	8019526 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8019730:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8019734:	4617      	mov	r7, r2
 8019736:	f102 0908 	add.w	r9, r2, #8
 801973a:	4666      	mov	r6, ip
 801973c:	6838      	ldr	r0, [r7, #0]
 801973e:	6879      	ldr	r1, [r7, #4]
 8019740:	46e0      	mov	r8, ip
 8019742:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8019746:	3708      	adds	r7, #8
 8019748:	454f      	cmp	r7, r9
 801974a:	46c4      	mov	ip, r8
 801974c:	d1f6      	bne.n	801973c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801974e:	6838      	ldr	r0, [r7, #0]
 8019750:	f8c8 0000 	str.w	r0, [r8]
 8019754:	88b9      	ldrh	r1, [r7, #4]
 8019756:	f8a8 1004 	strh.w	r1, [r8, #4]
 801975a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801975e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8019762:	d009      	beq.n	8019778 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8019764:	7b51      	ldrb	r1, [r2, #13]
 8019766:	7992      	ldrb	r2, [r2, #6]
 8019768:	0149      	lsls	r1, r1, #5
 801976a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801976e:	4311      	orrs	r1, r2
 8019770:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8019774:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8019778:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801977c:	d00e      	beq.n	801979c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801977e:	eba3 030e 	sub.w	r3, r3, lr
 8019782:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8019786:	b29b      	uxth	r3, r3
 8019788:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801978c:	10db      	asrs	r3, r3, #3
 801978e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8019792:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8019796:	4313      	orrs	r3, r2
 8019798:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801979c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80197a0:	00cb      	lsls	r3, r1, #3
 80197a2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80197a6:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80197aa:	0648      	lsls	r0, r1, #25
 80197ac:	ea43 0302 	orr.w	r3, r3, r2
 80197b0:	bf44      	itt	mi
 80197b2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80197b6:	b21b      	sxthmi	r3, r3
 80197b8:	1b5d      	subs	r5, r3, r5
 80197ba:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80197be:	e7b5      	b.n	801972c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080197c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80197c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80197c4:	461e      	mov	r6, r3
 80197c6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80197c8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80197cc:	4604      	mov	r4, r0
 80197ce:	4617      	mov	r7, r2
 80197d0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80197d4:	f7f6 f978 	bl	800fac8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80197d8:	4605      	mov	r5, r0
 80197da:	b918      	cbnz	r0, 80197e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80197dc:	6030      	str	r0, [r6, #0]
 80197de:	4628      	mov	r0, r5
 80197e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80197e4:	683b      	ldr	r3, [r7, #0]
 80197e6:	4601      	mov	r1, r0
 80197e8:	68db      	ldr	r3, [r3, #12]
 80197ea:	4638      	mov	r0, r7
 80197ec:	4798      	blx	r3
 80197ee:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80197f2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80197f6:	4602      	mov	r2, r0
 80197f8:	6030      	str	r0, [r6, #0]
 80197fa:	d213      	bcs.n	8019824 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80197fc:	4643      	mov	r3, r8
 80197fe:	4639      	mov	r1, r7
 8019800:	4620      	mov	r0, r4
 8019802:	f7ff fe3b 	bl	801947c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8019806:	6030      	str	r0, [r6, #0]
 8019808:	6833      	ldr	r3, [r6, #0]
 801980a:	b143      	cbz	r3, 801981e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801980c:	7b5a      	ldrb	r2, [r3, #13]
 801980e:	7a9b      	ldrb	r3, [r3, #10]
 8019810:	0052      	lsls	r2, r2, #1
 8019812:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8019816:	4313      	orrs	r3, r2
 8019818:	bf0c      	ite	eq
 801981a:	2301      	moveq	r3, #1
 801981c:	2300      	movne	r3, #0
 801981e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8019822:	e7dc      	b.n	80197de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8019824:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8019828:	b29b      	uxth	r3, r3
 801982a:	2b7f      	cmp	r3, #127	; 0x7f
 801982c:	d804      	bhi.n	8019838 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801982e:	4639      	mov	r1, r7
 8019830:	4620      	mov	r0, r4
 8019832:	f7ff fd17 	bl	8019264 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8019836:	e7e6      	b.n	8019806 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8019838:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801983c:	2b00      	cmp	r3, #0
 801983e:	d0e3      	beq.n	8019808 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8019840:	f640 1302 	movw	r3, #2306	; 0x902
 8019844:	429d      	cmp	r5, r3
 8019846:	d1df      	bne.n	8019808 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8019848:	4601      	mov	r1, r0
 801984a:	4620      	mov	r0, r4
 801984c:	f7ff fcdc 	bl	8019208 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8019850:	e7d9      	b.n	8019806 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08019852 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8019852:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8019856:	461e      	mov	r6, r3
 8019858:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801985a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801985e:	4604      	mov	r4, r0
 8019860:	4617      	mov	r7, r2
 8019862:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8019866:	f7f6 f92f 	bl	800fac8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801986a:	4605      	mov	r5, r0
 801986c:	b918      	cbnz	r0, 8019876 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801986e:	6030      	str	r0, [r6, #0]
 8019870:	4628      	mov	r0, r5
 8019872:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8019876:	683b      	ldr	r3, [r7, #0]
 8019878:	4601      	mov	r1, r0
 801987a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801987e:	4638      	mov	r0, r7
 8019880:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8019884:	47c8      	blx	r9
 8019886:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801988a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801988e:	4602      	mov	r2, r0
 8019890:	6030      	str	r0, [r6, #0]
 8019892:	d213      	bcs.n	80198bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8019894:	4643      	mov	r3, r8
 8019896:	4639      	mov	r1, r7
 8019898:	4620      	mov	r0, r4
 801989a:	f7ff fdef 	bl	801947c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801989e:	6030      	str	r0, [r6, #0]
 80198a0:	6833      	ldr	r3, [r6, #0]
 80198a2:	b143      	cbz	r3, 80198b6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80198a4:	7b5a      	ldrb	r2, [r3, #13]
 80198a6:	7a9b      	ldrb	r3, [r3, #10]
 80198a8:	0052      	lsls	r2, r2, #1
 80198aa:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80198ae:	4313      	orrs	r3, r2
 80198b0:	bf0c      	ite	eq
 80198b2:	2301      	moveq	r3, #1
 80198b4:	2300      	movne	r3, #0
 80198b6:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80198ba:	e7d9      	b.n	8019870 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80198bc:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80198c0:	b29b      	uxth	r3, r3
 80198c2:	2b7f      	cmp	r3, #127	; 0x7f
 80198c4:	d804      	bhi.n	80198d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80198c6:	4639      	mov	r1, r7
 80198c8:	4620      	mov	r0, r4
 80198ca:	f7ff fccb 	bl	8019264 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80198ce:	e7e6      	b.n	801989e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80198d0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80198d4:	2b00      	cmp	r3, #0
 80198d6:	d0e3      	beq.n	80198a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80198d8:	f640 1302 	movw	r3, #2306	; 0x902
 80198dc:	429d      	cmp	r5, r3
 80198de:	d1df      	bne.n	80198a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80198e0:	4601      	mov	r1, r0
 80198e2:	4620      	mov	r0, r4
 80198e4:	f7ff fc90 	bl	8019208 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80198e8:	e7d9      	b.n	801989e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080198ea <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80198ea:	b510      	push	{r4, lr}
 80198ec:	4604      	mov	r4, r0
 80198ee:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80198f2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80198f4:	b1f1      	cbz	r1, 8019934 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80198f6:	2b0a      	cmp	r3, #10
 80198f8:	d02f      	beq.n	801995a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80198fa:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80198fc:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8019900:	3901      	subs	r1, #1
 8019902:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8019904:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8019908:	1c51      	adds	r1, r2, #1
 801990a:	b289      	uxth	r1, r1
 801990c:	2901      	cmp	r1, #1
 801990e:	bf84      	itt	hi
 8019910:	f102 32ff 	addhi.w	r2, r2, #4294967295	; 0xffffffff
 8019914:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8019916:	f103 0201 	add.w	r2, r3, #1
 801991a:	8722      	strh	r2, [r4, #56]	; 0x38
 801991c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801991e:	bf98      	it	ls
 8019920:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8019922:	4413      	add	r3, r2
 8019924:	b29b      	uxth	r3, r3
 8019926:	2b09      	cmp	r3, #9
 8019928:	bf88      	it	hi
 801992a:	3b0a      	subhi	r3, #10
 801992c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019930:	8458      	strh	r0, [r3, #34]	; 0x22
 8019932:	e7dc      	b.n	80198ee <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8019934:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8019936:	2b0a      	cmp	r3, #10
 8019938:	d00f      	beq.n	801995a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801993a:	4620      	mov	r0, r4
 801993c:	f7ff fc12 	bl	8019164 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8019940:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8019942:	1c5a      	adds	r2, r3, #1
 8019944:	8722      	strh	r2, [r4, #56]	; 0x38
 8019946:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8019948:	4413      	add	r3, r2
 801994a:	b29b      	uxth	r3, r3
 801994c:	2b09      	cmp	r3, #9
 801994e:	bf88      	it	hi
 8019950:	3b0a      	subhi	r3, #10
 8019952:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019956:	8458      	strh	r0, [r3, #34]	; 0x22
 8019958:	e7ec      	b.n	8019934 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801995a:	bd10      	pop	{r4, pc}

0801995c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801995c:	b538      	push	{r3, r4, r5, lr}
 801995e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8019960:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8019964:	4604      	mov	r4, r0
 8019966:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8019968:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801996a:	3a01      	subs	r2, #1
 801996c:	8702      	strh	r2, [r0, #56]	; 0x38
 801996e:	1c5a      	adds	r2, r3, #1
 8019970:	b292      	uxth	r2, r2
 8019972:	2a09      	cmp	r2, #9
 8019974:	bf86      	itte	hi
 8019976:	3b09      	subhi	r3, #9
 8019978:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801997a:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801997c:	f7ff ffb5 	bl	80198ea <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8019980:	8c23      	ldrh	r3, [r4, #32]
 8019982:	2b01      	cmp	r3, #1
 8019984:	bf9c      	itt	ls
 8019986:	3301      	addls	r3, #1
 8019988:	8423      	strhls	r3, [r4, #32]
 801998a:	8be3      	ldrh	r3, [r4, #30]
 801998c:	b90b      	cbnz	r3, 8019992 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801998e:	2302      	movs	r3, #2
 8019990:	83e3      	strh	r3, [r4, #30]
 8019992:	8be3      	ldrh	r3, [r4, #30]
 8019994:	3b01      	subs	r3, #1
 8019996:	b29b      	uxth	r3, r3
 8019998:	83e3      	strh	r3, [r4, #30]
 801999a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801999e:	4628      	mov	r0, r5
 80199a0:	8365      	strh	r5, [r4, #26]
 80199a2:	bd38      	pop	{r3, r4, r5, pc}

080199a4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80199a4:	428a      	cmp	r2, r1
 80199a6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80199aa:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80199ac:	d931      	bls.n	8019a12 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80199ae:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80199b0:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80199b4:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80199b8:	19ee      	adds	r6, r5, r7
 80199ba:	1a54      	subs	r4, r2, r1
 80199bc:	3e01      	subs	r6, #1
 80199be:	fa1f fe84 	uxth.w	lr, r4
 80199c2:	b2b4      	uxth	r4, r6
 80199c4:	eba4 090e 	sub.w	r9, r4, lr
 80199c8:	fa1f f989 	uxth.w	r9, r9
 80199cc:	2c09      	cmp	r4, #9
 80199ce:	4626      	mov	r6, r4
 80199d0:	bf88      	it	hi
 80199d2:	f1a4 060a 	subhi.w	r6, r4, #10
 80199d6:	f1bc 0f00 	cmp.w	ip, #0
 80199da:	bf08      	it	eq
 80199dc:	f04f 0c02 	moveq.w	ip, #2
 80199e0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80199e4:	f10c 3cff 	add.w	ip, ip, #4294967295	; 0xffffffff
 80199e8:	fa1f fc8c 	uxth.w	ip, ip
 80199ec:	3c01      	subs	r4, #1
 80199ee:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 80199f2:	b2a4      	uxth	r4, r4
 80199f4:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80199f8:	454c      	cmp	r4, r9
 80199fa:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 80199fe:	d1e5      	bne.n	80199cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8019a00:	eba5 050e 	sub.w	r5, r5, lr
 8019a04:	eb0e 0408 	add.w	r4, lr, r8
 8019a08:	8705      	strh	r5, [r0, #56]	; 0x38
 8019a0a:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8019a0e:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8019a12:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8019a14:	1a64      	subs	r4, r4, r1
 8019a16:	4439      	add	r1, r7
 8019a18:	b289      	uxth	r1, r1
 8019a1a:	2909      	cmp	r1, #9
 8019a1c:	bf88      	it	hi
 8019a1e:	390a      	subhi	r1, #10
 8019a20:	8704      	strh	r4, [r0, #56]	; 0x38
 8019a22:	86c1      	strh	r1, [r0, #54]	; 0x36
 8019a24:	250a      	movs	r5, #10
 8019a26:	b18a      	cbz	r2, 8019a4c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8019a28:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8019a2a:	3a01      	subs	r2, #1
 8019a2c:	b292      	uxth	r2, r2
 8019a2e:	3101      	adds	r1, #1
 8019a30:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8019a34:	8701      	strh	r1, [r0, #56]	; 0x38
 8019a36:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8019a38:	b901      	cbnz	r1, 8019a3c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8019a3a:	86c5      	strh	r5, [r0, #54]	; 0x36
 8019a3c:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8019a3e:	3901      	subs	r1, #1
 8019a40:	b289      	uxth	r1, r1
 8019a42:	86c1      	strh	r1, [r0, #54]	; 0x36
 8019a44:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8019a48:	844c      	strh	r4, [r1, #34]	; 0x22
 8019a4a:	e7ec      	b.n	8019a26 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8019a4c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019a50:	f7ff bf4b 	b.w	80198ea <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08019a54 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8019a54:	b570      	push	{r4, r5, r6, lr}
 8019a56:	2500      	movs	r5, #0
 8019a58:	4295      	cmp	r5, r2
 8019a5a:	d011      	beq.n	8019a80 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8019a5c:	8bc4      	ldrh	r4, [r0, #30]
 8019a5e:	f831 6b02 	ldrh.w	r6, [r1], #2
 8019a62:	4414      	add	r4, r2
 8019a64:	3c01      	subs	r4, #1
 8019a66:	1b64      	subs	r4, r4, r5
 8019a68:	b2a4      	uxth	r4, r4
 8019a6a:	2c01      	cmp	r4, #1
 8019a6c:	bf88      	it	hi
 8019a6e:	3c02      	subhi	r4, #2
 8019a70:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8019a74:	8b64      	ldrh	r4, [r4, #26]
 8019a76:	42b4      	cmp	r4, r6
 8019a78:	d117      	bne.n	8019aaa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8019a7a:	3501      	adds	r5, #1
 8019a7c:	b2ad      	uxth	r5, r5
 8019a7e:	e7eb      	b.n	8019a58 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8019a80:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8019a84:	2400      	movs	r4, #0
 8019a86:	4413      	add	r3, r2
 8019a88:	b2a2      	uxth	r2, r4
 8019a8a:	429a      	cmp	r2, r3
 8019a8c:	da0f      	bge.n	8019aae <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8019a8e:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8019a90:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8019a94:	4432      	add	r2, r6
 8019a96:	b292      	uxth	r2, r2
 8019a98:	2a09      	cmp	r2, #9
 8019a9a:	bf88      	it	hi
 8019a9c:	3a0a      	subhi	r2, #10
 8019a9e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8019aa2:	3401      	adds	r4, #1
 8019aa4:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8019aa6:	42aa      	cmp	r2, r5
 8019aa8:	d0ee      	beq.n	8019a88 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8019aaa:	2000      	movs	r0, #0
 8019aac:	bd70      	pop	{r4, r5, r6, pc}
 8019aae:	2001      	movs	r0, #1
 8019ab0:	e7fc      	b.n	8019aac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08019ab2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8019ab2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ab6:	4605      	mov	r5, r0
 8019ab8:	4616      	mov	r6, r2
 8019aba:	1c8c      	adds	r4, r1, #2
 8019abc:	8809      	ldrh	r1, [r1, #0]
 8019abe:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8019ac2:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8019ac6:	42b3      	cmp	r3, r6
 8019ac8:	d124      	bne.n	8019b14 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8019aca:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8019ace:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8019ad2:	f001 070f 	and.w	r7, r1, #15
 8019ad6:	f8cd 8000 	str.w	r8, [sp]
 8019ada:	464b      	mov	r3, r9
 8019adc:	4652      	mov	r2, sl
 8019ade:	4621      	mov	r1, r4
 8019ae0:	4628      	mov	r0, r5
 8019ae2:	f7ff ffb7 	bl	8019a54 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8019ae6:	4683      	mov	fp, r0
 8019ae8:	b168      	cbz	r0, 8019b06 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8019aea:	eb0a 0109 	add.w	r1, sl, r9
 8019aee:	4441      	add	r1, r8
 8019af0:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8019af4:	463a      	mov	r2, r7
 8019af6:	4649      	mov	r1, r9
 8019af8:	4628      	mov	r0, r5
 8019afa:	f7ff ff53 	bl	80199a4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8019afe:	4658      	mov	r0, fp
 8019b00:	b003      	add	sp, #12
 8019b02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019b06:	eb07 010a 	add.w	r1, r7, sl
 8019b0a:	4449      	add	r1, r9
 8019b0c:	4441      	add	r1, r8
 8019b0e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8019b12:	e7d2      	b.n	8019aba <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8019b14:	f04f 0b00 	mov.w	fp, #0
 8019b18:	e7f1      	b.n	8019afe <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08019b1a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8019b1a:	b570      	push	{r4, r5, r6, lr}
 8019b1c:	8810      	ldrh	r0, [r2, #0]
 8019b1e:	4298      	cmp	r0, r3
 8019b20:	d817      	bhi.n	8019b52 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8019b22:	1e48      	subs	r0, r1, #1
 8019b24:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8019b28:	4298      	cmp	r0, r3
 8019b2a:	d312      	bcc.n	8019b52 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8019b2c:	2400      	movs	r4, #0
 8019b2e:	428c      	cmp	r4, r1
 8019b30:	d20f      	bcs.n	8019b52 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8019b32:	1860      	adds	r0, r4, r1
 8019b34:	1040      	asrs	r0, r0, #1
 8019b36:	0085      	lsls	r5, r0, #2
 8019b38:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8019b3c:	42b3      	cmp	r3, r6
 8019b3e:	d902      	bls.n	8019b46 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8019b40:	3001      	adds	r0, #1
 8019b42:	b284      	uxth	r4, r0
 8019b44:	e7f3      	b.n	8019b2e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8019b46:	d201      	bcs.n	8019b4c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8019b48:	b281      	uxth	r1, r0
 8019b4a:	e7f0      	b.n	8019b2e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8019b4c:	442a      	add	r2, r5
 8019b4e:	8850      	ldrh	r0, [r2, #2]
 8019b50:	bd70      	pop	{r4, r5, r6, pc}
 8019b52:	2000      	movs	r0, #0
 8019b54:	e7fc      	b.n	8019b50 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08019b56 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8019b56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019b5a:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8019b5c:	886f      	ldrh	r7, [r5, #2]
 8019b5e:	4604      	mov	r4, r0
 8019b60:	087f      	lsrs	r7, r7, #1
 8019b62:	260b      	movs	r6, #11
 8019b64:	3e01      	subs	r6, #1
 8019b66:	d013      	beq.n	8019b90 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8019b68:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8019b6a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019b6e:	462a      	mov	r2, r5
 8019b70:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8019b74:	4639      	mov	r1, r7
 8019b76:	4643      	mov	r3, r8
 8019b78:	4620      	mov	r0, r4
 8019b7a:	f7ff ffce 	bl	8019b1a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8019b7e:	b138      	cbz	r0, 8019b90 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8019b80:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8019b84:	4642      	mov	r2, r8
 8019b86:	4620      	mov	r0, r4
 8019b88:	f7ff ff93 	bl	8019ab2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8019b8c:	2800      	cmp	r0, #0
 8019b8e:	d1e9      	bne.n	8019b64 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8019b90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08019b94 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8019b94:	b570      	push	{r4, r5, r6, lr}
 8019b96:	694a      	ldr	r2, [r1, #20]
 8019b98:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8019b9a:	684b      	ldr	r3, [r1, #4]
 8019b9c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8019b9e:	1b54      	subs	r4, r2, r5
 8019ba0:	f000 8106 	beq.w	8019db0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8019ba4:	1b9b      	subs	r3, r3, r6
 8019ba6:	d003      	beq.n	8019bb0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8019ba8:	4363      	muls	r3, r4
 8019baa:	2210      	movs	r2, #16
 8019bac:	fb93 f3f2 	sdiv	r3, r3, r2
 8019bb0:	680c      	ldr	r4, [r1, #0]
 8019bb2:	698a      	ldr	r2, [r1, #24]
 8019bb4:	1b65      	subs	r5, r4, r5
 8019bb6:	f000 80fd 	beq.w	8019db4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8019bba:	1b92      	subs	r2, r2, r6
 8019bbc:	d003      	beq.n	8019bc6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8019bbe:	436a      	muls	r2, r5
 8019bc0:	2410      	movs	r4, #16
 8019bc2:	fb92 f2f4 	sdiv	r2, r2, r4
 8019bc6:	1a9b      	subs	r3, r3, r2
 8019bc8:	ee07 3a90 	vmov	s15, r3
 8019bcc:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8019df0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8019bd0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019bd4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019bd8:	ee67 7a84 	vmul.f32	s15, s15, s8
 8019bdc:	460a      	mov	r2, r1
 8019bde:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8019be2:	4603      	mov	r3, r0
 8019be4:	f100 040c 	add.w	r4, r0, #12
 8019be8:	eeb1 6a43 	vneg.f32	s12, s6
 8019bec:	edd2 7a02 	vldr	s15, [r2, #8]
 8019bf0:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8019bf4:	3214      	adds	r2, #20
 8019bf6:	ece3 6a01 	vstmia	r3!, {s13}
 8019bfa:	ed52 7a02 	vldr	s15, [r2, #-8]
 8019bfe:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8019c02:	429c      	cmp	r4, r3
 8019c04:	edc3 7a02 	vstr	s15, [r3, #8]
 8019c08:	ed52 7a01 	vldr	s15, [r2, #-4]
 8019c0c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8019c10:	edc3 7a05 	vstr	s15, [r3, #20]
 8019c14:	d1ea      	bne.n	8019bec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8019c16:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019c18:	698b      	ldr	r3, [r1, #24]
 8019c1a:	edd0 4a02 	vldr	s9, [r0, #8]
 8019c1e:	edd0 3a00 	vldr	s7, [r0]
 8019c22:	edd0 6a01 	vldr	s13, [r0, #4]
 8019c26:	ed90 5a05 	vldr	s10, [r0, #20]
 8019c2a:	ed90 2a03 	vldr	s4, [r0, #12]
 8019c2e:	edd0 5a04 	vldr	s11, [r0, #16]
 8019c32:	ed90 1a07 	vldr	s2, [r0, #28]
 8019c36:	edd0 2a06 	vldr	s5, [r0, #24]
 8019c3a:	1a9b      	subs	r3, r3, r2
 8019c3c:	ee07 3a90 	vmov	s15, r3
 8019c40:	684b      	ldr	r3, [r1, #4]
 8019c42:	1a9b      	subs	r3, r3, r2
 8019c44:	ee07 3a10 	vmov	s14, r3
 8019c48:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019c4c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8019c50:	ee67 7a84 	vmul.f32	s15, s15, s8
 8019c54:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8019c58:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019c5c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8019c60:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019c64:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8019c68:	eee6 7a87 	vfma.f32	s15, s13, s14
 8019c6c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8019c70:	ee67 7a83 	vmul.f32	s15, s15, s6
 8019c74:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8019c78:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8019c7a:	694a      	ldr	r2, [r1, #20]
 8019c7c:	1b13      	subs	r3, r2, r4
 8019c7e:	ee07 3a10 	vmov	s14, r3
 8019c82:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019c86:	680b      	ldr	r3, [r1, #0]
 8019c88:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019c8c:	1b1b      	subs	r3, r3, r4
 8019c8e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8019c92:	ee07 3a10 	vmov	s14, r3
 8019c96:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019c9a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019c9e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8019ca2:	ee64 4a86 	vmul.f32	s9, s9, s12
 8019ca6:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8019caa:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019cac:	698b      	ldr	r3, [r1, #24]
 8019cae:	1a9b      	subs	r3, r3, r2
 8019cb0:	ee06 3a90 	vmov	s13, r3
 8019cb4:	684b      	ldr	r3, [r1, #4]
 8019cb6:	1a9b      	subs	r3, r3, r2
 8019cb8:	ee07 3a10 	vmov	s14, r3
 8019cbc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8019cc0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019cc4:	ee66 6a84 	vmul.f32	s13, s13, s8
 8019cc8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019ccc:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8019cd0:	eee5 6a87 	vfma.f32	s13, s11, s14
 8019cd4:	ee66 6a83 	vmul.f32	s13, s13, s6
 8019cd8:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8019cdc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8019cde:	694a      	ldr	r2, [r1, #20]
 8019ce0:	1b13      	subs	r3, r2, r4
 8019ce2:	ee07 3a10 	vmov	s14, r3
 8019ce6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019cea:	680b      	ldr	r3, [r1, #0]
 8019cec:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019cf0:	1b1b      	subs	r3, r3, r4
 8019cf2:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8019cf6:	ee07 3a10 	vmov	s14, r3
 8019cfa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019cfe:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019d02:	eea5 5a87 	vfma.f32	s10, s11, s14
 8019d06:	edd0 5a08 	vldr	s11, [r0, #32]
 8019d0a:	ee25 5a06 	vmul.f32	s10, s10, s12
 8019d0e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8019d12:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8019d16:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019d18:	698b      	ldr	r3, [r1, #24]
 8019d1a:	1a9b      	subs	r3, r3, r2
 8019d1c:	ee07 3a10 	vmov	s14, r3
 8019d20:	684b      	ldr	r3, [r1, #4]
 8019d22:	1a9b      	subs	r3, r3, r2
 8019d24:	ee01 3a90 	vmov	s3, r3
 8019d28:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019d2c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8019d30:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019d34:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8019d38:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8019d3c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8019d40:	eea1 7a21 	vfma.f32	s14, s2, s3
 8019d44:	ee27 7a03 	vmul.f32	s14, s14, s6
 8019d48:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8019d4c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8019d4e:	694a      	ldr	r2, [r1, #20]
 8019d50:	1b13      	subs	r3, r2, r4
 8019d52:	ee03 3a10 	vmov	s6, r3
 8019d56:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8019d5a:	680b      	ldr	r3, [r1, #0]
 8019d5c:	ee23 3a04 	vmul.f32	s6, s6, s8
 8019d60:	1b1b      	subs	r3, r3, r4
 8019d62:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8019d66:	ee03 3a10 	vmov	s6, r3
 8019d6a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8019d6e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8019d72:	eee1 5a04 	vfma.f32	s11, s2, s8
 8019d76:	ee25 6a86 	vmul.f32	s12, s11, s12
 8019d7a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8019d7e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8019d82:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8019d86:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8019d8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d8e:	dd13      	ble.n	8019db8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8019d90:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8019d94:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8019d98:	63c3      	str	r3, [r0, #60]	; 0x3c
 8019d9a:	eee3 7a87 	vfma.f32	s15, s7, s14
 8019d9e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019da2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019da6:	dd15      	ble.n	8019dd4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8019da8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8019dac:	6403      	str	r3, [r0, #64]	; 0x40
 8019dae:	bd70      	pop	{r4, r5, r6, pc}
 8019db0:	4623      	mov	r3, r4
 8019db2:	e6fd      	b.n	8019bb0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8019db4:	462a      	mov	r2, r5
 8019db6:	e706      	b.n	8019bc6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8019db8:	d502      	bpl.n	8019dc0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8019dba:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8019dbe:	e7e9      	b.n	8019d94 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8019dc0:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8019dc4:	eea3 2a85 	vfma.f32	s4, s7, s10
 8019dc8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8019dcc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019dd0:	dade      	bge.n	8019d90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8019dd2:	e7f2      	b.n	8019dba <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8019dd4:	d502      	bpl.n	8019ddc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8019dd6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8019dda:	e7e7      	b.n	8019dac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8019ddc:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8019de0:	eee3 4a86 	vfma.f32	s9, s7, s12
 8019de4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8019de8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019dec:	dadc      	bge.n	8019da8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8019dee:	e7f2      	b.n	8019dd6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8019df0:	3d800000 	.word	0x3d800000

08019df4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8019df4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019df8:	2714      	movs	r7, #20
 8019dfa:	435f      	muls	r7, r3
 8019dfc:	eb02 0c07 	add.w	ip, r2, r7
 8019e00:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8019e04:	f115 0e0f 	adds.w	lr, r5, #15
 8019e08:	f100 80a2 	bmi.w	8019f50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8019e0c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8019e10:	9c08      	ldr	r4, [sp, #32]
 8019e12:	f8c0 e014 	str.w	lr, [r0, #20]
 8019e16:	2614      	movs	r6, #20
 8019e18:	4366      	muls	r6, r4
 8019e1a:	eb02 0806 	add.w	r8, r2, r6
 8019e1e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8019e22:	f115 040f 	adds.w	r4, r5, #15
 8019e26:	f100 809f 	bmi.w	8019f68 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8019e2a:	1124      	asrs	r4, r4, #4
 8019e2c:	eba4 040e 	sub.w	r4, r4, lr
 8019e30:	6184      	str	r4, [r0, #24]
 8019e32:	2c00      	cmp	r4, #0
 8019e34:	f000 808a 	beq.w	8019f4c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8019e38:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8019e3c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8019e40:	5995      	ldr	r5, [r2, r6]
 8019e42:	eba4 0809 	sub.w	r8, r4, r9
 8019e46:	59d4      	ldr	r4, [r2, r7]
 8019e48:	eba5 0a04 	sub.w	sl, r5, r4
 8019e4c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8019e50:	fb0e fe05 	mul.w	lr, lr, r5
 8019e54:	fb0a ee19 	mls	lr, sl, r9, lr
 8019e58:	fb08 e404 	mla	r4, r8, r4, lr
 8019e5c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8019e60:	3c01      	subs	r4, #1
 8019e62:	19a4      	adds	r4, r4, r6
 8019e64:	f100 808c 	bmi.w	8019f80 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8019e68:	fb94 fef6 	sdiv	lr, r4, r6
 8019e6c:	f8c0 e000 	str.w	lr, [r0]
 8019e70:	fb06 441e 	mls	r4, r6, lr, r4
 8019e74:	6104      	str	r4, [r0, #16]
 8019e76:	2d00      	cmp	r5, #0
 8019e78:	f2c0 8095 	blt.w	8019fa6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8019e7c:	fb95 f4f6 	sdiv	r4, r5, r6
 8019e80:	6044      	str	r4, [r0, #4]
 8019e82:	fb06 5514 	mls	r5, r6, r4, r5
 8019e86:	6085      	str	r5, [r0, #8]
 8019e88:	60c6      	str	r6, [r0, #12]
 8019e8a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8019e8e:	6945      	ldr	r5, [r0, #20]
 8019e90:	59d2      	ldr	r2, [r2, r7]
 8019e92:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8019fc8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8019e96:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8019e9a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8019e9e:	ee07 4a10 	vmov	s14, r4
 8019ea2:	6804      	ldr	r4, [r0, #0]
 8019ea4:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8019ea8:	ee07 2a90 	vmov	s15, r2
 8019eac:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019eb0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019eb4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8019eb8:	ee27 7a26 	vmul.f32	s14, s14, s13
 8019ebc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8019ec0:	edd3 6a00 	vldr	s13, [r3]
 8019ec4:	eee6 6a07 	vfma.f32	s13, s12, s14
 8019ec8:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8019ecc:	eee6 6a27 	vfma.f32	s13, s12, s15
 8019ed0:	edc0 6a07 	vstr	s13, [r0, #28]
 8019ed4:	edd0 6a01 	vldr	s13, [r0, #4]
 8019ed8:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8019edc:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8019ee0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8019ee4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8019ee8:	ed80 6a08 	vstr	s12, [r0, #32]
 8019eec:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8019eee:	6242      	str	r2, [r0, #36]	; 0x24
 8019ef0:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8019ef4:	ed93 6a03 	vldr	s12, [r3, #12]
 8019ef8:	eea5 6a87 	vfma.f32	s12, s11, s14
 8019efc:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8019f00:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8019f04:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8019f08:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8019f0c:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8019f10:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8019f14:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8019f18:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019f1a:	6302      	str	r2, [r0, #48]	; 0x30
 8019f1c:	ed93 6a06 	vldr	s12, [r3, #24]
 8019f20:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8019f24:	eea5 6a87 	vfma.f32	s12, s11, s14
 8019f28:	eeb0 7a46 	vmov.f32	s14, s12
 8019f2c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8019f30:	eea6 7a27 	vfma.f32	s14, s12, s15
 8019f34:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8019f38:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8019f3c:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8019f40:	eee6 7a87 	vfma.f32	s15, s13, s14
 8019f44:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8019f48:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8019f4a:	63c3      	str	r3, [r0, #60]	; 0x3c
 8019f4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019f50:	f1c5 0501 	rsb	r5, r5, #1
 8019f54:	f015 050f 	ands.w	r5, r5, #15
 8019f58:	bf18      	it	ne
 8019f5a:	2501      	movne	r5, #1
 8019f5c:	2410      	movs	r4, #16
 8019f5e:	fb9e fef4 	sdiv	lr, lr, r4
 8019f62:	ebae 0e05 	sub.w	lr, lr, r5
 8019f66:	e753      	b.n	8019e10 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8019f68:	f1c5 0501 	rsb	r5, r5, #1
 8019f6c:	f015 050f 	ands.w	r5, r5, #15
 8019f70:	bf18      	it	ne
 8019f72:	2501      	movne	r5, #1
 8019f74:	f04f 0910 	mov.w	r9, #16
 8019f78:	fb94 f4f9 	sdiv	r4, r4, r9
 8019f7c:	1b64      	subs	r4, r4, r5
 8019f7e:	e755      	b.n	8019e2c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8019f80:	4264      	negs	r4, r4
 8019f82:	fb94 fef6 	sdiv	lr, r4, r6
 8019f86:	f1ce 0800 	rsb	r8, lr, #0
 8019f8a:	fb06 441e 	mls	r4, r6, lr, r4
 8019f8e:	f8c0 8000 	str.w	r8, [r0]
 8019f92:	6104      	str	r4, [r0, #16]
 8019f94:	2c00      	cmp	r4, #0
 8019f96:	f43f af6e 	beq.w	8019e76 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8019f9a:	ea6f 0e0e 	mvn.w	lr, lr
 8019f9e:	f8c0 e000 	str.w	lr, [r0]
 8019fa2:	1b34      	subs	r4, r6, r4
 8019fa4:	e766      	b.n	8019e74 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8019fa6:	426d      	negs	r5, r5
 8019fa8:	fb95 f4f6 	sdiv	r4, r5, r6
 8019fac:	f1c4 0e00 	rsb	lr, r4, #0
 8019fb0:	fb06 5514 	mls	r5, r6, r4, r5
 8019fb4:	f8c0 e004 	str.w	lr, [r0, #4]
 8019fb8:	6085      	str	r5, [r0, #8]
 8019fba:	2d00      	cmp	r5, #0
 8019fbc:	f43f af64 	beq.w	8019e88 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8019fc0:	43e4      	mvns	r4, r4
 8019fc2:	6044      	str	r4, [r0, #4]
 8019fc4:	1b75      	subs	r5, r6, r5
 8019fc6:	e75e      	b.n	8019e86 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8019fc8:	3d800000 	.word	0x3d800000

08019fcc <_ZN8touchgfx7Unicode6strlenEPKt>:
 8019fcc:	4602      	mov	r2, r0
 8019fce:	b148      	cbz	r0, 8019fe4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8019fd0:	2300      	movs	r3, #0
 8019fd2:	b298      	uxth	r0, r3
 8019fd4:	3301      	adds	r3, #1
 8019fd6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8019fda:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8019fde:	2900      	cmp	r1, #0
 8019fe0:	d1f7      	bne.n	8019fd2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8019fe2:	4770      	bx	lr
 8019fe4:	4770      	bx	lr

08019fe6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8019fe6:	b530      	push	{r4, r5, lr}
 8019fe8:	4604      	mov	r4, r0
 8019fea:	b159      	cbz	r1, 801a004 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8019fec:	b148      	cbz	r0, 801a002 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8019fee:	2300      	movs	r3, #0
 8019ff0:	b298      	uxth	r0, r3
 8019ff2:	4282      	cmp	r2, r0
 8019ff4:	d905      	bls.n	801a002 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8019ff6:	5ccd      	ldrb	r5, [r1, r3]
 8019ff8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8019ffc:	3301      	adds	r3, #1
 8019ffe:	2d00      	cmp	r5, #0
 801a000:	d1f6      	bne.n	8019ff0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801a002:	bd30      	pop	{r4, r5, pc}
 801a004:	4608      	mov	r0, r1
 801a006:	e7fc      	b.n	801a002 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801a008 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 801a008:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a00a:	b08b      	sub	sp, #44	; 0x2c
 801a00c:	468c      	mov	ip, r1
 801a00e:	2100      	movs	r1, #0
 801a010:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801a014:	4604      	mov	r4, r0
 801a016:	261f      	movs	r6, #31
 801a018:	af01      	add	r7, sp, #4
 801a01a:	fb94 fef3 	sdiv	lr, r4, r3
 801a01e:	fb03 441e 	mls	r4, r3, lr, r4
 801a022:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801a026:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801a02a:	b2ec      	uxtb	r4, r5
 801a02c:	2d09      	cmp	r5, #9
 801a02e:	bfd4      	ite	le
 801a030:	3430      	addle	r4, #48	; 0x30
 801a032:	3457      	addgt	r4, #87	; 0x57
 801a034:	b2e4      	uxtb	r4, r4
 801a036:	55bc      	strb	r4, [r7, r6]
 801a038:	4674      	mov	r4, lr
 801a03a:	1e71      	subs	r1, r6, #1
 801a03c:	b974      	cbnz	r4, 801a05c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801a03e:	2800      	cmp	r0, #0
 801a040:	da05      	bge.n	801a04e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801a042:	ab0a      	add	r3, sp, #40	; 0x28
 801a044:	4419      	add	r1, r3
 801a046:	232d      	movs	r3, #45	; 0x2d
 801a048:	f801 3c24 	strb.w	r3, [r1, #-36]
 801a04c:	1eb1      	subs	r1, r6, #2
 801a04e:	3101      	adds	r1, #1
 801a050:	4439      	add	r1, r7
 801a052:	4660      	mov	r0, ip
 801a054:	f7ff ffc7 	bl	8019fe6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801a058:	b00b      	add	sp, #44	; 0x2c
 801a05a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a05c:	460e      	mov	r6, r1
 801a05e:	e7dc      	b.n	801a01a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0801a060 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 801a060:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a062:	b08b      	sub	sp, #44	; 0x2c
 801a064:	468c      	mov	ip, r1
 801a066:	2100      	movs	r1, #0
 801a068:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801a06c:	ae01      	add	r6, sp, #4
 801a06e:	211f      	movs	r1, #31
 801a070:	fbb0 f7f3 	udiv	r7, r0, r3
 801a074:	fb03 0517 	mls	r5, r3, r7, r0
 801a078:	b2ec      	uxtb	r4, r5
 801a07a:	2d09      	cmp	r5, #9
 801a07c:	bfd4      	ite	le
 801a07e:	3430      	addle	r4, #48	; 0x30
 801a080:	3457      	addgt	r4, #87	; 0x57
 801a082:	b2e4      	uxtb	r4, r4
 801a084:	558c      	strb	r4, [r1, r6]
 801a086:	4638      	mov	r0, r7
 801a088:	1e4c      	subs	r4, r1, #1
 801a08a:	b92f      	cbnz	r7, 801a098 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801a08c:	4431      	add	r1, r6
 801a08e:	4660      	mov	r0, ip
 801a090:	f7ff ffa9 	bl	8019fe6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801a094:	b00b      	add	sp, #44	; 0x2c
 801a096:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a098:	4621      	mov	r1, r4
 801a09a:	e7e9      	b.n	801a070 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801a09c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801a09c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a0a0:	4691      	mov	r9, r2
 801a0a2:	b085      	sub	sp, #20
 801a0a4:	6802      	ldr	r2, [r0, #0]
 801a0a6:	9201      	str	r2, [sp, #4]
 801a0a8:	4688      	mov	r8, r1
 801a0aa:	4683      	mov	fp, r0
 801a0ac:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 801a0b0:	9103      	str	r1, [sp, #12]
 801a0b2:	4610      	mov	r0, r2
 801a0b4:	461c      	mov	r4, r3
 801a0b6:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801a0ba:	9302      	str	r3, [sp, #8]
 801a0bc:	f7ff ff86 	bl	8019fcc <_ZN8touchgfx7Unicode6strlenEPKt>
 801a0c0:	f1b8 0f00 	cmp.w	r8, #0
 801a0c4:	bf0c      	ite	eq
 801a0c6:	4684      	moveq	ip, r0
 801a0c8:	f100 0c01 	addne.w	ip, r0, #1
 801a0cc:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 801a0d0:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801a0d4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801a0d6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a0d8:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801a0dc:	9903      	ldr	r1, [sp, #12]
 801a0de:	fa1f fc8c 	uxth.w	ip, ip
 801a0e2:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801a0e6:	d041      	beq.n	801a16c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801a0e8:	d834      	bhi.n	801a154 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801a0ea:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801a0ee:	d059      	beq.n	801a1a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801a0f0:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801a0f4:	d03a      	beq.n	801a16c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801a0f6:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801a0fa:	d034      	beq.n	801a166 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801a0fc:	2400      	movs	r4, #0
 801a0fe:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801a102:	3a01      	subs	r2, #1
 801a104:	b169      	cbz	r1, 801a122 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801a106:	9911      	ldr	r1, [sp, #68]	; 0x44
 801a108:	458c      	cmp	ip, r1
 801a10a:	da09      	bge.n	801a120 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801a10c:	eba1 010c 	sub.w	r1, r1, ip
 801a110:	b289      	uxth	r1, r1
 801a112:	b933      	cbnz	r3, 801a122 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801a114:	2e00      	cmp	r6, #0
 801a116:	d051      	beq.n	801a1bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801a118:	2800      	cmp	r0, #0
 801a11a:	d04f      	beq.n	801a1bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801a11c:	440c      	add	r4, r1
 801a11e:	b2a4      	uxth	r4, r4
 801a120:	2100      	movs	r1, #0
 801a122:	682b      	ldr	r3, [r5, #0]
 801a124:	4293      	cmp	r3, r2
 801a126:	da07      	bge.n	801a138 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801a128:	f1b8 0f00 	cmp.w	r8, #0
 801a12c:	d004      	beq.n	801a138 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801a12e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801a132:	682b      	ldr	r3, [r5, #0]
 801a134:	3301      	adds	r3, #1
 801a136:	602b      	str	r3, [r5, #0]
 801a138:	2730      	movs	r7, #48	; 0x30
 801a13a:	2c00      	cmp	r4, #0
 801a13c:	d04e      	beq.n	801a1dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801a13e:	682e      	ldr	r6, [r5, #0]
 801a140:	3c01      	subs	r4, #1
 801a142:	42b2      	cmp	r2, r6
 801a144:	b2a4      	uxth	r4, r4
 801a146:	dd49      	ble.n	801a1dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801a148:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801a14c:	682b      	ldr	r3, [r5, #0]
 801a14e:	3301      	adds	r3, #1
 801a150:	602b      	str	r3, [r5, #0]
 801a152:	e7f2      	b.n	801a13a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801a154:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801a158:	d01d      	beq.n	801a196 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801a15a:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801a15e:	d002      	beq.n	801a166 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801a160:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801a164:	e7c9      	b.n	801a0fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801a166:	4684      	mov	ip, r0
 801a168:	f04f 0800 	mov.w	r8, #0
 801a16c:	2c00      	cmp	r4, #0
 801a16e:	d0c6      	beq.n	801a0fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801a170:	b947      	cbnz	r7, 801a184 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801a172:	2801      	cmp	r0, #1
 801a174:	d106      	bne.n	801a184 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801a176:	8814      	ldrh	r4, [r2, #0]
 801a178:	2c30      	cmp	r4, #48	; 0x30
 801a17a:	bf02      	ittt	eq
 801a17c:	3202      	addeq	r2, #2
 801a17e:	f8cb 2000 	streq.w	r2, [fp]
 801a182:	4638      	moveq	r0, r7
 801a184:	45bc      	cmp	ip, r7
 801a186:	da14      	bge.n	801a1b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801a188:	b2bf      	uxth	r7, r7
 801a18a:	eba7 040c 	sub.w	r4, r7, ip
 801a18e:	b2a4      	uxth	r4, r4
 801a190:	46bc      	mov	ip, r7
 801a192:	2600      	movs	r6, #0
 801a194:	e7b3      	b.n	801a0fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801a196:	4684      	mov	ip, r0
 801a198:	b16c      	cbz	r4, 801a1b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801a19a:	42b8      	cmp	r0, r7
 801a19c:	dd00      	ble.n	801a1a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801a19e:	b2b8      	uxth	r0, r7
 801a1a0:	2400      	movs	r4, #0
 801a1a2:	e003      	b.n	801a1ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801a1a4:	f04f 0c01 	mov.w	ip, #1
 801a1a8:	2400      	movs	r4, #0
 801a1aa:	4660      	mov	r0, ip
 801a1ac:	4626      	mov	r6, r4
 801a1ae:	46a0      	mov	r8, r4
 801a1b0:	e7a5      	b.n	801a0fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801a1b2:	2400      	movs	r4, #0
 801a1b4:	e7ed      	b.n	801a192 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801a1b6:	4626      	mov	r6, r4
 801a1b8:	46a0      	mov	r8, r4
 801a1ba:	e7a0      	b.n	801a0fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801a1bc:	2900      	cmp	r1, #0
 801a1be:	d0b0      	beq.n	801a122 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801a1c0:	2720      	movs	r7, #32
 801a1c2:	682e      	ldr	r6, [r5, #0]
 801a1c4:	2900      	cmp	r1, #0
 801a1c6:	d0ac      	beq.n	801a122 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801a1c8:	3901      	subs	r1, #1
 801a1ca:	4296      	cmp	r6, r2
 801a1cc:	b289      	uxth	r1, r1
 801a1ce:	daa7      	bge.n	801a120 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801a1d0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801a1d4:	682b      	ldr	r3, [r5, #0]
 801a1d6:	3301      	adds	r3, #1
 801a1d8:	602b      	str	r3, [r5, #0]
 801a1da:	e7f2      	b.n	801a1c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801a1dc:	b188      	cbz	r0, 801a202 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801a1de:	682b      	ldr	r3, [r5, #0]
 801a1e0:	3801      	subs	r0, #1
 801a1e2:	429a      	cmp	r2, r3
 801a1e4:	b280      	uxth	r0, r0
 801a1e6:	dd0c      	ble.n	801a202 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801a1e8:	f8db 3000 	ldr.w	r3, [fp]
 801a1ec:	1c9c      	adds	r4, r3, #2
 801a1ee:	f8cb 4000 	str.w	r4, [fp]
 801a1f2:	881c      	ldrh	r4, [r3, #0]
 801a1f4:	682b      	ldr	r3, [r5, #0]
 801a1f6:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801a1fa:	682b      	ldr	r3, [r5, #0]
 801a1fc:	3301      	adds	r3, #1
 801a1fe:	602b      	str	r3, [r5, #0]
 801a200:	e7ec      	b.n	801a1dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801a202:	2620      	movs	r6, #32
 801a204:	b151      	cbz	r1, 801a21c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801a206:	6828      	ldr	r0, [r5, #0]
 801a208:	3901      	subs	r1, #1
 801a20a:	4282      	cmp	r2, r0
 801a20c:	b289      	uxth	r1, r1
 801a20e:	dd05      	ble.n	801a21c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801a210:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801a214:	682b      	ldr	r3, [r5, #0]
 801a216:	3301      	adds	r3, #1
 801a218:	602b      	str	r3, [r5, #0]
 801a21a:	e7f3      	b.n	801a204 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801a21c:	b005      	add	sp, #20
 801a21e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a222 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801a222:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801a226:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801a22a:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801a22e:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801a232:	2400      	movs	r4, #0
 801a234:	8014      	strh	r4, [r2, #0]
 801a236:	701c      	strb	r4, [r3, #0]
 801a238:	f888 4000 	strb.w	r4, [r8]
 801a23c:	f88c 4000 	strb.w	r4, [ip]
 801a240:	f88e 4000 	strb.w	r4, [lr]
 801a244:	703c      	strb	r4, [r7, #0]
 801a246:	6804      	ldr	r4, [r0, #0]
 801a248:	b1a4      	cbz	r4, 801a274 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801a24a:	8824      	ldrh	r4, [r4, #0]
 801a24c:	f04f 0901 	mov.w	r9, #1
 801a250:	b314      	cbz	r4, 801a298 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801a252:	2c2b      	cmp	r4, #43	; 0x2b
 801a254:	d001      	beq.n	801a25a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801a256:	2c20      	cmp	r4, #32
 801a258:	d110      	bne.n	801a27c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801a25a:	8014      	strh	r4, [r2, #0]
 801a25c:	6804      	ldr	r4, [r0, #0]
 801a25e:	b10c      	cbz	r4, 801a264 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801a260:	3402      	adds	r4, #2
 801a262:	6004      	str	r4, [r0, #0]
 801a264:	680c      	ldr	r4, [r1, #0]
 801a266:	b10c      	cbz	r4, 801a26c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801a268:	3401      	adds	r4, #1
 801a26a:	600c      	str	r4, [r1, #0]
 801a26c:	6804      	ldr	r4, [r0, #0]
 801a26e:	b17c      	cbz	r4, 801a290 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801a270:	8824      	ldrh	r4, [r4, #0]
 801a272:	e7ed      	b.n	801a250 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801a274:	680c      	ldr	r4, [r1, #0]
 801a276:	b17c      	cbz	r4, 801a298 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801a278:	7824      	ldrb	r4, [r4, #0]
 801a27a:	e7e7      	b.n	801a24c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801a27c:	2c2d      	cmp	r4, #45	; 0x2d
 801a27e:	d102      	bne.n	801a286 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801a280:	f883 9000 	strb.w	r9, [r3]
 801a284:	e7ea      	b.n	801a25c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801a286:	2c23      	cmp	r4, #35	; 0x23
 801a288:	d107      	bne.n	801a29a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801a28a:	f888 9000 	strb.w	r9, [r8]
 801a28e:	e7e5      	b.n	801a25c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801a290:	680c      	ldr	r4, [r1, #0]
 801a292:	b10c      	cbz	r4, 801a298 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801a294:	7824      	ldrb	r4, [r4, #0]
 801a296:	e7db      	b.n	801a250 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801a298:	2400      	movs	r4, #0
 801a29a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801a29e:	2b09      	cmp	r3, #9
 801a2a0:	d901      	bls.n	801a2a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801a2a2:	2c2a      	cmp	r4, #42	; 0x2a
 801a2a4:	d122      	bne.n	801a2ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801a2a6:	2301      	movs	r3, #1
 801a2a8:	2c30      	cmp	r4, #48	; 0x30
 801a2aa:	f88e 3000 	strb.w	r3, [lr]
 801a2ae:	d10d      	bne.n	801a2cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801a2b0:	f88c 3000 	strb.w	r3, [ip]
 801a2b4:	6803      	ldr	r3, [r0, #0]
 801a2b6:	b10b      	cbz	r3, 801a2bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801a2b8:	3302      	adds	r3, #2
 801a2ba:	6003      	str	r3, [r0, #0]
 801a2bc:	680b      	ldr	r3, [r1, #0]
 801a2be:	b10b      	cbz	r3, 801a2c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801a2c0:	3301      	adds	r3, #1
 801a2c2:	600b      	str	r3, [r1, #0]
 801a2c4:	6803      	ldr	r3, [r0, #0]
 801a2c6:	2b00      	cmp	r3, #0
 801a2c8:	d02f      	beq.n	801a32a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801a2ca:	881c      	ldrh	r4, [r3, #0]
 801a2cc:	2c2a      	cmp	r4, #42	; 0x2a
 801a2ce:	d135      	bne.n	801a33c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801a2d0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801a2d4:	6033      	str	r3, [r6, #0]
 801a2d6:	6803      	ldr	r3, [r0, #0]
 801a2d8:	b10b      	cbz	r3, 801a2de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801a2da:	3302      	adds	r3, #2
 801a2dc:	6003      	str	r3, [r0, #0]
 801a2de:	680b      	ldr	r3, [r1, #0]
 801a2e0:	b10b      	cbz	r3, 801a2e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801a2e2:	3301      	adds	r3, #1
 801a2e4:	600b      	str	r3, [r1, #0]
 801a2e6:	6803      	ldr	r3, [r0, #0]
 801a2e8:	b31b      	cbz	r3, 801a332 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801a2ea:	881c      	ldrh	r4, [r3, #0]
 801a2ec:	2c2e      	cmp	r4, #46	; 0x2e
 801a2ee:	d11a      	bne.n	801a326 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801a2f0:	2301      	movs	r3, #1
 801a2f2:	703b      	strb	r3, [r7, #0]
 801a2f4:	6803      	ldr	r3, [r0, #0]
 801a2f6:	b10b      	cbz	r3, 801a2fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801a2f8:	3302      	adds	r3, #2
 801a2fa:	6003      	str	r3, [r0, #0]
 801a2fc:	680b      	ldr	r3, [r1, #0]
 801a2fe:	b10b      	cbz	r3, 801a304 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801a300:	3301      	adds	r3, #1
 801a302:	600b      	str	r3, [r1, #0]
 801a304:	6803      	ldr	r3, [r0, #0]
 801a306:	2b00      	cmp	r3, #0
 801a308:	d036      	beq.n	801a378 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801a30a:	881b      	ldrh	r3, [r3, #0]
 801a30c:	2b2a      	cmp	r3, #42	; 0x2a
 801a30e:	d137      	bne.n	801a380 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801a310:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801a314:	602b      	str	r3, [r5, #0]
 801a316:	6803      	ldr	r3, [r0, #0]
 801a318:	b10b      	cbz	r3, 801a31e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801a31a:	3302      	adds	r3, #2
 801a31c:	6003      	str	r3, [r0, #0]
 801a31e:	680b      	ldr	r3, [r1, #0]
 801a320:	b10b      	cbz	r3, 801a326 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801a322:	3301      	adds	r3, #1
 801a324:	600b      	str	r3, [r1, #0]
 801a326:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801a32a:	680c      	ldr	r4, [r1, #0]
 801a32c:	b134      	cbz	r4, 801a33c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801a32e:	7824      	ldrb	r4, [r4, #0]
 801a330:	e7cc      	b.n	801a2cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801a332:	680b      	ldr	r3, [r1, #0]
 801a334:	2b00      	cmp	r3, #0
 801a336:	d0f6      	beq.n	801a326 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801a338:	781c      	ldrb	r4, [r3, #0]
 801a33a:	e7d7      	b.n	801a2ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801a33c:	2300      	movs	r3, #0
 801a33e:	6033      	str	r3, [r6, #0]
 801a340:	220a      	movs	r2, #10
 801a342:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801a346:	fa1f f38c 	uxth.w	r3, ip
 801a34a:	2b09      	cmp	r3, #9
 801a34c:	d8ce      	bhi.n	801a2ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801a34e:	6833      	ldr	r3, [r6, #0]
 801a350:	fb02 c303 	mla	r3, r2, r3, ip
 801a354:	6033      	str	r3, [r6, #0]
 801a356:	6803      	ldr	r3, [r0, #0]
 801a358:	b10b      	cbz	r3, 801a35e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801a35a:	3302      	adds	r3, #2
 801a35c:	6003      	str	r3, [r0, #0]
 801a35e:	680b      	ldr	r3, [r1, #0]
 801a360:	b10b      	cbz	r3, 801a366 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801a362:	3301      	adds	r3, #1
 801a364:	600b      	str	r3, [r1, #0]
 801a366:	6803      	ldr	r3, [r0, #0]
 801a368:	b10b      	cbz	r3, 801a36e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801a36a:	881c      	ldrh	r4, [r3, #0]
 801a36c:	e7e9      	b.n	801a342 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801a36e:	680c      	ldr	r4, [r1, #0]
 801a370:	2c00      	cmp	r4, #0
 801a372:	d0e6      	beq.n	801a342 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801a374:	7824      	ldrb	r4, [r4, #0]
 801a376:	e7e4      	b.n	801a342 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801a378:	680b      	ldr	r3, [r1, #0]
 801a37a:	b10b      	cbz	r3, 801a380 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801a37c:	781b      	ldrb	r3, [r3, #0]
 801a37e:	e7c5      	b.n	801a30c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801a380:	2200      	movs	r2, #0
 801a382:	602a      	str	r2, [r5, #0]
 801a384:	240a      	movs	r4, #10
 801a386:	3b30      	subs	r3, #48	; 0x30
 801a388:	b29e      	uxth	r6, r3
 801a38a:	2e09      	cmp	r6, #9
 801a38c:	682a      	ldr	r2, [r5, #0]
 801a38e:	d813      	bhi.n	801a3b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801a390:	fb04 3302 	mla	r3, r4, r2, r3
 801a394:	602b      	str	r3, [r5, #0]
 801a396:	6803      	ldr	r3, [r0, #0]
 801a398:	b10b      	cbz	r3, 801a39e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801a39a:	3302      	adds	r3, #2
 801a39c:	6003      	str	r3, [r0, #0]
 801a39e:	680b      	ldr	r3, [r1, #0]
 801a3a0:	b10b      	cbz	r3, 801a3a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801a3a2:	3301      	adds	r3, #1
 801a3a4:	600b      	str	r3, [r1, #0]
 801a3a6:	6803      	ldr	r3, [r0, #0]
 801a3a8:	b10b      	cbz	r3, 801a3ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801a3aa:	881b      	ldrh	r3, [r3, #0]
 801a3ac:	e7eb      	b.n	801a386 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801a3ae:	680b      	ldr	r3, [r1, #0]
 801a3b0:	2b00      	cmp	r3, #0
 801a3b2:	d0e8      	beq.n	801a386 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801a3b4:	781b      	ldrb	r3, [r3, #0]
 801a3b6:	e7e6      	b.n	801a386 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801a3b8:	2a06      	cmp	r2, #6
 801a3ba:	bfa8      	it	ge
 801a3bc:	2206      	movge	r2, #6
 801a3be:	602a      	str	r2, [r5, #0]
 801a3c0:	e7b1      	b.n	801a326 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801a3c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801a3c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a3c6:	b0a3      	sub	sp, #140	; 0x8c
 801a3c8:	2600      	movs	r6, #0
 801a3ca:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801a3ce:	4607      	mov	r7, r0
 801a3d0:	4688      	mov	r8, r1
 801a3d2:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801a3d6:	4631      	mov	r1, r6
 801a3d8:	2242      	movs	r2, #66	; 0x42
 801a3da:	4648      	mov	r0, r9
 801a3dc:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801a3de:	960d      	str	r6, [sp, #52]	; 0x34
 801a3e0:	f00e fc20 	bl	8028c24 <memset>
 801a3e4:	b15f      	cbz	r7, 801a3fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801a3e6:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 801a3ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a3ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a3ee:	b152      	cbz	r2, 801a406 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801a3f0:	8812      	ldrh	r2, [r2, #0]
 801a3f2:	b10a      	cbz	r2, 801a3f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801a3f4:	459a      	cmp	sl, r3
 801a3f6:	dc2e      	bgt.n	801a456 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801a3f8:	2200      	movs	r2, #0
 801a3fa:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801a3fe:	4638      	mov	r0, r7
 801a400:	b023      	add	sp, #140	; 0x8c
 801a402:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a406:	9a08      	ldr	r2, [sp, #32]
 801a408:	2a00      	cmp	r2, #0
 801a40a:	d0f5      	beq.n	801a3f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801a40c:	7812      	ldrb	r2, [r2, #0]
 801a40e:	e7f0      	b.n	801a3f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801a410:	2d00      	cmp	r5, #0
 801a412:	d0ea      	beq.n	801a3ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801a414:	782a      	ldrb	r2, [r5, #0]
 801a416:	b142      	cbz	r2, 801a42a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801a418:	2a25      	cmp	r2, #37	; 0x25
 801a41a:	d001      	beq.n	801a420 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801a41c:	459a      	cmp	sl, r3
 801a41e:	dc08      	bgt.n	801a432 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801a420:	f1bb 0f00 	cmp.w	fp, #0
 801a424:	d121      	bne.n	801a46a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801a426:	2d00      	cmp	r5, #0
 801a428:	d0df      	beq.n	801a3ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801a42a:	782a      	ldrb	r2, [r5, #0]
 801a42c:	f04f 0b00 	mov.w	fp, #0
 801a430:	e01d      	b.n	801a46e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801a432:	f1bb 0f00 	cmp.w	fp, #0
 801a436:	d078      	beq.n	801a52a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801a438:	f8bb 2000 	ldrh.w	r2, [fp]
 801a43c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801a440:	f1bb 0f00 	cmp.w	fp, #0
 801a444:	d002      	beq.n	801a44c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801a446:	f10b 0202 	add.w	r2, fp, #2
 801a44a:	9209      	str	r2, [sp, #36]	; 0x24
 801a44c:	b10d      	cbz	r5, 801a452 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801a44e:	3501      	adds	r5, #1
 801a450:	9508      	str	r5, [sp, #32]
 801a452:	3301      	adds	r3, #1
 801a454:	930d      	str	r3, [sp, #52]	; 0x34
 801a456:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801a45a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a45c:	f1bb 0f00 	cmp.w	fp, #0
 801a460:	d0d6      	beq.n	801a410 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801a462:	f8bb 2000 	ldrh.w	r2, [fp]
 801a466:	2a00      	cmp	r2, #0
 801a468:	d1d6      	bne.n	801a418 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801a46a:	f8bb 2000 	ldrh.w	r2, [fp]
 801a46e:	2a00      	cmp	r2, #0
 801a470:	d0bb      	beq.n	801a3ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801a472:	459a      	cmp	sl, r3
 801a474:	ddb9      	ble.n	801a3ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801a476:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801a47a:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801a47e:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801a482:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801a486:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801a48a:	960e      	str	r6, [sp, #56]	; 0x38
 801a48c:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 801a490:	960f      	str	r6, [sp, #60]	; 0x3c
 801a492:	f1bb 0f00 	cmp.w	fp, #0
 801a496:	d002      	beq.n	801a49e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801a498:	f10b 0302 	add.w	r3, fp, #2
 801a49c:	9309      	str	r3, [sp, #36]	; 0x24
 801a49e:	b10d      	cbz	r5, 801a4a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801a4a0:	1c6b      	adds	r3, r5, #1
 801a4a2:	9308      	str	r3, [sp, #32]
 801a4a4:	ab0f      	add	r3, sp, #60	; 0x3c
 801a4a6:	9305      	str	r3, [sp, #20]
 801a4a8:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801a4ac:	9304      	str	r3, [sp, #16]
 801a4ae:	ab0e      	add	r3, sp, #56	; 0x38
 801a4b0:	9303      	str	r3, [sp, #12]
 801a4b2:	ab0c      	add	r3, sp, #48	; 0x30
 801a4b4:	9302      	str	r3, [sp, #8]
 801a4b6:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801a4ba:	9301      	str	r3, [sp, #4]
 801a4bc:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801a4c0:	9300      	str	r3, [sp, #0]
 801a4c2:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801a4c6:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801a4ca:	a908      	add	r1, sp, #32
 801a4cc:	a809      	add	r0, sp, #36	; 0x24
 801a4ce:	f7ff fea8 	bl	801a222 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801a4d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a4d4:	2b00      	cmp	r3, #0
 801a4d6:	bfbe      	ittt	lt
 801a4d8:	6823      	ldrlt	r3, [r4, #0]
 801a4da:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801a4de:	930e      	strlt	r3, [sp, #56]	; 0x38
 801a4e0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a4e2:	bfb8      	it	lt
 801a4e4:	3404      	addlt	r4, #4
 801a4e6:	2b00      	cmp	r3, #0
 801a4e8:	bfb8      	it	lt
 801a4ea:	6823      	ldrlt	r3, [r4, #0]
 801a4ec:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a4f0:	bfbe      	ittt	lt
 801a4f2:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801a4f6:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801a4f8:	3404      	addlt	r4, #4
 801a4fa:	b1d9      	cbz	r1, 801a534 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801a4fc:	880b      	ldrh	r3, [r1, #0]
 801a4fe:	2b69      	cmp	r3, #105	; 0x69
 801a500:	d01f      	beq.n	801a542 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801a502:	d82f      	bhi.n	801a564 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801a504:	2b58      	cmp	r3, #88	; 0x58
 801a506:	d01c      	beq.n	801a542 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801a508:	d818      	bhi.n	801a53c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801a50a:	2b25      	cmp	r3, #37	; 0x25
 801a50c:	d034      	beq.n	801a578 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801a50e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801a512:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a514:	f1bb 0f00 	cmp.w	fp, #0
 801a518:	f000 80b8 	beq.w	801a68c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801a51c:	f8bb 5000 	ldrh.w	r5, [fp]
 801a520:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801a524:	3301      	adds	r3, #1
 801a526:	930d      	str	r3, [sp, #52]	; 0x34
 801a528:	e029      	b.n	801a57e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801a52a:	b10d      	cbz	r5, 801a530 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801a52c:	782a      	ldrb	r2, [r5, #0]
 801a52e:	e785      	b.n	801a43c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801a530:	462a      	mov	r2, r5
 801a532:	e783      	b.n	801a43c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801a534:	2a00      	cmp	r2, #0
 801a536:	d0ea      	beq.n	801a50e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801a538:	7813      	ldrb	r3, [r2, #0]
 801a53a:	e7e0      	b.n	801a4fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801a53c:	3b63      	subs	r3, #99	; 0x63
 801a53e:	2b01      	cmp	r3, #1
 801a540:	d8e5      	bhi.n	801a50e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801a542:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801a546:	b329      	cbz	r1, 801a594 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801a548:	880b      	ldrh	r3, [r1, #0]
 801a54a:	2b69      	cmp	r3, #105	; 0x69
 801a54c:	d063      	beq.n	801a616 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801a54e:	d825      	bhi.n	801a59c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801a550:	2b63      	cmp	r3, #99	; 0x63
 801a552:	d038      	beq.n	801a5c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801a554:	2b64      	cmp	r3, #100	; 0x64
 801a556:	d05e      	beq.n	801a616 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801a558:	2b58      	cmp	r3, #88	; 0x58
 801a55a:	d07b      	beq.n	801a654 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801a55c:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801a560:	4625      	mov	r5, r4
 801a562:	e036      	b.n	801a5d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801a564:	2b73      	cmp	r3, #115	; 0x73
 801a566:	d0ec      	beq.n	801a542 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801a568:	d802      	bhi.n	801a570 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801a56a:	2b6f      	cmp	r3, #111	; 0x6f
 801a56c:	d1cf      	bne.n	801a50e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801a56e:	e7e8      	b.n	801a542 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801a570:	2b75      	cmp	r3, #117	; 0x75
 801a572:	d0e6      	beq.n	801a542 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801a574:	2b78      	cmp	r3, #120	; 0x78
 801a576:	e7f9      	b.n	801a56c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801a578:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a57a:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801a57e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a580:	b10b      	cbz	r3, 801a586 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801a582:	3302      	adds	r3, #2
 801a584:	9309      	str	r3, [sp, #36]	; 0x24
 801a586:	9b08      	ldr	r3, [sp, #32]
 801a588:	2b00      	cmp	r3, #0
 801a58a:	f43f af2e 	beq.w	801a3ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801a58e:	3301      	adds	r3, #1
 801a590:	9308      	str	r3, [sp, #32]
 801a592:	e72a      	b.n	801a3ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801a594:	2a00      	cmp	r2, #0
 801a596:	d0e1      	beq.n	801a55c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801a598:	7813      	ldrb	r3, [r2, #0]
 801a59a:	e7d6      	b.n	801a54a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801a59c:	2b73      	cmp	r3, #115	; 0x73
 801a59e:	d036      	beq.n	801a60e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801a5a0:	d807      	bhi.n	801a5b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801a5a2:	2b6f      	cmp	r3, #111	; 0x6f
 801a5a4:	d1da      	bne.n	801a55c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801a5a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a5a8:	1d25      	adds	r5, r4, #4
 801a5aa:	eba8 0202 	sub.w	r2, r8, r2
 801a5ae:	2308      	movs	r3, #8
 801a5b0:	e04a      	b.n	801a648 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801a5b2:	2b75      	cmp	r3, #117	; 0x75
 801a5b4:	d043      	beq.n	801a63e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801a5b6:	2b78      	cmp	r3, #120	; 0x78
 801a5b8:	d1d0      	bne.n	801a55c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801a5ba:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a5bc:	1d25      	adds	r5, r4, #4
 801a5be:	eba8 0202 	sub.w	r2, r8, r2
 801a5c2:	2310      	movs	r3, #16
 801a5c4:	e040      	b.n	801a648 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801a5c6:	6823      	ldr	r3, [r4, #0]
 801a5c8:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801a5cc:	1d25      	adds	r5, r4, #4
 801a5ce:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801a5d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a5d4:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801a5d8:	2b00      	cmp	r3, #0
 801a5da:	d052      	beq.n	801a682 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801a5dc:	881a      	ldrh	r2, [r3, #0]
 801a5de:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801a5e2:	a80d      	add	r0, sp, #52	; 0x34
 801a5e4:	9005      	str	r0, [sp, #20]
 801a5e6:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801a5ea:	9004      	str	r0, [sp, #16]
 801a5ec:	980e      	ldr	r0, [sp, #56]	; 0x38
 801a5ee:	9003      	str	r0, [sp, #12]
 801a5f0:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801a5f4:	9002      	str	r0, [sp, #8]
 801a5f6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801a5f8:	9001      	str	r0, [sp, #4]
 801a5fa:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801a5fe:	9000      	str	r0, [sp, #0]
 801a600:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801a604:	a810      	add	r0, sp, #64	; 0x40
 801a606:	f7ff fd49 	bl	801a09c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801a60a:	462c      	mov	r4, r5
 801a60c:	e7b7      	b.n	801a57e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801a60e:	6823      	ldr	r3, [r4, #0]
 801a610:	1d25      	adds	r5, r4, #4
 801a612:	9310      	str	r3, [sp, #64]	; 0x40
 801a614:	e7dd      	b.n	801a5d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801a616:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a618:	6820      	ldr	r0, [r4, #0]
 801a61a:	eba8 0202 	sub.w	r2, r8, r2
 801a61e:	230a      	movs	r3, #10
 801a620:	b292      	uxth	r2, r2
 801a622:	4649      	mov	r1, r9
 801a624:	f7ff fcf0 	bl	801a008 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801a628:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801a62c:	2b2d      	cmp	r3, #45	; 0x2d
 801a62e:	f104 0504 	add.w	r5, r4, #4
 801a632:	d1ce      	bne.n	801a5d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801a634:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801a638:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a63a:	3302      	adds	r3, #2
 801a63c:	e7e9      	b.n	801a612 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801a63e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a640:	1d25      	adds	r5, r4, #4
 801a642:	eba8 0202 	sub.w	r2, r8, r2
 801a646:	230a      	movs	r3, #10
 801a648:	b292      	uxth	r2, r2
 801a64a:	4649      	mov	r1, r9
 801a64c:	6820      	ldr	r0, [r4, #0]
 801a64e:	f7ff fd07 	bl	801a060 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801a652:	e7be      	b.n	801a5d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801a654:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a656:	6820      	ldr	r0, [r4, #0]
 801a658:	eba8 0202 	sub.w	r2, r8, r2
 801a65c:	b292      	uxth	r2, r2
 801a65e:	2310      	movs	r3, #16
 801a660:	4649      	mov	r1, r9
 801a662:	f7ff fcfd 	bl	801a060 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801a666:	1d25      	adds	r5, r4, #4
 801a668:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801a66c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801a670:	2b00      	cmp	r3, #0
 801a672:	d0ae      	beq.n	801a5d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801a674:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801a678:	2919      	cmp	r1, #25
 801a67a:	d8f7      	bhi.n	801a66c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801a67c:	3b20      	subs	r3, #32
 801a67e:	8013      	strh	r3, [r2, #0]
 801a680:	e7f4      	b.n	801a66c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801a682:	9a08      	ldr	r2, [sp, #32]
 801a684:	2a00      	cmp	r2, #0
 801a686:	d0aa      	beq.n	801a5de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801a688:	7812      	ldrb	r2, [r2, #0]
 801a68a:	e7a8      	b.n	801a5de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801a68c:	2d00      	cmp	r5, #0
 801a68e:	f43f af47 	beq.w	801a520 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801a692:	782d      	ldrb	r5, [r5, #0]
 801a694:	e744      	b.n	801a520 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801a696 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801a696:	b507      	push	{r0, r1, r2, lr}
 801a698:	9300      	str	r3, [sp, #0]
 801a69a:	4613      	mov	r3, r2
 801a69c:	2200      	movs	r2, #0
 801a69e:	f7ff fe90 	bl	801a3c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801a6a2:	b003      	add	sp, #12
 801a6a4:	f85d fb04 	ldr.w	pc, [sp], #4

0801a6a8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801a6a8:	b40c      	push	{r2, r3}
 801a6aa:	b507      	push	{r0, r1, r2, lr}
 801a6ac:	ab04      	add	r3, sp, #16
 801a6ae:	f853 2b04 	ldr.w	r2, [r3], #4
 801a6b2:	9301      	str	r3, [sp, #4]
 801a6b4:	f7ff ffef 	bl	801a696 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801a6b8:	b003      	add	sp, #12
 801a6ba:	f85d eb04 	ldr.w	lr, [sp], #4
 801a6be:	b002      	add	sp, #8
 801a6c0:	4770      	bx	lr
	...

0801a6c4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801a6c4:	4b01      	ldr	r3, [pc, #4]	; (801a6cc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801a6c6:	6018      	str	r0, [r3, #0]
 801a6c8:	4770      	bx	lr
 801a6ca:	bf00      	nop
 801a6cc:	2000e228 	.word	0x2000e228

0801a6d0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801a6d0:	4b06      	ldr	r3, [pc, #24]	; (801a6ec <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801a6d2:	881a      	ldrh	r2, [r3, #0]
 801a6d4:	4282      	cmp	r2, r0
 801a6d6:	d807      	bhi.n	801a6e8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801a6d8:	4b05      	ldr	r3, [pc, #20]	; (801a6f0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801a6da:	881b      	ldrh	r3, [r3, #0]
 801a6dc:	4413      	add	r3, r2
 801a6de:	4298      	cmp	r0, r3
 801a6e0:	bfac      	ite	ge
 801a6e2:	2000      	movge	r0, #0
 801a6e4:	2001      	movlt	r0, #1
 801a6e6:	4770      	bx	lr
 801a6e8:	2000      	movs	r0, #0
 801a6ea:	4770      	bx	lr
 801a6ec:	2000e248 	.word	0x2000e248
 801a6f0:	2000e24c 	.word	0x2000e24c

0801a6f4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801a6f4:	b508      	push	{r3, lr}
 801a6f6:	4601      	mov	r1, r0
 801a6f8:	f7ff ffea 	bl	801a6d0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801a6fc:	b118      	cbz	r0, 801a706 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801a6fe:	4b02      	ldr	r3, [pc, #8]	; (801a708 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801a700:	681b      	ldr	r3, [r3, #0]
 801a702:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801a706:	bd08      	pop	{r3, pc}
 801a708:	2000e22c 	.word	0x2000e22c

0801a70c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801a70c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a70e:	4c24      	ldr	r4, [pc, #144]	; (801a7a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801a710:	6823      	ldr	r3, [r4, #0]
 801a712:	2b00      	cmp	r3, #0
 801a714:	d042      	beq.n	801a79c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801a716:	4a23      	ldr	r2, [pc, #140]	; (801a7a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801a718:	4d23      	ldr	r5, [pc, #140]	; (801a7a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801a71a:	8811      	ldrh	r1, [r2, #0]
 801a71c:	f8b5 c000 	ldrh.w	ip, [r5]
 801a720:	4822      	ldr	r0, [pc, #136]	; (801a7ac <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801a722:	4461      	add	r1, ip
 801a724:	1c4a      	adds	r2, r1, #1
 801a726:	f022 0201 	bic.w	r2, r2, #1
 801a72a:	008f      	lsls	r7, r1, #2
 801a72c:	0412      	lsls	r2, r2, #16
 801a72e:	19de      	adds	r6, r3, r7
 801a730:	0c12      	lsrs	r2, r2, #16
 801a732:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801a736:	6006      	str	r6, [r0, #0]
 801a738:	4e1d      	ldr	r6, [pc, #116]	; (801a7b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801a73a:	19da      	adds	r2, r3, r7
 801a73c:	6032      	str	r2, [r6, #0]
 801a73e:	220e      	movs	r2, #14
 801a740:	fb02 f20c 	mul.w	r2, r2, ip
 801a744:	3203      	adds	r2, #3
 801a746:	f022 0203 	bic.w	r2, r2, #3
 801a74a:	443a      	add	r2, r7
 801a74c:	4f19      	ldr	r7, [pc, #100]	; (801a7b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801a74e:	4413      	add	r3, r2
 801a750:	603b      	str	r3, [r7, #0]
 801a752:	4f19      	ldr	r7, [pc, #100]	; (801a7b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801a754:	2300      	movs	r3, #0
 801a756:	803b      	strh	r3, [r7, #0]
 801a758:	4f18      	ldr	r7, [pc, #96]	; (801a7bc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801a75a:	683f      	ldr	r7, [r7, #0]
 801a75c:	1aba      	subs	r2, r7, r2
 801a75e:	4f18      	ldr	r7, [pc, #96]	; (801a7c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801a760:	603a      	str	r2, [r7, #0]
 801a762:	4a18      	ldr	r2, [pc, #96]	; (801a7c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801a764:	469c      	mov	ip, r3
 801a766:	8013      	strh	r3, [r2, #0]
 801a768:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801a76c:	428b      	cmp	r3, r1
 801a76e:	d10d      	bne.n	801a78c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801a770:	882d      	ldrh	r5, [r5, #0]
 801a772:	6830      	ldr	r0, [r6, #0]
 801a774:	2300      	movs	r3, #0
 801a776:	240e      	movs	r4, #14
 801a778:	429d      	cmp	r5, r3
 801a77a:	d90f      	bls.n	801a79c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801a77c:	fb04 0203 	mla	r2, r4, r3, r0
 801a780:	3301      	adds	r3, #1
 801a782:	7b11      	ldrb	r1, [r2, #12]
 801a784:	f36f 1145 	bfc	r1, #5, #1
 801a788:	7311      	strb	r1, [r2, #12]
 801a78a:	e7f5      	b.n	801a778 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801a78c:	6822      	ldr	r2, [r4, #0]
 801a78e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801a792:	6802      	ldr	r2, [r0, #0]
 801a794:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801a798:	3301      	adds	r3, #1
 801a79a:	e7e7      	b.n	801a76c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801a79c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a79e:	bf00      	nop
 801a7a0:	2000e22c 	.word	0x2000e22c
 801a7a4:	2000e248 	.word	0x2000e248
 801a7a8:	2000e24c 	.word	0x2000e24c
 801a7ac:	2000e240 	.word	0x2000e240
 801a7b0:	2000e230 	.word	0x2000e230
 801a7b4:	2000e238 	.word	0x2000e238
 801a7b8:	2000e24a 	.word	0x2000e24a
 801a7bc:	2000e234 	.word	0x2000e234
 801a7c0:	2000e244 	.word	0x2000e244
 801a7c4:	2000e23c 	.word	0x2000e23c

0801a7c8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801a7c8:	4b06      	ldr	r3, [pc, #24]	; (801a7e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801a7ca:	681b      	ldr	r3, [r3, #0]
 801a7cc:	b943      	cbnz	r3, 801a7e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801a7ce:	b139      	cbz	r1, 801a7e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801a7d0:	4b05      	ldr	r3, [pc, #20]	; (801a7e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801a7d2:	801a      	strh	r2, [r3, #0]
 801a7d4:	4b05      	ldr	r3, [pc, #20]	; (801a7ec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801a7d6:	6019      	str	r1, [r3, #0]
 801a7d8:	4b05      	ldr	r3, [pc, #20]	; (801a7f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801a7da:	6018      	str	r0, [r3, #0]
 801a7dc:	f7ff bf96 	b.w	801a70c <_ZN8touchgfx6Bitmap10clearCacheEv>
 801a7e0:	4770      	bx	lr
 801a7e2:	bf00      	nop
 801a7e4:	2000e238 	.word	0x2000e238
 801a7e8:	2000e24c 	.word	0x2000e24c
 801a7ec:	2000e234 	.word	0x2000e234
 801a7f0:	2000e22c 	.word	0x2000e22c

0801a7f4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801a7f4:	b470      	push	{r4, r5, r6}
 801a7f6:	4c07      	ldr	r4, [pc, #28]	; (801a814 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801a7f8:	6826      	ldr	r6, [r4, #0]
 801a7fa:	4605      	mov	r5, r0
 801a7fc:	4610      	mov	r0, r2
 801a7fe:	9a03      	ldr	r2, [sp, #12]
 801a800:	b936      	cbnz	r6, 801a810 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801a802:	6025      	str	r5, [r4, #0]
 801a804:	4c04      	ldr	r4, [pc, #16]	; (801a818 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801a806:	8021      	strh	r1, [r4, #0]
 801a808:	bc70      	pop	{r4, r5, r6}
 801a80a:	4619      	mov	r1, r3
 801a80c:	f7ff bfdc 	b.w	801a7c8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801a810:	bc70      	pop	{r4, r5, r6}
 801a812:	4770      	bx	lr
 801a814:	2000e250 	.word	0x2000e250
 801a818:	2000e248 	.word	0x2000e248

0801a81c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801a81c:	4a12      	ldr	r2, [pc, #72]	; (801a868 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801a81e:	8803      	ldrh	r3, [r0, #0]
 801a820:	8812      	ldrh	r2, [r2, #0]
 801a822:	4293      	cmp	r3, r2
 801a824:	d207      	bcs.n	801a836 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801a826:	4a11      	ldr	r2, [pc, #68]	; (801a86c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801a828:	6812      	ldr	r2, [r2, #0]
 801a82a:	2114      	movs	r1, #20
 801a82c:	fb01 2303 	mla	r3, r1, r3, r2
 801a830:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801a834:	4770      	bx	lr
 801a836:	490e      	ldr	r1, [pc, #56]	; (801a870 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801a838:	8809      	ldrh	r1, [r1, #0]
 801a83a:	4411      	add	r1, r2
 801a83c:	428b      	cmp	r3, r1
 801a83e:	da04      	bge.n	801a84a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801a840:	1a9b      	subs	r3, r3, r2
 801a842:	4a0c      	ldr	r2, [pc, #48]	; (801a874 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801a844:	210e      	movs	r1, #14
 801a846:	6812      	ldr	r2, [r2, #0]
 801a848:	e7f0      	b.n	801a82c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801a84a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a84e:	4293      	cmp	r3, r2
 801a850:	d108      	bne.n	801a864 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801a852:	4b09      	ldr	r3, [pc, #36]	; (801a878 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801a854:	781b      	ldrb	r3, [r3, #0]
 801a856:	b91b      	cbnz	r3, 801a860 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801a858:	4b08      	ldr	r3, [pc, #32]	; (801a87c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801a85a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801a85e:	4770      	bx	lr
 801a860:	4b07      	ldr	r3, [pc, #28]	; (801a880 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801a862:	e7fa      	b.n	801a85a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801a864:	2000      	movs	r0, #0
 801a866:	4770      	bx	lr
 801a868:	2000e248 	.word	0x2000e248
 801a86c:	2000e250 	.word	0x2000e250
 801a870:	2000e24c 	.word	0x2000e24c
 801a874:	2000e230 	.word	0x2000e230
 801a878:	2000e1b8 	.word	0x2000e1b8
 801a87c:	2000e1ba 	.word	0x2000e1ba
 801a880:	2000e1bc 	.word	0x2000e1bc

0801a884 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801a884:	4a12      	ldr	r2, [pc, #72]	; (801a8d0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801a886:	8803      	ldrh	r3, [r0, #0]
 801a888:	8812      	ldrh	r2, [r2, #0]
 801a88a:	4293      	cmp	r3, r2
 801a88c:	d207      	bcs.n	801a89e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801a88e:	4a11      	ldr	r2, [pc, #68]	; (801a8d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801a890:	6812      	ldr	r2, [r2, #0]
 801a892:	2114      	movs	r1, #20
 801a894:	fb01 2303 	mla	r3, r1, r3, r2
 801a898:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801a89c:	4770      	bx	lr
 801a89e:	490e      	ldr	r1, [pc, #56]	; (801a8d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801a8a0:	8809      	ldrh	r1, [r1, #0]
 801a8a2:	4411      	add	r1, r2
 801a8a4:	428b      	cmp	r3, r1
 801a8a6:	da04      	bge.n	801a8b2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801a8a8:	1a9b      	subs	r3, r3, r2
 801a8aa:	4a0c      	ldr	r2, [pc, #48]	; (801a8dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801a8ac:	210e      	movs	r1, #14
 801a8ae:	6812      	ldr	r2, [r2, #0]
 801a8b0:	e7f0      	b.n	801a894 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801a8b2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a8b6:	4293      	cmp	r3, r2
 801a8b8:	d108      	bne.n	801a8cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801a8ba:	4b09      	ldr	r3, [pc, #36]	; (801a8e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801a8bc:	781b      	ldrb	r3, [r3, #0]
 801a8be:	b91b      	cbnz	r3, 801a8c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801a8c0:	4b08      	ldr	r3, [pc, #32]	; (801a8e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801a8c2:	f9b3 0000 	ldrsh.w	r0, [r3]
 801a8c6:	4770      	bx	lr
 801a8c8:	4b07      	ldr	r3, [pc, #28]	; (801a8e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801a8ca:	e7fa      	b.n	801a8c2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801a8cc:	2000      	movs	r0, #0
 801a8ce:	4770      	bx	lr
 801a8d0:	2000e248 	.word	0x2000e248
 801a8d4:	2000e250 	.word	0x2000e250
 801a8d8:	2000e24c 	.word	0x2000e24c
 801a8dc:	2000e230 	.word	0x2000e230
 801a8e0:	2000e1b8 	.word	0x2000e1b8
 801a8e4:	2000e1bc 	.word	0x2000e1bc
 801a8e8:	2000e1ba 	.word	0x2000e1ba

0801a8ec <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801a8ec:	b510      	push	{r4, lr}
 801a8ee:	4a1f      	ldr	r2, [pc, #124]	; (801a96c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801a8f0:	880b      	ldrh	r3, [r1, #0]
 801a8f2:	8812      	ldrh	r2, [r2, #0]
 801a8f4:	4293      	cmp	r3, r2
 801a8f6:	d213      	bcs.n	801a920 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801a8f8:	4a1d      	ldr	r2, [pc, #116]	; (801a970 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801a8fa:	6812      	ldr	r2, [r2, #0]
 801a8fc:	2114      	movs	r1, #20
 801a8fe:	fb01 2303 	mla	r3, r1, r3, r2
 801a902:	8a1a      	ldrh	r2, [r3, #16]
 801a904:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801a908:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801a90c:	8a5b      	ldrh	r3, [r3, #18]
 801a90e:	8004      	strh	r4, [r0, #0]
 801a910:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801a914:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801a918:	8041      	strh	r1, [r0, #2]
 801a91a:	8082      	strh	r2, [r0, #4]
 801a91c:	80c3      	strh	r3, [r0, #6]
 801a91e:	e00e      	b.n	801a93e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801a920:	4914      	ldr	r1, [pc, #80]	; (801a974 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801a922:	8809      	ldrh	r1, [r1, #0]
 801a924:	4411      	add	r1, r2
 801a926:	428b      	cmp	r3, r1
 801a928:	da0a      	bge.n	801a940 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801a92a:	1a9b      	subs	r3, r3, r2
 801a92c:	4a12      	ldr	r2, [pc, #72]	; (801a978 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801a92e:	6812      	ldr	r2, [r2, #0]
 801a930:	210e      	movs	r1, #14
 801a932:	fb01 2303 	mla	r3, r1, r3, r2
 801a936:	681a      	ldr	r2, [r3, #0]
 801a938:	6002      	str	r2, [r0, #0]
 801a93a:	685a      	ldr	r2, [r3, #4]
 801a93c:	6042      	str	r2, [r0, #4]
 801a93e:	bd10      	pop	{r4, pc}
 801a940:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a944:	4293      	cmp	r3, r2
 801a946:	d10b      	bne.n	801a960 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801a948:	4b0c      	ldr	r3, [pc, #48]	; (801a97c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801a94a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801a94e:	4b0c      	ldr	r3, [pc, #48]	; (801a980 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801a950:	8081      	strh	r1, [r0, #4]
 801a952:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a956:	80c2      	strh	r2, [r0, #6]
 801a958:	2300      	movs	r3, #0
 801a95a:	8003      	strh	r3, [r0, #0]
 801a95c:	8043      	strh	r3, [r0, #2]
 801a95e:	e7ee      	b.n	801a93e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801a960:	2300      	movs	r3, #0
 801a962:	8003      	strh	r3, [r0, #0]
 801a964:	8043      	strh	r3, [r0, #2]
 801a966:	8083      	strh	r3, [r0, #4]
 801a968:	e7d8      	b.n	801a91c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801a96a:	bf00      	nop
 801a96c:	2000e248 	.word	0x2000e248
 801a970:	2000e250 	.word	0x2000e250
 801a974:	2000e24c 	.word	0x2000e24c
 801a978:	2000e230 	.word	0x2000e230
 801a97c:	2000e1b4 	.word	0x2000e1b4
 801a980:	2000e1b6 	.word	0x2000e1b6

0801a984 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801a984:	4a17      	ldr	r2, [pc, #92]	; (801a9e4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801a986:	8803      	ldrh	r3, [r0, #0]
 801a988:	8812      	ldrh	r2, [r2, #0]
 801a98a:	4293      	cmp	r3, r2
 801a98c:	d213      	bcs.n	801a9b6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801a98e:	4a16      	ldr	r2, [pc, #88]	; (801a9e8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801a990:	6812      	ldr	r2, [r2, #0]
 801a992:	2114      	movs	r1, #20
 801a994:	fb01 2303 	mla	r3, r1, r3, r2
 801a998:	8a1a      	ldrh	r2, [r3, #16]
 801a99a:	8919      	ldrh	r1, [r3, #8]
 801a99c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801a9a0:	428a      	cmp	r2, r1
 801a9a2:	db1d      	blt.n	801a9e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801a9a4:	8a58      	ldrh	r0, [r3, #18]
 801a9a6:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801a9aa:	895b      	ldrh	r3, [r3, #10]
 801a9ac:	4298      	cmp	r0, r3
 801a9ae:	bfac      	ite	ge
 801a9b0:	2000      	movge	r0, #0
 801a9b2:	2001      	movlt	r0, #1
 801a9b4:	4770      	bx	lr
 801a9b6:	490d      	ldr	r1, [pc, #52]	; (801a9ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801a9b8:	8809      	ldrh	r1, [r1, #0]
 801a9ba:	4411      	add	r1, r2
 801a9bc:	428b      	cmp	r3, r1
 801a9be:	da0d      	bge.n	801a9dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801a9c0:	1a9b      	subs	r3, r3, r2
 801a9c2:	4a0b      	ldr	r2, [pc, #44]	; (801a9f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801a9c4:	6812      	ldr	r2, [r2, #0]
 801a9c6:	210e      	movs	r1, #14
 801a9c8:	fb01 2303 	mla	r3, r1, r3, r2
 801a9cc:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801a9d0:	891a      	ldrh	r2, [r3, #8]
 801a9d2:	4291      	cmp	r1, r2
 801a9d4:	db04      	blt.n	801a9e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801a9d6:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801a9da:	e7e6      	b.n	801a9aa <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801a9dc:	2000      	movs	r0, #0
 801a9de:	4770      	bx	lr
 801a9e0:	2001      	movs	r0, #1
 801a9e2:	4770      	bx	lr
 801a9e4:	2000e248 	.word	0x2000e248
 801a9e8:	2000e250 	.word	0x2000e250
 801a9ec:	2000e24c 	.word	0x2000e24c
 801a9f0:	2000e230 	.word	0x2000e230

0801a9f4 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801a9f4:	4a12      	ldr	r2, [pc, #72]	; (801aa40 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801a9f6:	8803      	ldrh	r3, [r0, #0]
 801a9f8:	8811      	ldrh	r1, [r2, #0]
 801a9fa:	428b      	cmp	r3, r1
 801a9fc:	d20b      	bcs.n	801aa16 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801a9fe:	4a11      	ldr	r2, [pc, #68]	; (801aa44 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801aa00:	6812      	ldr	r2, [r2, #0]
 801aa02:	b112      	cbz	r2, 801aa0a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801aa04:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801aa08:	b9c0      	cbnz	r0, 801aa3c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801aa0a:	4a0f      	ldr	r2, [pc, #60]	; (801aa48 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801aa0c:	6811      	ldr	r1, [r2, #0]
 801aa0e:	2214      	movs	r2, #20
 801aa10:	4353      	muls	r3, r2
 801aa12:	58c8      	ldr	r0, [r1, r3]
 801aa14:	4770      	bx	lr
 801aa16:	4a0d      	ldr	r2, [pc, #52]	; (801aa4c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801aa18:	8812      	ldrh	r2, [r2, #0]
 801aa1a:	440a      	add	r2, r1
 801aa1c:	4293      	cmp	r3, r2
 801aa1e:	da04      	bge.n	801aa2a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801aa20:	4a08      	ldr	r2, [pc, #32]	; (801aa44 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801aa22:	6812      	ldr	r2, [r2, #0]
 801aa24:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801aa28:	4770      	bx	lr
 801aa2a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801aa2e:	4293      	cmp	r3, r2
 801aa30:	d103      	bne.n	801aa3a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801aa32:	4b07      	ldr	r3, [pc, #28]	; (801aa50 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801aa34:	681b      	ldr	r3, [r3, #0]
 801aa36:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801aa38:	4770      	bx	lr
 801aa3a:	2000      	movs	r0, #0
 801aa3c:	4770      	bx	lr
 801aa3e:	bf00      	nop
 801aa40:	2000e248 	.word	0x2000e248
 801aa44:	2000e22c 	.word	0x2000e22c
 801aa48:	2000e250 	.word	0x2000e250
 801aa4c:	2000e24c 	.word	0x2000e24c
 801aa50:	2000e1c0 	.word	0x2000e1c0

0801aa54 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801aa54:	4b24      	ldr	r3, [pc, #144]	; (801aae8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801aa56:	8802      	ldrh	r2, [r0, #0]
 801aa58:	8818      	ldrh	r0, [r3, #0]
 801aa5a:	4282      	cmp	r2, r0
 801aa5c:	d221      	bcs.n	801aaa2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801aa5e:	4b23      	ldr	r3, [pc, #140]	; (801aaec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801aa60:	6819      	ldr	r1, [r3, #0]
 801aa62:	2314      	movs	r3, #20
 801aa64:	fb03 1302 	mla	r3, r3, r2, r1
 801aa68:	6858      	ldr	r0, [r3, #4]
 801aa6a:	2800      	cmp	r0, #0
 801aa6c:	d03a      	beq.n	801aae4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801aa6e:	4920      	ldr	r1, [pc, #128]	; (801aaf0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801aa70:	6809      	ldr	r1, [r1, #0]
 801aa72:	2900      	cmp	r1, #0
 801aa74:	d036      	beq.n	801aae4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801aa76:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801aa7a:	2900      	cmp	r1, #0
 801aa7c:	d032      	beq.n	801aae4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801aa7e:	891a      	ldrh	r2, [r3, #8]
 801aa80:	8958      	ldrh	r0, [r3, #10]
 801aa82:	4350      	muls	r0, r2
 801aa84:	7c5a      	ldrb	r2, [r3, #17]
 801aa86:	7cdb      	ldrb	r3, [r3, #19]
 801aa88:	0952      	lsrs	r2, r2, #5
 801aa8a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801aa8e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801aa92:	2b0b      	cmp	r3, #11
 801aa94:	bf18      	it	ne
 801aa96:	0040      	lslne	r0, r0, #1
 801aa98:	3003      	adds	r0, #3
 801aa9a:	f020 0003 	bic.w	r0, r0, #3
 801aa9e:	4408      	add	r0, r1
 801aaa0:	4770      	bx	lr
 801aaa2:	4b14      	ldr	r3, [pc, #80]	; (801aaf4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801aaa4:	881b      	ldrh	r3, [r3, #0]
 801aaa6:	4403      	add	r3, r0
 801aaa8:	429a      	cmp	r2, r3
 801aaaa:	da1a      	bge.n	801aae2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801aaac:	4b12      	ldr	r3, [pc, #72]	; (801aaf8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801aaae:	681b      	ldr	r3, [r3, #0]
 801aab0:	1a10      	subs	r0, r2, r0
 801aab2:	210e      	movs	r1, #14
 801aab4:	fb01 3000 	mla	r0, r1, r0, r3
 801aab8:	7b03      	ldrb	r3, [r0, #12]
 801aaba:	f003 031f 	and.w	r3, r3, #31
 801aabe:	2b0b      	cmp	r3, #11
 801aac0:	d10b      	bne.n	801aada <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801aac2:	8903      	ldrh	r3, [r0, #8]
 801aac4:	8940      	ldrh	r0, [r0, #10]
 801aac6:	4358      	muls	r0, r3
 801aac8:	4b09      	ldr	r3, [pc, #36]	; (801aaf0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801aaca:	6819      	ldr	r1, [r3, #0]
 801aacc:	3003      	adds	r0, #3
 801aace:	f020 0303 	bic.w	r3, r0, #3
 801aad2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801aad6:	4418      	add	r0, r3
 801aad8:	4770      	bx	lr
 801aada:	2b0d      	cmp	r3, #13
 801aadc:	d101      	bne.n	801aae2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801aade:	300d      	adds	r0, #13
 801aae0:	4770      	bx	lr
 801aae2:	2000      	movs	r0, #0
 801aae4:	4770      	bx	lr
 801aae6:	bf00      	nop
 801aae8:	2000e248 	.word	0x2000e248
 801aaec:	2000e250 	.word	0x2000e250
 801aaf0:	2000e22c 	.word	0x2000e22c
 801aaf4:	2000e24c 	.word	0x2000e24c
 801aaf8:	2000e230 	.word	0x2000e230

0801aafc <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801aafc:	b510      	push	{r4, lr}
 801aafe:	4a17      	ldr	r2, [pc, #92]	; (801ab5c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801ab00:	8803      	ldrh	r3, [r0, #0]
 801ab02:	8812      	ldrh	r2, [r2, #0]
 801ab04:	4293      	cmp	r3, r2
 801ab06:	d20c      	bcs.n	801ab22 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801ab08:	4a15      	ldr	r2, [pc, #84]	; (801ab60 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801ab0a:	6812      	ldr	r2, [r2, #0]
 801ab0c:	2114      	movs	r1, #20
 801ab0e:	fb01 2303 	mla	r3, r1, r3, r2
 801ab12:	7c58      	ldrb	r0, [r3, #17]
 801ab14:	0942      	lsrs	r2, r0, #5
 801ab16:	7cd8      	ldrb	r0, [r3, #19]
 801ab18:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801ab1c:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801ab20:	bd10      	pop	{r4, pc}
 801ab22:	4910      	ldr	r1, [pc, #64]	; (801ab64 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801ab24:	8809      	ldrh	r1, [r1, #0]
 801ab26:	4411      	add	r1, r2
 801ab28:	428b      	cmp	r3, r1
 801ab2a:	da09      	bge.n	801ab40 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801ab2c:	1a9b      	subs	r3, r3, r2
 801ab2e:	4a0e      	ldr	r2, [pc, #56]	; (801ab68 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801ab30:	6812      	ldr	r2, [r2, #0]
 801ab32:	210e      	movs	r1, #14
 801ab34:	fb01 2303 	mla	r3, r1, r3, r2
 801ab38:	7b18      	ldrb	r0, [r3, #12]
 801ab3a:	f000 001f 	and.w	r0, r0, #31
 801ab3e:	e7ef      	b.n	801ab20 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801ab40:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801ab44:	4293      	cmp	r3, r2
 801ab46:	d106      	bne.n	801ab56 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801ab48:	f7f0 ff94 	bl	800ba74 <_ZN8touchgfx3HAL3lcdEv>
 801ab4c:	6803      	ldr	r3, [r0, #0]
 801ab4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ab52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ab54:	4718      	bx	r3
 801ab56:	2000      	movs	r0, #0
 801ab58:	e7e2      	b.n	801ab20 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801ab5a:	bf00      	nop
 801ab5c:	2000e248 	.word	0x2000e248
 801ab60:	2000e250 	.word	0x2000e250
 801ab64:	2000e24c 	.word	0x2000e24c
 801ab68:	2000e230 	.word	0x2000e230

0801ab6c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801ab6c:	2010      	movs	r0, #16
 801ab6e:	4770      	bx	lr

0801ab70 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801ab70:	2000      	movs	r0, #0
 801ab72:	4770      	bx	lr

0801ab74 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801ab74:	4b02      	ldr	r3, [pc, #8]	; (801ab80 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801ab76:	8818      	ldrh	r0, [r3, #0]
 801ab78:	0040      	lsls	r0, r0, #1
 801ab7a:	b280      	uxth	r0, r0
 801ab7c:	4770      	bx	lr
 801ab7e:	bf00      	nop
 801ab80:	2000e1ba 	.word	0x2000e1ba

0801ab84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801ab84:	2bff      	cmp	r3, #255	; 0xff
 801ab86:	d050      	beq.n	801ac2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801ab88:	2a0b      	cmp	r2, #11
 801ab8a:	d04a      	beq.n	801ac22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801ab8c:	d80e      	bhi.n	801abac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801ab8e:	2a03      	cmp	r2, #3
 801ab90:	d03f      	beq.n	801ac12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801ab92:	d804      	bhi.n	801ab9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801ab94:	2a01      	cmp	r2, #1
 801ab96:	d03e      	beq.n	801ac16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801ab98:	d93f      	bls.n	801ac1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801ab9a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801ab9c:	4770      	bx	lr
 801ab9e:	2a09      	cmp	r2, #9
 801aba0:	d03f      	beq.n	801ac22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801aba2:	d83c      	bhi.n	801ac1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801aba4:	2a08      	cmp	r2, #8
 801aba6:	d03a      	beq.n	801ac1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801aba8:	2000      	movs	r0, #0
 801abaa:	4770      	bx	lr
 801abac:	2a2f      	cmp	r2, #47	; 0x2f
 801abae:	d024      	beq.n	801abfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801abb0:	d80d      	bhi.n	801abce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801abb2:	2a2d      	cmp	r2, #45	; 0x2d
 801abb4:	d014      	beq.n	801abe0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801abb6:	d826      	bhi.n	801ac06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801abb8:	2a2c      	cmp	r2, #44	; 0x2c
 801abba:	d1f5      	bne.n	801aba8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801abbc:	684b      	ldr	r3, [r1, #4]
 801abbe:	781b      	ldrb	r3, [r3, #0]
 801abc0:	2b01      	cmp	r3, #1
 801abc2:	d018      	beq.n	801abf6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801abc4:	d323      	bcc.n	801ac0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801abc6:	2b02      	cmp	r3, #2
 801abc8:	d1ee      	bne.n	801aba8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801abca:	6880      	ldr	r0, [r0, #8]
 801abcc:	4770      	bx	lr
 801abce:	2a31      	cmp	r2, #49	; 0x31
 801abd0:	d004      	beq.n	801abdc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801abd2:	d328      	bcc.n	801ac26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801abd4:	2a32      	cmp	r2, #50	; 0x32
 801abd6:	d026      	beq.n	801ac26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801abd8:	2a33      	cmp	r2, #51	; 0x33
 801abda:	d1e5      	bne.n	801aba8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801abdc:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801abde:	4770      	bx	lr
 801abe0:	684b      	ldr	r3, [r1, #4]
 801abe2:	781b      	ldrb	r3, [r3, #0]
 801abe4:	2b01      	cmp	r3, #1
 801abe6:	d004      	beq.n	801abf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801abe8:	d30b      	bcc.n	801ac02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801abea:	2b02      	cmp	r3, #2
 801abec:	d1dc      	bne.n	801aba8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801abee:	6900      	ldr	r0, [r0, #16]
 801abf0:	4770      	bx	lr
 801abf2:	6a00      	ldr	r0, [r0, #32]
 801abf4:	4770      	bx	lr
 801abf6:	6980      	ldr	r0, [r0, #24]
 801abf8:	4770      	bx	lr
 801abfa:	684b      	ldr	r3, [r1, #4]
 801abfc:	781b      	ldrb	r3, [r3, #0]
 801abfe:	2b00      	cmp	r3, #0
 801ac00:	d1d2      	bne.n	801aba8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ac02:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801ac04:	4770      	bx	lr
 801ac06:	684b      	ldr	r3, [r1, #4]
 801ac08:	781b      	ldrb	r3, [r3, #0]
 801ac0a:	2b00      	cmp	r3, #0
 801ac0c:	d1cc      	bne.n	801aba8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ac0e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801ac10:	4770      	bx	lr
 801ac12:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801ac14:	4770      	bx	lr
 801ac16:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801ac18:	4770      	bx	lr
 801ac1a:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801ac1c:	4770      	bx	lr
 801ac1e:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801ac20:	4770      	bx	lr
 801ac22:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801ac24:	4770      	bx	lr
 801ac26:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801ac28:	4770      	bx	lr
 801ac2a:	2a0b      	cmp	r2, #11
 801ac2c:	d049      	beq.n	801acc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801ac2e:	d80e      	bhi.n	801ac4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801ac30:	2a03      	cmp	r2, #3
 801ac32:	d040      	beq.n	801acb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801ac34:	d804      	bhi.n	801ac40 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801ac36:	2a01      	cmp	r2, #1
 801ac38:	d03f      	beq.n	801acba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801ac3a:	d940      	bls.n	801acbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801ac3c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801ac3e:	4770      	bx	lr
 801ac40:	2a09      	cmp	r2, #9
 801ac42:	d03e      	beq.n	801acc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801ac44:	d801      	bhi.n	801ac4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801ac46:	2a08      	cmp	r2, #8
 801ac48:	d1ae      	bne.n	801aba8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ac4a:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801ac4c:	4770      	bx	lr
 801ac4e:	2a2f      	cmp	r2, #47	; 0x2f
 801ac50:	d024      	beq.n	801ac9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801ac52:	d80d      	bhi.n	801ac70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801ac54:	2a2d      	cmp	r2, #45	; 0x2d
 801ac56:	d014      	beq.n	801ac82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801ac58:	d826      	bhi.n	801aca8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801ac5a:	2a2c      	cmp	r2, #44	; 0x2c
 801ac5c:	d1a4      	bne.n	801aba8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ac5e:	684b      	ldr	r3, [r1, #4]
 801ac60:	781b      	ldrb	r3, [r3, #0]
 801ac62:	2b01      	cmp	r3, #1
 801ac64:	d018      	beq.n	801ac98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801ac66:	d324      	bcc.n	801acb2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801ac68:	2b02      	cmp	r3, #2
 801ac6a:	d19d      	bne.n	801aba8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ac6c:	68c0      	ldr	r0, [r0, #12]
 801ac6e:	4770      	bx	lr
 801ac70:	2a31      	cmp	r2, #49	; 0x31
 801ac72:	d004      	beq.n	801ac7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801ac74:	d327      	bcc.n	801acc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801ac76:	2a32      	cmp	r2, #50	; 0x32
 801ac78:	d025      	beq.n	801acc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801ac7a:	2a33      	cmp	r2, #51	; 0x33
 801ac7c:	d194      	bne.n	801aba8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ac7e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801ac80:	4770      	bx	lr
 801ac82:	684b      	ldr	r3, [r1, #4]
 801ac84:	781b      	ldrb	r3, [r3, #0]
 801ac86:	2b01      	cmp	r3, #1
 801ac88:	d004      	beq.n	801ac94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801ac8a:	d30b      	bcc.n	801aca4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801ac8c:	2b02      	cmp	r3, #2
 801ac8e:	d18b      	bne.n	801aba8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ac90:	6940      	ldr	r0, [r0, #20]
 801ac92:	4770      	bx	lr
 801ac94:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801ac96:	4770      	bx	lr
 801ac98:	69c0      	ldr	r0, [r0, #28]
 801ac9a:	4770      	bx	lr
 801ac9c:	684b      	ldr	r3, [r1, #4]
 801ac9e:	781b      	ldrb	r3, [r3, #0]
 801aca0:	2b00      	cmp	r3, #0
 801aca2:	d181      	bne.n	801aba8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801aca4:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801aca6:	4770      	bx	lr
 801aca8:	684b      	ldr	r3, [r1, #4]
 801acaa:	781b      	ldrb	r3, [r3, #0]
 801acac:	2b00      	cmp	r3, #0
 801acae:	f47f af7b 	bne.w	801aba8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801acb2:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801acb4:	4770      	bx	lr
 801acb6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801acb8:	4770      	bx	lr
 801acba:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801acbc:	4770      	bx	lr
 801acbe:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801acc0:	4770      	bx	lr
 801acc2:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801acc4:	4770      	bx	lr
 801acc6:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801acc8:	4770      	bx	lr

0801acca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801acca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801acce:	b087      	sub	sp, #28
 801acd0:	9815      	ldr	r0, [sp, #84]	; 0x54
 801acd2:	9205      	str	r2, [sp, #20]
 801acd4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801acd8:	9202      	str	r2, [sp, #8]
 801acda:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801acde:	9101      	str	r1, [sp, #4]
 801ace0:	6841      	ldr	r1, [r0, #4]
 801ace2:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801ace6:	fb01 2404 	mla	r4, r1, r4, r2
 801acea:	6802      	ldr	r2, [r0, #0]
 801acec:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801acf0:	f8de 2000 	ldr.w	r2, [lr]
 801acf4:	9203      	str	r2, [sp, #12]
 801acf6:	f8de 2004 	ldr.w	r2, [lr, #4]
 801acfa:	3204      	adds	r2, #4
 801acfc:	9204      	str	r2, [sp, #16]
 801acfe:	9a02      	ldr	r2, [sp, #8]
 801ad00:	43d6      	mvns	r6, r2
 801ad02:	b2f6      	uxtb	r6, r6
 801ad04:	9a01      	ldr	r2, [sp, #4]
 801ad06:	2a00      	cmp	r2, #0
 801ad08:	dc03      	bgt.n	801ad12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ad0a:	9a05      	ldr	r2, [sp, #20]
 801ad0c:	2a00      	cmp	r2, #0
 801ad0e:	f340 8129 	ble.w	801af64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801ad12:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ad14:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801ad18:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801ad1c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ad20:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ad22:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ad26:	2b00      	cmp	r3, #0
 801ad28:	dd0e      	ble.n	801ad48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ad2a:	1408      	asrs	r0, r1, #16
 801ad2c:	d405      	bmi.n	801ad3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ad2e:	4560      	cmp	r0, ip
 801ad30:	da03      	bge.n	801ad3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ad32:	1410      	asrs	r0, r2, #16
 801ad34:	d401      	bmi.n	801ad3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ad36:	42b8      	cmp	r0, r7
 801ad38:	db07      	blt.n	801ad4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ad3a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ad3c:	4401      	add	r1, r0
 801ad3e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ad40:	3b01      	subs	r3, #1
 801ad42:	4402      	add	r2, r0
 801ad44:	3402      	adds	r4, #2
 801ad46:	e7ee      	b.n	801ad26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801ad48:	d071      	beq.n	801ae2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ad4a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ad4c:	1e58      	subs	r0, r3, #1
 801ad4e:	fb05 1500 	mla	r5, r5, r0, r1
 801ad52:	142d      	asrs	r5, r5, #16
 801ad54:	d45f      	bmi.n	801ae16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ad56:	4565      	cmp	r5, ip
 801ad58:	da5d      	bge.n	801ae16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ad5a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ad5c:	fb05 2000 	mla	r0, r5, r0, r2
 801ad60:	1400      	asrs	r0, r0, #16
 801ad62:	d458      	bmi.n	801ae16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ad64:	42b8      	cmp	r0, r7
 801ad66:	da56      	bge.n	801ae16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ad68:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801ad6c:	4699      	mov	r9, r3
 801ad6e:	46a2      	mov	sl, r4
 801ad70:	f1b9 0f00 	cmp.w	r9, #0
 801ad74:	dd57      	ble.n	801ae26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801ad76:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801ad7a:	9803      	ldr	r0, [sp, #12]
 801ad7c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801ad80:	140d      	asrs	r5, r1, #16
 801ad82:	fb07 000c 	mla	r0, r7, ip, r0
 801ad86:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 801ad8a:	5d40      	ldrb	r0, [r0, r5]
 801ad8c:	9d04      	ldr	r5, [sp, #16]
 801ad8e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ad92:	f8ba 5000 	ldrh.w	r5, [sl]
 801ad96:	122f      	asrs	r7, r5, #8
 801ad98:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ad9c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ada0:	fb17 f706 	smulbb	r7, r7, r6
 801ada4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801ada8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801adac:	00ed      	lsls	r5, r5, #3
 801adae:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801adb2:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801adb6:	10c7      	asrs	r7, r0, #3
 801adb8:	b2ed      	uxtb	r5, r5
 801adba:	00c0      	lsls	r0, r0, #3
 801adbc:	fb18 f806 	smulbb	r8, r8, r6
 801adc0:	fb15 f506 	smulbb	r5, r5, r6
 801adc4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801adc8:	b2c0      	uxtb	r0, r0
 801adca:	fa1f fc8c 	uxth.w	ip, ip
 801adce:	fb07 870b 	mla	r7, r7, fp, r8
 801add2:	fb00 500b 	mla	r0, r0, fp, r5
 801add6:	b280      	uxth	r0, r0
 801add8:	b2bf      	uxth	r7, r7
 801adda:	f10c 0501 	add.w	r5, ip, #1
 801adde:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ade2:	f107 0801 	add.w	r8, r7, #1
 801ade6:	1c45      	adds	r5, r0, #1
 801ade8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801adec:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801adf0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801adf2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801adf6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801adfa:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801adfe:	ea45 0c0c 	orr.w	ip, r5, ip
 801ae02:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ae06:	4401      	add	r1, r0
 801ae08:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ae0a:	ea4c 0c08 	orr.w	ip, ip, r8
 801ae0e:	f82a cb02 	strh.w	ip, [sl], #2
 801ae12:	4402      	add	r2, r0
 801ae14:	e7ac      	b.n	801ad70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ae16:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801ae1a:	f04f 0800 	mov.w	r8, #0
 801ae1e:	eb03 0008 	add.w	r0, r3, r8
 801ae22:	2800      	cmp	r0, #0
 801ae24:	dc41      	bgt.n	801aeaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801ae26:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ae2a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ae2e:	9b01      	ldr	r3, [sp, #4]
 801ae30:	2b00      	cmp	r3, #0
 801ae32:	f340 8097 	ble.w	801af64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801ae36:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ae3a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ae3e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ae42:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ae44:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ae48:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ae4c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ae50:	eef0 6a62 	vmov.f32	s13, s5
 801ae54:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ae58:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ae5c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ae60:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801ae64:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ae68:	eef0 6a43 	vmov.f32	s13, s6
 801ae6c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ae70:	ee12 2a90 	vmov	r2, s5
 801ae74:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ae78:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae7c:	ee13 2a10 	vmov	r2, s6
 801ae80:	9313      	str	r3, [sp, #76]	; 0x4c
 801ae82:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ae84:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae88:	9314      	str	r3, [sp, #80]	; 0x50
 801ae8a:	9b01      	ldr	r3, [sp, #4]
 801ae8c:	9a05      	ldr	r2, [sp, #20]
 801ae8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ae92:	3b01      	subs	r3, #1
 801ae94:	9301      	str	r3, [sp, #4]
 801ae96:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801ae9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ae9c:	eeb0 3a67 	vmov.f32	s6, s15
 801aea0:	bf08      	it	eq
 801aea2:	4613      	moveq	r3, r2
 801aea4:	eef0 2a47 	vmov.f32	s5, s14
 801aea8:	e72c      	b.n	801ad04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801aeaa:	140f      	asrs	r7, r1, #16
 801aeac:	d453      	bmi.n	801af56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801aeae:	f8de 5008 	ldr.w	r5, [lr, #8]
 801aeb2:	42bd      	cmp	r5, r7
 801aeb4:	dd4f      	ble.n	801af56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801aeb6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801aeba:	d44c      	bmi.n	801af56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801aebc:	f8de 000c 	ldr.w	r0, [lr, #12]
 801aec0:	4560      	cmp	r0, ip
 801aec2:	dd48      	ble.n	801af56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801aec4:	9803      	ldr	r0, [sp, #12]
 801aec6:	b22d      	sxth	r5, r5
 801aec8:	fb0c 0505 	mla	r5, ip, r5, r0
 801aecc:	5de8      	ldrb	r0, [r5, r7]
 801aece:	9d04      	ldr	r5, [sp, #16]
 801aed0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801aed4:	f06f 0501 	mvn.w	r5, #1
 801aed8:	fb05 fb08 	mul.w	fp, r5, r8
 801aedc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801aee0:	f834 500b 	ldrh.w	r5, [r4, fp]
 801aee4:	122f      	asrs	r7, r5, #8
 801aee6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801aeea:	fb17 f706 	smulbb	r7, r7, r6
 801aeee:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801aef2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aef6:	00ed      	lsls	r5, r5, #3
 801aef8:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801aefc:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801af00:	10c7      	asrs	r7, r0, #3
 801af02:	b2ed      	uxtb	r5, r5
 801af04:	00c0      	lsls	r0, r0, #3
 801af06:	fb19 f906 	smulbb	r9, r9, r6
 801af0a:	fb15 f506 	smulbb	r5, r5, r6
 801af0e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801af12:	b2c0      	uxtb	r0, r0
 801af14:	fa1f fc8c 	uxth.w	ip, ip
 801af18:	fb07 970a 	mla	r7, r7, sl, r9
 801af1c:	fb00 500a 	mla	r0, r0, sl, r5
 801af20:	b2bf      	uxth	r7, r7
 801af22:	b280      	uxth	r0, r0
 801af24:	f10c 0501 	add.w	r5, ip, #1
 801af28:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801af2c:	f107 0901 	add.w	r9, r7, #1
 801af30:	1c45      	adds	r5, r0, #1
 801af32:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801af36:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801af3a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801af3e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801af42:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801af46:	ea45 0c0c 	orr.w	ip, r5, ip
 801af4a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801af4e:	ea4c 0c09 	orr.w	ip, ip, r9
 801af52:	f824 c00b 	strh.w	ip, [r4, fp]
 801af56:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801af58:	4401      	add	r1, r0
 801af5a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801af5c:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 801af60:	4402      	add	r2, r0
 801af62:	e75c      	b.n	801ae1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801af64:	b007      	add	sp, #28
 801af66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801af6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801af6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af6e:	b085      	sub	sp, #20
 801af70:	4693      	mov	fp, r2
 801af72:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801af74:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801af76:	6870      	ldr	r0, [r6, #4]
 801af78:	9100      	str	r1, [sp, #0]
 801af7a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801af7e:	fb00 2404 	mla	r4, r0, r4, r2
 801af82:	6832      	ldr	r2, [r6, #0]
 801af84:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801af88:	682a      	ldr	r2, [r5, #0]
 801af8a:	9201      	str	r2, [sp, #4]
 801af8c:	686a      	ldr	r2, [r5, #4]
 801af8e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801af92:	3204      	adds	r2, #4
 801af94:	9202      	str	r2, [sp, #8]
 801af96:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801af9a:	9a00      	ldr	r2, [sp, #0]
 801af9c:	2a00      	cmp	r2, #0
 801af9e:	dc03      	bgt.n	801afa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801afa0:	f1bb 0f00 	cmp.w	fp, #0
 801afa4:	f340 80a0 	ble.w	801b0e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801afa8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801afaa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801afae:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801afb2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801afb6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801afb8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801afbc:	2b00      	cmp	r3, #0
 801afbe:	dd0c      	ble.n	801afda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801afc0:	1406      	asrs	r6, r0, #16
 801afc2:	d405      	bmi.n	801afd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801afc4:	454e      	cmp	r6, r9
 801afc6:	da03      	bge.n	801afd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801afc8:	1416      	asrs	r6, r2, #16
 801afca:	d401      	bmi.n	801afd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801afcc:	4546      	cmp	r6, r8
 801afce:	db05      	blt.n	801afdc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801afd0:	4470      	add	r0, lr
 801afd2:	4462      	add	r2, ip
 801afd4:	3b01      	subs	r3, #1
 801afd6:	3402      	adds	r4, #2
 801afd8:	e7f0      	b.n	801afbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801afda:	d00f      	beq.n	801affc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801afdc:	1e5e      	subs	r6, r3, #1
 801afde:	fb0e 0706 	mla	r7, lr, r6, r0
 801afe2:	143f      	asrs	r7, r7, #16
 801afe4:	d541      	bpl.n	801b06a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801afe6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801afea:	4698      	mov	r8, r3
 801afec:	9603      	str	r6, [sp, #12]
 801afee:	f1b8 0f00 	cmp.w	r8, #0
 801aff2:	dc59      	bgt.n	801b0a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801aff4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801aff8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801affc:	9b00      	ldr	r3, [sp, #0]
 801affe:	2b00      	cmp	r3, #0
 801b000:	dd72      	ble.n	801b0e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801b002:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b006:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b00a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b00e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b010:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b014:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b018:	eeb0 6a62 	vmov.f32	s12, s5
 801b01c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b020:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b024:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b028:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b02c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b030:	eeb0 6a43 	vmov.f32	s12, s6
 801b034:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b038:	ee12 2a90 	vmov	r2, s5
 801b03c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b040:	fb92 fef3 	sdiv	lr, r2, r3
 801b044:	ee13 2a10 	vmov	r2, s6
 801b048:	fb92 fcf3 	sdiv	ip, r2, r3
 801b04c:	9b00      	ldr	r3, [sp, #0]
 801b04e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b052:	3b01      	subs	r3, #1
 801b054:	9300      	str	r3, [sp, #0]
 801b056:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b05a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b05c:	eeb0 3a67 	vmov.f32	s6, s15
 801b060:	bf08      	it	eq
 801b062:	465b      	moveq	r3, fp
 801b064:	eef0 2a47 	vmov.f32	s5, s14
 801b068:	e797      	b.n	801af9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b06a:	454f      	cmp	r7, r9
 801b06c:	dabb      	bge.n	801afe6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b06e:	fb0c 2606 	mla	r6, ip, r6, r2
 801b072:	1436      	asrs	r6, r6, #16
 801b074:	d4b7      	bmi.n	801afe6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b076:	4546      	cmp	r6, r8
 801b078:	dab5      	bge.n	801afe6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b07a:	461e      	mov	r6, r3
 801b07c:	46a0      	mov	r8, r4
 801b07e:	2e00      	cmp	r6, #0
 801b080:	ddb8      	ble.n	801aff4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b082:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801b086:	9901      	ldr	r1, [sp, #4]
 801b088:	1417      	asrs	r7, r2, #16
 801b08a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801b08e:	fb0a 1707 	mla	r7, sl, r7, r1
 801b092:	9902      	ldr	r1, [sp, #8]
 801b094:	f817 7009 	ldrb.w	r7, [r7, r9]
 801b098:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801b09c:	f828 7b02 	strh.w	r7, [r8], #2
 801b0a0:	4470      	add	r0, lr
 801b0a2:	4462      	add	r2, ip
 801b0a4:	3e01      	subs	r6, #1
 801b0a6:	e7ea      	b.n	801b07e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801b0a8:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b0ac:	d417      	bmi.n	801b0de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801b0ae:	68ae      	ldr	r6, [r5, #8]
 801b0b0:	454e      	cmp	r6, r9
 801b0b2:	dd14      	ble.n	801b0de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801b0b4:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801b0b8:	d411      	bmi.n	801b0de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801b0ba:	68ef      	ldr	r7, [r5, #12]
 801b0bc:	4557      	cmp	r7, sl
 801b0be:	dd0e      	ble.n	801b0de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801b0c0:	9f01      	ldr	r7, [sp, #4]
 801b0c2:	b236      	sxth	r6, r6
 801b0c4:	fb0a 7606 	mla	r6, sl, r6, r7
 801b0c8:	9f02      	ldr	r7, [sp, #8]
 801b0ca:	f816 6009 	ldrb.w	r6, [r6, r9]
 801b0ce:	f06f 0101 	mvn.w	r1, #1
 801b0d2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801b0d6:	fb01 f608 	mul.w	r6, r1, r8
 801b0da:	9903      	ldr	r1, [sp, #12]
 801b0dc:	538f      	strh	r7, [r1, r6]
 801b0de:	4470      	add	r0, lr
 801b0e0:	4462      	add	r2, ip
 801b0e2:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 801b0e6:	e782      	b.n	801afee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b0e8:	b005      	add	sp, #20
 801b0ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b0ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b0ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0f2:	b087      	sub	sp, #28
 801b0f4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b0f6:	9205      	str	r2, [sp, #20]
 801b0f8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b0fc:	9203      	str	r2, [sp, #12]
 801b0fe:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801b102:	9102      	str	r1, [sp, #8]
 801b104:	6861      	ldr	r1, [r4, #4]
 801b106:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801b10a:	fb01 2000 	mla	r0, r1, r0, r2
 801b10e:	6822      	ldr	r2, [r4, #0]
 801b110:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801b114:	9200      	str	r2, [sp, #0]
 801b116:	f8dc 2000 	ldr.w	r2, [ip]
 801b11a:	9204      	str	r2, [sp, #16]
 801b11c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801b120:	3204      	adds	r2, #4
 801b122:	9201      	str	r2, [sp, #4]
 801b124:	9a03      	ldr	r2, [sp, #12]
 801b126:	43d5      	mvns	r5, r2
 801b128:	b2ed      	uxtb	r5, r5
 801b12a:	9a02      	ldr	r2, [sp, #8]
 801b12c:	2a00      	cmp	r2, #0
 801b12e:	dc03      	bgt.n	801b138 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b130:	9a05      	ldr	r2, [sp, #20]
 801b132:	2a00      	cmp	r2, #0
 801b134:	f340 812c 	ble.w	801b390 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801b138:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b13a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801b13e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801b142:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b146:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b148:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b14c:	2b00      	cmp	r3, #0
 801b14e:	dd10      	ble.n	801b172 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b150:	140c      	asrs	r4, r1, #16
 801b152:	d405      	bmi.n	801b160 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b154:	4574      	cmp	r4, lr
 801b156:	da03      	bge.n	801b160 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b158:	1414      	asrs	r4, r2, #16
 801b15a:	d401      	bmi.n	801b160 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b15c:	42bc      	cmp	r4, r7
 801b15e:	db09      	blt.n	801b174 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b160:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b162:	9800      	ldr	r0, [sp, #0]
 801b164:	4421      	add	r1, r4
 801b166:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b168:	3002      	adds	r0, #2
 801b16a:	4422      	add	r2, r4
 801b16c:	3b01      	subs	r3, #1
 801b16e:	9000      	str	r0, [sp, #0]
 801b170:	e7ec      	b.n	801b14c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b172:	d071      	beq.n	801b258 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801b174:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b176:	1e5c      	subs	r4, r3, #1
 801b178:	fb06 1604 	mla	r6, r6, r4, r1
 801b17c:	1436      	asrs	r6, r6, #16
 801b17e:	d45d      	bmi.n	801b23c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b180:	4576      	cmp	r6, lr
 801b182:	da5b      	bge.n	801b23c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b184:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801b186:	fb06 2404 	mla	r4, r6, r4, r2
 801b18a:	1424      	asrs	r4, r4, #16
 801b18c:	d456      	bmi.n	801b23c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b18e:	42bc      	cmp	r4, r7
 801b190:	da54      	bge.n	801b23c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b192:	f8dd 9000 	ldr.w	r9, [sp]
 801b196:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801b19a:	4698      	mov	r8, r3
 801b19c:	f1b8 0f00 	cmp.w	r8, #0
 801b1a0:	dd54      	ble.n	801b24c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801b1a2:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801b1a6:	9804      	ldr	r0, [sp, #16]
 801b1a8:	1414      	asrs	r4, r2, #16
 801b1aa:	fb07 0404 	mla	r4, r7, r4, r0
 801b1ae:	140e      	asrs	r6, r1, #16
 801b1b0:	9801      	ldr	r0, [sp, #4]
 801b1b2:	f814 e006 	ldrb.w	lr, [r4, r6]
 801b1b6:	f8b9 4000 	ldrh.w	r4, [r9]
 801b1ba:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b1be:	eb00 0b0e 	add.w	fp, r0, lr
 801b1c2:	1227      	asrs	r7, r4, #8
 801b1c4:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801b1c8:	f89b b001 	ldrb.w	fp, [fp, #1]
 801b1cc:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801b1d0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b1d2:	fb16 f60a 	smulbb	r6, r6, sl
 801b1d6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b1da:	fb07 6705 	mla	r7, r7, r5, r6
 801b1de:	10e6      	asrs	r6, r4, #3
 801b1e0:	00e4      	lsls	r4, r4, #3
 801b1e2:	b2e4      	uxtb	r4, r4
 801b1e4:	fb1b fb0a 	smulbb	fp, fp, sl
 801b1e8:	fb14 f405 	smulbb	r4, r4, r5
 801b1ec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b1f0:	b2bf      	uxth	r7, r7
 801b1f2:	fb06 b605 	mla	r6, r6, r5, fp
 801b1f6:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801b1fa:	b2b6      	uxth	r6, r6
 801b1fc:	fa1f fe8e 	uxth.w	lr, lr
 801b200:	1c7c      	adds	r4, r7, #1
 801b202:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801b206:	f106 0b01 	add.w	fp, r6, #1
 801b20a:	f10e 0401 	add.w	r4, lr, #1
 801b20e:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801b212:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801b216:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b21a:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801b21e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801b222:	4327      	orrs	r7, r4
 801b224:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801b228:	4401      	add	r1, r0
 801b22a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801b22c:	ea47 070b 	orr.w	r7, r7, fp
 801b230:	f829 7b02 	strh.w	r7, [r9], #2
 801b234:	4402      	add	r2, r0
 801b236:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 801b23a:	e7af      	b.n	801b19c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b23c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801b240:	f04f 0e00 	mov.w	lr, #0
 801b244:	eb03 040e 	add.w	r4, r3, lr
 801b248:	2c00      	cmp	r4, #0
 801b24a:	dc43      	bgt.n	801b2d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801b24c:	9a00      	ldr	r2, [sp, #0]
 801b24e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b252:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b256:	9300      	str	r3, [sp, #0]
 801b258:	9b02      	ldr	r3, [sp, #8]
 801b25a:	2b00      	cmp	r3, #0
 801b25c:	f340 8098 	ble.w	801b390 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801b260:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b264:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b268:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b26c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b26e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b272:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b276:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b27a:	eef0 6a62 	vmov.f32	s13, s5
 801b27e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b282:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b286:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b28a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801b28e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b292:	eef0 6a43 	vmov.f32	s13, s6
 801b296:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b29a:	ee12 2a90 	vmov	r2, s5
 801b29e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b2a2:	fb92 f3f3 	sdiv	r3, r2, r3
 801b2a6:	ee13 2a10 	vmov	r2, s6
 801b2aa:	9313      	str	r3, [sp, #76]	; 0x4c
 801b2ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b2ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801b2b2:	9314      	str	r3, [sp, #80]	; 0x50
 801b2b4:	9b02      	ldr	r3, [sp, #8]
 801b2b6:	9a05      	ldr	r2, [sp, #20]
 801b2b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b2bc:	3b01      	subs	r3, #1
 801b2be:	9302      	str	r3, [sp, #8]
 801b2c0:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801b2c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b2c6:	eeb0 3a67 	vmov.f32	s6, s15
 801b2ca:	bf08      	it	eq
 801b2cc:	4613      	moveq	r3, r2
 801b2ce:	eef0 2a47 	vmov.f32	s5, s14
 801b2d2:	e72a      	b.n	801b12a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b2d4:	140f      	asrs	r7, r1, #16
 801b2d6:	d454      	bmi.n	801b382 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b2d8:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801b2dc:	42be      	cmp	r6, r7
 801b2de:	dd50      	ble.n	801b382 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b2e0:	ea5f 4822 	movs.w	r8, r2, asr #16
 801b2e4:	d44d      	bmi.n	801b382 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b2e6:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801b2ea:	4544      	cmp	r4, r8
 801b2ec:	dd49      	ble.n	801b382 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b2ee:	9c04      	ldr	r4, [sp, #16]
 801b2f0:	b236      	sxth	r6, r6
 801b2f2:	fb08 4606 	mla	r6, r8, r6, r4
 801b2f6:	f06f 0001 	mvn.w	r0, #1
 801b2fa:	f816 8007 	ldrb.w	r8, [r6, r7]
 801b2fe:	9c01      	ldr	r4, [sp, #4]
 801b300:	fb00 fa0e 	mul.w	sl, r0, lr
 801b304:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801b308:	9800      	ldr	r0, [sp, #0]
 801b30a:	eb04 0b08 	add.w	fp, r4, r8
 801b30e:	f830 400a 	ldrh.w	r4, [r0, sl]
 801b312:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801b316:	9801      	ldr	r0, [sp, #4]
 801b318:	f89b b001 	ldrb.w	fp, [fp, #1]
 801b31c:	f810 8008 	ldrb.w	r8, [r0, r8]
 801b320:	9800      	ldr	r0, [sp, #0]
 801b322:	1227      	asrs	r7, r4, #8
 801b324:	fb16 f609 	smulbb	r6, r6, r9
 801b328:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b32c:	fb07 6705 	mla	r7, r7, r5, r6
 801b330:	10e6      	asrs	r6, r4, #3
 801b332:	00e4      	lsls	r4, r4, #3
 801b334:	b2e4      	uxtb	r4, r4
 801b336:	fb1b fb09 	smulbb	fp, fp, r9
 801b33a:	fb14 f405 	smulbb	r4, r4, r5
 801b33e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b342:	b2bf      	uxth	r7, r7
 801b344:	fb06 b605 	mla	r6, r6, r5, fp
 801b348:	fb08 4809 	mla	r8, r8, r9, r4
 801b34c:	b2b6      	uxth	r6, r6
 801b34e:	fa1f f888 	uxth.w	r8, r8
 801b352:	1c7c      	adds	r4, r7, #1
 801b354:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801b358:	f106 0b01 	add.w	fp, r6, #1
 801b35c:	f108 0401 	add.w	r4, r8, #1
 801b360:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801b364:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801b368:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b36c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801b370:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801b374:	4327      	orrs	r7, r4
 801b376:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801b37a:	ea47 070b 	orr.w	r7, r7, fp
 801b37e:	f820 700a 	strh.w	r7, [r0, sl]
 801b382:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b384:	4401      	add	r1, r0
 801b386:	9814      	ldr	r0, [sp, #80]	; 0x50
 801b388:	f10e 3eff 	add.w	lr, lr, #4294967295	; 0xffffffff
 801b38c:	4402      	add	r2, r0
 801b38e:	e759      	b.n	801b244 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801b390:	b007      	add	sp, #28
 801b392:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801b398 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b398:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b39c:	b085      	sub	sp, #20
 801b39e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b3a2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b3a4:	9203      	str	r2, [sp, #12]
 801b3a6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b3aa:	6870      	ldr	r0, [r6, #4]
 801b3ac:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b3ae:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801b3b2:	686f      	ldr	r7, [r5, #4]
 801b3b4:	9101      	str	r1, [sp, #4]
 801b3b6:	fb00 2404 	mla	r4, r0, r4, r2
 801b3ba:	6832      	ldr	r2, [r6, #0]
 801b3bc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b3c0:	682a      	ldr	r2, [r5, #0]
 801b3c2:	9202      	str	r2, [sp, #8]
 801b3c4:	3704      	adds	r7, #4
 801b3c6:	9a01      	ldr	r2, [sp, #4]
 801b3c8:	2a00      	cmp	r2, #0
 801b3ca:	dc03      	bgt.n	801b3d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b3cc:	9a03      	ldr	r2, [sp, #12]
 801b3ce:	2a00      	cmp	r2, #0
 801b3d0:	f340 80cc 	ble.w	801b56c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801b3d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b3d6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b3da:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b3de:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b3e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b3e4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b3e8:	2b00      	cmp	r3, #0
 801b3ea:	dd0d      	ble.n	801b408 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b3ec:	1406      	asrs	r6, r0, #16
 801b3ee:	d405      	bmi.n	801b3fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b3f0:	454e      	cmp	r6, r9
 801b3f2:	da03      	bge.n	801b3fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b3f4:	1416      	asrs	r6, r2, #16
 801b3f6:	d401      	bmi.n	801b3fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b3f8:	4546      	cmp	r6, r8
 801b3fa:	db06      	blt.n	801b40a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b3fc:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801b3fe:	4460      	add	r0, ip
 801b400:	4432      	add	r2, r6
 801b402:	3b01      	subs	r3, #1
 801b404:	3402      	adds	r4, #2
 801b406:	e7ef      	b.n	801b3e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801b408:	d00f      	beq.n	801b42a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b40a:	1e5e      	subs	r6, r3, #1
 801b40c:	fb0c 0e06 	mla	lr, ip, r6, r0
 801b410:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801b414:	d543      	bpl.n	801b49e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b416:	4698      	mov	r8, r3
 801b418:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801b41c:	f1b8 0f00 	cmp.w	r8, #0
 801b420:	dc71      	bgt.n	801b506 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b422:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b426:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b42a:	9b01      	ldr	r3, [sp, #4]
 801b42c:	2b00      	cmp	r3, #0
 801b42e:	f340 809d 	ble.w	801b56c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801b432:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b436:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b43a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b43e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b440:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b444:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b448:	eeb0 6a62 	vmov.f32	s12, s5
 801b44c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b450:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b454:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b458:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b45c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b460:	eeb0 6a43 	vmov.f32	s12, s6
 801b464:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b468:	ee12 2a90 	vmov	r2, s5
 801b46c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b470:	fb92 fcf3 	sdiv	ip, r2, r3
 801b474:	ee13 2a10 	vmov	r2, s6
 801b478:	fb92 f3f3 	sdiv	r3, r2, r3
 801b47c:	9312      	str	r3, [sp, #72]	; 0x48
 801b47e:	9b01      	ldr	r3, [sp, #4]
 801b480:	9a03      	ldr	r2, [sp, #12]
 801b482:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b486:	3b01      	subs	r3, #1
 801b488:	9301      	str	r3, [sp, #4]
 801b48a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b48e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b490:	eeb0 3a67 	vmov.f32	s6, s15
 801b494:	bf08      	it	eq
 801b496:	4613      	moveq	r3, r2
 801b498:	eef0 2a47 	vmov.f32	s5, s14
 801b49c:	e793      	b.n	801b3c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801b49e:	45ce      	cmp	lr, r9
 801b4a0:	dab9      	bge.n	801b416 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b4a2:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b4a4:	fb01 2606 	mla	r6, r1, r6, r2
 801b4a8:	1436      	asrs	r6, r6, #16
 801b4aa:	d4b4      	bmi.n	801b416 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b4ac:	4546      	cmp	r6, r8
 801b4ae:	dab2      	bge.n	801b416 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b4b0:	4698      	mov	r8, r3
 801b4b2:	46a2      	mov	sl, r4
 801b4b4:	f1b8 0f00 	cmp.w	r8, #0
 801b4b8:	ddb3      	ble.n	801b422 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b4ba:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b4be:	9902      	ldr	r1, [sp, #8]
 801b4c0:	1416      	asrs	r6, r2, #16
 801b4c2:	fb09 1606 	mla	r6, r9, r6, r1
 801b4c6:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801b4ca:	492a      	ldr	r1, [pc, #168]	; (801b574 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801b4cc:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801b4d0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b4d4:	eb07 0b0e 	add.w	fp, r7, lr
 801b4d8:	4460      	add	r0, ip
 801b4da:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801b4de:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801b4e2:	00f6      	lsls	r6, r6, #3
 801b4e4:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801b4e8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b4ec:	ea49 0606 	orr.w	r6, r9, r6
 801b4f0:	f817 900e 	ldrb.w	r9, [r7, lr]
 801b4f4:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b4f6:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801b4fa:	f82a 6b02 	strh.w	r6, [sl], #2
 801b4fe:	440a      	add	r2, r1
 801b500:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 801b504:	e7d6      	b.n	801b4b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b506:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b50a:	d429      	bmi.n	801b560 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b50c:	68ae      	ldr	r6, [r5, #8]
 801b50e:	454e      	cmp	r6, r9
 801b510:	dd26      	ble.n	801b560 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b512:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801b516:	d423      	bmi.n	801b560 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b518:	68e9      	ldr	r1, [r5, #12]
 801b51a:	4559      	cmp	r1, fp
 801b51c:	dd20      	ble.n	801b560 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b51e:	9902      	ldr	r1, [sp, #8]
 801b520:	fa0f fe86 	sxth.w	lr, r6
 801b524:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801b528:	f06f 0101 	mvn.w	r1, #1
 801b52c:	f81e e009 	ldrb.w	lr, [lr, r9]
 801b530:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b534:	eb07 060e 	add.w	r6, r7, lr
 801b538:	fb01 f908 	mul.w	r9, r1, r8
 801b53c:	f896 b002 	ldrb.w	fp, [r6, #2]
 801b540:	7876      	ldrb	r6, [r6, #1]
 801b542:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801b546:	00f6      	lsls	r6, r6, #3
 801b548:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801b54c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b550:	ea4b 0606 	orr.w	r6, fp, r6
 801b554:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801b558:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801b55c:	f82a 6009 	strh.w	r6, [sl, r9]
 801b560:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b562:	4460      	add	r0, ip
 801b564:	440a      	add	r2, r1
 801b566:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 801b56a:	e757      	b.n	801b41c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b56c:	b005      	add	sp, #20
 801b56e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b572:	bf00      	nop
 801b574:	fffff800 	.word	0xfffff800

0801b578 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b57c:	b087      	sub	sp, #28
 801b57e:	468b      	mov	fp, r1
 801b580:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b582:	9204      	str	r2, [sp, #16]
 801b584:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b588:	9205      	str	r2, [sp, #20]
 801b58a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b58e:	6841      	ldr	r1, [r0, #4]
 801b590:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801b594:	fb01 2404 	mla	r4, r1, r4, r2
 801b598:	6802      	ldr	r2, [r0, #0]
 801b59a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b59e:	f8dc 2000 	ldr.w	r2, [ip]
 801b5a2:	9201      	str	r2, [sp, #4]
 801b5a4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801b5a8:	3204      	adds	r2, #4
 801b5aa:	9202      	str	r2, [sp, #8]
 801b5ac:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b5b0:	f1bb 0f00 	cmp.w	fp, #0
 801b5b4:	dc03      	bgt.n	801b5be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801b5b6:	9a04      	ldr	r2, [sp, #16]
 801b5b8:	2a00      	cmp	r2, #0
 801b5ba:	f340 8138 	ble.w	801b82e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801b5be:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b5c0:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801b5c4:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801b5c8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b5cc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b5ce:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b5d2:	2b00      	cmp	r3, #0
 801b5d4:	dd0e      	ble.n	801b5f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b5d6:	1402      	asrs	r2, r0, #16
 801b5d8:	d405      	bmi.n	801b5e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b5da:	42ba      	cmp	r2, r7
 801b5dc:	da03      	bge.n	801b5e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b5de:	140a      	asrs	r2, r1, #16
 801b5e0:	d401      	bmi.n	801b5e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b5e2:	42b2      	cmp	r2, r6
 801b5e4:	db07      	blt.n	801b5f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b5e6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b5e8:	4410      	add	r0, r2
 801b5ea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b5ec:	3b01      	subs	r3, #1
 801b5ee:	4411      	add	r1, r2
 801b5f0:	3402      	adds	r4, #2
 801b5f2:	e7ee      	b.n	801b5d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801b5f4:	d019      	beq.n	801b62a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801b5f6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b5f8:	1e5a      	subs	r2, r3, #1
 801b5fa:	fb05 0502 	mla	r5, r5, r2, r0
 801b5fe:	142d      	asrs	r5, r5, #16
 801b600:	d409      	bmi.n	801b616 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b602:	42bd      	cmp	r5, r7
 801b604:	da07      	bge.n	801b616 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b606:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b608:	fb05 1202 	mla	r2, r5, r2, r1
 801b60c:	1412      	asrs	r2, r2, #16
 801b60e:	d402      	bmi.n	801b616 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b610:	42b2      	cmp	r2, r6
 801b612:	f2c0 80ac 	blt.w	801b76e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801b616:	f04f 0e00 	mov.w	lr, #0
 801b61a:	eb03 020e 	add.w	r2, r3, lr
 801b61e:	2a00      	cmp	r2, #0
 801b620:	dc3e      	bgt.n	801b6a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b622:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b626:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b62a:	f1bb 0f00 	cmp.w	fp, #0
 801b62e:	f340 80fe 	ble.w	801b82e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801b632:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b636:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b63a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b63e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b640:	f1bb 0b01 	subs.w	fp, fp, #1
 801b644:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b648:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b64c:	eeb0 6a62 	vmov.f32	s12, s5
 801b650:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b654:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b658:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b65c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b660:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b664:	eeb0 6a43 	vmov.f32	s12, s6
 801b668:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b66c:	ee12 2a90 	vmov	r2, s5
 801b670:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b674:	fb92 f3f3 	sdiv	r3, r2, r3
 801b678:	ee13 2a10 	vmov	r2, s6
 801b67c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b680:	9313      	str	r3, [sp, #76]	; 0x4c
 801b682:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b684:	fb92 f3f3 	sdiv	r3, r2, r3
 801b688:	9a04      	ldr	r2, [sp, #16]
 801b68a:	9314      	str	r3, [sp, #80]	; 0x50
 801b68c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b690:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b692:	eeb0 3a67 	vmov.f32	s6, s15
 801b696:	bf08      	it	eq
 801b698:	4613      	moveq	r3, r2
 801b69a:	eef0 2a47 	vmov.f32	s5, s14
 801b69e:	e787      	b.n	801b5b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b6a0:	1406      	asrs	r6, r0, #16
 801b6a2:	d45d      	bmi.n	801b760 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b6a4:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801b6a8:	42b5      	cmp	r5, r6
 801b6aa:	dd59      	ble.n	801b760 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b6ac:	140f      	asrs	r7, r1, #16
 801b6ae:	d457      	bmi.n	801b760 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b6b0:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801b6b4:	42ba      	cmp	r2, r7
 801b6b6:	dd53      	ble.n	801b760 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b6b8:	9a01      	ldr	r2, [sp, #4]
 801b6ba:	b22d      	sxth	r5, r5
 801b6bc:	fb07 2505 	mla	r5, r7, r5, r2
 801b6c0:	5daa      	ldrb	r2, [r5, r6]
 801b6c2:	9d02      	ldr	r5, [sp, #8]
 801b6c4:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801b6c8:	0e2e      	lsrs	r6, r5, #24
 801b6ca:	d049      	beq.n	801b760 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b6cc:	f06f 0201 	mvn.w	r2, #1
 801b6d0:	fb02 f20e 	mul.w	r2, r2, lr
 801b6d4:	9203      	str	r2, [sp, #12]
 801b6d6:	f834 8002 	ldrh.w	r8, [r4, r2]
 801b6da:	9a05      	ldr	r2, [sp, #20]
 801b6dc:	4356      	muls	r6, r2
 801b6de:	1c72      	adds	r2, r6, #1
 801b6e0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801b6e4:	1212      	asrs	r2, r2, #8
 801b6e6:	fa1f f982 	uxth.w	r9, r2
 801b6ea:	ea4f 2728 	mov.w	r7, r8, asr #8
 801b6ee:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b6f2:	43d2      	mvns	r2, r2
 801b6f4:	b2d2      	uxtb	r2, r2
 801b6f6:	fb16 f609 	smulbb	r6, r6, r9
 801b6fa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b6fe:	fb07 6702 	mla	r7, r7, r2, r6
 801b702:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b706:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801b70a:	b2ed      	uxtb	r5, r5
 801b70c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b710:	fa5f f888 	uxtb.w	r8, r8
 801b714:	fb15 f509 	smulbb	r5, r5, r9
 801b718:	fb08 5502 	mla	r5, r8, r2, r5
 801b71c:	b2bf      	uxth	r7, r7
 801b71e:	fb1a fa09 	smulbb	sl, sl, r9
 801b722:	b2ad      	uxth	r5, r5
 801b724:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b728:	fb06 a602 	mla	r6, r6, r2, sl
 801b72c:	1c7a      	adds	r2, r7, #1
 801b72e:	f105 0a01 	add.w	sl, r5, #1
 801b732:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b736:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b73a:	b2b6      	uxth	r6, r6
 801b73c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b740:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b744:	ea4a 0707 	orr.w	r7, sl, r7
 801b748:	f106 0a01 	add.w	sl, r6, #1
 801b74c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b750:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b754:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b758:	9a03      	ldr	r2, [sp, #12]
 801b75a:	ea47 070a 	orr.w	r7, r7, sl
 801b75e:	52a7      	strh	r7, [r4, r2]
 801b760:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b762:	4410      	add	r0, r2
 801b764:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b766:	f10e 3eff 	add.w	lr, lr, #4294967295	; 0xffffffff
 801b76a:	4411      	add	r1, r2
 801b76c:	e755      	b.n	801b61a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b76e:	f04f 0800 	mov.w	r8, #0
 801b772:	eba3 0208 	sub.w	r2, r3, r8
 801b776:	2a00      	cmp	r2, #0
 801b778:	f77f af53 	ble.w	801b622 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801b77c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801b780:	9f01      	ldr	r7, [sp, #4]
 801b782:	140a      	asrs	r2, r1, #16
 801b784:	1405      	asrs	r5, r0, #16
 801b786:	fb06 7202 	mla	r2, r6, r2, r7
 801b78a:	5d52      	ldrb	r2, [r2, r5]
 801b78c:	9d02      	ldr	r5, [sp, #8]
 801b78e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801b792:	0e2e      	lsrs	r6, r5, #24
 801b794:	d044      	beq.n	801b820 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b796:	9a05      	ldr	r2, [sp, #20]
 801b798:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801b79c:	4356      	muls	r6, r2
 801b79e:	1c72      	adds	r2, r6, #1
 801b7a0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801b7a4:	1212      	asrs	r2, r2, #8
 801b7a6:	fa1f f982 	uxth.w	r9, r2
 801b7aa:	ea4f 272e 	mov.w	r7, lr, asr #8
 801b7ae:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b7b2:	43d2      	mvns	r2, r2
 801b7b4:	b2d2      	uxtb	r2, r2
 801b7b6:	fb16 f609 	smulbb	r6, r6, r9
 801b7ba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b7be:	fb07 6702 	mla	r7, r7, r2, r6
 801b7c2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b7c6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b7ca:	b2ed      	uxtb	r5, r5
 801b7cc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b7d0:	fa5f fe8e 	uxtb.w	lr, lr
 801b7d4:	fb15 f509 	smulbb	r5, r5, r9
 801b7d8:	fb0e 5502 	mla	r5, lr, r2, r5
 801b7dc:	b2bf      	uxth	r7, r7
 801b7de:	fb1a fa09 	smulbb	sl, sl, r9
 801b7e2:	b2ad      	uxth	r5, r5
 801b7e4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b7e8:	fb06 a602 	mla	r6, r6, r2, sl
 801b7ec:	1c7a      	adds	r2, r7, #1
 801b7ee:	f105 0a01 	add.w	sl, r5, #1
 801b7f2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b7f6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b7fa:	b2b6      	uxth	r6, r6
 801b7fc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b800:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b804:	ea4a 0707 	orr.w	r7, sl, r7
 801b808:	f106 0a01 	add.w	sl, r6, #1
 801b80c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b810:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b814:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b818:	ea47 070a 	orr.w	r7, r7, sl
 801b81c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801b820:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b822:	4410      	add	r0, r2
 801b824:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b826:	f108 0801 	add.w	r8, r8, #1
 801b82a:	4411      	add	r1, r2
 801b82c:	e7a1      	b.n	801b772 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801b82e:	b007      	add	sp, #28
 801b830:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b834 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b838:	b085      	sub	sp, #20
 801b83a:	468b      	mov	fp, r1
 801b83c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b83e:	9203      	str	r2, [sp, #12]
 801b840:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b844:	6841      	ldr	r1, [r0, #4]
 801b846:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801b84a:	fb01 2404 	mla	r4, r1, r4, r2
 801b84e:	6802      	ldr	r2, [r0, #0]
 801b850:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b854:	f8de 2000 	ldr.w	r2, [lr]
 801b858:	9200      	str	r2, [sp, #0]
 801b85a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b85e:	3204      	adds	r2, #4
 801b860:	9201      	str	r2, [sp, #4]
 801b862:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b866:	f1bb 0f00 	cmp.w	fp, #0
 801b86a:	dc03      	bgt.n	801b874 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b86c:	9a03      	ldr	r2, [sp, #12]
 801b86e:	2a00      	cmp	r2, #0
 801b870:	f340 8153 	ble.w	801bb1a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801b874:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b876:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b87a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801b87e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b882:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b884:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b888:	2b00      	cmp	r3, #0
 801b88a:	dd0e      	ble.n	801b8aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b88c:	1408      	asrs	r0, r1, #16
 801b88e:	d405      	bmi.n	801b89c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b890:	42b8      	cmp	r0, r7
 801b892:	da03      	bge.n	801b89c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b894:	1410      	asrs	r0, r2, #16
 801b896:	d401      	bmi.n	801b89c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b898:	42b0      	cmp	r0, r6
 801b89a:	db07      	blt.n	801b8ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b89c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b89e:	4401      	add	r1, r0
 801b8a0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b8a2:	3b01      	subs	r3, #1
 801b8a4:	4402      	add	r2, r0
 801b8a6:	3402      	adds	r4, #2
 801b8a8:	e7ee      	b.n	801b888 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b8aa:	d017      	beq.n	801b8dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801b8ac:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b8ae:	1e58      	subs	r0, r3, #1
 801b8b0:	fb05 1500 	mla	r5, r5, r0, r1
 801b8b4:	142d      	asrs	r5, r5, #16
 801b8b6:	d409      	bmi.n	801b8cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b8b8:	42bd      	cmp	r5, r7
 801b8ba:	da07      	bge.n	801b8cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b8bc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b8be:	fb05 2000 	mla	r0, r5, r0, r2
 801b8c2:	1400      	asrs	r0, r0, #16
 801b8c4:	d402      	bmi.n	801b8cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b8c6:	42b0      	cmp	r0, r6
 801b8c8:	f2c0 80bc 	blt.w	801ba44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801b8cc:	2600      	movs	r6, #0
 801b8ce:	1998      	adds	r0, r3, r6
 801b8d0:	2800      	cmp	r0, #0
 801b8d2:	dc3e      	bgt.n	801b952 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801b8d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b8d8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b8dc:	f1bb 0f00 	cmp.w	fp, #0
 801b8e0:	f340 811b 	ble.w	801bb1a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801b8e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b8e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b8ec:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b8f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b8f2:	f1bb 0b01 	subs.w	fp, fp, #1
 801b8f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b8fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b8fe:	eeb0 6a62 	vmov.f32	s12, s5
 801b902:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b906:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b90a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b90e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b912:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b916:	eeb0 6a43 	vmov.f32	s12, s6
 801b91a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b91e:	ee12 2a90 	vmov	r2, s5
 801b922:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b926:	fb92 f3f3 	sdiv	r3, r2, r3
 801b92a:	ee13 2a10 	vmov	r2, s6
 801b92e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b932:	9311      	str	r3, [sp, #68]	; 0x44
 801b934:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b936:	fb92 f3f3 	sdiv	r3, r2, r3
 801b93a:	9a03      	ldr	r2, [sp, #12]
 801b93c:	9312      	str	r3, [sp, #72]	; 0x48
 801b93e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b942:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b944:	eeb0 3a67 	vmov.f32	s6, s15
 801b948:	bf08      	it	eq
 801b94a:	4613      	moveq	r3, r2
 801b94c:	eef0 2a47 	vmov.f32	s5, s14
 801b950:	e789      	b.n	801b866 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b952:	140f      	asrs	r7, r1, #16
 801b954:	d426      	bmi.n	801b9a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b956:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b95a:	42bd      	cmp	r5, r7
 801b95c:	dd22      	ble.n	801b9a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b95e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b962:	d41f      	bmi.n	801b9a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b964:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b968:	4560      	cmp	r0, ip
 801b96a:	dd1b      	ble.n	801b9a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b96c:	9800      	ldr	r0, [sp, #0]
 801b96e:	b22d      	sxth	r5, r5
 801b970:	fb0c 0505 	mla	r5, ip, r5, r0
 801b974:	5de8      	ldrb	r0, [r5, r7]
 801b976:	9d01      	ldr	r5, [sp, #4]
 801b978:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801b97c:	0e07      	lsrs	r7, r0, #24
 801b97e:	2fff      	cmp	r7, #255	; 0xff
 801b980:	d116      	bne.n	801b9b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b982:	f06f 0501 	mvn.w	r5, #1
 801b986:	fb05 f706 	mul.w	r7, r5, r6
 801b98a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b98e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b992:	0945      	lsrs	r5, r0, #5
 801b994:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b998:	ea4c 0505 	orr.w	r5, ip, r5
 801b99c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b9a0:	4305      	orrs	r5, r0
 801b9a2:	53e5      	strh	r5, [r4, r7]
 801b9a4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b9a6:	4401      	add	r1, r0
 801b9a8:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b9aa:	3e01      	subs	r6, #1
 801b9ac:	4402      	add	r2, r0
 801b9ae:	e78e      	b.n	801b8ce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b9b0:	b2fd      	uxtb	r5, r7
 801b9b2:	2f00      	cmp	r7, #0
 801b9b4:	d0f6      	beq.n	801b9a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b9b6:	f06f 0701 	mvn.w	r7, #1
 801b9ba:	4377      	muls	r7, r6
 801b9bc:	fa1f f985 	uxth.w	r9, r5
 801b9c0:	f834 8007 	ldrh.w	r8, [r4, r7]
 801b9c4:	9702      	str	r7, [sp, #8]
 801b9c6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801b9ca:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b9ce:	43ed      	mvns	r5, r5
 801b9d0:	b2ed      	uxtb	r5, r5
 801b9d2:	fb17 f709 	smulbb	r7, r7, r9
 801b9d6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b9da:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b9de:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b9e2:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801b9e6:	b2c0      	uxtb	r0, r0
 801b9e8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b9ec:	fa5f f888 	uxtb.w	r8, r8
 801b9f0:	fb10 f009 	smulbb	r0, r0, r9
 801b9f4:	fb08 0005 	mla	r0, r8, r5, r0
 801b9f8:	b280      	uxth	r0, r0
 801b9fa:	fa1f fc8c 	uxth.w	ip, ip
 801b9fe:	fb1a fa09 	smulbb	sl, sl, r9
 801ba02:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ba06:	fb07 a705 	mla	r7, r7, r5, sl
 801ba0a:	f100 0a01 	add.w	sl, r0, #1
 801ba0e:	f10c 0501 	add.w	r5, ip, #1
 801ba12:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801ba16:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ba1a:	b2bf      	uxth	r7, r7
 801ba1c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ba20:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ba24:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ba28:	f107 0a01 	add.w	sl, r7, #1
 801ba2c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ba30:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ba34:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ba38:	9802      	ldr	r0, [sp, #8]
 801ba3a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ba3e:	f824 c000 	strh.w	ip, [r4, r0]
 801ba42:	e7af      	b.n	801b9a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801ba44:	f04f 0800 	mov.w	r8, #0
 801ba48:	eba3 0008 	sub.w	r0, r3, r8
 801ba4c:	2800      	cmp	r0, #0
 801ba4e:	f77f af41 	ble.w	801b8d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ba52:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801ba56:	9f00      	ldr	r7, [sp, #0]
 801ba58:	1410      	asrs	r0, r2, #16
 801ba5a:	140d      	asrs	r5, r1, #16
 801ba5c:	fb06 7000 	mla	r0, r6, r0, r7
 801ba60:	5d40      	ldrb	r0, [r0, r5]
 801ba62:	9d01      	ldr	r5, [sp, #4]
 801ba64:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801ba68:	0e2e      	lsrs	r6, r5, #24
 801ba6a:	2eff      	cmp	r6, #255	; 0xff
 801ba6c:	d112      	bne.n	801ba94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801ba6e:	482c      	ldr	r0, [pc, #176]	; (801bb20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801ba70:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801ba74:	0968      	lsrs	r0, r5, #5
 801ba76:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ba7a:	4330      	orrs	r0, r6
 801ba7c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ba80:	4328      	orrs	r0, r5
 801ba82:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801ba86:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ba88:	4401      	add	r1, r0
 801ba8a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ba8c:	f108 0801 	add.w	r8, r8, #1
 801ba90:	4402      	add	r2, r0
 801ba92:	e7d9      	b.n	801ba48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ba94:	b2f0      	uxtb	r0, r6
 801ba96:	2e00      	cmp	r6, #0
 801ba98:	d0f5      	beq.n	801ba86 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801ba9a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801ba9e:	fa1f f980 	uxth.w	r9, r0
 801baa2:	ea4f 272c 	mov.w	r7, ip, asr #8
 801baa6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801baaa:	43c0      	mvns	r0, r0
 801baac:	b2c0      	uxtb	r0, r0
 801baae:	fb16 f609 	smulbb	r6, r6, r9
 801bab2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bab6:	fb07 6700 	mla	r7, r7, r0, r6
 801baba:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801babe:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801bac2:	b2ed      	uxtb	r5, r5
 801bac4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bac8:	fa5f fc8c 	uxtb.w	ip, ip
 801bacc:	fb15 f509 	smulbb	r5, r5, r9
 801bad0:	fb0c 5500 	mla	r5, ip, r0, r5
 801bad4:	b2bf      	uxth	r7, r7
 801bad6:	fb1a fa09 	smulbb	sl, sl, r9
 801bada:	b2ad      	uxth	r5, r5
 801badc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bae0:	fb06 a600 	mla	r6, r6, r0, sl
 801bae4:	1c78      	adds	r0, r7, #1
 801bae6:	f105 0a01 	add.w	sl, r5, #1
 801baea:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801baee:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801baf2:	b2b6      	uxth	r6, r6
 801baf4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801baf8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801bafc:	ea4a 0707 	orr.w	r7, sl, r7
 801bb00:	f106 0a01 	add.w	sl, r6, #1
 801bb04:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bb08:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bb0c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bb10:	ea47 070a 	orr.w	r7, r7, sl
 801bb14:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801bb18:	e7b5      	b.n	801ba86 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801bb1a:	b005      	add	sp, #20
 801bb1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bb20:	fffff800 	.word	0xfffff800

0801bb24 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bb24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb28:	b087      	sub	sp, #28
 801bb2a:	468b      	mov	fp, r1
 801bb2c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bb2e:	9204      	str	r2, [sp, #16]
 801bb30:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801bb34:	9205      	str	r2, [sp, #20]
 801bb36:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801bb3a:	6861      	ldr	r1, [r4, #4]
 801bb3c:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801bb40:	fb01 2000 	mla	r0, r1, r0, r2
 801bb44:	6822      	ldr	r2, [r4, #0]
 801bb46:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801bb4a:	f8de 2000 	ldr.w	r2, [lr]
 801bb4e:	9201      	str	r2, [sp, #4]
 801bb50:	f8de 2004 	ldr.w	r2, [lr, #4]
 801bb54:	9202      	str	r2, [sp, #8]
 801bb56:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bb5a:	f1bb 0f00 	cmp.w	fp, #0
 801bb5e:	dc03      	bgt.n	801bb68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801bb60:	9a04      	ldr	r2, [sp, #16]
 801bb62:	2a00      	cmp	r2, #0
 801bb64:	f340 8142 	ble.w	801bdec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801bb68:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bb6a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801bb6e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801bb72:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bb76:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bb78:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801bb7c:	2b00      	cmp	r3, #0
 801bb7e:	dd0e      	ble.n	801bb9e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801bb80:	140c      	asrs	r4, r1, #16
 801bb82:	d405      	bmi.n	801bb90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801bb84:	42bc      	cmp	r4, r7
 801bb86:	da03      	bge.n	801bb90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801bb88:	1414      	asrs	r4, r2, #16
 801bb8a:	d401      	bmi.n	801bb90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801bb8c:	42b4      	cmp	r4, r6
 801bb8e:	db07      	blt.n	801bba0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801bb90:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bb92:	4421      	add	r1, r4
 801bb94:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bb96:	3b01      	subs	r3, #1
 801bb98:	4422      	add	r2, r4
 801bb9a:	3002      	adds	r0, #2
 801bb9c:	e7ee      	b.n	801bb7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801bb9e:	d019      	beq.n	801bbd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801bba0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bba2:	1e5c      	subs	r4, r3, #1
 801bba4:	fb05 1504 	mla	r5, r5, r4, r1
 801bba8:	142d      	asrs	r5, r5, #16
 801bbaa:	d409      	bmi.n	801bbc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801bbac:	42bd      	cmp	r5, r7
 801bbae:	da07      	bge.n	801bbc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801bbb0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801bbb2:	fb05 2404 	mla	r4, r5, r4, r2
 801bbb6:	1424      	asrs	r4, r4, #16
 801bbb8:	d402      	bmi.n	801bbc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801bbba:	42b4      	cmp	r4, r6
 801bbbc:	f2c0 80b1 	blt.w	801bd22 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801bbc0:	f04f 0800 	mov.w	r8, #0
 801bbc4:	eb03 0408 	add.w	r4, r3, r8
 801bbc8:	2c00      	cmp	r4, #0
 801bbca:	dc3e      	bgt.n	801bc4a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801bbcc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bbd0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bbd4:	f1bb 0f00 	cmp.w	fp, #0
 801bbd8:	f340 8108 	ble.w	801bdec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801bbdc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bbe0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bbe4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bbe8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bbea:	f1bb 0b01 	subs.w	fp, fp, #1
 801bbee:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bbf2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bbf6:	eeb0 6a62 	vmov.f32	s12, s5
 801bbfa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bbfe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bc02:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bc06:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801bc0a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bc0e:	eeb0 6a43 	vmov.f32	s12, s6
 801bc12:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bc16:	ee12 2a90 	vmov	r2, s5
 801bc1a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bc1e:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc22:	ee13 2a10 	vmov	r2, s6
 801bc26:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bc2a:	9313      	str	r3, [sp, #76]	; 0x4c
 801bc2c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bc2e:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc32:	9a04      	ldr	r2, [sp, #16]
 801bc34:	9314      	str	r3, [sp, #80]	; 0x50
 801bc36:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801bc3a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bc3c:	eeb0 3a67 	vmov.f32	s6, s15
 801bc40:	bf08      	it	eq
 801bc42:	4613      	moveq	r3, r2
 801bc44:	eef0 2a47 	vmov.f32	s5, s14
 801bc48:	e787      	b.n	801bb5a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801bc4a:	140e      	asrs	r6, r1, #16
 801bc4c:	d462      	bmi.n	801bd14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801bc4e:	f8de 5008 	ldr.w	r5, [lr, #8]
 801bc52:	42b5      	cmp	r5, r6
 801bc54:	dd5e      	ble.n	801bd14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801bc56:	1417      	asrs	r7, r2, #16
 801bc58:	d45c      	bmi.n	801bd14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801bc5a:	f8de 400c 	ldr.w	r4, [lr, #12]
 801bc5e:	42bc      	cmp	r4, r7
 801bc60:	dd58      	ble.n	801bd14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801bc62:	b22d      	sxth	r5, r5
 801bc64:	fb07 6505 	mla	r5, r7, r5, r6
 801bc68:	9c02      	ldr	r4, [sp, #8]
 801bc6a:	5d66      	ldrb	r6, [r4, r5]
 801bc6c:	2e00      	cmp	r6, #0
 801bc6e:	d051      	beq.n	801bd14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801bc70:	9c01      	ldr	r4, [sp, #4]
 801bc72:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801bc76:	f06f 0401 	mvn.w	r4, #1
 801bc7a:	fb04 f408 	mul.w	r4, r4, r8
 801bc7e:	9403      	str	r4, [sp, #12]
 801bc80:	5b05      	ldrh	r5, [r0, r4]
 801bc82:	9c05      	ldr	r4, [sp, #20]
 801bc84:	4366      	muls	r6, r4
 801bc86:	1c74      	adds	r4, r6, #1
 801bc88:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801bc8c:	1224      	asrs	r4, r4, #8
 801bc8e:	b2a7      	uxth	r7, r4
 801bc90:	122e      	asrs	r6, r5, #8
 801bc92:	43e4      	mvns	r4, r4
 801bc94:	b2e4      	uxtb	r4, r4
 801bc96:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801bc9a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bc9e:	fb16 f604 	smulbb	r6, r6, r4
 801bca2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bca6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bcaa:	00ed      	lsls	r5, r5, #3
 801bcac:	fb0c 6c07 	mla	ip, ip, r7, r6
 801bcb0:	b2ed      	uxtb	r5, r5
 801bcb2:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801bcb6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801bcba:	fb15 f504 	smulbb	r5, r5, r4
 801bcbe:	fa5f f989 	uxtb.w	r9, r9
 801bcc2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801bcc6:	fb09 5507 	mla	r5, r9, r7, r5
 801bcca:	fb1a fa04 	smulbb	sl, sl, r4
 801bcce:	fa1f fc8c 	uxth.w	ip, ip
 801bcd2:	b2ad      	uxth	r5, r5
 801bcd4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bcd8:	fb06 a607 	mla	r6, r6, r7, sl
 801bcdc:	f10c 0401 	add.w	r4, ip, #1
 801bce0:	f105 0a01 	add.w	sl, r5, #1
 801bce4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801bce8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bcec:	b2b6      	uxth	r6, r6
 801bcee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bcf2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bcf6:	ea4a 0c0c 	orr.w	ip, sl, ip
 801bcfa:	f106 0a01 	add.w	sl, r6, #1
 801bcfe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bd02:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bd06:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bd0a:	9c03      	ldr	r4, [sp, #12]
 801bd0c:	ea4c 0c0a 	orr.w	ip, ip, sl
 801bd10:	f820 c004 	strh.w	ip, [r0, r4]
 801bd14:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bd16:	4421      	add	r1, r4
 801bd18:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bd1a:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 801bd1e:	4422      	add	r2, r4
 801bd20:	e750      	b.n	801bbc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bd22:	f04f 0900 	mov.w	r9, #0
 801bd26:	eba3 0409 	sub.w	r4, r3, r9
 801bd2a:	2c00      	cmp	r4, #0
 801bd2c:	f77f af4e 	ble.w	801bbcc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bd30:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801bd34:	140d      	asrs	r5, r1, #16
 801bd36:	1414      	asrs	r4, r2, #16
 801bd38:	fb06 5404 	mla	r4, r6, r4, r5
 801bd3c:	9d02      	ldr	r5, [sp, #8]
 801bd3e:	5d2e      	ldrb	r6, [r5, r4]
 801bd40:	2e00      	cmp	r6, #0
 801bd42:	d04c      	beq.n	801bdde <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801bd44:	9d01      	ldr	r5, [sp, #4]
 801bd46:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801bd4a:	9c05      	ldr	r4, [sp, #20]
 801bd4c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801bd50:	4366      	muls	r6, r4
 801bd52:	1c74      	adds	r4, r6, #1
 801bd54:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801bd58:	1224      	asrs	r4, r4, #8
 801bd5a:	b2a7      	uxth	r7, r4
 801bd5c:	122e      	asrs	r6, r5, #8
 801bd5e:	43e4      	mvns	r4, r4
 801bd60:	b2e4      	uxtb	r4, r4
 801bd62:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801bd66:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bd6a:	fb16 f604 	smulbb	r6, r6, r4
 801bd6e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bd72:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bd76:	00ed      	lsls	r5, r5, #3
 801bd78:	fb0c 6c07 	mla	ip, ip, r7, r6
 801bd7c:	b2ed      	uxtb	r5, r5
 801bd7e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801bd82:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801bd86:	fb15 f504 	smulbb	r5, r5, r4
 801bd8a:	fa5f f888 	uxtb.w	r8, r8
 801bd8e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801bd92:	fb08 5507 	mla	r5, r8, r7, r5
 801bd96:	fb1a fa04 	smulbb	sl, sl, r4
 801bd9a:	fa1f fc8c 	uxth.w	ip, ip
 801bd9e:	b2ad      	uxth	r5, r5
 801bda0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bda4:	fb06 a607 	mla	r6, r6, r7, sl
 801bda8:	f10c 0401 	add.w	r4, ip, #1
 801bdac:	f105 0a01 	add.w	sl, r5, #1
 801bdb0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801bdb4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bdb8:	b2b6      	uxth	r6, r6
 801bdba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bdbe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bdc2:	ea4a 0c0c 	orr.w	ip, sl, ip
 801bdc6:	f106 0a01 	add.w	sl, r6, #1
 801bdca:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bdce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bdd2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bdd6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801bdda:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801bdde:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bde0:	4421      	add	r1, r4
 801bde2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bde4:	f109 0901 	add.w	r9, r9, #1
 801bde8:	4422      	add	r2, r4
 801bdea:	e79c      	b.n	801bd26 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801bdec:	b007      	add	sp, #28
 801bdee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bdf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bdf2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bdf6:	b085      	sub	sp, #20
 801bdf8:	468b      	mov	fp, r1
 801bdfa:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bdfc:	9203      	str	r2, [sp, #12]
 801bdfe:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801be02:	6861      	ldr	r1, [r4, #4]
 801be04:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801be08:	fb01 2000 	mla	r0, r1, r0, r2
 801be0c:	6822      	ldr	r2, [r4, #0]
 801be0e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801be12:	f8d8 2000 	ldr.w	r2, [r8]
 801be16:	9200      	str	r2, [sp, #0]
 801be18:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801be1c:	9201      	str	r2, [sp, #4]
 801be1e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801be22:	f1bb 0f00 	cmp.w	fp, #0
 801be26:	dc03      	bgt.n	801be30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801be28:	9a03      	ldr	r2, [sp, #12]
 801be2a:	2a00      	cmp	r2, #0
 801be2c:	f340 8146 	ble.w	801c0bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801be30:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801be32:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801be36:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801be3a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801be3e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801be40:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801be44:	2b00      	cmp	r3, #0
 801be46:	dd0e      	ble.n	801be66 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801be48:	140c      	asrs	r4, r1, #16
 801be4a:	d405      	bmi.n	801be58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801be4c:	42bc      	cmp	r4, r7
 801be4e:	da03      	bge.n	801be58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801be50:	1414      	asrs	r4, r2, #16
 801be52:	d401      	bmi.n	801be58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801be54:	42b4      	cmp	r4, r6
 801be56:	db07      	blt.n	801be68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801be58:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801be5a:	4421      	add	r1, r4
 801be5c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801be5e:	3b01      	subs	r3, #1
 801be60:	4422      	add	r2, r4
 801be62:	3002      	adds	r0, #2
 801be64:	e7ee      	b.n	801be44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801be66:	d017      	beq.n	801be98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801be68:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801be6a:	1e5c      	subs	r4, r3, #1
 801be6c:	fb05 1504 	mla	r5, r5, r4, r1
 801be70:	142d      	asrs	r5, r5, #16
 801be72:	d409      	bmi.n	801be88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801be74:	42bd      	cmp	r5, r7
 801be76:	da07      	bge.n	801be88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801be78:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801be7a:	fb05 2404 	mla	r4, r5, r4, r2
 801be7e:	1424      	asrs	r4, r4, #16
 801be80:	d402      	bmi.n	801be88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801be82:	42b4      	cmp	r4, r6
 801be84:	f2c0 80b3 	blt.w	801bfee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801be88:	2600      	movs	r6, #0
 801be8a:	199c      	adds	r4, r3, r6
 801be8c:	2c00      	cmp	r4, #0
 801be8e:	dc3e      	bgt.n	801bf0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801be90:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801be94:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801be98:	f1bb 0f00 	cmp.w	fp, #0
 801be9c:	f340 810e 	ble.w	801c0bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801bea0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bea4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bea8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801beac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801beae:	f1bb 0b01 	subs.w	fp, fp, #1
 801beb2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801beb6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801beba:	eeb0 6a62 	vmov.f32	s12, s5
 801bebe:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bec2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bec6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801beca:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801bece:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bed2:	eeb0 6a43 	vmov.f32	s12, s6
 801bed6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801beda:	ee12 2a90 	vmov	r2, s5
 801bede:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bee2:	fb92 f3f3 	sdiv	r3, r2, r3
 801bee6:	ee13 2a10 	vmov	r2, s6
 801beea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801beee:	9311      	str	r3, [sp, #68]	; 0x44
 801bef0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bef2:	fb92 f3f3 	sdiv	r3, r2, r3
 801bef6:	9a03      	ldr	r2, [sp, #12]
 801bef8:	9312      	str	r3, [sp, #72]	; 0x48
 801befa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801befe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bf00:	eeb0 3a67 	vmov.f32	s6, s15
 801bf04:	bf08      	it	eq
 801bf06:	4613      	moveq	r3, r2
 801bf08:	eef0 2a47 	vmov.f32	s5, s14
 801bf0c:	e789      	b.n	801be22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801bf0e:	140f      	asrs	r7, r1, #16
 801bf10:	d418      	bmi.n	801bf44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bf12:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801bf16:	42bd      	cmp	r5, r7
 801bf18:	dd14      	ble.n	801bf44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bf1a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801bf1e:	d411      	bmi.n	801bf44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bf20:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801bf24:	4564      	cmp	r4, ip
 801bf26:	dd0d      	ble.n	801bf44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bf28:	b22d      	sxth	r5, r5
 801bf2a:	fb0c 7505 	mla	r5, ip, r5, r7
 801bf2e:	9c01      	ldr	r4, [sp, #4]
 801bf30:	5d64      	ldrb	r4, [r4, r5]
 801bf32:	2cff      	cmp	r4, #255	; 0xff
 801bf34:	d10c      	bne.n	801bf50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801bf36:	9c00      	ldr	r4, [sp, #0]
 801bf38:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801bf3c:	f06f 0401 	mvn.w	r4, #1
 801bf40:	4374      	muls	r4, r6
 801bf42:	5305      	strh	r5, [r0, r4]
 801bf44:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bf46:	4421      	add	r1, r4
 801bf48:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bf4a:	3e01      	subs	r6, #1
 801bf4c:	4422      	add	r2, r4
 801bf4e:	e79c      	b.n	801be8a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801bf50:	2c00      	cmp	r4, #0
 801bf52:	d0f7      	beq.n	801bf44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bf54:	9f00      	ldr	r7, [sp, #0]
 801bf56:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801bf5a:	f06f 0501 	mvn.w	r5, #1
 801bf5e:	4375      	muls	r5, r6
 801bf60:	9502      	str	r5, [sp, #8]
 801bf62:	5b45      	ldrh	r5, [r0, r5]
 801bf64:	fa1f fc84 	uxth.w	ip, r4
 801bf68:	122f      	asrs	r7, r5, #8
 801bf6a:	43e4      	mvns	r4, r4
 801bf6c:	b2e4      	uxtb	r4, r4
 801bf6e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801bf72:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bf76:	fb17 f704 	smulbb	r7, r7, r4
 801bf7a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bf7e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bf82:	00ed      	lsls	r5, r5, #3
 801bf84:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801bf88:	b2ed      	uxtb	r5, r5
 801bf8a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801bf8e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801bf92:	fb15 f504 	smulbb	r5, r5, r4
 801bf96:	fa5f f989 	uxtb.w	r9, r9
 801bf9a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801bf9e:	fb09 550c 	mla	r5, r9, ip, r5
 801bfa2:	fb1a fa04 	smulbb	sl, sl, r4
 801bfa6:	fa1f fe8e 	uxth.w	lr, lr
 801bfaa:	b2ad      	uxth	r5, r5
 801bfac:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bfb0:	fb07 a70c 	mla	r7, r7, ip, sl
 801bfb4:	f10e 0401 	add.w	r4, lr, #1
 801bfb8:	f105 0a01 	add.w	sl, r5, #1
 801bfbc:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801bfc0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bfc4:	b2bf      	uxth	r7, r7
 801bfc6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bfca:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801bfce:	ea4a 0e0e 	orr.w	lr, sl, lr
 801bfd2:	f107 0a01 	add.w	sl, r7, #1
 801bfd6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801bfda:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bfde:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bfe2:	9c02      	ldr	r4, [sp, #8]
 801bfe4:	ea4e 0e0a 	orr.w	lr, lr, sl
 801bfe8:	f820 e004 	strh.w	lr, [r0, r4]
 801bfec:	e7aa      	b.n	801bf44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bfee:	f04f 0900 	mov.w	r9, #0
 801bff2:	eba3 0409 	sub.w	r4, r3, r9
 801bff6:	2c00      	cmp	r4, #0
 801bff8:	f77f af4a 	ble.w	801be90 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801bffc:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801c000:	1414      	asrs	r4, r2, #16
 801c002:	140d      	asrs	r5, r1, #16
 801c004:	fb06 5504 	mla	r5, r6, r4, r5
 801c008:	9c01      	ldr	r4, [sp, #4]
 801c00a:	5d64      	ldrb	r4, [r4, r5]
 801c00c:	2cff      	cmp	r4, #255	; 0xff
 801c00e:	d10b      	bne.n	801c028 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801c010:	9c00      	ldr	r4, [sp, #0]
 801c012:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801c016:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801c01a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c01c:	4421      	add	r1, r4
 801c01e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c020:	f109 0901 	add.w	r9, r9, #1
 801c024:	4422      	add	r2, r4
 801c026:	e7e4      	b.n	801bff2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801c028:	2c00      	cmp	r4, #0
 801c02a:	d0f6      	beq.n	801c01a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801c02c:	9e00      	ldr	r6, [sp, #0]
 801c02e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801c032:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801c036:	b2a7      	uxth	r7, r4
 801c038:	122e      	asrs	r6, r5, #8
 801c03a:	43e4      	mvns	r4, r4
 801c03c:	b2e4      	uxtb	r4, r4
 801c03e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c042:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c046:	fb16 f604 	smulbb	r6, r6, r4
 801c04a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c04e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c052:	00ed      	lsls	r5, r5, #3
 801c054:	fb0c 6c07 	mla	ip, ip, r7, r6
 801c058:	b2ed      	uxtb	r5, r5
 801c05a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801c05e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c062:	fb15 f504 	smulbb	r5, r5, r4
 801c066:	fa5f fe8e 	uxtb.w	lr, lr
 801c06a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801c06e:	fb0e 5507 	mla	r5, lr, r7, r5
 801c072:	fb1a fa04 	smulbb	sl, sl, r4
 801c076:	fa1f fc8c 	uxth.w	ip, ip
 801c07a:	b2ad      	uxth	r5, r5
 801c07c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c080:	fb06 a607 	mla	r6, r6, r7, sl
 801c084:	f10c 0401 	add.w	r4, ip, #1
 801c088:	f105 0a01 	add.w	sl, r5, #1
 801c08c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801c090:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c094:	b2b6      	uxth	r6, r6
 801c096:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c09a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c09e:	ea4a 0c0c 	orr.w	ip, sl, ip
 801c0a2:	f106 0a01 	add.w	sl, r6, #1
 801c0a6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c0aa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c0ae:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c0b2:	ea4c 0c0a 	orr.w	ip, ip, sl
 801c0b6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801c0ba:	e7ae      	b.n	801c01a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801c0bc:	b005      	add	sp, #20
 801c0be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c0c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c0c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c0c6:	b085      	sub	sp, #20
 801c0c8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c0ca:	9203      	str	r2, [sp, #12]
 801c0cc:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801c0d0:	9201      	str	r2, [sp, #4]
 801c0d2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c0d6:	9100      	str	r1, [sp, #0]
 801c0d8:	6841      	ldr	r1, [r0, #4]
 801c0da:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801c0de:	fb01 2404 	mla	r4, r1, r4, r2
 801c0e2:	6802      	ldr	r2, [r0, #0]
 801c0e4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c0e8:	f8de 2000 	ldr.w	r2, [lr]
 801c0ec:	9202      	str	r2, [sp, #8]
 801c0ee:	9a01      	ldr	r2, [sp, #4]
 801c0f0:	43d6      	mvns	r6, r2
 801c0f2:	b2f6      	uxtb	r6, r6
 801c0f4:	9a00      	ldr	r2, [sp, #0]
 801c0f6:	2a00      	cmp	r2, #0
 801c0f8:	dc03      	bgt.n	801c102 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801c0fa:	9a03      	ldr	r2, [sp, #12]
 801c0fc:	2a00      	cmp	r2, #0
 801c0fe:	f340 8124 	ble.w	801c34a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801c102:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c104:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801c108:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801c10c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c110:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c112:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c116:	2b00      	cmp	r3, #0
 801c118:	dd0e      	ble.n	801c138 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c11a:	1408      	asrs	r0, r1, #16
 801c11c:	d405      	bmi.n	801c12a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801c11e:	4560      	cmp	r0, ip
 801c120:	da03      	bge.n	801c12a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801c122:	1410      	asrs	r0, r2, #16
 801c124:	d401      	bmi.n	801c12a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801c126:	42b8      	cmp	r0, r7
 801c128:	db07      	blt.n	801c13a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c12a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c12c:	4401      	add	r1, r0
 801c12e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c130:	3b01      	subs	r3, #1
 801c132:	4402      	add	r2, r0
 801c134:	3402      	adds	r4, #2
 801c136:	e7ee      	b.n	801c116 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801c138:	d06e      	beq.n	801c218 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801c13a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c13c:	1e58      	subs	r0, r3, #1
 801c13e:	fb05 1500 	mla	r5, r5, r0, r1
 801c142:	142d      	asrs	r5, r5, #16
 801c144:	d45c      	bmi.n	801c200 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801c146:	4565      	cmp	r5, ip
 801c148:	da5a      	bge.n	801c200 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801c14a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c14c:	fb05 2000 	mla	r0, r5, r0, r2
 801c150:	1400      	asrs	r0, r0, #16
 801c152:	d455      	bmi.n	801c200 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801c154:	42b8      	cmp	r0, r7
 801c156:	da53      	bge.n	801c200 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801c158:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801c15c:	4699      	mov	r9, r3
 801c15e:	46a2      	mov	sl, r4
 801c160:	f1b9 0f00 	cmp.w	r9, #0
 801c164:	dd54      	ble.n	801c210 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801c166:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801c16a:	140d      	asrs	r5, r1, #16
 801c16c:	1410      	asrs	r0, r2, #16
 801c16e:	fb07 5000 	mla	r0, r7, r0, r5
 801c172:	9d02      	ldr	r5, [sp, #8]
 801c174:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801c178:	f8ba 5000 	ldrh.w	r5, [sl]
 801c17c:	122f      	asrs	r7, r5, #8
 801c17e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c182:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c186:	fb17 f706 	smulbb	r7, r7, r6
 801c18a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801c18e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c192:	00ed      	lsls	r5, r5, #3
 801c194:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801c198:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801c19c:	10c7      	asrs	r7, r0, #3
 801c19e:	b2ed      	uxtb	r5, r5
 801c1a0:	00c0      	lsls	r0, r0, #3
 801c1a2:	fb18 f806 	smulbb	r8, r8, r6
 801c1a6:	fb15 f506 	smulbb	r5, r5, r6
 801c1aa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c1ae:	b2c0      	uxtb	r0, r0
 801c1b0:	fa1f fc8c 	uxth.w	ip, ip
 801c1b4:	fb07 870b 	mla	r7, r7, fp, r8
 801c1b8:	fb00 500b 	mla	r0, r0, fp, r5
 801c1bc:	b280      	uxth	r0, r0
 801c1be:	b2bf      	uxth	r7, r7
 801c1c0:	f10c 0501 	add.w	r5, ip, #1
 801c1c4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c1c8:	f107 0801 	add.w	r8, r7, #1
 801c1cc:	1c45      	adds	r5, r0, #1
 801c1ce:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c1d2:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801c1d6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c1d8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c1dc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c1e0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801c1e4:	ea45 0c0c 	orr.w	ip, r5, ip
 801c1e8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c1ec:	4401      	add	r1, r0
 801c1ee:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c1f0:	ea4c 0c08 	orr.w	ip, ip, r8
 801c1f4:	f82a cb02 	strh.w	ip, [sl], #2
 801c1f8:	4402      	add	r2, r0
 801c1fa:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 801c1fe:	e7af      	b.n	801c160 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801c200:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801c204:	f04f 0800 	mov.w	r8, #0
 801c208:	eb03 0008 	add.w	r0, r3, r8
 801c20c:	2800      	cmp	r0, #0
 801c20e:	dc41      	bgt.n	801c294 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c210:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c214:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c218:	9b00      	ldr	r3, [sp, #0]
 801c21a:	2b00      	cmp	r3, #0
 801c21c:	f340 8095 	ble.w	801c34a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801c220:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c224:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c228:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c22c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c22e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c232:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c236:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c23a:	eef0 6a62 	vmov.f32	s13, s5
 801c23e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c242:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c246:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c24a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801c24e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c252:	eef0 6a43 	vmov.f32	s13, s6
 801c256:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c25a:	ee12 2a90 	vmov	r2, s5
 801c25e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c262:	fb92 f3f3 	sdiv	r3, r2, r3
 801c266:	ee13 2a10 	vmov	r2, s6
 801c26a:	9311      	str	r3, [sp, #68]	; 0x44
 801c26c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c26e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c272:	9312      	str	r3, [sp, #72]	; 0x48
 801c274:	9b00      	ldr	r3, [sp, #0]
 801c276:	9a03      	ldr	r2, [sp, #12]
 801c278:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c27c:	3b01      	subs	r3, #1
 801c27e:	9300      	str	r3, [sp, #0]
 801c280:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801c284:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c286:	eeb0 3a67 	vmov.f32	s6, s15
 801c28a:	bf08      	it	eq
 801c28c:	4613      	moveq	r3, r2
 801c28e:	eef0 2a47 	vmov.f32	s5, s14
 801c292:	e72f      	b.n	801c0f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801c294:	140f      	asrs	r7, r1, #16
 801c296:	d451      	bmi.n	801c33c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801c298:	f8de 5008 	ldr.w	r5, [lr, #8]
 801c29c:	42bd      	cmp	r5, r7
 801c29e:	dd4d      	ble.n	801c33c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801c2a0:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c2a4:	d44a      	bmi.n	801c33c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801c2a6:	f8de 000c 	ldr.w	r0, [lr, #12]
 801c2aa:	4560      	cmp	r0, ip
 801c2ac:	dd46      	ble.n	801c33c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801c2ae:	b22d      	sxth	r5, r5
 801c2b0:	fb0c 7505 	mla	r5, ip, r5, r7
 801c2b4:	9802      	ldr	r0, [sp, #8]
 801c2b6:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801c2ba:	f06f 0501 	mvn.w	r5, #1
 801c2be:	fb05 fb08 	mul.w	fp, r5, r8
 801c2c2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c2c6:	f834 500b 	ldrh.w	r5, [r4, fp]
 801c2ca:	122f      	asrs	r7, r5, #8
 801c2cc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c2d0:	fb17 f706 	smulbb	r7, r7, r6
 801c2d4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801c2d8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c2dc:	00ed      	lsls	r5, r5, #3
 801c2de:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801c2e2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c2e6:	10c7      	asrs	r7, r0, #3
 801c2e8:	b2ed      	uxtb	r5, r5
 801c2ea:	00c0      	lsls	r0, r0, #3
 801c2ec:	fb19 f906 	smulbb	r9, r9, r6
 801c2f0:	fb15 f506 	smulbb	r5, r5, r6
 801c2f4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c2f8:	b2c0      	uxtb	r0, r0
 801c2fa:	fa1f fc8c 	uxth.w	ip, ip
 801c2fe:	fb07 970a 	mla	r7, r7, sl, r9
 801c302:	fb00 500a 	mla	r0, r0, sl, r5
 801c306:	b2bf      	uxth	r7, r7
 801c308:	b280      	uxth	r0, r0
 801c30a:	f10c 0501 	add.w	r5, ip, #1
 801c30e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c312:	f107 0901 	add.w	r9, r7, #1
 801c316:	1c45      	adds	r5, r0, #1
 801c318:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c31c:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801c320:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c324:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c328:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c32c:	ea45 0c0c 	orr.w	ip, r5, ip
 801c330:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c334:	ea4c 0c09 	orr.w	ip, ip, r9
 801c338:	f824 c00b 	strh.w	ip, [r4, fp]
 801c33c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c33e:	4401      	add	r1, r0
 801c340:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c342:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 801c346:	4402      	add	r2, r0
 801c348:	e75e      	b.n	801c208 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801c34a:	b005      	add	sp, #20
 801c34c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c350 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c354:	b085      	sub	sp, #20
 801c356:	4693      	mov	fp, r2
 801c358:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c35a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801c35c:	6870      	ldr	r0, [r6, #4]
 801c35e:	9101      	str	r1, [sp, #4]
 801c360:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c364:	fb00 2404 	mla	r4, r0, r4, r2
 801c368:	6832      	ldr	r2, [r6, #0]
 801c36a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801c36e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c372:	682a      	ldr	r2, [r5, #0]
 801c374:	9202      	str	r2, [sp, #8]
 801c376:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c37a:	9a01      	ldr	r2, [sp, #4]
 801c37c:	2a00      	cmp	r2, #0
 801c37e:	dc03      	bgt.n	801c388 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c380:	f1bb 0f00 	cmp.w	fp, #0
 801c384:	f340 809a 	ble.w	801c4bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801c388:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c38a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801c38e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801c392:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c396:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c398:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c39c:	2b00      	cmp	r3, #0
 801c39e:	dd0c      	ble.n	801c3ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801c3a0:	1406      	asrs	r6, r0, #16
 801c3a2:	d405      	bmi.n	801c3b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c3a4:	454e      	cmp	r6, r9
 801c3a6:	da03      	bge.n	801c3b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c3a8:	1416      	asrs	r6, r2, #16
 801c3aa:	d401      	bmi.n	801c3b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c3ac:	4546      	cmp	r6, r8
 801c3ae:	db05      	blt.n	801c3bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c3b0:	4470      	add	r0, lr
 801c3b2:	4462      	add	r2, ip
 801c3b4:	3b01      	subs	r3, #1
 801c3b6:	3402      	adds	r4, #2
 801c3b8:	e7f0      	b.n	801c39c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c3ba:	d00f      	beq.n	801c3dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801c3bc:	1e5e      	subs	r6, r3, #1
 801c3be:	fb0e 0706 	mla	r7, lr, r6, r0
 801c3c2:	143f      	asrs	r7, r7, #16
 801c3c4:	d541      	bpl.n	801c44a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801c3c6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801c3ca:	4698      	mov	r8, r3
 801c3cc:	9603      	str	r6, [sp, #12]
 801c3ce:	f1b8 0f00 	cmp.w	r8, #0
 801c3d2:	dc56      	bgt.n	801c482 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801c3d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c3d8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c3dc:	9b01      	ldr	r3, [sp, #4]
 801c3de:	2b00      	cmp	r3, #0
 801c3e0:	dd6c      	ble.n	801c4bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801c3e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c3e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c3ea:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c3ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c3f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c3f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c3f8:	eeb0 6a62 	vmov.f32	s12, s5
 801c3fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c400:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c404:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c408:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801c40c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c410:	eeb0 6a43 	vmov.f32	s12, s6
 801c414:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c418:	ee12 2a90 	vmov	r2, s5
 801c41c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c420:	fb92 fef3 	sdiv	lr, r2, r3
 801c424:	ee13 2a10 	vmov	r2, s6
 801c428:	fb92 fcf3 	sdiv	ip, r2, r3
 801c42c:	9b01      	ldr	r3, [sp, #4]
 801c42e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c432:	3b01      	subs	r3, #1
 801c434:	9301      	str	r3, [sp, #4]
 801c436:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801c43a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c43c:	eeb0 3a67 	vmov.f32	s6, s15
 801c440:	bf08      	it	eq
 801c442:	465b      	moveq	r3, fp
 801c444:	eef0 2a47 	vmov.f32	s5, s14
 801c448:	e797      	b.n	801c37a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801c44a:	454f      	cmp	r7, r9
 801c44c:	dabb      	bge.n	801c3c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c44e:	fb0c 2606 	mla	r6, ip, r6, r2
 801c452:	1436      	asrs	r6, r6, #16
 801c454:	d4b7      	bmi.n	801c3c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c456:	4546      	cmp	r6, r8
 801c458:	dab5      	bge.n	801c3c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c45a:	461e      	mov	r6, r3
 801c45c:	46a0      	mov	r8, r4
 801c45e:	2e00      	cmp	r6, #0
 801c460:	ddb8      	ble.n	801c3d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c462:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801c466:	9902      	ldr	r1, [sp, #8]
 801c468:	1417      	asrs	r7, r2, #16
 801c46a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801c46e:	fb0a 9707 	mla	r7, sl, r7, r9
 801c472:	4470      	add	r0, lr
 801c474:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801c478:	f828 7b02 	strh.w	r7, [r8], #2
 801c47c:	4462      	add	r2, ip
 801c47e:	3e01      	subs	r6, #1
 801c480:	e7ed      	b.n	801c45e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801c482:	ea5f 4920 	movs.w	r9, r0, asr #16
 801c486:	d414      	bmi.n	801c4b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c488:	68ae      	ldr	r6, [r5, #8]
 801c48a:	454e      	cmp	r6, r9
 801c48c:	dd11      	ble.n	801c4b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c48e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801c492:	d40e      	bmi.n	801c4b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c494:	68ef      	ldr	r7, [r5, #12]
 801c496:	4557      	cmp	r7, sl
 801c498:	dd0b      	ble.n	801c4b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c49a:	b236      	sxth	r6, r6
 801c49c:	fb0a 9606 	mla	r6, sl, r6, r9
 801c4a0:	9f02      	ldr	r7, [sp, #8]
 801c4a2:	f06f 0101 	mvn.w	r1, #1
 801c4a6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801c4aa:	fb01 f608 	mul.w	r6, r1, r8
 801c4ae:	9903      	ldr	r1, [sp, #12]
 801c4b0:	538f      	strh	r7, [r1, r6]
 801c4b2:	4470      	add	r0, lr
 801c4b4:	4462      	add	r2, ip
 801c4b6:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 801c4ba:	e788      	b.n	801c3ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c4bc:	b005      	add	sp, #20
 801c4be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c4c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c4c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c4c6:	b087      	sub	sp, #28
 801c4c8:	468b      	mov	fp, r1
 801c4ca:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c4cc:	9203      	str	r2, [sp, #12]
 801c4ce:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c4d2:	9204      	str	r2, [sp, #16]
 801c4d4:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801c4d8:	6841      	ldr	r1, [r0, #4]
 801c4da:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801c4de:	fb01 2505 	mla	r5, r1, r5, r2
 801c4e2:	6802      	ldr	r2, [r0, #0]
 801c4e4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801c4e8:	f8d9 2000 	ldr.w	r2, [r9]
 801c4ec:	9201      	str	r2, [sp, #4]
 801c4ee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c4f2:	f1bb 0f00 	cmp.w	fp, #0
 801c4f6:	dc03      	bgt.n	801c500 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c4f8:	9a03      	ldr	r2, [sp, #12]
 801c4fa:	2a00      	cmp	r2, #0
 801c4fc:	f340 8159 	ble.w	801c7b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c500:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c502:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801c506:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801c50a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c50e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c510:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c514:	2b00      	cmp	r3, #0
 801c516:	dd0e      	ble.n	801c536 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801c518:	1402      	asrs	r2, r0, #16
 801c51a:	d405      	bmi.n	801c528 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c51c:	42ba      	cmp	r2, r7
 801c51e:	da03      	bge.n	801c528 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c520:	140a      	asrs	r2, r1, #16
 801c522:	d401      	bmi.n	801c528 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c524:	42b2      	cmp	r2, r6
 801c526:	db07      	blt.n	801c538 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c528:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c52a:	4410      	add	r0, r2
 801c52c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c52e:	3b01      	subs	r3, #1
 801c530:	4411      	add	r1, r2
 801c532:	3502      	adds	r5, #2
 801c534:	e7ee      	b.n	801c514 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801c536:	d017      	beq.n	801c568 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c538:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c53a:	1e5a      	subs	r2, r3, #1
 801c53c:	fb04 0402 	mla	r4, r4, r2, r0
 801c540:	1424      	asrs	r4, r4, #16
 801c542:	d409      	bmi.n	801c558 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c544:	42bc      	cmp	r4, r7
 801c546:	da07      	bge.n	801c558 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c548:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c54a:	fb04 1202 	mla	r2, r4, r2, r1
 801c54e:	1412      	asrs	r2, r2, #16
 801c550:	d402      	bmi.n	801c558 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c552:	42b2      	cmp	r2, r6
 801c554:	f2c0 80bf 	blt.w	801c6d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c558:	2700      	movs	r7, #0
 801c55a:	19da      	adds	r2, r3, r7
 801c55c:	2a00      	cmp	r2, #0
 801c55e:	dc3e      	bgt.n	801c5de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801c560:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c564:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c568:	f1bb 0f00 	cmp.w	fp, #0
 801c56c:	f340 8121 	ble.w	801c7b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c570:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c574:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c578:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c57c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c57e:	f1bb 0b01 	subs.w	fp, fp, #1
 801c582:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c586:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c58a:	eeb0 6a62 	vmov.f32	s12, s5
 801c58e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c592:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c596:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c59a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c59e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c5a2:	eeb0 6a43 	vmov.f32	s12, s6
 801c5a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c5aa:	ee12 2a90 	vmov	r2, s5
 801c5ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c5b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801c5b6:	ee13 2a10 	vmov	r2, s6
 801c5ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c5be:	9313      	str	r3, [sp, #76]	; 0x4c
 801c5c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c5c2:	fb92 f3f3 	sdiv	r3, r2, r3
 801c5c6:	9a03      	ldr	r2, [sp, #12]
 801c5c8:	9314      	str	r3, [sp, #80]	; 0x50
 801c5ca:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c5ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c5d0:	eeb0 3a67 	vmov.f32	s6, s15
 801c5d4:	bf08      	it	eq
 801c5d6:	4613      	moveq	r3, r2
 801c5d8:	eef0 2a47 	vmov.f32	s5, s14
 801c5dc:	e789      	b.n	801c4f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801c5de:	1406      	asrs	r6, r0, #16
 801c5e0:	d42d      	bmi.n	801c63e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c5e2:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801c5e6:	42b4      	cmp	r4, r6
 801c5e8:	dd29      	ble.n	801c63e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c5ea:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801c5ee:	d426      	bmi.n	801c63e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c5f0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801c5f4:	4562      	cmp	r2, ip
 801c5f6:	dd22      	ble.n	801c63e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c5f8:	b224      	sxth	r4, r4
 801c5fa:	9a01      	ldr	r2, [sp, #4]
 801c5fc:	fb0c 6404 	mla	r4, ip, r4, r6
 801c600:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801c604:	0e22      	lsrs	r2, r4, #24
 801c606:	d01a      	beq.n	801c63e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c608:	9e04      	ldr	r6, [sp, #16]
 801c60a:	4372      	muls	r2, r6
 801c60c:	1c56      	adds	r6, r2, #1
 801c60e:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801c612:	1212      	asrs	r2, r2, #8
 801c614:	0a26      	lsrs	r6, r4, #8
 801c616:	2aff      	cmp	r2, #255	; 0xff
 801c618:	9605      	str	r6, [sp, #20]
 801c61a:	d116      	bne.n	801c64a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801c61c:	f06f 0201 	mvn.w	r2, #1
 801c620:	fb02 fc07 	mul.w	ip, r2, r7
 801c624:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c628:	0962      	lsrs	r2, r4, #5
 801c62a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c62e:	f026 0607 	bic.w	r6, r6, #7
 801c632:	4316      	orrs	r6, r2
 801c634:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c638:	4326      	orrs	r6, r4
 801c63a:	f825 600c 	strh.w	r6, [r5, ip]
 801c63e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c640:	4410      	add	r0, r2
 801c642:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c644:	3f01      	subs	r7, #1
 801c646:	4411      	add	r1, r2
 801c648:	e787      	b.n	801c55a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c64a:	f06f 0601 	mvn.w	r6, #1
 801c64e:	437e      	muls	r6, r7
 801c650:	fa1f fa82 	uxth.w	sl, r2
 801c654:	f835 8006 	ldrh.w	r8, [r5, r6]
 801c658:	9602      	str	r6, [sp, #8]
 801c65a:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801c65e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801c662:	43d2      	mvns	r2, r2
 801c664:	b2d2      	uxtb	r2, r2
 801c666:	fb1c fc0a 	smulbb	ip, ip, sl
 801c66a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c66e:	fb0e ce02 	mla	lr, lr, r2, ip
 801c672:	b2e4      	uxtb	r4, r4
 801c674:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801c678:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c67c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801c680:	fa5f f888 	uxtb.w	r8, r8
 801c684:	fb14 f40a 	smulbb	r4, r4, sl
 801c688:	fb08 4402 	mla	r4, r8, r2, r4
 801c68c:	fa1f fe8e 	uxth.w	lr, lr
 801c690:	fb16 f60a 	smulbb	r6, r6, sl
 801c694:	b2a4      	uxth	r4, r4
 801c696:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801c69a:	fb0c 6c02 	mla	ip, ip, r2, r6
 801c69e:	f10e 0201 	add.w	r2, lr, #1
 801c6a2:	1c66      	adds	r6, r4, #1
 801c6a4:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801c6a8:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801c6ac:	fa1f fc8c 	uxth.w	ip, ip
 801c6b0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c6b4:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801c6b8:	ea46 0e0e 	orr.w	lr, r6, lr
 801c6bc:	f10c 0601 	add.w	r6, ip, #1
 801c6c0:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801c6c4:	0976      	lsrs	r6, r6, #5
 801c6c6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c6ca:	9a02      	ldr	r2, [sp, #8]
 801c6cc:	ea4e 0e06 	orr.w	lr, lr, r6
 801c6d0:	f825 e002 	strh.w	lr, [r5, r2]
 801c6d4:	e7b3      	b.n	801c63e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c6d6:	f04f 0800 	mov.w	r8, #0
 801c6da:	eba3 0208 	sub.w	r2, r3, r8
 801c6de:	2a00      	cmp	r2, #0
 801c6e0:	f77f af3e 	ble.w	801c560 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801c6e4:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801c6e8:	1404      	asrs	r4, r0, #16
 801c6ea:	140a      	asrs	r2, r1, #16
 801c6ec:	fb06 4202 	mla	r2, r6, r2, r4
 801c6f0:	9c01      	ldr	r4, [sp, #4]
 801c6f2:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801c6f6:	0e22      	lsrs	r2, r4, #24
 801c6f8:	d016      	beq.n	801c728 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801c6fa:	9e04      	ldr	r6, [sp, #16]
 801c6fc:	4372      	muls	r2, r6
 801c6fe:	1c56      	adds	r6, r2, #1
 801c700:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801c704:	1212      	asrs	r2, r2, #8
 801c706:	2aff      	cmp	r2, #255	; 0xff
 801c708:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801c70c:	d113      	bne.n	801c736 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801c70e:	0962      	lsrs	r2, r4, #5
 801c710:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c714:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c718:	f026 0607 	bic.w	r6, r6, #7
 801c71c:	4316      	orrs	r6, r2
 801c71e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c722:	4326      	orrs	r6, r4
 801c724:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801c728:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c72a:	4410      	add	r0, r2
 801c72c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c72e:	f108 0801 	add.w	r8, r8, #1
 801c732:	4411      	add	r1, r2
 801c734:	e7d1      	b.n	801c6da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801c736:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801c73a:	fa1f fa82 	uxth.w	sl, r2
 801c73e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c742:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801c746:	43d2      	mvns	r2, r2
 801c748:	b2d2      	uxtb	r2, r2
 801c74a:	fb17 f70a 	smulbb	r7, r7, sl
 801c74e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c752:	fb0c 7c02 	mla	ip, ip, r2, r7
 801c756:	b2e4      	uxtb	r4, r4
 801c758:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c75c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c760:	fa5f fe8e 	uxtb.w	lr, lr
 801c764:	fb14 f40a 	smulbb	r4, r4, sl
 801c768:	fb0e 4402 	mla	r4, lr, r2, r4
 801c76c:	b2f6      	uxtb	r6, r6
 801c76e:	fa1f fc8c 	uxth.w	ip, ip
 801c772:	fb16 f60a 	smulbb	r6, r6, sl
 801c776:	b2a4      	uxth	r4, r4
 801c778:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c77c:	fb07 6702 	mla	r7, r7, r2, r6
 801c780:	f10c 0201 	add.w	r2, ip, #1
 801c784:	1c66      	adds	r6, r4, #1
 801c786:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801c78a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801c78e:	b2bf      	uxth	r7, r7
 801c790:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c794:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c798:	ea46 0c0c 	orr.w	ip, r6, ip
 801c79c:	1c7e      	adds	r6, r7, #1
 801c79e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801c7a2:	0976      	lsrs	r6, r6, #5
 801c7a4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c7a8:	ea4c 0c06 	orr.w	ip, ip, r6
 801c7ac:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801c7b0:	e7ba      	b.n	801c728 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801c7b2:	b007      	add	sp, #28
 801c7b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c7b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c7b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c7bc:	b085      	sub	sp, #20
 801c7be:	468b      	mov	fp, r1
 801c7c0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c7c2:	9203      	str	r2, [sp, #12]
 801c7c4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c7c8:	6841      	ldr	r1, [r0, #4]
 801c7ca:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801c7ce:	fb01 2404 	mla	r4, r1, r4, r2
 801c7d2:	6802      	ldr	r2, [r0, #0]
 801c7d4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c7d8:	f8d8 2000 	ldr.w	r2, [r8]
 801c7dc:	9201      	str	r2, [sp, #4]
 801c7de:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c7e2:	f1bb 0f00 	cmp.w	fp, #0
 801c7e6:	dc03      	bgt.n	801c7f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c7e8:	9a03      	ldr	r2, [sp, #12]
 801c7ea:	2a00      	cmp	r2, #0
 801c7ec:	f340 814f 	ble.w	801ca8e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801c7f0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c7f2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801c7f6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801c7fa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c7fe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c800:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c804:	2b00      	cmp	r3, #0
 801c806:	dd0e      	ble.n	801c826 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c808:	1408      	asrs	r0, r1, #16
 801c80a:	d405      	bmi.n	801c818 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c80c:	42b8      	cmp	r0, r7
 801c80e:	da03      	bge.n	801c818 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c810:	1410      	asrs	r0, r2, #16
 801c812:	d401      	bmi.n	801c818 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c814:	42b0      	cmp	r0, r6
 801c816:	db07      	blt.n	801c828 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c818:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c81a:	4401      	add	r1, r0
 801c81c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c81e:	3b01      	subs	r3, #1
 801c820:	4402      	add	r2, r0
 801c822:	3402      	adds	r4, #2
 801c824:	e7ee      	b.n	801c804 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c826:	d017      	beq.n	801c858 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c828:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c82a:	1e58      	subs	r0, r3, #1
 801c82c:	fb05 1500 	mla	r5, r5, r0, r1
 801c830:	142d      	asrs	r5, r5, #16
 801c832:	d409      	bmi.n	801c848 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c834:	42bd      	cmp	r5, r7
 801c836:	da07      	bge.n	801c848 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c838:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c83a:	fb05 2000 	mla	r0, r5, r0, r2
 801c83e:	1400      	asrs	r0, r0, #16
 801c840:	d402      	bmi.n	801c848 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c842:	42b0      	cmp	r0, r6
 801c844:	f2c0 80ba 	blt.w	801c9bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c848:	2600      	movs	r6, #0
 801c84a:	1998      	adds	r0, r3, r6
 801c84c:	2800      	cmp	r0, #0
 801c84e:	dc3e      	bgt.n	801c8ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c850:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c854:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c858:	f1bb 0f00 	cmp.w	fp, #0
 801c85c:	f340 8117 	ble.w	801ca8e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801c860:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c864:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c868:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c86c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c86e:	f1bb 0b01 	subs.w	fp, fp, #1
 801c872:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c876:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c87a:	eeb0 6a62 	vmov.f32	s12, s5
 801c87e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c882:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c886:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c88a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801c88e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c892:	eeb0 6a43 	vmov.f32	s12, s6
 801c896:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c89a:	ee12 2a90 	vmov	r2, s5
 801c89e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c8a2:	fb92 f3f3 	sdiv	r3, r2, r3
 801c8a6:	ee13 2a10 	vmov	r2, s6
 801c8aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c8ae:	9311      	str	r3, [sp, #68]	; 0x44
 801c8b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c8b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801c8b6:	9a03      	ldr	r2, [sp, #12]
 801c8b8:	9312      	str	r3, [sp, #72]	; 0x48
 801c8ba:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801c8be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c8c0:	eeb0 3a67 	vmov.f32	s6, s15
 801c8c4:	bf08      	it	eq
 801c8c6:	4613      	moveq	r3, r2
 801c8c8:	eef0 2a47 	vmov.f32	s5, s14
 801c8cc:	e789      	b.n	801c7e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801c8ce:	140f      	asrs	r7, r1, #16
 801c8d0:	d424      	bmi.n	801c91c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c8d2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801c8d6:	42bd      	cmp	r5, r7
 801c8d8:	dd20      	ble.n	801c91c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c8da:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c8de:	d41d      	bmi.n	801c91c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c8e0:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801c8e4:	4560      	cmp	r0, ip
 801c8e6:	dd19      	ble.n	801c91c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c8e8:	b22d      	sxth	r5, r5
 801c8ea:	fb0c 7505 	mla	r5, ip, r5, r7
 801c8ee:	9801      	ldr	r0, [sp, #4]
 801c8f0:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801c8f4:	0e07      	lsrs	r7, r0, #24
 801c8f6:	2fff      	cmp	r7, #255	; 0xff
 801c8f8:	d116      	bne.n	801c928 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c8fa:	f06f 0501 	mvn.w	r5, #1
 801c8fe:	fb05 f706 	mul.w	r7, r5, r6
 801c902:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801c906:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801c90a:	0945      	lsrs	r5, r0, #5
 801c90c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c910:	ea4c 0505 	orr.w	r5, ip, r5
 801c914:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c918:	4305      	orrs	r5, r0
 801c91a:	53e5      	strh	r5, [r4, r7]
 801c91c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c91e:	4401      	add	r1, r0
 801c920:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c922:	3e01      	subs	r6, #1
 801c924:	4402      	add	r2, r0
 801c926:	e790      	b.n	801c84a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c928:	b2fd      	uxtb	r5, r7
 801c92a:	2f00      	cmp	r7, #0
 801c92c:	d0f6      	beq.n	801c91c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c92e:	f06f 0701 	mvn.w	r7, #1
 801c932:	4377      	muls	r7, r6
 801c934:	fa1f f985 	uxth.w	r9, r5
 801c938:	f834 e007 	ldrh.w	lr, [r4, r7]
 801c93c:	9702      	str	r7, [sp, #8]
 801c93e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c942:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801c946:	43ed      	mvns	r5, r5
 801c948:	b2ed      	uxtb	r5, r5
 801c94a:	fb17 f709 	smulbb	r7, r7, r9
 801c94e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c952:	fb0c 7c05 	mla	ip, ip, r5, r7
 801c956:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801c95a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c95e:	b2c0      	uxtb	r0, r0
 801c960:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c964:	fa5f fe8e 	uxtb.w	lr, lr
 801c968:	fb10 f009 	smulbb	r0, r0, r9
 801c96c:	fb0e 0005 	mla	r0, lr, r5, r0
 801c970:	b280      	uxth	r0, r0
 801c972:	fa1f fc8c 	uxth.w	ip, ip
 801c976:	fb1a fa09 	smulbb	sl, sl, r9
 801c97a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c97e:	fb07 a705 	mla	r7, r7, r5, sl
 801c982:	f100 0a01 	add.w	sl, r0, #1
 801c986:	f10c 0501 	add.w	r5, ip, #1
 801c98a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801c98e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c992:	b2bf      	uxth	r7, r7
 801c994:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c998:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c99c:	ea4a 0c0c 	orr.w	ip, sl, ip
 801c9a0:	f107 0a01 	add.w	sl, r7, #1
 801c9a4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c9a8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c9ac:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c9b0:	9802      	ldr	r0, [sp, #8]
 801c9b2:	ea4c 0c0a 	orr.w	ip, ip, sl
 801c9b6:	f824 c000 	strh.w	ip, [r4, r0]
 801c9ba:	e7af      	b.n	801c91c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c9bc:	f04f 0e00 	mov.w	lr, #0
 801c9c0:	eba3 000e 	sub.w	r0, r3, lr
 801c9c4:	2800      	cmp	r0, #0
 801c9c6:	f77f af43 	ble.w	801c850 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c9ca:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801c9ce:	140d      	asrs	r5, r1, #16
 801c9d0:	1410      	asrs	r0, r2, #16
 801c9d2:	fb06 5000 	mla	r0, r6, r0, r5
 801c9d6:	9d01      	ldr	r5, [sp, #4]
 801c9d8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801c9dc:	0e2e      	lsrs	r6, r5, #24
 801c9de:	2eff      	cmp	r6, #255	; 0xff
 801c9e0:	d112      	bne.n	801ca08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801c9e2:	482c      	ldr	r0, [pc, #176]	; (801ca94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801c9e4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801c9e8:	0968      	lsrs	r0, r5, #5
 801c9ea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c9ee:	4330      	orrs	r0, r6
 801c9f0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c9f4:	4328      	orrs	r0, r5
 801c9f6:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801c9fa:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c9fc:	4401      	add	r1, r0
 801c9fe:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ca00:	f10e 0e01 	add.w	lr, lr, #1
 801ca04:	4402      	add	r2, r0
 801ca06:	e7db      	b.n	801c9c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801ca08:	b2f0      	uxtb	r0, r6
 801ca0a:	2e00      	cmp	r6, #0
 801ca0c:	d0f5      	beq.n	801c9fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ca0e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ca12:	fa1f f980 	uxth.w	r9, r0
 801ca16:	ea4f 272c 	mov.w	r7, ip, asr #8
 801ca1a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801ca1e:	43c0      	mvns	r0, r0
 801ca20:	b2c0      	uxtb	r0, r0
 801ca22:	fb16 f609 	smulbb	r6, r6, r9
 801ca26:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ca2a:	fb07 6700 	mla	r7, r7, r0, r6
 801ca2e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801ca32:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801ca36:	b2ed      	uxtb	r5, r5
 801ca38:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ca3c:	fa5f fc8c 	uxtb.w	ip, ip
 801ca40:	fb15 f509 	smulbb	r5, r5, r9
 801ca44:	fb0c 5500 	mla	r5, ip, r0, r5
 801ca48:	b2bf      	uxth	r7, r7
 801ca4a:	fb1a fa09 	smulbb	sl, sl, r9
 801ca4e:	b2ad      	uxth	r5, r5
 801ca50:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ca54:	fb06 a600 	mla	r6, r6, r0, sl
 801ca58:	1c78      	adds	r0, r7, #1
 801ca5a:	f105 0a01 	add.w	sl, r5, #1
 801ca5e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801ca62:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ca66:	b2b6      	uxth	r6, r6
 801ca68:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ca6c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ca70:	ea4a 0707 	orr.w	r7, sl, r7
 801ca74:	f106 0a01 	add.w	sl, r6, #1
 801ca78:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ca7c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ca80:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ca84:	ea47 070a 	orr.w	r7, r7, sl
 801ca88:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801ca8c:	e7b5      	b.n	801c9fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ca8e:	b005      	add	sp, #20
 801ca90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca94:	fffff800 	.word	0xfffff800

0801ca98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ca98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca9c:	b087      	sub	sp, #28
 801ca9e:	468b      	mov	fp, r1
 801caa0:	9815      	ldr	r0, [sp, #84]	; 0x54
 801caa2:	9203      	str	r2, [sp, #12]
 801caa4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801caa8:	9204      	str	r2, [sp, #16]
 801caaa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801caae:	6841      	ldr	r1, [r0, #4]
 801cab0:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801cab4:	fb01 2404 	mla	r4, r1, r4, r2
 801cab8:	6802      	ldr	r2, [r0, #0]
 801caba:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cabe:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801cac2:	3201      	adds	r2, #1
 801cac4:	f022 0201 	bic.w	r2, r2, #1
 801cac8:	9200      	str	r2, [sp, #0]
 801caca:	f8d9 2000 	ldr.w	r2, [r9]
 801cace:	9201      	str	r2, [sp, #4]
 801cad0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cad4:	f1bb 0f00 	cmp.w	fp, #0
 801cad8:	dc03      	bgt.n	801cae2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801cada:	9a03      	ldr	r2, [sp, #12]
 801cadc:	2a00      	cmp	r2, #0
 801cade:	f340 8169 	ble.w	801cdb4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801cae2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cae4:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801cae8:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801caec:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801caf0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801caf2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801caf6:	2b00      	cmp	r3, #0
 801caf8:	dd0e      	ble.n	801cb18 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801cafa:	1402      	asrs	r2, r0, #16
 801cafc:	d405      	bmi.n	801cb0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cafe:	42ba      	cmp	r2, r7
 801cb00:	da03      	bge.n	801cb0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb02:	140a      	asrs	r2, r1, #16
 801cb04:	d401      	bmi.n	801cb0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb06:	42b2      	cmp	r2, r6
 801cb08:	db07      	blt.n	801cb1a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801cb0a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cb0c:	4410      	add	r0, r2
 801cb0e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cb10:	3b01      	subs	r3, #1
 801cb12:	4411      	add	r1, r2
 801cb14:	3402      	adds	r4, #2
 801cb16:	e7ee      	b.n	801caf6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801cb18:	d017      	beq.n	801cb4a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801cb1a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801cb1c:	1e5a      	subs	r2, r3, #1
 801cb1e:	fb05 0502 	mla	r5, r5, r2, r0
 801cb22:	142d      	asrs	r5, r5, #16
 801cb24:	d409      	bmi.n	801cb3a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801cb26:	42bd      	cmp	r5, r7
 801cb28:	da07      	bge.n	801cb3a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801cb2a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801cb2c:	fb05 1202 	mla	r2, r5, r2, r1
 801cb30:	1412      	asrs	r2, r2, #16
 801cb32:	d402      	bmi.n	801cb3a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801cb34:	42b2      	cmp	r2, r6
 801cb36:	f2c0 80c7 	blt.w	801ccc8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801cb3a:	2700      	movs	r7, #0
 801cb3c:	19da      	adds	r2, r3, r7
 801cb3e:	2a00      	cmp	r2, #0
 801cb40:	dc3e      	bgt.n	801cbc0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801cb42:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cb46:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cb4a:	f1bb 0f00 	cmp.w	fp, #0
 801cb4e:	f340 8131 	ble.w	801cdb4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801cb52:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cb56:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cb5a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cb5e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cb60:	f1bb 0b01 	subs.w	fp, fp, #1
 801cb64:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cb68:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cb6c:	eeb0 6a62 	vmov.f32	s12, s5
 801cb70:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cb74:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cb78:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cb7c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801cb80:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cb84:	eeb0 6a43 	vmov.f32	s12, s6
 801cb88:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cb8c:	ee12 2a90 	vmov	r2, s5
 801cb90:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cb94:	fb92 f3f3 	sdiv	r3, r2, r3
 801cb98:	ee13 2a10 	vmov	r2, s6
 801cb9c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cba0:	9313      	str	r3, [sp, #76]	; 0x4c
 801cba2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cba4:	fb92 f3f3 	sdiv	r3, r2, r3
 801cba8:	9a03      	ldr	r2, [sp, #12]
 801cbaa:	9314      	str	r3, [sp, #80]	; 0x50
 801cbac:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801cbb0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cbb2:	eeb0 3a67 	vmov.f32	s6, s15
 801cbb6:	bf08      	it	eq
 801cbb8:	4613      	moveq	r3, r2
 801cbba:	eef0 2a47 	vmov.f32	s5, s14
 801cbbe:	e789      	b.n	801cad4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cbc0:	1405      	asrs	r5, r0, #16
 801cbc2:	d435      	bmi.n	801cc30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cbc4:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801cbc8:	42aa      	cmp	r2, r5
 801cbca:	dd31      	ble.n	801cc30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cbcc:	140e      	asrs	r6, r1, #16
 801cbce:	d42f      	bmi.n	801cc30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cbd0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801cbd4:	42b2      	cmp	r2, r6
 801cbd6:	dd2b      	ble.n	801cc30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cbd8:	9a00      	ldr	r2, [sp, #0]
 801cbda:	fb06 5502 	mla	r5, r6, r2, r5
 801cbde:	086a      	lsrs	r2, r5, #1
 801cbe0:	9e01      	ldr	r6, [sp, #4]
 801cbe2:	5cb2      	ldrb	r2, [r6, r2]
 801cbe4:	07ee      	lsls	r6, r5, #31
 801cbe6:	bf54      	ite	pl
 801cbe8:	f002 020f 	andpl.w	r2, r2, #15
 801cbec:	1112      	asrmi	r2, r2, #4
 801cbee:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801cbf2:	b2d2      	uxtb	r2, r2
 801cbf4:	b1e2      	cbz	r2, 801cc30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cbf6:	9d04      	ldr	r5, [sp, #16]
 801cbf8:	436a      	muls	r2, r5
 801cbfa:	1c55      	adds	r5, r2, #1
 801cbfc:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801cc00:	4d6e      	ldr	r5, [pc, #440]	; (801cdbc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801cc02:	682d      	ldr	r5, [r5, #0]
 801cc04:	1212      	asrs	r2, r2, #8
 801cc06:	0a2e      	lsrs	r6, r5, #8
 801cc08:	2aff      	cmp	r2, #255	; 0xff
 801cc0a:	9605      	str	r6, [sp, #20]
 801cc0c:	d116      	bne.n	801cc3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cc0e:	f06f 0201 	mvn.w	r2, #1
 801cc12:	fb02 fc07 	mul.w	ip, r2, r7
 801cc16:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801cc1a:	096a      	lsrs	r2, r5, #5
 801cc1c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cc20:	f026 0607 	bic.w	r6, r6, #7
 801cc24:	4316      	orrs	r6, r2
 801cc26:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801cc2a:	432e      	orrs	r6, r5
 801cc2c:	f824 600c 	strh.w	r6, [r4, ip]
 801cc30:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cc32:	4410      	add	r0, r2
 801cc34:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cc36:	3f01      	subs	r7, #1
 801cc38:	4411      	add	r1, r2
 801cc3a:	e77f      	b.n	801cb3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801cc3c:	f06f 0601 	mvn.w	r6, #1
 801cc40:	437e      	muls	r6, r7
 801cc42:	fa1f fa82 	uxth.w	sl, r2
 801cc46:	f834 8006 	ldrh.w	r8, [r4, r6]
 801cc4a:	9602      	str	r6, [sp, #8]
 801cc4c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801cc50:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801cc54:	43d2      	mvns	r2, r2
 801cc56:	b2d2      	uxtb	r2, r2
 801cc58:	fb1c fc0a 	smulbb	ip, ip, sl
 801cc5c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801cc60:	fb0e ce02 	mla	lr, lr, r2, ip
 801cc64:	b2ed      	uxtb	r5, r5
 801cc66:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801cc6a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801cc6e:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801cc72:	fa5f f888 	uxtb.w	r8, r8
 801cc76:	fb15 f50a 	smulbb	r5, r5, sl
 801cc7a:	fb08 5502 	mla	r5, r8, r2, r5
 801cc7e:	fa1f fe8e 	uxth.w	lr, lr
 801cc82:	fb16 f60a 	smulbb	r6, r6, sl
 801cc86:	b2ad      	uxth	r5, r5
 801cc88:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801cc8c:	fb0c 6c02 	mla	ip, ip, r2, r6
 801cc90:	f10e 0201 	add.w	r2, lr, #1
 801cc94:	1c6e      	adds	r6, r5, #1
 801cc96:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801cc9a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801cc9e:	fa1f fc8c 	uxth.w	ip, ip
 801cca2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801cca6:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801ccaa:	ea46 0e0e 	orr.w	lr, r6, lr
 801ccae:	f10c 0601 	add.w	r6, ip, #1
 801ccb2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801ccb6:	0976      	lsrs	r6, r6, #5
 801ccb8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ccbc:	9a02      	ldr	r2, [sp, #8]
 801ccbe:	ea4e 0e06 	orr.w	lr, lr, r6
 801ccc2:	f824 e002 	strh.w	lr, [r4, r2]
 801ccc6:	e7b3      	b.n	801cc30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ccc8:	f04f 0800 	mov.w	r8, #0
 801cccc:	eba3 0208 	sub.w	r2, r3, r8
 801ccd0:	2a00      	cmp	r2, #0
 801ccd2:	f77f af36 	ble.w	801cb42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ccd6:	9e00      	ldr	r6, [sp, #0]
 801ccd8:	1402      	asrs	r2, r0, #16
 801ccda:	140d      	asrs	r5, r1, #16
 801ccdc:	fb06 2505 	mla	r5, r6, r5, r2
 801cce0:	086a      	lsrs	r2, r5, #1
 801cce2:	9e01      	ldr	r6, [sp, #4]
 801cce4:	5cb2      	ldrb	r2, [r6, r2]
 801cce6:	07ed      	lsls	r5, r5, #31
 801cce8:	bf54      	ite	pl
 801ccea:	f002 020f 	andpl.w	r2, r2, #15
 801ccee:	1112      	asrmi	r2, r2, #4
 801ccf0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ccf4:	b2d2      	uxtb	r2, r2
 801ccf6:	b1c2      	cbz	r2, 801cd2a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ccf8:	9d04      	ldr	r5, [sp, #16]
 801ccfa:	436a      	muls	r2, r5
 801ccfc:	1c55      	adds	r5, r2, #1
 801ccfe:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801cd02:	4d2e      	ldr	r5, [pc, #184]	; (801cdbc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801cd04:	1212      	asrs	r2, r2, #8
 801cd06:	682e      	ldr	r6, [r5, #0]
 801cd08:	2aff      	cmp	r2, #255	; 0xff
 801cd0a:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801cd0e:	d113      	bne.n	801cd38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801cd10:	0972      	lsrs	r2, r6, #5
 801cd12:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801cd16:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cd1a:	f025 0507 	bic.w	r5, r5, #7
 801cd1e:	4315      	orrs	r5, r2
 801cd20:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801cd24:	4335      	orrs	r5, r6
 801cd26:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801cd2a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cd2c:	4410      	add	r0, r2
 801cd2e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cd30:	f108 0801 	add.w	r8, r8, #1
 801cd34:	4411      	add	r1, r2
 801cd36:	e7c9      	b.n	801cccc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801cd38:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801cd3c:	fa1f fa82 	uxth.w	sl, r2
 801cd40:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801cd44:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801cd48:	43d2      	mvns	r2, r2
 801cd4a:	b2d2      	uxtb	r2, r2
 801cd4c:	fb17 f70a 	smulbb	r7, r7, sl
 801cd50:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801cd54:	fb0c 7c02 	mla	ip, ip, r2, r7
 801cd58:	b2f6      	uxtb	r6, r6
 801cd5a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801cd5e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801cd62:	fa5f fe8e 	uxtb.w	lr, lr
 801cd66:	fb16 f60a 	smulbb	r6, r6, sl
 801cd6a:	fb0e 6602 	mla	r6, lr, r2, r6
 801cd6e:	b2ed      	uxtb	r5, r5
 801cd70:	fa1f fc8c 	uxth.w	ip, ip
 801cd74:	fb15 f50a 	smulbb	r5, r5, sl
 801cd78:	b2b6      	uxth	r6, r6
 801cd7a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801cd7e:	fb07 5702 	mla	r7, r7, r2, r5
 801cd82:	f10c 0201 	add.w	r2, ip, #1
 801cd86:	1c75      	adds	r5, r6, #1
 801cd88:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801cd8c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801cd90:	b2bf      	uxth	r7, r7
 801cd92:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801cd96:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801cd9a:	ea45 0c0c 	orr.w	ip, r5, ip
 801cd9e:	1c7d      	adds	r5, r7, #1
 801cda0:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801cda4:	096d      	lsrs	r5, r5, #5
 801cda6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cdaa:	ea4c 0c05 	orr.w	ip, ip, r5
 801cdae:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801cdb2:	e7ba      	b.n	801cd2a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801cdb4:	b007      	add	sp, #28
 801cdb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cdba:	bf00      	nop
 801cdbc:	2000e1d0 	.word	0x2000e1d0

0801cdc0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cdc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cdc4:	b087      	sub	sp, #28
 801cdc6:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801d0d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801cdca:	9815      	ldr	r0, [sp, #84]	; 0x54
 801cdcc:	9205      	str	r2, [sp, #20]
 801cdce:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801cdd2:	9101      	str	r1, [sp, #4]
 801cdd4:	6841      	ldr	r1, [r0, #4]
 801cdd6:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801cdda:	fb01 2404 	mla	r4, r1, r4, r2
 801cdde:	6802      	ldr	r2, [r0, #0]
 801cde0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cde4:	f8db 2008 	ldr.w	r2, [fp, #8]
 801cde8:	3201      	adds	r2, #1
 801cdea:	f022 0201 	bic.w	r2, r2, #1
 801cdee:	9202      	str	r2, [sp, #8]
 801cdf0:	f8db 2000 	ldr.w	r2, [fp]
 801cdf4:	9203      	str	r2, [sp, #12]
 801cdf6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cdfa:	9a01      	ldr	r2, [sp, #4]
 801cdfc:	2a00      	cmp	r2, #0
 801cdfe:	dc03      	bgt.n	801ce08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ce00:	9a05      	ldr	r2, [sp, #20]
 801ce02:	2a00      	cmp	r2, #0
 801ce04:	f340 8162 	ble.w	801d0cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ce08:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ce0a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801ce0e:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801ce12:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ce16:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ce18:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ce1c:	2b00      	cmp	r3, #0
 801ce1e:	dd0e      	ble.n	801ce3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ce20:	1402      	asrs	r2, r0, #16
 801ce22:	d405      	bmi.n	801ce30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ce24:	42ba      	cmp	r2, r7
 801ce26:	da03      	bge.n	801ce30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ce28:	140a      	asrs	r2, r1, #16
 801ce2a:	d401      	bmi.n	801ce30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ce2c:	42b2      	cmp	r2, r6
 801ce2e:	db07      	blt.n	801ce40 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ce30:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ce32:	4410      	add	r0, r2
 801ce34:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ce36:	3b01      	subs	r3, #1
 801ce38:	4411      	add	r1, r2
 801ce3a:	3402      	adds	r4, #2
 801ce3c:	e7ee      	b.n	801ce1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801ce3e:	d017      	beq.n	801ce70 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801ce40:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ce42:	1e5a      	subs	r2, r3, #1
 801ce44:	fb05 0502 	mla	r5, r5, r2, r0
 801ce48:	142d      	asrs	r5, r5, #16
 801ce4a:	d409      	bmi.n	801ce60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ce4c:	42bd      	cmp	r5, r7
 801ce4e:	da07      	bge.n	801ce60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ce50:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ce52:	fb05 1202 	mla	r2, r5, r2, r1
 801ce56:	1412      	asrs	r2, r2, #16
 801ce58:	d402      	bmi.n	801ce60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ce5a:	42b2      	cmp	r2, r6
 801ce5c:	f2c0 80c3 	blt.w	801cfe6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801ce60:	2500      	movs	r5, #0
 801ce62:	195a      	adds	r2, r3, r5
 801ce64:	2a00      	cmp	r2, #0
 801ce66:	dc3f      	bgt.n	801cee8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ce68:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ce6c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ce70:	9b01      	ldr	r3, [sp, #4]
 801ce72:	2b00      	cmp	r3, #0
 801ce74:	f340 812a 	ble.w	801d0cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ce78:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ce7c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ce80:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ce84:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ce86:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ce8a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ce8e:	eeb0 6a62 	vmov.f32	s12, s5
 801ce92:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ce96:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ce9a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ce9e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801cea2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cea6:	eeb0 6a43 	vmov.f32	s12, s6
 801ceaa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ceae:	ee12 2a90 	vmov	r2, s5
 801ceb2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ceb6:	fb92 f3f3 	sdiv	r3, r2, r3
 801ceba:	ee13 2a10 	vmov	r2, s6
 801cebe:	9313      	str	r3, [sp, #76]	; 0x4c
 801cec0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cec2:	fb92 f3f3 	sdiv	r3, r2, r3
 801cec6:	9314      	str	r3, [sp, #80]	; 0x50
 801cec8:	9b01      	ldr	r3, [sp, #4]
 801ceca:	9a05      	ldr	r2, [sp, #20]
 801cecc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ced0:	3b01      	subs	r3, #1
 801ced2:	9301      	str	r3, [sp, #4]
 801ced4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ced8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ceda:	eeb0 3a67 	vmov.f32	s6, s15
 801cede:	bf08      	it	eq
 801cee0:	4613      	moveq	r3, r2
 801cee2:	eef0 2a47 	vmov.f32	s5, s14
 801cee6:	e788      	b.n	801cdfa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cee8:	1406      	asrs	r6, r0, #16
 801ceea:	d42c      	bmi.n	801cf46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ceec:	f8db 2008 	ldr.w	r2, [fp, #8]
 801cef0:	42b2      	cmp	r2, r6
 801cef2:	dd28      	ble.n	801cf46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cef4:	140f      	asrs	r7, r1, #16
 801cef6:	d426      	bmi.n	801cf46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cef8:	f8db 200c 	ldr.w	r2, [fp, #12]
 801cefc:	42ba      	cmp	r2, r7
 801cefe:	dd22      	ble.n	801cf46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cf00:	9a02      	ldr	r2, [sp, #8]
 801cf02:	fb07 6602 	mla	r6, r7, r2, r6
 801cf06:	0872      	lsrs	r2, r6, #1
 801cf08:	9f03      	ldr	r7, [sp, #12]
 801cf0a:	5cba      	ldrb	r2, [r7, r2]
 801cf0c:	07f6      	lsls	r6, r6, #31
 801cf0e:	bf54      	ite	pl
 801cf10:	f002 020f 	andpl.w	r2, r2, #15
 801cf14:	1112      	asrmi	r2, r2, #4
 801cf16:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801cf1a:	b2d2      	uxtb	r2, r2
 801cf1c:	2aff      	cmp	r2, #255	; 0xff
 801cf1e:	d118      	bne.n	801cf52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801cf20:	f8d8 2000 	ldr.w	r2, [r8]
 801cf24:	f06f 0601 	mvn.w	r6, #1
 801cf28:	fb06 f705 	mul.w	r7, r6, r5
 801cf2c:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801cf30:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801cf34:	0956      	lsrs	r6, r2, #5
 801cf36:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cf3a:	ea4c 0606 	orr.w	r6, ip, r6
 801cf3e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cf42:	4316      	orrs	r6, r2
 801cf44:	53e6      	strh	r6, [r4, r7]
 801cf46:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cf48:	4410      	add	r0, r2
 801cf4a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cf4c:	3d01      	subs	r5, #1
 801cf4e:	4411      	add	r1, r2
 801cf50:	e787      	b.n	801ce62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801cf52:	2a00      	cmp	r2, #0
 801cf54:	d0f7      	beq.n	801cf46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cf56:	f06f 0601 	mvn.w	r6, #1
 801cf5a:	436e      	muls	r6, r5
 801cf5c:	f8d8 c000 	ldr.w	ip, [r8]
 801cf60:	f834 e006 	ldrh.w	lr, [r4, r6]
 801cf64:	9604      	str	r6, [sp, #16]
 801cf66:	fa1f f982 	uxth.w	r9, r2
 801cf6a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801cf6e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801cf72:	43d2      	mvns	r2, r2
 801cf74:	b2d2      	uxtb	r2, r2
 801cf76:	fb16 f609 	smulbb	r6, r6, r9
 801cf7a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cf7e:	fb07 6702 	mla	r7, r7, r2, r6
 801cf82:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801cf86:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801cf8a:	fa5f fc8c 	uxtb.w	ip, ip
 801cf8e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801cf92:	fa5f fe8e 	uxtb.w	lr, lr
 801cf96:	fb1c fc09 	smulbb	ip, ip, r9
 801cf9a:	fb0e cc02 	mla	ip, lr, r2, ip
 801cf9e:	b2bf      	uxth	r7, r7
 801cfa0:	fb1a fa09 	smulbb	sl, sl, r9
 801cfa4:	fa1f fc8c 	uxth.w	ip, ip
 801cfa8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cfac:	fb06 a602 	mla	r6, r6, r2, sl
 801cfb0:	1c7a      	adds	r2, r7, #1
 801cfb2:	f10c 0a01 	add.w	sl, ip, #1
 801cfb6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801cfba:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801cfbe:	b2b6      	uxth	r6, r6
 801cfc0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801cfc4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cfc8:	ea4a 0707 	orr.w	r7, sl, r7
 801cfcc:	f106 0a01 	add.w	sl, r6, #1
 801cfd0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801cfd4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cfd8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801cfdc:	9a04      	ldr	r2, [sp, #16]
 801cfde:	ea47 070a 	orr.w	r7, r7, sl
 801cfe2:	52a7      	strh	r7, [r4, r2]
 801cfe4:	e7af      	b.n	801cf46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cfe6:	f04f 0e00 	mov.w	lr, #0
 801cfea:	eba3 020e 	sub.w	r2, r3, lr
 801cfee:	2a00      	cmp	r2, #0
 801cff0:	f77f af3a 	ble.w	801ce68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801cff4:	9e02      	ldr	r6, [sp, #8]
 801cff6:	1402      	asrs	r2, r0, #16
 801cff8:	140d      	asrs	r5, r1, #16
 801cffa:	fb06 2505 	mla	r5, r6, r5, r2
 801cffe:	086a      	lsrs	r2, r5, #1
 801d000:	9e03      	ldr	r6, [sp, #12]
 801d002:	5cb2      	ldrb	r2, [r6, r2]
 801d004:	07ed      	lsls	r5, r5, #31
 801d006:	bf54      	ite	pl
 801d008:	f002 020f 	andpl.w	r2, r2, #15
 801d00c:	1112      	asrmi	r2, r2, #4
 801d00e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801d012:	b2d2      	uxtb	r2, r2
 801d014:	2aff      	cmp	r2, #255	; 0xff
 801d016:	d115      	bne.n	801d044 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801d018:	f8d8 5000 	ldr.w	r5, [r8]
 801d01c:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801d020:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801d024:	096a      	lsrs	r2, r5, #5
 801d026:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d02a:	4332      	orrs	r2, r6
 801d02c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d030:	432a      	orrs	r2, r5
 801d032:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801d036:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d038:	4410      	add	r0, r2
 801d03a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d03c:	f10e 0e01 	add.w	lr, lr, #1
 801d040:	4411      	add	r1, r2
 801d042:	e7d2      	b.n	801cfea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801d044:	2a00      	cmp	r2, #0
 801d046:	d0f6      	beq.n	801d036 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801d048:	f8d8 7000 	ldr.w	r7, [r8]
 801d04c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801d050:	fa1f f982 	uxth.w	r9, r2
 801d054:	ea4f 262c 	mov.w	r6, ip, asr #8
 801d058:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801d05c:	43d2      	mvns	r2, r2
 801d05e:	b2d2      	uxtb	r2, r2
 801d060:	fb15 f509 	smulbb	r5, r5, r9
 801d064:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d068:	fb06 5602 	mla	r6, r6, r2, r5
 801d06c:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801d070:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d074:	b2ff      	uxtb	r7, r7
 801d076:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d07a:	fa5f fc8c 	uxtb.w	ip, ip
 801d07e:	fb17 f709 	smulbb	r7, r7, r9
 801d082:	fb0c 7702 	mla	r7, ip, r2, r7
 801d086:	b2b6      	uxth	r6, r6
 801d088:	fb1a fa09 	smulbb	sl, sl, r9
 801d08c:	b2bf      	uxth	r7, r7
 801d08e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d092:	fb05 a502 	mla	r5, r5, r2, sl
 801d096:	1c72      	adds	r2, r6, #1
 801d098:	f107 0a01 	add.w	sl, r7, #1
 801d09c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801d0a0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801d0a4:	b2ad      	uxth	r5, r5
 801d0a6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d0aa:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d0ae:	ea4a 0606 	orr.w	r6, sl, r6
 801d0b2:	f105 0a01 	add.w	sl, r5, #1
 801d0b6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d0ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d0be:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d0c2:	ea46 060a 	orr.w	r6, r6, sl
 801d0c6:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801d0ca:	e7b4      	b.n	801d036 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801d0cc:	b007      	add	sp, #28
 801d0ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d0d2:	bf00      	nop
 801d0d4:	2000e1d0 	.word	0x2000e1d0

0801d0d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801d0d8:	4770      	bx	lr

0801d0da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801d0da:	4770      	bx	lr

0801d0dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801d0dc:	4770      	bx	lr

0801d0de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801d0de:	4770      	bx	lr

0801d0e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801d0e0:	4770      	bx	lr

0801d0e2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801d0e2:	4770      	bx	lr

0801d0e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801d0e4:	4770      	bx	lr

0801d0e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801d0e6:	4770      	bx	lr

0801d0e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801d0e8:	4770      	bx	lr

0801d0ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801d0ea:	4770      	bx	lr

0801d0ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801d0ec:	4770      	bx	lr

0801d0ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801d0ee:	4770      	bx	lr

0801d0f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801d0f0:	4770      	bx	lr

0801d0f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801d0f2:	4770      	bx	lr

0801d0f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801d0f4:	4770      	bx	lr

0801d0f6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801d0f6:	4770      	bx	lr

0801d0f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801d0f8:	4770      	bx	lr

0801d0fa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801d0fa:	4770      	bx	lr

0801d0fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801d0fc:	4770      	bx	lr

0801d0fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801d0fe:	4770      	bx	lr

0801d100 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801d100:	4770      	bx	lr

0801d102 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801d102:	4770      	bx	lr

0801d104 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801d104:	4770      	bx	lr

0801d106 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801d106:	4770      	bx	lr

0801d108 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801d108:	4770      	bx	lr

0801d10a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801d10a:	4770      	bx	lr

0801d10c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801d10c:	4770      	bx	lr

0801d10e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801d10e:	4770      	bx	lr

0801d110 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801d110:	4770      	bx	lr

0801d112 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801d112:	4770      	bx	lr

0801d114 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801d114:	4770      	bx	lr

0801d116 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801d116:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d11a:	b088      	sub	sp, #32
 801d11c:	ac08      	add	r4, sp, #32
 801d11e:	4606      	mov	r6, r0
 801d120:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801d124:	4620      	mov	r0, r4
 801d126:	4688      	mov	r8, r1
 801d128:	4691      	mov	r9, r2
 801d12a:	f7fd fc63 	bl	801a9f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801d12e:	6833      	ldr	r3, [r6, #0]
 801d130:	4605      	mov	r5, r0
 801d132:	4620      	mov	r0, r4
 801d134:	699f      	ldr	r7, [r3, #24]
 801d136:	f7fd fb71 	bl	801a81c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801d13a:	4682      	mov	sl, r0
 801d13c:	4620      	mov	r0, r4
 801d13e:	f7fd fba1 	bl	801a884 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801d142:	9500      	str	r5, [sp, #0]
 801d144:	e9cd a001 	strd	sl, r0, [sp, #4]
 801d148:	464b      	mov	r3, r9
 801d14a:	a806      	add	r0, sp, #24
 801d14c:	4642      	mov	r2, r8
 801d14e:	4631      	mov	r1, r6
 801d150:	47b8      	blx	r7
 801d152:	4628      	mov	r0, r5
 801d154:	b008      	add	sp, #32
 801d156:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0801d15c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801d15c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801d160:	2300      	movs	r3, #0
 801d162:	9300      	str	r3, [sp, #0]
 801d164:	4b3d      	ldr	r3, [pc, #244]	; (801d25c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801d166:	781b      	ldrb	r3, [r3, #0]
 801d168:	2b00      	cmp	r3, #0
 801d16a:	d137      	bne.n	801d1dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801d16c:	4a3c      	ldr	r2, [pc, #240]	; (801d260 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801d16e:	f9b2 2000 	ldrsh.w	r2, [r2]
 801d172:	f8ad 2004 	strh.w	r2, [sp, #4]
 801d176:	2b00      	cmp	r3, #0
 801d178:	d132      	bne.n	801d1e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801d17a:	4b3a      	ldr	r3, [pc, #232]	; (801d264 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801d17c:	f9b3 3000 	ldrsh.w	r3, [r3]
 801d180:	6808      	ldr	r0, [r1, #0]
 801d182:	6849      	ldr	r1, [r1, #4]
 801d184:	f8ad 3006 	strh.w	r3, [sp, #6]
 801d188:	ac02      	add	r4, sp, #8
 801d18a:	ab02      	add	r3, sp, #8
 801d18c:	c303      	stmia	r3!, {r0, r1}
 801d18e:	4669      	mov	r1, sp
 801d190:	4620      	mov	r0, r4
 801d192:	f7fa f823 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d196:	4668      	mov	r0, sp
 801d198:	f7f9 ffdc 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d19c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801d1a0:	f8bd 2000 	ldrh.w	r2, [sp]
 801d1a4:	4d30      	ldr	r5, [pc, #192]	; (801d268 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801d1a6:	4413      	add	r3, r2
 801d1a8:	f8ad 3008 	strh.w	r3, [sp, #8]
 801d1ac:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801d1b0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801d1b4:	6828      	ldr	r0, [r5, #0]
 801d1b6:	4413      	add	r3, r2
 801d1b8:	f8ad 300a 	strh.w	r3, [sp, #10]
 801d1bc:	6803      	ldr	r3, [r0, #0]
 801d1be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d1c0:	4798      	blx	r3
 801d1c2:	f010 0f01 	tst.w	r0, #1
 801d1c6:	462f      	mov	r7, r5
 801d1c8:	d00c      	beq.n	801d1e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801d1ca:	6828      	ldr	r0, [r5, #0]
 801d1cc:	6803      	ldr	r3, [r0, #0]
 801d1ce:	e894 0006 	ldmia.w	r4, {r1, r2}
 801d1d2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801d1d4:	4798      	blx	r3
 801d1d6:	b004      	add	sp, #16
 801d1d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d1dc:	4a21      	ldr	r2, [pc, #132]	; (801d264 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801d1de:	e7c6      	b.n	801d16e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801d1e0:	4b1f      	ldr	r3, [pc, #124]	; (801d260 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801d1e2:	e7cb      	b.n	801d17c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801d1e4:	6838      	ldr	r0, [r7, #0]
 801d1e6:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801d1ea:	6803      	ldr	r3, [r0, #0]
 801d1ec:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801d1f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d1f2:	4798      	blx	r3
 801d1f4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801d1f8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d1fc:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801d200:	fb16 3602 	smlabb	r6, r6, r2, r3
 801d204:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801d208:	6838      	ldr	r0, [r7, #0]
 801d20a:	6803      	ldr	r3, [r0, #0]
 801d20c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d20e:	4798      	blx	r3
 801d210:	4a13      	ldr	r2, [pc, #76]	; (801d260 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801d212:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801d216:	8813      	ldrh	r3, [r2, #0]
 801d218:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801d21c:	fb03 1404 	mla	r4, r3, r4, r1
 801d220:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d224:	435d      	muls	r5, r3
 801d226:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801d22a:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801d22e:	4691      	mov	r9, r2
 801d230:	6838      	ldr	r0, [r7, #0]
 801d232:	42ac      	cmp	r4, r5
 801d234:	6803      	ldr	r3, [r0, #0]
 801d236:	d20e      	bcs.n	801d256 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801d238:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801d23c:	4632      	mov	r2, r6
 801d23e:	4643      	mov	r3, r8
 801d240:	4621      	mov	r1, r4
 801d242:	47d0      	blx	sl
 801d244:	f8b9 3000 	ldrh.w	r3, [r9]
 801d248:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d24c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801d250:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801d254:	e7ec      	b.n	801d230 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801d256:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d258:	4798      	blx	r3
 801d25a:	e7bc      	b.n	801d1d6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801d25c:	2000e1b8 	.word	0x2000e1b8
 801d260:	2000e1ba 	.word	0x2000e1ba
 801d264:	2000e1bc 	.word	0x2000e1bc
 801d268:	2000e1c0 	.word	0x2000e1c0

0801d26c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801d26c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d270:	b08b      	sub	sp, #44	; 0x2c
 801d272:	460f      	mov	r7, r1
 801d274:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801d278:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801d27c:	4616      	mov	r6, r2
 801d27e:	f1bb 0f00 	cmp.w	fp, #0
 801d282:	d04a      	beq.n	801d31a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801d284:	6810      	ldr	r0, [r2, #0]
 801d286:	6851      	ldr	r1, [r2, #4]
 801d288:	ad06      	add	r5, sp, #24
 801d28a:	c503      	stmia	r5!, {r0, r1}
 801d28c:	6818      	ldr	r0, [r3, #0]
 801d28e:	6859      	ldr	r1, [r3, #4]
 801d290:	ad08      	add	r5, sp, #32
 801d292:	c503      	stmia	r5!, {r0, r1}
 801d294:	a806      	add	r0, sp, #24
 801d296:	f7f9 ff5d 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d29a:	4631      	mov	r1, r6
 801d29c:	a808      	add	r0, sp, #32
 801d29e:	f7f9 ff9d 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d2a2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801d2a6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801d2aa:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801d2ae:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801d2b2:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801d2b6:	fb16 2103 	smlabb	r1, r6, r3, r2
 801d2ba:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801d2be:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801d2c2:	4f5f      	ldr	r7, [pc, #380]	; (801d440 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801d2c4:	440a      	add	r2, r1
 801d2c6:	f8ad 2020 	strh.w	r2, [sp, #32]
 801d2ca:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801d2ce:	6838      	ldr	r0, [r7, #0]
 801d2d0:	4413      	add	r3, r2
 801d2d2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801d2d6:	6803      	ldr	r3, [r0, #0]
 801d2d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d2da:	4798      	blx	r3
 801d2dc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801d2e0:	46b9      	mov	r9, r7
 801d2e2:	d11d      	bne.n	801d320 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801d2e4:	b9fc      	cbnz	r4, 801d326 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801d2e6:	f010 0f01 	tst.w	r0, #1
 801d2ea:	d01c      	beq.n	801d326 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801d2ec:	f8d9 0000 	ldr.w	r0, [r9]
 801d2f0:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801d2f4:	6801      	ldr	r1, [r0, #0]
 801d2f6:	f8cd b00c 	str.w	fp, [sp, #12]
 801d2fa:	2700      	movs	r7, #0
 801d2fc:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801d300:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801d304:	9402      	str	r4, [sp, #8]
 801d306:	b2ad      	uxth	r5, r5
 801d308:	fa1f f488 	uxth.w	r4, r8
 801d30c:	9501      	str	r5, [sp, #4]
 801d30e:	9400      	str	r4, [sp, #0]
 801d310:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801d312:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801d316:	4631      	mov	r1, r6
 801d318:	47a0      	blx	r4
 801d31a:	b00b      	add	sp, #44	; 0x2c
 801d31c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d320:	f010 0f04 	tst.w	r0, #4
 801d324:	e7e1      	b.n	801d2ea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801d326:	f8d9 0000 	ldr.w	r0, [r9]
 801d32a:	6803      	ldr	r3, [r0, #0]
 801d32c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d32e:	4798      	blx	r3
 801d330:	4b44      	ldr	r3, [pc, #272]	; (801d444 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801d332:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801d336:	881a      	ldrh	r2, [r3, #0]
 801d338:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801d33c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801d340:	fb02 1404 	mla	r4, r2, r4, r1
 801d344:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d348:	469a      	mov	sl, r3
 801d34a:	fb05 f502 	mul.w	r5, r5, r2
 801d34e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801d352:	d059      	beq.n	801d408 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801d354:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801d358:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801d35c:	fa1f f28b 	uxth.w	r2, fp
 801d360:	fa1f f989 	uxth.w	r9, r9
 801d364:	469e      	mov	lr, r3
 801d366:	42ac      	cmp	r4, r5
 801d368:	d264      	bcs.n	801d434 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801d36a:	eb04 0a07 	add.w	sl, r4, r7
 801d36e:	4554      	cmp	r4, sl
 801d370:	d23d      	bcs.n	801d3ee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801d372:	8821      	ldrh	r1, [r4, #0]
 801d374:	f836 3b02 	ldrh.w	r3, [r6], #2
 801d378:	1208      	asrs	r0, r1, #8
 801d37a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d37e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d382:	fb10 f009 	smulbb	r0, r0, r9
 801d386:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801d38a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d38e:	00c9      	lsls	r1, r1, #3
 801d390:	fb0c 0c02 	mla	ip, ip, r2, r0
 801d394:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801d398:	10d8      	asrs	r0, r3, #3
 801d39a:	b2c9      	uxtb	r1, r1
 801d39c:	00db      	lsls	r3, r3, #3
 801d39e:	fa1f fc8c 	uxth.w	ip, ip
 801d3a2:	fb1b fb09 	smulbb	fp, fp, r9
 801d3a6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801d3aa:	b2db      	uxtb	r3, r3
 801d3ac:	fb11 f109 	smulbb	r1, r1, r9
 801d3b0:	fb00 b002 	mla	r0, r0, r2, fp
 801d3b4:	fb03 1302 	mla	r3, r3, r2, r1
 801d3b8:	f10c 0b01 	add.w	fp, ip, #1
 801d3bc:	b29b      	uxth	r3, r3
 801d3be:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801d3c2:	b280      	uxth	r0, r0
 801d3c4:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801d3c8:	f103 0c01 	add.w	ip, r3, #1
 801d3cc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d3d0:	1c43      	adds	r3, r0, #1
 801d3d2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d3d6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d3da:	0940      	lsrs	r0, r0, #5
 801d3dc:	ea4c 0c0b 	orr.w	ip, ip, fp
 801d3e0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d3e4:	ea4c 0c00 	orr.w	ip, ip, r0
 801d3e8:	f824 cb02 	strh.w	ip, [r4], #2
 801d3ec:	e7bf      	b.n	801d36e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801d3ee:	f8be 3000 	ldrh.w	r3, [lr]
 801d3f2:	eba3 0308 	sub.w	r3, r3, r8
 801d3f6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d3fa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801d3fe:	eba3 0308 	sub.w	r3, r3, r8
 801d402:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801d406:	e7ae      	b.n	801d366 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801d408:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801d40c:	f8d9 0000 	ldr.w	r0, [r9]
 801d410:	42ac      	cmp	r4, r5
 801d412:	6803      	ldr	r3, [r0, #0]
 801d414:	d20e      	bcs.n	801d434 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801d416:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801d41a:	4632      	mov	r2, r6
 801d41c:	463b      	mov	r3, r7
 801d41e:	4621      	mov	r1, r4
 801d420:	47c0      	blx	r8
 801d422:	f8ba 3000 	ldrh.w	r3, [sl]
 801d426:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d42a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801d42e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801d432:	e7eb      	b.n	801d40c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801d434:	4b02      	ldr	r3, [pc, #8]	; (801d440 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801d436:	6818      	ldr	r0, [r3, #0]
 801d438:	6803      	ldr	r3, [r0, #0]
 801d43a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d43c:	4798      	blx	r3
 801d43e:	e76c      	b.n	801d31a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801d440:	2000e1c0 	.word	0x2000e1c0
 801d444:	2000e1ba 	.word	0x2000e1ba

0801d448 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801d448:	b510      	push	{r4, lr}
 801d44a:	2104      	movs	r1, #4
 801d44c:	4604      	mov	r4, r0
 801d44e:	f00b f940 	bl	80286d2 <_ZdlPvj>
 801d452:	4620      	mov	r0, r4
 801d454:	bd10      	pop	{r4, pc}

0801d456 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801d456:	b510      	push	{r4, lr}
 801d458:	2104      	movs	r1, #4
 801d45a:	4604      	mov	r4, r0
 801d45c:	f00b f939 	bl	80286d2 <_ZdlPvj>
 801d460:	4620      	mov	r0, r4
 801d462:	bd10      	pop	{r4, pc}

0801d464 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801d464:	b510      	push	{r4, lr}
 801d466:	f640 0144 	movw	r1, #2116	; 0x844
 801d46a:	4604      	mov	r4, r0
 801d46c:	f00b f931 	bl	80286d2 <_ZdlPvj>
 801d470:	4620      	mov	r0, r4
 801d472:	bd10      	pop	{r4, pc}

0801d474 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d474:	b510      	push	{r4, lr}
 801d476:	2104      	movs	r1, #4
 801d478:	4604      	mov	r4, r0
 801d47a:	f00b f92a 	bl	80286d2 <_ZdlPvj>
 801d47e:	4620      	mov	r0, r4
 801d480:	bd10      	pop	{r4, pc}

0801d482 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801d482:	b510      	push	{r4, lr}
 801d484:	2104      	movs	r1, #4
 801d486:	4604      	mov	r4, r0
 801d488:	f00b f923 	bl	80286d2 <_ZdlPvj>
 801d48c:	4620      	mov	r0, r4
 801d48e:	bd10      	pop	{r4, pc}

0801d490 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d490:	b510      	push	{r4, lr}
 801d492:	2104      	movs	r1, #4
 801d494:	4604      	mov	r4, r0
 801d496:	f00b f91c 	bl	80286d2 <_ZdlPvj>
 801d49a:	4620      	mov	r0, r4
 801d49c:	bd10      	pop	{r4, pc}

0801d49e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801d49e:	b510      	push	{r4, lr}
 801d4a0:	2104      	movs	r1, #4
 801d4a2:	4604      	mov	r4, r0
 801d4a4:	f00b f915 	bl	80286d2 <_ZdlPvj>
 801d4a8:	4620      	mov	r0, r4
 801d4aa:	bd10      	pop	{r4, pc}

0801d4ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d4ac:	b510      	push	{r4, lr}
 801d4ae:	2104      	movs	r1, #4
 801d4b0:	4604      	mov	r4, r0
 801d4b2:	f00b f90e 	bl	80286d2 <_ZdlPvj>
 801d4b6:	4620      	mov	r0, r4
 801d4b8:	bd10      	pop	{r4, pc}

0801d4ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801d4ba:	b510      	push	{r4, lr}
 801d4bc:	2104      	movs	r1, #4
 801d4be:	4604      	mov	r4, r0
 801d4c0:	f00b f907 	bl	80286d2 <_ZdlPvj>
 801d4c4:	4620      	mov	r0, r4
 801d4c6:	bd10      	pop	{r4, pc}

0801d4c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d4c8:	b510      	push	{r4, lr}
 801d4ca:	2104      	movs	r1, #4
 801d4cc:	4604      	mov	r4, r0
 801d4ce:	f00b f900 	bl	80286d2 <_ZdlPvj>
 801d4d2:	4620      	mov	r0, r4
 801d4d4:	bd10      	pop	{r4, pc}

0801d4d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801d4d6:	b510      	push	{r4, lr}
 801d4d8:	2104      	movs	r1, #4
 801d4da:	4604      	mov	r4, r0
 801d4dc:	f00b f8f9 	bl	80286d2 <_ZdlPvj>
 801d4e0:	4620      	mov	r0, r4
 801d4e2:	bd10      	pop	{r4, pc}

0801d4e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d4e4:	b510      	push	{r4, lr}
 801d4e6:	2104      	movs	r1, #4
 801d4e8:	4604      	mov	r4, r0
 801d4ea:	f00b f8f2 	bl	80286d2 <_ZdlPvj>
 801d4ee:	4620      	mov	r0, r4
 801d4f0:	bd10      	pop	{r4, pc}

0801d4f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d4f2:	b510      	push	{r4, lr}
 801d4f4:	2104      	movs	r1, #4
 801d4f6:	4604      	mov	r4, r0
 801d4f8:	f00b f8eb 	bl	80286d2 <_ZdlPvj>
 801d4fc:	4620      	mov	r0, r4
 801d4fe:	bd10      	pop	{r4, pc}

0801d500 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d500:	b510      	push	{r4, lr}
 801d502:	2104      	movs	r1, #4
 801d504:	4604      	mov	r4, r0
 801d506:	f00b f8e4 	bl	80286d2 <_ZdlPvj>
 801d50a:	4620      	mov	r0, r4
 801d50c:	bd10      	pop	{r4, pc}

0801d50e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d50e:	b510      	push	{r4, lr}
 801d510:	2104      	movs	r1, #4
 801d512:	4604      	mov	r4, r0
 801d514:	f00b f8dd 	bl	80286d2 <_ZdlPvj>
 801d518:	4620      	mov	r0, r4
 801d51a:	bd10      	pop	{r4, pc}

0801d51c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d51c:	b510      	push	{r4, lr}
 801d51e:	2104      	movs	r1, #4
 801d520:	4604      	mov	r4, r0
 801d522:	f00b f8d6 	bl	80286d2 <_ZdlPvj>
 801d526:	4620      	mov	r0, r4
 801d528:	bd10      	pop	{r4, pc}

0801d52a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801d52a:	b510      	push	{r4, lr}
 801d52c:	2104      	movs	r1, #4
 801d52e:	4604      	mov	r4, r0
 801d530:	f00b f8cf 	bl	80286d2 <_ZdlPvj>
 801d534:	4620      	mov	r0, r4
 801d536:	bd10      	pop	{r4, pc}

0801d538 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d538:	b510      	push	{r4, lr}
 801d53a:	2104      	movs	r1, #4
 801d53c:	4604      	mov	r4, r0
 801d53e:	f00b f8c8 	bl	80286d2 <_ZdlPvj>
 801d542:	4620      	mov	r0, r4
 801d544:	bd10      	pop	{r4, pc}

0801d546 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d546:	b510      	push	{r4, lr}
 801d548:	2104      	movs	r1, #4
 801d54a:	4604      	mov	r4, r0
 801d54c:	f00b f8c1 	bl	80286d2 <_ZdlPvj>
 801d550:	4620      	mov	r0, r4
 801d552:	bd10      	pop	{r4, pc}

0801d554 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d554:	b510      	push	{r4, lr}
 801d556:	2104      	movs	r1, #4
 801d558:	4604      	mov	r4, r0
 801d55a:	f00b f8ba 	bl	80286d2 <_ZdlPvj>
 801d55e:	4620      	mov	r0, r4
 801d560:	bd10      	pop	{r4, pc}

0801d562 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801d562:	b510      	push	{r4, lr}
 801d564:	2104      	movs	r1, #4
 801d566:	4604      	mov	r4, r0
 801d568:	f00b f8b3 	bl	80286d2 <_ZdlPvj>
 801d56c:	4620      	mov	r0, r4
 801d56e:	bd10      	pop	{r4, pc}

0801d570 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d570:	b510      	push	{r4, lr}
 801d572:	2104      	movs	r1, #4
 801d574:	4604      	mov	r4, r0
 801d576:	f00b f8ac 	bl	80286d2 <_ZdlPvj>
 801d57a:	4620      	mov	r0, r4
 801d57c:	bd10      	pop	{r4, pc}

0801d57e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d57e:	b510      	push	{r4, lr}
 801d580:	2104      	movs	r1, #4
 801d582:	4604      	mov	r4, r0
 801d584:	f00b f8a5 	bl	80286d2 <_ZdlPvj>
 801d588:	4620      	mov	r0, r4
 801d58a:	bd10      	pop	{r4, pc}

0801d58c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d58c:	b510      	push	{r4, lr}
 801d58e:	2104      	movs	r1, #4
 801d590:	4604      	mov	r4, r0
 801d592:	f00b f89e 	bl	80286d2 <_ZdlPvj>
 801d596:	4620      	mov	r0, r4
 801d598:	bd10      	pop	{r4, pc}

0801d59a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d59a:	b510      	push	{r4, lr}
 801d59c:	2104      	movs	r1, #4
 801d59e:	4604      	mov	r4, r0
 801d5a0:	f00b f897 	bl	80286d2 <_ZdlPvj>
 801d5a4:	4620      	mov	r0, r4
 801d5a6:	bd10      	pop	{r4, pc}

0801d5a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d5a8:	b510      	push	{r4, lr}
 801d5aa:	2104      	movs	r1, #4
 801d5ac:	4604      	mov	r4, r0
 801d5ae:	f00b f890 	bl	80286d2 <_ZdlPvj>
 801d5b2:	4620      	mov	r0, r4
 801d5b4:	bd10      	pop	{r4, pc}

0801d5b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d5b6:	b510      	push	{r4, lr}
 801d5b8:	2104      	movs	r1, #4
 801d5ba:	4604      	mov	r4, r0
 801d5bc:	f00b f889 	bl	80286d2 <_ZdlPvj>
 801d5c0:	4620      	mov	r0, r4
 801d5c2:	bd10      	pop	{r4, pc}

0801d5c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801d5c4:	b510      	push	{r4, lr}
 801d5c6:	2104      	movs	r1, #4
 801d5c8:	4604      	mov	r4, r0
 801d5ca:	f00b f882 	bl	80286d2 <_ZdlPvj>
 801d5ce:	4620      	mov	r0, r4
 801d5d0:	bd10      	pop	{r4, pc}

0801d5d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801d5d2:	b510      	push	{r4, lr}
 801d5d4:	2104      	movs	r1, #4
 801d5d6:	4604      	mov	r4, r0
 801d5d8:	f00b f87b 	bl	80286d2 <_ZdlPvj>
 801d5dc:	4620      	mov	r0, r4
 801d5de:	bd10      	pop	{r4, pc}

0801d5e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801d5e0:	b510      	push	{r4, lr}
 801d5e2:	2104      	movs	r1, #4
 801d5e4:	4604      	mov	r4, r0
 801d5e6:	f00b f874 	bl	80286d2 <_ZdlPvj>
 801d5ea:	4620      	mov	r0, r4
 801d5ec:	bd10      	pop	{r4, pc}

0801d5ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801d5ee:	b510      	push	{r4, lr}
 801d5f0:	2104      	movs	r1, #4
 801d5f2:	4604      	mov	r4, r0
 801d5f4:	f00b f86d 	bl	80286d2 <_ZdlPvj>
 801d5f8:	4620      	mov	r0, r4
 801d5fa:	bd10      	pop	{r4, pc}

0801d5fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801d5fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d600:	b08f      	sub	sp, #60	; 0x3c
 801d602:	461c      	mov	r4, r3
 801d604:	9205      	str	r2, [sp, #20]
 801d606:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d60a:	9100      	str	r1, [sp, #0]
 801d60c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d60e:	9201      	str	r2, [sp, #4]
 801d610:	2a00      	cmp	r2, #0
 801d612:	f000 8115 	beq.w	801d840 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801d616:	6820      	ldr	r0, [r4, #0]
 801d618:	6861      	ldr	r1, [r4, #4]
 801d61a:	aa0a      	add	r2, sp, #40	; 0x28
 801d61c:	c203      	stmia	r2!, {r0, r1}
 801d61e:	6818      	ldr	r0, [r3, #0]
 801d620:	6859      	ldr	r1, [r3, #4]
 801d622:	aa0c      	add	r2, sp, #48	; 0x30
 801d624:	c203      	stmia	r2!, {r0, r1}
 801d626:	a80a      	add	r0, sp, #40	; 0x28
 801d628:	f7f9 fd94 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d62c:	4621      	mov	r1, r4
 801d62e:	a80c      	add	r0, sp, #48	; 0x30
 801d630:	f7f9 fdd4 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d634:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d638:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801d63c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801d640:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801d644:	bfde      	ittt	le
 801d646:	b2b3      	uxthle	r3, r6
 801d648:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801d64c:	fb92 f3f3 	sdivle	r3, r2, r3
 801d650:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d654:	bfc8      	it	gt
 801d656:	2301      	movgt	r3, #1
 801d658:	fb92 f1f3 	sdiv	r1, r2, r3
 801d65c:	fa1f fc81 	uxth.w	ip, r1
 801d660:	fb0c 2413 	mls	r4, ip, r3, r2
 801d664:	fb14 f406 	smulbb	r4, r4, r6
 801d668:	441d      	add	r5, r3
 801d66a:	4404      	add	r4, r0
 801d66c:	4661      	mov	r1, ip
 801d66e:	3d01      	subs	r5, #1
 801d670:	b2a4      	uxth	r4, r4
 801d672:	fb95 f5f3 	sdiv	r5, r5, r3
 801d676:	b131      	cbz	r1, 801d686 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801d678:	9b05      	ldr	r3, [sp, #20]
 801d67a:	9900      	ldr	r1, [sp, #0]
 801d67c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801d680:	ba1b      	rev	r3, r3
 801d682:	4419      	add	r1, r3
 801d684:	9100      	str	r1, [sp, #0]
 801d686:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d68a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801d68e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801d692:	4418      	add	r0, r3
 801d694:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801d698:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801d69c:	441a      	add	r2, r3
 801d69e:	4b6a      	ldr	r3, [pc, #424]	; (801d848 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801d6a0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801d6a4:	6818      	ldr	r0, [r3, #0]
 801d6a6:	6803      	ldr	r3, [r0, #0]
 801d6a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d6aa:	4798      	blx	r3
 801d6ac:	4967      	ldr	r1, [pc, #412]	; (801d84c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801d6ae:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d6b2:	880b      	ldrh	r3, [r1, #0]
 801d6b4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801d6b8:	9109      	str	r1, [sp, #36]	; 0x24
 801d6ba:	fb03 c202 	mla	r2, r3, r2, ip
 801d6be:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d6c2:	4373      	muls	r3, r6
 801d6c4:	b2ad      	uxth	r5, r5
 801d6c6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d6ca:	00ad      	lsls	r5, r5, #2
 801d6cc:	9306      	str	r3, [sp, #24]
 801d6ce:	1d2b      	adds	r3, r5, #4
 801d6d0:	9307      	str	r3, [sp, #28]
 801d6d2:	9b01      	ldr	r3, [sp, #4]
 801d6d4:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801d6d8:	9103      	str	r1, [sp, #12]
 801d6da:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801d6de:	2c00      	cmp	r4, #0
 801d6e0:	bf0c      	ite	eq
 801d6e2:	46c6      	moveq	lr, r8
 801d6e4:	f04f 0e00 	movne.w	lr, #0
 801d6e8:	2300      	movs	r3, #0
 801d6ea:	b292      	uxth	r2, r2
 801d6ec:	fa1f fe8e 	uxth.w	lr, lr
 801d6f0:	9302      	str	r3, [sp, #8]
 801d6f2:	9204      	str	r2, [sp, #16]
 801d6f4:	9a06      	ldr	r2, [sp, #24]
 801d6f6:	4282      	cmp	r2, r0
 801d6f8:	f240 809d 	bls.w	801d836 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801d6fc:	b963      	cbnz	r3, 801d718 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801d6fe:	9b00      	ldr	r3, [sp, #0]
 801d700:	781a      	ldrb	r2, [r3, #0]
 801d702:	0993      	lsrs	r3, r2, #6
 801d704:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801d708:	9202      	str	r2, [sp, #8]
 801d70a:	1e5a      	subs	r2, r3, #1
 801d70c:	2a02      	cmp	r2, #2
 801d70e:	d815      	bhi.n	801d73c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801d710:	9a00      	ldr	r2, [sp, #0]
 801d712:	3201      	adds	r2, #1
 801d714:	9200      	str	r2, [sp, #0]
 801d716:	b29b      	uxth	r3, r3
 801d718:	b1b4      	cbz	r4, 801d748 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801d71a:	429c      	cmp	r4, r3
 801d71c:	bf95      	itete	ls
 801d71e:	1b1c      	subls	r4, r3, r4
 801d720:	1ae4      	subhi	r4, r4, r3
 801d722:	fa1f fa84 	uxthls.w	sl, r4
 801d726:	b2a4      	uxthhi	r4, r4
 801d728:	bf87      	ittee	hi
 801d72a:	4671      	movhi	r1, lr
 801d72c:	f04f 0a00 	movhi.w	sl, #0
 801d730:	fa1f f188 	uxthls.w	r1, r8
 801d734:	2400      	movls	r4, #0
 801d736:	4653      	mov	r3, sl
 801d738:	468e      	mov	lr, r1
 801d73a:	e7db      	b.n	801d6f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801d73c:	9a00      	ldr	r2, [sp, #0]
 801d73e:	9b00      	ldr	r3, [sp, #0]
 801d740:	3202      	adds	r2, #2
 801d742:	785b      	ldrb	r3, [r3, #1]
 801d744:	9200      	str	r2, [sp, #0]
 801d746:	e7e7      	b.n	801d718 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801d748:	2202      	movs	r2, #2
 801d74a:	4615      	mov	r5, r2
 801d74c:	9907      	ldr	r1, [sp, #28]
 801d74e:	9a02      	ldr	r2, [sp, #8]
 801d750:	fb15 1202 	smlabb	r2, r5, r2, r1
 801d754:	9905      	ldr	r1, [sp, #20]
 801d756:	4573      	cmp	r3, lr
 801d758:	f831 c002 	ldrh.w	ip, [r1, r2]
 801d75c:	9a01      	ldr	r2, [sp, #4]
 801d75e:	bf2b      	itete	cs
 801d760:	eba3 0a0e 	subcs.w	sl, r3, lr
 801d764:	ebae 0103 	subcc.w	r1, lr, r3
 801d768:	46f1      	movcs	r9, lr
 801d76a:	4699      	movcc	r9, r3
 801d76c:	bf27      	ittee	cs
 801d76e:	fa1f fa8a 	uxthcs.w	sl, sl
 801d772:	4621      	movcs	r1, r4
 801d774:	b289      	uxthcc	r1, r1
 801d776:	46a2      	movcc	sl, r4
 801d778:	2aff      	cmp	r2, #255	; 0xff
 801d77a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d77e:	d105      	bne.n	801d78c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801d780:	4481      	add	r9, r0
 801d782:	4581      	cmp	r9, r0
 801d784:	d045      	beq.n	801d812 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801d786:	f820 cb02 	strh.w	ip, [r0], #2
 801d78a:	e7fa      	b.n	801d782 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801d78c:	9d03      	ldr	r5, [sp, #12]
 801d78e:	ea4f 222c 	mov.w	r2, ip, asr #8
 801d792:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801d796:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d79a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d79e:	436a      	muls	r2, r5
 801d7a0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801d7a4:	fa5f fc8c 	uxtb.w	ip, ip
 801d7a8:	9208      	str	r2, [sp, #32]
 801d7aa:	fb0b fb05 	mul.w	fp, fp, r5
 801d7ae:	fb0c fc05 	mul.w	ip, ip, r5
 801d7b2:	4481      	add	r9, r0
 801d7b4:	4581      	cmp	r9, r0
 801d7b6:	d02c      	beq.n	801d812 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801d7b8:	8802      	ldrh	r2, [r0, #0]
 801d7ba:	9d04      	ldr	r5, [sp, #16]
 801d7bc:	9f04      	ldr	r7, [sp, #16]
 801d7be:	1216      	asrs	r6, r2, #8
 801d7c0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d7c4:	fb16 f605 	smulbb	r6, r6, r5
 801d7c8:	9d08      	ldr	r5, [sp, #32]
 801d7ca:	442e      	add	r6, r5
 801d7cc:	10d5      	asrs	r5, r2, #3
 801d7ce:	00d2      	lsls	r2, r2, #3
 801d7d0:	b2d2      	uxtb	r2, r2
 801d7d2:	fb12 f207 	smulbb	r2, r2, r7
 801d7d6:	b2b6      	uxth	r6, r6
 801d7d8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d7dc:	4462      	add	r2, ip
 801d7de:	fb15 f507 	smulbb	r5, r5, r7
 801d7e2:	b292      	uxth	r2, r2
 801d7e4:	1c77      	adds	r7, r6, #1
 801d7e6:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801d7ea:	1c57      	adds	r7, r2, #1
 801d7ec:	445d      	add	r5, fp
 801d7ee:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801d7f2:	b2ad      	uxth	r5, r5
 801d7f4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d7f8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d7fc:	4316      	orrs	r6, r2
 801d7fe:	1c6a      	adds	r2, r5, #1
 801d800:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801d804:	096d      	lsrs	r5, r5, #5
 801d806:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d80a:	432e      	orrs	r6, r5
 801d80c:	f820 6b02 	strh.w	r6, [r0], #2
 801d810:	e7d0      	b.n	801d7b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801d812:	4573      	cmp	r3, lr
 801d814:	d38f      	bcc.n	801d736 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801d816:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801d81a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d81c:	fa1f f188 	uxth.w	r1, r8
 801d820:	1a64      	subs	r4, r4, r1
 801d822:	881b      	ldrh	r3, [r3, #0]
 801d824:	b2a4      	uxth	r4, r4
 801d826:	2c00      	cmp	r4, #0
 801d828:	eba3 0308 	sub.w	r3, r3, r8
 801d82c:	bf18      	it	ne
 801d82e:	2100      	movne	r1, #0
 801d830:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d834:	e77f      	b.n	801d736 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801d836:	4b04      	ldr	r3, [pc, #16]	; (801d848 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801d838:	6818      	ldr	r0, [r3, #0]
 801d83a:	6803      	ldr	r3, [r0, #0]
 801d83c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d83e:	4798      	blx	r3
 801d840:	b00f      	add	sp, #60	; 0x3c
 801d842:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d846:	bf00      	nop
 801d848:	2000e1c0 	.word	0x2000e1c0
 801d84c:	2000e1ba 	.word	0x2000e1ba

0801d850 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801d850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d854:	b09f      	sub	sp, #124	; 0x7c
 801d856:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801d85a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801d85e:	9209      	str	r2, [sp, #36]	; 0x24
 801d860:	461d      	mov	r5, r3
 801d862:	4604      	mov	r4, r0
 801d864:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d866:	2a00      	cmp	r2, #0
 801d868:	f000 81eb 	beq.w	801dc42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801d86c:	6828      	ldr	r0, [r5, #0]
 801d86e:	6869      	ldr	r1, [r5, #4]
 801d870:	aa1a      	add	r2, sp, #104	; 0x68
 801d872:	c203      	stmia	r2!, {r0, r1}
 801d874:	6818      	ldr	r0, [r3, #0]
 801d876:	6859      	ldr	r1, [r3, #4]
 801d878:	aa1c      	add	r2, sp, #112	; 0x70
 801d87a:	c203      	stmia	r2!, {r0, r1}
 801d87c:	a81a      	add	r0, sp, #104	; 0x68
 801d87e:	f7f9 fc69 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d882:	4629      	mov	r1, r5
 801d884:	a81c      	add	r0, sp, #112	; 0x70
 801d886:	f7f9 fca9 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d88a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d88e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801d892:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801d896:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d89a:	bfd7      	itett	le
 801d89c:	b29a      	uxthle	r2, r3
 801d89e:	2201      	movgt	r2, #1
 801d8a0:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d8a4:	fb91 f2f2 	sdivle	r2, r1, r2
 801d8a8:	9202      	str	r2, [sp, #8]
 801d8aa:	9802      	ldr	r0, [sp, #8]
 801d8ac:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801d8b0:	fb92 f0f0 	sdiv	r0, r2, r0
 801d8b4:	b280      	uxth	r0, r0
 801d8b6:	9010      	str	r0, [sp, #64]	; 0x40
 801d8b8:	9902      	ldr	r1, [sp, #8]
 801d8ba:	9802      	ldr	r0, [sp, #8]
 801d8bc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d8be:	4488      	add	r8, r1
 801d8c0:	fb05 2510 	mls	r5, r5, r0, r2
 801d8c4:	fb15 f503 	smulbb	r5, r5, r3
 801d8c8:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 801d8cc:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d8d0:	fb98 f8f1 	sdiv	r8, r8, r1
 801d8d4:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801d8d8:	440d      	add	r5, r1
 801d8da:	4419      	add	r1, r3
 801d8dc:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801d8e0:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801d8e4:	441a      	add	r2, r3
 801d8e6:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801d8ea:	9304      	str	r3, [sp, #16]
 801d8ec:	4b95      	ldr	r3, [pc, #596]	; (801db44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801d8ee:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801d8f2:	6818      	ldr	r0, [r3, #0]
 801d8f4:	6803      	ldr	r3, [r0, #0]
 801d8f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d8f8:	4798      	blx	r3
 801d8fa:	4b93      	ldr	r3, [pc, #588]	; (801db48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801d8fc:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801d900:	881a      	ldrh	r2, [r3, #0]
 801d902:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801d906:	9318      	str	r3, [sp, #96]	; 0x60
 801d908:	fb02 7101 	mla	r1, r2, r1, r7
 801d90c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d910:	4356      	muls	r6, r2
 801d912:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801d916:	f108 0801 	add.w	r8, r8, #1
 801d91a:	920a      	str	r2, [sp, #40]	; 0x28
 801d91c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d91e:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801d922:	930f      	str	r3, [sp, #60]	; 0x3c
 801d924:	fa1f f888 	uxth.w	r8, r8
 801d928:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801d92c:	f108 0204 	add.w	r2, r8, #4
 801d930:	9211      	str	r2, [sp, #68]	; 0x44
 801d932:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d934:	4b85      	ldr	r3, [pc, #532]	; (801db4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d936:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801d93a:	b2ad      	uxth	r5, r5
 801d93c:	9215      	str	r2, [sp, #84]	; 0x54
 801d93e:	2d00      	cmp	r5, #0
 801d940:	9a04      	ldr	r2, [sp, #16]
 801d942:	f04f 0100 	mov.w	r1, #0
 801d946:	bf18      	it	ne
 801d948:	2200      	movne	r2, #0
 801d94a:	1b1b      	subs	r3, r3, r4
 801d94c:	b292      	uxth	r2, r2
 801d94e:	910d      	str	r1, [sp, #52]	; 0x34
 801d950:	9319      	str	r3, [sp, #100]	; 0x64
 801d952:	9910      	ldr	r1, [sp, #64]	; 0x40
 801d954:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d956:	fa11 f383 	uxtah	r3, r1, r3
 801d95a:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d95c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801d960:	3304      	adds	r3, #4
 801d962:	9306      	str	r3, [sp, #24]
 801d964:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d966:	4283      	cmp	r3, r0
 801d968:	f240 8166 	bls.w	801dc38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801d96c:	9902      	ldr	r1, [sp, #8]
 801d96e:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801d972:	fbb5 f3f3 	udiv	r3, r5, r3
 801d976:	1acb      	subs	r3, r1, r3
 801d978:	b29b      	uxth	r3, r3
 801d97a:	9316      	str	r3, [sp, #88]	; 0x58
 801d97c:	9b06      	ldr	r3, [sp, #24]
 801d97e:	9e06      	ldr	r6, [sp, #24]
 801d980:	7859      	ldrb	r1, [r3, #1]
 801d982:	789b      	ldrb	r3, [r3, #2]
 801d984:	7836      	ldrb	r6, [r6, #0]
 801d986:	9612      	str	r6, [sp, #72]	; 0x48
 801d988:	021b      	lsls	r3, r3, #8
 801d98a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801d98e:	9906      	ldr	r1, [sp, #24]
 801d990:	78c9      	ldrb	r1, [r1, #3]
 801d992:	430b      	orrs	r3, r1
 801d994:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801d996:	3601      	adds	r6, #1
 801d998:	4419      	add	r1, r3
 801d99a:	9605      	str	r6, [sp, #20]
 801d99c:	1c4e      	adds	r6, r1, #1
 801d99e:	9603      	str	r6, [sp, #12]
 801d9a0:	7849      	ldrb	r1, [r1, #1]
 801d9a2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d9a4:	0209      	lsls	r1, r1, #8
 801d9a6:	5cf3      	ldrb	r3, [r6, r3]
 801d9a8:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801d9ac:	4319      	orrs	r1, r3
 801d9ae:	b28b      	uxth	r3, r1
 801d9b0:	930c      	str	r3, [sp, #48]	; 0x30
 801d9b2:	2300      	movs	r3, #0
 801d9b4:	f04f 0a01 	mov.w	sl, #1
 801d9b8:	9307      	str	r3, [sp, #28]
 801d9ba:	469c      	mov	ip, r3
 801d9bc:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801d9c0:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801d9c4:	46d3      	mov	fp, sl
 801d9c6:	4657      	mov	r7, sl
 801d9c8:	930e      	str	r3, [sp, #56]	; 0x38
 801d9ca:	2d00      	cmp	r5, #0
 801d9cc:	d07e      	beq.n	801dacc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801d9ce:	42af      	cmp	r7, r5
 801d9d0:	d26e      	bcs.n	801dab0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801d9d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d9d4:	9201      	str	r2, [sp, #4]
 801d9d6:	1bed      	subs	r5, r5, r7
 801d9d8:	4283      	cmp	r3, r0
 801d9da:	b2ad      	uxth	r5, r5
 801d9dc:	d802      	bhi.n	801d9e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801d9de:	e073      	b.n	801dac8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801d9e0:	2b00      	cmp	r3, #0
 801d9e2:	d15f      	bne.n	801daa4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801d9e4:	9b03      	ldr	r3, [sp, #12]
 801d9e6:	785b      	ldrb	r3, [r3, #1]
 801d9e8:	f1cb 0207 	rsb	r2, fp, #7
 801d9ec:	4093      	lsls	r3, r2
 801d9ee:	005b      	lsls	r3, r3, #1
 801d9f0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d9f4:	9b03      	ldr	r3, [sp, #12]
 801d9f6:	781b      	ldrb	r3, [r3, #0]
 801d9f8:	fa43 f30b 	asr.w	r3, r3, fp
 801d9fc:	b2db      	uxtb	r3, r3
 801d9fe:	4313      	orrs	r3, r2
 801da00:	f10b 0201 	add.w	r2, fp, #1
 801da04:	fa5f fb82 	uxtb.w	fp, r2
 801da08:	9a03      	ldr	r2, [sp, #12]
 801da0a:	f1bb 0f08 	cmp.w	fp, #8
 801da0e:	bf15      	itete	ne
 801da10:	3201      	addne	r2, #1
 801da12:	3202      	addeq	r2, #2
 801da14:	9203      	strne	r2, [sp, #12]
 801da16:	9203      	streq	r2, [sp, #12]
 801da18:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801da1a:	b29f      	uxth	r7, r3
 801da1c:	bf08      	it	eq
 801da1e:	f04f 0b00 	moveq.w	fp, #0
 801da22:	42ba      	cmp	r2, r7
 801da24:	d309      	bcc.n	801da3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801da26:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801da2a:	2301      	movs	r3, #1
 801da2c:	9a05      	ldr	r2, [sp, #20]
 801da2e:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801da32:	d30e      	bcc.n	801da52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801da34:	469a      	mov	sl, r3
 801da36:	2600      	movs	r6, #0
 801da38:	e035      	b.n	801daa6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801da3a:	9b05      	ldr	r3, [sp, #20]
 801da3c:	429f      	cmp	r7, r3
 801da3e:	d318      	bcc.n	801da72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801da40:	eb04 030a 	add.w	r3, r4, sl
 801da44:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801da48:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801da4c:	f10a 0301 	add.w	r3, sl, #1
 801da50:	b29b      	uxth	r3, r3
 801da52:	9a05      	ldr	r2, [sp, #20]
 801da54:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801da58:	990c      	ldr	r1, [sp, #48]	; 0x30
 801da5a:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801da5e:	7116      	strb	r6, [r2, #4]
 801da60:	f10a 0601 	add.w	r6, sl, #1
 801da64:	80d1      	strh	r1, [r2, #6]
 801da66:	7156      	strb	r6, [r2, #5]
 801da68:	9a05      	ldr	r2, [sp, #20]
 801da6a:	3201      	adds	r2, #1
 801da6c:	b292      	uxth	r2, r2
 801da6e:	9205      	str	r2, [sp, #20]
 801da70:	e7e0      	b.n	801da34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801da72:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801da76:	463a      	mov	r2, r7
 801da78:	795b      	ldrb	r3, [r3, #5]
 801da7a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801da7e:	4426      	add	r6, r4
 801da80:	9919      	ldr	r1, [sp, #100]	; 0x64
 801da82:	eb01 0c06 	add.w	ip, r1, r6
 801da86:	f1bc 0f00 	cmp.w	ip, #0
 801da8a:	dd07      	ble.n	801da9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801da8c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801da90:	f892 c004 	ldrb.w	ip, [r2, #4]
 801da94:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801da98:	88d2      	ldrh	r2, [r2, #6]
 801da9a:	e7f1      	b.n	801da80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801da9c:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801daa0:	b29b      	uxth	r3, r3
 801daa2:	e7c3      	b.n	801da2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801daa4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801daa6:	970c      	str	r7, [sp, #48]	; 0x30
 801daa8:	9a01      	ldr	r2, [sp, #4]
 801daaa:	46b4      	mov	ip, r6
 801daac:	461f      	mov	r7, r3
 801daae:	e78c      	b.n	801d9ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801dab0:	1b7b      	subs	r3, r7, r5
 801dab2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801dab6:	9201      	str	r2, [sp, #4]
 801dab8:	eb0c 0605 	add.w	r6, ip, r5
 801dabc:	b29b      	uxth	r3, r3
 801dabe:	b2b6      	uxth	r6, r6
 801dac0:	2500      	movs	r5, #0
 801dac2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801dac4:	4282      	cmp	r2, r0
 801dac6:	d88b      	bhi.n	801d9e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801dac8:	9a01      	ldr	r2, [sp, #4]
 801daca:	e74b      	b.n	801d964 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801dacc:	4297      	cmp	r7, r2
 801dace:	d332      	bcc.n	801db36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801dad0:	1abb      	subs	r3, r7, r2
 801dad2:	b29b      	uxth	r3, r3
 801dad4:	9208      	str	r2, [sp, #32]
 801dad6:	9501      	str	r5, [sp, #4]
 801dad8:	9909      	ldr	r1, [sp, #36]	; 0x24
 801dada:	29ff      	cmp	r1, #255	; 0xff
 801dadc:	9908      	ldr	r1, [sp, #32]
 801dade:	eb0c 0601 	add.w	r6, ip, r1
 801dae2:	d135      	bne.n	801db50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801dae4:	f1a0 0e02 	sub.w	lr, r0, #2
 801dae8:	b2b6      	uxth	r6, r6
 801daea:	45b4      	cmp	ip, r6
 801daec:	f040 808c 	bne.w	801dc08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801daf0:	9908      	ldr	r1, [sp, #32]
 801daf2:	4297      	cmp	r7, r2
 801daf4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801daf8:	d3e2      	bcc.n	801dac0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801dafa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801dafc:	9904      	ldr	r1, [sp, #16]
 801dafe:	8812      	ldrh	r2, [r2, #0]
 801db00:	1a52      	subs	r2, r2, r1
 801db02:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801db06:	9a07      	ldr	r2, [sp, #28]
 801db08:	9916      	ldr	r1, [sp, #88]	; 0x58
 801db0a:	3201      	adds	r2, #1
 801db0c:	428a      	cmp	r2, r1
 801db0e:	9207      	str	r2, [sp, #28]
 801db10:	f040 8087 	bne.w	801dc22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801db14:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801db18:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801db1c:	9b04      	ldr	r3, [sp, #16]
 801db1e:	1bed      	subs	r5, r5, r7
 801db20:	b2ad      	uxth	r5, r5
 801db22:	2d00      	cmp	r5, #0
 801db24:	bf08      	it	eq
 801db26:	461a      	moveq	r2, r3
 801db28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801db2a:	bf18      	it	ne
 801db2c:	2200      	movne	r2, #0
 801db2e:	3301      	adds	r3, #1
 801db30:	930d      	str	r3, [sp, #52]	; 0x34
 801db32:	b292      	uxth	r2, r2
 801db34:	e70d      	b.n	801d952 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801db36:	1bd1      	subs	r1, r2, r7
 801db38:	b28b      	uxth	r3, r1
 801db3a:	9301      	str	r3, [sp, #4]
 801db3c:	9708      	str	r7, [sp, #32]
 801db3e:	462b      	mov	r3, r5
 801db40:	e7ca      	b.n	801dad8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801db42:	bf00      	nop
 801db44:	2000e1c0 	.word	0x2000e1c0
 801db48:	2000e1ba 	.word	0x2000e1ba
 801db4c:	fffff7fb 	.word	0xfffff7fb
 801db50:	b2b6      	uxth	r6, r6
 801db52:	900b      	str	r0, [sp, #44]	; 0x2c
 801db54:	45b4      	cmp	ip, r6
 801db56:	d0cb      	beq.n	801daf0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801db58:	f10c 0101 	add.w	r1, ip, #1
 801db5c:	44a4      	add	ip, r4
 801db5e:	9117      	str	r1, [sp, #92]	; 0x5c
 801db60:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801db64:	9911      	ldr	r1, [sp, #68]	; 0x44
 801db66:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801db6a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801db6c:	f8b1 c000 	ldrh.w	ip, [r1]
 801db70:	990e      	ldr	r1, [sp, #56]	; 0x38
 801db72:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801db76:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801db7a:	fb1e fe01 	smulbb	lr, lr, r1
 801db7e:	ea4f 2825 	mov.w	r8, r5, asr #8
 801db82:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801db84:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801db88:	fb08 e801 	mla	r8, r8, r1, lr
 801db8c:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801db90:	990e      	ldr	r1, [sp, #56]	; 0x38
 801db92:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801db96:	fb19 f901 	smulbb	r9, r9, r1
 801db9a:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801db9e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801dba0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801dba4:	fb0e 9e01 	mla	lr, lr, r1, r9
 801dba8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801dbac:	990e      	ldr	r1, [sp, #56]	; 0x38
 801dbae:	fa5f fc8c 	uxtb.w	ip, ip
 801dbb2:	fb1c fc01 	smulbb	ip, ip, r1
 801dbb6:	00ed      	lsls	r5, r5, #3
 801dbb8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801dbba:	b2ed      	uxtb	r5, r5
 801dbbc:	fb05 c501 	mla	r5, r5, r1, ip
 801dbc0:	fa1f f888 	uxth.w	r8, r8
 801dbc4:	fa1f fe8e 	uxth.w	lr, lr
 801dbc8:	b2ad      	uxth	r5, r5
 801dbca:	f108 0c01 	add.w	ip, r8, #1
 801dbce:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801dbd2:	f10e 0901 	add.w	r9, lr, #1
 801dbd6:	f105 0c01 	add.w	ip, r5, #1
 801dbda:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801dbde:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801dbe2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801dbe6:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801dbea:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801dbee:	ea4c 0808 	orr.w	r8, ip, r8
 801dbf2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801dbf4:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801dbf8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dbfc:	ea48 0809 	orr.w	r8, r8, r9
 801dc00:	f821 8b02 	strh.w	r8, [r1], #2
 801dc04:	910b      	str	r1, [sp, #44]	; 0x2c
 801dc06:	e7a5      	b.n	801db54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801dc08:	f10c 0801 	add.w	r8, ip, #1
 801dc0c:	44a4      	add	ip, r4
 801dc0e:	9911      	ldr	r1, [sp, #68]	; 0x44
 801dc10:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801dc14:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801dc18:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801dc1c:	fa1f fc88 	uxth.w	ip, r8
 801dc20:	e763      	b.n	801daea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801dc22:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801dc26:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801dc2a:	1aad      	subs	r5, r5, r2
 801dc2c:	b2ad      	uxth	r5, r5
 801dc2e:	2d00      	cmp	r5, #0
 801dc30:	bf18      	it	ne
 801dc32:	2200      	movne	r2, #0
 801dc34:	9201      	str	r2, [sp, #4]
 801dc36:	e744      	b.n	801dac2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801dc38:	4b03      	ldr	r3, [pc, #12]	; (801dc48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801dc3a:	6818      	ldr	r0, [r3, #0]
 801dc3c:	6803      	ldr	r3, [r0, #0]
 801dc3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dc40:	4798      	blx	r3
 801dc42:	b01f      	add	sp, #124	; 0x7c
 801dc44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dc48:	2000e1c0 	.word	0x2000e1c0

0801dc4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801dc4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc50:	b08f      	sub	sp, #60	; 0x3c
 801dc52:	461c      	mov	r4, r3
 801dc54:	9203      	str	r2, [sp, #12]
 801dc56:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801dc5a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dc5c:	9202      	str	r2, [sp, #8]
 801dc5e:	460f      	mov	r7, r1
 801dc60:	2a00      	cmp	r2, #0
 801dc62:	f000 8128 	beq.w	801deb6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801dc66:	6820      	ldr	r0, [r4, #0]
 801dc68:	6861      	ldr	r1, [r4, #4]
 801dc6a:	aa0a      	add	r2, sp, #40	; 0x28
 801dc6c:	c203      	stmia	r2!, {r0, r1}
 801dc6e:	6818      	ldr	r0, [r3, #0]
 801dc70:	6859      	ldr	r1, [r3, #4]
 801dc72:	aa0c      	add	r2, sp, #48	; 0x30
 801dc74:	c203      	stmia	r2!, {r0, r1}
 801dc76:	a80a      	add	r0, sp, #40	; 0x28
 801dc78:	f7f9 fa6c 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dc7c:	4621      	mov	r1, r4
 801dc7e:	a80c      	add	r0, sp, #48	; 0x30
 801dc80:	f7f9 faac 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dc84:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801dc88:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801dc8c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801dc90:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801dc94:	bfde      	ittt	le
 801dc96:	b2b3      	uxthle	r3, r6
 801dc98:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801dc9c:	fb92 f3f3 	sdivle	r3, r2, r3
 801dca0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801dca4:	bfc8      	it	gt
 801dca6:	2301      	movgt	r3, #1
 801dca8:	fb92 f1f3 	sdiv	r1, r2, r3
 801dcac:	fa1f fc81 	uxth.w	ip, r1
 801dcb0:	fb0c 2413 	mls	r4, ip, r3, r2
 801dcb4:	fb14 f406 	smulbb	r4, r4, r6
 801dcb8:	441d      	add	r5, r3
 801dcba:	4404      	add	r4, r0
 801dcbc:	4661      	mov	r1, ip
 801dcbe:	3d01      	subs	r5, #1
 801dcc0:	b2a4      	uxth	r4, r4
 801dcc2:	fb95 f5f3 	sdiv	r5, r5, r3
 801dcc6:	b121      	cbz	r1, 801dcd2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801dcc8:	9b03      	ldr	r3, [sp, #12]
 801dcca:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801dcce:	ba1b      	rev	r3, r3
 801dcd0:	441f      	add	r7, r3
 801dcd2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801dcd6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801dcda:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801dcde:	4418      	add	r0, r3
 801dce0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801dce4:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801dce8:	441a      	add	r2, r3
 801dcea:	4b74      	ldr	r3, [pc, #464]	; (801debc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801dcec:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801dcf0:	6818      	ldr	r0, [r3, #0]
 801dcf2:	6803      	ldr	r3, [r0, #0]
 801dcf4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dcf6:	4798      	blx	r3
 801dcf8:	4a71      	ldr	r2, [pc, #452]	; (801dec0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801dcfa:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801dcfe:	8813      	ldrh	r3, [r2, #0]
 801dd00:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801dd04:	9209      	str	r2, [sp, #36]	; 0x24
 801dd06:	fb03 c101 	mla	r1, r3, r1, ip
 801dd0a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801dd0e:	4373      	muls	r3, r6
 801dd10:	b2ad      	uxth	r5, r5
 801dd12:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dd16:	00ad      	lsls	r5, r5, #2
 801dd18:	2c00      	cmp	r4, #0
 801dd1a:	9304      	str	r3, [sp, #16]
 801dd1c:	f105 0304 	add.w	r3, r5, #4
 801dd20:	9305      	str	r3, [sp, #20]
 801dd22:	bf0c      	ite	eq
 801dd24:	46c8      	moveq	r8, r9
 801dd26:	f04f 0800 	movne.w	r8, #0
 801dd2a:	2300      	movs	r3, #0
 801dd2c:	fa1f f888 	uxth.w	r8, r8
 801dd30:	9301      	str	r3, [sp, #4]
 801dd32:	9a04      	ldr	r2, [sp, #16]
 801dd34:	4282      	cmp	r2, r0
 801dd36:	f240 80b9 	bls.w	801deac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801dd3a:	b95b      	cbnz	r3, 801dd54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801dd3c:	783a      	ldrb	r2, [r7, #0]
 801dd3e:	0993      	lsrs	r3, r2, #6
 801dd40:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801dd44:	9201      	str	r2, [sp, #4]
 801dd46:	1e5a      	subs	r2, r3, #1
 801dd48:	2a02      	cmp	r2, #2
 801dd4a:	bf8d      	iteet	hi
 801dd4c:	787b      	ldrbhi	r3, [r7, #1]
 801dd4e:	3701      	addls	r7, #1
 801dd50:	b29b      	uxthls	r3, r3
 801dd52:	3702      	addhi	r7, #2
 801dd54:	b184      	cbz	r4, 801dd78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801dd56:	429c      	cmp	r4, r3
 801dd58:	bf95      	itete	ls
 801dd5a:	1b1c      	subls	r4, r3, r4
 801dd5c:	1ae4      	subhi	r4, r4, r3
 801dd5e:	fa1f fa84 	uxthls.w	sl, r4
 801dd62:	b2a4      	uxthhi	r4, r4
 801dd64:	bf87      	ittee	hi
 801dd66:	46c4      	movhi	ip, r8
 801dd68:	f04f 0a00 	movhi.w	sl, #0
 801dd6c:	fa1f fc89 	uxthls.w	ip, r9
 801dd70:	2400      	movls	r4, #0
 801dd72:	4653      	mov	r3, sl
 801dd74:	46e0      	mov	r8, ip
 801dd76:	e7dc      	b.n	801dd32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801dd78:	2204      	movs	r2, #4
 801dd7a:	4615      	mov	r5, r2
 801dd7c:	9905      	ldr	r1, [sp, #20]
 801dd7e:	9a01      	ldr	r2, [sp, #4]
 801dd80:	fb15 1202 	smlabb	r2, r5, r2, r1
 801dd84:	9903      	ldr	r1, [sp, #12]
 801dd86:	588a      	ldr	r2, [r1, r2]
 801dd88:	4543      	cmp	r3, r8
 801dd8a:	bf27      	ittee	cs
 801dd8c:	eba3 0a08 	subcs.w	sl, r3, r8
 801dd90:	46c6      	movcs	lr, r8
 801dd92:	eba8 0c03 	subcc.w	ip, r8, r3
 801dd96:	469e      	movcc	lr, r3
 801dd98:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801dd9c:	bf27      	ittee	cs
 801dd9e:	fa1f fa8a 	uxthcs.w	sl, sl
 801dda2:	46a4      	movcs	ip, r4
 801dda4:	fa1f fc8c 	uxthcc.w	ip, ip
 801dda8:	46a2      	movcc	sl, r4
 801ddaa:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801ddae:	2900      	cmp	r1, #0
 801ddb0:	d066      	beq.n	801de80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801ddb2:	29ff      	cmp	r1, #255	; 0xff
 801ddb4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801ddb8:	d114      	bne.n	801dde4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801ddba:	9d02      	ldr	r5, [sp, #8]
 801ddbc:	2dff      	cmp	r5, #255	; 0xff
 801ddbe:	d111      	bne.n	801dde4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801ddc0:	0951      	lsrs	r1, r2, #5
 801ddc2:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801ddc6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ddca:	f026 0607 	bic.w	r6, r6, #7
 801ddce:	430e      	orrs	r6, r1
 801ddd0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ddd4:	4316      	orrs	r6, r2
 801ddd6:	b2b6      	uxth	r6, r6
 801ddd8:	4486      	add	lr, r0
 801ddda:	4586      	cmp	lr, r0
 801dddc:	d051      	beq.n	801de82 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801ddde:	f820 6b02 	strh.w	r6, [r0], #2
 801dde2:	e7fa      	b.n	801ddda <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801dde4:	9d02      	ldr	r5, [sp, #8]
 801dde6:	4369      	muls	r1, r5
 801dde8:	1c4d      	adds	r5, r1, #1
 801ddea:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801ddee:	122d      	asrs	r5, r5, #8
 801ddf0:	ea6f 0b05 	mvn.w	fp, r5
 801ddf4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801ddf8:	b2ad      	uxth	r5, r5
 801ddfa:	b2f6      	uxtb	r6, r6
 801ddfc:	b2d2      	uxtb	r2, r2
 801ddfe:	fb11 f105 	smulbb	r1, r1, r5
 801de02:	fb16 f605 	smulbb	r6, r6, r5
 801de06:	fb12 f205 	smulbb	r2, r2, r5
 801de0a:	b289      	uxth	r1, r1
 801de0c:	b2b6      	uxth	r6, r6
 801de0e:	b292      	uxth	r2, r2
 801de10:	9106      	str	r1, [sp, #24]
 801de12:	9607      	str	r6, [sp, #28]
 801de14:	9208      	str	r2, [sp, #32]
 801de16:	4486      	add	lr, r0
 801de18:	fa5f fb8b 	uxtb.w	fp, fp
 801de1c:	4586      	cmp	lr, r0
 801de1e:	d030      	beq.n	801de82 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801de20:	8802      	ldrh	r2, [r0, #0]
 801de22:	9906      	ldr	r1, [sp, #24]
 801de24:	1216      	asrs	r6, r2, #8
 801de26:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801de2a:	10d5      	asrs	r5, r2, #3
 801de2c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801de30:	fb06 160b 	mla	r6, r6, fp, r1
 801de34:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801de38:	9907      	ldr	r1, [sp, #28]
 801de3a:	00d2      	lsls	r2, r2, #3
 801de3c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801de40:	fb05 150b 	mla	r5, r5, fp, r1
 801de44:	b2d2      	uxtb	r2, r2
 801de46:	9908      	ldr	r1, [sp, #32]
 801de48:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801de4c:	b2b6      	uxth	r6, r6
 801de4e:	fb02 120b 	mla	r2, r2, fp, r1
 801de52:	b292      	uxth	r2, r2
 801de54:	1c71      	adds	r1, r6, #1
 801de56:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801de5a:	1c51      	adds	r1, r2, #1
 801de5c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801de60:	b2ad      	uxth	r5, r5
 801de62:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801de66:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801de6a:	4316      	orrs	r6, r2
 801de6c:	1c6a      	adds	r2, r5, #1
 801de6e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801de72:	096d      	lsrs	r5, r5, #5
 801de74:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801de78:	432e      	orrs	r6, r5
 801de7a:	f820 6b02 	strh.w	r6, [r0], #2
 801de7e:	e7cd      	b.n	801de1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801de80:	4470      	add	r0, lr
 801de82:	4543      	cmp	r3, r8
 801de84:	f4ff af75 	bcc.w	801dd72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801de88:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801de8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801de8e:	fa1f fc89 	uxth.w	ip, r9
 801de92:	eba4 040c 	sub.w	r4, r4, ip
 801de96:	881b      	ldrh	r3, [r3, #0]
 801de98:	b2a4      	uxth	r4, r4
 801de9a:	2c00      	cmp	r4, #0
 801de9c:	eba3 0309 	sub.w	r3, r3, r9
 801dea0:	bf18      	it	ne
 801dea2:	f04f 0c00 	movne.w	ip, #0
 801dea6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801deaa:	e762      	b.n	801dd72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801deac:	4b03      	ldr	r3, [pc, #12]	; (801debc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801deae:	6818      	ldr	r0, [r3, #0]
 801deb0:	6803      	ldr	r3, [r0, #0]
 801deb2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801deb4:	4798      	blx	r3
 801deb6:	b00f      	add	sp, #60	; 0x3c
 801deb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801debc:	2000e1c0 	.word	0x2000e1c0
 801dec0:	2000e1ba 	.word	0x2000e1ba

0801dec4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801dec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dec8:	b093      	sub	sp, #76	; 0x4c
 801deca:	461c      	mov	r4, r3
 801decc:	9205      	str	r2, [sp, #20]
 801dece:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801ded2:	9101      	str	r1, [sp, #4]
 801ded4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ded6:	9202      	str	r2, [sp, #8]
 801ded8:	2a00      	cmp	r2, #0
 801deda:	f000 812c 	beq.w	801e136 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801dede:	6820      	ldr	r0, [r4, #0]
 801dee0:	6861      	ldr	r1, [r4, #4]
 801dee2:	aa0e      	add	r2, sp, #56	; 0x38
 801dee4:	c203      	stmia	r2!, {r0, r1}
 801dee6:	6818      	ldr	r0, [r3, #0]
 801dee8:	6859      	ldr	r1, [r3, #4]
 801deea:	aa10      	add	r2, sp, #64	; 0x40
 801deec:	c203      	stmia	r2!, {r0, r1}
 801deee:	a80e      	add	r0, sp, #56	; 0x38
 801def0:	f7f9 f930 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801def4:	4621      	mov	r1, r4
 801def6:	a810      	add	r0, sp, #64	; 0x40
 801def8:	f7f9 f970 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801defc:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801df00:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801df04:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801df08:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801df0c:	bfde      	ittt	le
 801df0e:	b2b3      	uxthle	r3, r6
 801df10:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801df14:	fb92 f3f3 	sdivle	r3, r2, r3
 801df18:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801df1c:	bfc8      	it	gt
 801df1e:	2301      	movgt	r3, #1
 801df20:	fb92 f1f3 	sdiv	r1, r2, r3
 801df24:	fa1f fc81 	uxth.w	ip, r1
 801df28:	fb0c 2413 	mls	r4, ip, r3, r2
 801df2c:	fb14 f406 	smulbb	r4, r4, r6
 801df30:	441d      	add	r5, r3
 801df32:	4404      	add	r4, r0
 801df34:	4661      	mov	r1, ip
 801df36:	3d01      	subs	r5, #1
 801df38:	b2a4      	uxth	r4, r4
 801df3a:	fb95 f5f3 	sdiv	r5, r5, r3
 801df3e:	b131      	cbz	r1, 801df4e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801df40:	9b05      	ldr	r3, [sp, #20]
 801df42:	9901      	ldr	r1, [sp, #4]
 801df44:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801df48:	ba1b      	rev	r3, r3
 801df4a:	4419      	add	r1, r3
 801df4c:	9101      	str	r1, [sp, #4]
 801df4e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801df52:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801df56:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801df5a:	4418      	add	r0, r3
 801df5c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801df60:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801df64:	441a      	add	r2, r3
 801df66:	4b75      	ldr	r3, [pc, #468]	; (801e13c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801df68:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801df6c:	6818      	ldr	r0, [r3, #0]
 801df6e:	6803      	ldr	r3, [r0, #0]
 801df70:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801df72:	4798      	blx	r3
 801df74:	4972      	ldr	r1, [pc, #456]	; (801e140 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801df76:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801df7a:	880b      	ldrh	r3, [r1, #0]
 801df7c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801df80:	910d      	str	r1, [sp, #52]	; 0x34
 801df82:	fb03 c202 	mla	r2, r3, r2, ip
 801df86:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801df8a:	4373      	muls	r3, r6
 801df8c:	b2ad      	uxth	r5, r5
 801df8e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801df92:	00ad      	lsls	r5, r5, #2
 801df94:	9308      	str	r3, [sp, #32]
 801df96:	1d2b      	adds	r3, r5, #4
 801df98:	9309      	str	r3, [sp, #36]	; 0x24
 801df9a:	9b02      	ldr	r3, [sp, #8]
 801df9c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801dfa0:	9106      	str	r1, [sp, #24]
 801dfa2:	43da      	mvns	r2, r3
 801dfa4:	2c00      	cmp	r4, #0
 801dfa6:	bf0c      	ite	eq
 801dfa8:	46dc      	moveq	ip, fp
 801dfaa:	f04f 0c00 	movne.w	ip, #0
 801dfae:	2300      	movs	r3, #0
 801dfb0:	b2d2      	uxtb	r2, r2
 801dfb2:	fa1f fc8c 	uxth.w	ip, ip
 801dfb6:	9303      	str	r3, [sp, #12]
 801dfb8:	9207      	str	r2, [sp, #28]
 801dfba:	9a08      	ldr	r2, [sp, #32]
 801dfbc:	4282      	cmp	r2, r0
 801dfbe:	f240 80b5 	bls.w	801e12c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801dfc2:	b963      	cbnz	r3, 801dfde <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801dfc4:	9b01      	ldr	r3, [sp, #4]
 801dfc6:	781a      	ldrb	r2, [r3, #0]
 801dfc8:	0993      	lsrs	r3, r2, #6
 801dfca:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801dfce:	9203      	str	r2, [sp, #12]
 801dfd0:	1e5a      	subs	r2, r3, #1
 801dfd2:	2a02      	cmp	r2, #2
 801dfd4:	d815      	bhi.n	801e002 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801dfd6:	9a01      	ldr	r2, [sp, #4]
 801dfd8:	3201      	adds	r2, #1
 801dfda:	9201      	str	r2, [sp, #4]
 801dfdc:	b29b      	uxth	r3, r3
 801dfde:	b1b4      	cbz	r4, 801e00e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801dfe0:	429c      	cmp	r4, r3
 801dfe2:	bf95      	itete	ls
 801dfe4:	1b1c      	subls	r4, r3, r4
 801dfe6:	1ae4      	subhi	r4, r4, r3
 801dfe8:	fa1f f884 	uxthls.w	r8, r4
 801dfec:	b2a4      	uxthhi	r4, r4
 801dfee:	bf87      	ittee	hi
 801dff0:	4666      	movhi	r6, ip
 801dff2:	f04f 0800 	movhi.w	r8, #0
 801dff6:	fa1f f68b 	uxthls.w	r6, fp
 801dffa:	2400      	movls	r4, #0
 801dffc:	4643      	mov	r3, r8
 801dffe:	46b4      	mov	ip, r6
 801e000:	e7db      	b.n	801dfba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801e002:	9a01      	ldr	r2, [sp, #4]
 801e004:	9b01      	ldr	r3, [sp, #4]
 801e006:	3202      	adds	r2, #2
 801e008:	785b      	ldrb	r3, [r3, #1]
 801e00a:	9201      	str	r2, [sp, #4]
 801e00c:	e7e7      	b.n	801dfde <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801e00e:	2203      	movs	r2, #3
 801e010:	4615      	mov	r5, r2
 801e012:	9909      	ldr	r1, [sp, #36]	; 0x24
 801e014:	9a03      	ldr	r2, [sp, #12]
 801e016:	fb15 1202 	smlabb	r2, r5, r2, r1
 801e01a:	9905      	ldr	r1, [sp, #20]
 801e01c:	4563      	cmp	r3, ip
 801e01e:	eb01 0502 	add.w	r5, r1, r2
 801e022:	9902      	ldr	r1, [sp, #8]
 801e024:	bf29      	itett	cs
 801e026:	eba3 080c 	subcs.w	r8, r3, ip
 801e02a:	ebac 0603 	subcc.w	r6, ip, r3
 801e02e:	fa1f f888 	uxthcs.w	r8, r8
 801e032:	46e1      	movcs	r9, ip
 801e034:	bf2f      	iteee	cs
 801e036:	4626      	movcs	r6, r4
 801e038:	b2b6      	uxthcc	r6, r6
 801e03a:	4699      	movcc	r9, r3
 801e03c:	46a0      	movcc	r8, r4
 801e03e:	29ff      	cmp	r1, #255	; 0xff
 801e040:	d04a      	beq.n	801e0d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801e042:	9f06      	ldr	r7, [sp, #24]
 801e044:	78a9      	ldrb	r1, [r5, #2]
 801e046:	9004      	str	r0, [sp, #16]
 801e048:	4379      	muls	r1, r7
 801e04a:	910a      	str	r1, [sp, #40]	; 0x28
 801e04c:	7869      	ldrb	r1, [r5, #1]
 801e04e:	4379      	muls	r1, r7
 801e050:	910b      	str	r1, [sp, #44]	; 0x2c
 801e052:	9905      	ldr	r1, [sp, #20]
 801e054:	5c8a      	ldrb	r2, [r1, r2]
 801e056:	437a      	muls	r2, r7
 801e058:	920c      	str	r2, [sp, #48]	; 0x30
 801e05a:	46ca      	mov	sl, r9
 801e05c:	f1ba 0f00 	cmp.w	sl, #0
 801e060:	d03d      	beq.n	801e0de <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801e062:	9a04      	ldr	r2, [sp, #16]
 801e064:	9f07      	ldr	r7, [sp, #28]
 801e066:	8812      	ldrh	r2, [r2, #0]
 801e068:	1215      	asrs	r5, r2, #8
 801e06a:	46be      	mov	lr, r7
 801e06c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e070:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e072:	10d1      	asrs	r1, r2, #3
 801e074:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801e078:	fb05 750e 	mla	r5, r5, lr, r7
 801e07c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e080:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801e082:	00d2      	lsls	r2, r2, #3
 801e084:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801e088:	fb01 710e 	mla	r1, r1, lr, r7
 801e08c:	b2d2      	uxtb	r2, r2
 801e08e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801e090:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e094:	b2ad      	uxth	r5, r5
 801e096:	fb02 720e 	mla	r2, r2, lr, r7
 801e09a:	b292      	uxth	r2, r2
 801e09c:	f105 0e01 	add.w	lr, r5, #1
 801e0a0:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801e0a4:	f102 0e01 	add.w	lr, r2, #1
 801e0a8:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801e0ac:	b289      	uxth	r1, r1
 801e0ae:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e0b2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e0b6:	4315      	orrs	r5, r2
 801e0b8:	1c4a      	adds	r2, r1, #1
 801e0ba:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e0be:	0949      	lsrs	r1, r1, #5
 801e0c0:	9a04      	ldr	r2, [sp, #16]
 801e0c2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e0c6:	430d      	orrs	r5, r1
 801e0c8:	f822 5b02 	strh.w	r5, [r2], #2
 801e0cc:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 801e0d0:	9204      	str	r2, [sp, #16]
 801e0d2:	fa1f fa8a 	uxth.w	sl, sl
 801e0d6:	e7c1      	b.n	801e05c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801e0d8:	4649      	mov	r1, r9
 801e0da:	4686      	mov	lr, r0
 801e0dc:	b999      	cbnz	r1, 801e106 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801e0de:	4563      	cmp	r3, ip
 801e0e0:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801e0e4:	d38a      	bcc.n	801dffc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801e0e6:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801e0ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e0ec:	fa1f f68b 	uxth.w	r6, fp
 801e0f0:	1ba4      	subs	r4, r4, r6
 801e0f2:	881b      	ldrh	r3, [r3, #0]
 801e0f4:	b2a4      	uxth	r4, r4
 801e0f6:	2c00      	cmp	r4, #0
 801e0f8:	eba3 030b 	sub.w	r3, r3, fp
 801e0fc:	bf18      	it	ne
 801e0fe:	2600      	movne	r6, #0
 801e100:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e104:	e77a      	b.n	801dffc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801e106:	78aa      	ldrb	r2, [r5, #2]
 801e108:	4f0e      	ldr	r7, [pc, #56]	; (801e144 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801e10a:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801e10e:	786a      	ldrb	r2, [r5, #1]
 801e110:	00d2      	lsls	r2, r2, #3
 801e112:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e116:	ea4a 0202 	orr.w	r2, sl, r2
 801e11a:	f895 a000 	ldrb.w	sl, [r5]
 801e11e:	3901      	subs	r1, #1
 801e120:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801e124:	f82e 2b02 	strh.w	r2, [lr], #2
 801e128:	b289      	uxth	r1, r1
 801e12a:	e7d7      	b.n	801e0dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801e12c:	4b03      	ldr	r3, [pc, #12]	; (801e13c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801e12e:	6818      	ldr	r0, [r3, #0]
 801e130:	6803      	ldr	r3, [r0, #0]
 801e132:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e134:	4798      	blx	r3
 801e136:	b013      	add	sp, #76	; 0x4c
 801e138:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e13c:	2000e1c0 	.word	0x2000e1c0
 801e140:	2000e1ba 	.word	0x2000e1ba
 801e144:	fffff800 	.word	0xfffff800

0801e148 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801e148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e14c:	b09d      	sub	sp, #116	; 0x74
 801e14e:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801e152:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801e156:	920e      	str	r2, [sp, #56]	; 0x38
 801e158:	461c      	mov	r4, r3
 801e15a:	4683      	mov	fp, r0
 801e15c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e15e:	2a00      	cmp	r2, #0
 801e160:	f000 81e0 	beq.w	801e524 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801e164:	6820      	ldr	r0, [r4, #0]
 801e166:	6861      	ldr	r1, [r4, #4]
 801e168:	aa18      	add	r2, sp, #96	; 0x60
 801e16a:	c203      	stmia	r2!, {r0, r1}
 801e16c:	6818      	ldr	r0, [r3, #0]
 801e16e:	6859      	ldr	r1, [r3, #4]
 801e170:	aa1a      	add	r2, sp, #104	; 0x68
 801e172:	c203      	stmia	r2!, {r0, r1}
 801e174:	a818      	add	r0, sp, #96	; 0x60
 801e176:	f7f8 ffed 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e17a:	4621      	mov	r1, r4
 801e17c:	a81a      	add	r0, sp, #104	; 0x68
 801e17e:	f7f9 f82d 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e182:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801e186:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801e18a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801e18e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801e192:	bfd7      	itett	le
 801e194:	b29a      	uxthle	r2, r3
 801e196:	2201      	movgt	r2, #1
 801e198:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801e19c:	fb91 f2f2 	sdivle	r2, r1, r2
 801e1a0:	9202      	str	r2, [sp, #8]
 801e1a2:	9802      	ldr	r0, [sp, #8]
 801e1a4:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801e1a8:	fb92 f0f0 	sdiv	r0, r2, r0
 801e1ac:	b280      	uxth	r0, r0
 801e1ae:	900f      	str	r0, [sp, #60]	; 0x3c
 801e1b0:	9902      	ldr	r1, [sp, #8]
 801e1b2:	9802      	ldr	r0, [sp, #8]
 801e1b4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e1b6:	440c      	add	r4, r1
 801e1b8:	fb05 2510 	mls	r5, r5, r0, r2
 801e1bc:	fb15 f503 	smulbb	r5, r5, r3
 801e1c0:	3c01      	subs	r4, #1
 801e1c2:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801e1c6:	fb94 f4f1 	sdiv	r4, r4, r1
 801e1ca:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801e1ce:	440d      	add	r5, r1
 801e1d0:	4419      	add	r1, r3
 801e1d2:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801e1d6:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801e1da:	441a      	add	r2, r3
 801e1dc:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801e1e0:	9306      	str	r3, [sp, #24]
 801e1e2:	4bb3      	ldr	r3, [pc, #716]	; (801e4b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801e1e4:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801e1e8:	6818      	ldr	r0, [r3, #0]
 801e1ea:	6803      	ldr	r3, [r0, #0]
 801e1ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e1ee:	4798      	blx	r3
 801e1f0:	4bb0      	ldr	r3, [pc, #704]	; (801e4b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801e1f2:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801e1f6:	881a      	ldrh	r2, [r3, #0]
 801e1f8:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801e1fc:	9316      	str	r3, [sp, #88]	; 0x58
 801e1fe:	fb02 7101 	mla	r1, r2, r1, r7
 801e202:	3401      	adds	r4, #1
 801e204:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801e208:	b2a4      	uxth	r4, r4
 801e20a:	4356      	muls	r6, r2
 801e20c:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801e210:	00a4      	lsls	r4, r4, #2
 801e212:	920a      	str	r2, [sp, #40]	; 0x28
 801e214:	1d22      	adds	r2, r4, #4
 801e216:	b2ad      	uxth	r5, r5
 801e218:	9213      	str	r2, [sp, #76]	; 0x4c
 801e21a:	4ba7      	ldr	r3, [pc, #668]	; (801e4b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801e21c:	9a06      	ldr	r2, [sp, #24]
 801e21e:	2d00      	cmp	r5, #0
 801e220:	bf0c      	ite	eq
 801e222:	4611      	moveq	r1, r2
 801e224:	2100      	movne	r1, #0
 801e226:	2200      	movs	r2, #0
 801e228:	eba3 030b 	sub.w	r3, r3, fp
 801e22c:	b289      	uxth	r1, r1
 801e22e:	920d      	str	r2, [sp, #52]	; 0x34
 801e230:	9317      	str	r3, [sp, #92]	; 0x5c
 801e232:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e234:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e236:	fa12 f383 	uxtah	r3, r2, r3
 801e23a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e23c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801e240:	3304      	adds	r3, #4
 801e242:	9308      	str	r3, [sp, #32]
 801e244:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e246:	4543      	cmp	r3, r8
 801e248:	f240 8167 	bls.w	801e51a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801e24c:	9a02      	ldr	r2, [sp, #8]
 801e24e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801e252:	fbb5 f3f3 	udiv	r3, r5, r3
 801e256:	1ad3      	subs	r3, r2, r3
 801e258:	b29b      	uxth	r3, r3
 801e25a:	9314      	str	r3, [sp, #80]	; 0x50
 801e25c:	9b08      	ldr	r3, [sp, #32]
 801e25e:	9808      	ldr	r0, [sp, #32]
 801e260:	785a      	ldrb	r2, [r3, #1]
 801e262:	789b      	ldrb	r3, [r3, #2]
 801e264:	7800      	ldrb	r0, [r0, #0]
 801e266:	9010      	str	r0, [sp, #64]	; 0x40
 801e268:	021b      	lsls	r3, r3, #8
 801e26a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801e26e:	9a08      	ldr	r2, [sp, #32]
 801e270:	78d2      	ldrb	r2, [r2, #3]
 801e272:	4313      	orrs	r3, r2
 801e274:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e276:	3001      	adds	r0, #1
 801e278:	441a      	add	r2, r3
 801e27a:	9007      	str	r0, [sp, #28]
 801e27c:	1c50      	adds	r0, r2, #1
 801e27e:	9005      	str	r0, [sp, #20]
 801e280:	7852      	ldrb	r2, [r2, #1]
 801e282:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e284:	0212      	lsls	r2, r2, #8
 801e286:	5cc3      	ldrb	r3, [r0, r3]
 801e288:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801e28c:	431a      	orrs	r2, r3
 801e28e:	b293      	uxth	r3, r2
 801e290:	930b      	str	r3, [sp, #44]	; 0x2c
 801e292:	2300      	movs	r3, #0
 801e294:	9309      	str	r3, [sp, #36]	; 0x24
 801e296:	2301      	movs	r3, #1
 801e298:	9301      	str	r3, [sp, #4]
 801e29a:	9304      	str	r3, [sp, #16]
 801e29c:	2300      	movs	r3, #0
 801e29e:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801e2a2:	9303      	str	r3, [sp, #12]
 801e2a4:	f04f 0e01 	mov.w	lr, #1
 801e2a8:	2d00      	cmp	r5, #0
 801e2aa:	d07c      	beq.n	801e3a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801e2ac:	45ae      	cmp	lr, r5
 801e2ae:	d26b      	bcs.n	801e388 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801e2b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e2b2:	eba5 050e 	sub.w	r5, r5, lr
 801e2b6:	4543      	cmp	r3, r8
 801e2b8:	b2ad      	uxth	r5, r5
 801e2ba:	460c      	mov	r4, r1
 801e2bc:	d802      	bhi.n	801e2c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801e2be:	e070      	b.n	801e3a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801e2c0:	2b00      	cmp	r3, #0
 801e2c2:	d15c      	bne.n	801e37e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801e2c4:	9b05      	ldr	r3, [sp, #20]
 801e2c6:	9a04      	ldr	r2, [sp, #16]
 801e2c8:	785b      	ldrb	r3, [r3, #1]
 801e2ca:	9904      	ldr	r1, [sp, #16]
 801e2cc:	f1c2 0207 	rsb	r2, r2, #7
 801e2d0:	4093      	lsls	r3, r2
 801e2d2:	005b      	lsls	r3, r3, #1
 801e2d4:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801e2d8:	9b05      	ldr	r3, [sp, #20]
 801e2da:	781b      	ldrb	r3, [r3, #0]
 801e2dc:	410b      	asrs	r3, r1
 801e2de:	3101      	adds	r1, #1
 801e2e0:	b2c9      	uxtb	r1, r1
 801e2e2:	2908      	cmp	r1, #8
 801e2e4:	9104      	str	r1, [sp, #16]
 801e2e6:	9905      	ldr	r1, [sp, #20]
 801e2e8:	bf0a      	itet	eq
 801e2ea:	3102      	addeq	r1, #2
 801e2ec:	3101      	addne	r1, #1
 801e2ee:	9105      	streq	r1, [sp, #20]
 801e2f0:	b2db      	uxtb	r3, r3
 801e2f2:	bf0a      	itet	eq
 801e2f4:	2100      	moveq	r1, #0
 801e2f6:	9105      	strne	r1, [sp, #20]
 801e2f8:	9104      	streq	r1, [sp, #16]
 801e2fa:	4313      	orrs	r3, r2
 801e2fc:	9910      	ldr	r1, [sp, #64]	; 0x40
 801e2fe:	b29a      	uxth	r2, r3
 801e300:	4291      	cmp	r1, r2
 801e302:	d30a      	bcc.n	801e31a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801e304:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801e308:	2301      	movs	r3, #1
 801e30a:	9907      	ldr	r1, [sp, #28]
 801e30c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801e310:	d30f      	bcc.n	801e332 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801e312:	2100      	movs	r1, #0
 801e314:	9301      	str	r3, [sp, #4]
 801e316:	9103      	str	r1, [sp, #12]
 801e318:	e032      	b.n	801e380 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801e31a:	9b07      	ldr	r3, [sp, #28]
 801e31c:	429a      	cmp	r2, r3
 801e31e:	d318      	bcc.n	801e352 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801e320:	9b01      	ldr	r3, [sp, #4]
 801e322:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801e326:	445b      	add	r3, fp
 801e328:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801e32c:	9b01      	ldr	r3, [sp, #4]
 801e32e:	3301      	adds	r3, #1
 801e330:	b29b      	uxth	r3, r3
 801e332:	9907      	ldr	r1, [sp, #28]
 801e334:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801e338:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801e33c:	7108      	strb	r0, [r1, #4]
 801e33e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801e340:	80c8      	strh	r0, [r1, #6]
 801e342:	9801      	ldr	r0, [sp, #4]
 801e344:	3001      	adds	r0, #1
 801e346:	7148      	strb	r0, [r1, #5]
 801e348:	9907      	ldr	r1, [sp, #28]
 801e34a:	3101      	adds	r1, #1
 801e34c:	b289      	uxth	r1, r1
 801e34e:	9107      	str	r1, [sp, #28]
 801e350:	e7df      	b.n	801e312 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801e352:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801e356:	4611      	mov	r1, r2
 801e358:	795b      	ldrb	r3, [r3, #5]
 801e35a:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801e35e:	4458      	add	r0, fp
 801e360:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801e362:	4406      	add	r6, r0
 801e364:	2e00      	cmp	r6, #0
 801e366:	dd06      	ble.n	801e376 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801e368:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801e36c:	790e      	ldrb	r6, [r1, #4]
 801e36e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801e372:	88c9      	ldrh	r1, [r1, #6]
 801e374:	e7f4      	b.n	801e360 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801e376:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801e37a:	b29b      	uxth	r3, r3
 801e37c:	e7c5      	b.n	801e30a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801e37e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e380:	920b      	str	r2, [sp, #44]	; 0x2c
 801e382:	4621      	mov	r1, r4
 801e384:	469e      	mov	lr, r3
 801e386:	e78f      	b.n	801e2a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801e388:	9a03      	ldr	r2, [sp, #12]
 801e38a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801e38e:	442a      	add	r2, r5
 801e390:	ebae 0305 	sub.w	r3, lr, r5
 801e394:	b292      	uxth	r2, r2
 801e396:	b29b      	uxth	r3, r3
 801e398:	9203      	str	r2, [sp, #12]
 801e39a:	2500      	movs	r5, #0
 801e39c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e39e:	4542      	cmp	r2, r8
 801e3a0:	d88e      	bhi.n	801e2c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801e3a2:	4621      	mov	r1, r4
 801e3a4:	e74e      	b.n	801e244 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801e3a6:	458e      	cmp	lr, r1
 801e3a8:	bf29      	itett	cs
 801e3aa:	ebae 0301 	subcs.w	r3, lr, r1
 801e3ae:	eba1 040e 	subcc.w	r4, r1, lr
 801e3b2:	b29b      	uxthcs	r3, r3
 801e3b4:	910c      	strcs	r1, [sp, #48]	; 0x30
 801e3b6:	bf2f      	iteee	cs
 801e3b8:	462c      	movcs	r4, r5
 801e3ba:	b2a4      	uxthcc	r4, r4
 801e3bc:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801e3c0:	462b      	movcc	r3, r5
 801e3c2:	f04f 0900 	mov.w	r9, #0
 801e3c6:	9a03      	ldr	r2, [sp, #12]
 801e3c8:	980c      	ldr	r0, [sp, #48]	; 0x30
 801e3ca:	444a      	add	r2, r9
 801e3cc:	4548      	cmp	r0, r9
 801e3ce:	b292      	uxth	r2, r2
 801e3d0:	d074      	beq.n	801e4bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801e3d2:	445a      	add	r2, fp
 801e3d4:	2004      	movs	r0, #4
 801e3d6:	4605      	mov	r5, r0
 801e3d8:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801e3dc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e3de:	fb15 0202 	smlabb	r2, r5, r2, r0
 801e3e2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e3e4:	5880      	ldr	r0, [r0, r2]
 801e3e6:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801e3ea:	d014      	beq.n	801e416 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801e3ec:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e3f0:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801e3f4:	d112      	bne.n	801e41c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801e3f6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e3f8:	2aff      	cmp	r2, #255	; 0xff
 801e3fa:	d10f      	bne.n	801e41c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801e3fc:	0942      	lsrs	r2, r0, #5
 801e3fe:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801e402:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e406:	f025 0507 	bic.w	r5, r5, #7
 801e40a:	4315      	orrs	r5, r2
 801e40c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801e410:	4305      	orrs	r5, r0
 801e412:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801e416:	f109 0901 	add.w	r9, r9, #1
 801e41a:	e7d4      	b.n	801e3c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801e41c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801e420:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801e424:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801e428:	9215      	str	r2, [sp, #84]	; 0x54
 801e42a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e42c:	fb02 fa0a 	mul.w	sl, r2, sl
 801e430:	f10a 0201 	add.w	r2, sl, #1
 801e434:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801e438:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e43c:	1212      	asrs	r2, r2, #8
 801e43e:	fa1f fa82 	uxth.w	sl, r2
 801e442:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801e446:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e44a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e44e:	43d2      	mvns	r2, r2
 801e450:	b2d2      	uxtb	r2, r2
 801e452:	fb16 f60a 	smulbb	r6, r6, sl
 801e456:	fa5f fc8c 	uxtb.w	ip, ip
 801e45a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801e45e:	b2c0      	uxtb	r0, r0
 801e460:	fb07 6702 	mla	r7, r7, r2, r6
 801e464:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801e468:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801e46a:	fb10 f00a 	smulbb	r0, r0, sl
 801e46e:	fb0c 0002 	mla	r0, ip, r2, r0
 801e472:	b2ed      	uxtb	r5, r5
 801e474:	b2bf      	uxth	r7, r7
 801e476:	fb15 f50a 	smulbb	r5, r5, sl
 801e47a:	b280      	uxth	r0, r0
 801e47c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801e480:	fb06 5602 	mla	r6, r6, r2, r5
 801e484:	1c7a      	adds	r2, r7, #1
 801e486:	1c45      	adds	r5, r0, #1
 801e488:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801e48c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801e490:	b2b6      	uxth	r6, r6
 801e492:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e496:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801e49a:	432f      	orrs	r7, r5
 801e49c:	1c75      	adds	r5, r6, #1
 801e49e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801e4a2:	096d      	lsrs	r5, r5, #5
 801e4a4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e4a8:	432f      	orrs	r7, r5
 801e4aa:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801e4ae:	e7b2      	b.n	801e416 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801e4b0:	2000e1c0 	.word	0x2000e1c0
 801e4b4:	2000e1ba 	.word	0x2000e1ba
 801e4b8:	fffff7fb 	.word	0xfffff7fb
 801e4bc:	9203      	str	r2, [sp, #12]
 801e4be:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e4c0:	458e      	cmp	lr, r1
 801e4c2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801e4c6:	f4ff af68 	bcc.w	801e39a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801e4ca:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801e4cc:	9906      	ldr	r1, [sp, #24]
 801e4ce:	8812      	ldrh	r2, [r2, #0]
 801e4d0:	1a52      	subs	r2, r2, r1
 801e4d2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801e4d6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e4d8:	9914      	ldr	r1, [sp, #80]	; 0x50
 801e4da:	3201      	adds	r2, #1
 801e4dc:	428a      	cmp	r2, r1
 801e4de:	9209      	str	r2, [sp, #36]	; 0x24
 801e4e0:	d111      	bne.n	801e506 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801e4e2:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801e4e6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801e4ea:	9b06      	ldr	r3, [sp, #24]
 801e4ec:	eba5 0509 	sub.w	r5, r5, r9
 801e4f0:	b2ad      	uxth	r5, r5
 801e4f2:	2d00      	cmp	r5, #0
 801e4f4:	bf08      	it	eq
 801e4f6:	4619      	moveq	r1, r3
 801e4f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e4fa:	bf18      	it	ne
 801e4fc:	2100      	movne	r1, #0
 801e4fe:	3301      	adds	r3, #1
 801e500:	930d      	str	r3, [sp, #52]	; 0x34
 801e502:	b289      	uxth	r1, r1
 801e504:	e695      	b.n	801e232 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801e506:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801e50a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801e50e:	1b2d      	subs	r5, r5, r4
 801e510:	b2ad      	uxth	r5, r5
 801e512:	2d00      	cmp	r5, #0
 801e514:	bf18      	it	ne
 801e516:	2400      	movne	r4, #0
 801e518:	e740      	b.n	801e39c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801e51a:	4b04      	ldr	r3, [pc, #16]	; (801e52c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801e51c:	6818      	ldr	r0, [r3, #0]
 801e51e:	6803      	ldr	r3, [r0, #0]
 801e520:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e522:	4798      	blx	r3
 801e524:	b01d      	add	sp, #116	; 0x74
 801e526:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e52a:	bf00      	nop
 801e52c:	2000e1c0 	.word	0x2000e1c0

0801e530 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801e530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e534:	b09f      	sub	sp, #124	; 0x7c
 801e536:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801e53a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801e53e:	920a      	str	r2, [sp, #40]	; 0x28
 801e540:	461d      	mov	r5, r3
 801e542:	4604      	mov	r4, r0
 801e544:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e546:	2a00      	cmp	r2, #0
 801e548:	f000 81fa 	beq.w	801e940 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801e54c:	6828      	ldr	r0, [r5, #0]
 801e54e:	6869      	ldr	r1, [r5, #4]
 801e550:	aa1a      	add	r2, sp, #104	; 0x68
 801e552:	c203      	stmia	r2!, {r0, r1}
 801e554:	6818      	ldr	r0, [r3, #0]
 801e556:	6859      	ldr	r1, [r3, #4]
 801e558:	aa1c      	add	r2, sp, #112	; 0x70
 801e55a:	c203      	stmia	r2!, {r0, r1}
 801e55c:	a81a      	add	r0, sp, #104	; 0x68
 801e55e:	f7f8 fdf9 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e562:	4629      	mov	r1, r5
 801e564:	a81c      	add	r0, sp, #112	; 0x70
 801e566:	f7f8 fe39 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e56a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801e56e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801e572:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801e576:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801e57a:	bfd7      	itett	le
 801e57c:	b29a      	uxthle	r2, r3
 801e57e:	2201      	movgt	r2, #1
 801e580:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801e584:	fb91 f2f2 	sdivle	r2, r1, r2
 801e588:	9201      	str	r2, [sp, #4]
 801e58a:	9801      	ldr	r0, [sp, #4]
 801e58c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801e590:	fb92 f0f0 	sdiv	r0, r2, r0
 801e594:	b280      	uxth	r0, r0
 801e596:	9010      	str	r0, [sp, #64]	; 0x40
 801e598:	9901      	ldr	r1, [sp, #4]
 801e59a:	9801      	ldr	r0, [sp, #4]
 801e59c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e59e:	440e      	add	r6, r1
 801e5a0:	fb05 2510 	mls	r5, r5, r0, r2
 801e5a4:	fb15 f503 	smulbb	r5, r5, r3
 801e5a8:	3e01      	subs	r6, #1
 801e5aa:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801e5ae:	fb96 f6f1 	sdiv	r6, r6, r1
 801e5b2:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801e5b6:	440d      	add	r5, r1
 801e5b8:	4419      	add	r1, r3
 801e5ba:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801e5be:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801e5c2:	441a      	add	r2, r3
 801e5c4:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801e5c8:	9304      	str	r3, [sp, #16]
 801e5ca:	4b96      	ldr	r3, [pc, #600]	; (801e824 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801e5cc:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801e5d0:	6818      	ldr	r0, [r3, #0]
 801e5d2:	6803      	ldr	r3, [r0, #0]
 801e5d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e5d6:	4798      	blx	r3
 801e5d8:	4b93      	ldr	r3, [pc, #588]	; (801e828 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801e5da:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801e5de:	881a      	ldrh	r2, [r3, #0]
 801e5e0:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801e5e4:	9318      	str	r3, [sp, #96]	; 0x60
 801e5e6:	fb02 c101 	mla	r1, r2, r1, ip
 801e5ea:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801e5ee:	4357      	muls	r7, r2
 801e5f0:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801e5f4:	3601      	adds	r6, #1
 801e5f6:	920b      	str	r2, [sp, #44]	; 0x2c
 801e5f8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e5fa:	4b8c      	ldr	r3, [pc, #560]	; (801e82c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801e5fc:	b2b6      	uxth	r6, r6
 801e5fe:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801e602:	1d32      	adds	r2, r6, #4
 801e604:	9206      	str	r2, [sp, #24]
 801e606:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e608:	43d2      	mvns	r2, r2
 801e60a:	b2d2      	uxtb	r2, r2
 801e60c:	b2ad      	uxth	r5, r5
 801e60e:	9215      	str	r2, [sp, #84]	; 0x54
 801e610:	9a04      	ldr	r2, [sp, #16]
 801e612:	2d00      	cmp	r5, #0
 801e614:	bf0c      	ite	eq
 801e616:	4611      	moveq	r1, r2
 801e618:	2100      	movne	r1, #0
 801e61a:	2200      	movs	r2, #0
 801e61c:	1b1b      	subs	r3, r3, r4
 801e61e:	b289      	uxth	r1, r1
 801e620:	920d      	str	r2, [sp, #52]	; 0x34
 801e622:	9319      	str	r3, [sp, #100]	; 0x64
 801e624:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e626:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e628:	fa12 f383 	uxtah	r3, r2, r3
 801e62c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e62e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801e632:	3304      	adds	r3, #4
 801e634:	9307      	str	r3, [sp, #28]
 801e636:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e638:	455b      	cmp	r3, fp
 801e63a:	f240 817c 	bls.w	801e936 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801e63e:	9a01      	ldr	r2, [sp, #4]
 801e640:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801e644:	fbb5 f3f3 	udiv	r3, r5, r3
 801e648:	1ad3      	subs	r3, r2, r3
 801e64a:	b29b      	uxth	r3, r3
 801e64c:	9316      	str	r3, [sp, #88]	; 0x58
 801e64e:	9b07      	ldr	r3, [sp, #28]
 801e650:	9807      	ldr	r0, [sp, #28]
 801e652:	785a      	ldrb	r2, [r3, #1]
 801e654:	789b      	ldrb	r3, [r3, #2]
 801e656:	7800      	ldrb	r0, [r0, #0]
 801e658:	9011      	str	r0, [sp, #68]	; 0x44
 801e65a:	021b      	lsls	r3, r3, #8
 801e65c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801e660:	9a07      	ldr	r2, [sp, #28]
 801e662:	78d2      	ldrb	r2, [r2, #3]
 801e664:	4313      	orrs	r3, r2
 801e666:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e668:	3001      	adds	r0, #1
 801e66a:	441a      	add	r2, r3
 801e66c:	9005      	str	r0, [sp, #20]
 801e66e:	1c50      	adds	r0, r2, #1
 801e670:	9003      	str	r0, [sp, #12]
 801e672:	7852      	ldrb	r2, [r2, #1]
 801e674:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e676:	0212      	lsls	r2, r2, #8
 801e678:	5cc3      	ldrb	r3, [r0, r3]
 801e67a:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801e67e:	431a      	orrs	r2, r3
 801e680:	b293      	uxth	r3, r2
 801e682:	930c      	str	r3, [sp, #48]	; 0x30
 801e684:	2300      	movs	r3, #0
 801e686:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801e68a:	9308      	str	r3, [sp, #32]
 801e68c:	461a      	mov	r2, r3
 801e68e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801e692:	930e      	str	r3, [sp, #56]	; 0x38
 801e694:	f04f 0801 	mov.w	r8, #1
 801e698:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801e69c:	f8cd 8008 	str.w	r8, [sp, #8]
 801e6a0:	46c4      	mov	ip, r8
 801e6a2:	930f      	str	r3, [sp, #60]	; 0x3c
 801e6a4:	2d00      	cmp	r5, #0
 801e6a6:	d07c      	beq.n	801e7a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801e6a8:	45ac      	cmp	ip, r5
 801e6aa:	d26c      	bcs.n	801e786 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801e6ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e6ae:	eba5 050c 	sub.w	r5, r5, ip
 801e6b2:	455b      	cmp	r3, fp
 801e6b4:	b2ad      	uxth	r5, r5
 801e6b6:	4608      	mov	r0, r1
 801e6b8:	d802      	bhi.n	801e6c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801e6ba:	e070      	b.n	801e79e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801e6bc:	2b00      	cmp	r3, #0
 801e6be:	d15c      	bne.n	801e77a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801e6c0:	9b03      	ldr	r3, [sp, #12]
 801e6c2:	9a02      	ldr	r2, [sp, #8]
 801e6c4:	785b      	ldrb	r3, [r3, #1]
 801e6c6:	9902      	ldr	r1, [sp, #8]
 801e6c8:	f1c2 0207 	rsb	r2, r2, #7
 801e6cc:	4093      	lsls	r3, r2
 801e6ce:	005b      	lsls	r3, r3, #1
 801e6d0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801e6d4:	9b03      	ldr	r3, [sp, #12]
 801e6d6:	781b      	ldrb	r3, [r3, #0]
 801e6d8:	410b      	asrs	r3, r1
 801e6da:	3101      	adds	r1, #1
 801e6dc:	b2c9      	uxtb	r1, r1
 801e6de:	2908      	cmp	r1, #8
 801e6e0:	9102      	str	r1, [sp, #8]
 801e6e2:	9903      	ldr	r1, [sp, #12]
 801e6e4:	bf0a      	itet	eq
 801e6e6:	3102      	addeq	r1, #2
 801e6e8:	3101      	addne	r1, #1
 801e6ea:	9103      	streq	r1, [sp, #12]
 801e6ec:	b2db      	uxtb	r3, r3
 801e6ee:	bf0a      	itet	eq
 801e6f0:	2100      	moveq	r1, #0
 801e6f2:	9103      	strne	r1, [sp, #12]
 801e6f4:	9102      	streq	r1, [sp, #8]
 801e6f6:	4313      	orrs	r3, r2
 801e6f8:	9911      	ldr	r1, [sp, #68]	; 0x44
 801e6fa:	b29a      	uxth	r2, r3
 801e6fc:	4291      	cmp	r1, r2
 801e6fe:	d30a      	bcc.n	801e716 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801e700:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801e704:	2301      	movs	r3, #1
 801e706:	9905      	ldr	r1, [sp, #20]
 801e708:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801e70c:	d30f      	bcc.n	801e72e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801e70e:	2100      	movs	r1, #0
 801e710:	4698      	mov	r8, r3
 801e712:	9100      	str	r1, [sp, #0]
 801e714:	e032      	b.n	801e77c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801e716:	9b05      	ldr	r3, [sp, #20]
 801e718:	429a      	cmp	r2, r3
 801e71a:	d318      	bcc.n	801e74e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801e71c:	eb04 0308 	add.w	r3, r4, r8
 801e720:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801e724:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801e728:	f108 0301 	add.w	r3, r8, #1
 801e72c:	b29b      	uxth	r3, r3
 801e72e:	9905      	ldr	r1, [sp, #20]
 801e730:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801e734:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801e738:	710e      	strb	r6, [r1, #4]
 801e73a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801e73c:	80ce      	strh	r6, [r1, #6]
 801e73e:	f108 0601 	add.w	r6, r8, #1
 801e742:	714e      	strb	r6, [r1, #5]
 801e744:	9905      	ldr	r1, [sp, #20]
 801e746:	3101      	adds	r1, #1
 801e748:	b289      	uxth	r1, r1
 801e74a:	9105      	str	r1, [sp, #20]
 801e74c:	e7df      	b.n	801e70e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801e74e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801e752:	4611      	mov	r1, r2
 801e754:	795b      	ldrb	r3, [r3, #5]
 801e756:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801e75a:	4426      	add	r6, r4
 801e75c:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801e75e:	4437      	add	r7, r6
 801e760:	2f00      	cmp	r7, #0
 801e762:	dd06      	ble.n	801e772 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801e764:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801e768:	790f      	ldrb	r7, [r1, #4]
 801e76a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801e76e:	88c9      	ldrh	r1, [r1, #6]
 801e770:	e7f4      	b.n	801e75c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801e772:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801e776:	b29b      	uxth	r3, r3
 801e778:	e7c5      	b.n	801e706 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801e77a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e77c:	920c      	str	r2, [sp, #48]	; 0x30
 801e77e:	4601      	mov	r1, r0
 801e780:	9a00      	ldr	r2, [sp, #0]
 801e782:	469c      	mov	ip, r3
 801e784:	e78e      	b.n	801e6a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801e786:	1957      	adds	r7, r2, r5
 801e788:	ebac 0305 	sub.w	r3, ip, r5
 801e78c:	b2ba      	uxth	r2, r7
 801e78e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801e792:	9200      	str	r2, [sp, #0]
 801e794:	b29b      	uxth	r3, r3
 801e796:	2500      	movs	r5, #0
 801e798:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e79a:	455a      	cmp	r2, fp
 801e79c:	d88e      	bhi.n	801e6bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801e79e:	4601      	mov	r1, r0
 801e7a0:	e749      	b.n	801e636 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801e7a2:	458c      	cmp	ip, r1
 801e7a4:	bf2c      	ite	cs
 801e7a6:	4628      	movcs	r0, r5
 801e7a8:	462b      	movcc	r3, r5
 801e7aa:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801e7ac:	bf27      	ittee	cs
 801e7ae:	9109      	strcs	r1, [sp, #36]	; 0x24
 801e7b0:	ebac 0301 	subcs.w	r3, ip, r1
 801e7b4:	eba1 000c 	subcc.w	r0, r1, ip
 801e7b8:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801e7bc:	bf2c      	ite	cs
 801e7be:	b29b      	uxthcs	r3, r3
 801e7c0:	b280      	uxthcc	r0, r0
 801e7c2:	2dff      	cmp	r5, #255	; 0xff
 801e7c4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e7c6:	eb02 0705 	add.w	r7, r2, r5
 801e7ca:	b2bd      	uxth	r5, r7
 801e7cc:	9500      	str	r5, [sp, #0]
 801e7ce:	d12f      	bne.n	801e830 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801e7d0:	465e      	mov	r6, fp
 801e7d2:	9d00      	ldr	r5, [sp, #0]
 801e7d4:	42aa      	cmp	r2, r5
 801e7d6:	f040 8084 	bne.w	801e8e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801e7da:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e7dc:	458c      	cmp	ip, r1
 801e7de:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801e7e2:	d3d8      	bcc.n	801e796 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801e7e4:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801e7e6:	9904      	ldr	r1, [sp, #16]
 801e7e8:	8812      	ldrh	r2, [r2, #0]
 801e7ea:	1a52      	subs	r2, r2, r1
 801e7ec:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801e7f0:	9a08      	ldr	r2, [sp, #32]
 801e7f2:	9916      	ldr	r1, [sp, #88]	; 0x58
 801e7f4:	3201      	adds	r2, #1
 801e7f6:	428a      	cmp	r2, r1
 801e7f8:	9208      	str	r2, [sp, #32]
 801e7fa:	f040 8092 	bne.w	801e922 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801e7fe:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801e802:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801e806:	9b04      	ldr	r3, [sp, #16]
 801e808:	eba5 050c 	sub.w	r5, r5, ip
 801e80c:	b2ad      	uxth	r5, r5
 801e80e:	2d00      	cmp	r5, #0
 801e810:	bf08      	it	eq
 801e812:	4619      	moveq	r1, r3
 801e814:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e816:	bf18      	it	ne
 801e818:	2100      	movne	r1, #0
 801e81a:	3301      	adds	r3, #1
 801e81c:	930d      	str	r3, [sp, #52]	; 0x34
 801e81e:	b289      	uxth	r1, r1
 801e820:	e700      	b.n	801e624 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801e822:	bf00      	nop
 801e824:	2000e1c0 	.word	0x2000e1c0
 801e828:	2000e1ba 	.word	0x2000e1ba
 801e82c:	fffff7fb 	.word	0xfffff7fb
 801e830:	46d9      	mov	r9, fp
 801e832:	9d00      	ldr	r5, [sp, #0]
 801e834:	42aa      	cmp	r2, r5
 801e836:	d0d0      	beq.n	801e7da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801e838:	1c55      	adds	r5, r2, #1
 801e83a:	4422      	add	r2, r4
 801e83c:	9517      	str	r5, [sp, #92]	; 0x5c
 801e83e:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801e842:	9a06      	ldr	r2, [sp, #24]
 801e844:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801e848:	4472      	add	r2, lr
 801e84a:	9212      	str	r2, [sp, #72]	; 0x48
 801e84c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801e84e:	f8b9 2000 	ldrh.w	r2, [r9]
 801e852:	f897 a002 	ldrb.w	sl, [r7, #2]
 801e856:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e858:	1216      	asrs	r6, r2, #8
 801e85a:	fb1a fa07 	smulbb	sl, sl, r7
 801e85e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e862:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e864:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e868:	fb06 a607 	mla	r6, r6, r7, sl
 801e86c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801e86e:	f897 a001 	ldrb.w	sl, [r7, #1]
 801e872:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e874:	10d5      	asrs	r5, r2, #3
 801e876:	fb1a fa07 	smulbb	sl, sl, r7
 801e87a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e87e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e880:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e884:	fb05 a507 	mla	r5, r5, r7, sl
 801e888:	9f06      	ldr	r7, [sp, #24]
 801e88a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e88e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e890:	00d2      	lsls	r2, r2, #3
 801e892:	fb1e fe07 	smulbb	lr, lr, r7
 801e896:	b2d2      	uxtb	r2, r2
 801e898:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e89a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e89e:	b2b6      	uxth	r6, r6
 801e8a0:	fb02 e207 	mla	r2, r2, r7, lr
 801e8a4:	b292      	uxth	r2, r2
 801e8a6:	b2ad      	uxth	r5, r5
 801e8a8:	f106 0a01 	add.w	sl, r6, #1
 801e8ac:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801e8b0:	f102 0e01 	add.w	lr, r2, #1
 801e8b4:	f105 0a01 	add.w	sl, r5, #1
 801e8b8:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801e8bc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e8c0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801e8c4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e8c8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e8cc:	ea4e 0606 	orr.w	r6, lr, r6
 801e8d0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e8d4:	ea46 060a 	orr.w	r6, r6, sl
 801e8d8:	f829 6b02 	strh.w	r6, [r9], #2
 801e8dc:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801e8e0:	e7a7      	b.n	801e832 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801e8e2:	f102 0e01 	add.w	lr, r2, #1
 801e8e6:	4422      	add	r2, r4
 801e8e8:	9f06      	ldr	r7, [sp, #24]
 801e8ea:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801e8ee:	9a06      	ldr	r2, [sp, #24]
 801e8f0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e8f4:	eb02 0a05 	add.w	sl, r2, r5
 801e8f8:	4a13      	ldr	r2, [pc, #76]	; (801e948 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801e8fa:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801e8fe:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801e902:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e906:	00d2      	lsls	r2, r2, #3
 801e908:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e90c:	ea49 0202 	orr.w	r2, r9, r2
 801e910:	f817 9005 	ldrb.w	r9, [r7, r5]
 801e914:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801e918:	f826 2b02 	strh.w	r2, [r6], #2
 801e91c:	fa1f f28e 	uxth.w	r2, lr
 801e920:	e757      	b.n	801e7d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801e922:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801e926:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801e92a:	1a2d      	subs	r5, r5, r0
 801e92c:	b2ad      	uxth	r5, r5
 801e92e:	2d00      	cmp	r5, #0
 801e930:	bf18      	it	ne
 801e932:	2000      	movne	r0, #0
 801e934:	e730      	b.n	801e798 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801e936:	4b05      	ldr	r3, [pc, #20]	; (801e94c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801e938:	6818      	ldr	r0, [r3, #0]
 801e93a:	6803      	ldr	r3, [r0, #0]
 801e93c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e93e:	4798      	blx	r3
 801e940:	b01f      	add	sp, #124	; 0x7c
 801e942:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e946:	bf00      	nop
 801e948:	fffff800 	.word	0xfffff800
 801e94c:	2000e1c0 	.word	0x2000e1c0

0801e950 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801e950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e954:	b091      	sub	sp, #68	; 0x44
 801e956:	469b      	mov	fp, r3
 801e958:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801e95c:	4616      	mov	r6, r2
 801e95e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801e962:	f9b3 2000 	ldrsh.w	r2, [r3]
 801e966:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801e96a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801e96e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801e972:	4604      	mov	r4, r0
 801e974:	460d      	mov	r5, r1
 801e976:	4640      	mov	r0, r8
 801e978:	4659      	mov	r1, fp
 801e97a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801e97e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801e982:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801e986:	f7f3 fe29 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 801e98a:	4631      	mov	r1, r6
 801e98c:	4640      	mov	r0, r8
 801e98e:	f7f3 fe25 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 801e992:	4b74      	ldr	r3, [pc, #464]	; (801eb64 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801e994:	8818      	ldrh	r0, [r3, #0]
 801e996:	4b74      	ldr	r3, [pc, #464]	; (801eb68 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801e998:	8819      	ldrh	r1, [r3, #0]
 801e99a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e99e:	2b00      	cmp	r3, #0
 801e9a0:	b202      	sxth	r2, r0
 801e9a2:	b20e      	sxth	r6, r1
 801e9a4:	da07      	bge.n	801e9b6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801e9a6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801e9aa:	4463      	add	r3, ip
 801e9ac:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801e9b0:	2300      	movs	r3, #0
 801e9b2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801e9b6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e9ba:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801e9be:	1ad2      	subs	r2, r2, r3
 801e9c0:	4594      	cmp	ip, r2
 801e9c2:	bfc4      	itt	gt
 801e9c4:	1ac2      	subgt	r2, r0, r3
 801e9c6:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801e9ca:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e9ce:	2a00      	cmp	r2, #0
 801e9d0:	da07      	bge.n	801e9e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801e9d2:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801e9d6:	4462      	add	r2, ip
 801e9d8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801e9dc:	2200      	movs	r2, #0
 801e9de:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801e9e2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801e9e6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801e9ea:	eba6 060a 	sub.w	r6, r6, sl
 801e9ee:	42b2      	cmp	r2, r6
 801e9f0:	bfc4      	itt	gt
 801e9f2:	eba1 020a 	subgt.w	r2, r1, sl
 801e9f6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801e9fa:	4a5c      	ldr	r2, [pc, #368]	; (801eb6c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801e9fc:	7812      	ldrb	r2, [r2, #0]
 801e9fe:	b9a2      	cbnz	r2, 801ea2a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801ea00:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801ea04:	4286      	cmp	r6, r0
 801ea06:	4640      	mov	r0, r8
 801ea08:	9303      	str	r3, [sp, #12]
 801ea0a:	bf14      	ite	ne
 801ea0c:	2600      	movne	r6, #0
 801ea0e:	2601      	moveq	r6, #1
 801ea10:	f7f3 fe27 	bl	8012662 <_ZNK8touchgfx4Rect7isEmptyEv>
 801ea14:	9b03      	ldr	r3, [sp, #12]
 801ea16:	b160      	cbz	r0, 801ea32 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801ea18:	2300      	movs	r3, #0
 801ea1a:	8023      	strh	r3, [r4, #0]
 801ea1c:	8063      	strh	r3, [r4, #2]
 801ea1e:	80a3      	strh	r3, [r4, #4]
 801ea20:	4620      	mov	r0, r4
 801ea22:	80e3      	strh	r3, [r4, #6]
 801ea24:	b011      	add	sp, #68	; 0x44
 801ea26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ea2a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801ea2e:	428e      	cmp	r6, r1
 801ea30:	e7e9      	b.n	801ea06 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801ea32:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801ea36:	9205      	str	r2, [sp, #20]
 801ea38:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801ea3c:	9206      	str	r2, [sp, #24]
 801ea3e:	f8bb 2000 	ldrh.w	r2, [fp]
 801ea42:	900e      	str	r0, [sp, #56]	; 0x38
 801ea44:	1a9b      	subs	r3, r3, r2
 801ea46:	b21b      	sxth	r3, r3
 801ea48:	9303      	str	r3, [sp, #12]
 801ea4a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801ea4e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801ea52:	ebaa 0a03 	sub.w	sl, sl, r3
 801ea56:	fa0f f38a 	sxth.w	r3, sl
 801ea5a:	9304      	str	r3, [sp, #16]
 801ea5c:	9b03      	ldr	r3, [sp, #12]
 801ea5e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801ea62:	9b04      	ldr	r3, [sp, #16]
 801ea64:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801ea68:	9b05      	ldr	r3, [sp, #20]
 801ea6a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801ea6e:	a90e      	add	r1, sp, #56	; 0x38
 801ea70:	9b06      	ldr	r3, [sp, #24]
 801ea72:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801ea76:	a80c      	add	r0, sp, #48	; 0x30
 801ea78:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801ea7c:	f7f8 fbae 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ea80:	4640      	mov	r0, r8
 801ea82:	f7f8 fb67 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ea86:	a80e      	add	r0, sp, #56	; 0x38
 801ea88:	f7f8 fb64 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ea8c:	4b38      	ldr	r3, [pc, #224]	; (801eb70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801ea8e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801ea92:	881b      	ldrh	r3, [r3, #0]
 801ea94:	9307      	str	r3, [sp, #28]
 801ea96:	682b      	ldr	r3, [r5, #0]
 801ea98:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801eb74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801ea9c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ea9e:	4628      	mov	r0, r5
 801eaa0:	4798      	blx	r3
 801eaa2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801eaa6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801eaaa:	4681      	mov	r9, r0
 801eaac:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801eab0:	f8db 0000 	ldr.w	r0, [fp]
 801eab4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801eab6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801eaba:	6803      	ldr	r3, [r0, #0]
 801eabc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801eabe:	4798      	blx	r3
 801eac0:	4607      	mov	r7, r0
 801eac2:	f8db 0000 	ldr.w	r0, [fp]
 801eac6:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801eaca:	6803      	ldr	r3, [r0, #0]
 801eacc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801ead0:	9109      	str	r1, [sp, #36]	; 0x24
 801ead2:	9208      	str	r2, [sp, #32]
 801ead4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ead6:	4798      	blx	r3
 801ead8:	f010 0f01 	tst.w	r0, #1
 801eadc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801eae0:	d012      	beq.n	801eb08 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801eae2:	f8db 0000 	ldr.w	r0, [fp]
 801eae6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801eaea:	6803      	ldr	r3, [r0, #0]
 801eaec:	9200      	str	r2, [sp, #0]
 801eaee:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801eaf0:	e898 0006 	ldmia.w	r8, {r1, r2}
 801eaf4:	462b      	mov	r3, r5
 801eaf6:	47b0      	blx	r6
 801eaf8:	9b03      	ldr	r3, [sp, #12]
 801eafa:	8023      	strh	r3, [r4, #0]
 801eafc:	9b04      	ldr	r3, [sp, #16]
 801eafe:	8063      	strh	r3, [r4, #2]
 801eb00:	9b05      	ldr	r3, [sp, #20]
 801eb02:	80a3      	strh	r3, [r4, #4]
 801eb04:	9b06      	ldr	r3, [sp, #24]
 801eb06:	e78b      	b.n	801ea20 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801eb08:	fb09 f202 	mul.w	r2, r9, r2
 801eb0c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801eb10:	440f      	add	r7, r1
 801eb12:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801eb16:	b166      	cbz	r6, 801eb32 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801eb18:	9a07      	ldr	r2, [sp, #28]
 801eb1a:	4592      	cmp	sl, r2
 801eb1c:	d109      	bne.n	801eb32 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801eb1e:	f8db 0000 	ldr.w	r0, [fp]
 801eb22:	6802      	ldr	r2, [r0, #0]
 801eb24:	fb09 f303 	mul.w	r3, r9, r3
 801eb28:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801eb2a:	4629      	mov	r1, r5
 801eb2c:	463a      	mov	r2, r7
 801eb2e:	47b0      	blx	r6
 801eb30:	e7e2      	b.n	801eaf8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801eb32:	fb0a f303 	mul.w	r3, sl, r3
 801eb36:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801eb74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801eb3a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801eb3e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801eb42:	4545      	cmp	r5, r8
 801eb44:	d2d8      	bcs.n	801eaf8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801eb46:	f8db 0000 	ldr.w	r0, [fp]
 801eb4a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801eb4e:	6802      	ldr	r2, [r0, #0]
 801eb50:	4629      	mov	r1, r5
 801eb52:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801eb56:	005b      	lsls	r3, r3, #1
 801eb58:	463a      	mov	r2, r7
 801eb5a:	47d0      	blx	sl
 801eb5c:	444f      	add	r7, r9
 801eb5e:	4435      	add	r5, r6
 801eb60:	e7ef      	b.n	801eb42 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801eb62:	bf00      	nop
 801eb64:	2000e1b4 	.word	0x2000e1b4
 801eb68:	2000e1b6 	.word	0x2000e1b6
 801eb6c:	2000e1b8 	.word	0x2000e1b8
 801eb70:	2000e1ba 	.word	0x2000e1ba
 801eb74:	2000e1c0 	.word	0x2000e1c0

0801eb78 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801eb78:	b5f0      	push	{r4, r5, r6, r7, lr}
 801eb7a:	4606      	mov	r6, r0
 801eb7c:	b087      	sub	sp, #28
 801eb7e:	460c      	mov	r4, r1
 801eb80:	4617      	mov	r7, r2
 801eb82:	461d      	mov	r5, r3
 801eb84:	b333      	cbz	r3, 801ebd4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801eb86:	4608      	mov	r0, r1
 801eb88:	f7f3 fd6b 	bl	8012662 <_ZNK8touchgfx4Rect7isEmptyEv>
 801eb8c:	bb10      	cbnz	r0, 801ebd4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801eb8e:	6820      	ldr	r0, [r4, #0]
 801eb90:	6861      	ldr	r1, [r4, #4]
 801eb92:	4c1c      	ldr	r4, [pc, #112]	; (801ec04 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801eb94:	ab04      	add	r3, sp, #16
 801eb96:	c303      	stmia	r3!, {r0, r1}
 801eb98:	a804      	add	r0, sp, #16
 801eb9a:	f7f8 fadb 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801eb9e:	6820      	ldr	r0, [r4, #0]
 801eba0:	6803      	ldr	r3, [r0, #0]
 801eba2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801eba4:	4798      	blx	r3
 801eba6:	2dff      	cmp	r5, #255	; 0xff
 801eba8:	d016      	beq.n	801ebd8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801ebaa:	f010 0f08 	tst.w	r0, #8
 801ebae:	6820      	ldr	r0, [r4, #0]
 801ebb0:	d015      	beq.n	801ebde <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801ebb2:	2400      	movs	r4, #0
 801ebb4:	6801      	ldr	r1, [r0, #0]
 801ebb6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801ebba:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ebbe:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801ebc2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801ebc6:	9401      	str	r4, [sp, #4]
 801ebc8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801ebcc:	9400      	str	r4, [sp, #0]
 801ebce:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801ebd0:	4639      	mov	r1, r7
 801ebd2:	47a0      	blx	r4
 801ebd4:	b007      	add	sp, #28
 801ebd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801ebd8:	f010 0f02 	tst.w	r0, #2
 801ebdc:	e7e7      	b.n	801ebae <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801ebde:	6803      	ldr	r3, [r0, #0]
 801ebe0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ebe2:	4798      	blx	r3
 801ebe4:	4b08      	ldr	r3, [pc, #32]	; (801ec08 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801ebe6:	881a      	ldrh	r2, [r3, #0]
 801ebe8:	6833      	ldr	r3, [r6, #0]
 801ebea:	e9cd 7500 	strd	r7, r5, [sp]
 801ebee:	4601      	mov	r1, r0
 801ebf0:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801ebf2:	4630      	mov	r0, r6
 801ebf4:	ab04      	add	r3, sp, #16
 801ebf6:	47a8      	blx	r5
 801ebf8:	6820      	ldr	r0, [r4, #0]
 801ebfa:	6803      	ldr	r3, [r0, #0]
 801ebfc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ebfe:	4798      	blx	r3
 801ec00:	e7e8      	b.n	801ebd4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801ec02:	bf00      	nop
 801ec04:	2000e1c0 	.word	0x2000e1c0
 801ec08:	2000e1ba 	.word	0x2000e1ba

0801ec0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801ec0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ec10:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801ec14:	9e08      	ldr	r6, [sp, #32]
 801ec16:	4688      	mov	r8, r1
 801ec18:	4614      	mov	r4, r2
 801ec1a:	461d      	mov	r5, r3
 801ec1c:	2f00      	cmp	r7, #0
 801ec1e:	f000 80a9 	beq.w	801ed74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ec22:	4618      	mov	r0, r3
 801ec24:	f7f3 fd1d 	bl	8012662 <_ZNK8touchgfx4Rect7isEmptyEv>
 801ec28:	2800      	cmp	r0, #0
 801ec2a:	f040 80a3 	bne.w	801ed74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ec2e:	f9b5 1000 	ldrsh.w	r1, [r5]
 801ec32:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801ec36:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801ec3a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801ec3e:	fb04 1303 	mla	r3, r4, r3, r1
 801ec42:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801ec46:	4365      	muls	r5, r4
 801ec48:	2fff      	cmp	r7, #255	; 0xff
 801ec4a:	eba4 0200 	sub.w	r2, r4, r0
 801ec4e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801ec52:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801ec56:	d04a      	beq.n	801ecee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801ec58:	b2bc      	uxth	r4, r7
 801ec5a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801ec5e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801ec62:	fa5f f788 	uxtb.w	r7, r8
 801ec66:	b2f3      	uxtb	r3, r6
 801ec68:	0040      	lsls	r0, r0, #1
 801ec6a:	fb0e fe04 	mul.w	lr, lr, r4
 801ec6e:	4367      	muls	r7, r4
 801ec70:	4363      	muls	r3, r4
 801ec72:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801ec76:	fa1f fc8c 	uxth.w	ip, ip
 801ec7a:	42a9      	cmp	r1, r5
 801ec7c:	d27a      	bcs.n	801ed74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ec7e:	eb01 0900 	add.w	r9, r1, r0
 801ec82:	4549      	cmp	r1, r9
 801ec84:	d231      	bcs.n	801ecea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801ec86:	880a      	ldrh	r2, [r1, #0]
 801ec88:	1214      	asrs	r4, r2, #8
 801ec8a:	10d6      	asrs	r6, r2, #3
 801ec8c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801ec90:	00d2      	lsls	r2, r2, #3
 801ec92:	b2d2      	uxtb	r2, r2
 801ec94:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801ec98:	fb14 f40c 	smulbb	r4, r4, ip
 801ec9c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801eca0:	4474      	add	r4, lr
 801eca2:	fb12 f20c 	smulbb	r2, r2, ip
 801eca6:	b2a4      	uxth	r4, r4
 801eca8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ecac:	441a      	add	r2, r3
 801ecae:	b292      	uxth	r2, r2
 801ecb0:	f104 0a01 	add.w	sl, r4, #1
 801ecb4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801ecb8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801ecbc:	fb16 f60c 	smulbb	r6, r6, ip
 801ecc0:	f102 0a01 	add.w	sl, r2, #1
 801ecc4:	443e      	add	r6, r7
 801ecc6:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801ecca:	b2b6      	uxth	r6, r6
 801eccc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801ecd0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ecd4:	4322      	orrs	r2, r4
 801ecd6:	1c74      	adds	r4, r6, #1
 801ecd8:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801ecdc:	0976      	lsrs	r6, r6, #5
 801ecde:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ece2:	4332      	orrs	r2, r6
 801ece4:	f821 2b02 	strh.w	r2, [r1], #2
 801ece8:	e7cb      	b.n	801ec82 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801ecea:	4441      	add	r1, r8
 801ecec:	e7c5      	b.n	801ec7a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801ecee:	4f22      	ldr	r7, [pc, #136]	; (801ed78 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801ecf0:	0973      	lsrs	r3, r6, #5
 801ecf2:	ea08 0707 	and.w	r7, r8, r7
 801ecf6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ecfa:	433b      	orrs	r3, r7
 801ecfc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ed00:	4333      	orrs	r3, r6
 801ed02:	07e7      	lsls	r7, r4, #31
 801ed04:	b29b      	uxth	r3, r3
 801ed06:	d50b      	bpl.n	801ed20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801ed08:	0040      	lsls	r0, r0, #1
 801ed0a:	0052      	lsls	r2, r2, #1
 801ed0c:	42a9      	cmp	r1, r5
 801ed0e:	d231      	bcs.n	801ed74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ed10:	180c      	adds	r4, r1, r0
 801ed12:	42a1      	cmp	r1, r4
 801ed14:	d202      	bcs.n	801ed1c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801ed16:	f821 3b02 	strh.w	r3, [r1], #2
 801ed1a:	e7fa      	b.n	801ed12 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801ed1c:	4411      	add	r1, r2
 801ed1e:	e7f5      	b.n	801ed0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801ed20:	078e      	lsls	r6, r1, #30
 801ed22:	d008      	beq.n	801ed36 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801ed24:	0066      	lsls	r6, r4, #1
 801ed26:	460a      	mov	r2, r1
 801ed28:	42aa      	cmp	r2, r5
 801ed2a:	d202      	bcs.n	801ed32 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801ed2c:	8013      	strh	r3, [r2, #0]
 801ed2e:	4432      	add	r2, r6
 801ed30:	e7fa      	b.n	801ed28 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801ed32:	3102      	adds	r1, #2
 801ed34:	3801      	subs	r0, #1
 801ed36:	07c2      	lsls	r2, r0, #31
 801ed38:	d50b      	bpl.n	801ed52 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801ed3a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801ed3e:	3a01      	subs	r2, #1
 801ed40:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801ed44:	0066      	lsls	r6, r4, #1
 801ed46:	42aa      	cmp	r2, r5
 801ed48:	d202      	bcs.n	801ed50 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801ed4a:	8013      	strh	r3, [r2, #0]
 801ed4c:	4432      	add	r2, r6
 801ed4e:	e7fa      	b.n	801ed46 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801ed50:	3801      	subs	r0, #1
 801ed52:	b178      	cbz	r0, 801ed74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ed54:	1040      	asrs	r0, r0, #1
 801ed56:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801ed5a:	0080      	lsls	r0, r0, #2
 801ed5c:	0064      	lsls	r4, r4, #1
 801ed5e:	42a9      	cmp	r1, r5
 801ed60:	d208      	bcs.n	801ed74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ed62:	180e      	adds	r6, r1, r0
 801ed64:	460a      	mov	r2, r1
 801ed66:	42b2      	cmp	r2, r6
 801ed68:	d202      	bcs.n	801ed70 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801ed6a:	f842 3b04 	str.w	r3, [r2], #4
 801ed6e:	e7fa      	b.n	801ed66 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801ed70:	4421      	add	r1, r4
 801ed72:	e7f4      	b.n	801ed5e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801ed74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ed78:	00fff800 	.word	0x00fff800

0801ed7c <_ZN8touchgfx8LCD16bppC1Ev>:
 801ed7c:	2200      	movs	r2, #0
 801ed7e:	4912      	ldr	r1, [pc, #72]	; (801edc8 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801ed80:	6042      	str	r2, [r0, #4]
 801ed82:	6001      	str	r1, [r0, #0]
 801ed84:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801ed88:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801ed8c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801ed90:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801ed94:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801ed98:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801ed9c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801eda0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801eda4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801eda8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801edac:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801edb0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801edb4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801edb8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801edbc:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801edc0:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801edc4:	4770      	bx	lr
 801edc6:	bf00      	nop
 801edc8:	0802d178 	.word	0x0802d178

0801edcc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801edcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801edd0:	460d      	mov	r5, r1
 801edd2:	b08d      	sub	sp, #52	; 0x34
 801edd4:	4604      	mov	r4, r0
 801edd6:	6808      	ldr	r0, [r1, #0]
 801edd8:	6849      	ldr	r1, [r1, #4]
 801edda:	4699      	mov	r9, r3
 801eddc:	ab08      	add	r3, sp, #32
 801edde:	c303      	stmia	r3!, {r0, r1}
 801ede0:	6810      	ldr	r0, [r2, #0]
 801ede2:	6851      	ldr	r1, [r2, #4]
 801ede4:	ab0a      	add	r3, sp, #40	; 0x28
 801ede6:	c303      	stmia	r3!, {r0, r1}
 801ede8:	a808      	add	r0, sp, #32
 801edea:	f7f8 f9b3 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801edee:	4629      	mov	r1, r5
 801edf0:	a80a      	add	r0, sp, #40	; 0x28
 801edf2:	f7f8 f9f3 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801edf6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801edfa:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801edfe:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801ee02:	4d63      	ldr	r5, [pc, #396]	; (801ef90 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ee04:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801ee08:	6828      	ldr	r0, [r5, #0]
 801ee0a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801ee0e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ee12:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801ee16:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801ee1a:	440a      	add	r2, r1
 801ee1c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801ee20:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801ee24:	4413      	add	r3, r2
 801ee26:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801ee2a:	6803      	ldr	r3, [r0, #0]
 801ee2c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ee2e:	4798      	blx	r3
 801ee30:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ee34:	d119      	bne.n	801ee6a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801ee36:	f010 0f20 	tst.w	r0, #32
 801ee3a:	6828      	ldr	r0, [r5, #0]
 801ee3c:	d018      	beq.n	801ee70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801ee3e:	2500      	movs	r5, #0
 801ee40:	6801      	ldr	r1, [r0, #0]
 801ee42:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ee46:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801ee4a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801ee4e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801ee52:	9502      	str	r5, [sp, #8]
 801ee54:	b2b6      	uxth	r6, r6
 801ee56:	fa1f f588 	uxth.w	r5, r8
 801ee5a:	9601      	str	r6, [sp, #4]
 801ee5c:	9500      	str	r5, [sp, #0]
 801ee5e:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801ee60:	4621      	mov	r1, r4
 801ee62:	47a8      	blx	r5
 801ee64:	b00d      	add	sp, #52	; 0x34
 801ee66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee6a:	f010 0f40 	tst.w	r0, #64	; 0x40
 801ee6e:	e7e4      	b.n	801ee3a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801ee70:	6803      	ldr	r3, [r0, #0]
 801ee72:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ee74:	4798      	blx	r3
 801ee76:	4947      	ldr	r1, [pc, #284]	; (801ef94 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801ee78:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801ee7c:	880b      	ldrh	r3, [r1, #0]
 801ee7e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801ee82:	fb03 5202 	mla	r2, r3, r2, r5
 801ee86:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ee8a:	4373      	muls	r3, r6
 801ee8c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ee90:	9307      	str	r3, [sp, #28]
 801ee92:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801ee96:	9306      	str	r3, [sp, #24]
 801ee98:	468a      	mov	sl, r1
 801ee9a:	9b07      	ldr	r3, [sp, #28]
 801ee9c:	4298      	cmp	r0, r3
 801ee9e:	d270      	bcs.n	801ef82 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801eea0:	9b06      	ldr	r3, [sp, #24]
 801eea2:	4621      	mov	r1, r4
 801eea4:	eb00 0b03 	add.w	fp, r0, r3
 801eea8:	4558      	cmp	r0, fp
 801eeaa:	d25d      	bcs.n	801ef68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801eeac:	f851 4b04 	ldr.w	r4, [r1], #4
 801eeb0:	0e23      	lsrs	r3, r4, #24
 801eeb2:	d014      	beq.n	801eede <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801eeb4:	2bff      	cmp	r3, #255	; 0xff
 801eeb6:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801eeba:	d112      	bne.n	801eee2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801eebc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801eec0:	d10f      	bne.n	801eee2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801eec2:	0963      	lsrs	r3, r4, #5
 801eec4:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801eec8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eecc:	f02c 0c07 	bic.w	ip, ip, #7
 801eed0:	ea43 0c0c 	orr.w	ip, r3, ip
 801eed4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801eed8:	ea4c 0404 	orr.w	r4, ip, r4
 801eedc:	8004      	strh	r4, [r0, #0]
 801eede:	3002      	adds	r0, #2
 801eee0:	e7e2      	b.n	801eea8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801eee2:	fb09 f303 	mul.w	r3, r9, r3
 801eee6:	8807      	ldrh	r7, [r0, #0]
 801eee8:	1c5a      	adds	r2, r3, #1
 801eeea:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801eeee:	1212      	asrs	r2, r2, #8
 801eef0:	123e      	asrs	r6, r7, #8
 801eef2:	b293      	uxth	r3, r2
 801eef4:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801eef8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801eefc:	43d2      	mvns	r2, r2
 801eefe:	b2d2      	uxtb	r2, r2
 801ef00:	10fd      	asrs	r5, r7, #3
 801ef02:	fb1e fe03 	smulbb	lr, lr, r3
 801ef06:	00ff      	lsls	r7, r7, #3
 801ef08:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ef0c:	fb06 e602 	mla	r6, r6, r2, lr
 801ef10:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ef14:	b2ff      	uxtb	r7, r7
 801ef16:	fa5f fc8c 	uxtb.w	ip, ip
 801ef1a:	b2e4      	uxtb	r4, r4
 801ef1c:	b2b6      	uxth	r6, r6
 801ef1e:	fb1c fc03 	smulbb	ip, ip, r3
 801ef22:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ef26:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801ef2a:	fb14 f403 	smulbb	r4, r4, r3
 801ef2e:	fb05 c502 	mla	r5, r5, r2, ip
 801ef32:	f106 0e01 	add.w	lr, r6, #1
 801ef36:	fb07 4702 	mla	r7, r7, r2, r4
 801ef3a:	b2ad      	uxth	r5, r5
 801ef3c:	b2bf      	uxth	r7, r7
 801ef3e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801ef42:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801ef46:	f105 0c01 	add.w	ip, r5, #1
 801ef4a:	1c7e      	adds	r6, r7, #1
 801ef4c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801ef50:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ef54:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ef58:	096d      	lsrs	r5, r5, #5
 801ef5a:	ea46 060e 	orr.w	r6, r6, lr
 801ef5e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ef62:	432e      	orrs	r6, r5
 801ef64:	8006      	strh	r6, [r0, #0]
 801ef66:	e7ba      	b.n	801eede <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ef68:	f8ba 3000 	ldrh.w	r3, [sl]
 801ef6c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801ef70:	eba3 0308 	sub.w	r3, r3, r8
 801ef74:	eba4 0408 	sub.w	r4, r4, r8
 801ef78:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ef7c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801ef80:	e78b      	b.n	801ee9a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801ef82:	4b03      	ldr	r3, [pc, #12]	; (801ef90 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ef84:	6818      	ldr	r0, [r3, #0]
 801ef86:	6803      	ldr	r3, [r0, #0]
 801ef88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ef8a:	4798      	blx	r3
 801ef8c:	e76a      	b.n	801ee64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801ef8e:	bf00      	nop
 801ef90:	2000e1c0 	.word	0x2000e1c0
 801ef94:	2000e1ba 	.word	0x2000e1ba

0801ef98 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801ef98:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ef9c:	460c      	mov	r4, r1
 801ef9e:	b085      	sub	sp, #20
 801efa0:	6810      	ldr	r0, [r2, #0]
 801efa2:	6851      	ldr	r1, [r2, #4]
 801efa4:	466d      	mov	r5, sp
 801efa6:	c503      	stmia	r5!, {r0, r1}
 801efa8:	6818      	ldr	r0, [r3, #0]
 801efaa:	6859      	ldr	r1, [r3, #4]
 801efac:	4616      	mov	r6, r2
 801efae:	c503      	stmia	r5!, {r0, r1}
 801efb0:	4668      	mov	r0, sp
 801efb2:	f7f8 f8cf 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801efb6:	4631      	mov	r1, r6
 801efb8:	a802      	add	r0, sp, #8
 801efba:	f7f8 f90f 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801efbe:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801efc2:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801efc6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801efca:	4d28      	ldr	r5, [pc, #160]	; (801f06c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801efcc:	4e28      	ldr	r6, [pc, #160]	; (801f070 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801efce:	6828      	ldr	r0, [r5, #0]
 801efd0:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801efd4:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801efd8:	fb11 2103 	smlabb	r1, r1, r3, r2
 801efdc:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801efe0:	f8bd 1000 	ldrh.w	r1, [sp]
 801efe4:	440a      	add	r2, r1
 801efe6:	f8ad 2008 	strh.w	r2, [sp, #8]
 801efea:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801efee:	4413      	add	r3, r2
 801eff0:	f8ad 300a 	strh.w	r3, [sp, #10]
 801eff4:	6803      	ldr	r3, [r0, #0]
 801eff6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801eff8:	4798      	blx	r3
 801effa:	8833      	ldrh	r3, [r6, #0]
 801effc:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801f000:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801f004:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801f074 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801f008:	fb03 1202 	mla	r2, r3, r2, r1
 801f00c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f010:	fb08 f303 	mul.w	r3, r8, r3
 801f014:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f018:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801f01c:	4298      	cmp	r0, r3
 801f01e:	d21d      	bcs.n	801f05c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801f020:	eb00 080c 	add.w	r8, r0, ip
 801f024:	4540      	cmp	r0, r8
 801f026:	d20f      	bcs.n	801f048 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801f028:	f854 1b04 	ldr.w	r1, [r4], #4
 801f02c:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801f030:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801f034:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f038:	ea42 0209 	orr.w	r2, r2, r9
 801f03c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801f040:	430a      	orrs	r2, r1
 801f042:	f820 2b02 	strh.w	r2, [r0], #2
 801f046:	e7ed      	b.n	801f024 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801f048:	8832      	ldrh	r2, [r6, #0]
 801f04a:	1bd2      	subs	r2, r2, r7
 801f04c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f050:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801f054:	1bd2      	subs	r2, r2, r7
 801f056:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801f05a:	e7df      	b.n	801f01c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801f05c:	6828      	ldr	r0, [r5, #0]
 801f05e:	6803      	ldr	r3, [r0, #0]
 801f060:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f062:	4798      	blx	r3
 801f064:	b005      	add	sp, #20
 801f066:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801f06a:	bf00      	nop
 801f06c:	2000e1c0 	.word	0x2000e1c0
 801f070:	2000e1ba 	.word	0x2000e1ba
 801f074:	fffff800 	.word	0xfffff800

0801f078 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801f078:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f07c:	460e      	mov	r6, r1
 801f07e:	b08e      	sub	sp, #56	; 0x38
 801f080:	4604      	mov	r4, r0
 801f082:	6808      	ldr	r0, [r1, #0]
 801f084:	6849      	ldr	r1, [r1, #4]
 801f086:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801f260 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801f08a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801f264 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801f08e:	461d      	mov	r5, r3
 801f090:	ab0a      	add	r3, sp, #40	; 0x28
 801f092:	c303      	stmia	r3!, {r0, r1}
 801f094:	6810      	ldr	r0, [r2, #0]
 801f096:	6851      	ldr	r1, [r2, #4]
 801f098:	ab0c      	add	r3, sp, #48	; 0x30
 801f09a:	c303      	stmia	r3!, {r0, r1}
 801f09c:	a80a      	add	r0, sp, #40	; 0x28
 801f09e:	f7f8 f859 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f0a2:	4631      	mov	r1, r6
 801f0a4:	a80c      	add	r0, sp, #48	; 0x30
 801f0a6:	f7f8 f899 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f0aa:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801f0ae:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801f0b2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801f0b6:	f8d8 0000 	ldr.w	r0, [r8]
 801f0ba:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801f0be:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801f0c2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f0c6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801f0ca:	440c      	add	r4, r1
 801f0cc:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801f0d0:	440a      	add	r2, r1
 801f0d2:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801f0d6:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801f0da:	4413      	add	r3, r2
 801f0dc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801f0e0:	6803      	ldr	r3, [r0, #0]
 801f0e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f0e4:	4798      	blx	r3
 801f0e6:	2dff      	cmp	r5, #255	; 0xff
 801f0e8:	d124      	bne.n	801f134 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801f0ea:	f010 0f01 	tst.w	r0, #1
 801f0ee:	f8d8 0000 	ldr.w	r0, [r8]
 801f0f2:	d022      	beq.n	801f13a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801f0f4:	2100      	movs	r1, #0
 801f0f6:	f8d0 c000 	ldr.w	ip, [r0]
 801f0fa:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801f0fe:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801f102:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801f106:	f04f 0e01 	mov.w	lr, #1
 801f10a:	f8cd e018 	str.w	lr, [sp, #24]
 801f10e:	f8b9 e000 	ldrh.w	lr, [r9]
 801f112:	9503      	str	r5, [sp, #12]
 801f114:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801f118:	b2b6      	uxth	r6, r6
 801f11a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801f11e:	9102      	str	r1, [sp, #8]
 801f120:	b2bf      	uxth	r7, r7
 801f122:	9601      	str	r6, [sp, #4]
 801f124:	9700      	str	r7, [sp, #0]
 801f126:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801f12a:	4621      	mov	r1, r4
 801f12c:	47a8      	blx	r5
 801f12e:	b00e      	add	sp, #56	; 0x38
 801f130:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f134:	f010 0f04 	tst.w	r0, #4
 801f138:	e7d9      	b.n	801f0ee <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801f13a:	6803      	ldr	r3, [r0, #0]
 801f13c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f13e:	4798      	blx	r3
 801f140:	f8b9 3000 	ldrh.w	r3, [r9]
 801f144:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f148:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801f14c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801f150:	fb03 1202 	mla	r2, r3, r2, r1
 801f154:	ebac 0c07 	sub.w	ip, ip, r7
 801f158:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f15c:	435e      	muls	r6, r3
 801f15e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801f162:	2dff      	cmp	r5, #255	; 0xff
 801f164:	eba3 0707 	sub.w	r7, r3, r7
 801f168:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801f16c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f170:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801f174:	d049      	beq.n	801f20a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801f176:	43eb      	mvns	r3, r5
 801f178:	fa1f f985 	uxth.w	r9, r5
 801f17c:	b2db      	uxtb	r3, r3
 801f17e:	42b0      	cmp	r0, r6
 801f180:	d266      	bcs.n	801f250 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801f182:	eb00 0a0e 	add.w	sl, r0, lr
 801f186:	4550      	cmp	r0, sl
 801f188:	4621      	mov	r1, r4
 801f18a:	f104 0403 	add.w	r4, r4, #3
 801f18e:	d25b      	bcs.n	801f248 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801f190:	8802      	ldrh	r2, [r0, #0]
 801f192:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801f196:	ea4f 2822 	mov.w	r8, r2, asr #8
 801f19a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801f19e:	fb11 f109 	smulbb	r1, r1, r9
 801f1a2:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801f1a6:	10d5      	asrs	r5, r2, #3
 801f1a8:	fb08 1803 	mla	r8, r8, r3, r1
 801f1ac:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801f1b0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f1b4:	fb11 f109 	smulbb	r1, r1, r9
 801f1b8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801f1bc:	fb05 1503 	mla	r5, r5, r3, r1
 801f1c0:	00d2      	lsls	r2, r2, #3
 801f1c2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801f1c6:	b2d2      	uxtb	r2, r2
 801f1c8:	fb11 f109 	smulbb	r1, r1, r9
 801f1cc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f1d0:	fa1f f888 	uxth.w	r8, r8
 801f1d4:	fb02 1203 	mla	r2, r2, r3, r1
 801f1d8:	b292      	uxth	r2, r2
 801f1da:	f108 0101 	add.w	r1, r8, #1
 801f1de:	b2ad      	uxth	r5, r5
 801f1e0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801f1e4:	1c51      	adds	r1, r2, #1
 801f1e6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f1ea:	1c69      	adds	r1, r5, #1
 801f1ec:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801f1f0:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801f1f4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f1f8:	096d      	lsrs	r5, r5, #5
 801f1fa:	ea42 0208 	orr.w	r2, r2, r8
 801f1fe:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f202:	432a      	orrs	r2, r5
 801f204:	f820 2b02 	strh.w	r2, [r0], #2
 801f208:	e7bd      	b.n	801f186 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801f20a:	4a14      	ldr	r2, [pc, #80]	; (801f25c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801f20c:	42b0      	cmp	r0, r6
 801f20e:	d21f      	bcs.n	801f250 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801f210:	eb00 050e 	add.w	r5, r0, lr
 801f214:	42a8      	cmp	r0, r5
 801f216:	4621      	mov	r1, r4
 801f218:	f104 0403 	add.w	r4, r4, #3
 801f21c:	d210      	bcs.n	801f240 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801f21e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801f222:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801f226:	00db      	lsls	r3, r3, #3
 801f228:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801f22c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f230:	430b      	orrs	r3, r1
 801f232:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801f236:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801f23a:	f820 3b02 	strh.w	r3, [r0], #2
 801f23e:	e7e9      	b.n	801f214 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801f240:	4438      	add	r0, r7
 801f242:	eb01 040c 	add.w	r4, r1, ip
 801f246:	e7e1      	b.n	801f20c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801f248:	4438      	add	r0, r7
 801f24a:	eb01 040c 	add.w	r4, r1, ip
 801f24e:	e796      	b.n	801f17e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801f250:	4b03      	ldr	r3, [pc, #12]	; (801f260 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801f252:	6818      	ldr	r0, [r3, #0]
 801f254:	6803      	ldr	r3, [r0, #0]
 801f256:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f258:	4798      	blx	r3
 801f25a:	e768      	b.n	801f12e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801f25c:	fffff800 	.word	0xfffff800
 801f260:	2000e1c0 	.word	0x2000e1c0
 801f264:	2000e1ba 	.word	0x2000e1ba

0801f268 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801f268:	b4f0      	push	{r4, r5, r6, r7}
 801f26a:	4616      	mov	r6, r2
 801f26c:	2e01      	cmp	r6, #1
 801f26e:	461c      	mov	r4, r3
 801f270:	460d      	mov	r5, r1
 801f272:	9a04      	ldr	r2, [sp, #16]
 801f274:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801f278:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801f27c:	d012      	beq.n	801f2a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801f27e:	d303      	bcc.n	801f288 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801f280:	2e02      	cmp	r6, #2
 801f282:	d00a      	beq.n	801f29a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801f284:	bcf0      	pop	{r4, r5, r6, r7}
 801f286:	4770      	bx	lr
 801f288:	6805      	ldr	r5, [r0, #0]
 801f28a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801f28e:	68ed      	ldr	r5, [r5, #12]
 801f290:	4613      	mov	r3, r2
 801f292:	46ac      	mov	ip, r5
 801f294:	4622      	mov	r2, r4
 801f296:	bcf0      	pop	{r4, r5, r6, r7}
 801f298:	4760      	bx	ip
 801f29a:	4621      	mov	r1, r4
 801f29c:	4628      	mov	r0, r5
 801f29e:	bcf0      	pop	{r4, r5, r6, r7}
 801f2a0:	f7ff bd94 	b.w	801edcc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f2a4:	4621      	mov	r1, r4
 801f2a6:	4628      	mov	r0, r5
 801f2a8:	bcf0      	pop	{r4, r5, r6, r7}
 801f2aa:	f7ff bee5 	b.w	801f078 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801f2b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801f2b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f2b4:	4681      	mov	r9, r0
 801f2b6:	b093      	sub	sp, #76	; 0x4c
 801f2b8:	6810      	ldr	r0, [r2, #0]
 801f2ba:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801f2be:	4f6d      	ldr	r7, [pc, #436]	; (801f474 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801f2c0:	4688      	mov	r8, r1
 801f2c2:	6851      	ldr	r1, [r2, #4]
 801f2c4:	ac0e      	add	r4, sp, #56	; 0x38
 801f2c6:	c403      	stmia	r4!, {r0, r1}
 801f2c8:	6818      	ldr	r0, [r3, #0]
 801f2ca:	6859      	ldr	r1, [r3, #4]
 801f2cc:	ac10      	add	r4, sp, #64	; 0x40
 801f2ce:	4616      	mov	r6, r2
 801f2d0:	c403      	stmia	r4!, {r0, r1}
 801f2d2:	a80e      	add	r0, sp, #56	; 0x38
 801f2d4:	f7f7 ff3e 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f2d8:	4631      	mov	r1, r6
 801f2da:	a810      	add	r0, sp, #64	; 0x40
 801f2dc:	f7f7 ff7e 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f2e0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801f2e4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801f2e8:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801f2ec:	4e62      	ldr	r6, [pc, #392]	; (801f478 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801f2ee:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801f2f2:	6830      	ldr	r0, [r6, #0]
 801f2f4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801f2f8:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f2fc:	4489      	add	r9, r1
 801f2fe:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801f302:	440a      	add	r2, r1
 801f304:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801f308:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801f30c:	4413      	add	r3, r2
 801f30e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801f312:	6803      	ldr	r3, [r0, #0]
 801f314:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f316:	4798      	blx	r3
 801f318:	f010 0f80 	tst.w	r0, #128	; 0x80
 801f31c:	6830      	ldr	r0, [r6, #0]
 801f31e:	d01d      	beq.n	801f35c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801f320:	2200      	movs	r2, #0
 801f322:	6801      	ldr	r1, [r0, #0]
 801f324:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801f328:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801f32c:	220b      	movs	r2, #11
 801f32e:	9207      	str	r2, [sp, #28]
 801f330:	883a      	ldrh	r2, [r7, #0]
 801f332:	9206      	str	r2, [sp, #24]
 801f334:	2201      	movs	r2, #1
 801f336:	e9cd a204 	strd	sl, r2, [sp, #16]
 801f33a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801f33e:	9203      	str	r2, [sp, #12]
 801f340:	b2a4      	uxth	r4, r4
 801f342:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801f346:	9200      	str	r2, [sp, #0]
 801f348:	b2ad      	uxth	r5, r5
 801f34a:	9502      	str	r5, [sp, #8]
 801f34c:	9401      	str	r4, [sp, #4]
 801f34e:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801f350:	4642      	mov	r2, r8
 801f352:	4649      	mov	r1, r9
 801f354:	47a0      	blx	r4
 801f356:	b013      	add	sp, #76	; 0x4c
 801f358:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f35c:	6803      	ldr	r3, [r0, #0]
 801f35e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f360:	4798      	blx	r3
 801f362:	883b      	ldrh	r3, [r7, #0]
 801f364:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801f368:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801f36c:	fb03 1202 	mla	r2, r3, r2, r1
 801f370:	435d      	muls	r5, r3
 801f372:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f376:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801f37a:	920c      	str	r2, [sp, #48]	; 0x30
 801f37c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801f380:	1b12      	subs	r2, r2, r4
 801f382:	920d      	str	r2, [sp, #52]	; 0x34
 801f384:	0062      	lsls	r2, r4, #1
 801f386:	1b1c      	subs	r4, r3, r4
 801f388:	0063      	lsls	r3, r4, #1
 801f38a:	920a      	str	r2, [sp, #40]	; 0x28
 801f38c:	930b      	str	r3, [sp, #44]	; 0x2c
 801f38e:	f04f 0e04 	mov.w	lr, #4
 801f392:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f394:	4298      	cmp	r0, r3
 801f396:	d266      	bcs.n	801f466 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801f398:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f39a:	eb00 0b03 	add.w	fp, r0, r3
 801f39e:	4558      	cmp	r0, fp
 801f3a0:	d25c      	bcs.n	801f45c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801f3a2:	f819 3b01 	ldrb.w	r3, [r9], #1
 801f3a6:	fb1e e303 	smlabb	r3, lr, r3, lr
 801f3aa:	f858 2003 	ldr.w	r2, [r8, r3]
 801f3ae:	0e11      	lsrs	r1, r2, #24
 801f3b0:	d012      	beq.n	801f3d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801f3b2:	29ff      	cmp	r1, #255	; 0xff
 801f3b4:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801f3b8:	d110      	bne.n	801f3dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801f3ba:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801f3be:	d10d      	bne.n	801f3dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801f3c0:	0953      	lsrs	r3, r2, #5
 801f3c2:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801f3c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f3ca:	f027 0707 	bic.w	r7, r7, #7
 801f3ce:	431f      	orrs	r7, r3
 801f3d0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f3d4:	433a      	orrs	r2, r7
 801f3d6:	8002      	strh	r2, [r0, #0]
 801f3d8:	3002      	adds	r0, #2
 801f3da:	e7e0      	b.n	801f39e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801f3dc:	fb0a f101 	mul.w	r1, sl, r1
 801f3e0:	8806      	ldrh	r6, [r0, #0]
 801f3e2:	1c4b      	adds	r3, r1, #1
 801f3e4:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801f3e8:	1235      	asrs	r5, r6, #8
 801f3ea:	10f4      	asrs	r4, r6, #3
 801f3ec:	121b      	asrs	r3, r3, #8
 801f3ee:	00f6      	lsls	r6, r6, #3
 801f3f0:	b299      	uxth	r1, r3
 801f3f2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801f3f6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f3fa:	b2f6      	uxtb	r6, r6
 801f3fc:	43db      	mvns	r3, r3
 801f3fe:	b2d2      	uxtb	r2, r2
 801f400:	b2db      	uxtb	r3, r3
 801f402:	fb1c fc01 	smulbb	ip, ip, r1
 801f406:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801f40a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801f40e:	fb12 f201 	smulbb	r2, r2, r1
 801f412:	fb05 c503 	mla	r5, r5, r3, ip
 801f416:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801f41a:	b2ff      	uxtb	r7, r7
 801f41c:	fb06 2203 	mla	r2, r6, r3, r2
 801f420:	b2ad      	uxth	r5, r5
 801f422:	fb17 f701 	smulbb	r7, r7, r1
 801f426:	b292      	uxth	r2, r2
 801f428:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801f42c:	fb04 7403 	mla	r4, r4, r3, r7
 801f430:	f105 0c01 	add.w	ip, r5, #1
 801f434:	1c57      	adds	r7, r2, #1
 801f436:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f43a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f43e:	b2a4      	uxth	r4, r4
 801f440:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f444:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f448:	433d      	orrs	r5, r7
 801f44a:	1c67      	adds	r7, r4, #1
 801f44c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801f450:	0964      	lsrs	r4, r4, #5
 801f452:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801f456:	4325      	orrs	r5, r4
 801f458:	8005      	strh	r5, [r0, #0]
 801f45a:	e7bd      	b.n	801f3d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801f45c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f45e:	4418      	add	r0, r3
 801f460:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f462:	4499      	add	r9, r3
 801f464:	e795      	b.n	801f392 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801f466:	4b04      	ldr	r3, [pc, #16]	; (801f478 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801f468:	6818      	ldr	r0, [r3, #0]
 801f46a:	6803      	ldr	r3, [r0, #0]
 801f46c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f46e:	4798      	blx	r3
 801f470:	e771      	b.n	801f356 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801f472:	bf00      	nop
 801f474:	2000e1ba 	.word	0x2000e1ba
 801f478:	2000e1c0 	.word	0x2000e1c0

0801f47c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801f47c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f480:	b087      	sub	sp, #28
 801f482:	4680      	mov	r8, r0
 801f484:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801f488:	460d      	mov	r5, r1
 801f48a:	4614      	mov	r4, r2
 801f48c:	2e00      	cmp	r6, #0
 801f48e:	f000 80b9 	beq.w	801f604 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801f492:	6810      	ldr	r0, [r2, #0]
 801f494:	6851      	ldr	r1, [r2, #4]
 801f496:	af02      	add	r7, sp, #8
 801f498:	c703      	stmia	r7!, {r0, r1}
 801f49a:	6818      	ldr	r0, [r3, #0]
 801f49c:	6859      	ldr	r1, [r3, #4]
 801f49e:	af04      	add	r7, sp, #16
 801f4a0:	c703      	stmia	r7!, {r0, r1}
 801f4a2:	a802      	add	r0, sp, #8
 801f4a4:	f7f7 fe56 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f4a8:	4621      	mov	r1, r4
 801f4aa:	a804      	add	r0, sp, #16
 801f4ac:	f7f7 fe96 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f4b0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f4b4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f4b8:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801f4bc:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801f4c0:	fb14 2103 	smlabb	r1, r4, r3, r2
 801f4c4:	eb08 0401 	add.w	r4, r8, r1
 801f4c8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f4cc:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801f4d0:	440a      	add	r2, r1
 801f4d2:	f8ad 2010 	strh.w	r2, [sp, #16]
 801f4d6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801f4da:	4413      	add	r3, r2
 801f4dc:	f8ad 3012 	strh.w	r3, [sp, #18]
 801f4e0:	4b4a      	ldr	r3, [pc, #296]	; (801f60c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801f4e2:	6818      	ldr	r0, [r3, #0]
 801f4e4:	6803      	ldr	r3, [r0, #0]
 801f4e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f4e8:	4798      	blx	r3
 801f4ea:	4b49      	ldr	r3, [pc, #292]	; (801f610 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801f4ec:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801f4f0:	881a      	ldrh	r2, [r3, #0]
 801f4f2:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801f4f6:	2eff      	cmp	r6, #255	; 0xff
 801f4f8:	fb02 c101 	mla	r1, r2, r1, ip
 801f4fc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f500:	fb02 f207 	mul.w	r2, r2, r7
 801f504:	f105 0104 	add.w	r1, r5, #4
 801f508:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801f50c:	461d      	mov	r5, r3
 801f50e:	d05a      	beq.n	801f5c6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801f510:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801f514:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801f518:	b2b6      	uxth	r6, r6
 801f51a:	fa1f fe8e 	uxth.w	lr, lr
 801f51e:	9301      	str	r3, [sp, #4]
 801f520:	4282      	cmp	r2, r0
 801f522:	d96a      	bls.n	801f5fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801f524:	eb00 0b0a 	add.w	fp, r0, sl
 801f528:	4583      	cmp	fp, r0
 801f52a:	d940      	bls.n	801f5ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801f52c:	f814 3b01 	ldrb.w	r3, [r4], #1
 801f530:	8805      	ldrh	r5, [r0, #0]
 801f532:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801f536:	122f      	asrs	r7, r5, #8
 801f538:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801f53c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f540:	fb17 f70e 	smulbb	r7, r7, lr
 801f544:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801f548:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f54c:	00ed      	lsls	r5, r5, #3
 801f54e:	fb0c 7c06 	mla	ip, ip, r6, r7
 801f552:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801f556:	10df      	asrs	r7, r3, #3
 801f558:	b2ed      	uxtb	r5, r5
 801f55a:	00db      	lsls	r3, r3, #3
 801f55c:	fa1f fc8c 	uxth.w	ip, ip
 801f560:	fb19 f90e 	smulbb	r9, r9, lr
 801f564:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f568:	b2db      	uxtb	r3, r3
 801f56a:	fb15 f50e 	smulbb	r5, r5, lr
 801f56e:	fb07 9706 	mla	r7, r7, r6, r9
 801f572:	fb03 5306 	mla	r3, r3, r6, r5
 801f576:	f10c 0901 	add.w	r9, ip, #1
 801f57a:	b29b      	uxth	r3, r3
 801f57c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801f580:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801f584:	f103 0c01 	add.w	ip, r3, #1
 801f588:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f58c:	b2bf      	uxth	r7, r7
 801f58e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f592:	ea4c 0c09 	orr.w	ip, ip, r9
 801f596:	f107 0901 	add.w	r9, r7, #1
 801f59a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801f59e:	097f      	lsrs	r7, r7, #5
 801f5a0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f5a4:	ea4c 0c07 	orr.w	ip, ip, r7
 801f5a8:	f820 cb02 	strh.w	ip, [r0], #2
 801f5ac:	e7bc      	b.n	801f528 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801f5ae:	9b01      	ldr	r3, [sp, #4]
 801f5b0:	881b      	ldrh	r3, [r3, #0]
 801f5b2:	eba3 0308 	sub.w	r3, r3, r8
 801f5b6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f5ba:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801f5be:	eba3 0308 	sub.w	r3, r3, r8
 801f5c2:	441c      	add	r4, r3
 801f5c4:	e7ac      	b.n	801f520 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801f5c6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801f5ca:	4282      	cmp	r2, r0
 801f5cc:	d915      	bls.n	801f5fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801f5ce:	eb00 060a 	add.w	r6, r0, sl
 801f5d2:	4286      	cmp	r6, r0
 801f5d4:	d906      	bls.n	801f5e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801f5d6:	f814 3b01 	ldrb.w	r3, [r4], #1
 801f5da:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801f5de:	f820 3b02 	strh.w	r3, [r0], #2
 801f5e2:	e7f6      	b.n	801f5d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801f5e4:	882b      	ldrh	r3, [r5, #0]
 801f5e6:	eba3 0308 	sub.w	r3, r3, r8
 801f5ea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f5ee:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801f5f2:	eba3 0308 	sub.w	r3, r3, r8
 801f5f6:	441c      	add	r4, r3
 801f5f8:	e7e7      	b.n	801f5ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801f5fa:	4b04      	ldr	r3, [pc, #16]	; (801f60c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801f5fc:	6818      	ldr	r0, [r3, #0]
 801f5fe:	6803      	ldr	r3, [r0, #0]
 801f600:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f602:	4798      	blx	r3
 801f604:	b007      	add	sp, #28
 801f606:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f60a:	bf00      	nop
 801f60c:	2000e1c0 	.word	0x2000e1c0
 801f610:	2000e1ba 	.word	0x2000e1ba

0801f614 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801f614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f618:	b091      	sub	sp, #68	; 0x44
 801f61a:	4680      	mov	r8, r0
 801f61c:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801f620:	460f      	mov	r7, r1
 801f622:	4614      	mov	r4, r2
 801f624:	2d00      	cmp	r5, #0
 801f626:	d051      	beq.n	801f6cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801f628:	6810      	ldr	r0, [r2, #0]
 801f62a:	6851      	ldr	r1, [r2, #4]
 801f62c:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801f830 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801f630:	ae0c      	add	r6, sp, #48	; 0x30
 801f632:	c603      	stmia	r6!, {r0, r1}
 801f634:	6818      	ldr	r0, [r3, #0]
 801f636:	6859      	ldr	r1, [r3, #4]
 801f638:	ae0e      	add	r6, sp, #56	; 0x38
 801f63a:	c603      	stmia	r6!, {r0, r1}
 801f63c:	a80c      	add	r0, sp, #48	; 0x30
 801f63e:	f7f7 fd89 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f642:	4621      	mov	r1, r4
 801f644:	a80e      	add	r0, sp, #56	; 0x38
 801f646:	f7f7 fdc9 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f64a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801f64e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801f652:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801f656:	f8d9 0000 	ldr.w	r0, [r9]
 801f65a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801f65e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801f662:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f666:	eb08 0401 	add.w	r4, r8, r1
 801f66a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801f66e:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801f834 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801f672:	440a      	add	r2, r1
 801f674:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801f678:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801f67c:	4413      	add	r3, r2
 801f67e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801f682:	6803      	ldr	r3, [r0, #0]
 801f684:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f686:	4798      	blx	r3
 801f688:	f010 0f80 	tst.w	r0, #128	; 0x80
 801f68c:	f8d9 0000 	ldr.w	r0, [r9]
 801f690:	d01f      	beq.n	801f6d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801f692:	2200      	movs	r2, #0
 801f694:	6801      	ldr	r1, [r0, #0]
 801f696:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801f69a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801f69e:	220b      	movs	r2, #11
 801f6a0:	9207      	str	r2, [sp, #28]
 801f6a2:	f8b8 2000 	ldrh.w	r2, [r8]
 801f6a6:	9206      	str	r2, [sp, #24]
 801f6a8:	2201      	movs	r2, #1
 801f6aa:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801f6ae:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801f6b2:	9203      	str	r2, [sp, #12]
 801f6b4:	fa1f f28a 	uxth.w	r2, sl
 801f6b8:	9202      	str	r2, [sp, #8]
 801f6ba:	b2b6      	uxth	r6, r6
 801f6bc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801f6c0:	9200      	str	r2, [sp, #0]
 801f6c2:	9601      	str	r6, [sp, #4]
 801f6c4:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801f6c6:	463a      	mov	r2, r7
 801f6c8:	4621      	mov	r1, r4
 801f6ca:	47a8      	blx	r5
 801f6cc:	b011      	add	sp, #68	; 0x44
 801f6ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f6d2:	6803      	ldr	r3, [r0, #0]
 801f6d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f6d6:	4798      	blx	r3
 801f6d8:	f8b8 2000 	ldrh.w	r2, [r8]
 801f6dc:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801f6e0:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801f6e4:	2dff      	cmp	r5, #255	; 0xff
 801f6e6:	fb02 1303 	mla	r3, r2, r3, r1
 801f6ea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f6ee:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801f6f2:	fb0a fa02 	mul.w	sl, sl, r2
 801f6f6:	d062      	beq.n	801f7be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801f6f8:	ea6f 0c05 	mvn.w	ip, r5
 801f6fc:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801f700:	930a      	str	r3, [sp, #40]	; 0x28
 801f702:	b2ad      	uxth	r5, r5
 801f704:	fa5f fc8c 	uxtb.w	ip, ip
 801f708:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801f70c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f70e:	4298      	cmp	r0, r3
 801f710:	f080 8085 	bcs.w	801f81e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801f714:	eb00 0b09 	add.w	fp, r0, r9
 801f718:	4558      	cmp	r0, fp
 801f71a:	d246      	bcs.n	801f7aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801f71c:	f814 eb01 	ldrb.w	lr, [r4], #1
 801f720:	2303      	movs	r3, #3
 801f722:	2204      	movs	r2, #4
 801f724:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801f728:	eb07 0a0e 	add.w	sl, r7, lr
 801f72c:	8803      	ldrh	r3, [r0, #0]
 801f72e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801f732:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f736:	1219      	asrs	r1, r3, #8
 801f738:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f73c:	fb18 f805 	smulbb	r8, r8, r5
 801f740:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801f744:	10da      	asrs	r2, r3, #3
 801f746:	fb01 810c 	mla	r1, r1, ip, r8
 801f74a:	00db      	lsls	r3, r3, #3
 801f74c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f750:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f754:	b2db      	uxtb	r3, r3
 801f756:	fb18 f805 	smulbb	r8, r8, r5
 801f75a:	fb1e fe05 	smulbb	lr, lr, r5
 801f75e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801f762:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801f766:	b289      	uxth	r1, r1
 801f768:	fb02 820c 	mla	r2, r2, ip, r8
 801f76c:	fb03 e30c 	mla	r3, r3, ip, lr
 801f770:	b292      	uxth	r2, r2
 801f772:	b29b      	uxth	r3, r3
 801f774:	f101 0801 	add.w	r8, r1, #1
 801f778:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801f77c:	f103 0e01 	add.w	lr, r3, #1
 801f780:	f102 0801 	add.w	r8, r2, #1
 801f784:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801f788:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801f78c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801f790:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f794:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801f798:	ea4e 0101 	orr.w	r1, lr, r1
 801f79c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801f7a0:	ea41 0108 	orr.w	r1, r1, r8
 801f7a4:	f820 1b02 	strh.w	r1, [r0], #2
 801f7a8:	e7b6      	b.n	801f718 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801f7aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f7ac:	881b      	ldrh	r3, [r3, #0]
 801f7ae:	1b9b      	subs	r3, r3, r6
 801f7b0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f7b4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801f7b8:	1b9b      	subs	r3, r3, r6
 801f7ba:	441c      	add	r4, r3
 801f7bc:	e7a6      	b.n	801f70c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801f7be:	491b      	ldr	r1, [pc, #108]	; (801f82c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801f7c0:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801f7c4:	2203      	movs	r2, #3
 801f7c6:	2504      	movs	r5, #4
 801f7c8:	4550      	cmp	r0, sl
 801f7ca:	d228      	bcs.n	801f81e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801f7cc:	eb00 0c09 	add.w	ip, r0, r9
 801f7d0:	4560      	cmp	r0, ip
 801f7d2:	4623      	mov	r3, r4
 801f7d4:	d219      	bcs.n	801f80a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801f7d6:	f893 e000 	ldrb.w	lr, [r3]
 801f7da:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801f7de:	eb07 0b0e 	add.w	fp, r7, lr
 801f7e2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f7e6:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801f7ea:	f89b b001 	ldrb.w	fp, [fp, #1]
 801f7ee:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801f7f2:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801f7f6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801f7fa:	ea43 030b 	orr.w	r3, r3, fp
 801f7fe:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801f802:	3401      	adds	r4, #1
 801f804:	f820 3b02 	strh.w	r3, [r0], #2
 801f808:	e7e2      	b.n	801f7d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801f80a:	f8b8 3000 	ldrh.w	r3, [r8]
 801f80e:	1b9b      	subs	r3, r3, r6
 801f810:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f814:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801f818:	1b9b      	subs	r3, r3, r6
 801f81a:	441c      	add	r4, r3
 801f81c:	e7d4      	b.n	801f7c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801f81e:	4b04      	ldr	r3, [pc, #16]	; (801f830 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801f820:	6818      	ldr	r0, [r3, #0]
 801f822:	6803      	ldr	r3, [r0, #0]
 801f824:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f826:	4798      	blx	r3
 801f828:	e750      	b.n	801f6cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801f82a:	bf00      	nop
 801f82c:	fffff800 	.word	0xfffff800
 801f830:	2000e1c0 	.word	0x2000e1c0
 801f834:	2000e1ba 	.word	0x2000e1ba

0801f838 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801f838:	b4f0      	push	{r4, r5, r6, r7}
 801f83a:	460c      	mov	r4, r1
 801f83c:	4611      	mov	r1, r2
 801f83e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801f842:	780f      	ldrb	r7, [r1, #0]
 801f844:	784e      	ldrb	r6, [r1, #1]
 801f846:	2f01      	cmp	r7, #1
 801f848:	461a      	mov	r2, r3
 801f84a:	9b04      	ldr	r3, [sp, #16]
 801f84c:	d036      	beq.n	801f8bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801f84e:	d31e      	bcc.n	801f88e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801f850:	2f02      	cmp	r7, #2
 801f852:	d14a      	bne.n	801f8ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f854:	2e03      	cmp	r6, #3
 801f856:	d848      	bhi.n	801f8ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f858:	e8df f006 	tbb	[pc, r6]
 801f85c:	16140702 	.word	0x16140702
 801f860:	9504      	str	r5, [sp, #16]
 801f862:	4620      	mov	r0, r4
 801f864:	bcf0      	pop	{r4, r5, r6, r7}
 801f866:	f7ff be09 	b.w	801f47c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801f86a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f86c:	2800      	cmp	r0, #0
 801f86e:	d03c      	beq.n	801f8ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f870:	6806      	ldr	r6, [r0, #0]
 801f872:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f876:	68b5      	ldr	r5, [r6, #8]
 801f878:	4613      	mov	r3, r2
 801f87a:	46ac      	mov	ip, r5
 801f87c:	460a      	mov	r2, r1
 801f87e:	4621      	mov	r1, r4
 801f880:	bcf0      	pop	{r4, r5, r6, r7}
 801f882:	4760      	bx	ip
 801f884:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f886:	e7f1      	b.n	801f86c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801f888:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f88c:	e7ee      	b.n	801f86c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801f88e:	2e03      	cmp	r6, #3
 801f890:	d82b      	bhi.n	801f8ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f892:	e8df f006 	tbb	[pc, r6]
 801f896:	0702      	.short	0x0702
 801f898:	100e      	.short	0x100e
 801f89a:	9504      	str	r5, [sp, #16]
 801f89c:	4620      	mov	r0, r4
 801f89e:	bcf0      	pop	{r4, r5, r6, r7}
 801f8a0:	f7ff bd06 	b.w	801f2b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801f8a4:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f8a6:	b300      	cbz	r0, 801f8ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f8a8:	6806      	ldr	r6, [r0, #0]
 801f8aa:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f8ae:	68f5      	ldr	r5, [r6, #12]
 801f8b0:	e7e2      	b.n	801f878 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801f8b2:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f8b4:	e7f7      	b.n	801f8a6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801f8b6:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f8ba:	e7f4      	b.n	801f8a6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801f8bc:	2e03      	cmp	r6, #3
 801f8be:	d814      	bhi.n	801f8ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f8c0:	e8df f006 	tbb	[pc, r6]
 801f8c4:	100e0702 	.word	0x100e0702
 801f8c8:	9504      	str	r5, [sp, #16]
 801f8ca:	4620      	mov	r0, r4
 801f8cc:	bcf0      	pop	{r4, r5, r6, r7}
 801f8ce:	f7ff bea1 	b.w	801f614 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801f8d2:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f8d4:	b148      	cbz	r0, 801f8ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f8d6:	6806      	ldr	r6, [r0, #0]
 801f8d8:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f8dc:	6935      	ldr	r5, [r6, #16]
 801f8de:	e7cb      	b.n	801f878 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801f8e0:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f8e2:	e7f7      	b.n	801f8d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801f8e4:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f8e8:	e7f4      	b.n	801f8d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801f8ea:	bcf0      	pop	{r4, r5, r6, r7}
 801f8ec:	4770      	bx	lr
	...

0801f8f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801f8f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8f4:	4604      	mov	r4, r0
 801f8f6:	b087      	sub	sp, #28
 801f8f8:	6810      	ldr	r0, [r2, #0]
 801f8fa:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801f8fe:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801fb38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801f902:	460e      	mov	r6, r1
 801f904:	6851      	ldr	r1, [r2, #4]
 801f906:	ad02      	add	r5, sp, #8
 801f908:	c503      	stmia	r5!, {r0, r1}
 801f90a:	6818      	ldr	r0, [r3, #0]
 801f90c:	6859      	ldr	r1, [r3, #4]
 801f90e:	ad04      	add	r5, sp, #16
 801f910:	4617      	mov	r7, r2
 801f912:	c503      	stmia	r5!, {r0, r1}
 801f914:	a802      	add	r0, sp, #8
 801f916:	f7f7 fc1d 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f91a:	4639      	mov	r1, r7
 801f91c:	a804      	add	r0, sp, #16
 801f91e:	f7f7 fc5d 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f922:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f926:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f92a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801f92e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801f932:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801f936:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f93a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801f93e:	440e      	add	r6, r1
 801f940:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f944:	440a      	add	r2, r1
 801f946:	f8ad 2010 	strh.w	r2, [sp, #16]
 801f94a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801f94e:	4413      	add	r3, r2
 801f950:	f8ad 3012 	strh.w	r3, [sp, #18]
 801f954:	4b77      	ldr	r3, [pc, #476]	; (801fb34 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801f956:	6818      	ldr	r0, [r3, #0]
 801f958:	6803      	ldr	r3, [r0, #0]
 801f95a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f95c:	4798      	blx	r3
 801f95e:	f8b9 b000 	ldrh.w	fp, [r9]
 801f962:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f966:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f96a:	fb0b 2303 	mla	r3, fp, r3, r2
 801f96e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f972:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801f976:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801f97a:	fb05 f50b 	mul.w	r5, r5, fp
 801f97e:	9300      	str	r3, [sp, #0]
 801f980:	d069      	beq.n	801fa56 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801f982:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801f986:	4558      	cmp	r0, fp
 801f988:	f080 80cc 	bcs.w	801fb24 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801f98c:	9b00      	ldr	r3, [sp, #0]
 801f98e:	18c3      	adds	r3, r0, r3
 801f990:	9301      	str	r3, [sp, #4]
 801f992:	4631      	mov	r1, r6
 801f994:	9b01      	ldr	r3, [sp, #4]
 801f996:	4298      	cmp	r0, r3
 801f998:	d24f      	bcs.n	801fa3a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801f99a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801f99e:	2a00      	cmp	r2, #0
 801f9a0:	d048      	beq.n	801fa34 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f9a2:	fb0a f202 	mul.w	r2, sl, r2
 801f9a6:	1c53      	adds	r3, r2, #1
 801f9a8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f9ac:	121b      	asrs	r3, r3, #8
 801f9ae:	d041      	beq.n	801fa34 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f9b0:	8802      	ldrh	r2, [r0, #0]
 801f9b2:	f8b4 c000 	ldrh.w	ip, [r4]
 801f9b6:	b29e      	uxth	r6, r3
 801f9b8:	1215      	asrs	r5, r2, #8
 801f9ba:	43db      	mvns	r3, r3
 801f9bc:	b2db      	uxtb	r3, r3
 801f9be:	ea4f 272c 	mov.w	r7, ip, asr #8
 801f9c2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f9c6:	fb15 f503 	smulbb	r5, r5, r3
 801f9ca:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801f9ce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f9d2:	00d2      	lsls	r2, r2, #3
 801f9d4:	fb07 5706 	mla	r7, r7, r6, r5
 801f9d8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f9dc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801f9e0:	b2d2      	uxtb	r2, r2
 801f9e2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f9e6:	b2bf      	uxth	r7, r7
 801f9e8:	fb1e fe03 	smulbb	lr, lr, r3
 801f9ec:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f9f0:	fa5f fc8c 	uxtb.w	ip, ip
 801f9f4:	fb12 f203 	smulbb	r2, r2, r3
 801f9f8:	fb05 e506 	mla	r5, r5, r6, lr
 801f9fc:	fb0c 2c06 	mla	ip, ip, r6, r2
 801fa00:	f107 0e01 	add.w	lr, r7, #1
 801fa04:	fa1f fc8c 	uxth.w	ip, ip
 801fa08:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801fa0c:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801fa10:	f10c 0701 	add.w	r7, ip, #1
 801fa14:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801fa18:	b2ad      	uxth	r5, r5
 801fa1a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fa1e:	ea47 070e 	orr.w	r7, r7, lr
 801fa22:	f105 0e01 	add.w	lr, r5, #1
 801fa26:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801fa2a:	096d      	lsrs	r5, r5, #5
 801fa2c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fa30:	432f      	orrs	r7, r5
 801fa32:	8007      	strh	r7, [r0, #0]
 801fa34:	3002      	adds	r0, #2
 801fa36:	3402      	adds	r4, #2
 801fa38:	e7ac      	b.n	801f994 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801fa3a:	f8b9 3000 	ldrh.w	r3, [r9]
 801fa3e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801fa42:	eba3 0308 	sub.w	r3, r3, r8
 801fa46:	eba6 0608 	sub.w	r6, r6, r8
 801fa4a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801fa4e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fa52:	440e      	add	r6, r1
 801fa54:	e797      	b.n	801f986 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801fa56:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801fa5a:	42a8      	cmp	r0, r5
 801fa5c:	d262      	bcs.n	801fb24 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801fa5e:	9b00      	ldr	r3, [sp, #0]
 801fa60:	4631      	mov	r1, r6
 801fa62:	eb00 0b03 	add.w	fp, r0, r3
 801fa66:	4558      	cmp	r0, fp
 801fa68:	d24e      	bcs.n	801fb08 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801fa6a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801fa6e:	b12b      	cbz	r3, 801fa7c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801fa70:	2bff      	cmp	r3, #255	; 0xff
 801fa72:	f8b4 e000 	ldrh.w	lr, [r4]
 801fa76:	d104      	bne.n	801fa82 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801fa78:	f8a0 e000 	strh.w	lr, [r0]
 801fa7c:	3002      	adds	r0, #2
 801fa7e:	3402      	adds	r4, #2
 801fa80:	e7f1      	b.n	801fa66 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801fa82:	8802      	ldrh	r2, [r0, #0]
 801fa84:	b29f      	uxth	r7, r3
 801fa86:	1216      	asrs	r6, r2, #8
 801fa88:	43db      	mvns	r3, r3
 801fa8a:	b2db      	uxtb	r3, r3
 801fa8c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801fa90:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801fa94:	fb16 f603 	smulbb	r6, r6, r3
 801fa98:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801fa9c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801faa0:	00d2      	lsls	r2, r2, #3
 801faa2:	fb0c 6c07 	mla	ip, ip, r7, r6
 801faa6:	b2d2      	uxtb	r2, r2
 801faa8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801faac:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801fab0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fab4:	fb1a fa03 	smulbb	sl, sl, r3
 801fab8:	fa1f fc8c 	uxth.w	ip, ip
 801fabc:	fb12 f303 	smulbb	r3, r2, r3
 801fac0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801fac4:	fa5f fe8e 	uxtb.w	lr, lr
 801fac8:	fb06 a607 	mla	r6, r6, r7, sl
 801facc:	f10c 0201 	add.w	r2, ip, #1
 801fad0:	fb0e 3307 	mla	r3, lr, r7, r3
 801fad4:	b2b6      	uxth	r6, r6
 801fad6:	b29b      	uxth	r3, r3
 801fad8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801fadc:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801fae0:	f106 0a01 	add.w	sl, r6, #1
 801fae4:	f103 0c01 	add.w	ip, r3, #1
 801fae8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801faec:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801faf0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801faf4:	0976      	lsrs	r6, r6, #5
 801faf6:	ea4c 0c02 	orr.w	ip, ip, r2
 801fafa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801fafe:	ea4c 0c06 	orr.w	ip, ip, r6
 801fb02:	f8a0 c000 	strh.w	ip, [r0]
 801fb06:	e7b9      	b.n	801fa7c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801fb08:	f8b9 3000 	ldrh.w	r3, [r9]
 801fb0c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801fb10:	eba3 0308 	sub.w	r3, r3, r8
 801fb14:	eba6 0608 	sub.w	r6, r6, r8
 801fb18:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801fb1c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fb20:	440e      	add	r6, r1
 801fb22:	e79a      	b.n	801fa5a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801fb24:	4b03      	ldr	r3, [pc, #12]	; (801fb34 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801fb26:	6818      	ldr	r0, [r3, #0]
 801fb28:	6803      	ldr	r3, [r0, #0]
 801fb2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fb2c:	4798      	blx	r3
 801fb2e:	b007      	add	sp, #28
 801fb30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb34:	2000e1c0 	.word	0x2000e1c0
 801fb38:	2000e1ba 	.word	0x2000e1ba

0801fb3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801fb3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb40:	b089      	sub	sp, #36	; 0x24
 801fb42:	4682      	mov	sl, r0
 801fb44:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801fb48:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801fb4a:	460f      	mov	r7, r1
 801fb4c:	4691      	mov	r9, r2
 801fb4e:	4698      	mov	r8, r3
 801fb50:	2e00      	cmp	r6, #0
 801fb52:	d03d      	beq.n	801fbd0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fb54:	4608      	mov	r0, r1
 801fb56:	f7fa fe61 	bl	801a81c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801fb5a:	4605      	mov	r5, r0
 801fb5c:	4638      	mov	r0, r7
 801fb5e:	f7fa fe91 	bl	801a884 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801fb62:	f8ad 000e 	strh.w	r0, [sp, #14]
 801fb66:	4638      	mov	r0, r7
 801fb68:	f8ad 9008 	strh.w	r9, [sp, #8]
 801fb6c:	f8ad 500c 	strh.w	r5, [sp, #12]
 801fb70:	f8ad 800a 	strh.w	r8, [sp, #10]
 801fb74:	f7fa ff3e 	bl	801a9f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801fb78:	4605      	mov	r5, r0
 801fb7a:	4638      	mov	r0, r7
 801fb7c:	f7fa ff6a 	bl	801aa54 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801fb80:	4681      	mov	r9, r0
 801fb82:	4638      	mov	r0, r7
 801fb84:	f7fa ffba 	bl	801aafc <_ZNK8touchgfx6Bitmap9getFormatEv>
 801fb88:	280b      	cmp	r0, #11
 801fb8a:	d821      	bhi.n	801fbd0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fb8c:	e8df f000 	tbb	[pc, r0]
 801fb90:	2006aebe 	.word	0x2006aebe
 801fb94:	20202020 	.word	0x20202020
 801fb98:	b5202020 	.word	0xb5202020
 801fb9c:	4bb0      	ldr	r3, [pc, #704]	; (801fe60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801fb9e:	6818      	ldr	r0, [r3, #0]
 801fba0:	6803      	ldr	r3, [r0, #0]
 801fba2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801fba4:	4798      	blx	r3
 801fba6:	2eff      	cmp	r6, #255	; 0xff
 801fba8:	d101      	bne.n	801fbae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801fbaa:	0683      	lsls	r3, r0, #26
 801fbac:	d506      	bpl.n	801fbbc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801fbae:	4633      	mov	r3, r6
 801fbb0:	4622      	mov	r2, r4
 801fbb2:	a902      	add	r1, sp, #8
 801fbb4:	4628      	mov	r0, r5
 801fbb6:	f7ff f909 	bl	801edcc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801fbba:	e009      	b.n	801fbd0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fbbc:	4638      	mov	r0, r7
 801fbbe:	f7fa fee1 	bl	801a984 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801fbc2:	b940      	cbnz	r0, 801fbd6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801fbc4:	4623      	mov	r3, r4
 801fbc6:	aa02      	add	r2, sp, #8
 801fbc8:	4629      	mov	r1, r5
 801fbca:	4650      	mov	r0, sl
 801fbcc:	f7ff f9e4 	bl	801ef98 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801fbd0:	b009      	add	sp, #36	; 0x24
 801fbd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fbd6:	f10d 0818 	add.w	r8, sp, #24
 801fbda:	4639      	mov	r1, r7
 801fbdc:	4640      	mov	r0, r8
 801fbde:	f7fa fe85 	bl	801a8ec <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801fbe2:	e898 0003 	ldmia.w	r8, {r0, r1}
 801fbe6:	af04      	add	r7, sp, #16
 801fbe8:	e887 0003 	stmia.w	r7, {r0, r1}
 801fbec:	4638      	mov	r0, r7
 801fbee:	4621      	mov	r1, r4
 801fbf0:	f7f2 fcf4 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 801fbf4:	4638      	mov	r0, r7
 801fbf6:	f7f2 fd34 	bl	8012662 <_ZNK8touchgfx4Rect7isEmptyEv>
 801fbfa:	2800      	cmp	r0, #0
 801fbfc:	d1d7      	bne.n	801fbae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801fbfe:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801fc02:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801fc06:	4293      	cmp	r3, r2
 801fc08:	dd12      	ble.n	801fc30 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801fc0a:	1a9b      	subs	r3, r3, r2
 801fc0c:	f9b4 0000 	ldrsh.w	r0, [r4]
 801fc10:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801fc14:	f8ad 0018 	strh.w	r0, [sp, #24]
 801fc18:	f8ad 201a 	strh.w	r2, [sp, #26]
 801fc1c:	f8ad 101c 	strh.w	r1, [sp, #28]
 801fc20:	f8ad 301e 	strh.w	r3, [sp, #30]
 801fc24:	4642      	mov	r2, r8
 801fc26:	4633      	mov	r3, r6
 801fc28:	a902      	add	r1, sp, #8
 801fc2a:	4628      	mov	r0, r5
 801fc2c:	f7ff f8ce 	bl	801edcc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801fc30:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801fc34:	f9b4 2000 	ldrsh.w	r2, [r4]
 801fc38:	4293      	cmp	r3, r2
 801fc3a:	dd12      	ble.n	801fc62 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801fc3c:	1a9b      	subs	r3, r3, r2
 801fc3e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801fc42:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801fc46:	f8ad 2018 	strh.w	r2, [sp, #24]
 801fc4a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801fc4e:	f8ad 301c 	strh.w	r3, [sp, #28]
 801fc52:	f8ad 101e 	strh.w	r1, [sp, #30]
 801fc56:	23ff      	movs	r3, #255	; 0xff
 801fc58:	4642      	mov	r2, r8
 801fc5a:	a902      	add	r1, sp, #8
 801fc5c:	4628      	mov	r0, r5
 801fc5e:	f7ff f8b5 	bl	801edcc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801fc62:	463b      	mov	r3, r7
 801fc64:	aa02      	add	r2, sp, #8
 801fc66:	4629      	mov	r1, r5
 801fc68:	4650      	mov	r0, sl
 801fc6a:	f7ff f995 	bl	801ef98 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801fc6e:	88a2      	ldrh	r2, [r4, #4]
 801fc70:	8823      	ldrh	r3, [r4, #0]
 801fc72:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801fc76:	4413      	add	r3, r2
 801fc78:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801fc7c:	440a      	add	r2, r1
 801fc7e:	b29b      	uxth	r3, r3
 801fc80:	b292      	uxth	r2, r2
 801fc82:	b211      	sxth	r1, r2
 801fc84:	b218      	sxth	r0, r3
 801fc86:	4288      	cmp	r0, r1
 801fc88:	dd12      	ble.n	801fcb0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801fc8a:	1a9b      	subs	r3, r3, r2
 801fc8c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801fc90:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801fc94:	f8ad 1018 	strh.w	r1, [sp, #24]
 801fc98:	f8ad 301c 	strh.w	r3, [sp, #28]
 801fc9c:	f8ad 001e 	strh.w	r0, [sp, #30]
 801fca0:	23ff      	movs	r3, #255	; 0xff
 801fca2:	4642      	mov	r2, r8
 801fca4:	a902      	add	r1, sp, #8
 801fca6:	4628      	mov	r0, r5
 801fca8:	f8ad 601a 	strh.w	r6, [sp, #26]
 801fcac:	f7ff f88e 	bl	801edcc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801fcb0:	88e2      	ldrh	r2, [r4, #6]
 801fcb2:	8863      	ldrh	r3, [r4, #2]
 801fcb4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801fcb8:	4413      	add	r3, r2
 801fcba:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801fcbe:	440a      	add	r2, r1
 801fcc0:	b29b      	uxth	r3, r3
 801fcc2:	b292      	uxth	r2, r2
 801fcc4:	b211      	sxth	r1, r2
 801fcc6:	b218      	sxth	r0, r3
 801fcc8:	4288      	cmp	r0, r1
 801fcca:	dd81      	ble.n	801fbd0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fccc:	1a9b      	subs	r3, r3, r2
 801fcce:	f9b4 6000 	ldrsh.w	r6, [r4]
 801fcd2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801fcd6:	f8ad 301e 	strh.w	r3, [sp, #30]
 801fcda:	f8ad 6018 	strh.w	r6, [sp, #24]
 801fcde:	f8ad 101a 	strh.w	r1, [sp, #26]
 801fce2:	f8ad 001c 	strh.w	r0, [sp, #28]
 801fce6:	23ff      	movs	r3, #255	; 0xff
 801fce8:	4642      	mov	r2, r8
 801fcea:	e762      	b.n	801fbb2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801fcec:	4633      	mov	r3, r6
 801fcee:	4622      	mov	r2, r4
 801fcf0:	a902      	add	r1, sp, #8
 801fcf2:	4628      	mov	r0, r5
 801fcf4:	f7ff f9c0 	bl	801f078 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801fcf8:	e76a      	b.n	801fbd0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fcfa:	e9cd 4600 	strd	r4, r6, [sp]
 801fcfe:	ab02      	add	r3, sp, #8
 801fd00:	464a      	mov	r2, r9
 801fd02:	4629      	mov	r1, r5
 801fd04:	4650      	mov	r0, sl
 801fd06:	f7ff fd97 	bl	801f838 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801fd0a:	e761      	b.n	801fbd0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fd0c:	4638      	mov	r0, r7
 801fd0e:	f7fa fe39 	bl	801a984 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801fd12:	b950      	cbnz	r0, 801fd2a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801fd14:	e9cd 6000 	strd	r6, r0, [sp]
 801fd18:	f8da 3000 	ldr.w	r3, [sl]
 801fd1c:	aa02      	add	r2, sp, #8
 801fd1e:	68de      	ldr	r6, [r3, #12]
 801fd20:	4629      	mov	r1, r5
 801fd22:	4623      	mov	r3, r4
 801fd24:	4650      	mov	r0, sl
 801fd26:	47b0      	blx	r6
 801fd28:	e752      	b.n	801fbd0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fd2a:	f10d 0818 	add.w	r8, sp, #24
 801fd2e:	4639      	mov	r1, r7
 801fd30:	4640      	mov	r0, r8
 801fd32:	f7fa fddb 	bl	801a8ec <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801fd36:	e898 0003 	ldmia.w	r8, {r0, r1}
 801fd3a:	af04      	add	r7, sp, #16
 801fd3c:	e887 0003 	stmia.w	r7, {r0, r1}
 801fd40:	4638      	mov	r0, r7
 801fd42:	4621      	mov	r1, r4
 801fd44:	f7f2 fc4a 	bl	80125dc <_ZN8touchgfx4RectaNERKS0_>
 801fd48:	4638      	mov	r0, r7
 801fd4a:	f7f2 fc8a 	bl	8012662 <_ZNK8touchgfx4Rect7isEmptyEv>
 801fd4e:	b138      	cbz	r0, 801fd60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801fd50:	9600      	str	r6, [sp, #0]
 801fd52:	4623      	mov	r3, r4
 801fd54:	aa02      	add	r2, sp, #8
 801fd56:	4649      	mov	r1, r9
 801fd58:	4628      	mov	r0, r5
 801fd5a:	f7ff fdc9 	bl	801f8f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fd5e:	e737      	b.n	801fbd0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fd60:	e9cd 6000 	strd	r6, r0, [sp]
 801fd64:	f8da 3000 	ldr.w	r3, [sl]
 801fd68:	aa02      	add	r2, sp, #8
 801fd6a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801fd6e:	4629      	mov	r1, r5
 801fd70:	463b      	mov	r3, r7
 801fd72:	4650      	mov	r0, sl
 801fd74:	47d8      	blx	fp
 801fd76:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801fd7a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801fd7e:	4293      	cmp	r3, r2
 801fd80:	dd13      	ble.n	801fdaa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801fd82:	f9b4 0000 	ldrsh.w	r0, [r4]
 801fd86:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801fd8a:	f8ad 0018 	strh.w	r0, [sp, #24]
 801fd8e:	1a9b      	subs	r3, r3, r2
 801fd90:	f8ad 201a 	strh.w	r2, [sp, #26]
 801fd94:	f8ad 101c 	strh.w	r1, [sp, #28]
 801fd98:	f8ad 301e 	strh.w	r3, [sp, #30]
 801fd9c:	9600      	str	r6, [sp, #0]
 801fd9e:	4643      	mov	r3, r8
 801fda0:	aa02      	add	r2, sp, #8
 801fda2:	4649      	mov	r1, r9
 801fda4:	4628      	mov	r0, r5
 801fda6:	f7ff fda3 	bl	801f8f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fdaa:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801fdae:	f9b4 2000 	ldrsh.w	r2, [r4]
 801fdb2:	4293      	cmp	r3, r2
 801fdb4:	dd13      	ble.n	801fdde <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801fdb6:	1a9b      	subs	r3, r3, r2
 801fdb8:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801fdbc:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801fdc0:	f8ad 2018 	strh.w	r2, [sp, #24]
 801fdc4:	f8ad 001a 	strh.w	r0, [sp, #26]
 801fdc8:	f8ad 301c 	strh.w	r3, [sp, #28]
 801fdcc:	f8ad 101e 	strh.w	r1, [sp, #30]
 801fdd0:	9600      	str	r6, [sp, #0]
 801fdd2:	4643      	mov	r3, r8
 801fdd4:	aa02      	add	r2, sp, #8
 801fdd6:	4649      	mov	r1, r9
 801fdd8:	4628      	mov	r0, r5
 801fdda:	f7ff fd89 	bl	801f8f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fdde:	88a2      	ldrh	r2, [r4, #4]
 801fde0:	8823      	ldrh	r3, [r4, #0]
 801fde2:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801fde6:	4413      	add	r3, r2
 801fde8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801fdec:	440a      	add	r2, r1
 801fdee:	b29b      	uxth	r3, r3
 801fdf0:	b292      	uxth	r2, r2
 801fdf2:	b211      	sxth	r1, r2
 801fdf4:	b218      	sxth	r0, r3
 801fdf6:	4288      	cmp	r0, r1
 801fdf8:	dd13      	ble.n	801fe22 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801fdfa:	1a9b      	subs	r3, r3, r2
 801fdfc:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801fe00:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801fe04:	f8ad 1018 	strh.w	r1, [sp, #24]
 801fe08:	f8ad 301c 	strh.w	r3, [sp, #28]
 801fe0c:	f8ad 001e 	strh.w	r0, [sp, #30]
 801fe10:	9600      	str	r6, [sp, #0]
 801fe12:	4643      	mov	r3, r8
 801fe14:	aa02      	add	r2, sp, #8
 801fe16:	4649      	mov	r1, r9
 801fe18:	4628      	mov	r0, r5
 801fe1a:	f8ad 701a 	strh.w	r7, [sp, #26]
 801fe1e:	f7ff fd67 	bl	801f8f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fe22:	88e2      	ldrh	r2, [r4, #6]
 801fe24:	8863      	ldrh	r3, [r4, #2]
 801fe26:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801fe2a:	4413      	add	r3, r2
 801fe2c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801fe30:	440a      	add	r2, r1
 801fe32:	b29b      	uxth	r3, r3
 801fe34:	b292      	uxth	r2, r2
 801fe36:	b211      	sxth	r1, r2
 801fe38:	b218      	sxth	r0, r3
 801fe3a:	4288      	cmp	r0, r1
 801fe3c:	f77f aec8 	ble.w	801fbd0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fe40:	f9b4 7000 	ldrsh.w	r7, [r4]
 801fe44:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801fe48:	f8ad 7018 	strh.w	r7, [sp, #24]
 801fe4c:	1a9b      	subs	r3, r3, r2
 801fe4e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801fe52:	f8ad 101a 	strh.w	r1, [sp, #26]
 801fe56:	f8ad 001c 	strh.w	r0, [sp, #28]
 801fe5a:	9600      	str	r6, [sp, #0]
 801fe5c:	4643      	mov	r3, r8
 801fe5e:	e779      	b.n	801fd54 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801fe60:	2000e1c0 	.word	0x2000e1c0

0801fe64 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801fe64:	b180      	cbz	r0, 801fe88 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801fe66:	2903      	cmp	r1, #3
 801fe68:	d81c      	bhi.n	801fea4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801fe6a:	e8df f001 	tbb	[pc, r1]
 801fe6e:	1d02      	.short	0x1d02
 801fe70:	1f08      	.short	0x1f08
 801fe72:	4b10      	ldr	r3, [pc, #64]	; (801feb4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801fe74:	8818      	ldrh	r0, [r3, #0]
 801fe76:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fe7a:	4240      	negs	r0, r0
 801fe7c:	4770      	bx	lr
 801fe7e:	4b0d      	ldr	r3, [pc, #52]	; (801feb4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801fe80:	8818      	ldrh	r0, [r3, #0]
 801fe82:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fe86:	4770      	bx	lr
 801fe88:	2903      	cmp	r1, #3
 801fe8a:	d80b      	bhi.n	801fea4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801fe8c:	a301      	add	r3, pc, #4	; (adr r3, 801fe94 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801fe8e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801fe92:	bf00      	nop
 801fe94:	0801fea9 	.word	0x0801fea9
 801fe98:	0801fe7f 	.word	0x0801fe7f
 801fe9c:	0801fead 	.word	0x0801fead
 801fea0:	0801fe73 	.word	0x0801fe73
 801fea4:	2000      	movs	r0, #0
 801fea6:	4770      	bx	lr
 801fea8:	2001      	movs	r0, #1
 801feaa:	4770      	bx	lr
 801feac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801feb0:	4770      	bx	lr
 801feb2:	bf00      	nop
 801feb4:	2000e1ba 	.word	0x2000e1ba

0801feb8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801feb8:	b180      	cbz	r0, 801fedc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801feba:	2903      	cmp	r1, #3
 801febc:	d81c      	bhi.n	801fef8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801febe:	e8df f001 	tbb	[pc, r1]
 801fec2:	021d      	.short	0x021d
 801fec4:	071f      	.short	0x071f
 801fec6:	4b10      	ldr	r3, [pc, #64]	; (801ff08 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801fec8:	8818      	ldrh	r0, [r3, #0]
 801feca:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fece:	4770      	bx	lr
 801fed0:	4b0d      	ldr	r3, [pc, #52]	; (801ff08 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801fed2:	8818      	ldrh	r0, [r3, #0]
 801fed4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fed8:	4240      	negs	r0, r0
 801feda:	4770      	bx	lr
 801fedc:	2903      	cmp	r1, #3
 801fede:	d80b      	bhi.n	801fef8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801fee0:	a301      	add	r3, pc, #4	; (adr r3, 801fee8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801fee2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801fee6:	bf00      	nop
 801fee8:	0801fec7 	.word	0x0801fec7
 801feec:	0801ff01 	.word	0x0801ff01
 801fef0:	0801fed1 	.word	0x0801fed1
 801fef4:	0801fefd 	.word	0x0801fefd
 801fef8:	2000      	movs	r0, #0
 801fefa:	4770      	bx	lr
 801fefc:	2001      	movs	r0, #1
 801fefe:	4770      	bx	lr
 801ff00:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801ff04:	4770      	bx	lr
 801ff06:	bf00      	nop
 801ff08:	2000e1ba 	.word	0x2000e1ba

0801ff0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801ff0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff10:	b099      	sub	sp, #100	; 0x64
 801ff12:	910b      	str	r1, [sp, #44]	; 0x2c
 801ff14:	a914      	add	r1, sp, #80	; 0x50
 801ff16:	e881 000c 	stmia.w	r1, {r2, r3}
 801ff1a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801ff1e:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801ff22:	f891 900d 	ldrb.w	r9, [r1, #13]
 801ff26:	9309      	str	r3, [sp, #36]	; 0x24
 801ff28:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801ff2c:	9310      	str	r3, [sp, #64]	; 0x40
 801ff2e:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801ff32:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801ff36:	930c      	str	r3, [sp, #48]	; 0x30
 801ff38:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801ff3c:	798f      	ldrb	r7, [r1, #6]
 801ff3e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801ff42:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801ff46:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801ff4a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801ff4e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801ff52:	431f      	orrs	r7, r3
 801ff54:	f000 8195 	beq.w	8020282 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ff58:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801ff5c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801ff60:	f891 9007 	ldrb.w	r9, [r1, #7]
 801ff64:	ea59 0903 	orrs.w	r9, r9, r3
 801ff68:	f000 818b 	beq.w	8020282 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ff6c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801ff70:	b29b      	uxth	r3, r3
 801ff72:	2d00      	cmp	r5, #0
 801ff74:	f000 812e 	beq.w	80201d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801ff78:	1aed      	subs	r5, r5, r3
 801ff7a:	b2ad      	uxth	r5, r5
 801ff7c:	042b      	lsls	r3, r5, #16
 801ff7e:	d502      	bpl.n	801ff86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ff80:	1b64      	subs	r4, r4, r5
 801ff82:	b224      	sxth	r4, r4
 801ff84:	2500      	movs	r5, #0
 801ff86:	f9b2 1000 	ldrsh.w	r1, [r2]
 801ff8a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801ff8e:	428c      	cmp	r4, r1
 801ff90:	b28b      	uxth	r3, r1
 801ff92:	bfbf      	itttt	lt
 801ff94:	18ed      	addlt	r5, r5, r3
 801ff96:	1b2c      	sublt	r4, r5, r4
 801ff98:	b2a5      	uxthlt	r5, r4
 801ff9a:	460c      	movlt	r4, r1
 801ff9c:	8891      	ldrh	r1, [r2, #4]
 801ff9e:	440b      	add	r3, r1
 801ffa0:	b21b      	sxth	r3, r3
 801ffa2:	930f      	str	r3, [sp, #60]	; 0x3c
 801ffa4:	88d3      	ldrh	r3, [r2, #6]
 801ffa6:	8852      	ldrh	r2, [r2, #2]
 801ffa8:	4413      	add	r3, r2
 801ffaa:	b21b      	sxth	r3, r3
 801ffac:	930d      	str	r3, [sp, #52]	; 0x34
 801ffae:	4bbe      	ldr	r3, [pc, #760]	; (80202a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801ffb0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ffb2:	f893 b000 	ldrb.w	fp, [r3]
 801ffb6:	f10b 3cff 	add.w	ip, fp, #4294967295	; 0xffffffff
 801ffba:	f1dc 0300 	rsbs	r3, ip, #0
 801ffbe:	eb43 030c 	adc.w	r3, r3, ip
 801ffc2:	930e      	str	r3, [sp, #56]	; 0x38
 801ffc4:	4621      	mov	r1, r4
 801ffc6:	4653      	mov	r3, sl
 801ffc8:	a814      	add	r0, sp, #80	; 0x50
 801ffca:	f7f6 ff38 	bl	8016e3e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801ffce:	4621      	mov	r1, r4
 801ffd0:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801ffd4:	4653      	mov	r3, sl
 801ffd6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ffd8:	a814      	add	r0, sp, #80	; 0x50
 801ffda:	f7f6 ff4d 	bl	8016e78 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801ffde:	a918      	add	r1, sp, #96	; 0x60
 801ffe0:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801ffe4:	a817      	add	r0, sp, #92	; 0x5c
 801ffe6:	f7f7 f873 	bl	80170d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801ffea:	f1ba 0f00 	cmp.w	sl, #0
 801ffee:	f040 80f4 	bne.w	80201da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801fff2:	f1bb 0f01 	cmp.w	fp, #1
 801fff6:	f040 80f8 	bne.w	80201ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801fffa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fffc:	2b00      	cmp	r3, #0
 801fffe:	f040 8145 	bne.w	802028c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8020002:	b2ba      	uxth	r2, r7
 8020004:	b905      	cbnz	r5, 8020008 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8020006:	b16e      	cbz	r6, 8020024 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8020008:	fb06 5302 	mla	r3, r6, r2, r5
 802000c:	9828      	ldr	r0, [sp, #160]	; 0xa0
 802000e:	fb08 f303 	mul.w	r3, r8, r3
 8020012:	4631      	mov	r1, r6
 8020014:	f003 0607 	and.w	r6, r3, #7
 8020018:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 802001c:	9328      	str	r3, [sp, #160]	; 0xa0
 802001e:	eba9 0301 	sub.w	r3, r9, r1
 8020022:	930a      	str	r3, [sp, #40]	; 0x28
 8020024:	4651      	mov	r1, sl
 8020026:	980e      	ldr	r0, [sp, #56]	; 0x38
 8020028:	f7ff ff1c 	bl	801fe64 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 802002c:	4681      	mov	r9, r0
 802002e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8020030:	f7ff ff42 	bl	801feb8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8020034:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020036:	9909      	ldr	r1, [sp, #36]	; 0x24
 8020038:	eba3 0a01 	sub.w	sl, r3, r1
 802003c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802003e:	459a      	cmp	sl, r3
 8020040:	bfa8      	it	ge
 8020042:	469a      	movge	sl, r3
 8020044:	f1ba 0f00 	cmp.w	sl, #0
 8020048:	4683      	mov	fp, r0
 802004a:	f340 811a 	ble.w	8020282 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 802004e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020050:	1b64      	subs	r4, r4, r5
 8020052:	1b1c      	subs	r4, r3, r4
 8020054:	42bc      	cmp	r4, r7
 8020056:	bfd4      	ite	le
 8020058:	ebc5 0504 	rsble	r5, r5, r4
 802005c:	ebc5 0507 	rsbgt	r5, r5, r7
 8020060:	2d00      	cmp	r5, #0
 8020062:	f340 810e 	ble.w	8020282 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8020066:	1b52      	subs	r2, r2, r5
 8020068:	fb08 f302 	mul.w	r3, r8, r2
 802006c:	930f      	str	r3, [sp, #60]	; 0x3c
 802006e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020070:	2b00      	cmp	r3, #0
 8020072:	f040 8116 	bne.w	80202a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8020076:	4b8d      	ldr	r3, [pc, #564]	; (80202ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8020078:	6818      	ldr	r0, [r3, #0]
 802007a:	6803      	ldr	r3, [r0, #0]
 802007c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802007e:	4798      	blx	r3
 8020080:	2301      	movs	r3, #1
 8020082:	fa03 f308 	lsl.w	r3, r3, r8
 8020086:	4a8a      	ldr	r2, [pc, #552]	; (80202b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8020088:	3b01      	subs	r3, #1
 802008a:	b2db      	uxtb	r3, r3
 802008c:	8811      	ldrh	r1, [r2, #0]
 802008e:	930e      	str	r3, [sp, #56]	; 0x38
 8020090:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8020094:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8020098:	fb01 2303 	mla	r3, r1, r3, r2
 802009c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80200a0:	930a      	str	r3, [sp, #40]	; 0x28
 80200a2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80200a4:	f3c3 4307 	ubfx	r3, r3, #16, #8
 80200a8:	9313      	str	r3, [sp, #76]	; 0x4c
 80200aa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80200ac:	0a19      	lsrs	r1, r3, #8
 80200ae:	b2cb      	uxtb	r3, r1
 80200b0:	9312      	str	r3, [sp, #72]	; 0x48
 80200b2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80200b4:	b2db      	uxtb	r3, r3
 80200b6:	9311      	str	r3, [sp, #68]	; 0x44
 80200b8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80200ba:	095a      	lsrs	r2, r3, #5
 80200bc:	4b7d      	ldr	r3, [pc, #500]	; (80202b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 80200be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80200c2:	400b      	ands	r3, r1
 80200c4:	4313      	orrs	r3, r2
 80200c6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80200c8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80200cc:	4313      	orrs	r3, r2
 80200ce:	b29b      	uxth	r3, r3
 80200d0:	9310      	str	r3, [sp, #64]	; 0x40
 80200d2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80200d4:	781a      	ldrb	r2, [r3, #0]
 80200d6:	ea4f 0349 	mov.w	r3, r9, lsl #1
 80200da:	4132      	asrs	r2, r6
 80200dc:	fb05 b919 	mls	r9, r5, r9, fp
 80200e0:	fb03 fb05 	mul.w	fp, r3, r5
 80200e4:	b2d2      	uxtb	r2, r2
 80200e6:	930d      	str	r3, [sp, #52]	; 0x34
 80200e8:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 80200ec:	f11a 3aff 	adds.w	sl, sl, #4294967295	; 0xffffffff
 80200f0:	f0c0 80f5 	bcc.w	80202de <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 80200f4:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 80200f8:	46ae      	mov	lr, r5
 80200fa:	f11e 3eff 	adds.w	lr, lr, #4294967295	; 0xffffffff
 80200fe:	f0c0 80dd 	bcc.w	80202bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8020102:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020104:	4013      	ands	r3, r2
 8020106:	d055      	beq.n	80201b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8020108:	20ff      	movs	r0, #255	; 0xff
 802010a:	990e      	ldr	r1, [sp, #56]	; 0x38
 802010c:	fb90 f1f1 	sdiv	r1, r0, r1
 8020110:	434b      	muls	r3, r1
 8020112:	2bfe      	cmp	r3, #254	; 0xfe
 8020114:	dd03      	ble.n	802011e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8020116:	990c      	ldr	r1, [sp, #48]	; 0x30
 8020118:	4281      	cmp	r1, r0
 802011a:	f000 80cd 	beq.w	80202b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 802011e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8020120:	f8bc 4000 	ldrh.w	r4, [ip]
 8020124:	fb11 f303 	smulbb	r3, r1, r3
 8020128:	b29b      	uxth	r3, r3
 802012a:	1c59      	adds	r1, r3, #1
 802012c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8020130:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020134:	b29f      	uxth	r7, r3
 8020136:	43db      	mvns	r3, r3
 8020138:	b2db      	uxtb	r3, r3
 802013a:	9309      	str	r3, [sp, #36]	; 0x24
 802013c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802013e:	1220      	asrs	r0, r4, #8
 8020140:	fb13 f907 	smulbb	r9, r3, r7
 8020144:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020148:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802014a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 802014e:	fb00 9003 	mla	r0, r0, r3, r9
 8020152:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020154:	10e1      	asrs	r1, r4, #3
 8020156:	fb13 f907 	smulbb	r9, r3, r7
 802015a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802015e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020160:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8020164:	fb01 9103 	mla	r1, r1, r3, r9
 8020168:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802016a:	00e4      	lsls	r4, r4, #3
 802016c:	fb13 f707 	smulbb	r7, r3, r7
 8020170:	b2e4      	uxtb	r4, r4
 8020172:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020174:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020178:	fb04 7403 	mla	r4, r4, r3, r7
 802017c:	b280      	uxth	r0, r0
 802017e:	b2a4      	uxth	r4, r4
 8020180:	1c43      	adds	r3, r0, #1
 8020182:	f104 0901 	add.w	r9, r4, #1
 8020186:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802018a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 802018e:	b289      	uxth	r1, r1
 8020190:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8020194:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8020198:	ea49 0000 	orr.w	r0, r9, r0
 802019c:	f101 0901 	add.w	r9, r1, #1
 80201a0:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 80201a4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80201a8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80201ac:	ea40 0009 	orr.w	r0, r0, r9
 80201b0:	f8ac 0000 	strh.w	r0, [ip]
 80201b4:	4446      	add	r6, r8
 80201b6:	b2b6      	uxth	r6, r6
 80201b8:	2e07      	cmp	r6, #7
 80201ba:	bf81      	itttt	hi
 80201bc:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 80201be:	785a      	ldrbhi	r2, [r3, #1]
 80201c0:	3301      	addhi	r3, #1
 80201c2:	9328      	strhi	r3, [sp, #160]	; 0xa0
 80201c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80201c6:	bf9a      	itte	ls
 80201c8:	fa42 f208 	asrls.w	r2, r2, r8
 80201cc:	b2d2      	uxtbls	r2, r2
 80201ce:	2600      	movhi	r6, #0
 80201d0:	449c      	add	ip, r3
 80201d2:	e792      	b.n	80200fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 80201d4:	441c      	add	r4, r3
 80201d6:	b224      	sxth	r4, r4
 80201d8:	e6d5      	b.n	801ff86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80201da:	f1ba 0f01 	cmp.w	sl, #1
 80201de:	f47f af0c 	bne.w	801fffa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80201e2:	f1bb 0f01 	cmp.w	fp, #1
 80201e6:	f47f af08 	bne.w	801fffa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80201ea:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 80202ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 80201ee:	f8db 0000 	ldr.w	r0, [fp]
 80201f2:	6803      	ldr	r3, [r0, #0]
 80201f4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80201f6:	4798      	blx	r3
 80201f8:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 80201fc:	465a      	mov	r2, fp
 80201fe:	d006      	beq.n	802020e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8020200:	f1b8 0f04 	cmp.w	r8, #4
 8020204:	d140      	bne.n	8020288 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8020206:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020208:	3300      	adds	r3, #0
 802020a:	bf18      	it	ne
 802020c:	2301      	movne	r3, #1
 802020e:	0580      	lsls	r0, r0, #22
 8020210:	d56e      	bpl.n	80202f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8020212:	f1b8 0f08 	cmp.w	r8, #8
 8020216:	d16b      	bne.n	80202f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8020218:	2b00      	cmp	r3, #0
 802021a:	bf0c      	ite	eq
 802021c:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8020220:	f44f 7180 	movne.w	r1, #256	; 0x100
 8020224:	2d00      	cmp	r5, #0
 8020226:	f47f aee8 	bne.w	801fffa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 802022a:	2e00      	cmp	r6, #0
 802022c:	f47f aee5 	bne.w	801fffa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8020230:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8020232:	19e3      	adds	r3, r4, r7
 8020234:	4283      	cmp	r3, r0
 8020236:	f73f aee0 	bgt.w	801fffa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 802023a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802023c:	980d      	ldr	r0, [sp, #52]	; 0x34
 802023e:	444b      	add	r3, r9
 8020240:	4283      	cmp	r3, r0
 8020242:	f73f aeda 	bgt.w	801fffa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8020246:	6810      	ldr	r0, [r2, #0]
 8020248:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 802024c:	6804      	ldr	r4, [r0, #0]
 802024e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8020252:	b2bf      	uxth	r7, r7
 8020254:	f1b8 0f08 	cmp.w	r8, #8
 8020258:	f04f 0500 	mov.w	r5, #0
 802025c:	bf18      	it	ne
 802025e:	3701      	addne	r7, #1
 8020260:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8020264:	990c      	ldr	r1, [sp, #48]	; 0x30
 8020266:	9104      	str	r1, [sp, #16]
 8020268:	bf18      	it	ne
 802026a:	f027 0701 	bicne.w	r7, r7, #1
 802026e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8020270:	bf18      	it	ne
 8020272:	b2bf      	uxthne	r7, r7
 8020274:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8020278:	e9cd 7900 	strd	r7, r9, [sp]
 802027c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 802027e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8020280:	47a0      	blx	r4
 8020282:	b019      	add	sp, #100	; 0x64
 8020284:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020288:	2300      	movs	r3, #0
 802028a:	e7c0      	b.n	802020e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 802028c:	2208      	movs	r2, #8
 802028e:	fb92 f3f8 	sdiv	r3, r2, r8
 8020292:	1e5a      	subs	r2, r3, #1
 8020294:	443a      	add	r2, r7
 8020296:	fb92 f2f3 	sdiv	r2, r2, r3
 802029a:	fb12 f203 	smulbb	r2, r2, r3
 802029e:	b292      	uxth	r2, r2
 80202a0:	e6b0      	b.n	8020004 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 80202a2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80202a4:	e6ec      	b.n	8020080 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 80202a6:	bf00      	nop
 80202a8:	2000e1b8 	.word	0x2000e1b8
 80202ac:	2000e1c0 	.word	0x2000e1c0
 80202b0:	2000e1ba 	.word	0x2000e1ba
 80202b4:	00fff800 	.word	0x00fff800
 80202b8:	9810      	ldr	r0, [sp, #64]	; 0x40
 80202ba:	e779      	b.n	80201b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 80202bc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80202be:	b153      	cbz	r3, 80202d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 80202c0:	441e      	add	r6, r3
 80202c2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80202c4:	b2b6      	uxth	r6, r6
 80202c6:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 80202ca:	f006 0607 	and.w	r6, r6, #7
 80202ce:	781a      	ldrb	r2, [r3, #0]
 80202d0:	9328      	str	r3, [sp, #160]	; 0xa0
 80202d2:	4132      	asrs	r2, r6
 80202d4:	b2d2      	uxtb	r2, r2
 80202d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80202d8:	445b      	add	r3, fp
 80202da:	930a      	str	r3, [sp, #40]	; 0x28
 80202dc:	e706      	b.n	80200ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 80202de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80202e0:	2b00      	cmp	r3, #0
 80202e2:	d1ce      	bne.n	8020282 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80202e4:	4b05      	ldr	r3, [pc, #20]	; (80202fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 80202e6:	6818      	ldr	r0, [r3, #0]
 80202e8:	6803      	ldr	r3, [r0, #0]
 80202ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80202ec:	4798      	blx	r3
 80202ee:	e7c8      	b.n	8020282 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80202f0:	2b00      	cmp	r3, #0
 80202f2:	f43f ae82 	beq.w	801fffa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80202f6:	f44f 7180 	mov.w	r1, #256	; 0x100
 80202fa:	e793      	b.n	8020224 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 80202fc:	2000e1c0 	.word	0x2000e1c0

08020300 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8020300:	b538      	push	{r3, r4, r5, lr}
 8020302:	4c15      	ldr	r4, [pc, #84]	; (8020358 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8020304:	7823      	ldrb	r3, [r4, #0]
 8020306:	f3bf 8f5b 	dmb	ish
 802030a:	07da      	lsls	r2, r3, #31
 802030c:	4605      	mov	r5, r0
 802030e:	d40b      	bmi.n	8020328 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8020310:	4620      	mov	r0, r4
 8020312:	f008 f9e0 	bl	80286d6 <__cxa_guard_acquire>
 8020316:	b138      	cbz	r0, 8020328 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8020318:	4620      	mov	r0, r4
 802031a:	f008 f9e8 	bl	80286ee <__cxa_guard_release>
 802031e:	4a0f      	ldr	r2, [pc, #60]	; (802035c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8020320:	490f      	ldr	r1, [pc, #60]	; (8020360 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8020322:	4810      	ldr	r0, [pc, #64]	; (8020364 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8020324:	f008 f9d0 	bl	80286c8 <__aeabi_atexit>
 8020328:	4c0f      	ldr	r4, [pc, #60]	; (8020368 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 802032a:	7823      	ldrb	r3, [r4, #0]
 802032c:	f3bf 8f5b 	dmb	ish
 8020330:	07db      	lsls	r3, r3, #31
 8020332:	d40b      	bmi.n	802034c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8020334:	4620      	mov	r0, r4
 8020336:	f008 f9ce 	bl	80286d6 <__cxa_guard_acquire>
 802033a:	b138      	cbz	r0, 802034c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 802033c:	4620      	mov	r0, r4
 802033e:	f008 f9d6 	bl	80286ee <__cxa_guard_release>
 8020342:	4a06      	ldr	r2, [pc, #24]	; (802035c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8020344:	4909      	ldr	r1, [pc, #36]	; (802036c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8020346:	480a      	ldr	r0, [pc, #40]	; (8020370 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8020348:	f008 f9be 	bl	80286c8 <__aeabi_atexit>
 802034c:	4b05      	ldr	r3, [pc, #20]	; (8020364 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 802034e:	612b      	str	r3, [r5, #16]
 8020350:	4b07      	ldr	r3, [pc, #28]	; (8020370 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8020352:	616b      	str	r3, [r5, #20]
 8020354:	bd38      	pop	{r3, r4, r5, pc}
 8020356:	bf00      	nop
 8020358:	2000e2a0 	.word	0x2000e2a0
 802035c:	20000000 	.word	0x20000000
 8020360:	0801d111 	.word	0x0801d111
 8020364:	200000a4 	.word	0x200000a4
 8020368:	2000e2a4 	.word	0x2000e2a4
 802036c:	0801d10f 	.word	0x0801d10f
 8020370:	200000a8 	.word	0x200000a8

08020374 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8020374:	b538      	push	{r3, r4, r5, lr}
 8020376:	4c15      	ldr	r4, [pc, #84]	; (80203cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8020378:	7823      	ldrb	r3, [r4, #0]
 802037a:	f3bf 8f5b 	dmb	ish
 802037e:	07da      	lsls	r2, r3, #31
 8020380:	4605      	mov	r5, r0
 8020382:	d40b      	bmi.n	802039c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8020384:	4620      	mov	r0, r4
 8020386:	f008 f9a6 	bl	80286d6 <__cxa_guard_acquire>
 802038a:	b138      	cbz	r0, 802039c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 802038c:	4620      	mov	r0, r4
 802038e:	f008 f9ae 	bl	80286ee <__cxa_guard_release>
 8020392:	4a0f      	ldr	r2, [pc, #60]	; (80203d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8020394:	490f      	ldr	r1, [pc, #60]	; (80203d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8020396:	4810      	ldr	r0, [pc, #64]	; (80203d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8020398:	f008 f996 	bl	80286c8 <__aeabi_atexit>
 802039c:	4c0f      	ldr	r4, [pc, #60]	; (80203dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 802039e:	7823      	ldrb	r3, [r4, #0]
 80203a0:	f3bf 8f5b 	dmb	ish
 80203a4:	07db      	lsls	r3, r3, #31
 80203a6:	d40b      	bmi.n	80203c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80203a8:	4620      	mov	r0, r4
 80203aa:	f008 f994 	bl	80286d6 <__cxa_guard_acquire>
 80203ae:	b138      	cbz	r0, 80203c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80203b0:	4620      	mov	r0, r4
 80203b2:	f008 f99c 	bl	80286ee <__cxa_guard_release>
 80203b6:	4a06      	ldr	r2, [pc, #24]	; (80203d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80203b8:	4909      	ldr	r1, [pc, #36]	; (80203e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 80203ba:	480a      	ldr	r0, [pc, #40]	; (80203e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80203bc:	f008 f984 	bl	80286c8 <__aeabi_atexit>
 80203c0:	4b05      	ldr	r3, [pc, #20]	; (80203d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80203c2:	60ab      	str	r3, [r5, #8]
 80203c4:	4b07      	ldr	r3, [pc, #28]	; (80203e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80203c6:	60eb      	str	r3, [r5, #12]
 80203c8:	bd38      	pop	{r3, r4, r5, pc}
 80203ca:	bf00      	nop
 80203cc:	2000e278 	.word	0x2000e278
 80203d0:	20000000 	.word	0x20000000
 80203d4:	0801d115 	.word	0x0801d115
 80203d8:	2000007c 	.word	0x2000007c
 80203dc:	2000e27c 	.word	0x2000e27c
 80203e0:	0801d113 	.word	0x0801d113
 80203e4:	20000080 	.word	0x20000080

080203e8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80203e8:	b510      	push	{r4, lr}
 80203ea:	4604      	mov	r4, r0
 80203ec:	f7ff ff88 	bl	8020300 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80203f0:	4620      	mov	r0, r4
 80203f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80203f6:	f7ff bfbd 	b.w	8020374 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080203fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80203fc:	b538      	push	{r3, r4, r5, lr}
 80203fe:	4c15      	ldr	r4, [pc, #84]	; (8020454 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8020400:	7823      	ldrb	r3, [r4, #0]
 8020402:	f3bf 8f5b 	dmb	ish
 8020406:	07da      	lsls	r2, r3, #31
 8020408:	4605      	mov	r5, r0
 802040a:	d40b      	bmi.n	8020424 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 802040c:	4620      	mov	r0, r4
 802040e:	f008 f962 	bl	80286d6 <__cxa_guard_acquire>
 8020412:	b138      	cbz	r0, 8020424 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8020414:	4620      	mov	r0, r4
 8020416:	f008 f96a 	bl	80286ee <__cxa_guard_release>
 802041a:	4a0f      	ldr	r2, [pc, #60]	; (8020458 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 802041c:	490f      	ldr	r1, [pc, #60]	; (802045c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 802041e:	4810      	ldr	r0, [pc, #64]	; (8020460 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8020420:	f008 f952 	bl	80286c8 <__aeabi_atexit>
 8020424:	4c0f      	ldr	r4, [pc, #60]	; (8020464 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8020426:	7823      	ldrb	r3, [r4, #0]
 8020428:	f3bf 8f5b 	dmb	ish
 802042c:	07db      	lsls	r3, r3, #31
 802042e:	d40b      	bmi.n	8020448 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8020430:	4620      	mov	r0, r4
 8020432:	f008 f950 	bl	80286d6 <__cxa_guard_acquire>
 8020436:	b138      	cbz	r0, 8020448 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8020438:	4620      	mov	r0, r4
 802043a:	f008 f958 	bl	80286ee <__cxa_guard_release>
 802043e:	4a06      	ldr	r2, [pc, #24]	; (8020458 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8020440:	4909      	ldr	r1, [pc, #36]	; (8020468 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8020442:	480a      	ldr	r0, [pc, #40]	; (802046c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8020444:	f008 f940 	bl	80286c8 <__aeabi_atexit>
 8020448:	4b05      	ldr	r3, [pc, #20]	; (8020460 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 802044a:	622b      	str	r3, [r5, #32]
 802044c:	4b07      	ldr	r3, [pc, #28]	; (802046c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 802044e:	626b      	str	r3, [r5, #36]	; 0x24
 8020450:	bd38      	pop	{r3, r4, r5, pc}
 8020452:	bf00      	nop
 8020454:	2000e2a8 	.word	0x2000e2a8
 8020458:	20000000 	.word	0x20000000
 802045c:	0801d109 	.word	0x0801d109
 8020460:	200000ac 	.word	0x200000ac
 8020464:	2000e2ac 	.word	0x2000e2ac
 8020468:	0801d107 	.word	0x0801d107
 802046c:	200000b0 	.word	0x200000b0

08020470 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8020470:	b538      	push	{r3, r4, r5, lr}
 8020472:	4c15      	ldr	r4, [pc, #84]	; (80204c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8020474:	7823      	ldrb	r3, [r4, #0]
 8020476:	f3bf 8f5b 	dmb	ish
 802047a:	07da      	lsls	r2, r3, #31
 802047c:	4605      	mov	r5, r0
 802047e:	d40b      	bmi.n	8020498 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8020480:	4620      	mov	r0, r4
 8020482:	f008 f928 	bl	80286d6 <__cxa_guard_acquire>
 8020486:	b138      	cbz	r0, 8020498 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8020488:	4620      	mov	r0, r4
 802048a:	f008 f930 	bl	80286ee <__cxa_guard_release>
 802048e:	4a0f      	ldr	r2, [pc, #60]	; (80204cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8020490:	490f      	ldr	r1, [pc, #60]	; (80204d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8020492:	4810      	ldr	r0, [pc, #64]	; (80204d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8020494:	f008 f918 	bl	80286c8 <__aeabi_atexit>
 8020498:	4c0f      	ldr	r4, [pc, #60]	; (80204d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 802049a:	7823      	ldrb	r3, [r4, #0]
 802049c:	f3bf 8f5b 	dmb	ish
 80204a0:	07db      	lsls	r3, r3, #31
 80204a2:	d40b      	bmi.n	80204bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80204a4:	4620      	mov	r0, r4
 80204a6:	f008 f916 	bl	80286d6 <__cxa_guard_acquire>
 80204aa:	b138      	cbz	r0, 80204bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80204ac:	4620      	mov	r0, r4
 80204ae:	f008 f91e 	bl	80286ee <__cxa_guard_release>
 80204b2:	4a06      	ldr	r2, [pc, #24]	; (80204cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80204b4:	4909      	ldr	r1, [pc, #36]	; (80204dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 80204b6:	480a      	ldr	r0, [pc, #40]	; (80204e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80204b8:	f008 f906 	bl	80286c8 <__aeabi_atexit>
 80204bc:	4b05      	ldr	r3, [pc, #20]	; (80204d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80204be:	61ab      	str	r3, [r5, #24]
 80204c0:	4b07      	ldr	r3, [pc, #28]	; (80204e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80204c2:	61eb      	str	r3, [r5, #28]
 80204c4:	bd38      	pop	{r3, r4, r5, pc}
 80204c6:	bf00      	nop
 80204c8:	2000e280 	.word	0x2000e280
 80204cc:	20000000 	.word	0x20000000
 80204d0:	0801d10d 	.word	0x0801d10d
 80204d4:	20000084 	.word	0x20000084
 80204d8:	2000e284 	.word	0x2000e284
 80204dc:	0801d10b 	.word	0x0801d10b
 80204e0:	20000088 	.word	0x20000088

080204e4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 80204e4:	b510      	push	{r4, lr}
 80204e6:	4604      	mov	r4, r0
 80204e8:	f7ff ff88 	bl	80203fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 80204ec:	4620      	mov	r0, r4
 80204ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80204f2:	f7ff bfbd 	b.w	8020470 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080204f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80204f8:	b538      	push	{r3, r4, r5, lr}
 80204fa:	4c15      	ldr	r4, [pc, #84]	; (8020550 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80204fc:	7823      	ldrb	r3, [r4, #0]
 80204fe:	f3bf 8f5b 	dmb	ish
 8020502:	07da      	lsls	r2, r3, #31
 8020504:	4605      	mov	r5, r0
 8020506:	d40b      	bmi.n	8020520 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8020508:	4620      	mov	r0, r4
 802050a:	f008 f8e4 	bl	80286d6 <__cxa_guard_acquire>
 802050e:	b138      	cbz	r0, 8020520 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8020510:	4620      	mov	r0, r4
 8020512:	f008 f8ec 	bl	80286ee <__cxa_guard_release>
 8020516:	4a0f      	ldr	r2, [pc, #60]	; (8020554 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8020518:	490f      	ldr	r1, [pc, #60]	; (8020558 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 802051a:	4810      	ldr	r0, [pc, #64]	; (802055c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 802051c:	f008 f8d4 	bl	80286c8 <__aeabi_atexit>
 8020520:	4c0f      	ldr	r4, [pc, #60]	; (8020560 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8020522:	7823      	ldrb	r3, [r4, #0]
 8020524:	f3bf 8f5b 	dmb	ish
 8020528:	07db      	lsls	r3, r3, #31
 802052a:	d40b      	bmi.n	8020544 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 802052c:	4620      	mov	r0, r4
 802052e:	f008 f8d2 	bl	80286d6 <__cxa_guard_acquire>
 8020532:	b138      	cbz	r0, 8020544 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8020534:	4620      	mov	r0, r4
 8020536:	f008 f8da 	bl	80286ee <__cxa_guard_release>
 802053a:	4a06      	ldr	r2, [pc, #24]	; (8020554 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 802053c:	4909      	ldr	r1, [pc, #36]	; (8020564 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 802053e:	480a      	ldr	r0, [pc, #40]	; (8020568 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8020540:	f008 f8c2 	bl	80286c8 <__aeabi_atexit>
 8020544:	4b05      	ldr	r3, [pc, #20]	; (802055c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8020546:	632b      	str	r3, [r5, #48]	; 0x30
 8020548:	4b07      	ldr	r3, [pc, #28]	; (8020568 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 802054a:	636b      	str	r3, [r5, #52]	; 0x34
 802054c:	bd38      	pop	{r3, r4, r5, pc}
 802054e:	bf00      	nop
 8020550:	2000e2b8 	.word	0x2000e2b8
 8020554:	20000000 	.word	0x20000000
 8020558:	0801d101 	.word	0x0801d101
 802055c:	200000bc 	.word	0x200000bc
 8020560:	2000e2bc 	.word	0x2000e2bc
 8020564:	0801d0ff 	.word	0x0801d0ff
 8020568:	200000c0 	.word	0x200000c0

0802056c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 802056c:	b538      	push	{r3, r4, r5, lr}
 802056e:	4c15      	ldr	r4, [pc, #84]	; (80205c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8020570:	7823      	ldrb	r3, [r4, #0]
 8020572:	f3bf 8f5b 	dmb	ish
 8020576:	07da      	lsls	r2, r3, #31
 8020578:	4605      	mov	r5, r0
 802057a:	d40b      	bmi.n	8020594 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 802057c:	4620      	mov	r0, r4
 802057e:	f008 f8aa 	bl	80286d6 <__cxa_guard_acquire>
 8020582:	b138      	cbz	r0, 8020594 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8020584:	4620      	mov	r0, r4
 8020586:	f008 f8b2 	bl	80286ee <__cxa_guard_release>
 802058a:	4a0f      	ldr	r2, [pc, #60]	; (80205c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 802058c:	490f      	ldr	r1, [pc, #60]	; (80205cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 802058e:	4810      	ldr	r0, [pc, #64]	; (80205d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8020590:	f008 f89a 	bl	80286c8 <__aeabi_atexit>
 8020594:	4c0f      	ldr	r4, [pc, #60]	; (80205d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8020596:	7823      	ldrb	r3, [r4, #0]
 8020598:	f3bf 8f5b 	dmb	ish
 802059c:	07db      	lsls	r3, r3, #31
 802059e:	d40b      	bmi.n	80205b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80205a0:	4620      	mov	r0, r4
 80205a2:	f008 f898 	bl	80286d6 <__cxa_guard_acquire>
 80205a6:	b138      	cbz	r0, 80205b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80205a8:	4620      	mov	r0, r4
 80205aa:	f008 f8a0 	bl	80286ee <__cxa_guard_release>
 80205ae:	4a06      	ldr	r2, [pc, #24]	; (80205c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80205b0:	4909      	ldr	r1, [pc, #36]	; (80205d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80205b2:	480a      	ldr	r0, [pc, #40]	; (80205dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80205b4:	f008 f888 	bl	80286c8 <__aeabi_atexit>
 80205b8:	4b05      	ldr	r3, [pc, #20]	; (80205d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80205ba:	62ab      	str	r3, [r5, #40]	; 0x28
 80205bc:	4b07      	ldr	r3, [pc, #28]	; (80205dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80205be:	62eb      	str	r3, [r5, #44]	; 0x2c
 80205c0:	bd38      	pop	{r3, r4, r5, pc}
 80205c2:	bf00      	nop
 80205c4:	2000e288 	.word	0x2000e288
 80205c8:	20000000 	.word	0x20000000
 80205cc:	0801d105 	.word	0x0801d105
 80205d0:	2000008c 	.word	0x2000008c
 80205d4:	2000e28c 	.word	0x2000e28c
 80205d8:	0801d103 	.word	0x0801d103
 80205dc:	20000090 	.word	0x20000090

080205e0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80205e0:	b510      	push	{r4, lr}
 80205e2:	4604      	mov	r4, r0
 80205e4:	f7ff ff88 	bl	80204f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80205e8:	4620      	mov	r0, r4
 80205ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80205ee:	f7ff bfbd 	b.w	802056c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080205f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80205f4:	b538      	push	{r3, r4, r5, lr}
 80205f6:	4c15      	ldr	r4, [pc, #84]	; (802064c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80205f8:	7823      	ldrb	r3, [r4, #0]
 80205fa:	f3bf 8f5b 	dmb	ish
 80205fe:	07da      	lsls	r2, r3, #31
 8020600:	4605      	mov	r5, r0
 8020602:	d40b      	bmi.n	802061c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8020604:	4620      	mov	r0, r4
 8020606:	f008 f866 	bl	80286d6 <__cxa_guard_acquire>
 802060a:	b138      	cbz	r0, 802061c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 802060c:	4620      	mov	r0, r4
 802060e:	f008 f86e 	bl	80286ee <__cxa_guard_release>
 8020612:	4a0f      	ldr	r2, [pc, #60]	; (8020650 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8020614:	490f      	ldr	r1, [pc, #60]	; (8020654 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8020616:	4810      	ldr	r0, [pc, #64]	; (8020658 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8020618:	f008 f856 	bl	80286c8 <__aeabi_atexit>
 802061c:	4c0f      	ldr	r4, [pc, #60]	; (802065c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 802061e:	7823      	ldrb	r3, [r4, #0]
 8020620:	f3bf 8f5b 	dmb	ish
 8020624:	07db      	lsls	r3, r3, #31
 8020626:	d40b      	bmi.n	8020640 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8020628:	4620      	mov	r0, r4
 802062a:	f008 f854 	bl	80286d6 <__cxa_guard_acquire>
 802062e:	b138      	cbz	r0, 8020640 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8020630:	4620      	mov	r0, r4
 8020632:	f008 f85c 	bl	80286ee <__cxa_guard_release>
 8020636:	4a06      	ldr	r2, [pc, #24]	; (8020650 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8020638:	4909      	ldr	r1, [pc, #36]	; (8020660 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 802063a:	480a      	ldr	r0, [pc, #40]	; (8020664 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 802063c:	f008 f844 	bl	80286c8 <__aeabi_atexit>
 8020640:	4b05      	ldr	r3, [pc, #20]	; (8020658 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8020642:	652b      	str	r3, [r5, #80]	; 0x50
 8020644:	4b07      	ldr	r3, [pc, #28]	; (8020664 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8020646:	656b      	str	r3, [r5, #84]	; 0x54
 8020648:	bd38      	pop	{r3, r4, r5, pc}
 802064a:	bf00      	nop
 802064c:	2000e2c0 	.word	0x2000e2c0
 8020650:	20000000 	.word	0x20000000
 8020654:	0801d0f1 	.word	0x0801d0f1
 8020658:	200000c4 	.word	0x200000c4
 802065c:	2000e2c4 	.word	0x2000e2c4
 8020660:	0801d0ef 	.word	0x0801d0ef
 8020664:	200000c8 	.word	0x200000c8

08020668 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8020668:	b538      	push	{r3, r4, r5, lr}
 802066a:	4c15      	ldr	r4, [pc, #84]	; (80206c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 802066c:	7823      	ldrb	r3, [r4, #0]
 802066e:	f3bf 8f5b 	dmb	ish
 8020672:	07da      	lsls	r2, r3, #31
 8020674:	4605      	mov	r5, r0
 8020676:	d40b      	bmi.n	8020690 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8020678:	4620      	mov	r0, r4
 802067a:	f008 f82c 	bl	80286d6 <__cxa_guard_acquire>
 802067e:	b138      	cbz	r0, 8020690 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8020680:	4620      	mov	r0, r4
 8020682:	f008 f834 	bl	80286ee <__cxa_guard_release>
 8020686:	4a0f      	ldr	r2, [pc, #60]	; (80206c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8020688:	490f      	ldr	r1, [pc, #60]	; (80206c8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 802068a:	4810      	ldr	r0, [pc, #64]	; (80206cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 802068c:	f008 f81c 	bl	80286c8 <__aeabi_atexit>
 8020690:	4c0f      	ldr	r4, [pc, #60]	; (80206d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8020692:	7823      	ldrb	r3, [r4, #0]
 8020694:	f3bf 8f5b 	dmb	ish
 8020698:	07db      	lsls	r3, r3, #31
 802069a:	d40b      	bmi.n	80206b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 802069c:	4620      	mov	r0, r4
 802069e:	f008 f81a 	bl	80286d6 <__cxa_guard_acquire>
 80206a2:	b138      	cbz	r0, 80206b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80206a4:	4620      	mov	r0, r4
 80206a6:	f008 f822 	bl	80286ee <__cxa_guard_release>
 80206aa:	4a06      	ldr	r2, [pc, #24]	; (80206c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80206ac:	4909      	ldr	r1, [pc, #36]	; (80206d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80206ae:	480a      	ldr	r0, [pc, #40]	; (80206d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80206b0:	f008 f80a 	bl	80286c8 <__aeabi_atexit>
 80206b4:	4b05      	ldr	r3, [pc, #20]	; (80206cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80206b6:	64ab      	str	r3, [r5, #72]	; 0x48
 80206b8:	4b07      	ldr	r3, [pc, #28]	; (80206d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80206ba:	64eb      	str	r3, [r5, #76]	; 0x4c
 80206bc:	bd38      	pop	{r3, r4, r5, pc}
 80206be:	bf00      	nop
 80206c0:	2000e2c8 	.word	0x2000e2c8
 80206c4:	20000000 	.word	0x20000000
 80206c8:	0801d0f5 	.word	0x0801d0f5
 80206cc:	200000cc 	.word	0x200000cc
 80206d0:	2000e2cc 	.word	0x2000e2cc
 80206d4:	0801d0f3 	.word	0x0801d0f3
 80206d8:	200000d0 	.word	0x200000d0

080206dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80206dc:	b538      	push	{r3, r4, r5, lr}
 80206de:	4c15      	ldr	r4, [pc, #84]	; (8020734 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80206e0:	7823      	ldrb	r3, [r4, #0]
 80206e2:	f3bf 8f5b 	dmb	ish
 80206e6:	07da      	lsls	r2, r3, #31
 80206e8:	4605      	mov	r5, r0
 80206ea:	d40b      	bmi.n	8020704 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80206ec:	4620      	mov	r0, r4
 80206ee:	f007 fff2 	bl	80286d6 <__cxa_guard_acquire>
 80206f2:	b138      	cbz	r0, 8020704 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80206f4:	4620      	mov	r0, r4
 80206f6:	f007 fffa 	bl	80286ee <__cxa_guard_release>
 80206fa:	4a0f      	ldr	r2, [pc, #60]	; (8020738 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80206fc:	490f      	ldr	r1, [pc, #60]	; (802073c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80206fe:	4810      	ldr	r0, [pc, #64]	; (8020740 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8020700:	f007 ffe2 	bl	80286c8 <__aeabi_atexit>
 8020704:	4c0f      	ldr	r4, [pc, #60]	; (8020744 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8020706:	7823      	ldrb	r3, [r4, #0]
 8020708:	f3bf 8f5b 	dmb	ish
 802070c:	07db      	lsls	r3, r3, #31
 802070e:	d40b      	bmi.n	8020728 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8020710:	4620      	mov	r0, r4
 8020712:	f007 ffe0 	bl	80286d6 <__cxa_guard_acquire>
 8020716:	b138      	cbz	r0, 8020728 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8020718:	4620      	mov	r0, r4
 802071a:	f007 ffe8 	bl	80286ee <__cxa_guard_release>
 802071e:	4a06      	ldr	r2, [pc, #24]	; (8020738 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8020720:	4909      	ldr	r1, [pc, #36]	; (8020748 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8020722:	480a      	ldr	r0, [pc, #40]	; (802074c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8020724:	f007 ffd0 	bl	80286c8 <__aeabi_atexit>
 8020728:	4b05      	ldr	r3, [pc, #20]	; (8020740 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 802072a:	642b      	str	r3, [r5, #64]	; 0x40
 802072c:	4b07      	ldr	r3, [pc, #28]	; (802074c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 802072e:	646b      	str	r3, [r5, #68]	; 0x44
 8020730:	bd38      	pop	{r3, r4, r5, pc}
 8020732:	bf00      	nop
 8020734:	2000e290 	.word	0x2000e290
 8020738:	20000000 	.word	0x20000000
 802073c:	0801d0f9 	.word	0x0801d0f9
 8020740:	20000094 	.word	0x20000094
 8020744:	2000e294 	.word	0x2000e294
 8020748:	0801d0f7 	.word	0x0801d0f7
 802074c:	20000098 	.word	0x20000098

08020750 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8020750:	b538      	push	{r3, r4, r5, lr}
 8020752:	4c15      	ldr	r4, [pc, #84]	; (80207a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8020754:	7823      	ldrb	r3, [r4, #0]
 8020756:	f3bf 8f5b 	dmb	ish
 802075a:	07da      	lsls	r2, r3, #31
 802075c:	4605      	mov	r5, r0
 802075e:	d40b      	bmi.n	8020778 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8020760:	4620      	mov	r0, r4
 8020762:	f007 ffb8 	bl	80286d6 <__cxa_guard_acquire>
 8020766:	b138      	cbz	r0, 8020778 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8020768:	4620      	mov	r0, r4
 802076a:	f007 ffc0 	bl	80286ee <__cxa_guard_release>
 802076e:	4a0f      	ldr	r2, [pc, #60]	; (80207ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8020770:	490f      	ldr	r1, [pc, #60]	; (80207b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8020772:	4810      	ldr	r0, [pc, #64]	; (80207b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8020774:	f007 ffa8 	bl	80286c8 <__aeabi_atexit>
 8020778:	4c0f      	ldr	r4, [pc, #60]	; (80207b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 802077a:	7823      	ldrb	r3, [r4, #0]
 802077c:	f3bf 8f5b 	dmb	ish
 8020780:	07db      	lsls	r3, r3, #31
 8020782:	d40b      	bmi.n	802079c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8020784:	4620      	mov	r0, r4
 8020786:	f007 ffa6 	bl	80286d6 <__cxa_guard_acquire>
 802078a:	b138      	cbz	r0, 802079c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 802078c:	4620      	mov	r0, r4
 802078e:	f007 ffae 	bl	80286ee <__cxa_guard_release>
 8020792:	4a06      	ldr	r2, [pc, #24]	; (80207ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8020794:	4909      	ldr	r1, [pc, #36]	; (80207bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8020796:	480a      	ldr	r0, [pc, #40]	; (80207c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8020798:	f007 ff96 	bl	80286c8 <__aeabi_atexit>
 802079c:	4b05      	ldr	r3, [pc, #20]	; (80207b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 802079e:	63ab      	str	r3, [r5, #56]	; 0x38
 80207a0:	4b07      	ldr	r3, [pc, #28]	; (80207c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80207a2:	63eb      	str	r3, [r5, #60]	; 0x3c
 80207a4:	bd38      	pop	{r3, r4, r5, pc}
 80207a6:	bf00      	nop
 80207a8:	2000e2b0 	.word	0x2000e2b0
 80207ac:	20000000 	.word	0x20000000
 80207b0:	0801d0fd 	.word	0x0801d0fd
 80207b4:	200000b4 	.word	0x200000b4
 80207b8:	2000e2b4 	.word	0x2000e2b4
 80207bc:	0801d0fb 	.word	0x0801d0fb
 80207c0:	200000b8 	.word	0x200000b8

080207c4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80207c4:	b510      	push	{r4, lr}
 80207c6:	4604      	mov	r4, r0
 80207c8:	f7ff ff14 	bl	80205f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80207cc:	4620      	mov	r0, r4
 80207ce:	f7ff ff85 	bl	80206dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80207d2:	4620      	mov	r0, r4
 80207d4:	f7ff ff48 	bl	8020668 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80207d8:	4620      	mov	r0, r4
 80207da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80207de:	f7ff bfb7 	b.w	8020750 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080207e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80207e4:	b538      	push	{r3, r4, r5, lr}
 80207e6:	4c15      	ldr	r4, [pc, #84]	; (802083c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80207e8:	7823      	ldrb	r3, [r4, #0]
 80207ea:	f3bf 8f5b 	dmb	ish
 80207ee:	07da      	lsls	r2, r3, #31
 80207f0:	4605      	mov	r5, r0
 80207f2:	d40b      	bmi.n	802080c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80207f4:	4620      	mov	r0, r4
 80207f6:	f007 ff6e 	bl	80286d6 <__cxa_guard_acquire>
 80207fa:	b138      	cbz	r0, 802080c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80207fc:	4620      	mov	r0, r4
 80207fe:	f007 ff76 	bl	80286ee <__cxa_guard_release>
 8020802:	4a0f      	ldr	r2, [pc, #60]	; (8020840 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8020804:	490f      	ldr	r1, [pc, #60]	; (8020844 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8020806:	4810      	ldr	r0, [pc, #64]	; (8020848 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8020808:	f007 ff5e 	bl	80286c8 <__aeabi_atexit>
 802080c:	4c0f      	ldr	r4, [pc, #60]	; (802084c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 802080e:	7823      	ldrb	r3, [r4, #0]
 8020810:	f3bf 8f5b 	dmb	ish
 8020814:	07db      	lsls	r3, r3, #31
 8020816:	d40b      	bmi.n	8020830 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8020818:	4620      	mov	r0, r4
 802081a:	f007 ff5c 	bl	80286d6 <__cxa_guard_acquire>
 802081e:	b138      	cbz	r0, 8020830 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8020820:	4620      	mov	r0, r4
 8020822:	f007 ff64 	bl	80286ee <__cxa_guard_release>
 8020826:	4a06      	ldr	r2, [pc, #24]	; (8020840 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8020828:	4909      	ldr	r1, [pc, #36]	; (8020850 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 802082a:	480a      	ldr	r0, [pc, #40]	; (8020854 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 802082c:	f007 ff4c 	bl	80286c8 <__aeabi_atexit>
 8020830:	4b05      	ldr	r3, [pc, #20]	; (8020848 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8020832:	662b      	str	r3, [r5, #96]	; 0x60
 8020834:	4b07      	ldr	r3, [pc, #28]	; (8020854 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8020836:	666b      	str	r3, [r5, #100]	; 0x64
 8020838:	bd38      	pop	{r3, r4, r5, pc}
 802083a:	bf00      	nop
 802083c:	2000e298 	.word	0x2000e298
 8020840:	20000000 	.word	0x20000000
 8020844:	0801d0e9 	.word	0x0801d0e9
 8020848:	2000009c 	.word	0x2000009c
 802084c:	2000e29c 	.word	0x2000e29c
 8020850:	0801d0e7 	.word	0x0801d0e7
 8020854:	200000a0 	.word	0x200000a0

08020858 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8020858:	b538      	push	{r3, r4, r5, lr}
 802085a:	4c15      	ldr	r4, [pc, #84]	; (80208b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 802085c:	7823      	ldrb	r3, [r4, #0]
 802085e:	f3bf 8f5b 	dmb	ish
 8020862:	07da      	lsls	r2, r3, #31
 8020864:	4605      	mov	r5, r0
 8020866:	d40b      	bmi.n	8020880 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8020868:	4620      	mov	r0, r4
 802086a:	f007 ff34 	bl	80286d6 <__cxa_guard_acquire>
 802086e:	b138      	cbz	r0, 8020880 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8020870:	4620      	mov	r0, r4
 8020872:	f007 ff3c 	bl	80286ee <__cxa_guard_release>
 8020876:	4a0f      	ldr	r2, [pc, #60]	; (80208b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8020878:	490f      	ldr	r1, [pc, #60]	; (80208b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 802087a:	4810      	ldr	r0, [pc, #64]	; (80208bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 802087c:	f007 ff24 	bl	80286c8 <__aeabi_atexit>
 8020880:	4c0f      	ldr	r4, [pc, #60]	; (80208c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8020882:	7823      	ldrb	r3, [r4, #0]
 8020884:	f3bf 8f5b 	dmb	ish
 8020888:	07db      	lsls	r3, r3, #31
 802088a:	d40b      	bmi.n	80208a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 802088c:	4620      	mov	r0, r4
 802088e:	f007 ff22 	bl	80286d6 <__cxa_guard_acquire>
 8020892:	b138      	cbz	r0, 80208a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8020894:	4620      	mov	r0, r4
 8020896:	f007 ff2a 	bl	80286ee <__cxa_guard_release>
 802089a:	4a06      	ldr	r2, [pc, #24]	; (80208b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 802089c:	4909      	ldr	r1, [pc, #36]	; (80208c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 802089e:	480a      	ldr	r0, [pc, #40]	; (80208c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80208a0:	f007 ff12 	bl	80286c8 <__aeabi_atexit>
 80208a4:	4b05      	ldr	r3, [pc, #20]	; (80208bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80208a6:	65ab      	str	r3, [r5, #88]	; 0x58
 80208a8:	4b07      	ldr	r3, [pc, #28]	; (80208c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80208aa:	65eb      	str	r3, [r5, #92]	; 0x5c
 80208ac:	bd38      	pop	{r3, r4, r5, pc}
 80208ae:	bf00      	nop
 80208b0:	2000e270 	.word	0x2000e270
 80208b4:	20000000 	.word	0x20000000
 80208b8:	0801d0ed 	.word	0x0801d0ed
 80208bc:	20000074 	.word	0x20000074
 80208c0:	2000e274 	.word	0x2000e274
 80208c4:	0801d0eb 	.word	0x0801d0eb
 80208c8:	20000078 	.word	0x20000078

080208cc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80208cc:	b510      	push	{r4, lr}
 80208ce:	4604      	mov	r4, r0
 80208d0:	f7ff ff88 	bl	80207e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80208d4:	4620      	mov	r0, r4
 80208d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80208da:	f7ff bfbd 	b.w	8020858 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080208e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80208e0:	b538      	push	{r3, r4, r5, lr}
 80208e2:	4c15      	ldr	r4, [pc, #84]	; (8020938 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80208e4:	7823      	ldrb	r3, [r4, #0]
 80208e6:	f3bf 8f5b 	dmb	ish
 80208ea:	07da      	lsls	r2, r3, #31
 80208ec:	4605      	mov	r5, r0
 80208ee:	d40b      	bmi.n	8020908 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80208f0:	4620      	mov	r0, r4
 80208f2:	f007 fef0 	bl	80286d6 <__cxa_guard_acquire>
 80208f6:	b138      	cbz	r0, 8020908 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80208f8:	4620      	mov	r0, r4
 80208fa:	f007 fef8 	bl	80286ee <__cxa_guard_release>
 80208fe:	4a0f      	ldr	r2, [pc, #60]	; (802093c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8020900:	490f      	ldr	r1, [pc, #60]	; (8020940 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8020902:	4810      	ldr	r0, [pc, #64]	; (8020944 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8020904:	f007 fee0 	bl	80286c8 <__aeabi_atexit>
 8020908:	4c0f      	ldr	r4, [pc, #60]	; (8020948 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 802090a:	7823      	ldrb	r3, [r4, #0]
 802090c:	f3bf 8f5b 	dmb	ish
 8020910:	07db      	lsls	r3, r3, #31
 8020912:	d40b      	bmi.n	802092c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8020914:	4620      	mov	r0, r4
 8020916:	f007 fede 	bl	80286d6 <__cxa_guard_acquire>
 802091a:	b138      	cbz	r0, 802092c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 802091c:	4620      	mov	r0, r4
 802091e:	f007 fee6 	bl	80286ee <__cxa_guard_release>
 8020922:	4a06      	ldr	r2, [pc, #24]	; (802093c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8020924:	4909      	ldr	r1, [pc, #36]	; (802094c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8020926:	480a      	ldr	r0, [pc, #40]	; (8020950 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8020928:	f007 fece 	bl	80286c8 <__aeabi_atexit>
 802092c:	4b05      	ldr	r3, [pc, #20]	; (8020944 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 802092e:	672b      	str	r3, [r5, #112]	; 0x70
 8020930:	4b07      	ldr	r3, [pc, #28]	; (8020950 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8020932:	676b      	str	r3, [r5, #116]	; 0x74
 8020934:	bd38      	pop	{r3, r4, r5, pc}
 8020936:	bf00      	nop
 8020938:	2000e268 	.word	0x2000e268
 802093c:	20000000 	.word	0x20000000
 8020940:	0801d0e1 	.word	0x0801d0e1
 8020944:	2000006c 	.word	0x2000006c
 8020948:	2000e26c 	.word	0x2000e26c
 802094c:	0801d0df 	.word	0x0801d0df
 8020950:	20000070 	.word	0x20000070

08020954 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8020954:	b538      	push	{r3, r4, r5, lr}
 8020956:	4c15      	ldr	r4, [pc, #84]	; (80209ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8020958:	7823      	ldrb	r3, [r4, #0]
 802095a:	f3bf 8f5b 	dmb	ish
 802095e:	07da      	lsls	r2, r3, #31
 8020960:	4605      	mov	r5, r0
 8020962:	d40b      	bmi.n	802097c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8020964:	4620      	mov	r0, r4
 8020966:	f007 feb6 	bl	80286d6 <__cxa_guard_acquire>
 802096a:	b138      	cbz	r0, 802097c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 802096c:	4620      	mov	r0, r4
 802096e:	f007 febe 	bl	80286ee <__cxa_guard_release>
 8020972:	4a0f      	ldr	r2, [pc, #60]	; (80209b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8020974:	490f      	ldr	r1, [pc, #60]	; (80209b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8020976:	4810      	ldr	r0, [pc, #64]	; (80209b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8020978:	f007 fea6 	bl	80286c8 <__aeabi_atexit>
 802097c:	4c0f      	ldr	r4, [pc, #60]	; (80209bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 802097e:	7823      	ldrb	r3, [r4, #0]
 8020980:	f3bf 8f5b 	dmb	ish
 8020984:	07db      	lsls	r3, r3, #31
 8020986:	d40b      	bmi.n	80209a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8020988:	4620      	mov	r0, r4
 802098a:	f007 fea4 	bl	80286d6 <__cxa_guard_acquire>
 802098e:	b138      	cbz	r0, 80209a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8020990:	4620      	mov	r0, r4
 8020992:	f007 feac 	bl	80286ee <__cxa_guard_release>
 8020996:	4a06      	ldr	r2, [pc, #24]	; (80209b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8020998:	4909      	ldr	r1, [pc, #36]	; (80209c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 802099a:	480a      	ldr	r0, [pc, #40]	; (80209c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 802099c:	f007 fe94 	bl	80286c8 <__aeabi_atexit>
 80209a0:	4b05      	ldr	r3, [pc, #20]	; (80209b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80209a2:	66ab      	str	r3, [r5, #104]	; 0x68
 80209a4:	4b07      	ldr	r3, [pc, #28]	; (80209c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80209a6:	66eb      	str	r3, [r5, #108]	; 0x6c
 80209a8:	bd38      	pop	{r3, r4, r5, pc}
 80209aa:	bf00      	nop
 80209ac:	2000e260 	.word	0x2000e260
 80209b0:	20000000 	.word	0x20000000
 80209b4:	0801d0e5 	.word	0x0801d0e5
 80209b8:	20000064 	.word	0x20000064
 80209bc:	2000e264 	.word	0x2000e264
 80209c0:	0801d0e3 	.word	0x0801d0e3
 80209c4:	20000068 	.word	0x20000068

080209c8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80209c8:	b510      	push	{r4, lr}
 80209ca:	4604      	mov	r4, r0
 80209cc:	f7ff ff88 	bl	80208e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80209d0:	4620      	mov	r0, r4
 80209d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80209d6:	f7ff bfbd 	b.w	8020954 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080209da <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80209da:	b510      	push	{r4, lr}
 80209dc:	4604      	mov	r4, r0
 80209de:	f7ff fff3 	bl	80209c8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80209e2:	4620      	mov	r0, r4
 80209e4:	f7ff ff72 	bl	80208cc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80209e8:	4620      	mov	r0, r4
 80209ea:	f7ff fdf9 	bl	80205e0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80209ee:	4620      	mov	r0, r4
 80209f0:	f7ff fcfa 	bl	80203e8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80209f4:	4620      	mov	r0, r4
 80209f6:	f7ff fd75 	bl	80204e4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80209fa:	4620      	mov	r0, r4
 80209fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020a00:	f7ff bee0 	b.w	80207c4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08020a04 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8020a04:	b538      	push	{r3, r4, r5, lr}
 8020a06:	4c0b      	ldr	r4, [pc, #44]	; (8020a34 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8020a08:	7823      	ldrb	r3, [r4, #0]
 8020a0a:	f3bf 8f5b 	dmb	ish
 8020a0e:	07db      	lsls	r3, r3, #31
 8020a10:	4605      	mov	r5, r0
 8020a12:	d40b      	bmi.n	8020a2c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8020a14:	4620      	mov	r0, r4
 8020a16:	f007 fe5e 	bl	80286d6 <__cxa_guard_acquire>
 8020a1a:	b138      	cbz	r0, 8020a2c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8020a1c:	4620      	mov	r0, r4
 8020a1e:	f007 fe66 	bl	80286ee <__cxa_guard_release>
 8020a22:	4a05      	ldr	r2, [pc, #20]	; (8020a38 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8020a24:	4905      	ldr	r1, [pc, #20]	; (8020a3c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8020a26:	4806      	ldr	r0, [pc, #24]	; (8020a40 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8020a28:	f007 fe4e 	bl	80286c8 <__aeabi_atexit>
 8020a2c:	4b04      	ldr	r3, [pc, #16]	; (8020a40 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8020a2e:	67ab      	str	r3, [r5, #120]	; 0x78
 8020a30:	bd38      	pop	{r3, r4, r5, pc}
 8020a32:	bf00      	nop
 8020a34:	2000e254 	.word	0x2000e254
 8020a38:	20000000 	.word	0x20000000
 8020a3c:	0801d0dd 	.word	0x0801d0dd
 8020a40:	2000005c 	.word	0x2000005c

08020a44 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8020a44:	b538      	push	{r3, r4, r5, lr}
 8020a46:	4c0b      	ldr	r4, [pc, #44]	; (8020a74 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8020a48:	7823      	ldrb	r3, [r4, #0]
 8020a4a:	f3bf 8f5b 	dmb	ish
 8020a4e:	07db      	lsls	r3, r3, #31
 8020a50:	4605      	mov	r5, r0
 8020a52:	d40b      	bmi.n	8020a6c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8020a54:	4620      	mov	r0, r4
 8020a56:	f007 fe3e 	bl	80286d6 <__cxa_guard_acquire>
 8020a5a:	b138      	cbz	r0, 8020a6c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8020a5c:	4620      	mov	r0, r4
 8020a5e:	f007 fe46 	bl	80286ee <__cxa_guard_release>
 8020a62:	4a05      	ldr	r2, [pc, #20]	; (8020a78 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8020a64:	4905      	ldr	r1, [pc, #20]	; (8020a7c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8020a66:	4806      	ldr	r0, [pc, #24]	; (8020a80 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8020a68:	f007 fe2e 	bl	80286c8 <__aeabi_atexit>
 8020a6c:	4b04      	ldr	r3, [pc, #16]	; (8020a80 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8020a6e:	67eb      	str	r3, [r5, #124]	; 0x7c
 8020a70:	bd38      	pop	{r3, r4, r5, pc}
 8020a72:	bf00      	nop
 8020a74:	2000e258 	.word	0x2000e258
 8020a78:	20000000 	.word	0x20000000
 8020a7c:	0801d0db 	.word	0x0801d0db
 8020a80:	20000060 	.word	0x20000060

08020a84 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8020a84:	b570      	push	{r4, r5, r6, lr}
 8020a86:	4d0d      	ldr	r5, [pc, #52]	; (8020abc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8020a88:	4c0d      	ldr	r4, [pc, #52]	; (8020ac0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 8020a8a:	782b      	ldrb	r3, [r5, #0]
 8020a8c:	f3bf 8f5b 	dmb	ish
 8020a90:	f013 0f01 	tst.w	r3, #1
 8020a94:	4606      	mov	r6, r0
 8020a96:	d10d      	bne.n	8020ab4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8020a98:	4628      	mov	r0, r5
 8020a9a:	f007 fe1c 	bl	80286d6 <__cxa_guard_acquire>
 8020a9e:	b148      	cbz	r0, 8020ab4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8020aa0:	4b08      	ldr	r3, [pc, #32]	; (8020ac4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8020aa2:	6023      	str	r3, [r4, #0]
 8020aa4:	4628      	mov	r0, r5
 8020aa6:	f007 fe22 	bl	80286ee <__cxa_guard_release>
 8020aaa:	4a07      	ldr	r2, [pc, #28]	; (8020ac8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8020aac:	4907      	ldr	r1, [pc, #28]	; (8020acc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8020aae:	4620      	mov	r0, r4
 8020ab0:	f007 fe0a 	bl	80286c8 <__aeabi_atexit>
 8020ab4:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 8020ab8:	bd70      	pop	{r4, r5, r6, pc}
 8020aba:	bf00      	nop
 8020abc:	2000e25c 	.word	0x2000e25c
 8020ac0:	2000e2d0 	.word	0x2000e2d0
 8020ac4:	0802cf2c 	.word	0x0802cf2c
 8020ac8:	20000000 	.word	0x20000000
 8020acc:	0801d0d9 	.word	0x0801d0d9

08020ad0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8020ad0:	b510      	push	{r4, lr}
 8020ad2:	4604      	mov	r4, r0
 8020ad4:	f7ff ff96 	bl	8020a04 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8020ad8:	4620      	mov	r0, r4
 8020ada:	f7ff ffb3 	bl	8020a44 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8020ade:	4620      	mov	r0, r4
 8020ae0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020ae4:	f7ff bfce 	b.w	8020a84 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

08020ae8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8020ae8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020aec:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8020af0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8020af4:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 8020af8:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8020afc:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8020b00:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8020b04:	8808      	ldrh	r0, [r1, #0]
 8020b06:	fb05 4c0e 	mla	ip, r5, lr, r4
 8020b0a:	2d00      	cmp	r5, #0
 8020b0c:	eb02 0a0c 	add.w	sl, r2, ip
 8020b10:	f2c0 80b0 	blt.w	8020c74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8020b14:	45ab      	cmp	fp, r5
 8020b16:	f340 80ad 	ble.w	8020c74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8020b1a:	2c00      	cmp	r4, #0
 8020b1c:	f2c0 80a8 	blt.w	8020c70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8020b20:	45a6      	cmp	lr, r4
 8020b22:	f340 80a5 	ble.w	8020c70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8020b26:	f812 200c 	ldrb.w	r2, [r2, ip]
 8020b2a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8020b2e:	1c62      	adds	r2, r4, #1
 8020b30:	f100 80a3 	bmi.w	8020c7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8020b34:	4596      	cmp	lr, r2
 8020b36:	f340 80a0 	ble.w	8020c7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8020b3a:	f1b9 0f00 	cmp.w	r9, #0
 8020b3e:	f000 809c 	beq.w	8020c7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8020b42:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020b46:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8020b4a:	3501      	adds	r5, #1
 8020b4c:	f100 8099 	bmi.w	8020c82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8020b50:	45ab      	cmp	fp, r5
 8020b52:	f340 8096 	ble.w	8020c82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8020b56:	2f00      	cmp	r7, #0
 8020b58:	f000 8093 	beq.w	8020c82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8020b5c:	2c00      	cmp	r4, #0
 8020b5e:	f2c0 808e 	blt.w	8020c7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8020b62:	45a6      	cmp	lr, r4
 8020b64:	f340 808b 	ble.w	8020c7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8020b68:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8020b6c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8020b70:	3401      	adds	r4, #1
 8020b72:	f100 8089 	bmi.w	8020c88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8020b76:	45a6      	cmp	lr, r4
 8020b78:	f340 8086 	ble.w	8020c88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8020b7c:	f1b9 0f00 	cmp.w	r9, #0
 8020b80:	f000 8082 	beq.w	8020c88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8020b84:	44d6      	add	lr, sl
 8020b86:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020b8a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8020b8e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8020b92:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8020b96:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8020b9a:	fb19 fe07 	smulbb	lr, r9, r7
 8020b9e:	ea44 0808 	orr.w	r8, r4, r8
 8020ba2:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8020ba6:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8020baa:	f1c7 0210 	rsb	r2, r7, #16
 8020bae:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8020bb2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020bb6:	ea44 0c0c 	orr.w	ip, r4, ip
 8020bba:	eba2 0209 	sub.w	r2, r2, r9
 8020bbe:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8020bc2:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8020bc6:	fb04 f40c 	mul.w	r4, r4, ip
 8020bca:	fb02 4808 	mla	r8, r2, r8, r4
 8020bce:	041a      	lsls	r2, r3, #16
 8020bd0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020bd4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020bd8:	4313      	orrs	r3, r2
 8020bda:	042a      	lsls	r2, r5, #16
 8020bdc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020be0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020be4:	fb0e 8303 	mla	r3, lr, r3, r8
 8020be8:	432a      	orrs	r2, r5
 8020bea:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8020bee:	fb07 3202 	mla	r2, r7, r2, r3
 8020bf2:	0d53      	lsrs	r3, r2, #21
 8020bf4:	0952      	lsrs	r2, r2, #5
 8020bf6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020bfa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020bfe:	431a      	orrs	r2, r3
 8020c00:	b293      	uxth	r3, r2
 8020c02:	b2b4      	uxth	r4, r6
 8020c04:	1202      	asrs	r2, r0, #8
 8020c06:	43f6      	mvns	r6, r6
 8020c08:	b2f6      	uxtb	r6, r6
 8020c0a:	121d      	asrs	r5, r3, #8
 8020c0c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020c10:	fb12 f206 	smulbb	r2, r2, r6
 8020c14:	10c7      	asrs	r7, r0, #3
 8020c16:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020c1a:	00c0      	lsls	r0, r0, #3
 8020c1c:	fb05 2504 	mla	r5, r5, r4, r2
 8020c20:	b2c0      	uxtb	r0, r0
 8020c22:	10da      	asrs	r2, r3, #3
 8020c24:	00db      	lsls	r3, r3, #3
 8020c26:	b2db      	uxtb	r3, r3
 8020c28:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020c2c:	fb10 f006 	smulbb	r0, r0, r6
 8020c30:	b2ad      	uxth	r5, r5
 8020c32:	fb03 0004 	mla	r0, r3, r4, r0
 8020c36:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020c3a:	fb17 f706 	smulbb	r7, r7, r6
 8020c3e:	b280      	uxth	r0, r0
 8020c40:	1c6b      	adds	r3, r5, #1
 8020c42:	fb02 7204 	mla	r2, r2, r4, r7
 8020c46:	b292      	uxth	r2, r2
 8020c48:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020c4c:	1c43      	adds	r3, r0, #1
 8020c4e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020c52:	1c50      	adds	r0, r2, #1
 8020c54:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8020c58:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020c5c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020c60:	0952      	lsrs	r2, r2, #5
 8020c62:	432b      	orrs	r3, r5
 8020c64:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020c68:	4313      	orrs	r3, r2
 8020c6a:	800b      	strh	r3, [r1, #0]
 8020c6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020c70:	4680      	mov	r8, r0
 8020c72:	e75c      	b.n	8020b2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8020c74:	4684      	mov	ip, r0
 8020c76:	4680      	mov	r8, r0
 8020c78:	e767      	b.n	8020b4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8020c7a:	4684      	mov	ip, r0
 8020c7c:	e765      	b.n	8020b4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8020c7e:	4605      	mov	r5, r0
 8020c80:	e776      	b.n	8020b70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8020c82:	4603      	mov	r3, r0
 8020c84:	4605      	mov	r5, r0
 8020c86:	e782      	b.n	8020b8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8020c88:	4603      	mov	r3, r0
 8020c8a:	e780      	b.n	8020b8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08020c8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020c8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c90:	b099      	sub	sp, #100	; 0x64
 8020c92:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8020c96:	9215      	str	r2, [sp, #84]	; 0x54
 8020c98:	9309      	str	r3, [sp, #36]	; 0x24
 8020c9a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8020c9c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8020ca0:	930d      	str	r3, [sp, #52]	; 0x34
 8020ca2:	910c      	str	r1, [sp, #48]	; 0x30
 8020ca4:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8020ca8:	9016      	str	r0, [sp, #88]	; 0x58
 8020caa:	6850      	ldr	r0, [r2, #4]
 8020cac:	6812      	ldr	r2, [r2, #0]
 8020cae:	fb00 1303 	mla	r3, r0, r3, r1
 8020cb2:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8020cb6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020cb8:	681b      	ldr	r3, [r3, #0]
 8020cba:	930b      	str	r3, [sp, #44]	; 0x2c
 8020cbc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020cbe:	685e      	ldr	r6, [r3, #4]
 8020cc0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020cc2:	43db      	mvns	r3, r3
 8020cc4:	b2db      	uxtb	r3, r3
 8020cc6:	3604      	adds	r6, #4
 8020cc8:	930a      	str	r3, [sp, #40]	; 0x28
 8020cca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020ccc:	2b00      	cmp	r3, #0
 8020cce:	dc03      	bgt.n	8020cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020cd0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8020cd2:	2b00      	cmp	r3, #0
 8020cd4:	f340 8225 	ble.w	8021122 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8020cd8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020cda:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020cde:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020ce2:	1e48      	subs	r0, r1, #1
 8020ce4:	1e57      	subs	r7, r2, #1
 8020ce6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020ce8:	2b00      	cmp	r3, #0
 8020cea:	f340 80e3 	ble.w	8020eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8020cee:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8020cf2:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020cf6:	d406      	bmi.n	8020d06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020cf8:	4584      	cmp	ip, r0
 8020cfa:	da04      	bge.n	8020d06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020cfc:	2b00      	cmp	r3, #0
 8020cfe:	db02      	blt.n	8020d06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020d00:	42bb      	cmp	r3, r7
 8020d02:	f2c0 80d8 	blt.w	8020eb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8020d06:	f11c 0c01 	adds.w	ip, ip, #1
 8020d0a:	f100 80c9 	bmi.w	8020ea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020d0e:	4561      	cmp	r1, ip
 8020d10:	f2c0 80c6 	blt.w	8020ea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020d14:	3301      	adds	r3, #1
 8020d16:	f100 80c3 	bmi.w	8020ea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020d1a:	429a      	cmp	r2, r3
 8020d1c:	f2c0 80c0 	blt.w	8020ea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020d20:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8020d24:	4647      	mov	r7, r8
 8020d26:	f1bb 0f00 	cmp.w	fp, #0
 8020d2a:	f340 80e3 	ble.w	8020ef4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8020d2e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8020d30:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020d32:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020d36:	689b      	ldr	r3, [r3, #8]
 8020d38:	ea5f 422a 	movs.w	r2, sl, asr #16
 8020d3c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020d40:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8020d44:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020d48:	f100 8121 	bmi.w	8020f8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020d4c:	f103 39ff 	add.w	r9, r3, #4294967295	; 0xffffffff
 8020d50:	454a      	cmp	r2, r9
 8020d52:	f280 811c 	bge.w	8020f8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020d56:	f1bc 0f00 	cmp.w	ip, #0
 8020d5a:	f2c0 8118 	blt.w	8020f8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020d5e:	f10e 39ff 	add.w	r9, lr, #4294967295	; 0xffffffff
 8020d62:	45cc      	cmp	ip, r9
 8020d64:	f280 8113 	bge.w	8020f8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020d68:	b21b      	sxth	r3, r3
 8020d6a:	fb0c 2203 	mla	r2, ip, r3, r2
 8020d6e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020d70:	eb04 0902 	add.w	r9, r4, r2
 8020d74:	5ca2      	ldrb	r2, [r4, r2]
 8020d76:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8020d7a:	2800      	cmp	r0, #0
 8020d7c:	f000 80fe 	beq.w	8020f7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8020d80:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020d84:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8020d88:	9211      	str	r2, [sp, #68]	; 0x44
 8020d8a:	b151      	cbz	r1, 8020da2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020d8c:	eb09 0203 	add.w	r2, r9, r3
 8020d90:	f819 3003 	ldrb.w	r3, [r9, r3]
 8020d94:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020d98:	930f      	str	r3, [sp, #60]	; 0x3c
 8020d9a:	7853      	ldrb	r3, [r2, #1]
 8020d9c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020da0:	9312      	str	r3, [sp, #72]	; 0x48
 8020da2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020da4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020da6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020daa:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020dae:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020db2:	ea4c 0c03 	orr.w	ip, ip, r3
 8020db6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020db8:	041b      	lsls	r3, r3, #16
 8020dba:	fb10 f201 	smulbb	r2, r0, r1
 8020dbe:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8020dc2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020dc6:	10d2      	asrs	r2, r2, #3
 8020dc8:	4323      	orrs	r3, r4
 8020dca:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8020dce:	4353      	muls	r3, r2
 8020dd0:	fb09 330c 	mla	r3, r9, ip, r3
 8020dd4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8020dd8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020ddc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020de0:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020de4:	f1c1 0c10 	rsb	ip, r1, #16
 8020de8:	ebac 0c00 	sub.w	ip, ip, r0
 8020dec:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020df0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8020df4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020df6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020df8:	0418      	lsls	r0, r3, #16
 8020dfa:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020dfe:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020e02:	4318      	orrs	r0, r3
 8020e04:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8020e08:	fb02 c200 	mla	r2, r2, r0, ip
 8020e0c:	0d53      	lsrs	r3, r2, #21
 8020e0e:	0952      	lsrs	r2, r2, #5
 8020e10:	8838      	ldrh	r0, [r7, #0]
 8020e12:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020e16:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020e1a:	431a      	orrs	r2, r3
 8020e1c:	b292      	uxth	r2, r2
 8020e1e:	1201      	asrs	r1, r0, #8
 8020e20:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8020e24:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8020e28:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020e2c:	fb11 f104 	smulbb	r1, r1, r4
 8020e30:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8020e34:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020e38:	00c0      	lsls	r0, r0, #3
 8020e3a:	fb0c 1c03 	mla	ip, ip, r3, r1
 8020e3e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8020e42:	10d1      	asrs	r1, r2, #3
 8020e44:	b2c0      	uxtb	r0, r0
 8020e46:	00d2      	lsls	r2, r2, #3
 8020e48:	b2d2      	uxtb	r2, r2
 8020e4a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020e4e:	fb1e fe04 	smulbb	lr, lr, r4
 8020e52:	fb10 f004 	smulbb	r0, r0, r4
 8020e56:	fa1f fc8c 	uxth.w	ip, ip
 8020e5a:	fb01 e103 	mla	r1, r1, r3, lr
 8020e5e:	fb02 0303 	mla	r3, r2, r3, r0
 8020e62:	b29a      	uxth	r2, r3
 8020e64:	f10c 0301 	add.w	r3, ip, #1
 8020e68:	b289      	uxth	r1, r1
 8020e6a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020e6e:	1c53      	adds	r3, r2, #1
 8020e70:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020e74:	1c4a      	adds	r2, r1, #1
 8020e76:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020e7a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8020e7e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020e82:	0949      	lsrs	r1, r1, #5
 8020e84:	ea43 030c 	orr.w	r3, r3, ip
 8020e88:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020e8c:	430b      	orrs	r3, r1
 8020e8e:	803b      	strh	r3, [r7, #0]
 8020e90:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020e92:	449a      	add	sl, r3
 8020e94:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020e96:	3702      	adds	r7, #2
 8020e98:	441d      	add	r5, r3
 8020e9a:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8020e9e:	e742      	b.n	8020d26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020ea0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020ea2:	449a      	add	sl, r3
 8020ea4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020ea6:	441d      	add	r5, r3
 8020ea8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020eaa:	3b01      	subs	r3, #1
 8020eac:	9309      	str	r3, [sp, #36]	; 0x24
 8020eae:	f108 0802 	add.w	r8, r8, #2
 8020eb2:	e718      	b.n	8020ce6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8020eb4:	d023      	beq.n	8020efe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8020eb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020eb8:	9825      	ldr	r0, [sp, #148]	; 0x94
 8020eba:	3b01      	subs	r3, #1
 8020ebc:	fb00 a003 	mla	r0, r0, r3, sl
 8020ec0:	1400      	asrs	r0, r0, #16
 8020ec2:	f53f af2d 	bmi.w	8020d20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020ec6:	3901      	subs	r1, #1
 8020ec8:	4288      	cmp	r0, r1
 8020eca:	f6bf af29 	bge.w	8020d20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020ece:	9926      	ldr	r1, [sp, #152]	; 0x98
 8020ed0:	fb01 5303 	mla	r3, r1, r3, r5
 8020ed4:	141b      	asrs	r3, r3, #16
 8020ed6:	f53f af23 	bmi.w	8020d20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020eda:	3a01      	subs	r2, #1
 8020edc:	4293      	cmp	r3, r2
 8020ede:	f6bf af1f 	bge.w	8020d20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020ee2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8020ee6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8020eea:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8020eee:	f1be 0f00 	cmp.w	lr, #0
 8020ef2:	dc6c      	bgt.n	8020fce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8020ef4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020ef6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020efa:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8020efe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020f00:	2b00      	cmp	r3, #0
 8020f02:	f340 810e 	ble.w	8021122 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8020f06:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020f0a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020f0e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020f12:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020f14:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020f18:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020f1c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020f20:	eef0 6a62 	vmov.f32	s13, s5
 8020f24:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020f28:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020f2c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020f30:	ee16 aa90 	vmov	sl, s13
 8020f34:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020f38:	eef0 6a43 	vmov.f32	s13, s6
 8020f3c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020f40:	ee12 2a90 	vmov	r2, s5
 8020f44:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020f48:	fb92 f3f3 	sdiv	r3, r2, r3
 8020f4c:	ee13 2a10 	vmov	r2, s6
 8020f50:	9325      	str	r3, [sp, #148]	; 0x94
 8020f52:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020f54:	fb92 f3f3 	sdiv	r3, r2, r3
 8020f58:	9326      	str	r3, [sp, #152]	; 0x98
 8020f5a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020f5c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8020f5e:	3b01      	subs	r3, #1
 8020f60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020f64:	930c      	str	r3, [sp, #48]	; 0x30
 8020f66:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020f68:	bf08      	it	eq
 8020f6a:	4613      	moveq	r3, r2
 8020f6c:	ee16 5a90 	vmov	r5, s13
 8020f70:	9309      	str	r3, [sp, #36]	; 0x24
 8020f72:	eeb0 3a67 	vmov.f32	s6, s15
 8020f76:	eef0 2a47 	vmov.f32	s5, s14
 8020f7a:	e6a6      	b.n	8020cca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8020f7c:	2900      	cmp	r1, #0
 8020f7e:	f43f af10 	beq.w	8020da2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020f82:	f819 3003 	ldrb.w	r3, [r9, r3]
 8020f86:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020f8a:	930f      	str	r3, [sp, #60]	; 0x3c
 8020f8c:	e709      	b.n	8020da2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020f8e:	f112 0901 	adds.w	r9, r2, #1
 8020f92:	f53f af7d 	bmi.w	8020e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020f96:	454b      	cmp	r3, r9
 8020f98:	f6ff af7a 	blt.w	8020e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020f9c:	f11c 0901 	adds.w	r9, ip, #1
 8020fa0:	f53f af76 	bmi.w	8020e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020fa4:	45ce      	cmp	lr, r9
 8020fa6:	f6ff af73 	blt.w	8020e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020faa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020fac:	9202      	str	r2, [sp, #8]
 8020fae:	b21b      	sxth	r3, r3
 8020fb0:	fa0f f28e 	sxth.w	r2, lr
 8020fb4:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020fb8:	e9cd c003 	strd	ip, r0, [sp, #12]
 8020fbc:	9201      	str	r2, [sp, #4]
 8020fbe:	9300      	str	r3, [sp, #0]
 8020fc0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020fc2:	9816      	ldr	r0, [sp, #88]	; 0x58
 8020fc4:	4633      	mov	r3, r6
 8020fc6:	4639      	mov	r1, r7
 8020fc8:	f7ff fd8e 	bl	8020ae8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8020fcc:	e760      	b.n	8020e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020fce:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020fd0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020fd2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020fd6:	ea4f 422a 	mov.w	r2, sl, asr #16
 8020fda:	1429      	asrs	r1, r5, #16
 8020fdc:	fb03 2101 	mla	r1, r3, r1, r2
 8020fe0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020fe2:	440a      	add	r2, r1
 8020fe4:	5c61      	ldrb	r1, [r4, r1]
 8020fe6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8020fea:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020fee:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8020ff2:	f1bc 0f00 	cmp.w	ip, #0
 8020ff6:	f000 808c 	beq.w	8021112 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8020ffa:	7857      	ldrb	r7, [r2, #1]
 8020ffc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8021000:	9413      	str	r4, [sp, #76]	; 0x4c
 8021002:	b140      	cbz	r0, 8021016 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021004:	18d7      	adds	r7, r2, r3
 8021006:	5cd3      	ldrb	r3, [r2, r3]
 8021008:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802100c:	9310      	str	r3, [sp, #64]	; 0x40
 802100e:	787b      	ldrb	r3, [r7, #1]
 8021010:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021014:	9314      	str	r3, [sp, #80]	; 0x50
 8021016:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021018:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802101a:	fb1c f200 	smulbb	r2, ip, r0
 802101e:	041f      	lsls	r7, r3, #16
 8021020:	10d2      	asrs	r2, r2, #3
 8021022:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021026:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 802102a:	431f      	orrs	r7, r3
 802102c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8021030:	9317      	str	r3, [sp, #92]	; 0x5c
 8021032:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8021034:	041b      	lsls	r3, r3, #16
 8021036:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 802103a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802103e:	ea43 030b 	orr.w	r3, r3, fp
 8021042:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8021044:	4353      	muls	r3, r2
 8021046:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802104a:	fb04 3707 	mla	r7, r4, r7, r3
 802104e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021052:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8021056:	ea43 0b01 	orr.w	fp, r3, r1
 802105a:	f1c0 0110 	rsb	r1, r0, #16
 802105e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021060:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021062:	eba1 0c0c 	sub.w	ip, r1, ip
 8021066:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 802106a:	fb0c 770b 	mla	r7, ip, fp, r7
 802106e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8021072:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8021076:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802107a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 802107e:	ea4c 0c0b 	orr.w	ip, ip, fp
 8021082:	fb02 770c 	mla	r7, r2, ip, r7
 8021086:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8021088:	0d79      	lsrs	r1, r7, #21
 802108a:	097f      	lsrs	r7, r7, #5
 802108c:	8812      	ldrh	r2, [r2, #0]
 802108e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021092:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021096:	430f      	orrs	r7, r1
 8021098:	b2bb      	uxth	r3, r7
 802109a:	1211      	asrs	r1, r2, #8
 802109c:	1218      	asrs	r0, r3, #8
 802109e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80210a2:	fb11 f104 	smulbb	r1, r1, r4
 80210a6:	10d7      	asrs	r7, r2, #3
 80210a8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80210ac:	00d2      	lsls	r2, r2, #3
 80210ae:	fb00 1009 	mla	r0, r0, r9, r1
 80210b2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80210b6:	10d9      	asrs	r1, r3, #3
 80210b8:	b2d2      	uxtb	r2, r2
 80210ba:	00db      	lsls	r3, r3, #3
 80210bc:	fb17 f704 	smulbb	r7, r7, r4
 80210c0:	fb12 f204 	smulbb	r2, r2, r4
 80210c4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80210c8:	b2db      	uxtb	r3, r3
 80210ca:	b280      	uxth	r0, r0
 80210cc:	fb01 7109 	mla	r1, r1, r9, r7
 80210d0:	fb03 2309 	mla	r3, r3, r9, r2
 80210d4:	b29b      	uxth	r3, r3
 80210d6:	b289      	uxth	r1, r1
 80210d8:	1c42      	adds	r2, r0, #1
 80210da:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80210de:	1c4f      	adds	r7, r1, #1
 80210e0:	1c5a      	adds	r2, r3, #1
 80210e2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80210e6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80210ea:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80210ee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80210f2:	0949      	lsrs	r1, r1, #5
 80210f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80210f6:	4310      	orrs	r0, r2
 80210f8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80210fc:	4308      	orrs	r0, r1
 80210fe:	f823 0b02 	strh.w	r0, [r3], #2
 8021102:	930e      	str	r3, [sp, #56]	; 0x38
 8021104:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021106:	449a      	add	sl, r3
 8021108:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802110a:	f10e 3eff 	add.w	lr, lr, #4294967295	; 0xffffffff
 802110e:	441d      	add	r5, r3
 8021110:	e6ed      	b.n	8020eee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8021112:	2800      	cmp	r0, #0
 8021114:	f43f af7f 	beq.w	8021016 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021118:	5cd3      	ldrb	r3, [r2, r3]
 802111a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802111e:	9310      	str	r3, [sp, #64]	; 0x40
 8021120:	e779      	b.n	8021016 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021122:	b019      	add	sp, #100	; 0x64
 8021124:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021128 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021128:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802112c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8021130:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8021134:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8021138:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 802113c:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8021140:	8808      	ldrh	r0, [r1, #0]
 8021142:	fb08 470e 	mla	r7, r8, lr, r4
 8021146:	f1b8 0f00 	cmp.w	r8, #0
 802114a:	eb02 0907 	add.w	r9, r2, r7
 802114e:	db67      	blt.n	8021220 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8021150:	45c2      	cmp	sl, r8
 8021152:	dd65      	ble.n	8021220 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8021154:	2c00      	cmp	r4, #0
 8021156:	db61      	blt.n	802121c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8021158:	45a6      	cmp	lr, r4
 802115a:	dd5f      	ble.n	802121c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 802115c:	5dd2      	ldrb	r2, [r2, r7]
 802115e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8021162:	1c62      	adds	r2, r4, #1
 8021164:	d45f      	bmi.n	8021226 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8021166:	4596      	cmp	lr, r2
 8021168:	dd5d      	ble.n	8021226 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 802116a:	2d00      	cmp	r5, #0
 802116c:	d05b      	beq.n	8021226 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 802116e:	f899 2001 	ldrb.w	r2, [r9, #1]
 8021172:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8021176:	f118 0801 	adds.w	r8, r8, #1
 802117a:	d458      	bmi.n	802122e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 802117c:	45c2      	cmp	sl, r8
 802117e:	dd56      	ble.n	802122e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8021180:	2e00      	cmp	r6, #0
 8021182:	d054      	beq.n	802122e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8021184:	2c00      	cmp	r4, #0
 8021186:	db50      	blt.n	802122a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8021188:	45a6      	cmp	lr, r4
 802118a:	dd4e      	ble.n	802122a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 802118c:	f819 200e 	ldrb.w	r2, [r9, lr]
 8021190:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8021194:	3401      	adds	r4, #1
 8021196:	d407      	bmi.n	80211a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8021198:	45a6      	cmp	lr, r4
 802119a:	dd05      	ble.n	80211a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 802119c:	b125      	cbz	r5, 80211a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 802119e:	44ce      	add	lr, r9
 80211a0:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80211a4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80211a8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80211ac:	fb15 f406 	smulbb	r4, r5, r6
 80211b0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80211b4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 80211b8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80211bc:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 80211c0:	ea43 0c0c 	orr.w	ip, r3, ip
 80211c4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80211c8:	f1c6 0310 	rsb	r3, r6, #16
 80211cc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80211d0:	1b5b      	subs	r3, r3, r5
 80211d2:	ea4e 0707 	orr.w	r7, lr, r7
 80211d6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80211da:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80211de:	437d      	muls	r5, r7
 80211e0:	fb03 5c0c 	mla	ip, r3, ip, r5
 80211e4:	0403      	lsls	r3, r0, #16
 80211e6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80211ea:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80211ee:	4318      	orrs	r0, r3
 80211f0:	0413      	lsls	r3, r2, #16
 80211f2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80211f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80211fa:	4313      	orrs	r3, r2
 80211fc:	fb04 c000 	mla	r0, r4, r0, ip
 8021200:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8021204:	fb06 0003 	mla	r0, r6, r3, r0
 8021208:	0d43      	lsrs	r3, r0, #21
 802120a:	0940      	lsrs	r0, r0, #5
 802120c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021210:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021214:	4318      	orrs	r0, r3
 8021216:	8008      	strh	r0, [r1, #0]
 8021218:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802121c:	4684      	mov	ip, r0
 802121e:	e7a0      	b.n	8021162 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8021220:	4607      	mov	r7, r0
 8021222:	4684      	mov	ip, r0
 8021224:	e7a7      	b.n	8021176 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8021226:	4607      	mov	r7, r0
 8021228:	e7a5      	b.n	8021176 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 802122a:	4602      	mov	r2, r0
 802122c:	e7b2      	b.n	8021194 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 802122e:	4602      	mov	r2, r0
 8021230:	e7ba      	b.n	80211a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08021232 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021232:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021236:	b093      	sub	sp, #76	; 0x4c
 8021238:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802123c:	920f      	str	r2, [sp, #60]	; 0x3c
 802123e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021240:	9108      	str	r1, [sp, #32]
 8021242:	9306      	str	r3, [sp, #24]
 8021244:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8021248:	9010      	str	r0, [sp, #64]	; 0x40
 802124a:	6850      	ldr	r0, [r2, #4]
 802124c:	6812      	ldr	r2, [r2, #0]
 802124e:	fb00 1303 	mla	r3, r0, r3, r1
 8021252:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8021256:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021258:	681b      	ldr	r3, [r3, #0]
 802125a:	9307      	str	r3, [sp, #28]
 802125c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802125e:	685f      	ldr	r7, [r3, #4]
 8021260:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8021264:	3704      	adds	r7, #4
 8021266:	9b08      	ldr	r3, [sp, #32]
 8021268:	2b00      	cmp	r3, #0
 802126a:	dc03      	bgt.n	8021274 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802126c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802126e:	2b00      	cmp	r3, #0
 8021270:	f340 81b2 	ble.w	80215d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8021274:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021276:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802127a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802127e:	1e48      	subs	r0, r1, #1
 8021280:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
 8021284:	9b06      	ldr	r3, [sp, #24]
 8021286:	2b00      	cmp	r3, #0
 8021288:	f340 80a9 	ble.w	80213de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 802128c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021290:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021294:	d406      	bmi.n	80212a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021296:	4586      	cmp	lr, r0
 8021298:	da04      	bge.n	80212a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802129a:	2b00      	cmp	r3, #0
 802129c:	db02      	blt.n	80212a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802129e:	4563      	cmp	r3, ip
 80212a0:	f2c0 809e 	blt.w	80213e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80212a4:	f11e 0e01 	adds.w	lr, lr, #1
 80212a8:	f100 808f 	bmi.w	80213ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80212ac:	4571      	cmp	r1, lr
 80212ae:	f2c0 808c 	blt.w	80213ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80212b2:	3301      	adds	r3, #1
 80212b4:	f100 8089 	bmi.w	80213ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80212b8:	429a      	cmp	r2, r3
 80212ba:	f2c0 8086 	blt.w	80213ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80212be:	f8dd b018 	ldr.w	fp, [sp, #24]
 80212c2:	46c8      	mov	r8, r9
 80212c4:	f1bb 0f00 	cmp.w	fp, #0
 80212c8:	f340 80a6 	ble.w	8021418 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80212cc:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80212ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80212d0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80212d4:	689b      	ldr	r3, [r3, #8]
 80212d6:	1422      	asrs	r2, r4, #16
 80212d8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80212dc:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80212e0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80212e4:	f100 80e3 	bmi.w	80214ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80212e8:	f103 3aff 	add.w	sl, r3, #4294967295	; 0xffffffff
 80212ec:	4552      	cmp	r2, sl
 80212ee:	f280 80de 	bge.w	80214ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80212f2:	f1bc 0f00 	cmp.w	ip, #0
 80212f6:	f2c0 80da 	blt.w	80214ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80212fa:	f10e 3aff 	add.w	sl, lr, #4294967295	; 0xffffffff
 80212fe:	45d4      	cmp	ip, sl
 8021300:	f280 80d5 	bge.w	80214ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8021304:	b21b      	sxth	r3, r3
 8021306:	fb0c 2203 	mla	r2, ip, r3, r2
 802130a:	9d07      	ldr	r5, [sp, #28]
 802130c:	eb05 0a02 	add.w	sl, r5, r2
 8021310:	5caa      	ldrb	r2, [r5, r2]
 8021312:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8021316:	2800      	cmp	r0, #0
 8021318:	f000 80c0 	beq.w	802149c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 802131c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8021320:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8021324:	920b      	str	r2, [sp, #44]	; 0x2c
 8021326:	b151      	cbz	r1, 802133e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8021328:	eb0a 0203 	add.w	r2, sl, r3
 802132c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8021330:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021334:	9309      	str	r3, [sp, #36]	; 0x24
 8021336:	7853      	ldrb	r3, [r2, #1]
 8021338:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802133c:	930c      	str	r3, [sp, #48]	; 0x30
 802133e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021340:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021342:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8021346:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802134a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802134e:	ea4c 0c03 	orr.w	ip, ip, r3
 8021352:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021354:	041b      	lsls	r3, r3, #16
 8021356:	fb10 f201 	smulbb	r2, r0, r1
 802135a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802135e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021362:	10d2      	asrs	r2, r2, #3
 8021364:	432b      	orrs	r3, r5
 8021366:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 802136a:	4353      	muls	r3, r2
 802136c:	fb0a 330c 	mla	r3, sl, ip, r3
 8021370:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8021374:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021378:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802137c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8021380:	f1c1 0c10 	rsb	ip, r1, #16
 8021384:	ebac 0c00 	sub.w	ip, ip, r0
 8021388:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 802138c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8021390:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021392:	0418      	lsls	r0, r3, #16
 8021394:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021398:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802139c:	4318      	orrs	r0, r3
 802139e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80213a2:	fb02 c200 	mla	r2, r2, r0, ip
 80213a6:	0d53      	lsrs	r3, r2, #21
 80213a8:	0952      	lsrs	r2, r2, #5
 80213aa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80213ae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80213b2:	431a      	orrs	r2, r3
 80213b4:	f8a8 2000 	strh.w	r2, [r8]
 80213b8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80213ba:	441c      	add	r4, r3
 80213bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80213be:	f108 0802 	add.w	r8, r8, #2
 80213c2:	441e      	add	r6, r3
 80213c4:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 80213c8:	e77c      	b.n	80212c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80213ca:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80213cc:	441c      	add	r4, r3
 80213ce:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80213d0:	441e      	add	r6, r3
 80213d2:	9b06      	ldr	r3, [sp, #24]
 80213d4:	3b01      	subs	r3, #1
 80213d6:	9306      	str	r3, [sp, #24]
 80213d8:	f109 0902 	add.w	r9, r9, #2
 80213dc:	e752      	b.n	8021284 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80213de:	d020      	beq.n	8021422 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80213e0:	9b06      	ldr	r3, [sp, #24]
 80213e2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80213e4:	3b01      	subs	r3, #1
 80213e6:	fb00 4003 	mla	r0, r0, r3, r4
 80213ea:	1400      	asrs	r0, r0, #16
 80213ec:	f53f af67 	bmi.w	80212be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80213f0:	3901      	subs	r1, #1
 80213f2:	4288      	cmp	r0, r1
 80213f4:	f6bf af63 	bge.w	80212be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80213f8:	9920      	ldr	r1, [sp, #128]	; 0x80
 80213fa:	fb01 6303 	mla	r3, r1, r3, r6
 80213fe:	141b      	asrs	r3, r3, #16
 8021400:	f53f af5d 	bmi.w	80212be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021404:	3a01      	subs	r2, #1
 8021406:	4293      	cmp	r3, r2
 8021408:	f6bf af59 	bge.w	80212be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802140c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8021410:	46ca      	mov	sl, r9
 8021412:	f1b8 0f00 	cmp.w	r8, #0
 8021416:	dc67      	bgt.n	80214e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8021418:	9b06      	ldr	r3, [sp, #24]
 802141a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802141e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8021422:	9b08      	ldr	r3, [sp, #32]
 8021424:	2b00      	cmp	r3, #0
 8021426:	f340 80d7 	ble.w	80215d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802142a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802142e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021432:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8021436:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021438:	ee31 1a05 	vadd.f32	s2, s2, s10
 802143c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021440:	eeb0 6a62 	vmov.f32	s12, s5
 8021444:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021448:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 802144c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021450:	ee16 4a10 	vmov	r4, s12
 8021454:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021458:	eeb0 6a43 	vmov.f32	s12, s6
 802145c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021460:	ee12 2a90 	vmov	r2, s5
 8021464:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021468:	fb92 f3f3 	sdiv	r3, r2, r3
 802146c:	ee13 2a10 	vmov	r2, s6
 8021470:	931f      	str	r3, [sp, #124]	; 0x7c
 8021472:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021474:	fb92 f3f3 	sdiv	r3, r2, r3
 8021478:	9320      	str	r3, [sp, #128]	; 0x80
 802147a:	9b08      	ldr	r3, [sp, #32]
 802147c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802147e:	3b01      	subs	r3, #1
 8021480:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8021484:	9308      	str	r3, [sp, #32]
 8021486:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021488:	bf08      	it	eq
 802148a:	4613      	moveq	r3, r2
 802148c:	ee16 6a10 	vmov	r6, s12
 8021490:	9306      	str	r3, [sp, #24]
 8021492:	eeb0 3a67 	vmov.f32	s6, s15
 8021496:	eef0 2a47 	vmov.f32	s5, s14
 802149a:	e6e4      	b.n	8021266 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 802149c:	2900      	cmp	r1, #0
 802149e:	f43f af4e 	beq.w	802133e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80214a2:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80214a6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80214aa:	9309      	str	r3, [sp, #36]	; 0x24
 80214ac:	e747      	b.n	802133e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80214ae:	f112 0a01 	adds.w	sl, r2, #1
 80214b2:	d481      	bmi.n	80213b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80214b4:	4553      	cmp	r3, sl
 80214b6:	f6ff af7f 	blt.w	80213b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80214ba:	f11c 0a01 	adds.w	sl, ip, #1
 80214be:	f53f af7b 	bmi.w	80213b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80214c2:	45d6      	cmp	lr, sl
 80214c4:	f6ff af78 	blt.w	80213b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80214c8:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 80214cc:	b21b      	sxth	r3, r3
 80214ce:	fa0f f28e 	sxth.w	r2, lr
 80214d2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80214d6:	9201      	str	r2, [sp, #4]
 80214d8:	9300      	str	r3, [sp, #0]
 80214da:	9a07      	ldr	r2, [sp, #28]
 80214dc:	9810      	ldr	r0, [sp, #64]	; 0x40
 80214de:	463b      	mov	r3, r7
 80214e0:	4641      	mov	r1, r8
 80214e2:	f7ff fe21 	bl	8021128 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80214e6:	e767      	b.n	80213b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80214e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80214ea:	9d07      	ldr	r5, [sp, #28]
 80214ec:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80214f0:	1422      	asrs	r2, r4, #16
 80214f2:	1431      	asrs	r1, r6, #16
 80214f4:	fb03 2101 	mla	r1, r3, r1, r2
 80214f8:	9a07      	ldr	r2, [sp, #28]
 80214fa:	440a      	add	r2, r1
 80214fc:	5c69      	ldrb	r1, [r5, r1]
 80214fe:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8021502:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8021506:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 802150a:	f1be 0f00 	cmp.w	lr, #0
 802150e:	d05c      	beq.n	80215ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8021510:	f892 c001 	ldrb.w	ip, [r2, #1]
 8021514:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8021518:	950d      	str	r5, [sp, #52]	; 0x34
 802151a:	b150      	cbz	r0, 8021532 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802151c:	eb02 0c03 	add.w	ip, r2, r3
 8021520:	5cd3      	ldrb	r3, [r2, r3]
 8021522:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021526:	930a      	str	r3, [sp, #40]	; 0x28
 8021528:	f89c 3001 	ldrb.w	r3, [ip, #1]
 802152c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021530:	930e      	str	r3, [sp, #56]	; 0x38
 8021532:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021534:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8021536:	fb1e f200 	smulbb	r2, lr, r0
 802153a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802153e:	10d2      	asrs	r2, r2, #3
 8021540:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021544:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021548:	ea4c 0c03 	orr.w	ip, ip, r3
 802154c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8021550:	9311      	str	r3, [sp, #68]	; 0x44
 8021552:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021554:	041b      	lsls	r3, r3, #16
 8021556:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 802155a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802155e:	ea43 030b 	orr.w	r3, r3, fp
 8021562:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021564:	4353      	muls	r3, r2
 8021566:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802156a:	fb05 3c0c 	mla	ip, r5, ip, r3
 802156e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021572:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8021576:	ea43 0b01 	orr.w	fp, r3, r1
 802157a:	f1c0 0110 	rsb	r1, r0, #16
 802157e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021580:	eba1 0e0e 	sub.w	lr, r1, lr
 8021584:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8021588:	fb0e cc0b 	mla	ip, lr, fp, ip
 802158c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8021590:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8021594:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021598:	ea4b 0e0e 	orr.w	lr, fp, lr
 802159c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80215a0:	fb02 cc0e 	mla	ip, r2, lr, ip
 80215a4:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80215a8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80215ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80215b0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80215b4:	ea43 0c0c 	orr.w	ip, r3, ip
 80215b8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80215ba:	f82a cb02 	strh.w	ip, [sl], #2
 80215be:	441c      	add	r4, r3
 80215c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80215c2:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 80215c6:	441e      	add	r6, r3
 80215c8:	e723      	b.n	8021412 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80215ca:	2800      	cmp	r0, #0
 80215cc:	d0b1      	beq.n	8021532 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80215ce:	5cd3      	ldrb	r3, [r2, r3]
 80215d0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80215d4:	930a      	str	r3, [sp, #40]	; 0x28
 80215d6:	e7ac      	b.n	8021532 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80215d8:	b013      	add	sp, #76	; 0x4c
 80215da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080215de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80215de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80215e2:	880d      	ldrh	r5, [r1, #0]
 80215e4:	b087      	sub	sp, #28
 80215e6:	10ef      	asrs	r7, r5, #3
 80215e8:	ea4f 2a25 	mov.w	sl, r5, asr #8
 80215ec:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80215f0:	00ed      	lsls	r5, r5, #3
 80215f2:	9701      	str	r7, [sp, #4]
 80215f4:	b2ed      	uxtb	r5, r5
 80215f6:	9502      	str	r5, [sp, #8]
 80215f8:	9d01      	ldr	r5, [sp, #4]
 80215fa:	9103      	str	r1, [sp, #12]
 80215fc:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8021600:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8021604:	9902      	ldr	r1, [sp, #8]
 8021606:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 802160a:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 802160e:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8021612:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8021616:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 802161a:	022d      	lsls	r5, r5, #8
 802161c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8021620:	fb06 0709 	mla	r7, r6, r9, r0
 8021624:	430d      	orrs	r5, r1
 8021626:	2e00      	cmp	r6, #0
 8021628:	eb02 0c07 	add.w	ip, r2, r7
 802162c:	9505      	str	r5, [sp, #20]
 802162e:	f2c0 80b6 	blt.w	802179e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8021632:	45b3      	cmp	fp, r6
 8021634:	f340 80b3 	ble.w	802179e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8021638:	2800      	cmp	r0, #0
 802163a:	f2c0 80ae 	blt.w	802179a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 802163e:	4581      	cmp	r9, r0
 8021640:	f340 80ab 	ble.w	802179a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8021644:	5dd7      	ldrb	r7, [r2, r7]
 8021646:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802164a:	441f      	add	r7, r3
 802164c:	1c42      	adds	r2, r0, #1
 802164e:	f100 80a9 	bmi.w	80217a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8021652:	4591      	cmp	r9, r2
 8021654:	f340 80a6 	ble.w	80217a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8021658:	2c00      	cmp	r4, #0
 802165a:	f000 80a3 	beq.w	80217a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802165e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8021662:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8021666:	441d      	add	r5, r3
 8021668:	3601      	adds	r6, #1
 802166a:	f100 809f 	bmi.w	80217ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 802166e:	45b3      	cmp	fp, r6
 8021670:	f340 809c 	ble.w	80217ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8021674:	f1be 0f00 	cmp.w	lr, #0
 8021678:	f000 8098 	beq.w	80217ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 802167c:	2800      	cmp	r0, #0
 802167e:	f2c0 8093 	blt.w	80217a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8021682:	4581      	cmp	r9, r0
 8021684:	f340 8090 	ble.w	80217a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8021688:	f81c 6009 	ldrb.w	r6, [ip, r9]
 802168c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021690:	441e      	add	r6, r3
 8021692:	3001      	adds	r0, #1
 8021694:	f100 808d 	bmi.w	80217b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8021698:	4581      	cmp	r9, r0
 802169a:	f340 808a 	ble.w	80217b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 802169e:	2c00      	cmp	r4, #0
 80216a0:	f000 8087 	beq.w	80217b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80216a4:	44e1      	add	r9, ip
 80216a6:	f899 2001 	ldrb.w	r2, [r9, #1]
 80216aa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80216ae:	4413      	add	r3, r2
 80216b0:	b2a4      	uxth	r4, r4
 80216b2:	fa1f fe8e 	uxth.w	lr, lr
 80216b6:	fb04 fb0e 	mul.w	fp, r4, lr
 80216ba:	0124      	lsls	r4, r4, #4
 80216bc:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 80216c0:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 80216c4:	eba4 040b 	sub.w	r4, r4, fp
 80216c8:	fa1f f08e 	uxth.w	r0, lr
 80216cc:	b2a2      	uxth	r2, r4
 80216ce:	78ac      	ldrb	r4, [r5, #2]
 80216d0:	f897 c002 	ldrb.w	ip, [r7, #2]
 80216d4:	9901      	ldr	r1, [sp, #4]
 80216d6:	eba9 0900 	sub.w	r9, r9, r0
 80216da:	fa1f f989 	uxth.w	r9, r9
 80216de:	4354      	muls	r4, r2
 80216e0:	fb09 440c 	mla	r4, r9, ip, r4
 80216e4:	f896 c002 	ldrb.w	ip, [r6, #2]
 80216e8:	fb00 440c 	mla	r4, r0, ip, r4
 80216ec:	f893 c002 	ldrb.w	ip, [r3, #2]
 80216f0:	fa1f fe88 	uxth.w	lr, r8
 80216f4:	ea6f 0808 	mvn.w	r8, r8
 80216f8:	fa5f f888 	uxtb.w	r8, r8
 80216fc:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8021700:	fb1a fa08 	smulbb	sl, sl, r8
 8021704:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8021708:	fb0c ac0e 	mla	ip, ip, lr, sl
 802170c:	f895 a001 	ldrb.w	sl, [r5, #1]
 8021710:	787c      	ldrb	r4, [r7, #1]
 8021712:	782d      	ldrb	r5, [r5, #0]
 8021714:	783f      	ldrb	r7, [r7, #0]
 8021716:	fb02 fa0a 	mul.w	sl, r2, sl
 802171a:	fb09 aa04 	mla	sl, r9, r4, sl
 802171e:	7874      	ldrb	r4, [r6, #1]
 8021720:	436a      	muls	r2, r5
 8021722:	7835      	ldrb	r5, [r6, #0]
 8021724:	fb00 aa04 	mla	sl, r0, r4, sl
 8021728:	fb09 2207 	mla	r2, r9, r7, r2
 802172c:	785c      	ldrb	r4, [r3, #1]
 802172e:	781b      	ldrb	r3, [r3, #0]
 8021730:	fb00 2005 	mla	r0, r0, r5, r2
 8021734:	fb0b a404 	mla	r4, fp, r4, sl
 8021738:	fb0b 0b03 	mla	fp, fp, r3, r0
 802173c:	9b02      	ldr	r3, [sp, #8]
 802173e:	fb11 fa08 	smulbb	sl, r1, r8
 8021742:	fa1f fc8c 	uxth.w	ip, ip
 8021746:	fb13 f808 	smulbb	r8, r3, r8
 802174a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 802174e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8021752:	fb04 a40e 	mla	r4, r4, lr, sl
 8021756:	f10c 0301 	add.w	r3, ip, #1
 802175a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 802175e:	fa1f fe8e 	uxth.w	lr, lr
 8021762:	b2a4      	uxth	r4, r4
 8021764:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8021768:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 802176c:	f104 0a01 	add.w	sl, r4, #1
 8021770:	f10e 0c01 	add.w	ip, lr, #1
 8021774:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021778:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 802177c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021780:	0964      	lsrs	r4, r4, #5
 8021782:	ea4c 0c03 	orr.w	ip, ip, r3
 8021786:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802178a:	9b03      	ldr	r3, [sp, #12]
 802178c:	ea4c 0c04 	orr.w	ip, ip, r4
 8021790:	f8a3 c000 	strh.w	ip, [r3]
 8021794:	b007      	add	sp, #28
 8021796:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802179a:	af05      	add	r7, sp, #20
 802179c:	e756      	b.n	802164c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 802179e:	ad05      	add	r5, sp, #20
 80217a0:	462f      	mov	r7, r5
 80217a2:	e761      	b.n	8021668 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80217a4:	ad05      	add	r5, sp, #20
 80217a6:	e75f      	b.n	8021668 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80217a8:	ae05      	add	r6, sp, #20
 80217aa:	e772      	b.n	8021692 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 80217ac:	ab05      	add	r3, sp, #20
 80217ae:	461e      	mov	r6, r3
 80217b0:	e77e      	b.n	80216b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 80217b2:	ab05      	add	r3, sp, #20
 80217b4:	e77c      	b.n	80216b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

080217b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80217b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80217ba:	b095      	sub	sp, #84	; 0x54
 80217bc:	9212      	str	r2, [sp, #72]	; 0x48
 80217be:	9309      	str	r3, [sp, #36]	; 0x24
 80217c0:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80217c2:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 80217c6:	930f      	str	r3, [sp, #60]	; 0x3c
 80217c8:	910e      	str	r1, [sp, #56]	; 0x38
 80217ca:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 80217ce:	9013      	str	r0, [sp, #76]	; 0x4c
 80217d0:	6850      	ldr	r0, [r2, #4]
 80217d2:	6812      	ldr	r2, [r2, #0]
 80217d4:	fb00 1303 	mla	r3, r0, r3, r1
 80217d8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80217dc:	930a      	str	r3, [sp, #40]	; 0x28
 80217de:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80217e0:	681b      	ldr	r3, [r3, #0]
 80217e2:	930d      	str	r3, [sp, #52]	; 0x34
 80217e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80217e6:	685c      	ldr	r4, [r3, #4]
 80217e8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80217ea:	43db      	mvns	r3, r3
 80217ec:	b2db      	uxtb	r3, r3
 80217ee:	3404      	adds	r4, #4
 80217f0:	930b      	str	r3, [sp, #44]	; 0x2c
 80217f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80217f4:	2b00      	cmp	r3, #0
 80217f6:	dc03      	bgt.n	8021800 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80217f8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80217fa:	2b00      	cmp	r3, #0
 80217fc:	f340 8255 	ble.w	8021caa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8021800:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8021802:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021806:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802180a:	1e48      	subs	r0, r1, #1
 802180c:	1e55      	subs	r5, r2, #1
 802180e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021810:	2b00      	cmp	r3, #0
 8021812:	f340 80f9 	ble.w	8021a08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8021816:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8021818:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802181a:	1436      	asrs	r6, r6, #16
 802181c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021820:	d406      	bmi.n	8021830 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021822:	4286      	cmp	r6, r0
 8021824:	da04      	bge.n	8021830 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021826:	2b00      	cmp	r3, #0
 8021828:	db02      	blt.n	8021830 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802182a:	42ab      	cmp	r3, r5
 802182c:	f2c0 80ed 	blt.w	8021a0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8021830:	3601      	adds	r6, #1
 8021832:	f100 80da 	bmi.w	80219ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8021836:	42b1      	cmp	r1, r6
 8021838:	f2c0 80d7 	blt.w	80219ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802183c:	3301      	adds	r3, #1
 802183e:	f100 80d4 	bmi.w	80219ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8021842:	429a      	cmp	r2, r3
 8021844:	f2c0 80d1 	blt.w	80219ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8021848:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802184a:	9311      	str	r3, [sp, #68]	; 0x44
 802184c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802184e:	930c      	str	r3, [sp, #48]	; 0x30
 8021850:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021852:	2b00      	cmp	r3, #0
 8021854:	f340 80fa 	ble.w	8021a4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8021858:	9826      	ldr	r0, [sp, #152]	; 0x98
 802185a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802185c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 802185e:	68c6      	ldr	r6, [r0, #12]
 8021860:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8021862:	141d      	asrs	r5, r3, #16
 8021864:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8021868:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802186a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 802186c:	1400      	asrs	r0, r0, #16
 802186e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8021872:	6892      	ldr	r2, [r2, #8]
 8021874:	f100 813e 	bmi.w	8021af4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8021878:	1e57      	subs	r7, r2, #1
 802187a:	42b8      	cmp	r0, r7
 802187c:	f280 813a 	bge.w	8021af4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8021880:	2d00      	cmp	r5, #0
 8021882:	f2c0 8137 	blt.w	8021af4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8021886:	1e77      	subs	r7, r6, #1
 8021888:	42bd      	cmp	r5, r7
 802188a:	f280 8133 	bge.w	8021af4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802188e:	b212      	sxth	r2, r2
 8021890:	fb05 0002 	mla	r0, r5, r2, r0
 8021894:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8021896:	f815 a000 	ldrb.w	sl, [r5, r0]
 802189a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802189e:	182e      	adds	r6, r5, r0
 80218a0:	eb04 050a 	add.w	r5, r4, sl
 80218a4:	2b00      	cmp	r3, #0
 80218a6:	f000 8117 	beq.w	8021ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80218aa:	f896 c001 	ldrb.w	ip, [r6, #1]
 80218ae:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80218b2:	44a4      	add	ip, r4
 80218b4:	2900      	cmp	r1, #0
 80218b6:	f000 8117 	beq.w	8021ae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 80218ba:	18b0      	adds	r0, r6, r2
 80218bc:	5cb2      	ldrb	r2, [r6, r2]
 80218be:	7840      	ldrb	r0, [r0, #1]
 80218c0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80218c4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80218c8:	4422      	add	r2, r4
 80218ca:	4420      	add	r0, r4
 80218cc:	b29b      	uxth	r3, r3
 80218ce:	b289      	uxth	r1, r1
 80218d0:	fb03 f901 	mul.w	r9, r3, r1
 80218d4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80218d8:	011b      	lsls	r3, r3, #4
 80218da:	b289      	uxth	r1, r1
 80218dc:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80218e0:	f895 b002 	ldrb.w	fp, [r5, #2]
 80218e4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80218e6:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80218ea:	f8b6 e000 	ldrh.w	lr, [r6]
 80218ee:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80218f2:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80218f6:	eba3 0309 	sub.w	r3, r3, r9
 80218fa:	b29b      	uxth	r3, r3
 80218fc:	eba8 0801 	sub.w	r8, r8, r1
 8021900:	fa1f f888 	uxth.w	r8, r8
 8021904:	435f      	muls	r7, r3
 8021906:	fb08 770b 	mla	r7, r8, fp, r7
 802190a:	f892 b002 	ldrb.w	fp, [r2, #2]
 802190e:	9310      	str	r3, [sp, #64]	; 0x40
 8021910:	fb01 770b 	mla	r7, r1, fp, r7
 8021914:	f890 b002 	ldrb.w	fp, [r0, #2]
 8021918:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802191a:	fb09 770b 	mla	r7, r9, fp, r7
 802191e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8021922:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8021926:	fb1b fb03 	smulbb	fp, fp, r3
 802192a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802192e:	fb07 b706 	mla	r7, r7, r6, fp
 8021932:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021934:	f895 b001 	ldrb.w	fp, [r5, #1]
 8021938:	f89c 5001 	ldrb.w	r5, [ip, #1]
 802193c:	f89c c000 	ldrb.w	ip, [ip]
 8021940:	435d      	muls	r5, r3
 8021942:	fb08 550b 	mla	r5, r8, fp, r5
 8021946:	f892 b001 	ldrb.w	fp, [r2, #1]
 802194a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802194c:	fb01 550b 	mla	r5, r1, fp, r5
 8021950:	f890 b001 	ldrb.w	fp, [r0, #1]
 8021954:	fb09 550b 	mla	r5, r9, fp, r5
 8021958:	ea4f 0bee 	mov.w	fp, lr, asr #3
 802195c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8021960:	fb1b fb03 	smulbb	fp, fp, r3
 8021964:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021966:	fb03 f30c 	mul.w	r3, r3, ip
 802196a:	f892 c000 	ldrb.w	ip, [r2]
 802196e:	fb08 330a 	mla	r3, r8, sl, r3
 8021972:	fb01 330c 	mla	r3, r1, ip, r3
 8021976:	f890 c000 	ldrb.w	ip, [r0]
 802197a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802197e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8021982:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021984:	fa5f fe8e 	uxtb.w	lr, lr
 8021988:	b2bf      	uxth	r7, r7
 802198a:	fb1e fe03 	smulbb	lr, lr, r3
 802198e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8021992:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8021996:	fb05 b506 	mla	r5, r5, r6, fp
 802199a:	1c7b      	adds	r3, r7, #1
 802199c:	fb0c e606 	mla	r6, ip, r6, lr
 80219a0:	b2ad      	uxth	r5, r5
 80219a2:	b2b6      	uxth	r6, r6
 80219a4:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80219a8:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 80219ac:	f105 0b01 	add.w	fp, r5, #1
 80219b0:	1c77      	adds	r7, r6, #1
 80219b2:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80219b6:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80219ba:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80219be:	096d      	lsrs	r5, r5, #5
 80219c0:	431f      	orrs	r7, r3
 80219c2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80219c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80219c8:	433d      	orrs	r5, r7
 80219ca:	801d      	strh	r5, [r3, #0]
 80219cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80219ce:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80219d0:	3302      	adds	r3, #2
 80219d2:	930c      	str	r3, [sp, #48]	; 0x30
 80219d4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80219d6:	4413      	add	r3, r2
 80219d8:	931f      	str	r3, [sp, #124]	; 0x7c
 80219da:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80219dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80219de:	4413      	add	r3, r2
 80219e0:	9320      	str	r3, [sp, #128]	; 0x80
 80219e2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80219e4:	3b01      	subs	r3, #1
 80219e6:	9311      	str	r3, [sp, #68]	; 0x44
 80219e8:	e732      	b.n	8021850 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80219ea:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80219ec:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80219ee:	4433      	add	r3, r6
 80219f0:	931f      	str	r3, [sp, #124]	; 0x7c
 80219f2:	9e22      	ldr	r6, [sp, #136]	; 0x88
 80219f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80219f6:	4433      	add	r3, r6
 80219f8:	9320      	str	r3, [sp, #128]	; 0x80
 80219fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80219fc:	3b01      	subs	r3, #1
 80219fe:	9309      	str	r3, [sp, #36]	; 0x24
 8021a00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021a02:	3302      	adds	r3, #2
 8021a04:	930a      	str	r3, [sp, #40]	; 0x28
 8021a06:	e702      	b.n	802180e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8021a08:	d027      	beq.n	8021a5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8021a0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021a0c:	9821      	ldr	r0, [sp, #132]	; 0x84
 8021a0e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8021a10:	3b01      	subs	r3, #1
 8021a12:	fb00 5003 	mla	r0, r0, r3, r5
 8021a16:	1400      	asrs	r0, r0, #16
 8021a18:	f53f af16 	bmi.w	8021848 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021a1c:	3901      	subs	r1, #1
 8021a1e:	4288      	cmp	r0, r1
 8021a20:	f6bf af12 	bge.w	8021848 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021a24:	9922      	ldr	r1, [sp, #136]	; 0x88
 8021a26:	9820      	ldr	r0, [sp, #128]	; 0x80
 8021a28:	fb01 0303 	mla	r3, r1, r3, r0
 8021a2c:	141b      	asrs	r3, r3, #16
 8021a2e:	f53f af0b 	bmi.w	8021848 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021a32:	3a01      	subs	r2, #1
 8021a34:	4293      	cmp	r3, r2
 8021a36:	f6bf af07 	bge.w	8021848 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021a3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021a3c:	9311      	str	r3, [sp, #68]	; 0x44
 8021a3e:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8021a42:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021a44:	930c      	str	r3, [sp, #48]	; 0x30
 8021a46:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021a48:	2b00      	cmp	r3, #0
 8021a4a:	dc70      	bgt.n	8021b2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8021a4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021a4e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8021a50:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8021a54:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021a58:	930a      	str	r3, [sp, #40]	; 0x28
 8021a5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021a5c:	2b00      	cmp	r3, #0
 8021a5e:	f340 8124 	ble.w	8021caa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8021a62:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021a66:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021a6a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021a6e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021a70:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021a74:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021a78:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021a7c:	eef0 6a62 	vmov.f32	s13, s5
 8021a80:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021a84:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021a88:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021a8c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8021a90:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021a94:	eef0 6a43 	vmov.f32	s13, s6
 8021a98:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021a9c:	ee12 2a90 	vmov	r2, s5
 8021aa0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021aa4:	fb92 f3f3 	sdiv	r3, r2, r3
 8021aa8:	ee13 2a10 	vmov	r2, s6
 8021aac:	9321      	str	r3, [sp, #132]	; 0x84
 8021aae:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021ab0:	fb92 f3f3 	sdiv	r3, r2, r3
 8021ab4:	9322      	str	r3, [sp, #136]	; 0x88
 8021ab6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021ab8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8021aba:	3b01      	subs	r3, #1
 8021abc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021ac0:	930e      	str	r3, [sp, #56]	; 0x38
 8021ac2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021ac4:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8021ac8:	bf08      	it	eq
 8021aca:	4613      	moveq	r3, r2
 8021acc:	9309      	str	r3, [sp, #36]	; 0x24
 8021ace:	eeb0 3a67 	vmov.f32	s6, s15
 8021ad2:	eef0 2a47 	vmov.f32	s5, s14
 8021ad6:	e68c      	b.n	80217f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021ad8:	b149      	cbz	r1, 8021aee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8021ada:	5cb2      	ldrb	r2, [r6, r2]
 8021adc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021ae0:	4422      	add	r2, r4
 8021ae2:	4628      	mov	r0, r5
 8021ae4:	46ac      	mov	ip, r5
 8021ae6:	e6f1      	b.n	80218cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021ae8:	4628      	mov	r0, r5
 8021aea:	462a      	mov	r2, r5
 8021aec:	e6ee      	b.n	80218cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021aee:	4628      	mov	r0, r5
 8021af0:	462a      	mov	r2, r5
 8021af2:	e7f7      	b.n	8021ae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8021af4:	1c47      	adds	r7, r0, #1
 8021af6:	f53f af69 	bmi.w	80219cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021afa:	42ba      	cmp	r2, r7
 8021afc:	f6ff af66 	blt.w	80219cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021b00:	1c6f      	adds	r7, r5, #1
 8021b02:	f53f af63 	bmi.w	80219cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021b06:	42be      	cmp	r6, r7
 8021b08:	f6ff af60 	blt.w	80219cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021b0c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8021b0e:	9002      	str	r0, [sp, #8]
 8021b10:	b236      	sxth	r6, r6
 8021b12:	b212      	sxth	r2, r2
 8021b14:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8021b18:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8021b1c:	9200      	str	r2, [sp, #0]
 8021b1e:	9601      	str	r6, [sp, #4]
 8021b20:	4623      	mov	r3, r4
 8021b22:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8021b26:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8021b28:	f7ff fd59 	bl	80215de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8021b2c:	e74e      	b.n	80219cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021b2e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021b30:	9820      	ldr	r0, [sp, #128]	; 0x80
 8021b32:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8021b34:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021b36:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8021b3a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8021b3c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8021b40:	142d      	asrs	r5, r5, #16
 8021b42:	1400      	asrs	r0, r0, #16
 8021b44:	fb02 5000 	mla	r0, r2, r0, r5
 8021b48:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8021b4a:	f815 9000 	ldrb.w	r9, [r5, r0]
 8021b4e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8021b52:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8021b56:	182e      	adds	r6, r5, r0
 8021b58:	eb04 0509 	add.w	r5, r4, r9
 8021b5c:	2b00      	cmp	r3, #0
 8021b5e:	f000 8096 	beq.w	8021c8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8021b62:	7877      	ldrb	r7, [r6, #1]
 8021b64:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8021b68:	4427      	add	r7, r4
 8021b6a:	2900      	cmp	r1, #0
 8021b6c:	f000 8097 	beq.w	8021c9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8021b70:	18b0      	adds	r0, r6, r2
 8021b72:	5cb2      	ldrb	r2, [r6, r2]
 8021b74:	7840      	ldrb	r0, [r0, #1]
 8021b76:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021b7a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021b7e:	4422      	add	r2, r4
 8021b80:	4420      	add	r0, r4
 8021b82:	b29b      	uxth	r3, r3
 8021b84:	b289      	uxth	r1, r1
 8021b86:	fb03 f801 	mul.w	r8, r3, r1
 8021b8a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8021b8c:	f895 b002 	ldrb.w	fp, [r5, #2]
 8021b90:	f8b6 c000 	ldrh.w	ip, [r6]
 8021b94:	78be      	ldrb	r6, [r7, #2]
 8021b96:	f814 9009 	ldrb.w	r9, [r4, r9]
 8021b9a:	011b      	lsls	r3, r3, #4
 8021b9c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8021ba0:	b289      	uxth	r1, r1
 8021ba2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8021ba6:	eba3 0308 	sub.w	r3, r3, r8
 8021baa:	b29b      	uxth	r3, r3
 8021bac:	ebae 0e01 	sub.w	lr, lr, r1
 8021bb0:	fa1f fe8e 	uxth.w	lr, lr
 8021bb4:	435e      	muls	r6, r3
 8021bb6:	fb0e 660b 	mla	r6, lr, fp, r6
 8021bba:	f892 b002 	ldrb.w	fp, [r2, #2]
 8021bbe:	9310      	str	r3, [sp, #64]	; 0x40
 8021bc0:	fb01 660b 	mla	r6, r1, fp, r6
 8021bc4:	f890 b002 	ldrb.w	fp, [r0, #2]
 8021bc8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021bca:	fb08 660b 	mla	r6, r8, fp, r6
 8021bce:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8021bd2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8021bd6:	fb1b fb03 	smulbb	fp, fp, r3
 8021bda:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021bde:	fb06 b60a 	mla	r6, r6, sl, fp
 8021be2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021be4:	f895 b001 	ldrb.w	fp, [r5, #1]
 8021be8:	787d      	ldrb	r5, [r7, #1]
 8021bea:	783f      	ldrb	r7, [r7, #0]
 8021bec:	435d      	muls	r5, r3
 8021bee:	fb0e 550b 	mla	r5, lr, fp, r5
 8021bf2:	f892 b001 	ldrb.w	fp, [r2, #1]
 8021bf6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021bf8:	fb01 550b 	mla	r5, r1, fp, r5
 8021bfc:	f890 b001 	ldrb.w	fp, [r0, #1]
 8021c00:	fb08 550b 	mla	r5, r8, fp, r5
 8021c04:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8021c08:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8021c0c:	fb1b fb03 	smulbb	fp, fp, r3
 8021c10:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021c12:	437b      	muls	r3, r7
 8021c14:	7817      	ldrb	r7, [r2, #0]
 8021c16:	fb0e 3309 	mla	r3, lr, r9, r3
 8021c1a:	fb01 3307 	mla	r3, r1, r7, r3
 8021c1e:	7807      	ldrb	r7, [r0, #0]
 8021c20:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021c24:	fb08 3707 	mla	r7, r8, r7, r3
 8021c28:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021c2a:	fa5f fc8c 	uxtb.w	ip, ip
 8021c2e:	fb1c fc03 	smulbb	ip, ip, r3
 8021c32:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8021c36:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021c3a:	fb05 b50a 	mla	r5, r5, sl, fp
 8021c3e:	fb07 c70a 	mla	r7, r7, sl, ip
 8021c42:	b2b6      	uxth	r6, r6
 8021c44:	b2ad      	uxth	r5, r5
 8021c46:	b2bf      	uxth	r7, r7
 8021c48:	1c73      	adds	r3, r6, #1
 8021c4a:	1c7a      	adds	r2, r7, #1
 8021c4c:	f105 0b01 	add.w	fp, r5, #1
 8021c50:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8021c54:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8021c58:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8021c5c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021c60:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8021c64:	096d      	lsrs	r5, r5, #5
 8021c66:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021c68:	4316      	orrs	r6, r2
 8021c6a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021c6e:	432e      	orrs	r6, r5
 8021c70:	f823 6b02 	strh.w	r6, [r3], #2
 8021c74:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021c76:	930c      	str	r3, [sp, #48]	; 0x30
 8021c78:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021c7a:	4413      	add	r3, r2
 8021c7c:	931f      	str	r3, [sp, #124]	; 0x7c
 8021c7e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021c80:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021c82:	4413      	add	r3, r2
 8021c84:	9320      	str	r3, [sp, #128]	; 0x80
 8021c86:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021c88:	3b01      	subs	r3, #1
 8021c8a:	9311      	str	r3, [sp, #68]	; 0x44
 8021c8c:	e6db      	b.n	8021a46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8021c8e:	b149      	cbz	r1, 8021ca4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8021c90:	5cb2      	ldrb	r2, [r6, r2]
 8021c92:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021c96:	4422      	add	r2, r4
 8021c98:	4628      	mov	r0, r5
 8021c9a:	462f      	mov	r7, r5
 8021c9c:	e771      	b.n	8021b82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8021c9e:	4628      	mov	r0, r5
 8021ca0:	462a      	mov	r2, r5
 8021ca2:	e76e      	b.n	8021b82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8021ca4:	4628      	mov	r0, r5
 8021ca6:	462a      	mov	r2, r5
 8021ca8:	e7f7      	b.n	8021c9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8021caa:	b015      	add	sp, #84	; 0x54
 8021cac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021cb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8021cb0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021cb4:	880f      	ldrh	r7, [r1, #0]
 8021cb6:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8021cba:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8021cbe:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8021cc2:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8021cc6:	023c      	lsls	r4, r7, #8
 8021cc8:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8021ccc:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8021cd0:	017c      	lsls	r4, r7, #5
 8021cd2:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8021cd6:	00ff      	lsls	r7, r7, #3
 8021cd8:	ea4b 0404 	orr.w	r4, fp, r4
 8021cdc:	b2ff      	uxtb	r7, r7
 8021cde:	fb05 ca0e 	mla	sl, r5, lr, ip
 8021ce2:	4327      	orrs	r7, r4
 8021ce4:	2d00      	cmp	r5, #0
 8021ce6:	eb02 080a 	add.w	r8, r2, sl
 8021cea:	9701      	str	r7, [sp, #4]
 8021cec:	db7e      	blt.n	8021dec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8021cee:	45a9      	cmp	r9, r5
 8021cf0:	dd7c      	ble.n	8021dec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8021cf2:	f1bc 0f00 	cmp.w	ip, #0
 8021cf6:	db77      	blt.n	8021de8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8021cf8:	45e6      	cmp	lr, ip
 8021cfa:	dd75      	ble.n	8021de8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8021cfc:	f812 700a 	ldrb.w	r7, [r2, sl]
 8021d00:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8021d04:	441f      	add	r7, r3
 8021d06:	f11c 0201 	adds.w	r2, ip, #1
 8021d0a:	d472      	bmi.n	8021df2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021d0c:	4596      	cmp	lr, r2
 8021d0e:	dd70      	ble.n	8021df2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021d10:	2800      	cmp	r0, #0
 8021d12:	d06e      	beq.n	8021df2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021d14:	f898 4001 	ldrb.w	r4, [r8, #1]
 8021d18:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8021d1c:	441c      	add	r4, r3
 8021d1e:	3501      	adds	r5, #1
 8021d20:	d46b      	bmi.n	8021dfa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021d22:	45a9      	cmp	r9, r5
 8021d24:	dd69      	ble.n	8021dfa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021d26:	2e00      	cmp	r6, #0
 8021d28:	d067      	beq.n	8021dfa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021d2a:	f1bc 0f00 	cmp.w	ip, #0
 8021d2e:	db62      	blt.n	8021df6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8021d30:	45e6      	cmp	lr, ip
 8021d32:	dd60      	ble.n	8021df6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8021d34:	f818 500e 	ldrb.w	r5, [r8, lr]
 8021d38:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8021d3c:	441d      	add	r5, r3
 8021d3e:	f11c 0201 	adds.w	r2, ip, #1
 8021d42:	d45d      	bmi.n	8021e00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021d44:	4596      	cmp	lr, r2
 8021d46:	dd5b      	ble.n	8021e00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021d48:	2800      	cmp	r0, #0
 8021d4a:	d059      	beq.n	8021e00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021d4c:	44c6      	add	lr, r8
 8021d4e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021d52:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021d56:	4413      	add	r3, r2
 8021d58:	b280      	uxth	r0, r0
 8021d5a:	b2b2      	uxth	r2, r6
 8021d5c:	fb00 f602 	mul.w	r6, r0, r2
 8021d60:	0100      	lsls	r0, r0, #4
 8021d62:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8021d66:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8021d6a:	1b80      	subs	r0, r0, r6
 8021d6c:	fa1f fc82 	uxth.w	ip, r2
 8021d70:	b282      	uxth	r2, r0
 8021d72:	78a0      	ldrb	r0, [r4, #2]
 8021d74:	f897 e002 	ldrb.w	lr, [r7, #2]
 8021d78:	f897 9000 	ldrb.w	r9, [r7]
 8021d7c:	787f      	ldrb	r7, [r7, #1]
 8021d7e:	eba8 080c 	sub.w	r8, r8, ip
 8021d82:	fa1f f888 	uxth.w	r8, r8
 8021d86:	4350      	muls	r0, r2
 8021d88:	fb08 0e0e 	mla	lr, r8, lr, r0
 8021d8c:	78a8      	ldrb	r0, [r5, #2]
 8021d8e:	fb0c e000 	mla	r0, ip, r0, lr
 8021d92:	f893 e002 	ldrb.w	lr, [r3, #2]
 8021d96:	fb06 0e0e 	mla	lr, r6, lr, r0
 8021d9a:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8021d9e:	f894 e000 	ldrb.w	lr, [r4]
 8021da2:	fb02 fe0e 	mul.w	lr, r2, lr
 8021da6:	fb08 e909 	mla	r9, r8, r9, lr
 8021daa:	f895 e000 	ldrb.w	lr, [r5]
 8021dae:	fb0c 990e 	mla	r9, ip, lr, r9
 8021db2:	f893 e000 	ldrb.w	lr, [r3]
 8021db6:	785b      	ldrb	r3, [r3, #1]
 8021db8:	fb06 9e0e 	mla	lr, r6, lr, r9
 8021dbc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8021dc0:	ea4e 0e00 	orr.w	lr, lr, r0
 8021dc4:	7860      	ldrb	r0, [r4, #1]
 8021dc6:	4350      	muls	r0, r2
 8021dc8:	786a      	ldrb	r2, [r5, #1]
 8021dca:	fb08 0007 	mla	r0, r8, r7, r0
 8021dce:	fb0c 0202 	mla	r2, ip, r2, r0
 8021dd2:	fb06 2303 	mla	r3, r6, r3, r2
 8021dd6:	095b      	lsrs	r3, r3, #5
 8021dd8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021ddc:	ea4e 0303 	orr.w	r3, lr, r3
 8021de0:	800b      	strh	r3, [r1, #0]
 8021de2:	b003      	add	sp, #12
 8021de4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021de8:	af01      	add	r7, sp, #4
 8021dea:	e78c      	b.n	8021d06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8021dec:	ac01      	add	r4, sp, #4
 8021dee:	4627      	mov	r7, r4
 8021df0:	e795      	b.n	8021d1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8021df2:	ac01      	add	r4, sp, #4
 8021df4:	e793      	b.n	8021d1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8021df6:	ad01      	add	r5, sp, #4
 8021df8:	e7a1      	b.n	8021d3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8021dfa:	ab01      	add	r3, sp, #4
 8021dfc:	461d      	mov	r5, r3
 8021dfe:	e7ab      	b.n	8021d58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8021e00:	ab01      	add	r3, sp, #4
 8021e02:	e7a9      	b.n	8021d58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08021e04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021e04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021e08:	b08f      	sub	sp, #60	; 0x3c
 8021e0a:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8021e0e:	920c      	str	r2, [sp, #48]	; 0x30
 8021e10:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8021e12:	910a      	str	r1, [sp, #40]	; 0x28
 8021e14:	9306      	str	r3, [sp, #24]
 8021e16:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8021e1a:	900d      	str	r0, [sp, #52]	; 0x34
 8021e1c:	6850      	ldr	r0, [r2, #4]
 8021e1e:	6812      	ldr	r2, [r2, #0]
 8021e20:	fb00 1303 	mla	r3, r0, r3, r1
 8021e24:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021e28:	9307      	str	r3, [sp, #28]
 8021e2a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021e2c:	681b      	ldr	r3, [r3, #0]
 8021e2e:	9308      	str	r3, [sp, #32]
 8021e30:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021e32:	685c      	ldr	r4, [r3, #4]
 8021e34:	3404      	adds	r4, #4
 8021e36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021e38:	2b00      	cmp	r3, #0
 8021e3a:	dc03      	bgt.n	8021e44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8021e3c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021e3e:	2b00      	cmp	r3, #0
 8021e40:	f340 81d6 	ble.w	80221f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8021e44:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021e46:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021e4a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021e4e:	1e48      	subs	r0, r1, #1
 8021e50:	1e56      	subs	r6, r2, #1
 8021e52:	9b06      	ldr	r3, [sp, #24]
 8021e54:	2b00      	cmp	r3, #0
 8021e56:	f340 80b7 	ble.w	8021fc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8021e5a:	ea5f 472b 	movs.w	r7, fp, asr #16
 8021e5e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021e62:	d406      	bmi.n	8021e72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021e64:	4287      	cmp	r7, r0
 8021e66:	da04      	bge.n	8021e72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021e68:	2b00      	cmp	r3, #0
 8021e6a:	db02      	blt.n	8021e72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021e6c:	42b3      	cmp	r3, r6
 8021e6e:	f2c0 80ac 	blt.w	8021fca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8021e72:	3701      	adds	r7, #1
 8021e74:	f100 809d 	bmi.w	8021fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021e78:	42b9      	cmp	r1, r7
 8021e7a:	f2c0 809a 	blt.w	8021fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021e7e:	3301      	adds	r3, #1
 8021e80:	f100 8097 	bmi.w	8021fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021e84:	429a      	cmp	r2, r3
 8021e86:	f2c0 8094 	blt.w	8021fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021e8a:	9b06      	ldr	r3, [sp, #24]
 8021e8c:	930b      	str	r3, [sp, #44]	; 0x2c
 8021e8e:	9b07      	ldr	r3, [sp, #28]
 8021e90:	9309      	str	r3, [sp, #36]	; 0x24
 8021e92:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021e94:	2b00      	cmp	r3, #0
 8021e96:	f340 80b5 	ble.w	8022004 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8021e9a:	9820      	ldr	r0, [sp, #128]	; 0x80
 8021e9c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021e9e:	68c7      	ldr	r7, [r0, #12]
 8021ea0:	6892      	ldr	r2, [r2, #8]
 8021ea2:	ea5f 402b 	movs.w	r0, fp, asr #16
 8021ea6:	ea4f 4625 	mov.w	r6, r5, asr #16
 8021eaa:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8021eae:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021eb2:	f100 80fb 	bmi.w	80220ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021eb6:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
 8021eba:	4560      	cmp	r0, ip
 8021ebc:	f280 80f6 	bge.w	80220ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021ec0:	2e00      	cmp	r6, #0
 8021ec2:	f2c0 80f3 	blt.w	80220ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021ec6:	f107 3cff 	add.w	ip, r7, #4294967295	; 0xffffffff
 8021eca:	4566      	cmp	r6, ip
 8021ecc:	f280 80ee 	bge.w	80220ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021ed0:	b212      	sxth	r2, r2
 8021ed2:	fb06 0002 	mla	r0, r6, r2, r0
 8021ed6:	9e08      	ldr	r6, [sp, #32]
 8021ed8:	1837      	adds	r7, r6, r0
 8021eda:	5c30      	ldrb	r0, [r6, r0]
 8021edc:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8021ee0:	eb04 0c08 	add.w	ip, r4, r8
 8021ee4:	2b00      	cmp	r3, #0
 8021ee6:	f000 80d3 	beq.w	8022090 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8021eea:	787e      	ldrb	r6, [r7, #1]
 8021eec:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021ef0:	4426      	add	r6, r4
 8021ef2:	2900      	cmp	r1, #0
 8021ef4:	f000 80d4 	beq.w	80220a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8021ef8:	18b8      	adds	r0, r7, r2
 8021efa:	5cba      	ldrb	r2, [r7, r2]
 8021efc:	7840      	ldrb	r0, [r0, #1]
 8021efe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021f02:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021f06:	4422      	add	r2, r4
 8021f08:	4420      	add	r0, r4
 8021f0a:	b29b      	uxth	r3, r3
 8021f0c:	b289      	uxth	r1, r1
 8021f0e:	fb03 f901 	mul.w	r9, r3, r1
 8021f12:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021f16:	011b      	lsls	r3, r3, #4
 8021f18:	b289      	uxth	r1, r1
 8021f1a:	78b7      	ldrb	r7, [r6, #2]
 8021f1c:	f89c a002 	ldrb.w	sl, [ip, #2]
 8021f20:	f89c c001 	ldrb.w	ip, [ip, #1]
 8021f24:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8021f28:	eba3 0309 	sub.w	r3, r3, r9
 8021f2c:	b29b      	uxth	r3, r3
 8021f2e:	ebae 0e01 	sub.w	lr, lr, r1
 8021f32:	fa1f fe8e 	uxth.w	lr, lr
 8021f36:	435f      	muls	r7, r3
 8021f38:	fb0e 770a 	mla	r7, lr, sl, r7
 8021f3c:	f892 a002 	ldrb.w	sl, [r2, #2]
 8021f40:	fb01 770a 	mla	r7, r1, sl, r7
 8021f44:	f890 a002 	ldrb.w	sl, [r0, #2]
 8021f48:	fb09 7a0a 	mla	sl, r9, sl, r7
 8021f4c:	f814 7008 	ldrb.w	r7, [r4, r8]
 8021f50:	f896 8000 	ldrb.w	r8, [r6]
 8021f54:	7876      	ldrb	r6, [r6, #1]
 8021f56:	fb03 f808 	mul.w	r8, r3, r8
 8021f5a:	fb0e 8807 	mla	r8, lr, r7, r8
 8021f5e:	7817      	ldrb	r7, [r2, #0]
 8021f60:	fb01 8807 	mla	r8, r1, r7, r8
 8021f64:	7807      	ldrb	r7, [r0, #0]
 8021f66:	fb09 8707 	mla	r7, r9, r7, r8
 8021f6a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8021f6e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021f72:	ea47 070a 	orr.w	r7, r7, sl
 8021f76:	4373      	muls	r3, r6
 8021f78:	f892 a001 	ldrb.w	sl, [r2, #1]
 8021f7c:	fb0e 330c 	mla	r3, lr, ip, r3
 8021f80:	fb01 310a 	mla	r1, r1, sl, r3
 8021f84:	f890 a001 	ldrb.w	sl, [r0, #1]
 8021f88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021f8a:	fb09 1a0a 	mla	sl, r9, sl, r1
 8021f8e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021f92:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8021f96:	ea47 070a 	orr.w	r7, r7, sl
 8021f9a:	801f      	strh	r7, [r3, #0]
 8021f9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021f9e:	3302      	adds	r3, #2
 8021fa0:	9309      	str	r3, [sp, #36]	; 0x24
 8021fa2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021fa4:	449b      	add	fp, r3
 8021fa6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021fa8:	441d      	add	r5, r3
 8021faa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021fac:	3b01      	subs	r3, #1
 8021fae:	930b      	str	r3, [sp, #44]	; 0x2c
 8021fb0:	e76f      	b.n	8021e92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021fb2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021fb4:	449b      	add	fp, r3
 8021fb6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021fb8:	441d      	add	r5, r3
 8021fba:	9b06      	ldr	r3, [sp, #24]
 8021fbc:	3b01      	subs	r3, #1
 8021fbe:	9306      	str	r3, [sp, #24]
 8021fc0:	9b07      	ldr	r3, [sp, #28]
 8021fc2:	3302      	adds	r3, #2
 8021fc4:	9307      	str	r3, [sp, #28]
 8021fc6:	e744      	b.n	8021e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8021fc8:	d023      	beq.n	8022012 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8021fca:	9b06      	ldr	r3, [sp, #24]
 8021fcc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8021fce:	3b01      	subs	r3, #1
 8021fd0:	fb00 b003 	mla	r0, r0, r3, fp
 8021fd4:	1400      	asrs	r0, r0, #16
 8021fd6:	f53f af58 	bmi.w	8021e8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021fda:	3901      	subs	r1, #1
 8021fdc:	4288      	cmp	r0, r1
 8021fde:	f6bf af54 	bge.w	8021e8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021fe2:	991c      	ldr	r1, [sp, #112]	; 0x70
 8021fe4:	fb01 5303 	mla	r3, r1, r3, r5
 8021fe8:	141b      	asrs	r3, r3, #16
 8021fea:	f53f af4e 	bmi.w	8021e8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021fee:	3a01      	subs	r2, #1
 8021ff0:	4293      	cmp	r3, r2
 8021ff2:	f6bf af4a 	bge.w	8021e8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021ff6:	9b06      	ldr	r3, [sp, #24]
 8021ff8:	9309      	str	r3, [sp, #36]	; 0x24
 8021ffa:	9b07      	ldr	r3, [sp, #28]
 8021ffc:	930b      	str	r3, [sp, #44]	; 0x2c
 8021ffe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022000:	2b00      	cmp	r3, #0
 8022002:	dc70      	bgt.n	80220e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8022004:	9b06      	ldr	r3, [sp, #24]
 8022006:	9a07      	ldr	r2, [sp, #28]
 8022008:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802200c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022010:	9307      	str	r3, [sp, #28]
 8022012:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022014:	2b00      	cmp	r3, #0
 8022016:	f340 80eb 	ble.w	80221f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 802201a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802201e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022022:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022026:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022028:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802202c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022030:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022034:	eef0 6a62 	vmov.f32	s13, s5
 8022038:	ee61 7a27 	vmul.f32	s15, s2, s15
 802203c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022040:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022044:	ee16 ba90 	vmov	fp, s13
 8022048:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802204c:	eef0 6a43 	vmov.f32	s13, s6
 8022050:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022054:	ee12 2a90 	vmov	r2, s5
 8022058:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802205c:	fb92 f3f3 	sdiv	r3, r2, r3
 8022060:	ee13 2a10 	vmov	r2, s6
 8022064:	931b      	str	r3, [sp, #108]	; 0x6c
 8022066:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022068:	fb92 f3f3 	sdiv	r3, r2, r3
 802206c:	931c      	str	r3, [sp, #112]	; 0x70
 802206e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022070:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022072:	3b01      	subs	r3, #1
 8022074:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022078:	930a      	str	r3, [sp, #40]	; 0x28
 802207a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802207c:	bf08      	it	eq
 802207e:	4613      	moveq	r3, r2
 8022080:	ee16 5a90 	vmov	r5, s13
 8022084:	9306      	str	r3, [sp, #24]
 8022086:	eeb0 3a67 	vmov.f32	s6, s15
 802208a:	eef0 2a47 	vmov.f32	s5, s14
 802208e:	e6d2      	b.n	8021e36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8022090:	b149      	cbz	r1, 80220a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8022092:	5cba      	ldrb	r2, [r7, r2]
 8022094:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022098:	4422      	add	r2, r4
 802209a:	4660      	mov	r0, ip
 802209c:	4666      	mov	r6, ip
 802209e:	e734      	b.n	8021f0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80220a0:	4660      	mov	r0, ip
 80220a2:	4662      	mov	r2, ip
 80220a4:	e731      	b.n	8021f0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80220a6:	4660      	mov	r0, ip
 80220a8:	4662      	mov	r2, ip
 80220aa:	e7f7      	b.n	802209c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 80220ac:	f110 0c01 	adds.w	ip, r0, #1
 80220b0:	f53f af74 	bmi.w	8021f9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80220b4:	4562      	cmp	r2, ip
 80220b6:	f6ff af71 	blt.w	8021f9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80220ba:	f116 0c01 	adds.w	ip, r6, #1
 80220be:	f53f af6d 	bmi.w	8021f9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80220c2:	4567      	cmp	r7, ip
 80220c4:	f6ff af6a 	blt.w	8021f9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80220c8:	b23f      	sxth	r7, r7
 80220ca:	b212      	sxth	r2, r2
 80220cc:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80220d0:	e9cd 0602 	strd	r0, r6, [sp, #8]
 80220d4:	9200      	str	r2, [sp, #0]
 80220d6:	9701      	str	r7, [sp, #4]
 80220d8:	4623      	mov	r3, r4
 80220da:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80220de:	980d      	ldr	r0, [sp, #52]	; 0x34
 80220e0:	f7ff fde6 	bl	8021cb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80220e4:	e75a      	b.n	8021f9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80220e6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80220e8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80220ec:	ea4f 462b 	mov.w	r6, fp, asr #16
 80220f0:	1428      	asrs	r0, r5, #16
 80220f2:	fb02 6000 	mla	r0, r2, r0, r6
 80220f6:	9e08      	ldr	r6, [sp, #32]
 80220f8:	f816 8000 	ldrb.w	r8, [r6, r0]
 80220fc:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8022100:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8022104:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8022108:	1837      	adds	r7, r6, r0
 802210a:	eb04 0c08 	add.w	ip, r4, r8
 802210e:	2b00      	cmp	r3, #0
 8022110:	d060      	beq.n	80221d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8022112:	787e      	ldrb	r6, [r7, #1]
 8022114:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8022118:	4426      	add	r6, r4
 802211a:	2900      	cmp	r1, #0
 802211c:	d062      	beq.n	80221e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 802211e:	18b8      	adds	r0, r7, r2
 8022120:	5cba      	ldrb	r2, [r7, r2]
 8022122:	7840      	ldrb	r0, [r0, #1]
 8022124:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022128:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802212c:	4422      	add	r2, r4
 802212e:	4420      	add	r0, r4
 8022130:	b29b      	uxth	r3, r3
 8022132:	b289      	uxth	r1, r1
 8022134:	fb03 f901 	mul.w	r9, r3, r1
 8022138:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802213c:	011b      	lsls	r3, r3, #4
 802213e:	b289      	uxth	r1, r1
 8022140:	78b7      	ldrb	r7, [r6, #2]
 8022142:	f89c a002 	ldrb.w	sl, [ip, #2]
 8022146:	f89c c001 	ldrb.w	ip, [ip, #1]
 802214a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802214e:	eba3 0309 	sub.w	r3, r3, r9
 8022152:	b29b      	uxth	r3, r3
 8022154:	ebae 0e01 	sub.w	lr, lr, r1
 8022158:	fa1f fe8e 	uxth.w	lr, lr
 802215c:	435f      	muls	r7, r3
 802215e:	fb0e 770a 	mla	r7, lr, sl, r7
 8022162:	f892 a002 	ldrb.w	sl, [r2, #2]
 8022166:	fb01 770a 	mla	r7, r1, sl, r7
 802216a:	f890 a002 	ldrb.w	sl, [r0, #2]
 802216e:	fb09 7a0a 	mla	sl, r9, sl, r7
 8022172:	f814 7008 	ldrb.w	r7, [r4, r8]
 8022176:	f896 8000 	ldrb.w	r8, [r6]
 802217a:	7876      	ldrb	r6, [r6, #1]
 802217c:	fb03 f808 	mul.w	r8, r3, r8
 8022180:	fb0e 8807 	mla	r8, lr, r7, r8
 8022184:	7817      	ldrb	r7, [r2, #0]
 8022186:	fb01 8807 	mla	r8, r1, r7, r8
 802218a:	7807      	ldrb	r7, [r0, #0]
 802218c:	fb09 8707 	mla	r7, r9, r7, r8
 8022190:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8022194:	4373      	muls	r3, r6
 8022196:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802219a:	7856      	ldrb	r6, [r2, #1]
 802219c:	ea47 070a 	orr.w	r7, r7, sl
 80221a0:	fb0e 330c 	mla	r3, lr, ip, r3
 80221a4:	f890 a001 	ldrb.w	sl, [r0, #1]
 80221a8:	fb01 3306 	mla	r3, r1, r6, r3
 80221ac:	fb09 3a0a 	mla	sl, r9, sl, r3
 80221b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80221b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80221b6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80221ba:	ea47 070a 	orr.w	r7, r7, sl
 80221be:	f823 7b02 	strh.w	r7, [r3], #2
 80221c2:	930b      	str	r3, [sp, #44]	; 0x2c
 80221c4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80221c6:	449b      	add	fp, r3
 80221c8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80221ca:	441d      	add	r5, r3
 80221cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80221ce:	3b01      	subs	r3, #1
 80221d0:	9309      	str	r3, [sp, #36]	; 0x24
 80221d2:	e714      	b.n	8021ffe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80221d4:	b149      	cbz	r1, 80221ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80221d6:	5cba      	ldrb	r2, [r7, r2]
 80221d8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80221dc:	4422      	add	r2, r4
 80221de:	4660      	mov	r0, ip
 80221e0:	4666      	mov	r6, ip
 80221e2:	e7a5      	b.n	8022130 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80221e4:	4660      	mov	r0, ip
 80221e6:	4662      	mov	r2, ip
 80221e8:	e7a2      	b.n	8022130 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80221ea:	4660      	mov	r0, ip
 80221ec:	4662      	mov	r2, ip
 80221ee:	e7f7      	b.n	80221e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 80221f0:	b00f      	add	sp, #60	; 0x3c
 80221f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080221f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80221f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80221fa:	b085      	sub	sp, #20
 80221fc:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8022200:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8022204:	9102      	str	r1, [sp, #8]
 8022206:	2c00      	cmp	r4, #0
 8022208:	fb04 710c 	mla	r1, r4, ip, r7
 802220c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8022210:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8022214:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8022218:	eb02 0e01 	add.w	lr, r2, r1
 802221c:	f2c0 8122 	blt.w	8022464 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8022220:	45a0      	cmp	r8, r4
 8022222:	f340 811f 	ble.w	8022464 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8022226:	2f00      	cmp	r7, #0
 8022228:	f2c0 811a 	blt.w	8022460 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 802222c:	45bc      	cmp	ip, r7
 802222e:	f340 8117 	ble.w	8022460 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8022232:	5c52      	ldrb	r2, [r2, r1]
 8022234:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8022238:	1c7a      	adds	r2, r7, #1
 802223a:	f100 8116 	bmi.w	802246a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 802223e:	4594      	cmp	ip, r2
 8022240:	f340 8113 	ble.w	802246a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8022244:	2e00      	cmp	r6, #0
 8022246:	f000 8112 	beq.w	802246e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 802224a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802224e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8022252:	3401      	adds	r4, #1
 8022254:	f100 810f 	bmi.w	8022476 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8022258:	45a0      	cmp	r8, r4
 802225a:	f340 810c 	ble.w	8022476 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 802225e:	2800      	cmp	r0, #0
 8022260:	f000 810c 	beq.w	802247c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8022264:	2f00      	cmp	r7, #0
 8022266:	f2c0 8104 	blt.w	8022472 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 802226a:	45bc      	cmp	ip, r7
 802226c:	f340 8101 	ble.w	8022472 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8022270:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8022274:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8022278:	3701      	adds	r7, #1
 802227a:	f100 8102 	bmi.w	8022482 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 802227e:	45bc      	cmp	ip, r7
 8022280:	f340 80ff 	ble.w	8022482 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8022284:	2e00      	cmp	r6, #0
 8022286:	f000 80fe 	beq.w	8022486 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 802228a:	44f4      	add	ip, lr
 802228c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8022290:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8022294:	b2b6      	uxth	r6, r6
 8022296:	b280      	uxth	r0, r0
 8022298:	fb00 fe06 	mul.w	lr, r0, r6
 802229c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80222a0:	0136      	lsls	r6, r6, #4
 80222a2:	eba6 070e 	sub.w	r7, r6, lr
 80222a6:	b280      	uxth	r0, r0
 80222a8:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80222ac:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80222b0:	b2bf      	uxth	r7, r7
 80222b2:	1a1b      	subs	r3, r3, r0
 80222b4:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80222b8:	b29b      	uxth	r3, r3
 80222ba:	fb0a f607 	mul.w	r6, sl, r7
 80222be:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80222c2:	fb0b 6603 	mla	r6, fp, r3, r6
 80222c6:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80222ca:	fb00 6609 	mla	r6, r0, r9, r6
 80222ce:	fb0e 6608 	mla	r6, lr, r8, r6
 80222d2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80222d6:	9600      	str	r6, [sp, #0]
 80222d8:	2e00      	cmp	r6, #0
 80222da:	f000 80be 	beq.w	802245a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 80222de:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80222e2:	fb0b fc0c 	mul.w	ip, fp, ip
 80222e6:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80222ea:	fb0b f505 	mul.w	r5, fp, r5
 80222ee:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80222f2:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80222f6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80222fa:	44dc      	add	ip, fp
 80222fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022300:	9501      	str	r5, [sp, #4]
 8022302:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8022306:	9503      	str	r5, [sp, #12]
 8022308:	9d01      	ldr	r5, [sp, #4]
 802230a:	9e02      	ldr	r6, [sp, #8]
 802230c:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8022310:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8022314:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8022318:	fb0a fc0c 	mul.w	ip, sl, ip
 802231c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8022320:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8022324:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022328:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802232c:	4465      	add	r5, ip
 802232e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022332:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8022336:	fb09 fc0c 	mul.w	ip, r9, ip
 802233a:	fb09 f904 	mul.w	r9, r9, r4
 802233e:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8022342:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8022346:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802234a:	fb08 f404 	mul.w	r4, r8, r4
 802234e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022352:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022356:	fb08 f802 	mul.w	r8, r8, r2
 802235a:	fb0a fa01 	mul.w	sl, sl, r1
 802235e:	0a22      	lsrs	r2, r4, #8
 8022360:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8022364:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022368:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802236c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8022370:	4414      	add	r4, r2
 8022372:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8022376:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802237a:	0a2d      	lsrs	r5, r5, #8
 802237c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8022380:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022384:	9a03      	ldr	r2, [sp, #12]
 8022386:	8836      	ldrh	r6, [r6, #0]
 8022388:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802238c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022390:	437d      	muls	r5, r7
 8022392:	4461      	add	r1, ip
 8022394:	0a24      	lsrs	r4, r4, #8
 8022396:	fb02 5503 	mla	r5, r2, r3, r5
 802239a:	0a09      	lsrs	r1, r1, #8
 802239c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80223a0:	fb04 540e 	mla	r4, r4, lr, r5
 80223a4:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80223a8:	fb01 4100 	mla	r1, r1, r0, r4
 80223ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80223b0:	0a09      	lsrs	r1, r1, #8
 80223b2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80223b6:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80223ba:	fb07 f70a 	mul.w	r7, r7, sl
 80223be:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80223c2:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80223c6:	fb03 7101 	mla	r1, r3, r1, r7
 80223ca:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80223ce:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80223d2:	fb0e 1e08 	mla	lr, lr, r8, r1
 80223d6:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80223da:	fb00 e101 	mla	r1, r0, r1, lr
 80223de:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 80223e2:	9a00      	ldr	r2, [sp, #0]
 80223e4:	b287      	uxth	r7, r0
 80223e6:	437a      	muls	r2, r7
 80223e8:	0a09      	lsrs	r1, r1, #8
 80223ea:	1c53      	adds	r3, r2, #1
 80223ec:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80223f0:	4321      	orrs	r1, r4
 80223f2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80223f6:	1235      	asrs	r5, r6, #8
 80223f8:	0c0a      	lsrs	r2, r1, #16
 80223fa:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80223fe:	b2db      	uxtb	r3, r3
 8022400:	fb12 f207 	smulbb	r2, r2, r7
 8022404:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022408:	fb05 2503 	mla	r5, r5, r3, r2
 802240c:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8022410:	10f2      	asrs	r2, r6, #3
 8022412:	b2c8      	uxtb	r0, r1
 8022414:	00f6      	lsls	r6, r6, #3
 8022416:	fb14 f407 	smulbb	r4, r4, r7
 802241a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802241e:	b2f6      	uxtb	r6, r6
 8022420:	fb10 f007 	smulbb	r0, r0, r7
 8022424:	fb02 4203 	mla	r2, r2, r3, r4
 8022428:	b2ad      	uxth	r5, r5
 802242a:	fb06 0303 	mla	r3, r6, r3, r0
 802242e:	b299      	uxth	r1, r3
 8022430:	b294      	uxth	r4, r2
 8022432:	1c6b      	adds	r3, r5, #1
 8022434:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022438:	1c62      	adds	r2, r4, #1
 802243a:	1c4b      	adds	r3, r1, #1
 802243c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022440:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8022444:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022448:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802244c:	0952      	lsrs	r2, r2, #5
 802244e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022452:	432b      	orrs	r3, r5
 8022454:	4313      	orrs	r3, r2
 8022456:	9a02      	ldr	r2, [sp, #8]
 8022458:	8013      	strh	r3, [r2, #0]
 802245a:	b005      	add	sp, #20
 802245c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022460:	2500      	movs	r5, #0
 8022462:	e6e9      	b.n	8022238 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8022464:	2100      	movs	r1, #0
 8022466:	460d      	mov	r5, r1
 8022468:	e6f3      	b.n	8022252 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802246a:	2100      	movs	r1, #0
 802246c:	e6f1      	b.n	8022252 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802246e:	4631      	mov	r1, r6
 8022470:	e6ef      	b.n	8022252 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8022472:	2400      	movs	r4, #0
 8022474:	e700      	b.n	8022278 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8022476:	2200      	movs	r2, #0
 8022478:	4614      	mov	r4, r2
 802247a:	e70b      	b.n	8022294 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802247c:	4602      	mov	r2, r0
 802247e:	4604      	mov	r4, r0
 8022480:	e708      	b.n	8022294 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8022482:	2200      	movs	r2, #0
 8022484:	e706      	b.n	8022294 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8022486:	4632      	mov	r2, r6
 8022488:	e704      	b.n	8022294 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0802248a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802248a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802248e:	b09f      	sub	sp, #124	; 0x7c
 8022490:	921b      	str	r2, [sp, #108]	; 0x6c
 8022492:	9309      	str	r3, [sp, #36]	; 0x24
 8022494:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8022496:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 802249a:	931c      	str	r3, [sp, #112]	; 0x70
 802249c:	9119      	str	r1, [sp, #100]	; 0x64
 802249e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80224a2:	901d      	str	r0, [sp, #116]	; 0x74
 80224a4:	6850      	ldr	r0, [r2, #4]
 80224a6:	6812      	ldr	r2, [r2, #0]
 80224a8:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80224aa:	fb00 1303 	mla	r3, r0, r3, r1
 80224ae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80224b2:	930c      	str	r3, [sp, #48]	; 0x30
 80224b4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80224b6:	681b      	ldr	r3, [r3, #0]
 80224b8:	9312      	str	r3, [sp, #72]	; 0x48
 80224ba:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80224bc:	685e      	ldr	r6, [r3, #4]
 80224be:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 80224c2:	930d      	str	r3, [sp, #52]	; 0x34
 80224c4:	3604      	adds	r6, #4
 80224c6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80224c8:	2b00      	cmp	r3, #0
 80224ca:	dc03      	bgt.n	80224d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80224cc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80224ce:	2b00      	cmp	r3, #0
 80224d0:	f340 8388 	ble.w	8022be4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80224d4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80224d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80224da:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80224de:	1e48      	subs	r0, r1, #1
 80224e0:	1e57      	subs	r7, r2, #1
 80224e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80224e4:	2b00      	cmp	r3, #0
 80224e6:	f340 8195 	ble.w	8022814 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80224ea:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80224ec:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80224f0:	ea4f 4325 	mov.w	r3, r5, asr #16
 80224f4:	d406      	bmi.n	8022504 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80224f6:	4584      	cmp	ip, r0
 80224f8:	da04      	bge.n	8022504 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80224fa:	2b00      	cmp	r3, #0
 80224fc:	db02      	blt.n	8022504 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80224fe:	42bb      	cmp	r3, r7
 8022500:	f2c0 8189 	blt.w	8022816 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8022504:	f11c 0c01 	adds.w	ip, ip, #1
 8022508:	f100 8177 	bmi.w	80227fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802250c:	4561      	cmp	r1, ip
 802250e:	f2c0 8174 	blt.w	80227fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8022512:	3301      	adds	r3, #1
 8022514:	f100 8171 	bmi.w	80227fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8022518:	429a      	cmp	r2, r3
 802251a:	f2c0 816e 	blt.w	80227fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802251e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022520:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8022522:	931a      	str	r3, [sp, #104]	; 0x68
 8022524:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8022526:	2b00      	cmp	r3, #0
 8022528:	f340 8193 	ble.w	8022852 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 802252c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802252e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022532:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022534:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8022538:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802253a:	141b      	asrs	r3, r3, #16
 802253c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022540:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8022544:	f100 81d6 	bmi.w	80228f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8022548:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 802254c:	4543      	cmp	r3, r8
 802254e:	f280 81d1 	bge.w	80228f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8022552:	f1bc 0f00 	cmp.w	ip, #0
 8022556:	f2c0 81cd 	blt.w	80228f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802255a:	f10e 38ff 	add.w	r8, lr, #4294967295	; 0xffffffff
 802255e:	45c4      	cmp	ip, r8
 8022560:	f280 81c8 	bge.w	80228f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8022564:	b200      	sxth	r0, r0
 8022566:	fb0c 3300 	mla	r3, ip, r0, r3
 802256a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802256c:	eb04 0803 	add.w	r8, r4, r3
 8022570:	5ce3      	ldrb	r3, [r4, r3]
 8022572:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022576:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802257a:	2a00      	cmp	r2, #0
 802257c:	f000 81af 	beq.w	80228de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022580:	f898 c001 	ldrb.w	ip, [r8, #1]
 8022584:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8022588:	940e      	str	r4, [sp, #56]	; 0x38
 802258a:	0e24      	lsrs	r4, r4, #24
 802258c:	9415      	str	r4, [sp, #84]	; 0x54
 802258e:	b179      	cbz	r1, 80225b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8022590:	eb08 0c00 	add.w	ip, r8, r0
 8022594:	f818 0000 	ldrb.w	r0, [r8, r0]
 8022598:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802259c:	900a      	str	r0, [sp, #40]	; 0x28
 802259e:	0e00      	lsrs	r0, r0, #24
 80225a0:	9013      	str	r0, [sp, #76]	; 0x4c
 80225a2:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80225a6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80225aa:	900f      	str	r0, [sp, #60]	; 0x3c
 80225ac:	0e00      	lsrs	r0, r0, #24
 80225ae:	9016      	str	r0, [sp, #88]	; 0x58
 80225b0:	b292      	uxth	r2, r2
 80225b2:	b289      	uxth	r1, r1
 80225b4:	fb02 f901 	mul.w	r9, r2, r1
 80225b8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80225bc:	0112      	lsls	r2, r2, #4
 80225be:	eba2 0809 	sub.w	r8, r2, r9
 80225c2:	b289      	uxth	r1, r1
 80225c4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80225c8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80225ca:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80225cc:	fa1f f888 	uxth.w	r8, r8
 80225d0:	1a52      	subs	r2, r2, r1
 80225d2:	b292      	uxth	r2, r2
 80225d4:	fb08 f000 	mul.w	r0, r8, r0
 80225d8:	fb02 000e 	mla	r0, r2, lr, r0
 80225dc:	fb01 0004 	mla	r0, r1, r4, r0
 80225e0:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80225e2:	fb09 0004 	mla	r0, r9, r4, r0
 80225e6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80225ea:	2800      	cmp	r0, #0
 80225ec:	f000 80fa 	beq.w	80227e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80225f0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80225f4:	d01b      	beq.n	802262e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80225f6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80225fa:	fb0e fa0a 	mul.w	sl, lr, sl
 80225fe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022602:	fb0e fe03 	mul.w	lr, lr, r3
 8022606:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802260a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802260e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022612:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8022616:	4453      	add	r3, sl
 8022618:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802261c:	0a1b      	lsrs	r3, r3, #8
 802261e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022622:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022626:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802262a:	ea43 030c 	orr.w	r3, r3, ip
 802262e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022630:	2cff      	cmp	r4, #255	; 0xff
 8022632:	d021      	beq.n	8022678 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022634:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022636:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802263a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802263c:	fb04 fb0b 	mul.w	fp, r4, fp
 8022640:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022642:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022646:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022648:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802264c:	fb04 fa0a 	mul.w	sl, r4, sl
 8022650:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022654:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022658:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802265c:	44de      	add	lr, fp
 802265e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022662:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022666:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802266a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802266e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022672:	ea4e 040a 	orr.w	r4, lr, sl
 8022676:	940e      	str	r4, [sp, #56]	; 0x38
 8022678:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802267a:	2cff      	cmp	r4, #255	; 0xff
 802267c:	d021      	beq.n	80226c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 802267e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022680:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022684:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022686:	fb04 fb0b 	mul.w	fp, r4, fp
 802268a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802268c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022690:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022692:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022696:	fb04 fa0a 	mul.w	sl, r4, sl
 802269a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802269e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80226a2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80226a6:	44de      	add	lr, fp
 80226a8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80226ac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80226b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80226b4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80226b8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80226bc:	ea4e 040a 	orr.w	r4, lr, sl
 80226c0:	940a      	str	r4, [sp, #40]	; 0x28
 80226c2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80226c4:	2cff      	cmp	r4, #255	; 0xff
 80226c6:	d021      	beq.n	802270c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80226c8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80226ca:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80226ce:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80226d0:	fb04 fb0b 	mul.w	fp, r4, fp
 80226d4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80226d6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80226da:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80226dc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80226e0:	fb04 fa0a 	mul.w	sl, r4, sl
 80226e4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80226e8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80226ec:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80226f0:	44de      	add	lr, fp
 80226f2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80226f6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80226fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80226fe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022702:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022706:	ea4e 040a 	orr.w	r4, lr, sl
 802270a:	940f      	str	r4, [sp, #60]	; 0x3c
 802270c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802270e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022712:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022714:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8022718:	fb08 fc0c 	mul.w	ip, r8, ip
 802271c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022720:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022724:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022726:	fb01 cc0e 	mla	ip, r1, lr, ip
 802272a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802272e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022730:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022734:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8022738:	fb08 f80e 	mul.w	r8, r8, lr
 802273c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022740:	fb02 8303 	mla	r3, r2, r3, r8
 8022744:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8022746:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022748:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802274c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802274e:	fb01 330a 	mla	r3, r1, sl, r3
 8022752:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8022756:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8022758:	fb09 3901 	mla	r9, r9, r1, r3
 802275c:	4342      	muls	r2, r0
 802275e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022762:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022766:	883b      	ldrh	r3, [r7, #0]
 8022768:	1c50      	adds	r0, r2, #1
 802276a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802276e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8022772:	ea4c 0c09 	orr.w	ip, ip, r9
 8022776:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802277a:	1219      	asrs	r1, r3, #8
 802277c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8022780:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8022784:	b2c0      	uxtb	r0, r0
 8022786:	fb12 f204 	smulbb	r2, r2, r4
 802278a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802278e:	fb01 2100 	mla	r1, r1, r0, r2
 8022792:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8022796:	10da      	asrs	r2, r3, #3
 8022798:	fa5f fc8c 	uxtb.w	ip, ip
 802279c:	00db      	lsls	r3, r3, #3
 802279e:	fb1c fc04 	smulbb	ip, ip, r4
 80227a2:	b2db      	uxtb	r3, r3
 80227a4:	b289      	uxth	r1, r1
 80227a6:	fb03 c300 	mla	r3, r3, r0, ip
 80227aa:	fa1f fc83 	uxth.w	ip, r3
 80227ae:	1c4b      	adds	r3, r1, #1
 80227b0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80227b4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80227b8:	fb1e fe04 	smulbb	lr, lr, r4
 80227bc:	f10c 0301 	add.w	r3, ip, #1
 80227c0:	fb02 e200 	mla	r2, r2, r0, lr
 80227c4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80227c8:	b292      	uxth	r2, r2
 80227ca:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80227ce:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80227d2:	430b      	orrs	r3, r1
 80227d4:	1c51      	adds	r1, r2, #1
 80227d6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80227da:	0952      	lsrs	r2, r2, #5
 80227dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80227e0:	4313      	orrs	r3, r2
 80227e2:	803b      	strh	r3, [r7, #0]
 80227e4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80227e6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80227e8:	441a      	add	r2, r3
 80227ea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80227ec:	9229      	str	r2, [sp, #164]	; 0xa4
 80227ee:	441d      	add	r5, r3
 80227f0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80227f2:	3b01      	subs	r3, #1
 80227f4:	3702      	adds	r7, #2
 80227f6:	931a      	str	r3, [sp, #104]	; 0x68
 80227f8:	e694      	b.n	8022524 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80227fa:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80227fc:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80227fe:	441c      	add	r4, r3
 8022800:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022802:	9429      	str	r4, [sp, #164]	; 0xa4
 8022804:	441d      	add	r5, r3
 8022806:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022808:	3b01      	subs	r3, #1
 802280a:	9309      	str	r3, [sp, #36]	; 0x24
 802280c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802280e:	3302      	adds	r3, #2
 8022810:	930c      	str	r3, [sp, #48]	; 0x30
 8022812:	e666      	b.n	80224e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022814:	d024      	beq.n	8022860 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8022816:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022818:	982b      	ldr	r0, [sp, #172]	; 0xac
 802281a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802281c:	3b01      	subs	r3, #1
 802281e:	fb00 4003 	mla	r0, r0, r3, r4
 8022822:	1400      	asrs	r0, r0, #16
 8022824:	f53f ae7b 	bmi.w	802251e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022828:	3901      	subs	r1, #1
 802282a:	4288      	cmp	r0, r1
 802282c:	f6bf ae77 	bge.w	802251e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022830:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8022832:	fb01 5303 	mla	r3, r1, r3, r5
 8022836:	141b      	asrs	r3, r3, #16
 8022838:	f53f ae71 	bmi.w	802251e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802283c:	3a01      	subs	r2, #1
 802283e:	4293      	cmp	r3, r2
 8022840:	f6bf ae6d 	bge.w	802251e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022844:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8022848:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 802284c:	f1bb 0f00 	cmp.w	fp, #0
 8022850:	dc70      	bgt.n	8022934 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8022852:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022854:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022858:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802285a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802285e:	930c      	str	r3, [sp, #48]	; 0x30
 8022860:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8022862:	2b00      	cmp	r3, #0
 8022864:	f340 81be 	ble.w	8022be4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8022868:	ee30 0a04 	vadd.f32	s0, s0, s8
 802286c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022870:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022874:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022876:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802287a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802287e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022882:	eef0 6a62 	vmov.f32	s13, s5
 8022886:	ee61 7a27 	vmul.f32	s15, s2, s15
 802288a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802288e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022892:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8022896:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802289a:	eef0 6a43 	vmov.f32	s13, s6
 802289e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80228a2:	ee12 2a90 	vmov	r2, s5
 80228a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80228aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80228ae:	ee13 2a10 	vmov	r2, s6
 80228b2:	932b      	str	r3, [sp, #172]	; 0xac
 80228b4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80228b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80228ba:	932c      	str	r3, [sp, #176]	; 0xb0
 80228bc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80228be:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80228c0:	3b01      	subs	r3, #1
 80228c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80228c6:	9319      	str	r3, [sp, #100]	; 0x64
 80228c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80228ca:	bf08      	it	eq
 80228cc:	4613      	moveq	r3, r2
 80228ce:	ee16 5a90 	vmov	r5, s13
 80228d2:	9309      	str	r3, [sp, #36]	; 0x24
 80228d4:	eeb0 3a67 	vmov.f32	s6, s15
 80228d8:	eef0 2a47 	vmov.f32	s5, s14
 80228dc:	e5f3      	b.n	80224c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80228de:	2900      	cmp	r1, #0
 80228e0:	f43f ae66 	beq.w	80225b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80228e4:	f818 0000 	ldrb.w	r0, [r8, r0]
 80228e8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80228ec:	900a      	str	r0, [sp, #40]	; 0x28
 80228ee:	0e00      	lsrs	r0, r0, #24
 80228f0:	9013      	str	r0, [sp, #76]	; 0x4c
 80228f2:	e65d      	b.n	80225b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80228f4:	f113 0801 	adds.w	r8, r3, #1
 80228f8:	f53f af74 	bmi.w	80227e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80228fc:	4540      	cmp	r0, r8
 80228fe:	f6ff af71 	blt.w	80227e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022902:	f11c 0801 	adds.w	r8, ip, #1
 8022906:	f53f af6d 	bmi.w	80227e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802290a:	45c6      	cmp	lr, r8
 802290c:	f6ff af6a 	blt.w	80227e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022910:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8022912:	9302      	str	r3, [sp, #8]
 8022914:	b200      	sxth	r0, r0
 8022916:	fa0f f38e 	sxth.w	r3, lr
 802291a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 802291e:	e9cd c203 	strd	ip, r2, [sp, #12]
 8022922:	9301      	str	r3, [sp, #4]
 8022924:	9000      	str	r0, [sp, #0]
 8022926:	4633      	mov	r3, r6
 8022928:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802292a:	981d      	ldr	r0, [sp, #116]	; 0x74
 802292c:	4639      	mov	r1, r7
 802292e:	f7ff fc62 	bl	80221f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8022932:	e757      	b.n	80227e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022934:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022936:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8022938:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802293c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802293e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022942:	1427      	asrs	r7, r4, #16
 8022944:	142b      	asrs	r3, r5, #16
 8022946:	fb01 7303 	mla	r3, r1, r3, r7
 802294a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802294c:	18e7      	adds	r7, r4, r3
 802294e:	5ce3      	ldrb	r3, [r4, r3]
 8022950:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022954:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022958:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802295c:	2a00      	cmp	r2, #0
 802295e:	f000 8137 	beq.w	8022bd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8022962:	f897 e001 	ldrb.w	lr, [r7, #1]
 8022966:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802296a:	9410      	str	r4, [sp, #64]	; 0x40
 802296c:	0e24      	lsrs	r4, r4, #24
 802296e:	9417      	str	r4, [sp, #92]	; 0x5c
 8022970:	b170      	cbz	r0, 8022990 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8022972:	eb07 0e01 	add.w	lr, r7, r1
 8022976:	5c79      	ldrb	r1, [r7, r1]
 8022978:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802297c:	910b      	str	r1, [sp, #44]	; 0x2c
 802297e:	0e09      	lsrs	r1, r1, #24
 8022980:	9114      	str	r1, [sp, #80]	; 0x50
 8022982:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8022986:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802298a:	9111      	str	r1, [sp, #68]	; 0x44
 802298c:	0e09      	lsrs	r1, r1, #24
 802298e:	9118      	str	r1, [sp, #96]	; 0x60
 8022990:	b292      	uxth	r2, r2
 8022992:	b280      	uxth	r0, r0
 8022994:	fb02 f800 	mul.w	r8, r2, r0
 8022998:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802299c:	0112      	lsls	r2, r2, #4
 802299e:	eba2 0e08 	sub.w	lr, r2, r8
 80229a2:	b280      	uxth	r0, r0
 80229a4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80229a8:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80229aa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80229ac:	fa1f fe8e 	uxth.w	lr, lr
 80229b0:	1a12      	subs	r2, r2, r0
 80229b2:	b292      	uxth	r2, r2
 80229b4:	fb0e f101 	mul.w	r1, lr, r1
 80229b8:	fb02 110c 	mla	r1, r2, ip, r1
 80229bc:	fb00 1104 	mla	r1, r0, r4, r1
 80229c0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80229c2:	fb08 1104 	mla	r1, r8, r4, r1
 80229c6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80229ca:	2900      	cmp	r1, #0
 80229cc:	f000 80f5 	beq.w	8022bba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80229d0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80229d4:	d019      	beq.n	8022a0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 80229d6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80229da:	fb0c fa0a 	mul.w	sl, ip, sl
 80229de:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80229e2:	fb0c fc03 	mul.w	ip, ip, r3
 80229e6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80229ea:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80229ee:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80229f2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80229f6:	4453      	add	r3, sl
 80229f8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80229fc:	0a1b      	lsrs	r3, r3, #8
 80229fe:	0a3f      	lsrs	r7, r7, #8
 8022a00:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022a04:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8022a08:	433b      	orrs	r3, r7
 8022a0a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022a0c:	2cff      	cmp	r4, #255	; 0xff
 8022a0e:	d020      	beq.n	8022a52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8022a10:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022a12:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022a16:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022a18:	4367      	muls	r7, r4
 8022a1a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022a1c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022a20:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022a22:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022a26:	fb04 fa0a 	mul.w	sl, r4, sl
 8022a2a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022a2e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022a32:	44bc      	add	ip, r7
 8022a34:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022a38:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022a3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022a40:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022a44:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022a48:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022a4c:	ea4c 040a 	orr.w	r4, ip, sl
 8022a50:	9410      	str	r4, [sp, #64]	; 0x40
 8022a52:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022a54:	2cff      	cmp	r4, #255	; 0xff
 8022a56:	d020      	beq.n	8022a9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8022a58:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022a5a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022a5e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022a60:	4367      	muls	r7, r4
 8022a62:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022a64:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022a68:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022a6a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022a6e:	fb04 fa0a 	mul.w	sl, r4, sl
 8022a72:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022a76:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022a7a:	44bc      	add	ip, r7
 8022a7c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022a80:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022a84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022a88:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022a8c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022a90:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022a94:	ea4c 040a 	orr.w	r4, ip, sl
 8022a98:	940b      	str	r4, [sp, #44]	; 0x2c
 8022a9a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8022a9c:	2cff      	cmp	r4, #255	; 0xff
 8022a9e:	d020      	beq.n	8022ae2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8022aa0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022aa2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022aa6:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8022aa8:	4367      	muls	r7, r4
 8022aaa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022aac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022ab0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8022ab2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022ab6:	fb04 fa0a 	mul.w	sl, r4, sl
 8022aba:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022abe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022ac2:	44bc      	add	ip, r7
 8022ac4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022ac8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022acc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022ad0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022ad4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022ad8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022adc:	ea4c 040a 	orr.w	r4, ip, sl
 8022ae0:	9411      	str	r4, [sp, #68]	; 0x44
 8022ae2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022ae4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022ae8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022aea:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8022aee:	fb0e f707 	mul.w	r7, lr, r7
 8022af2:	fb02 770c 	mla	r7, r2, ip, r7
 8022af6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022afa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022afc:	fb00 770c 	mla	r7, r0, ip, r7
 8022b00:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022b04:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022b06:	fb08 770c 	mla	r7, r8, ip, r7
 8022b0a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8022b0e:	fb0e fe0c 	mul.w	lr, lr, ip
 8022b12:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022b16:	fb02 e303 	mla	r3, r2, r3, lr
 8022b1a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022b1c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022b1e:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022b22:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8022b24:	fb00 330a 	mla	r3, r0, sl, r3
 8022b28:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8022b2c:	fb08 3c0c 	mla	ip, r8, ip, r3
 8022b30:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022b32:	f8b9 0000 	ldrh.w	r0, [r9]
 8022b36:	434b      	muls	r3, r1
 8022b38:	0a3f      	lsrs	r7, r7, #8
 8022b3a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022b3e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022b42:	1c59      	adds	r1, r3, #1
 8022b44:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8022b48:	ea47 070c 	orr.w	r7, r7, ip
 8022b4c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8022b50:	1202      	asrs	r2, r0, #8
 8022b52:	0c3b      	lsrs	r3, r7, #16
 8022b54:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8022b58:	b2c9      	uxtb	r1, r1
 8022b5a:	fb13 f304 	smulbb	r3, r3, r4
 8022b5e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022b62:	fb02 3201 	mla	r2, r2, r1, r3
 8022b66:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8022b6a:	10c3      	asrs	r3, r0, #3
 8022b6c:	b2ff      	uxtb	r7, r7
 8022b6e:	00c0      	lsls	r0, r0, #3
 8022b70:	b292      	uxth	r2, r2
 8022b72:	fb1c fc04 	smulbb	ip, ip, r4
 8022b76:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022b7a:	b2c0      	uxtb	r0, r0
 8022b7c:	fb17 f704 	smulbb	r7, r7, r4
 8022b80:	fb03 c301 	mla	r3, r3, r1, ip
 8022b84:	fb00 7001 	mla	r0, r0, r1, r7
 8022b88:	f102 0c01 	add.w	ip, r2, #1
 8022b8c:	b280      	uxth	r0, r0
 8022b8e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8022b92:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8022b96:	1c42      	adds	r2, r0, #1
 8022b98:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8022b9c:	b29b      	uxth	r3, r3
 8022b9e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022ba2:	ea42 020c 	orr.w	r2, r2, ip
 8022ba6:	f103 0c01 	add.w	ip, r3, #1
 8022baa:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8022bae:	095b      	lsrs	r3, r3, #5
 8022bb0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022bb4:	431a      	orrs	r2, r3
 8022bb6:	f8a9 2000 	strh.w	r2, [r9]
 8022bba:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8022bbc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8022bbe:	441a      	add	r2, r3
 8022bc0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022bc2:	9229      	str	r2, [sp, #164]	; 0xa4
 8022bc4:	f109 0902 	add.w	r9, r9, #2
 8022bc8:	441d      	add	r5, r3
 8022bca:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8022bce:	e63d      	b.n	802284c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8022bd0:	2800      	cmp	r0, #0
 8022bd2:	f43f aedd 	beq.w	8022990 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8022bd6:	5c79      	ldrb	r1, [r7, r1]
 8022bd8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022bdc:	910b      	str	r1, [sp, #44]	; 0x2c
 8022bde:	0e09      	lsrs	r1, r1, #24
 8022be0:	9114      	str	r1, [sp, #80]	; 0x50
 8022be2:	e6d5      	b.n	8022990 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8022be4:	b01f      	add	sp, #124	; 0x7c
 8022be6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022bea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8022bea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022bee:	b089      	sub	sp, #36	; 0x24
 8022bf0:	9101      	str	r1, [sp, #4]
 8022bf2:	9801      	ldr	r0, [sp, #4]
 8022bf4:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8022bf8:	8800      	ldrh	r0, [r0, #0]
 8022bfa:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8022bfe:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8022c02:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8022c06:	1206      	asrs	r6, r0, #8
 8022c08:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8022c0c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8022c10:	9602      	str	r6, [sp, #8]
 8022c12:	10c6      	asrs	r6, r0, #3
 8022c14:	00c0      	lsls	r0, r0, #3
 8022c16:	b2c0      	uxtb	r0, r0
 8022c18:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8022c1c:	9004      	str	r0, [sp, #16]
 8022c1e:	2f00      	cmp	r7, #0
 8022c20:	fb07 100c 	mla	r0, r7, ip, r1
 8022c24:	9603      	str	r6, [sp, #12]
 8022c26:	eb02 0e00 	add.w	lr, r2, r0
 8022c2a:	f2c0 810a 	blt.w	8022e42 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8022c2e:	45b8      	cmp	r8, r7
 8022c30:	f340 8107 	ble.w	8022e42 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8022c34:	2900      	cmp	r1, #0
 8022c36:	f2c0 8102 	blt.w	8022e3e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8022c3a:	458c      	cmp	ip, r1
 8022c3c:	f340 80ff 	ble.w	8022e3e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8022c40:	5c12      	ldrb	r2, [r2, r0]
 8022c42:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8022c46:	1c4a      	adds	r2, r1, #1
 8022c48:	f100 80fe 	bmi.w	8022e48 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8022c4c:	4594      	cmp	ip, r2
 8022c4e:	f340 80fb 	ble.w	8022e48 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8022c52:	2d00      	cmp	r5, #0
 8022c54:	f000 80fa 	beq.w	8022e4c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8022c58:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8022c5c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8022c60:	3701      	adds	r7, #1
 8022c62:	f100 80f7 	bmi.w	8022e54 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8022c66:	45b8      	cmp	r8, r7
 8022c68:	f340 80f4 	ble.w	8022e54 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8022c6c:	2c00      	cmp	r4, #0
 8022c6e:	f000 80f4 	beq.w	8022e5a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8022c72:	2900      	cmp	r1, #0
 8022c74:	eb0e 020c 	add.w	r2, lr, ip
 8022c78:	f2c0 80ea 	blt.w	8022e50 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8022c7c:	458c      	cmp	ip, r1
 8022c7e:	f340 80e7 	ble.w	8022e50 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8022c82:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8022c86:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8022c8a:	3101      	adds	r1, #1
 8022c8c:	f100 80e8 	bmi.w	8022e60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8022c90:	458c      	cmp	ip, r1
 8022c92:	f340 80e5 	ble.w	8022e60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8022c96:	2d00      	cmp	r5, #0
 8022c98:	f000 80e4 	beq.w	8022e64 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8022c9c:	7852      	ldrb	r2, [r2, #1]
 8022c9e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8022ca2:	0e0b      	lsrs	r3, r1, #24
 8022ca4:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8022ca8:	9300      	str	r3, [sp, #0]
 8022caa:	b2a4      	uxth	r4, r4
 8022cac:	b2ab      	uxth	r3, r5
 8022cae:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8022cb2:	fb03 f904 	mul.w	r9, r3, r4
 8022cb6:	fb0a f505 	mul.w	r5, sl, r5
 8022cba:	011b      	lsls	r3, r3, #4
 8022cbc:	eba3 0e09 	sub.w	lr, r3, r9
 8022cc0:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8022cc4:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8022cc8:	0a28      	lsrs	r0, r5, #8
 8022cca:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8022cce:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8022cd2:	4405      	add	r5, r0
 8022cd4:	0a2d      	lsrs	r5, r5, #8
 8022cd6:	fb0a f303 	mul.w	r3, sl, r3
 8022cda:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8022cde:	9005      	str	r0, [sp, #20]
 8022ce0:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8022ce4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022ce8:	0a1b      	lsrs	r3, r3, #8
 8022cea:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8022cee:	9306      	str	r3, [sp, #24]
 8022cf0:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8022cf4:	fb0b f303 	mul.w	r3, fp, r3
 8022cf8:	0a1d      	lsrs	r5, r3, #8
 8022cfa:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022cfe:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8022d02:	fb0b f606 	mul.w	r6, fp, r6
 8022d06:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8022d0a:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8022d0e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022d12:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8022d16:	fb08 f707 	mul.w	r7, r8, r7
 8022d1a:	441d      	add	r5, r3
 8022d1c:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8022d20:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8022d24:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8022d28:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8022d2c:	fb08 fc0c 	mul.w	ip, r8, ip
 8022d30:	0a1b      	lsrs	r3, r3, #8
 8022d32:	9307      	str	r3, [sp, #28]
 8022d34:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8022d38:	0e0b      	lsrs	r3, r1, #24
 8022d3a:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8022d3e:	435f      	muls	r7, r3
 8022d40:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022d44:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8022d48:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8022d4c:	4460      	add	r0, ip
 8022d4e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022d52:	b2a4      	uxth	r4, r4
 8022d54:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022d58:	0a2d      	lsrs	r5, r5, #8
 8022d5a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022d5e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022d62:	fa1f fe8e 	uxth.w	lr, lr
 8022d66:	4359      	muls	r1, r3
 8022d68:	1b12      	subs	r2, r2, r4
 8022d6a:	9b05      	ldr	r3, [sp, #20]
 8022d6c:	44bc      	add	ip, r7
 8022d6e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022d72:	b292      	uxth	r2, r2
 8022d74:	fb05 f50e 	mul.w	r5, r5, lr
 8022d78:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022d7c:	fb03 5502 	mla	r5, r3, r2, r5
 8022d80:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022d84:	9b06      	ldr	r3, [sp, #24]
 8022d86:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8022d8a:	0a36      	lsrs	r6, r6, #8
 8022d8c:	0a00      	lsrs	r0, r0, #8
 8022d8e:	fb0c 5509 	mla	r5, ip, r9, r5
 8022d92:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8022d96:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8022d9a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022d9e:	fb00 5504 	mla	r5, r0, r4, r5
 8022da2:	fb0e f606 	mul.w	r6, lr, r6
 8022da6:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8022daa:	0a09      	lsrs	r1, r1, #8
 8022dac:	9b07      	ldr	r3, [sp, #28]
 8022dae:	fb02 6000 	mla	r0, r2, r0, r6
 8022db2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022db6:	fb09 0001 	mla	r0, r9, r1, r0
 8022dba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022dbe:	fb0e fe0b 	mul.w	lr, lr, fp
 8022dc2:	fb04 0003 	mla	r0, r4, r3, r0
 8022dc6:	fb02 e20a 	mla	r2, r2, sl, lr
 8022dca:	9b00      	ldr	r3, [sp, #0]
 8022dcc:	fb04 2408 	mla	r4, r4, r8, r2
 8022dd0:	fb09 4903 	mla	r9, r9, r3, r4
 8022dd4:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8022dd8:	9b02      	ldr	r3, [sp, #8]
 8022dda:	9a04      	ldr	r2, [sp, #16]
 8022ddc:	fa5f f989 	uxtb.w	r9, r9
 8022de0:	fb03 f109 	mul.w	r1, r3, r9
 8022de4:	9b03      	ldr	r3, [sp, #12]
 8022de6:	0a2d      	lsrs	r5, r5, #8
 8022de8:	0a00      	lsrs	r0, r0, #8
 8022dea:	fb03 f309 	mul.w	r3, r3, r9
 8022dee:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8022df2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022df6:	4305      	orrs	r5, r0
 8022df8:	fb02 f909 	mul.w	r9, r2, r9
 8022dfc:	1c58      	adds	r0, r3, #1
 8022dfe:	1c4a      	adds	r2, r1, #1
 8022e00:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022e04:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022e08:	0a2b      	lsrs	r3, r5, #8
 8022e0a:	0c2a      	lsrs	r2, r5, #16
 8022e0c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022e10:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8022e14:	00db      	lsls	r3, r3, #3
 8022e16:	0212      	lsls	r2, r2, #8
 8022e18:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8022e1c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022e20:	4313      	orrs	r3, r2
 8022e22:	f109 0201 	add.w	r2, r9, #1
 8022e26:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8022e2a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8022e2e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8022e32:	431d      	orrs	r5, r3
 8022e34:	9b01      	ldr	r3, [sp, #4]
 8022e36:	801d      	strh	r5, [r3, #0]
 8022e38:	b009      	add	sp, #36	; 0x24
 8022e3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022e3e:	2000      	movs	r0, #0
 8022e40:	e701      	b.n	8022c46 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8022e42:	2600      	movs	r6, #0
 8022e44:	4630      	mov	r0, r6
 8022e46:	e70b      	b.n	8022c60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022e48:	2600      	movs	r6, #0
 8022e4a:	e709      	b.n	8022c60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022e4c:	462e      	mov	r6, r5
 8022e4e:	e707      	b.n	8022c60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022e50:	2700      	movs	r7, #0
 8022e52:	e71a      	b.n	8022c8a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8022e54:	2100      	movs	r1, #0
 8022e56:	460f      	mov	r7, r1
 8022e58:	e723      	b.n	8022ca2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022e5a:	4621      	mov	r1, r4
 8022e5c:	4627      	mov	r7, r4
 8022e5e:	e720      	b.n	8022ca2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022e60:	2100      	movs	r1, #0
 8022e62:	e71e      	b.n	8022ca2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022e64:	4629      	mov	r1, r5
 8022e66:	e71c      	b.n	8022ca2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08022e68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022e68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022e6c:	b09b      	sub	sp, #108	; 0x6c
 8022e6e:	9218      	str	r2, [sp, #96]	; 0x60
 8022e70:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8022e72:	9116      	str	r1, [sp, #88]	; 0x58
 8022e74:	9307      	str	r3, [sp, #28]
 8022e76:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8022e7a:	9019      	str	r0, [sp, #100]	; 0x64
 8022e7c:	6850      	ldr	r0, [r2, #4]
 8022e7e:	6812      	ldr	r2, [r2, #0]
 8022e80:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8022e82:	fb00 1303 	mla	r3, r0, r3, r1
 8022e86:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022e8a:	930a      	str	r3, [sp, #40]	; 0x28
 8022e8c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022e8e:	681b      	ldr	r3, [r3, #0]
 8022e90:	930f      	str	r3, [sp, #60]	; 0x3c
 8022e92:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022e94:	685e      	ldr	r6, [r3, #4]
 8022e96:	3604      	adds	r6, #4
 8022e98:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022e9a:	2b00      	cmp	r3, #0
 8022e9c:	dc03      	bgt.n	8022ea6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8022e9e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022ea0:	2b00      	cmp	r3, #0
 8022ea2:	f340 8373 	ble.w	802358c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8022ea6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022ea8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022eac:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022eb0:	1e48      	subs	r0, r1, #1
 8022eb2:	1e57      	subs	r7, r2, #1
 8022eb4:	9b07      	ldr	r3, [sp, #28]
 8022eb6:	2b00      	cmp	r3, #0
 8022eb8:	f340 8190 	ble.w	80231dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8022ebc:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022ebe:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022ec2:	ea4f 4325 	mov.w	r3, r5, asr #16
 8022ec6:	d406      	bmi.n	8022ed6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022ec8:	4584      	cmp	ip, r0
 8022eca:	da04      	bge.n	8022ed6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022ecc:	2b00      	cmp	r3, #0
 8022ece:	db02      	blt.n	8022ed6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022ed0:	42bb      	cmp	r3, r7
 8022ed2:	f2c0 8184 	blt.w	80231de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8022ed6:	f11c 0c01 	adds.w	ip, ip, #1
 8022eda:	f100 8172 	bmi.w	80231c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022ede:	4561      	cmp	r1, ip
 8022ee0:	f2c0 816f 	blt.w	80231c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022ee4:	3301      	adds	r3, #1
 8022ee6:	f100 816c 	bmi.w	80231c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022eea:	429a      	cmp	r2, r3
 8022eec:	f2c0 8169 	blt.w	80231c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022ef0:	9b07      	ldr	r3, [sp, #28]
 8022ef2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8022ef4:	9317      	str	r3, [sp, #92]	; 0x5c
 8022ef6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022ef8:	2b00      	cmp	r3, #0
 8022efa:	f340 818e 	ble.w	802321a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8022efe:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022f00:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022f04:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022f06:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8022f0a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022f0c:	141b      	asrs	r3, r3, #16
 8022f0e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022f12:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022f16:	f100 81d1 	bmi.w	80232bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022f1a:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8022f1e:	4543      	cmp	r3, r8
 8022f20:	f280 81cc 	bge.w	80232bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022f24:	f1bc 0f00 	cmp.w	ip, #0
 8022f28:	f2c0 81c8 	blt.w	80232bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022f2c:	f10e 38ff 	add.w	r8, lr, #4294967295	; 0xffffffff
 8022f30:	45c4      	cmp	ip, r8
 8022f32:	f280 81c3 	bge.w	80232bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022f36:	b209      	sxth	r1, r1
 8022f38:	fb0c 3301 	mla	r3, ip, r1, r3
 8022f3c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022f3e:	eb04 0803 	add.w	r8, r4, r3
 8022f42:	5ce3      	ldrb	r3, [r4, r3]
 8022f44:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022f48:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8022f4c:	2a00      	cmp	r2, #0
 8022f4e:	f000 81aa 	beq.w	80232a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8022f52:	f898 c001 	ldrb.w	ip, [r8, #1]
 8022f56:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8022f5a:	940b      	str	r4, [sp, #44]	; 0x2c
 8022f5c:	0e24      	lsrs	r4, r4, #24
 8022f5e:	9412      	str	r4, [sp, #72]	; 0x48
 8022f60:	b178      	cbz	r0, 8022f82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022f62:	eb08 0c01 	add.w	ip, r8, r1
 8022f66:	f818 1001 	ldrb.w	r1, [r8, r1]
 8022f6a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022f6e:	9108      	str	r1, [sp, #32]
 8022f70:	0e09      	lsrs	r1, r1, #24
 8022f72:	9110      	str	r1, [sp, #64]	; 0x40
 8022f74:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8022f78:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022f7c:	910c      	str	r1, [sp, #48]	; 0x30
 8022f7e:	0e09      	lsrs	r1, r1, #24
 8022f80:	9113      	str	r1, [sp, #76]	; 0x4c
 8022f82:	b292      	uxth	r2, r2
 8022f84:	b280      	uxth	r0, r0
 8022f86:	fb02 f900 	mul.w	r9, r2, r0
 8022f8a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8022f8e:	0112      	lsls	r2, r2, #4
 8022f90:	eba2 0809 	sub.w	r8, r2, r9
 8022f94:	b280      	uxth	r0, r0
 8022f96:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8022f9a:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022f9c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022f9e:	fa1f f888 	uxth.w	r8, r8
 8022fa2:	1a12      	subs	r2, r2, r0
 8022fa4:	b292      	uxth	r2, r2
 8022fa6:	fb08 f101 	mul.w	r1, r8, r1
 8022faa:	fb02 110e 	mla	r1, r2, lr, r1
 8022fae:	fb00 1104 	mla	r1, r0, r4, r1
 8022fb2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022fb4:	fb09 1104 	mla	r1, r9, r4, r1
 8022fb8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8022fbc:	2900      	cmp	r1, #0
 8022fbe:	f000 80f5 	beq.w	80231ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022fc2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8022fc6:	d01b      	beq.n	8023000 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022fc8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022fcc:	fb0e fa0a 	mul.w	sl, lr, sl
 8022fd0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022fd4:	fb0e fe03 	mul.w	lr, lr, r3
 8022fd8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022fdc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022fe0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022fe4:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8022fe8:	4453      	add	r3, sl
 8022fea:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022fee:	0a1b      	lsrs	r3, r3, #8
 8022ff0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022ff4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022ff8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022ffc:	ea43 030c 	orr.w	r3, r3, ip
 8023000:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023002:	2cff      	cmp	r4, #255	; 0xff
 8023004:	d021      	beq.n	802304a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8023006:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023008:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802300c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802300e:	fb04 fb0b 	mul.w	fp, r4, fp
 8023012:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023014:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023018:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802301a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802301e:	fb04 fa0a 	mul.w	sl, r4, sl
 8023022:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023026:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802302a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802302e:	44de      	add	lr, fp
 8023030:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023034:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023038:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802303c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023040:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023044:	ea4e 040a 	orr.w	r4, lr, sl
 8023048:	940b      	str	r4, [sp, #44]	; 0x2c
 802304a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802304c:	2cff      	cmp	r4, #255	; 0xff
 802304e:	d021      	beq.n	8023094 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8023050:	9c08      	ldr	r4, [sp, #32]
 8023052:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8023056:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023058:	fb04 fb0b 	mul.w	fp, r4, fp
 802305c:	9c08      	ldr	r4, [sp, #32]
 802305e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023062:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023064:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023068:	fb04 fa0a 	mul.w	sl, r4, sl
 802306c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023070:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023074:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023078:	44de      	add	lr, fp
 802307a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802307e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023082:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023086:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802308a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802308e:	ea4e 040a 	orr.w	r4, lr, sl
 8023092:	9408      	str	r4, [sp, #32]
 8023094:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023096:	2cff      	cmp	r4, #255	; 0xff
 8023098:	d021      	beq.n	80230de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802309a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802309c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80230a0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80230a2:	fb04 fb0b 	mul.w	fp, r4, fp
 80230a6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80230a8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80230ac:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80230ae:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80230b2:	fb04 fa0a 	mul.w	sl, r4, sl
 80230b6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80230ba:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80230be:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80230c2:	44de      	add	lr, fp
 80230c4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80230c8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80230cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80230d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80230d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80230d8:	ea4e 040a 	orr.w	r4, lr, sl
 80230dc:	940c      	str	r4, [sp, #48]	; 0x30
 80230de:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80230e0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80230e4:	9c08      	ldr	r4, [sp, #32]
 80230e6:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80230ea:	fb08 fc0c 	mul.w	ip, r8, ip
 80230ee:	fb02 cc0e 	mla	ip, r2, lr, ip
 80230f2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80230f6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80230f8:	fb00 cc0e 	mla	ip, r0, lr, ip
 80230fc:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8023100:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023102:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023106:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 802310a:	fb08 f80e 	mul.w	r8, r8, lr
 802310e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023112:	fb02 8303 	mla	r3, r2, r3, r8
 8023116:	9a08      	ldr	r2, [sp, #32]
 8023118:	f8b7 8000 	ldrh.w	r8, [r7]
 802311c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023120:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023122:	fb00 330a 	mla	r3, r0, sl, r3
 8023126:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 802312a:	fb09 3900 	mla	r9, r9, r0, r3
 802312e:	43c9      	mvns	r1, r1
 8023130:	ea4f 2228 	mov.w	r2, r8, asr #8
 8023134:	fa5f fe81 	uxtb.w	lr, r1
 8023138:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802313c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023140:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023144:	fb02 f20e 	mul.w	r2, r2, lr
 8023148:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802314c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023150:	ea4c 0c09 	orr.w	ip, ip, r9
 8023154:	1c53      	adds	r3, r2, #1
 8023156:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 802315a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 802315e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8023162:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023166:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802316a:	4a63      	ldr	r2, [pc, #396]	; (80232f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 802316c:	fb00 f00e 	mul.w	r0, r0, lr
 8023170:	b2db      	uxtb	r3, r3
 8023172:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8023176:	1c43      	adds	r3, r0, #1
 8023178:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802317c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8023180:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8023184:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8023188:	b2c9      	uxtb	r1, r1
 802318a:	00db      	lsls	r3, r3, #3
 802318c:	fb01 f10e 	mul.w	r1, r1, lr
 8023190:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023194:	4313      	orrs	r3, r2
 8023196:	1c4a      	adds	r2, r1, #1
 8023198:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802319c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80231a0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80231a4:	ea4c 0c03 	orr.w	ip, ip, r3
 80231a8:	f8a7 c000 	strh.w	ip, [r7]
 80231ac:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80231ae:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80231b0:	441a      	add	r2, r3
 80231b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80231b4:	9225      	str	r2, [sp, #148]	; 0x94
 80231b6:	441d      	add	r5, r3
 80231b8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80231ba:	3b01      	subs	r3, #1
 80231bc:	3702      	adds	r7, #2
 80231be:	9317      	str	r3, [sp, #92]	; 0x5c
 80231c0:	e699      	b.n	8022ef6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80231c2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80231c4:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80231c6:	441c      	add	r4, r3
 80231c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80231ca:	9425      	str	r4, [sp, #148]	; 0x94
 80231cc:	441d      	add	r5, r3
 80231ce:	9b07      	ldr	r3, [sp, #28]
 80231d0:	3b01      	subs	r3, #1
 80231d2:	9307      	str	r3, [sp, #28]
 80231d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80231d6:	3302      	adds	r3, #2
 80231d8:	930a      	str	r3, [sp, #40]	; 0x28
 80231da:	e66b      	b.n	8022eb4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80231dc:	d024      	beq.n	8023228 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 80231de:	9b07      	ldr	r3, [sp, #28]
 80231e0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80231e2:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80231e4:	3b01      	subs	r3, #1
 80231e6:	fb00 4003 	mla	r0, r0, r3, r4
 80231ea:	1400      	asrs	r0, r0, #16
 80231ec:	f53f ae80 	bmi.w	8022ef0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80231f0:	3901      	subs	r1, #1
 80231f2:	4288      	cmp	r0, r1
 80231f4:	f6bf ae7c 	bge.w	8022ef0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80231f8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80231fa:	fb01 5303 	mla	r3, r1, r3, r5
 80231fe:	141b      	asrs	r3, r3, #16
 8023200:	f53f ae76 	bmi.w	8022ef0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8023204:	3a01      	subs	r2, #1
 8023206:	4293      	cmp	r3, r2
 8023208:	f6bf ae72 	bge.w	8022ef0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802320c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023210:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8023214:	f1bb 0f00 	cmp.w	fp, #0
 8023218:	dc70      	bgt.n	80232fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 802321a:	9b07      	ldr	r3, [sp, #28]
 802321c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023220:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023222:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8023226:	930a      	str	r3, [sp, #40]	; 0x28
 8023228:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802322a:	2b00      	cmp	r3, #0
 802322c:	f340 81ae 	ble.w	802358c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8023230:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023234:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023238:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802323c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802323e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023242:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023246:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802324a:	eef0 6a62 	vmov.f32	s13, s5
 802324e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023252:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023256:	ee77 2a62 	vsub.f32	s5, s14, s5
 802325a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 802325e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023262:	eef0 6a43 	vmov.f32	s13, s6
 8023266:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802326a:	ee12 2a90 	vmov	r2, s5
 802326e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023272:	fb92 f3f3 	sdiv	r3, r2, r3
 8023276:	ee13 2a10 	vmov	r2, s6
 802327a:	9327      	str	r3, [sp, #156]	; 0x9c
 802327c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802327e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023282:	9328      	str	r3, [sp, #160]	; 0xa0
 8023284:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023286:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8023288:	3b01      	subs	r3, #1
 802328a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802328e:	9316      	str	r3, [sp, #88]	; 0x58
 8023290:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023292:	bf08      	it	eq
 8023294:	4613      	moveq	r3, r2
 8023296:	ee16 5a90 	vmov	r5, s13
 802329a:	9307      	str	r3, [sp, #28]
 802329c:	eeb0 3a67 	vmov.f32	s6, s15
 80232a0:	eef0 2a47 	vmov.f32	s5, s14
 80232a4:	e5f8      	b.n	8022e98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80232a6:	2800      	cmp	r0, #0
 80232a8:	f43f ae6b 	beq.w	8022f82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80232ac:	f818 1001 	ldrb.w	r1, [r8, r1]
 80232b0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80232b4:	9108      	str	r1, [sp, #32]
 80232b6:	0e09      	lsrs	r1, r1, #24
 80232b8:	9110      	str	r1, [sp, #64]	; 0x40
 80232ba:	e662      	b.n	8022f82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80232bc:	f113 0801 	adds.w	r8, r3, #1
 80232c0:	f53f af74 	bmi.w	80231ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80232c4:	4541      	cmp	r1, r8
 80232c6:	f6ff af71 	blt.w	80231ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80232ca:	f11c 0801 	adds.w	r8, ip, #1
 80232ce:	f53f af6d 	bmi.w	80231ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80232d2:	45c6      	cmp	lr, r8
 80232d4:	f6ff af6a 	blt.w	80231ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80232d8:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 80232dc:	b209      	sxth	r1, r1
 80232de:	fa0f f38e 	sxth.w	r3, lr
 80232e2:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80232e6:	9301      	str	r3, [sp, #4]
 80232e8:	9100      	str	r1, [sp, #0]
 80232ea:	4633      	mov	r3, r6
 80232ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80232ee:	9819      	ldr	r0, [sp, #100]	; 0x64
 80232f0:	4639      	mov	r1, r7
 80232f2:	f7ff fc7a 	bl	8022bea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80232f6:	e759      	b.n	80231ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80232f8:	fffff800 	.word	0xfffff800
 80232fc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80232fe:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8023300:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023304:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023306:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802330a:	1427      	asrs	r7, r4, #16
 802330c:	142b      	asrs	r3, r5, #16
 802330e:	fb01 7303 	mla	r3, r1, r3, r7
 8023312:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023314:	18e7      	adds	r7, r4, r3
 8023316:	5ce3      	ldrb	r3, [r4, r3]
 8023318:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802331c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8023320:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023324:	2a00      	cmp	r2, #0
 8023326:	f000 8127 	beq.w	8023578 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802332a:	f897 e001 	ldrb.w	lr, [r7, #1]
 802332e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8023332:	940d      	str	r4, [sp, #52]	; 0x34
 8023334:	0e24      	lsrs	r4, r4, #24
 8023336:	9414      	str	r4, [sp, #80]	; 0x50
 8023338:	b170      	cbz	r0, 8023358 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802333a:	eb07 0e01 	add.w	lr, r7, r1
 802333e:	5c79      	ldrb	r1, [r7, r1]
 8023340:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023344:	9109      	str	r1, [sp, #36]	; 0x24
 8023346:	0e09      	lsrs	r1, r1, #24
 8023348:	9111      	str	r1, [sp, #68]	; 0x44
 802334a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802334e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023352:	910e      	str	r1, [sp, #56]	; 0x38
 8023354:	0e09      	lsrs	r1, r1, #24
 8023356:	9115      	str	r1, [sp, #84]	; 0x54
 8023358:	b292      	uxth	r2, r2
 802335a:	b280      	uxth	r0, r0
 802335c:	fb02 f800 	mul.w	r8, r2, r0
 8023360:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023364:	0112      	lsls	r2, r2, #4
 8023366:	eba2 0e08 	sub.w	lr, r2, r8
 802336a:	b280      	uxth	r0, r0
 802336c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8023370:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023372:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8023374:	fa1f fe8e 	uxth.w	lr, lr
 8023378:	1a09      	subs	r1, r1, r0
 802337a:	b289      	uxth	r1, r1
 802337c:	fb0e f202 	mul.w	r2, lr, r2
 8023380:	fb01 220c 	mla	r2, r1, ip, r2
 8023384:	fb00 2204 	mla	r2, r0, r4, r2
 8023388:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802338a:	fb08 2204 	mla	r2, r8, r4, r2
 802338e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8023392:	2a00      	cmp	r2, #0
 8023394:	f000 80e5 	beq.w	8023562 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8023398:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802339c:	d019      	beq.n	80233d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 802339e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80233a2:	fb0c fa0a 	mul.w	sl, ip, sl
 80233a6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80233aa:	fb0c fc03 	mul.w	ip, ip, r3
 80233ae:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80233b2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80233b6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80233ba:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80233be:	4453      	add	r3, sl
 80233c0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80233c4:	0a1b      	lsrs	r3, r3, #8
 80233c6:	0a3f      	lsrs	r7, r7, #8
 80233c8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80233cc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80233d0:	433b      	orrs	r3, r7
 80233d2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80233d4:	2cff      	cmp	r4, #255	; 0xff
 80233d6:	d020      	beq.n	802341a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 80233d8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80233da:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80233de:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80233e0:	4367      	muls	r7, r4
 80233e2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80233e4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80233e8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80233ea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80233ee:	fb04 fa0a 	mul.w	sl, r4, sl
 80233f2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80233f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80233fa:	44bc      	add	ip, r7
 80233fc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023400:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023404:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023408:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802340c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023410:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023414:	ea4c 040a 	orr.w	r4, ip, sl
 8023418:	940d      	str	r4, [sp, #52]	; 0x34
 802341a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802341c:	2cff      	cmp	r4, #255	; 0xff
 802341e:	d020      	beq.n	8023462 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8023420:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8023422:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8023426:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8023428:	4367      	muls	r7, r4
 802342a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802342c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023430:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8023432:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023436:	fb04 fa0a 	mul.w	sl, r4, sl
 802343a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802343e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023442:	44bc      	add	ip, r7
 8023444:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023448:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802344c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023450:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023454:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023458:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802345c:	ea4c 040a 	orr.w	r4, ip, sl
 8023460:	9409      	str	r4, [sp, #36]	; 0x24
 8023462:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8023464:	2cff      	cmp	r4, #255	; 0xff
 8023466:	d020      	beq.n	80234aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8023468:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802346a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802346e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8023470:	4367      	muls	r7, r4
 8023472:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023474:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023478:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802347a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802347e:	fb04 fa0a 	mul.w	sl, r4, sl
 8023482:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023486:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802348a:	44bc      	add	ip, r7
 802348c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023490:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023494:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023498:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802349c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80234a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80234a4:	ea4c 040a 	orr.w	r4, ip, sl
 80234a8:	940e      	str	r4, [sp, #56]	; 0x38
 80234aa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80234ac:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80234b0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80234b2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80234b6:	fb0e f707 	mul.w	r7, lr, r7
 80234ba:	fb01 770c 	mla	r7, r1, ip, r7
 80234be:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80234c2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80234c4:	fb00 770c 	mla	r7, r0, ip, r7
 80234c8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80234cc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80234ce:	fb08 770c 	mla	r7, r8, ip, r7
 80234d2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80234d6:	fb0e fe0c 	mul.w	lr, lr, ip
 80234da:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80234de:	fb01 e303 	mla	r3, r1, r3, lr
 80234e2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80234e4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80234e8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80234ea:	fb00 330a 	mla	r3, r0, sl, r3
 80234ee:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80234f2:	fb08 3c0c 	mla	ip, r8, ip, r3
 80234f6:	f8b9 3000 	ldrh.w	r3, [r9]
 80234fa:	43d2      	mvns	r2, r2
 80234fc:	1218      	asrs	r0, r3, #8
 80234fe:	b2d2      	uxtb	r2, r2
 8023500:	10d9      	asrs	r1, r3, #3
 8023502:	0a3f      	lsrs	r7, r7, #8
 8023504:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023508:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802350c:	00db      	lsls	r3, r3, #3
 802350e:	4350      	muls	r0, r2
 8023510:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8023514:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023518:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802351c:	b2db      	uxtb	r3, r3
 802351e:	ea47 070c 	orr.w	r7, r7, ip
 8023522:	4351      	muls	r1, r2
 8023524:	4353      	muls	r3, r2
 8023526:	1c42      	adds	r2, r0, #1
 8023528:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802352c:	0c3a      	lsrs	r2, r7, #16
 802352e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023532:	4a18      	ldr	r2, [pc, #96]	; (8023594 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8023534:	b2c0      	uxtb	r0, r0
 8023536:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 802353a:	1c4a      	adds	r2, r1, #1
 802353c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023540:	0a3a      	lsrs	r2, r7, #8
 8023542:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023546:	00c9      	lsls	r1, r1, #3
 8023548:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802354c:	4301      	orrs	r1, r0
 802354e:	1c58      	adds	r0, r3, #1
 8023550:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8023554:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8023558:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 802355c:	4308      	orrs	r0, r1
 802355e:	f8a9 0000 	strh.w	r0, [r9]
 8023562:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023564:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8023566:	441a      	add	r2, r3
 8023568:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802356a:	9225      	str	r2, [sp, #148]	; 0x94
 802356c:	f109 0902 	add.w	r9, r9, #2
 8023570:	441d      	add	r5, r3
 8023572:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8023576:	e64d      	b.n	8023214 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8023578:	2800      	cmp	r0, #0
 802357a:	f43f aeed 	beq.w	8023358 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802357e:	5c79      	ldrb	r1, [r7, r1]
 8023580:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023584:	9109      	str	r1, [sp, #36]	; 0x24
 8023586:	0e09      	lsrs	r1, r1, #24
 8023588:	9111      	str	r1, [sp, #68]	; 0x44
 802358a:	e6e5      	b.n	8023358 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802358c:	b01b      	add	sp, #108	; 0x6c
 802358e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023592:	bf00      	nop
 8023594:	fffff800 	.word	0xfffff800

08023598 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8023598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802359c:	b085      	sub	sp, #20
 802359e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80235a2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80235a6:	9103      	str	r1, [sp, #12]
 80235a8:	fb00 7406 	mla	r4, r0, r6, r7
 80235ac:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 80235b0:	2800      	cmp	r0, #0
 80235b2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80235b6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 80235ba:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80235be:	9501      	str	r5, [sp, #4]
 80235c0:	eb03 0904 	add.w	r9, r3, r4
 80235c4:	f2c0 8150 	blt.w	8023868 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80235c8:	4583      	cmp	fp, r0
 80235ca:	f340 814d 	ble.w	8023868 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80235ce:	2f00      	cmp	r7, #0
 80235d0:	f2c0 8146 	blt.w	8023860 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80235d4:	42be      	cmp	r6, r7
 80235d6:	f340 8143 	ble.w	8023860 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80235da:	f813 c004 	ldrb.w	ip, [r3, r4]
 80235de:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 80235e2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80235e6:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80235ea:	4355      	muls	r5, r2
 80235ec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80235f0:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80235f4:	fb0c f203 	mul.w	r2, ip, r3
 80235f8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80235fc:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8023600:	441d      	add	r5, r3
 8023602:	f102 0320 	add.w	r3, r2, #32
 8023606:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802360a:	0a1b      	lsrs	r3, r3, #8
 802360c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8023610:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023614:	431c      	orrs	r4, r3
 8023616:	1c7b      	adds	r3, r7, #1
 8023618:	f100 812b 	bmi.w	8023872 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 802361c:	429e      	cmp	r6, r3
 802361e:	f340 8128 	ble.w	8023872 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8023622:	2900      	cmp	r1, #0
 8023624:	f000 8128 	beq.w	8023878 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8023628:	9a01      	ldr	r2, [sp, #4]
 802362a:	f899 3001 	ldrb.w	r3, [r9, #1]
 802362e:	8855      	ldrh	r5, [r2, #2]
 8023630:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8023634:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8023638:	fb08 f802 	mul.w	r8, r8, r2
 802363c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023640:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8023644:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8023648:	435d      	muls	r5, r3
 802364a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802364e:	44d0      	add	r8, sl
 8023650:	f105 0a20 	add.w	sl, r5, #32
 8023654:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8023658:	0a2d      	lsrs	r5, r5, #8
 802365a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802365e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023662:	432a      	orrs	r2, r5
 8023664:	3001      	adds	r0, #1
 8023666:	f100 810d 	bmi.w	8023884 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802366a:	4583      	cmp	fp, r0
 802366c:	f340 810a 	ble.w	8023884 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8023670:	f1be 0f00 	cmp.w	lr, #0
 8023674:	f000 810b 	beq.w	802388e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8023678:	2f00      	cmp	r7, #0
 802367a:	f2c0 8100 	blt.w	802387e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 802367e:	42be      	cmp	r6, r7
 8023680:	f340 80fd 	ble.w	802387e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8023684:	9801      	ldr	r0, [sp, #4]
 8023686:	f819 5006 	ldrb.w	r5, [r9, r6]
 802368a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802368e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8023692:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8023696:	fb0a fa00 	mul.w	sl, sl, r0
 802369a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802369e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80236a2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80236a6:	fb05 f808 	mul.w	r8, r5, r8
 80236aa:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80236ae:	4482      	add	sl, r0
 80236b0:	f108 0020 	add.w	r0, r8, #32
 80236b4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80236b8:	0a00      	lsrs	r0, r0, #8
 80236ba:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80236be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80236c2:	ea4b 0b00 	orr.w	fp, fp, r0
 80236c6:	3701      	adds	r7, #1
 80236c8:	f100 80e6 	bmi.w	8023898 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80236cc:	42be      	cmp	r6, r7
 80236ce:	f340 80e3 	ble.w	8023898 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80236d2:	2900      	cmp	r1, #0
 80236d4:	f000 80e3 	beq.w	802389e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 80236d8:	3601      	adds	r6, #1
 80236da:	9801      	ldr	r0, [sp, #4]
 80236dc:	f819 7006 	ldrb.w	r7, [r9, r6]
 80236e0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80236e4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80236e8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80236ec:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80236f0:	fb09 f906 	mul.w	r9, r9, r6
 80236f4:	fb07 f800 	mul.w	r8, r7, r0
 80236f8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80236fc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8023700:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8023704:	44d1      	add	r9, sl
 8023706:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802370a:	f108 0020 	add.w	r0, r8, #32
 802370e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023712:	0a00      	lsrs	r0, r0, #8
 8023714:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023718:	4330      	orrs	r0, r6
 802371a:	b28e      	uxth	r6, r1
 802371c:	fa1f f98e 	uxth.w	r9, lr
 8023720:	fb06 f809 	mul.w	r8, r6, r9
 8023724:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8023728:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 802372c:	0136      	lsls	r6, r6, #4
 802372e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023732:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8023736:	9601      	str	r6, [sp, #4]
 8023738:	ea4a 0404 	orr.w	r4, sl, r4
 802373c:	fa1f f689 	uxth.w	r6, r9
 8023740:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023744:	fb11 f90e 	smulbb	r9, r1, lr
 8023748:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 802374c:	9602      	str	r6, [sp, #8]
 802374e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023752:	4626      	mov	r6, r4
 8023754:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023758:	f1ce 0410 	rsb	r4, lr, #16
 802375c:	1a64      	subs	r4, r4, r1
 802375e:	ea4a 0202 	orr.w	r2, sl, r2
 8023762:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8023766:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802376a:	434a      	muls	r2, r1
 802376c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8023770:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023774:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023778:	fb04 2406 	mla	r4, r4, r6, r2
 802377c:	ea4a 0000 	orr.w	r0, sl, r0
 8023780:	fb09 4200 	mla	r2, r9, r0, r4
 8023784:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8023788:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802378c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023790:	ea44 0b0b 	orr.w	fp, r4, fp
 8023794:	9c01      	ldr	r4, [sp, #4]
 8023796:	9e02      	ldr	r6, [sp, #8]
 8023798:	9903      	ldr	r1, [sp, #12]
 802379a:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 802379e:	1ba4      	subs	r4, r4, r6
 80237a0:	9e01      	ldr	r6, [sp, #4]
 80237a2:	8808      	ldrh	r0, [r1, #0]
 80237a4:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80237a8:	eba6 0608 	sub.w	r6, r6, r8
 80237ac:	b2b6      	uxth	r6, r6
 80237ae:	b2a4      	uxth	r4, r4
 80237b0:	4373      	muls	r3, r6
 80237b2:	fb0c 3304 	mla	r3, ip, r4, r3
 80237b6:	9c02      	ldr	r4, [sp, #8]
 80237b8:	fb04 3505 	mla	r5, r4, r5, r3
 80237bc:	fb08 5707 	mla	r7, r8, r7, r5
 80237c0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80237c4:	b289      	uxth	r1, r1
 80237c6:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80237ca:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80237ce:	434f      	muls	r7, r1
 80237d0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80237d4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80237d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80237dc:	1c7b      	adds	r3, r7, #1
 80237de:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80237e2:	ea42 0e0e 	orr.w	lr, r2, lr
 80237e6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80237ea:	fa1f f28e 	uxth.w	r2, lr
 80237ee:	1203      	asrs	r3, r0, #8
 80237f0:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80237f4:	b2ff      	uxtb	r7, r7
 80237f6:	1215      	asrs	r5, r2, #8
 80237f8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80237fc:	fb13 f307 	smulbb	r3, r3, r7
 8023800:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023804:	fb05 3501 	mla	r5, r5, r1, r3
 8023808:	10c3      	asrs	r3, r0, #3
 802380a:	10d4      	asrs	r4, r2, #3
 802380c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8023810:	fb13 f307 	smulbb	r3, r3, r7
 8023814:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8023818:	fb04 3401 	mla	r4, r4, r1, r3
 802381c:	00c3      	lsls	r3, r0, #3
 802381e:	00d2      	lsls	r2, r2, #3
 8023820:	b2db      	uxtb	r3, r3
 8023822:	fb13 f307 	smulbb	r3, r3, r7
 8023826:	b2d2      	uxtb	r2, r2
 8023828:	fb02 3101 	mla	r1, r2, r1, r3
 802382c:	b2ad      	uxth	r5, r5
 802382e:	b289      	uxth	r1, r1
 8023830:	b2a4      	uxth	r4, r4
 8023832:	1c6b      	adds	r3, r5, #1
 8023834:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023838:	1c62      	adds	r2, r4, #1
 802383a:	1c4b      	adds	r3, r1, #1
 802383c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023840:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8023844:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023848:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802384c:	0964      	lsrs	r4, r4, #5
 802384e:	432b      	orrs	r3, r5
 8023850:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8023854:	9a03      	ldr	r2, [sp, #12]
 8023856:	4323      	orrs	r3, r4
 8023858:	8013      	strh	r3, [r2, #0]
 802385a:	b005      	add	sp, #20
 802385c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023860:	f04f 0c00 	mov.w	ip, #0
 8023864:	4664      	mov	r4, ip
 8023866:	e6d6      	b.n	8023616 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8023868:	2300      	movs	r3, #0
 802386a:	469c      	mov	ip, r3
 802386c:	461a      	mov	r2, r3
 802386e:	461c      	mov	r4, r3
 8023870:	e6f8      	b.n	8023664 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8023872:	2300      	movs	r3, #0
 8023874:	461a      	mov	r2, r3
 8023876:	e6f5      	b.n	8023664 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8023878:	460b      	mov	r3, r1
 802387a:	460a      	mov	r2, r1
 802387c:	e6f2      	b.n	8023664 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802387e:	2500      	movs	r5, #0
 8023880:	46ab      	mov	fp, r5
 8023882:	e720      	b.n	80236c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8023884:	2700      	movs	r7, #0
 8023886:	463d      	mov	r5, r7
 8023888:	4638      	mov	r0, r7
 802388a:	46bb      	mov	fp, r7
 802388c:	e745      	b.n	802371a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802388e:	4677      	mov	r7, lr
 8023890:	4675      	mov	r5, lr
 8023892:	4670      	mov	r0, lr
 8023894:	46f3      	mov	fp, lr
 8023896:	e740      	b.n	802371a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8023898:	2700      	movs	r7, #0
 802389a:	4638      	mov	r0, r7
 802389c:	e73d      	b.n	802371a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802389e:	460f      	mov	r7, r1
 80238a0:	4608      	mov	r0, r1
 80238a2:	e73a      	b.n	802371a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080238a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80238a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80238a8:	b097      	sub	sp, #92	; 0x5c
 80238aa:	9214      	str	r2, [sp, #80]	; 0x50
 80238ac:	9308      	str	r3, [sp, #32]
 80238ae:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80238b0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80238b4:	9312      	str	r3, [sp, #72]	; 0x48
 80238b6:	9111      	str	r1, [sp, #68]	; 0x44
 80238b8:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80238bc:	9015      	str	r0, [sp, #84]	; 0x54
 80238be:	6850      	ldr	r0, [r2, #4]
 80238c0:	6812      	ldr	r2, [r2, #0]
 80238c2:	fb00 1303 	mla	r3, r0, r3, r1
 80238c6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80238ca:	9309      	str	r3, [sp, #36]	; 0x24
 80238cc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80238ce:	681b      	ldr	r3, [r3, #0]
 80238d0:	930b      	str	r3, [sp, #44]	; 0x2c
 80238d2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80238d4:	685b      	ldr	r3, [r3, #4]
 80238d6:	930c      	str	r3, [sp, #48]	; 0x30
 80238d8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80238dc:	930a      	str	r3, [sp, #40]	; 0x28
 80238de:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80238e0:	2b00      	cmp	r3, #0
 80238e2:	dc03      	bgt.n	80238ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80238e4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80238e6:	2b00      	cmp	r3, #0
 80238e8:	f340 83cb 	ble.w	8024082 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80238ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80238ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80238f2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80238f6:	1e48      	subs	r0, r1, #1
 80238f8:	1e55      	subs	r5, r2, #1
 80238fa:	9b08      	ldr	r3, [sp, #32]
 80238fc:	2b00      	cmp	r3, #0
 80238fe:	f340 81a3 	ble.w	8023c48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8023902:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8023904:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023906:	1436      	asrs	r6, r6, #16
 8023908:	ea4f 4323 	mov.w	r3, r3, asr #16
 802390c:	d406      	bmi.n	802391c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802390e:	4286      	cmp	r6, r0
 8023910:	da04      	bge.n	802391c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8023912:	2b00      	cmp	r3, #0
 8023914:	db02      	blt.n	802391c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8023916:	42ab      	cmp	r3, r5
 8023918:	f2c0 8197 	blt.w	8023c4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802391c:	3601      	adds	r6, #1
 802391e:	f100 8184 	bmi.w	8023c2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023922:	42b1      	cmp	r1, r6
 8023924:	f2c0 8181 	blt.w	8023c2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023928:	3301      	adds	r3, #1
 802392a:	f100 817e 	bmi.w	8023c2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802392e:	429a      	cmp	r2, r3
 8023930:	f2c0 817b 	blt.w	8023c2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023934:	9b08      	ldr	r3, [sp, #32]
 8023936:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8023938:	9313      	str	r3, [sp, #76]	; 0x4c
 802393a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802393e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023940:	2b00      	cmp	r3, #0
 8023942:	f340 81a4 	ble.w	8023c8e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8023946:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023948:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802394a:	1418      	asrs	r0, r3, #16
 802394c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802394e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8023952:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023954:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8023958:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802395a:	142d      	asrs	r5, r5, #16
 802395c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8023960:	f100 81f8 	bmi.w	8023d54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8023964:	f102 3eff 	add.w	lr, r2, #4294967295	; 0xffffffff
 8023968:	4575      	cmp	r5, lr
 802396a:	f280 81f3 	bge.w	8023d54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802396e:	2800      	cmp	r0, #0
 8023970:	f2c0 81f0 	blt.w	8023d54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8023974:	f103 3eff 	add.w	lr, r3, #4294967295	; 0xffffffff
 8023978:	4570      	cmp	r0, lr
 802397a:	f280 81eb 	bge.w	8023d54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802397e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023980:	b212      	sxth	r2, r2
 8023982:	fb00 5002 	mla	r0, r0, r2, r5
 8023986:	fa1f fe81 	uxth.w	lr, r1
 802398a:	eb03 0a00 	add.w	sl, r3, r0
 802398e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8023992:	f813 9000 	ldrb.w	r9, [r3, r0]
 8023996:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802399a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802399e:	b29b      	uxth	r3, r3
 80239a0:	f1bc 0f00 	cmp.w	ip, #0
 80239a4:	f000 81b9 	beq.w	8023d1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80239a8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80239ac:	940d      	str	r4, [sp, #52]	; 0x34
 80239ae:	eb0a 0b02 	add.w	fp, sl, r2
 80239b2:	fa1f fa8c 	uxth.w	sl, ip
 80239b6:	fb0a fe0e 	mul.w	lr, sl, lr
 80239ba:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80239be:	fa1f fa8a 	uxth.w	sl, sl
 80239c2:	eba5 050e 	sub.w	r5, r5, lr
 80239c6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80239ca:	940e      	str	r4, [sp, #56]	; 0x38
 80239cc:	eba3 030a 	sub.w	r3, r3, sl
 80239d0:	b2ad      	uxth	r5, r5
 80239d2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80239d4:	b29b      	uxth	r3, r3
 80239d6:	fb08 f505 	mul.w	r5, r8, r5
 80239da:	fb09 5303 	mla	r3, r9, r3, r5
 80239de:	fb0a 3304 	mla	r3, sl, r4, r3
 80239e2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80239e4:	fb0e 3304 	mla	r3, lr, r4, r3
 80239e8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80239ec:	2b00      	cmp	r3, #0
 80239ee:	f000 810f 	beq.w	8023c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80239f2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80239f4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80239f8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80239fc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8023a00:	f000 8190 	beq.w	8023d24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8023a04:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023a08:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023a0c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023a10:	fb09 f000 	mul.w	r0, r9, r0
 8023a14:	fb0a fe0e 	mul.w	lr, sl, lr
 8023a18:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8023a1c:	f100 0b20 	add.w	fp, r0, #32
 8023a20:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023a24:	44ce      	add	lr, r9
 8023a26:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8023a2a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023a2e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023a32:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023a36:	ea4e 0909 	orr.w	r9, lr, r9
 8023a3a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023a3e:	8868      	ldrh	r0, [r5, #2]
 8023a40:	d019      	beq.n	8023a76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8023a42:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023a46:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023a4a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023a4e:	fb08 f800 	mul.w	r8, r8, r0
 8023a52:	fb0a fe0e 	mul.w	lr, sl, lr
 8023a56:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8023a5a:	f108 0b20 	add.w	fp, r8, #32
 8023a5e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023a62:	4486      	add	lr, r0
 8023a64:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8023a68:	0a00      	lsrs	r0, r0, #8
 8023a6a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023a6e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023a72:	ea4e 0000 	orr.w	r0, lr, r0
 8023a76:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8023a7a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8023a7e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023a82:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023a86:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023a8a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023a8e:	ea4e 0909 	orr.w	r9, lr, r9
 8023a92:	ea4a 0000 	orr.w	r0, sl, r0
 8023a96:	f1bc 0f00 	cmp.w	ip, #0
 8023a9a:	f000 8145 	beq.w	8023d28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8023a9e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8023aa2:	3a01      	subs	r2, #1
 8023aa4:	0052      	lsls	r2, r2, #1
 8023aa6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023aa8:	3202      	adds	r2, #2
 8023aaa:	2cff      	cmp	r4, #255	; 0xff
 8023aac:	eb05 0e02 	add.w	lr, r5, r2
 8023ab0:	5aaa      	ldrh	r2, [r5, r2]
 8023ab2:	d018      	beq.n	8023ae6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8023ab4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8023ab8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023abc:	fb04 fa02 	mul.w	sl, r4, r2
 8023ac0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023ac4:	fb08 f805 	mul.w	r8, r8, r5
 8023ac8:	f10a 0520 	add.w	r5, sl, #32
 8023acc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8023ad0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023ad4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023ad8:	4442      	add	r2, r8
 8023ada:	0a2d      	lsrs	r5, r5, #8
 8023adc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8023ae0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023ae4:	432a      	orrs	r2, r5
 8023ae6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023ae8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8023aec:	2cff      	cmp	r4, #255	; 0xff
 8023aee:	d01a      	beq.n	8023b26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8023af0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8023af4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023af8:	fb04 fa05 	mul.w	sl, r4, r5
 8023afc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023b00:	fb08 f80e 	mul.w	r8, r8, lr
 8023b04:	f10a 0e20 	add.w	lr, sl, #32
 8023b08:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8023b0c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8023b10:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023b14:	4445      	add	r5, r8
 8023b16:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023b1a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8023b1e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8023b22:	ea45 050e 	orr.w	r5, r5, lr
 8023b26:	fb1c fe01 	smulbb	lr, ip, r1
 8023b2a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8023b2e:	f1cc 0810 	rsb	r8, ip, #16
 8023b32:	eba8 0801 	sub.w	r8, r8, r1
 8023b36:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023b3a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8023b3e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8023b42:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8023b46:	4341      	muls	r1, r0
 8023b48:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023b4c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023b50:	ea4a 0202 	orr.w	r2, sl, r2
 8023b54:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8023b58:	fb09 1108 	mla	r1, r9, r8, r1
 8023b5c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023b60:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023b64:	fb0c 1102 	mla	r1, ip, r2, r1
 8023b68:	ea4b 0505 	orr.w	r5, fp, r5
 8023b6c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8023b70:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023b74:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023b78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023b7c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023b80:	ea42 0e0e 	orr.w	lr, r2, lr
 8023b84:	fa1f f28e 	uxth.w	r2, lr
 8023b88:	2bff      	cmp	r3, #255	; 0xff
 8023b8a:	d103      	bne.n	8023b94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8023b8c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8023b8e:	29ff      	cmp	r1, #255	; 0xff
 8023b90:	f000 80de 	beq.w	8023d50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8023b94:	990a      	ldr	r1, [sp, #40]	; 0x28
 8023b96:	8838      	ldrh	r0, [r7, #0]
 8023b98:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023b9a:	434b      	muls	r3, r1
 8023b9c:	f103 0c01 	add.w	ip, r3, #1
 8023ba0:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8023ba4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8023ba8:	fa5f fc83 	uxtb.w	ip, r3
 8023bac:	1203      	asrs	r3, r0, #8
 8023bae:	1215      	asrs	r5, r2, #8
 8023bb0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023bb4:	fb13 f30c 	smulbb	r3, r3, ip
 8023bb8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023bbc:	fb05 3501 	mla	r5, r5, r1, r3
 8023bc0:	10c3      	asrs	r3, r0, #3
 8023bc2:	10d1      	asrs	r1, r2, #3
 8023bc4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8023bc8:	fb13 f30c 	smulbb	r3, r3, ip
 8023bcc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023bd0:	fb01 3104 	mla	r1, r1, r4, r3
 8023bd4:	00c3      	lsls	r3, r0, #3
 8023bd6:	00d2      	lsls	r2, r2, #3
 8023bd8:	b2db      	uxtb	r3, r3
 8023bda:	b2d2      	uxtb	r2, r2
 8023bdc:	fb13 f30c 	smulbb	r3, r3, ip
 8023be0:	b2ad      	uxth	r5, r5
 8023be2:	fb02 3304 	mla	r3, r2, r4, r3
 8023be6:	b29a      	uxth	r2, r3
 8023be8:	1c6b      	adds	r3, r5, #1
 8023bea:	b289      	uxth	r1, r1
 8023bec:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023bf0:	1c53      	adds	r3, r2, #1
 8023bf2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023bf6:	1c4a      	adds	r2, r1, #1
 8023bf8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023bfc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023c00:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023c04:	0949      	lsrs	r1, r1, #5
 8023c06:	432b      	orrs	r3, r5
 8023c08:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023c0c:	430b      	orrs	r3, r1
 8023c0e:	803b      	strh	r3, [r7, #0]
 8023c10:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023c12:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023c14:	4413      	add	r3, r2
 8023c16:	9321      	str	r3, [sp, #132]	; 0x84
 8023c18:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023c1a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023c1c:	441a      	add	r2, r3
 8023c1e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023c20:	9222      	str	r2, [sp, #136]	; 0x88
 8023c22:	3b01      	subs	r3, #1
 8023c24:	3702      	adds	r7, #2
 8023c26:	9313      	str	r3, [sp, #76]	; 0x4c
 8023c28:	e689      	b.n	802393e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8023c2a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023c2c:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8023c2e:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8023c30:	4433      	add	r3, r6
 8023c32:	9321      	str	r3, [sp, #132]	; 0x84
 8023c34:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023c36:	441c      	add	r4, r3
 8023c38:	9b08      	ldr	r3, [sp, #32]
 8023c3a:	9422      	str	r4, [sp, #136]	; 0x88
 8023c3c:	3b01      	subs	r3, #1
 8023c3e:	9308      	str	r3, [sp, #32]
 8023c40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023c42:	3302      	adds	r3, #2
 8023c44:	9309      	str	r3, [sp, #36]	; 0x24
 8023c46:	e658      	b.n	80238fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8023c48:	d028      	beq.n	8023c9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8023c4a:	9b08      	ldr	r3, [sp, #32]
 8023c4c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8023c4e:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8023c50:	3b01      	subs	r3, #1
 8023c52:	fb00 5003 	mla	r0, r0, r3, r5
 8023c56:	1400      	asrs	r0, r0, #16
 8023c58:	f53f ae6c 	bmi.w	8023934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023c5c:	3901      	subs	r1, #1
 8023c5e:	4288      	cmp	r0, r1
 8023c60:	f6bf ae68 	bge.w	8023934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023c64:	9924      	ldr	r1, [sp, #144]	; 0x90
 8023c66:	9822      	ldr	r0, [sp, #136]	; 0x88
 8023c68:	fb01 0303 	mla	r3, r1, r3, r0
 8023c6c:	141b      	asrs	r3, r3, #16
 8023c6e:	f53f ae61 	bmi.w	8023934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023c72:	3a01      	subs	r2, #1
 8023c74:	4293      	cmp	r3, r2
 8023c76:	f6bf ae5d 	bge.w	8023934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023c7a:	9b08      	ldr	r3, [sp, #32]
 8023c7c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8023c80:	9313      	str	r3, [sp, #76]	; 0x4c
 8023c82:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023c86:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023c88:	2b00      	cmp	r3, #0
 8023c8a:	f300 8082 	bgt.w	8023d92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8023c8e:	9b08      	ldr	r3, [sp, #32]
 8023c90:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023c94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023c96:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8023c9a:	9309      	str	r3, [sp, #36]	; 0x24
 8023c9c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023c9e:	2b00      	cmp	r3, #0
 8023ca0:	f340 81ef 	ble.w	8024082 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8023ca4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023ca8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023cac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023cb0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023cb2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023cb6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023cba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023cbe:	eef0 6a62 	vmov.f32	s13, s5
 8023cc2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023cc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023cca:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023cce:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8023cd2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023cd6:	eef0 6a43 	vmov.f32	s13, s6
 8023cda:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023cde:	ee12 2a90 	vmov	r2, s5
 8023ce2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023ce6:	fb92 f3f3 	sdiv	r3, r2, r3
 8023cea:	ee13 2a10 	vmov	r2, s6
 8023cee:	9323      	str	r3, [sp, #140]	; 0x8c
 8023cf0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023cf2:	fb92 f3f3 	sdiv	r3, r2, r3
 8023cf6:	9324      	str	r3, [sp, #144]	; 0x90
 8023cf8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023cfa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023cfc:	3b01      	subs	r3, #1
 8023cfe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023d02:	9311      	str	r3, [sp, #68]	; 0x44
 8023d04:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023d06:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8023d0a:	bf08      	it	eq
 8023d0c:	4613      	moveq	r3, r2
 8023d0e:	9308      	str	r3, [sp, #32]
 8023d10:	eeb0 3a67 	vmov.f32	s6, s15
 8023d14:	eef0 2a47 	vmov.f32	s5, s14
 8023d18:	e5e1      	b.n	80238de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023d1a:	fb08 f505 	mul.w	r5, r8, r5
 8023d1e:	fb09 5303 	mla	r3, r9, r3, r5
 8023d22:	e661      	b.n	80239e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8023d24:	4681      	mov	r9, r0
 8023d26:	e688      	b.n	8023a3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8023d28:	f1c1 0210 	rsb	r2, r1, #16
 8023d2c:	4341      	muls	r1, r0
 8023d2e:	fb09 1902 	mla	r9, r9, r2, r1
 8023d32:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023d36:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8023d3a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8023d3e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023d42:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023d46:	ea42 0909 	orr.w	r9, r2, r9
 8023d4a:	fa1f f289 	uxth.w	r2, r9
 8023d4e:	e71b      	b.n	8023b88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8023d50:	803a      	strh	r2, [r7, #0]
 8023d52:	e75d      	b.n	8023c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023d54:	f115 0e01 	adds.w	lr, r5, #1
 8023d58:	f53f af5a 	bmi.w	8023c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023d5c:	4572      	cmp	r2, lr
 8023d5e:	f6ff af57 	blt.w	8023c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023d62:	f110 0e01 	adds.w	lr, r0, #1
 8023d66:	f53f af53 	bmi.w	8023c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023d6a:	4573      	cmp	r3, lr
 8023d6c:	f6ff af50 	blt.w	8023c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023d70:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023d72:	9502      	str	r5, [sp, #8]
 8023d74:	b21b      	sxth	r3, r3
 8023d76:	b212      	sxth	r2, r2
 8023d78:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8023d7c:	9301      	str	r3, [sp, #4]
 8023d7e:	9200      	str	r2, [sp, #0]
 8023d80:	e9cd c405 	strd	ip, r4, [sp, #20]
 8023d84:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8023d88:	4639      	mov	r1, r7
 8023d8a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8023d8c:	f7ff fc04 	bl	8023598 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8023d90:	e73e      	b.n	8023c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023d92:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023d94:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023d98:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023d9a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8023d9e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023da0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023da4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023da6:	141f      	asrs	r7, r3, #16
 8023da8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023daa:	141b      	asrs	r3, r3, #16
 8023dac:	fb01 3707 	mla	r7, r1, r7, r3
 8023db0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023db2:	fa1f fc82 	uxth.w	ip, r2
 8023db6:	eb03 0a07 	add.w	sl, r3, r7
 8023dba:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8023dbe:	f813 9007 	ldrb.w	r9, [r3, r7]
 8023dc2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023dc6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023dca:	b29b      	uxth	r3, r3
 8023dcc:	2d00      	cmp	r5, #0
 8023dce:	f000 813d 	beq.w	802404c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8023dd2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8023dd6:	940f      	str	r4, [sp, #60]	; 0x3c
 8023dd8:	eb0a 0b01 	add.w	fp, sl, r1
 8023ddc:	fa1f fa85 	uxth.w	sl, r5
 8023de0:	fb0a fc0c 	mul.w	ip, sl, ip
 8023de4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8023de8:	fa1f fa8a 	uxth.w	sl, sl
 8023dec:	eba0 000c 	sub.w	r0, r0, ip
 8023df0:	eba3 030a 	sub.w	r3, r3, sl
 8023df4:	b280      	uxth	r0, r0
 8023df6:	fb08 f000 	mul.w	r0, r8, r0
 8023dfa:	b29b      	uxth	r3, r3
 8023dfc:	fb09 0303 	mla	r3, r9, r3, r0
 8023e00:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8023e02:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8023e06:	9410      	str	r4, [sp, #64]	; 0x40
 8023e08:	fb0a 3300 	mla	r3, sl, r0, r3
 8023e0c:	fb0c 3304 	mla	r3, ip, r4, r3
 8023e10:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023e14:	2b00      	cmp	r3, #0
 8023e16:	f000 810b 	beq.w	8024030 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8023e1a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8023e1c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023e1e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023e22:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8023e26:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8023e2a:	f000 8114 	beq.w	8024056 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8023e2e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023e32:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023e36:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023e3a:	fb09 f707 	mul.w	r7, r9, r7
 8023e3e:	fb0a fc0c 	mul.w	ip, sl, ip
 8023e42:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8023e46:	f107 0b20 	add.w	fp, r7, #32
 8023e4a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023e4e:	44cc      	add	ip, r9
 8023e50:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8023e54:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023e58:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023e5c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023e60:	ea4c 0909 	orr.w	r9, ip, r9
 8023e64:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023e68:	8847      	ldrh	r7, [r0, #2]
 8023e6a:	d019      	beq.n	8023ea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8023e6c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023e70:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023e74:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023e78:	fb08 f807 	mul.w	r8, r8, r7
 8023e7c:	fb0a fc0c 	mul.w	ip, sl, ip
 8023e80:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8023e84:	f108 0b20 	add.w	fp, r8, #32
 8023e88:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023e8c:	44bc      	add	ip, r7
 8023e8e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8023e92:	0a3f      	lsrs	r7, r7, #8
 8023e94:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023e98:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023e9c:	ea4c 0707 	orr.w	r7, ip, r7
 8023ea0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8023ea4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8023ea8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023eac:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023eb0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023eb4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023eb8:	ea4c 0909 	orr.w	r9, ip, r9
 8023ebc:	ea4a 0707 	orr.w	r7, sl, r7
 8023ec0:	2d00      	cmp	r5, #0
 8023ec2:	f000 80ca 	beq.w	802405a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8023ec6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023eca:	3901      	subs	r1, #1
 8023ecc:	0049      	lsls	r1, r1, #1
 8023ece:	3102      	adds	r1, #2
 8023ed0:	eb00 0c01 	add.w	ip, r0, r1
 8023ed4:	5a41      	ldrh	r1, [r0, r1]
 8023ed6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8023ed8:	28ff      	cmp	r0, #255	; 0xff
 8023eda:	d019      	beq.n	8023f10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8023edc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023ede:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8023ee2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023ee6:	fb04 fa01 	mul.w	sl, r4, r1
 8023eea:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023eee:	fb08 f800 	mul.w	r8, r8, r0
 8023ef2:	f10a 0020 	add.w	r0, sl, #32
 8023ef6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8023efa:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8023efe:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023f02:	4441      	add	r1, r8
 8023f04:	0a00      	lsrs	r0, r0, #8
 8023f06:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8023f0a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023f0e:	4301      	orrs	r1, r0
 8023f10:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023f12:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8023f16:	2cff      	cmp	r4, #255	; 0xff
 8023f18:	d01a      	beq.n	8023f50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8023f1a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8023f1e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023f22:	fb04 fa00 	mul.w	sl, r4, r0
 8023f26:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023f2a:	fb08 f80c 	mul.w	r8, r8, ip
 8023f2e:	f10a 0c20 	add.w	ip, sl, #32
 8023f32:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8023f36:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8023f3a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023f3e:	4440      	add	r0, r8
 8023f40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023f44:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8023f48:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023f4c:	ea40 000c 	orr.w	r0, r0, ip
 8023f50:	fb15 fc02 	smulbb	ip, r5, r2
 8023f54:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8023f58:	f1c5 0810 	rsb	r8, r5, #16
 8023f5c:	eba8 0802 	sub.w	r8, r8, r2
 8023f60:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023f64:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8023f68:	437a      	muls	r2, r7
 8023f6a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023f6e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8023f72:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023f76:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023f7a:	fb09 2208 	mla	r2, r9, r8, r2
 8023f7e:	ea4a 0101 	orr.w	r1, sl, r1
 8023f82:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8023f86:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023f8a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023f8e:	fb05 2201 	mla	r2, r5, r1, r2
 8023f92:	ea4b 0000 	orr.w	r0, fp, r0
 8023f96:	fb0c 2200 	mla	r2, ip, r0, r2
 8023f9a:	0d57      	lsrs	r7, r2, #21
 8023f9c:	0952      	lsrs	r2, r2, #5
 8023f9e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023fa2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023fa6:	433a      	orrs	r2, r7
 8023fa8:	2bff      	cmp	r3, #255	; 0xff
 8023faa:	b292      	uxth	r2, r2
 8023fac:	d102      	bne.n	8023fb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8023fae:	9912      	ldr	r1, [sp, #72]	; 0x48
 8023fb0:	29ff      	cmp	r1, #255	; 0xff
 8023fb2:	d063      	beq.n	802407c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8023fb4:	980a      	ldr	r0, [sp, #40]	; 0x28
 8023fb6:	f8be 1000 	ldrh.w	r1, [lr]
 8023fba:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023fbc:	4343      	muls	r3, r0
 8023fbe:	1c58      	adds	r0, r3, #1
 8023fc0:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8023fc4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8023fc8:	1208      	asrs	r0, r1, #8
 8023fca:	b2db      	uxtb	r3, r3
 8023fcc:	1215      	asrs	r5, r2, #8
 8023fce:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023fd2:	fb10 f003 	smulbb	r0, r0, r3
 8023fd6:	10cf      	asrs	r7, r1, #3
 8023fd8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023fdc:	00c9      	lsls	r1, r1, #3
 8023fde:	fb05 0504 	mla	r5, r5, r4, r0
 8023fe2:	b2c9      	uxtb	r1, r1
 8023fe4:	10d0      	asrs	r0, r2, #3
 8023fe6:	00d2      	lsls	r2, r2, #3
 8023fe8:	fb11 f103 	smulbb	r1, r1, r3
 8023fec:	b2d2      	uxtb	r2, r2
 8023fee:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023ff2:	fb02 1204 	mla	r2, r2, r4, r1
 8023ff6:	fb17 f703 	smulbb	r7, r7, r3
 8023ffa:	b2ad      	uxth	r5, r5
 8023ffc:	b292      	uxth	r2, r2
 8023ffe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024002:	fb00 7004 	mla	r0, r0, r4, r7
 8024006:	1c6b      	adds	r3, r5, #1
 8024008:	1c57      	adds	r7, r2, #1
 802400a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802400e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024012:	b280      	uxth	r0, r0
 8024014:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8024018:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802401c:	433d      	orrs	r5, r7
 802401e:	1c47      	adds	r7, r0, #1
 8024020:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8024024:	097f      	lsrs	r7, r7, #5
 8024026:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802402a:	433d      	orrs	r5, r7
 802402c:	f8ae 5000 	strh.w	r5, [lr]
 8024030:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8024032:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8024034:	4413      	add	r3, r2
 8024036:	9321      	str	r3, [sp, #132]	; 0x84
 8024038:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802403a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802403c:	441a      	add	r2, r3
 802403e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8024040:	9222      	str	r2, [sp, #136]	; 0x88
 8024042:	3b01      	subs	r3, #1
 8024044:	f10e 0e02 	add.w	lr, lr, #2
 8024048:	9313      	str	r3, [sp, #76]	; 0x4c
 802404a:	e61c      	b.n	8023c86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 802404c:	fb08 f000 	mul.w	r0, r8, r0
 8024050:	fb09 0303 	mla	r3, r9, r3, r0
 8024054:	e6dc      	b.n	8023e10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8024056:	46b9      	mov	r9, r7
 8024058:	e704      	b.n	8023e64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 802405a:	f1c2 0110 	rsb	r1, r2, #16
 802405e:	437a      	muls	r2, r7
 8024060:	fb09 2901 	mla	r9, r9, r1, r2
 8024064:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8024068:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802406c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8024070:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024074:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024078:	4302      	orrs	r2, r0
 802407a:	e795      	b.n	8023fa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802407c:	f8ae 2000 	strh.w	r2, [lr]
 8024080:	e7d6      	b.n	8024030 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8024082:	b017      	add	sp, #92	; 0x5c
 8024084:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024088 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8024088:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802408c:	b085      	sub	sp, #20
 802408e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8024092:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8024096:	9103      	str	r1, [sp, #12]
 8024098:	fb00 7406 	mla	r4, r0, r6, r7
 802409c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 80240a0:	2800      	cmp	r0, #0
 80240a2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80240a6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 80240aa:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80240ae:	9501      	str	r5, [sp, #4]
 80240b0:	eb02 0904 	add.w	r9, r2, r4
 80240b4:	f2c0 8141 	blt.w	802433a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80240b8:	4583      	cmp	fp, r0
 80240ba:	f340 813e 	ble.w	802433a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80240be:	2f00      	cmp	r7, #0
 80240c0:	f2c0 8137 	blt.w	8024332 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 80240c4:	42be      	cmp	r6, r7
 80240c6:	f340 8134 	ble.w	8024332 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 80240ca:	f812 c004 	ldrb.w	ip, [r2, r4]
 80240ce:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 80240d2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80240d6:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80240da:	4355      	muls	r5, r2
 80240dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80240e0:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80240e4:	fb0c f203 	mul.w	r2, ip, r3
 80240e8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80240ec:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80240f0:	441d      	add	r5, r3
 80240f2:	f102 0320 	add.w	r3, r2, #32
 80240f6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80240fa:	0a1b      	lsrs	r3, r3, #8
 80240fc:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8024100:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024104:	431c      	orrs	r4, r3
 8024106:	1c7b      	adds	r3, r7, #1
 8024108:	f100 811c 	bmi.w	8024344 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 802410c:	429e      	cmp	r6, r3
 802410e:	f340 8119 	ble.w	8024344 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8024112:	2900      	cmp	r1, #0
 8024114:	f000 8119 	beq.w	802434a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8024118:	9a01      	ldr	r2, [sp, #4]
 802411a:	f899 3001 	ldrb.w	r3, [r9, #1]
 802411e:	8855      	ldrh	r5, [r2, #2]
 8024120:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8024124:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8024128:	fb08 f802 	mul.w	r8, r8, r2
 802412c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024130:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8024134:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8024138:	435d      	muls	r5, r3
 802413a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802413e:	44d0      	add	r8, sl
 8024140:	f105 0a20 	add.w	sl, r5, #32
 8024144:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8024148:	0a2d      	lsrs	r5, r5, #8
 802414a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802414e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024152:	432a      	orrs	r2, r5
 8024154:	3001      	adds	r0, #1
 8024156:	f100 80fe 	bmi.w	8024356 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 802415a:	4583      	cmp	fp, r0
 802415c:	f340 80fb 	ble.w	8024356 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8024160:	f1be 0f00 	cmp.w	lr, #0
 8024164:	f000 80fc 	beq.w	8024360 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8024168:	2f00      	cmp	r7, #0
 802416a:	f2c0 80f1 	blt.w	8024350 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 802416e:	42be      	cmp	r6, r7
 8024170:	f340 80ee 	ble.w	8024350 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8024174:	9801      	ldr	r0, [sp, #4]
 8024176:	f819 5006 	ldrb.w	r5, [r9, r6]
 802417a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802417e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8024182:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8024186:	fb0a fa00 	mul.w	sl, sl, r0
 802418a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802418e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8024192:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8024196:	fb05 f808 	mul.w	r8, r5, r8
 802419a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 802419e:	4482      	add	sl, r0
 80241a0:	f108 0020 	add.w	r0, r8, #32
 80241a4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80241a8:	0a00      	lsrs	r0, r0, #8
 80241aa:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80241ae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80241b2:	ea4b 0b00 	orr.w	fp, fp, r0
 80241b6:	3701      	adds	r7, #1
 80241b8:	f100 80d7 	bmi.w	802436a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 80241bc:	42be      	cmp	r6, r7
 80241be:	f340 80d4 	ble.w	802436a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 80241c2:	2900      	cmp	r1, #0
 80241c4:	f000 80d4 	beq.w	8024370 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 80241c8:	3601      	adds	r6, #1
 80241ca:	9801      	ldr	r0, [sp, #4]
 80241cc:	f819 7006 	ldrb.w	r7, [r9, r6]
 80241d0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80241d4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80241d8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80241dc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80241e0:	fb09 f906 	mul.w	r9, r9, r6
 80241e4:	fb07 f800 	mul.w	r8, r7, r0
 80241e8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80241ec:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80241f0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80241f4:	44d1      	add	r9, sl
 80241f6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80241fa:	f108 0020 	add.w	r0, r8, #32
 80241fe:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8024202:	0a00      	lsrs	r0, r0, #8
 8024204:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024208:	4330      	orrs	r0, r6
 802420a:	b28e      	uxth	r6, r1
 802420c:	fa1f f98e 	uxth.w	r9, lr
 8024210:	fb06 f809 	mul.w	r8, r6, r9
 8024214:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8024218:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 802421c:	0136      	lsls	r6, r6, #4
 802421e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024222:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8024226:	9601      	str	r6, [sp, #4]
 8024228:	ea4a 0404 	orr.w	r4, sl, r4
 802422c:	fa1f f689 	uxth.w	r6, r9
 8024230:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8024234:	fb11 f90e 	smulbb	r9, r1, lr
 8024238:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 802423c:	9602      	str	r6, [sp, #8]
 802423e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024242:	4626      	mov	r6, r4
 8024244:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024248:	f1ce 0410 	rsb	r4, lr, #16
 802424c:	1a64      	subs	r4, r4, r1
 802424e:	ea4a 0202 	orr.w	r2, sl, r2
 8024252:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8024256:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802425a:	434a      	muls	r2, r1
 802425c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8024260:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024264:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024268:	fb04 2406 	mla	r4, r4, r6, r2
 802426c:	ea4a 0000 	orr.w	r0, sl, r0
 8024270:	fb09 4200 	mla	r2, r9, r0, r4
 8024274:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8024278:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802427c:	9801      	ldr	r0, [sp, #4]
 802427e:	9903      	ldr	r1, [sp, #12]
 8024280:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8024284:	ea44 0b0b 	orr.w	fp, r4, fp
 8024288:	9c02      	ldr	r4, [sp, #8]
 802428a:	8809      	ldrh	r1, [r1, #0]
 802428c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8024290:	1b00      	subs	r0, r0, r4
 8024292:	9c01      	ldr	r4, [sp, #4]
 8024294:	eba4 0608 	sub.w	r6, r4, r8
 8024298:	b2b6      	uxth	r6, r6
 802429a:	b280      	uxth	r0, r0
 802429c:	4373      	muls	r3, r6
 802429e:	fb0c 3300 	mla	r3, ip, r0, r3
 80242a2:	9802      	ldr	r0, [sp, #8]
 80242a4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80242a8:	fb00 3505 	mla	r5, r0, r5, r3
 80242ac:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80242b0:	fb08 5707 	mla	r7, r8, r7, r5
 80242b4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80242b8:	120b      	asrs	r3, r1, #8
 80242ba:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80242be:	ea6f 2727 	mvn.w	r7, r7, asr #8
 80242c2:	b2ff      	uxtb	r7, r7
 80242c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80242c8:	10c8      	asrs	r0, r1, #3
 80242ca:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80242ce:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80242d2:	00c9      	lsls	r1, r1, #3
 80242d4:	437b      	muls	r3, r7
 80242d6:	ea42 0e0e 	orr.w	lr, r2, lr
 80242da:	b2c9      	uxtb	r1, r1
 80242dc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80242e0:	fa1f f28e 	uxth.w	r2, lr
 80242e4:	4378      	muls	r0, r7
 80242e6:	434f      	muls	r7, r1
 80242e8:	1c59      	adds	r1, r3, #1
 80242ea:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80242ee:	1213      	asrs	r3, r2, #8
 80242f0:	f023 0307 	bic.w	r3, r3, #7
 80242f4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80242f8:	1c41      	adds	r1, r0, #1
 80242fa:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80242fe:	10d1      	asrs	r1, r2, #3
 8024300:	f021 0103 	bic.w	r1, r1, #3
 8024304:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8024308:	021b      	lsls	r3, r3, #8
 802430a:	00c9      	lsls	r1, r1, #3
 802430c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024310:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8024314:	430b      	orrs	r3, r1
 8024316:	1c79      	adds	r1, r7, #1
 8024318:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 802431c:	00d2      	lsls	r2, r2, #3
 802431e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8024322:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024326:	431a      	orrs	r2, r3
 8024328:	9b03      	ldr	r3, [sp, #12]
 802432a:	801a      	strh	r2, [r3, #0]
 802432c:	b005      	add	sp, #20
 802432e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024332:	f04f 0c00 	mov.w	ip, #0
 8024336:	4664      	mov	r4, ip
 8024338:	e6e5      	b.n	8024106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 802433a:	2300      	movs	r3, #0
 802433c:	469c      	mov	ip, r3
 802433e:	461a      	mov	r2, r3
 8024340:	461c      	mov	r4, r3
 8024342:	e707      	b.n	8024154 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8024344:	2300      	movs	r3, #0
 8024346:	461a      	mov	r2, r3
 8024348:	e704      	b.n	8024154 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802434a:	460b      	mov	r3, r1
 802434c:	460a      	mov	r2, r1
 802434e:	e701      	b.n	8024154 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8024350:	2500      	movs	r5, #0
 8024352:	46ab      	mov	fp, r5
 8024354:	e72f      	b.n	80241b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8024356:	2700      	movs	r7, #0
 8024358:	463d      	mov	r5, r7
 802435a:	4638      	mov	r0, r7
 802435c:	46bb      	mov	fp, r7
 802435e:	e754      	b.n	802420a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8024360:	4677      	mov	r7, lr
 8024362:	4675      	mov	r5, lr
 8024364:	4670      	mov	r0, lr
 8024366:	46f3      	mov	fp, lr
 8024368:	e74f      	b.n	802420a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802436a:	2700      	movs	r7, #0
 802436c:	4638      	mov	r0, r7
 802436e:	e74c      	b.n	802420a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8024370:	460f      	mov	r7, r1
 8024372:	4608      	mov	r0, r1
 8024374:	e749      	b.n	802420a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08024378 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024378:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802437c:	b093      	sub	sp, #76	; 0x4c
 802437e:	9210      	str	r2, [sp, #64]	; 0x40
 8024380:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8024382:	910e      	str	r1, [sp, #56]	; 0x38
 8024384:	9306      	str	r3, [sp, #24]
 8024386:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802438a:	9011      	str	r0, [sp, #68]	; 0x44
 802438c:	6850      	ldr	r0, [r2, #4]
 802438e:	6812      	ldr	r2, [r2, #0]
 8024390:	fb00 1303 	mla	r3, r0, r3, r1
 8024394:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024398:	9307      	str	r3, [sp, #28]
 802439a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802439c:	681b      	ldr	r3, [r3, #0]
 802439e:	9308      	str	r3, [sp, #32]
 80243a0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80243a2:	685b      	ldr	r3, [r3, #4]
 80243a4:	9309      	str	r3, [sp, #36]	; 0x24
 80243a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80243a8:	2b00      	cmp	r3, #0
 80243aa:	dc03      	bgt.n	80243b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80243ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80243ae:	2b00      	cmp	r3, #0
 80243b0:	f340 83b4 	ble.w	8024b1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80243b4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80243b6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80243ba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80243be:	1e48      	subs	r0, r1, #1
 80243c0:	1e55      	subs	r5, r2, #1
 80243c2:	9b06      	ldr	r3, [sp, #24]
 80243c4:	2b00      	cmp	r3, #0
 80243c6:	f340 8163 	ble.w	8024690 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80243ca:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80243cc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80243ce:	1436      	asrs	r6, r6, #16
 80243d0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80243d4:	d406      	bmi.n	80243e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80243d6:	4286      	cmp	r6, r0
 80243d8:	da04      	bge.n	80243e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80243da:	2b00      	cmp	r3, #0
 80243dc:	db02      	blt.n	80243e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80243de:	42ab      	cmp	r3, r5
 80243e0:	f2c0 8157 	blt.w	8024692 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 80243e4:	3601      	adds	r6, #1
 80243e6:	f100 8144 	bmi.w	8024672 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80243ea:	42b1      	cmp	r1, r6
 80243ec:	f2c0 8141 	blt.w	8024672 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80243f0:	3301      	adds	r3, #1
 80243f2:	f100 813e 	bmi.w	8024672 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80243f6:	429a      	cmp	r2, r3
 80243f8:	f2c0 813b 	blt.w	8024672 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80243fc:	9b06      	ldr	r3, [sp, #24]
 80243fe:	9f07      	ldr	r7, [sp, #28]
 8024400:	930f      	str	r3, [sp, #60]	; 0x3c
 8024402:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8024406:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024408:	2b00      	cmp	r3, #0
 802440a:	f340 8164 	ble.w	80246d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 802440e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8024410:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8024412:	1418      	asrs	r0, r3, #16
 8024414:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024416:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802441a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802441c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8024420:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024422:	142d      	asrs	r5, r5, #16
 8024424:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8024428:	f100 81ee 	bmi.w	8024808 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802442c:	f102 3eff 	add.w	lr, r2, #4294967295	; 0xffffffff
 8024430:	4575      	cmp	r5, lr
 8024432:	f280 81e9 	bge.w	8024808 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8024436:	2800      	cmp	r0, #0
 8024438:	f2c0 81e6 	blt.w	8024808 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802443c:	f103 3eff 	add.w	lr, r3, #4294967295	; 0xffffffff
 8024440:	4570      	cmp	r0, lr
 8024442:	f280 81e1 	bge.w	8024808 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8024446:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024448:	b212      	sxth	r2, r2
 802444a:	fb00 5002 	mla	r0, r0, r2, r5
 802444e:	fa1f fe81 	uxth.w	lr, r1
 8024452:	eb03 0a00 	add.w	sl, r3, r0
 8024456:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802445a:	f813 9000 	ldrb.w	r9, [r3, r0]
 802445e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8024462:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8024466:	b29b      	uxth	r3, r3
 8024468:	f1bc 0f00 	cmp.w	ip, #0
 802446c:	f000 8179 	beq.w	8024762 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8024470:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8024474:	940a      	str	r4, [sp, #40]	; 0x28
 8024476:	eb0a 0b02 	add.w	fp, sl, r2
 802447a:	fa1f fa8c 	uxth.w	sl, ip
 802447e:	fb0a fe0e 	mul.w	lr, sl, lr
 8024482:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8024486:	fa1f fa8a 	uxth.w	sl, sl
 802448a:	eba5 050e 	sub.w	r5, r5, lr
 802448e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8024492:	940b      	str	r4, [sp, #44]	; 0x2c
 8024494:	eba3 030a 	sub.w	r3, r3, sl
 8024498:	b2ad      	uxth	r5, r5
 802449a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802449c:	b29b      	uxth	r3, r3
 802449e:	fb08 f505 	mul.w	r5, r8, r5
 80244a2:	fb09 5303 	mla	r3, r9, r3, r5
 80244a6:	fb0a 3304 	mla	r3, sl, r4, r3
 80244aa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80244ac:	fb0e 3304 	mla	r3, lr, r4, r3
 80244b0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80244b4:	2b00      	cmp	r3, #0
 80244b6:	f000 80cf 	beq.w	8024658 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80244ba:	9c08      	ldr	r4, [sp, #32]
 80244bc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80244c0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80244c4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80244c8:	f000 8150 	beq.w	802476c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80244cc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80244d0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80244d4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80244d8:	fb09 f000 	mul.w	r0, r9, r0
 80244dc:	fb0a fe0e 	mul.w	lr, sl, lr
 80244e0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80244e4:	f100 0b20 	add.w	fp, r0, #32
 80244e8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80244ec:	44ce      	add	lr, r9
 80244ee:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80244f2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80244f6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80244fa:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80244fe:	ea4e 0909 	orr.w	r9, lr, r9
 8024502:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8024506:	8868      	ldrh	r0, [r5, #2]
 8024508:	d019      	beq.n	802453e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802450a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802450e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8024512:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024516:	fb08 f800 	mul.w	r8, r8, r0
 802451a:	fb0a fe0e 	mul.w	lr, sl, lr
 802451e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8024522:	f108 0b20 	add.w	fp, r8, #32
 8024526:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802452a:	4486      	add	lr, r0
 802452c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8024530:	0a00      	lsrs	r0, r0, #8
 8024532:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8024536:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802453a:	ea4e 0000 	orr.w	r0, lr, r0
 802453e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8024542:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8024546:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802454a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802454e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024552:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024556:	ea4e 0909 	orr.w	r9, lr, r9
 802455a:	ea4a 0000 	orr.w	r0, sl, r0
 802455e:	f1bc 0f00 	cmp.w	ip, #0
 8024562:	f000 8105 	beq.w	8024770 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8024566:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802456a:	3a01      	subs	r2, #1
 802456c:	0052      	lsls	r2, r2, #1
 802456e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024570:	3202      	adds	r2, #2
 8024572:	2cff      	cmp	r4, #255	; 0xff
 8024574:	eb05 0e02 	add.w	lr, r5, r2
 8024578:	5aaa      	ldrh	r2, [r5, r2]
 802457a:	d018      	beq.n	80245ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 802457c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8024580:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024584:	fb04 fa02 	mul.w	sl, r4, r2
 8024588:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802458c:	fb08 f805 	mul.w	r8, r8, r5
 8024590:	f10a 0520 	add.w	r5, sl, #32
 8024594:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8024598:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802459c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80245a0:	4442      	add	r2, r8
 80245a2:	0a2d      	lsrs	r5, r5, #8
 80245a4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80245a8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80245ac:	432a      	orrs	r2, r5
 80245ae:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80245b0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80245b4:	2cff      	cmp	r4, #255	; 0xff
 80245b6:	d01a      	beq.n	80245ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80245b8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80245bc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80245c0:	fb04 fa05 	mul.w	sl, r4, r5
 80245c4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80245c8:	fb08 f80e 	mul.w	r8, r8, lr
 80245cc:	f10a 0e20 	add.w	lr, sl, #32
 80245d0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80245d4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80245d8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80245dc:	4445      	add	r5, r8
 80245de:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80245e2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80245e6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80245ea:	ea45 050e 	orr.w	r5, r5, lr
 80245ee:	fb1c fe01 	smulbb	lr, ip, r1
 80245f2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80245f6:	f1cc 0810 	rsb	r8, ip, #16
 80245fa:	eba8 0801 	sub.w	r8, r8, r1
 80245fe:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8024602:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8024606:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802460a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802460e:	4341      	muls	r1, r0
 8024610:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024614:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024618:	ea4a 0202 	orr.w	r2, sl, r2
 802461c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8024620:	fb09 1108 	mla	r1, r9, r8, r1
 8024624:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024628:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802462c:	fb0c 1102 	mla	r1, ip, r2, r1
 8024630:	ea4b 0505 	orr.w	r5, fp, r5
 8024634:	fb0e 1e05 	mla	lr, lr, r5, r1
 8024638:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802463c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8024640:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024644:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8024648:	ea42 0e0e 	orr.w	lr, r2, lr
 802464c:	fa1f f28e 	uxth.w	r2, lr
 8024650:	2bff      	cmp	r3, #255	; 0xff
 8024652:	f040 80a1 	bne.w	8024798 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8024656:	803a      	strh	r2, [r7, #0]
 8024658:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802465a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802465c:	4413      	add	r3, r2
 802465e:	931d      	str	r3, [sp, #116]	; 0x74
 8024660:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8024662:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024664:	441a      	add	r2, r3
 8024666:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024668:	921e      	str	r2, [sp, #120]	; 0x78
 802466a:	3b01      	subs	r3, #1
 802466c:	3702      	adds	r7, #2
 802466e:	930f      	str	r3, [sp, #60]	; 0x3c
 8024670:	e6c9      	b.n	8024406 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024672:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024674:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8024676:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8024678:	4433      	add	r3, r6
 802467a:	931d      	str	r3, [sp, #116]	; 0x74
 802467c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802467e:	441c      	add	r4, r3
 8024680:	9b06      	ldr	r3, [sp, #24]
 8024682:	941e      	str	r4, [sp, #120]	; 0x78
 8024684:	3b01      	subs	r3, #1
 8024686:	9306      	str	r3, [sp, #24]
 8024688:	9b07      	ldr	r3, [sp, #28]
 802468a:	3302      	adds	r3, #2
 802468c:	9307      	str	r3, [sp, #28]
 802468e:	e698      	b.n	80243c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8024690:	d028      	beq.n	80246e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8024692:	9b06      	ldr	r3, [sp, #24]
 8024694:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8024696:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8024698:	3b01      	subs	r3, #1
 802469a:	fb00 5003 	mla	r0, r0, r3, r5
 802469e:	1400      	asrs	r0, r0, #16
 80246a0:	f53f aeac 	bmi.w	80243fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80246a4:	3901      	subs	r1, #1
 80246a6:	4288      	cmp	r0, r1
 80246a8:	f6bf aea8 	bge.w	80243fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80246ac:	9920      	ldr	r1, [sp, #128]	; 0x80
 80246ae:	981e      	ldr	r0, [sp, #120]	; 0x78
 80246b0:	fb01 0303 	mla	r3, r1, r3, r0
 80246b4:	141b      	asrs	r3, r3, #16
 80246b6:	f53f aea1 	bmi.w	80243fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80246ba:	3a01      	subs	r2, #1
 80246bc:	4293      	cmp	r3, r2
 80246be:	f6bf ae9d 	bge.w	80243fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80246c2:	9b06      	ldr	r3, [sp, #24]
 80246c4:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80246c8:	930f      	str	r3, [sp, #60]	; 0x3c
 80246ca:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80246ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80246d0:	2b00      	cmp	r3, #0
 80246d2:	f300 80b6 	bgt.w	8024842 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 80246d6:	9b06      	ldr	r3, [sp, #24]
 80246d8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80246dc:	9b07      	ldr	r3, [sp, #28]
 80246de:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80246e2:	9307      	str	r3, [sp, #28]
 80246e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80246e6:	2b00      	cmp	r3, #0
 80246e8:	f340 8218 	ble.w	8024b1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80246ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 80246f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80246f4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80246f8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80246fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80246fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024702:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024706:	eef0 6a62 	vmov.f32	s13, s5
 802470a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802470e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024712:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024716:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802471a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802471e:	eef0 6a43 	vmov.f32	s13, s6
 8024722:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024726:	ee12 2a90 	vmov	r2, s5
 802472a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802472e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024732:	ee13 2a10 	vmov	r2, s6
 8024736:	931f      	str	r3, [sp, #124]	; 0x7c
 8024738:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802473a:	fb92 f3f3 	sdiv	r3, r2, r3
 802473e:	9320      	str	r3, [sp, #128]	; 0x80
 8024740:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024742:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024744:	3b01      	subs	r3, #1
 8024746:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802474a:	930e      	str	r3, [sp, #56]	; 0x38
 802474c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802474e:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8024752:	bf08      	it	eq
 8024754:	4613      	moveq	r3, r2
 8024756:	9306      	str	r3, [sp, #24]
 8024758:	eeb0 3a67 	vmov.f32	s6, s15
 802475c:	eef0 2a47 	vmov.f32	s5, s14
 8024760:	e621      	b.n	80243a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8024762:	fb08 f505 	mul.w	r5, r8, r5
 8024766:	fb09 5303 	mla	r3, r9, r3, r5
 802476a:	e6a1      	b.n	80244b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 802476c:	4681      	mov	r9, r0
 802476e:	e6c8      	b.n	8024502 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8024770:	f1c1 0210 	rsb	r2, r1, #16
 8024774:	4341      	muls	r1, r0
 8024776:	fb09 1902 	mla	r9, r9, r2, r1
 802477a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802477e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8024782:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8024786:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802478a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802478e:	ea42 0909 	orr.w	r9, r2, r9
 8024792:	fa1f f289 	uxth.w	r2, r9
 8024796:	e75b      	b.n	8024650 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024798:	f8b7 c000 	ldrh.w	ip, [r7]
 802479c:	43db      	mvns	r3, r3
 802479e:	ea4f 202c 	mov.w	r0, ip, asr #8
 80247a2:	fa5f fe83 	uxtb.w	lr, r3
 80247a6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80247aa:	fb00 f00e 	mul.w	r0, r0, lr
 80247ae:	1c41      	adds	r1, r0, #1
 80247b0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80247b4:	1211      	asrs	r1, r2, #8
 80247b6:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80247ba:	f021 0107 	bic.w	r1, r1, #7
 80247be:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80247c2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80247c6:	48d7      	ldr	r0, [pc, #860]	; (8024b24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80247c8:	fb05 f50e 	mul.w	r5, r5, lr
 80247cc:	b2c9      	uxtb	r1, r1
 80247ce:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80247d2:	1c69      	adds	r1, r5, #1
 80247d4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80247d8:	10d1      	asrs	r1, r2, #3
 80247da:	f021 0103 	bic.w	r1, r1, #3
 80247de:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80247e2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80247e6:	b2db      	uxtb	r3, r3
 80247e8:	00c9      	lsls	r1, r1, #3
 80247ea:	fb03 f30e 	mul.w	r3, r3, lr
 80247ee:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80247f2:	4301      	orrs	r1, r0
 80247f4:	1c58      	adds	r0, r3, #1
 80247f6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80247fa:	00d2      	lsls	r2, r2, #3
 80247fc:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024800:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024804:	430a      	orrs	r2, r1
 8024806:	e726      	b.n	8024656 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8024808:	f115 0e01 	adds.w	lr, r5, #1
 802480c:	f53f af24 	bmi.w	8024658 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024810:	4572      	cmp	r2, lr
 8024812:	f6ff af21 	blt.w	8024658 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024816:	f110 0e01 	adds.w	lr, r0, #1
 802481a:	f53f af1d 	bmi.w	8024658 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802481e:	4573      	cmp	r3, lr
 8024820:	f6ff af1a 	blt.w	8024658 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024824:	b21b      	sxth	r3, r3
 8024826:	b212      	sxth	r2, r2
 8024828:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 802482c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8024830:	9301      	str	r3, [sp, #4]
 8024832:	9200      	str	r2, [sp, #0]
 8024834:	4639      	mov	r1, r7
 8024836:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802483a:	9811      	ldr	r0, [sp, #68]	; 0x44
 802483c:	f7ff fc24 	bl	8024088 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8024840:	e70a      	b.n	8024658 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024842:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024844:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024848:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802484a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802484e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024850:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024854:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8024856:	141f      	asrs	r7, r3, #16
 8024858:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802485a:	141b      	asrs	r3, r3, #16
 802485c:	fb01 3707 	mla	r7, r1, r7, r3
 8024860:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024862:	fa1f fc82 	uxth.w	ip, r2
 8024866:	eb03 0a07 	add.w	sl, r3, r7
 802486a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802486e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8024872:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8024876:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802487a:	b29b      	uxth	r3, r3
 802487c:	2d00      	cmp	r5, #0
 802487e:	f000 80fe 	beq.w	8024a7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8024882:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8024886:	940c      	str	r4, [sp, #48]	; 0x30
 8024888:	eb0a 0b01 	add.w	fp, sl, r1
 802488c:	fa1f fa85 	uxth.w	sl, r5
 8024890:	fb0a fc0c 	mul.w	ip, sl, ip
 8024894:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8024898:	fa1f fa8a 	uxth.w	sl, sl
 802489c:	eba0 000c 	sub.w	r0, r0, ip
 80248a0:	eba3 030a 	sub.w	r3, r3, sl
 80248a4:	b280      	uxth	r0, r0
 80248a6:	fb08 f000 	mul.w	r0, r8, r0
 80248aa:	b29b      	uxth	r3, r3
 80248ac:	fb09 0303 	mla	r3, r9, r3, r0
 80248b0:	980c      	ldr	r0, [sp, #48]	; 0x30
 80248b2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80248b6:	940d      	str	r4, [sp, #52]	; 0x34
 80248b8:	fb0a 3300 	mla	r3, sl, r0, r3
 80248bc:	fb0c 3304 	mla	r3, ip, r4, r3
 80248c0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80248c4:	2b00      	cmp	r3, #0
 80248c6:	f000 80cc 	beq.w	8024a62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80248ca:	9808      	ldr	r0, [sp, #32]
 80248cc:	9c08      	ldr	r4, [sp, #32]
 80248ce:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80248d2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80248d6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80248da:	f000 80d5 	beq.w	8024a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80248de:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80248e2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80248e6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80248ea:	fb09 f707 	mul.w	r7, r9, r7
 80248ee:	fb0a fc0c 	mul.w	ip, sl, ip
 80248f2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80248f6:	f107 0b20 	add.w	fp, r7, #32
 80248fa:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80248fe:	44cc      	add	ip, r9
 8024900:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8024904:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024908:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802490c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8024910:	ea4c 0909 	orr.w	r9, ip, r9
 8024914:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8024918:	8847      	ldrh	r7, [r0, #2]
 802491a:	d019      	beq.n	8024950 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 802491c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8024920:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8024924:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024928:	fb08 f807 	mul.w	r8, r8, r7
 802492c:	fb0a fc0c 	mul.w	ip, sl, ip
 8024930:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8024934:	f108 0b20 	add.w	fp, r8, #32
 8024938:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802493c:	44bc      	add	ip, r7
 802493e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8024942:	0a3f      	lsrs	r7, r7, #8
 8024944:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8024948:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802494c:	ea4c 0707 	orr.w	r7, ip, r7
 8024950:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8024954:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8024958:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802495c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8024960:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024964:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8024968:	ea4c 0909 	orr.w	r9, ip, r9
 802496c:	ea4a 0707 	orr.w	r7, sl, r7
 8024970:	2d00      	cmp	r5, #0
 8024972:	f000 808b 	beq.w	8024a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8024976:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802497a:	3901      	subs	r1, #1
 802497c:	0049      	lsls	r1, r1, #1
 802497e:	3102      	adds	r1, #2
 8024980:	eb00 0c01 	add.w	ip, r0, r1
 8024984:	5a41      	ldrh	r1, [r0, r1]
 8024986:	980c      	ldr	r0, [sp, #48]	; 0x30
 8024988:	28ff      	cmp	r0, #255	; 0xff
 802498a:	d019      	beq.n	80249c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 802498c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802498e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8024992:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024996:	fb04 fa01 	mul.w	sl, r4, r1
 802499a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802499e:	fb08 f800 	mul.w	r8, r8, r0
 80249a2:	f10a 0020 	add.w	r0, sl, #32
 80249a6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80249aa:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80249ae:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80249b2:	4441      	add	r1, r8
 80249b4:	0a00      	lsrs	r0, r0, #8
 80249b6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80249ba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80249be:	4301      	orrs	r1, r0
 80249c0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80249c2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80249c6:	2cff      	cmp	r4, #255	; 0xff
 80249c8:	d01a      	beq.n	8024a00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 80249ca:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80249ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80249d2:	fb04 fa00 	mul.w	sl, r4, r0
 80249d6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80249da:	fb08 f80c 	mul.w	r8, r8, ip
 80249de:	f10a 0c20 	add.w	ip, sl, #32
 80249e2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80249e6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80249ea:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80249ee:	4440      	add	r0, r8
 80249f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80249f4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80249f8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80249fc:	ea40 000c 	orr.w	r0, r0, ip
 8024a00:	fb15 fc02 	smulbb	ip, r5, r2
 8024a04:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8024a08:	f1c5 0810 	rsb	r8, r5, #16
 8024a0c:	eba8 0802 	sub.w	r8, r8, r2
 8024a10:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024a14:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8024a18:	437a      	muls	r2, r7
 8024a1a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024a1e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8024a22:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024a26:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024a2a:	fb09 2208 	mla	r2, r9, r8, r2
 8024a2e:	ea4a 0101 	orr.w	r1, sl, r1
 8024a32:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8024a36:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024a3a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024a3e:	fb05 2201 	mla	r2, r5, r1, r2
 8024a42:	ea4b 0000 	orr.w	r0, fp, r0
 8024a46:	fb0c 2200 	mla	r2, ip, r0, r2
 8024a4a:	0d57      	lsrs	r7, r2, #21
 8024a4c:	0952      	lsrs	r2, r2, #5
 8024a4e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024a52:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024a56:	433a      	orrs	r2, r7
 8024a58:	2bff      	cmp	r3, #255	; 0xff
 8024a5a:	b292      	uxth	r2, r2
 8024a5c:	d127      	bne.n	8024aae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8024a5e:	f8ae 2000 	strh.w	r2, [lr]
 8024a62:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024a64:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8024a66:	4413      	add	r3, r2
 8024a68:	931d      	str	r3, [sp, #116]	; 0x74
 8024a6a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8024a6c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024a6e:	441a      	add	r2, r3
 8024a70:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024a72:	921e      	str	r2, [sp, #120]	; 0x78
 8024a74:	3b01      	subs	r3, #1
 8024a76:	f10e 0e02 	add.w	lr, lr, #2
 8024a7a:	930f      	str	r3, [sp, #60]	; 0x3c
 8024a7c:	e627      	b.n	80246ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024a7e:	fb08 f000 	mul.w	r0, r8, r0
 8024a82:	fb09 0303 	mla	r3, r9, r3, r0
 8024a86:	e71b      	b.n	80248c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8024a88:	46b9      	mov	r9, r7
 8024a8a:	e743      	b.n	8024914 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8024a8c:	f1c2 0110 	rsb	r1, r2, #16
 8024a90:	437a      	muls	r2, r7
 8024a92:	fb09 2901 	mla	r9, r9, r1, r2
 8024a96:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8024a9a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8024a9e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8024aa2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024aa6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024aaa:	4302      	orrs	r2, r0
 8024aac:	e7d4      	b.n	8024a58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8024aae:	f8be 7000 	ldrh.w	r7, [lr]
 8024ab2:	4c1c      	ldr	r4, [pc, #112]	; (8024b24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8024ab4:	43db      	mvns	r3, r3
 8024ab6:	1238      	asrs	r0, r7, #8
 8024ab8:	fa5f fc83 	uxtb.w	ip, r3
 8024abc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024ac0:	10fd      	asrs	r5, r7, #3
 8024ac2:	fb00 f00c 	mul.w	r0, r0, ip
 8024ac6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8024aca:	fb05 f10c 	mul.w	r1, r5, ip
 8024ace:	1c45      	adds	r5, r0, #1
 8024ad0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8024ad4:	1215      	asrs	r5, r2, #8
 8024ad6:	f025 0507 	bic.w	r5, r5, #7
 8024ada:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8024ade:	1c4d      	adds	r5, r1, #1
 8024ae0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8024ae4:	10d1      	asrs	r1, r2, #3
 8024ae6:	f021 0103 	bic.w	r1, r1, #3
 8024aea:	00fb      	lsls	r3, r7, #3
 8024aec:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8024af0:	b2db      	uxtb	r3, r3
 8024af2:	b2c0      	uxtb	r0, r0
 8024af4:	00c9      	lsls	r1, r1, #3
 8024af6:	fb03 f30c 	mul.w	r3, r3, ip
 8024afa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024afe:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8024b02:	4308      	orrs	r0, r1
 8024b04:	1c59      	adds	r1, r3, #1
 8024b06:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024b0a:	00d2      	lsls	r2, r2, #3
 8024b0c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024b10:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8024b14:	4318      	orrs	r0, r3
 8024b16:	f8ae 0000 	strh.w	r0, [lr]
 8024b1a:	e7a2      	b.n	8024a62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8024b1c:	b013      	add	sp, #76	; 0x4c
 8024b1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024b22:	bf00      	nop
 8024b24:	fffff800 	.word	0xfffff800

08024b28 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8024b28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024b2c:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8024b30:	fb05 4c03 	mla	ip, r5, r3, r4
 8024b34:	2d00      	cmp	r5, #0
 8024b36:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8024b3a:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8024b3e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024b42:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8024b46:	8808      	ldrh	r0, [r1, #0]
 8024b48:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8024b4c:	f2c0 80a7 	blt.w	8024c9e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8024b50:	45aa      	cmp	sl, r5
 8024b52:	f340 80a4 	ble.w	8024c9e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8024b56:	2c00      	cmp	r4, #0
 8024b58:	f2c0 809f 	blt.w	8024c9a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8024b5c:	42a3      	cmp	r3, r4
 8024b5e:	f340 809c 	ble.w	8024c9a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8024b62:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8024b66:	1c62      	adds	r2, r4, #1
 8024b68:	f100 809c 	bmi.w	8024ca4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8024b6c:	4293      	cmp	r3, r2
 8024b6e:	f340 8099 	ble.w	8024ca4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8024b72:	f1b9 0f00 	cmp.w	r9, #0
 8024b76:	f000 8095 	beq.w	8024ca4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8024b7a:	f8be c002 	ldrh.w	ip, [lr, #2]
 8024b7e:	3501      	adds	r5, #1
 8024b80:	f100 8094 	bmi.w	8024cac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8024b84:	45aa      	cmp	sl, r5
 8024b86:	f340 8091 	ble.w	8024cac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8024b8a:	2f00      	cmp	r7, #0
 8024b8c:	f000 808e 	beq.w	8024cac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8024b90:	2c00      	cmp	r4, #0
 8024b92:	f2c0 8089 	blt.w	8024ca8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8024b96:	42a3      	cmp	r3, r4
 8024b98:	f340 8086 	ble.w	8024ca8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8024b9c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8024ba0:	3401      	adds	r4, #1
 8024ba2:	f100 8086 	bmi.w	8024cb2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8024ba6:	42a3      	cmp	r3, r4
 8024ba8:	f340 8083 	ble.w	8024cb2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8024bac:	f1b9 0f00 	cmp.w	r9, #0
 8024bb0:	d07f      	beq.n	8024cb2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8024bb2:	3301      	adds	r3, #1
 8024bb4:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8024bb8:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8024bbc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024bc0:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8024bc4:	fb19 fe07 	smulbb	lr, r9, r7
 8024bc8:	ea44 0808 	orr.w	r8, r4, r8
 8024bcc:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8024bd0:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8024bd4:	f1c7 0210 	rsb	r2, r7, #16
 8024bd8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024bdc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024be0:	ea44 0c0c 	orr.w	ip, r4, ip
 8024be4:	eba2 0209 	sub.w	r2, r2, r9
 8024be8:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8024bec:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8024bf0:	fb04 f40c 	mul.w	r4, r4, ip
 8024bf4:	fb02 4808 	mla	r8, r2, r8, r4
 8024bf8:	041a      	lsls	r2, r3, #16
 8024bfa:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024bfe:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024c02:	4313      	orrs	r3, r2
 8024c04:	042a      	lsls	r2, r5, #16
 8024c06:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024c0a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8024c0e:	fb0e 8303 	mla	r3, lr, r3, r8
 8024c12:	432a      	orrs	r2, r5
 8024c14:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8024c18:	fb07 3202 	mla	r2, r7, r2, r3
 8024c1c:	0d53      	lsrs	r3, r2, #21
 8024c1e:	0952      	lsrs	r2, r2, #5
 8024c20:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024c24:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024c28:	431a      	orrs	r2, r3
 8024c2a:	b293      	uxth	r3, r2
 8024c2c:	b2b4      	uxth	r4, r6
 8024c2e:	1202      	asrs	r2, r0, #8
 8024c30:	43f6      	mvns	r6, r6
 8024c32:	b2f6      	uxtb	r6, r6
 8024c34:	121d      	asrs	r5, r3, #8
 8024c36:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024c3a:	fb12 f206 	smulbb	r2, r2, r6
 8024c3e:	10c7      	asrs	r7, r0, #3
 8024c40:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8024c44:	00c0      	lsls	r0, r0, #3
 8024c46:	fb05 2504 	mla	r5, r5, r4, r2
 8024c4a:	b2c0      	uxtb	r0, r0
 8024c4c:	10da      	asrs	r2, r3, #3
 8024c4e:	00db      	lsls	r3, r3, #3
 8024c50:	b2db      	uxtb	r3, r3
 8024c52:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8024c56:	fb10 f006 	smulbb	r0, r0, r6
 8024c5a:	b2ad      	uxth	r5, r5
 8024c5c:	fb03 0004 	mla	r0, r3, r4, r0
 8024c60:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024c64:	fb17 f706 	smulbb	r7, r7, r6
 8024c68:	b280      	uxth	r0, r0
 8024c6a:	1c6b      	adds	r3, r5, #1
 8024c6c:	fb02 7204 	mla	r2, r2, r4, r7
 8024c70:	b292      	uxth	r2, r2
 8024c72:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024c76:	1c43      	adds	r3, r0, #1
 8024c78:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024c7c:	1c50      	adds	r0, r2, #1
 8024c7e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8024c82:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8024c86:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024c8a:	0952      	lsrs	r2, r2, #5
 8024c8c:	432b      	orrs	r3, r5
 8024c8e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024c92:	4313      	orrs	r3, r2
 8024c94:	800b      	strh	r3, [r1, #0]
 8024c96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024c9a:	4680      	mov	r8, r0
 8024c9c:	e763      	b.n	8024b66 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8024c9e:	4684      	mov	ip, r0
 8024ca0:	4680      	mov	r8, r0
 8024ca2:	e76c      	b.n	8024b7e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8024ca4:	4684      	mov	ip, r0
 8024ca6:	e76a      	b.n	8024b7e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8024ca8:	4605      	mov	r5, r0
 8024caa:	e779      	b.n	8024ba0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8024cac:	4603      	mov	r3, r0
 8024cae:	4605      	mov	r5, r0
 8024cb0:	e782      	b.n	8024bb8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8024cb2:	4603      	mov	r3, r0
 8024cb4:	e780      	b.n	8024bb8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08024cb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024cb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024cba:	b093      	sub	sp, #76	; 0x4c
 8024cbc:	461d      	mov	r5, r3
 8024cbe:	9210      	str	r2, [sp, #64]	; 0x40
 8024cc0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8024cc2:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8024cc6:	920b      	str	r2, [sp, #44]	; 0x2c
 8024cc8:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8024ccc:	910a      	str	r1, [sp, #40]	; 0x28
 8024cce:	6859      	ldr	r1, [r3, #4]
 8024cd0:	681b      	ldr	r3, [r3, #0]
 8024cd2:	9011      	str	r0, [sp, #68]	; 0x44
 8024cd4:	fb01 2707 	mla	r7, r1, r7, r2
 8024cd8:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8024cdc:	9307      	str	r3, [sp, #28]
 8024cde:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024ce0:	681b      	ldr	r3, [r3, #0]
 8024ce2:	9309      	str	r3, [sp, #36]	; 0x24
 8024ce4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024ce6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8024cea:	43db      	mvns	r3, r3
 8024cec:	b2db      	uxtb	r3, r3
 8024cee:	9308      	str	r3, [sp, #32]
 8024cf0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024cf2:	2b00      	cmp	r3, #0
 8024cf4:	dc03      	bgt.n	8024cfe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024cf6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8024cf8:	2b00      	cmp	r3, #0
 8024cfa:	f340 8203 	ble.w	8025104 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024cfe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024d00:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024d04:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024d08:	1e48      	subs	r0, r1, #1
 8024d0a:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
 8024d0e:	2d00      	cmp	r5, #0
 8024d10:	f340 80da 	ble.w	8024ec8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8024d14:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024d18:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024d1c:	d406      	bmi.n	8024d2c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024d1e:	4586      	cmp	lr, r0
 8024d20:	da04      	bge.n	8024d2c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024d22:	2b00      	cmp	r3, #0
 8024d24:	db02      	blt.n	8024d2c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024d26:	4563      	cmp	r3, ip
 8024d28:	f2c0 80cf 	blt.w	8024eca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8024d2c:	f11e 0e01 	adds.w	lr, lr, #1
 8024d30:	f100 80c1 	bmi.w	8024eb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024d34:	4571      	cmp	r1, lr
 8024d36:	f2c0 80be 	blt.w	8024eb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024d3a:	3301      	adds	r3, #1
 8024d3c:	f100 80bb 	bmi.w	8024eb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024d40:	429a      	cmp	r2, r3
 8024d42:	f2c0 80b8 	blt.w	8024eb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024d46:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8024d4a:	46a9      	mov	r9, r5
 8024d4c:	f1b9 0f00 	cmp.w	r9, #0
 8024d50:	f340 80d8 	ble.w	8024f04 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8024d54:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024d56:	1421      	asrs	r1, r4, #16
 8024d58:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024d5c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024d60:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024d64:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8024d68:	f100 8111 	bmi.w	8024f8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024d6c:	f10e 3aff 	add.w	sl, lr, #4294967295	; 0xffffffff
 8024d70:	4551      	cmp	r1, sl
 8024d72:	f280 810c 	bge.w	8024f8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024d76:	2800      	cmp	r0, #0
 8024d78:	f2c0 8109 	blt.w	8024f8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024d7c:	f103 3aff 	add.w	sl, r3, #4294967295	; 0xffffffff
 8024d80:	4550      	cmp	r0, sl
 8024d82:	f280 8104 	bge.w	8024f8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024d86:	fa0f f38e 	sxth.w	r3, lr
 8024d8a:	fb00 1103 	mla	r1, r0, r3, r1
 8024d8e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8024d90:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8024d94:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8024d98:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8024d9c:	f1bc 0f00 	cmp.w	ip, #0
 8024da0:	d007      	beq.n	8024db2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8024da2:	005b      	lsls	r3, r3, #1
 8024da4:	eb0a 0003 	add.w	r0, sl, r3
 8024da8:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8024dac:	930c      	str	r3, [sp, #48]	; 0x30
 8024dae:	8843      	ldrh	r3, [r0, #2]
 8024db0:	930d      	str	r3, [sp, #52]	; 0x34
 8024db2:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8024db6:	fb12 f30c 	smulbb	r3, r2, ip
 8024dba:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8024dbe:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024dc2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024dc6:	10db      	asrs	r3, r3, #3
 8024dc8:	ea40 000e 	orr.w	r0, r0, lr
 8024dcc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024dd0:	f1cc 0e10 	rsb	lr, ip, #16
 8024dd4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024dd8:	ebae 0e02 	sub.w	lr, lr, r2
 8024ddc:	ea4a 0101 	orr.w	r1, sl, r1
 8024de0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024de4:	4351      	muls	r1, r2
 8024de6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8024de8:	9f08      	ldr	r7, [sp, #32]
 8024dea:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8024dee:	fb0e 1e00 	mla	lr, lr, r0, r1
 8024df2:	0410      	lsls	r0, r2, #16
 8024df4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024df8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024dfc:	4310      	orrs	r0, r2
 8024dfe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024e00:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024e02:	0412      	lsls	r2, r2, #16
 8024e04:	fb03 e000 	mla	r0, r3, r0, lr
 8024e08:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024e0c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8024e10:	ea42 020e 	orr.w	r2, r2, lr
 8024e14:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8024e18:	fb03 0302 	mla	r3, r3, r2, r0
 8024e1c:	0d5a      	lsrs	r2, r3, #21
 8024e1e:	095b      	lsrs	r3, r3, #5
 8024e20:	f8b8 0000 	ldrh.w	r0, [r8]
 8024e24:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024e28:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024e2c:	4313      	orrs	r3, r2
 8024e2e:	b29b      	uxth	r3, r3
 8024e30:	1201      	asrs	r1, r0, #8
 8024e32:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8024e36:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8024e3a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024e3e:	fb11 f107 	smulbb	r1, r1, r7
 8024e42:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8024e46:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8024e4a:	00c0      	lsls	r0, r0, #3
 8024e4c:	fb0c 1c02 	mla	ip, ip, r2, r1
 8024e50:	b2c0      	uxtb	r0, r0
 8024e52:	10d9      	asrs	r1, r3, #3
 8024e54:	00db      	lsls	r3, r3, #3
 8024e56:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8024e5a:	b2db      	uxtb	r3, r3
 8024e5c:	fb10 f007 	smulbb	r0, r0, r7
 8024e60:	fa1f fc8c 	uxth.w	ip, ip
 8024e64:	fb03 0302 	mla	r3, r3, r2, r0
 8024e68:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024e6c:	fb1e fe07 	smulbb	lr, lr, r7
 8024e70:	fb01 e102 	mla	r1, r1, r2, lr
 8024e74:	b29a      	uxth	r2, r3
 8024e76:	f10c 0301 	add.w	r3, ip, #1
 8024e7a:	b289      	uxth	r1, r1
 8024e7c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8024e80:	1c53      	adds	r3, r2, #1
 8024e82:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024e86:	1c4a      	adds	r2, r1, #1
 8024e88:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024e8c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8024e90:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024e94:	0949      	lsrs	r1, r1, #5
 8024e96:	ea43 030c 	orr.w	r3, r3, ip
 8024e9a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024e9e:	430b      	orrs	r3, r1
 8024ea0:	f8a8 3000 	strh.w	r3, [r8]
 8024ea4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024ea6:	441c      	add	r4, r3
 8024ea8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024eaa:	f108 0802 	add.w	r8, r8, #2
 8024eae:	441e      	add	r6, r3
 8024eb0:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8024eb4:	e74a      	b.n	8024d4c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8024eb6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024eb8:	441c      	add	r4, r3
 8024eba:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024ebc:	441e      	add	r6, r3
 8024ebe:	9b07      	ldr	r3, [sp, #28]
 8024ec0:	3302      	adds	r3, #2
 8024ec2:	3d01      	subs	r5, #1
 8024ec4:	9307      	str	r3, [sp, #28]
 8024ec6:	e722      	b.n	8024d0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024ec8:	d022      	beq.n	8024f10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8024eca:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8024ecc:	1e6b      	subs	r3, r5, #1
 8024ece:	fb00 4003 	mla	r0, r0, r3, r4
 8024ed2:	1400      	asrs	r0, r0, #16
 8024ed4:	f53f af37 	bmi.w	8024d46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024ed8:	3901      	subs	r1, #1
 8024eda:	4288      	cmp	r0, r1
 8024edc:	f6bf af33 	bge.w	8024d46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024ee0:	9920      	ldr	r1, [sp, #128]	; 0x80
 8024ee2:	fb01 6303 	mla	r3, r1, r3, r6
 8024ee6:	141b      	asrs	r3, r3, #16
 8024ee8:	f53f af2d 	bmi.w	8024d46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024eec:	3a01      	subs	r2, #1
 8024eee:	4293      	cmp	r3, r2
 8024ef0:	f6bf af29 	bge.w	8024d46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024ef4:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8024ef8:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8024efc:	46a8      	mov	r8, r5
 8024efe:	f1b8 0f00 	cmp.w	r8, #0
 8024f02:	dc5e      	bgt.n	8024fc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8024f04:	9b07      	ldr	r3, [sp, #28]
 8024f06:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024f0a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024f0e:	9307      	str	r3, [sp, #28]
 8024f10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024f12:	2b00      	cmp	r3, #0
 8024f14:	f340 80f6 	ble.w	8025104 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024f18:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024f1c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024f20:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024f24:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024f26:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024f2a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024f2e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024f32:	eef0 6a62 	vmov.f32	s13, s5
 8024f36:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024f3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024f3e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024f42:	ee16 4a90 	vmov	r4, s13
 8024f46:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024f4a:	eef0 6a43 	vmov.f32	s13, s6
 8024f4e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024f52:	ee12 2a90 	vmov	r2, s5
 8024f56:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024f5a:	fb92 f3f3 	sdiv	r3, r2, r3
 8024f5e:	ee13 2a10 	vmov	r2, s6
 8024f62:	931f      	str	r3, [sp, #124]	; 0x7c
 8024f64:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024f66:	fb92 f3f3 	sdiv	r3, r2, r3
 8024f6a:	9320      	str	r3, [sp, #128]	; 0x80
 8024f6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024f6e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024f70:	3b01      	subs	r3, #1
 8024f72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024f76:	930a      	str	r3, [sp, #40]	; 0x28
 8024f78:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024f7a:	ee16 6a90 	vmov	r6, s13
 8024f7e:	bf14      	ite	ne
 8024f80:	461d      	movne	r5, r3
 8024f82:	4615      	moveq	r5, r2
 8024f84:	eeb0 3a67 	vmov.f32	s6, s15
 8024f88:	eef0 2a47 	vmov.f32	s5, s14
 8024f8c:	e6b0      	b.n	8024cf0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024f8e:	f111 0a01 	adds.w	sl, r1, #1
 8024f92:	d487      	bmi.n	8024ea4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024f94:	45d6      	cmp	lr, sl
 8024f96:	db85      	blt.n	8024ea4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024f98:	f110 0a01 	adds.w	sl, r0, #1
 8024f9c:	d482      	bmi.n	8024ea4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024f9e:	4553      	cmp	r3, sl
 8024fa0:	db80      	blt.n	8024ea4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024fa2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8024fa4:	9101      	str	r1, [sp, #4]
 8024fa6:	b21b      	sxth	r3, r3
 8024fa8:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8024fac:	9300      	str	r3, [sp, #0]
 8024fae:	e9cd c704 	strd	ip, r7, [sp, #16]
 8024fb2:	fa0f f38e 	sxth.w	r3, lr
 8024fb6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024fb8:	9811      	ldr	r0, [sp, #68]	; 0x44
 8024fba:	4641      	mov	r1, r8
 8024fbc:	f7ff fdb4 	bl	8024b28 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8024fc0:	e770      	b.n	8024ea4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024fc2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024fc4:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8024fc6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024fca:	1430      	asrs	r0, r6, #16
 8024fcc:	1423      	asrs	r3, r4, #16
 8024fce:	fb01 3000 	mla	r0, r1, r0, r3
 8024fd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024fd4:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8024fd8:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8024fdc:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024fe0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024fe4:	8858      	ldrh	r0, [r3, #2]
 8024fe6:	f1be 0f00 	cmp.w	lr, #0
 8024fea:	d00b      	beq.n	8025004 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8024fec:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8024ff0:	3901      	subs	r1, #1
 8024ff2:	0049      	lsls	r1, r1, #1
 8024ff4:	3102      	adds	r1, #2
 8024ff6:	eb03 0b01 	add.w	fp, r3, r1
 8024ffa:	5a5b      	ldrh	r3, [r3, r1]
 8024ffc:	930e      	str	r3, [sp, #56]	; 0x38
 8024ffe:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8025002:	930f      	str	r3, [sp, #60]	; 0x3c
 8025004:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8025008:	fb12 f30e 	smulbb	r3, r2, lr
 802500c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8025010:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8025014:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8025018:	10db      	asrs	r3, r3, #3
 802501a:	ea41 010c 	orr.w	r1, r1, ip
 802501e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025022:	f1ce 0c10 	rsb	ip, lr, #16
 8025026:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802502a:	ebac 0c02 	sub.w	ip, ip, r2
 802502e:	ea4b 0000 	orr.w	r0, fp, r0
 8025032:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8025036:	4350      	muls	r0, r2
 8025038:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802503a:	9f08      	ldr	r7, [sp, #32]
 802503c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8025040:	fb0c 0c01 	mla	ip, ip, r1, r0
 8025044:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8025048:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 802504c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802504e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8025050:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025054:	0412      	lsls	r2, r2, #16
 8025056:	ea4b 0101 	orr.w	r1, fp, r1
 802505a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802505e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8025062:	fb03 c101 	mla	r1, r3, r1, ip
 8025066:	4302      	orrs	r2, r0
 8025068:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802506c:	fb03 1202 	mla	r2, r3, r2, r1
 8025070:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8025074:	0952      	lsrs	r2, r2, #5
 8025076:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 802507a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802507e:	f8b9 2000 	ldrh.w	r2, [r9]
 8025082:	ea4b 0303 	orr.w	r3, fp, r3
 8025086:	b29b      	uxth	r3, r3
 8025088:	1211      	asrs	r1, r2, #8
 802508a:	1218      	asrs	r0, r3, #8
 802508c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025090:	fb11 f107 	smulbb	r1, r1, r7
 8025094:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8025098:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802509c:	00d2      	lsls	r2, r2, #3
 802509e:	fb00 100a 	mla	r0, r0, sl, r1
 80250a2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80250a6:	10d9      	asrs	r1, r3, #3
 80250a8:	b2d2      	uxtb	r2, r2
 80250aa:	00db      	lsls	r3, r3, #3
 80250ac:	fb1c fc07 	smulbb	ip, ip, r7
 80250b0:	fb12 f207 	smulbb	r2, r2, r7
 80250b4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80250b8:	b2db      	uxtb	r3, r3
 80250ba:	b280      	uxth	r0, r0
 80250bc:	fb01 c10a 	mla	r1, r1, sl, ip
 80250c0:	fb03 230a 	mla	r3, r3, sl, r2
 80250c4:	b29b      	uxth	r3, r3
 80250c6:	b289      	uxth	r1, r1
 80250c8:	1c42      	adds	r2, r0, #1
 80250ca:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80250ce:	f101 0c01 	add.w	ip, r1, #1
 80250d2:	1c5a      	adds	r2, r3, #1
 80250d4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80250d8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80250dc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80250de:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80250e2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80250e6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80250ea:	4310      	orrs	r0, r2
 80250ec:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80250f0:	441c      	add	r4, r3
 80250f2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80250f4:	ea40 000c 	orr.w	r0, r0, ip
 80250f8:	f829 0b02 	strh.w	r0, [r9], #2
 80250fc:	441e      	add	r6, r3
 80250fe:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 8025102:	e6fc      	b.n	8024efe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8025104:	b013      	add	sp, #76	; 0x4c
 8025106:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802510a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 802510a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802510e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8025112:	fb0e 4703 	mla	r7, lr, r3, r4
 8025116:	f1be 0f00 	cmp.w	lr, #0
 802511a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 802511e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8025122:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8025126:	8808      	ldrh	r0, [r1, #0]
 8025128:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 802512c:	db60      	blt.n	80251f0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 802512e:	45f1      	cmp	r9, lr
 8025130:	dd5e      	ble.n	80251f0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8025132:	2c00      	cmp	r4, #0
 8025134:	db5a      	blt.n	80251ec <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8025136:	42a3      	cmp	r3, r4
 8025138:	dd58      	ble.n	80251ec <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802513a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 802513e:	1c62      	adds	r2, r4, #1
 8025140:	d459      	bmi.n	80251f6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8025142:	4293      	cmp	r3, r2
 8025144:	dd57      	ble.n	80251f6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8025146:	2d00      	cmp	r5, #0
 8025148:	d055      	beq.n	80251f6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802514a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 802514e:	f11e 0e01 	adds.w	lr, lr, #1
 8025152:	d454      	bmi.n	80251fe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8025154:	45f1      	cmp	r9, lr
 8025156:	dd52      	ble.n	80251fe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8025158:	2e00      	cmp	r6, #0
 802515a:	d050      	beq.n	80251fe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 802515c:	2c00      	cmp	r4, #0
 802515e:	db4c      	blt.n	80251fa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8025160:	42a3      	cmp	r3, r4
 8025162:	dd4a      	ble.n	80251fa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8025164:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8025168:	3401      	adds	r4, #1
 802516a:	d405      	bmi.n	8025178 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802516c:	42a3      	cmp	r3, r4
 802516e:	dd03      	ble.n	8025178 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8025170:	b115      	cbz	r5, 8025178 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8025172:	3301      	adds	r3, #1
 8025174:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8025178:	ea4f 430c 	mov.w	r3, ip, lsl #16
 802517c:	fb15 f406 	smulbb	r4, r5, r6
 8025180:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8025184:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8025188:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802518c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8025190:	ea43 0c0c 	orr.w	ip, r3, ip
 8025194:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8025198:	f1c6 0310 	rsb	r3, r6, #16
 802519c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80251a0:	1b5b      	subs	r3, r3, r5
 80251a2:	ea4e 0707 	orr.w	r7, lr, r7
 80251a6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80251aa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80251ae:	437d      	muls	r5, r7
 80251b0:	fb03 5c0c 	mla	ip, r3, ip, r5
 80251b4:	0403      	lsls	r3, r0, #16
 80251b6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80251ba:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80251be:	4318      	orrs	r0, r3
 80251c0:	0413      	lsls	r3, r2, #16
 80251c2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80251c6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80251ca:	4313      	orrs	r3, r2
 80251cc:	fb04 c000 	mla	r0, r4, r0, ip
 80251d0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80251d4:	fb06 0003 	mla	r0, r6, r3, r0
 80251d8:	0d43      	lsrs	r3, r0, #21
 80251da:	0940      	lsrs	r0, r0, #5
 80251dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80251e0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80251e4:	4318      	orrs	r0, r3
 80251e6:	8008      	strh	r0, [r1, #0]
 80251e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80251ec:	4684      	mov	ip, r0
 80251ee:	e7a6      	b.n	802513e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 80251f0:	4607      	mov	r7, r0
 80251f2:	4684      	mov	ip, r0
 80251f4:	e7ab      	b.n	802514e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80251f6:	4607      	mov	r7, r0
 80251f8:	e7a9      	b.n	802514e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80251fa:	4602      	mov	r2, r0
 80251fc:	e7b4      	b.n	8025168 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 80251fe:	4602      	mov	r2, r0
 8025200:	e7ba      	b.n	8025178 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08025202 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025202:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025206:	b08f      	sub	sp, #60	; 0x3c
 8025208:	461d      	mov	r5, r3
 802520a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802520c:	920c      	str	r2, [sp, #48]	; 0x30
 802520e:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8025212:	9107      	str	r1, [sp, #28]
 8025214:	6859      	ldr	r1, [r3, #4]
 8025216:	681b      	ldr	r3, [r3, #0]
 8025218:	900d      	str	r0, [sp, #52]	; 0x34
 802521a:	fb01 2707 	mla	r7, r1, r7, r2
 802521e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8025222:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025224:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8025228:	f8d3 8000 	ldr.w	r8, [r3]
 802522c:	9b07      	ldr	r3, [sp, #28]
 802522e:	2b00      	cmp	r3, #0
 8025230:	dc03      	bgt.n	802523a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8025232:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025234:	2b00      	cmp	r3, #0
 8025236:	f340 8181 	ble.w	802553c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802523a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802523c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025240:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025244:	1e48      	subs	r0, r1, #1
 8025246:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
 802524a:	2d00      	cmp	r5, #0
 802524c:	f340 809b 	ble.w	8025386 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8025250:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025254:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025258:	d406      	bmi.n	8025268 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802525a:	4586      	cmp	lr, r0
 802525c:	da04      	bge.n	8025268 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802525e:	2b00      	cmp	r3, #0
 8025260:	db02      	blt.n	8025268 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8025262:	4563      	cmp	r3, ip
 8025264:	f2c0 8090 	blt.w	8025388 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8025268:	f11e 0e01 	adds.w	lr, lr, #1
 802526c:	f100 8084 	bmi.w	8025378 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8025270:	4571      	cmp	r1, lr
 8025272:	f2c0 8081 	blt.w	8025378 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8025276:	3301      	adds	r3, #1
 8025278:	d47e      	bmi.n	8025378 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802527a:	429a      	cmp	r2, r3
 802527c:	db7c      	blt.n	8025378 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802527e:	46aa      	mov	sl, r5
 8025280:	46b9      	mov	r9, r7
 8025282:	f1ba 0f00 	cmp.w	sl, #0
 8025286:	f340 8099 	ble.w	80253bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802528a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802528c:	1421      	asrs	r1, r4, #16
 802528e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025292:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025296:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802529a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802529e:	f100 80d0 	bmi.w	8025442 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80252a2:	f10e 3bff 	add.w	fp, lr, #4294967295	; 0xffffffff
 80252a6:	4559      	cmp	r1, fp
 80252a8:	f280 80cb 	bge.w	8025442 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80252ac:	2800      	cmp	r0, #0
 80252ae:	f2c0 80c8 	blt.w	8025442 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80252b2:	f103 3bff 	add.w	fp, r3, #4294967295	; 0xffffffff
 80252b6:	4558      	cmp	r0, fp
 80252b8:	f280 80c3 	bge.w	8025442 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80252bc:	fa0f fe8e 	sxth.w	lr, lr
 80252c0:	fb00 110e 	mla	r1, r0, lr, r1
 80252c4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80252c8:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 80252cc:	8841      	ldrh	r1, [r0, #2]
 80252ce:	f1bc 0f00 	cmp.w	ip, #0
 80252d2:	d00b      	beq.n	80252ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 80252d4:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 80252d8:	3b01      	subs	r3, #1
 80252da:	005b      	lsls	r3, r3, #1
 80252dc:	3302      	adds	r3, #2
 80252de:	eb00 0e03 	add.w	lr, r0, r3
 80252e2:	5ac3      	ldrh	r3, [r0, r3]
 80252e4:	9308      	str	r3, [sp, #32]
 80252e6:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80252ea:	9309      	str	r3, [sp, #36]	; 0x24
 80252ec:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80252f0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80252f4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80252f8:	ea40 000b 	orr.w	r0, r0, fp
 80252fc:	fb12 f30c 	smulbb	r3, r2, ip
 8025300:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8025304:	10db      	asrs	r3, r3, #3
 8025306:	f1cc 0e10 	rsb	lr, ip, #16
 802530a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802530e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8025312:	ebae 0e02 	sub.w	lr, lr, r2
 8025316:	ea4b 0101 	orr.w	r1, fp, r1
 802531a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802531e:	4351      	muls	r1, r2
 8025320:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025322:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8025326:	fb0e 1e00 	mla	lr, lr, r0, r1
 802532a:	0410      	lsls	r0, r2, #16
 802532c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8025330:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025334:	4310      	orrs	r0, r2
 8025336:	9a08      	ldr	r2, [sp, #32]
 8025338:	9908      	ldr	r1, [sp, #32]
 802533a:	0412      	lsls	r2, r2, #16
 802533c:	fb03 e000 	mla	r0, r3, r0, lr
 8025340:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8025344:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8025348:	ea42 020e 	orr.w	r2, r2, lr
 802534c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8025350:	fb03 0302 	mla	r3, r3, r2, r0
 8025354:	0d5a      	lsrs	r2, r3, #21
 8025356:	095b      	lsrs	r3, r3, #5
 8025358:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802535c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8025360:	4313      	orrs	r3, r2
 8025362:	f8a9 3000 	strh.w	r3, [r9]
 8025366:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8025368:	441c      	add	r4, r3
 802536a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802536c:	f109 0902 	add.w	r9, r9, #2
 8025370:	441e      	add	r6, r3
 8025372:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8025376:	e784      	b.n	8025282 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8025378:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802537a:	441c      	add	r4, r3
 802537c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802537e:	3d01      	subs	r5, #1
 8025380:	441e      	add	r6, r3
 8025382:	3702      	adds	r7, #2
 8025384:	e761      	b.n	802524a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025386:	d01d      	beq.n	80253c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8025388:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802538a:	1e6b      	subs	r3, r5, #1
 802538c:	fb00 4003 	mla	r0, r0, r3, r4
 8025390:	1400      	asrs	r0, r0, #16
 8025392:	f53f af74 	bmi.w	802527e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8025396:	3901      	subs	r1, #1
 8025398:	4288      	cmp	r0, r1
 802539a:	f6bf af70 	bge.w	802527e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802539e:	991c      	ldr	r1, [sp, #112]	; 0x70
 80253a0:	fb01 6303 	mla	r3, r1, r3, r6
 80253a4:	141b      	asrs	r3, r3, #16
 80253a6:	f53f af6a 	bmi.w	802527e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80253aa:	3a01      	subs	r2, #1
 80253ac:	4293      	cmp	r3, r2
 80253ae:	f6bf af66 	bge.w	802527e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80253b2:	46a9      	mov	r9, r5
 80253b4:	46ba      	mov	sl, r7
 80253b6:	f1b9 0f00 	cmp.w	r9, #0
 80253ba:	dc5a      	bgt.n	8025472 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 80253bc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80253c0:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80253c4:	9b07      	ldr	r3, [sp, #28]
 80253c6:	2b00      	cmp	r3, #0
 80253c8:	f340 80b8 	ble.w	802553c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80253cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80253d0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80253d4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80253d8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80253da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80253de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80253e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80253e6:	eef0 6a62 	vmov.f32	s13, s5
 80253ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 80253ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80253f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80253f6:	ee16 4a90 	vmov	r4, s13
 80253fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80253fe:	eef0 6a43 	vmov.f32	s13, s6
 8025402:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025406:	ee12 2a90 	vmov	r2, s5
 802540a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802540e:	fb92 f3f3 	sdiv	r3, r2, r3
 8025412:	ee13 2a10 	vmov	r2, s6
 8025416:	931b      	str	r3, [sp, #108]	; 0x6c
 8025418:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802541a:	fb92 f3f3 	sdiv	r3, r2, r3
 802541e:	931c      	str	r3, [sp, #112]	; 0x70
 8025420:	9b07      	ldr	r3, [sp, #28]
 8025422:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8025424:	3b01      	subs	r3, #1
 8025426:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802542a:	9307      	str	r3, [sp, #28]
 802542c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802542e:	ee16 6a90 	vmov	r6, s13
 8025432:	bf14      	ite	ne
 8025434:	461d      	movne	r5, r3
 8025436:	4615      	moveq	r5, r2
 8025438:	eeb0 3a67 	vmov.f32	s6, s15
 802543c:	eef0 2a47 	vmov.f32	s5, s14
 8025440:	e6f4      	b.n	802522c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8025442:	f111 0b01 	adds.w	fp, r1, #1
 8025446:	d48e      	bmi.n	8025366 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8025448:	45de      	cmp	lr, fp
 802544a:	db8c      	blt.n	8025366 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802544c:	f110 0b01 	adds.w	fp, r0, #1
 8025450:	d489      	bmi.n	8025366 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8025452:	455b      	cmp	r3, fp
 8025454:	db87      	blt.n	8025366 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8025456:	b21b      	sxth	r3, r3
 8025458:	e9cd 1001 	strd	r1, r0, [sp, #4]
 802545c:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8025460:	9300      	str	r3, [sp, #0]
 8025462:	4642      	mov	r2, r8
 8025464:	fa0f f38e 	sxth.w	r3, lr
 8025468:	4649      	mov	r1, r9
 802546a:	980d      	ldr	r0, [sp, #52]	; 0x34
 802546c:	f7ff fe4d 	bl	802510a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8025470:	e779      	b.n	8025366 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8025472:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025474:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8025478:	1420      	asrs	r0, r4, #16
 802547a:	1431      	asrs	r1, r6, #16
 802547c:	fb03 0101 	mla	r1, r3, r1, r0
 8025480:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8025484:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8025488:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 802548c:	8841      	ldrh	r1, [r0, #2]
 802548e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025492:	f1be 0f00 	cmp.w	lr, #0
 8025496:	d00b      	beq.n	80254b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8025498:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 802549c:	3b01      	subs	r3, #1
 802549e:	005b      	lsls	r3, r3, #1
 80254a0:	3302      	adds	r3, #2
 80254a2:	eb00 0b03 	add.w	fp, r0, r3
 80254a6:	5ac3      	ldrh	r3, [r0, r3]
 80254a8:	930a      	str	r3, [sp, #40]	; 0x28
 80254aa:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80254ae:	930b      	str	r3, [sp, #44]	; 0x2c
 80254b0:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80254b4:	fb12 f30e 	smulbb	r3, r2, lr
 80254b8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80254bc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80254c0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80254c4:	10db      	asrs	r3, r3, #3
 80254c6:	ea40 000c 	orr.w	r0, r0, ip
 80254ca:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80254ce:	f1ce 0c10 	rsb	ip, lr, #16
 80254d2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80254d6:	ebac 0c02 	sub.w	ip, ip, r2
 80254da:	ea4b 0101 	orr.w	r1, fp, r1
 80254de:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80254e2:	4351      	muls	r1, r2
 80254e4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80254e6:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80254ea:	fb0c 1c00 	mla	ip, ip, r0, r1
 80254ee:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80254f2:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 80254f6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80254f8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80254fa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80254fe:	0412      	lsls	r2, r2, #16
 8025500:	ea4b 0000 	orr.w	r0, fp, r0
 8025504:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8025508:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 802550c:	fb03 c000 	mla	r0, r3, r0, ip
 8025510:	ea42 0b0b 	orr.w	fp, r2, fp
 8025514:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8025518:	fb03 000b 	mla	r0, r3, fp, r0
 802551c:	0d43      	lsrs	r3, r0, #21
 802551e:	0940      	lsrs	r0, r0, #5
 8025520:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025524:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025528:	4318      	orrs	r0, r3
 802552a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802552c:	f82a 0b02 	strh.w	r0, [sl], #2
 8025530:	441c      	add	r4, r3
 8025532:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025534:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8025538:	441e      	add	r6, r3
 802553a:	e73c      	b.n	80253b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802553c:	b00f      	add	sp, #60	; 0x3c
 802553e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025542 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8025542:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025546:	b085      	sub	sp, #20
 8025548:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 802554c:	9102      	str	r1, [sp, #8]
 802554e:	2c00      	cmp	r4, #0
 8025550:	fb04 7103 	mla	r1, r4, r3, r7
 8025554:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8025558:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802555c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8025560:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8025564:	f2c0 811b 	blt.w	802579e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8025568:	45a6      	cmp	lr, r4
 802556a:	f340 8118 	ble.w	802579e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802556e:	2f00      	cmp	r7, #0
 8025570:	f2c0 8113 	blt.w	802579a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8025574:	42bb      	cmp	r3, r7
 8025576:	f340 8110 	ble.w	802579a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802557a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802557e:	1c7a      	adds	r2, r7, #1
 8025580:	f100 8110 	bmi.w	80257a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8025584:	4293      	cmp	r3, r2
 8025586:	f340 810d 	ble.w	80257a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802558a:	2e00      	cmp	r6, #0
 802558c:	f000 810c 	beq.w	80257a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8025590:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8025594:	3401      	adds	r4, #1
 8025596:	f100 810b 	bmi.w	80257b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802559a:	45a6      	cmp	lr, r4
 802559c:	f340 8108 	ble.w	80257b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80255a0:	2800      	cmp	r0, #0
 80255a2:	f000 8108 	beq.w	80257b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80255a6:	2f00      	cmp	r7, #0
 80255a8:	f2c0 8100 	blt.w	80257ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80255ac:	42bb      	cmp	r3, r7
 80255ae:	f340 80fd 	ble.w	80257ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80255b2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80255b6:	3701      	adds	r7, #1
 80255b8:	f100 8100 	bmi.w	80257bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80255bc:	42bb      	cmp	r3, r7
 80255be:	f340 80fd 	ble.w	80257bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80255c2:	2e00      	cmp	r6, #0
 80255c4:	f000 80fc 	beq.w	80257c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 80255c8:	3301      	adds	r3, #1
 80255ca:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 80255ce:	b2b6      	uxth	r6, r6
 80255d0:	b280      	uxth	r0, r0
 80255d2:	fb00 fe06 	mul.w	lr, r0, r6
 80255d6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80255da:	0136      	lsls	r6, r6, #4
 80255dc:	eba6 070e 	sub.w	r7, r6, lr
 80255e0:	b280      	uxth	r0, r0
 80255e2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80255e6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80255ea:	b2bf      	uxth	r7, r7
 80255ec:	1a1b      	subs	r3, r3, r0
 80255ee:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80255f2:	b29b      	uxth	r3, r3
 80255f4:	fb0a f607 	mul.w	r6, sl, r7
 80255f8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80255fc:	fb0b 6603 	mla	r6, fp, r3, r6
 8025600:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8025604:	fb00 6609 	mla	r6, r0, r9, r6
 8025608:	fb0e 6608 	mla	r6, lr, r8, r6
 802560c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8025610:	9600      	str	r6, [sp, #0]
 8025612:	2e00      	cmp	r6, #0
 8025614:	f000 80be 	beq.w	8025794 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8025618:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802561c:	fb0b fc0c 	mul.w	ip, fp, ip
 8025620:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8025624:	fb0b f505 	mul.w	r5, fp, r5
 8025628:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802562c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8025630:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025634:	44dc      	add	ip, fp
 8025636:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802563a:	9501      	str	r5, [sp, #4]
 802563c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8025640:	9503      	str	r5, [sp, #12]
 8025642:	9d01      	ldr	r5, [sp, #4]
 8025644:	9e02      	ldr	r6, [sp, #8]
 8025646:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802564a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802564e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8025652:	fb0a fc0c 	mul.w	ip, sl, ip
 8025656:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802565a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802565e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8025662:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025666:	4465      	add	r5, ip
 8025668:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802566c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8025670:	fb09 fc0c 	mul.w	ip, r9, ip
 8025674:	fb09 f904 	mul.w	r9, r9, r4
 8025678:	f509 7480 	add.w	r4, r9, #256	; 0x100
 802567c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8025680:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8025684:	fb08 f404 	mul.w	r4, r8, r4
 8025688:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802568c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025690:	fb08 f802 	mul.w	r8, r8, r2
 8025694:	fb0a fa01 	mul.w	sl, sl, r1
 8025698:	0a22      	lsrs	r2, r4, #8
 802569a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802569e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80256a2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80256a6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80256aa:	4414      	add	r4, r2
 80256ac:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80256b0:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80256b4:	0a2d      	lsrs	r5, r5, #8
 80256b6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80256ba:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80256be:	9a03      	ldr	r2, [sp, #12]
 80256c0:	8836      	ldrh	r6, [r6, #0]
 80256c2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80256c6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80256ca:	437d      	muls	r5, r7
 80256cc:	4461      	add	r1, ip
 80256ce:	0a24      	lsrs	r4, r4, #8
 80256d0:	fb02 5503 	mla	r5, r2, r3, r5
 80256d4:	0a09      	lsrs	r1, r1, #8
 80256d6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80256da:	fb04 540e 	mla	r4, r4, lr, r5
 80256de:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80256e2:	fb01 4100 	mla	r1, r1, r0, r4
 80256e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80256ea:	0a09      	lsrs	r1, r1, #8
 80256ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80256f0:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80256f4:	fb07 f70a 	mul.w	r7, r7, sl
 80256f8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80256fc:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8025700:	fb03 7101 	mla	r1, r3, r1, r7
 8025704:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025708:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802570c:	fb0e 1e08 	mla	lr, lr, r8, r1
 8025710:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8025714:	fb00 e101 	mla	r1, r0, r1, lr
 8025718:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 802571c:	9a00      	ldr	r2, [sp, #0]
 802571e:	b287      	uxth	r7, r0
 8025720:	437a      	muls	r2, r7
 8025722:	0a09      	lsrs	r1, r1, #8
 8025724:	1c53      	adds	r3, r2, #1
 8025726:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802572a:	4321      	orrs	r1, r4
 802572c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025730:	1235      	asrs	r5, r6, #8
 8025732:	0c0a      	lsrs	r2, r1, #16
 8025734:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8025738:	b2db      	uxtb	r3, r3
 802573a:	fb12 f207 	smulbb	r2, r2, r7
 802573e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025742:	fb05 2503 	mla	r5, r5, r3, r2
 8025746:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802574a:	10f2      	asrs	r2, r6, #3
 802574c:	b2c8      	uxtb	r0, r1
 802574e:	00f6      	lsls	r6, r6, #3
 8025750:	fb14 f407 	smulbb	r4, r4, r7
 8025754:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025758:	b2f6      	uxtb	r6, r6
 802575a:	fb10 f007 	smulbb	r0, r0, r7
 802575e:	fb02 4203 	mla	r2, r2, r3, r4
 8025762:	b2ad      	uxth	r5, r5
 8025764:	fb06 0303 	mla	r3, r6, r3, r0
 8025768:	b299      	uxth	r1, r3
 802576a:	b294      	uxth	r4, r2
 802576c:	1c6b      	adds	r3, r5, #1
 802576e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025772:	1c62      	adds	r2, r4, #1
 8025774:	1c4b      	adds	r3, r1, #1
 8025776:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802577a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802577e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025782:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025786:	0952      	lsrs	r2, r2, #5
 8025788:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802578c:	432b      	orrs	r3, r5
 802578e:	4313      	orrs	r3, r2
 8025790:	9a02      	ldr	r2, [sp, #8]
 8025792:	8013      	strh	r3, [r2, #0]
 8025794:	b005      	add	sp, #20
 8025796:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802579a:	2500      	movs	r5, #0
 802579c:	e6ef      	b.n	802557e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 802579e:	2100      	movs	r1, #0
 80257a0:	460d      	mov	r5, r1
 80257a2:	e6f7      	b.n	8025594 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80257a4:	2100      	movs	r1, #0
 80257a6:	e6f5      	b.n	8025594 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80257a8:	4631      	mov	r1, r6
 80257aa:	e6f3      	b.n	8025594 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80257ac:	2400      	movs	r4, #0
 80257ae:	e702      	b.n	80255b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80257b0:	2200      	movs	r2, #0
 80257b2:	4614      	mov	r4, r2
 80257b4:	e70b      	b.n	80255ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80257b6:	4602      	mov	r2, r0
 80257b8:	4604      	mov	r4, r0
 80257ba:	e708      	b.n	80255ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80257bc:	2200      	movs	r2, #0
 80257be:	e706      	b.n	80255ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80257c0:	4632      	mov	r2, r6
 80257c2:	e704      	b.n	80255ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

080257c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80257c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80257c8:	b09d      	sub	sp, #116	; 0x74
 80257ca:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80257ce:	9219      	str	r2, [sp, #100]	; 0x64
 80257d0:	9307      	str	r3, [sp, #28]
 80257d2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80257d4:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80257d8:	931a      	str	r3, [sp, #104]	; 0x68
 80257da:	9117      	str	r1, [sp, #92]	; 0x5c
 80257dc:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80257e0:	901b      	str	r0, [sp, #108]	; 0x6c
 80257e2:	6850      	ldr	r0, [r2, #4]
 80257e4:	6812      	ldr	r2, [r2, #0]
 80257e6:	fb00 1303 	mla	r3, r0, r3, r1
 80257ea:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80257ee:	930a      	str	r3, [sp, #40]	; 0x28
 80257f0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80257f2:	681b      	ldr	r3, [r3, #0]
 80257f4:	9310      	str	r3, [sp, #64]	; 0x40
 80257f6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80257fa:	930b      	str	r3, [sp, #44]	; 0x2c
 80257fc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80257fe:	2b00      	cmp	r3, #0
 8025800:	dc03      	bgt.n	802580a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8025802:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8025804:	2b00      	cmp	r3, #0
 8025806:	f340 8375 	ble.w	8025ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802580a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802580c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025810:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025814:	1e48      	subs	r0, r1, #1
 8025816:	1e57      	subs	r7, r2, #1
 8025818:	9b07      	ldr	r3, [sp, #28]
 802581a:	2b00      	cmp	r3, #0
 802581c:	f340 818e 	ble.w	8025b3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8025820:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8025824:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025828:	d406      	bmi.n	8025838 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802582a:	4584      	cmp	ip, r0
 802582c:	da04      	bge.n	8025838 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802582e:	2b00      	cmp	r3, #0
 8025830:	db02      	blt.n	8025838 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8025832:	42bb      	cmp	r3, r7
 8025834:	f2c0 8183 	blt.w	8025b3e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8025838:	f11c 0c01 	adds.w	ip, ip, #1
 802583c:	f100 8173 	bmi.w	8025b26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8025840:	4561      	cmp	r1, ip
 8025842:	f2c0 8170 	blt.w	8025b26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8025846:	3301      	adds	r3, #1
 8025848:	f100 816d 	bmi.w	8025b26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802584c:	429a      	cmp	r2, r3
 802584e:	f2c0 816a 	blt.w	8025b26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8025852:	9b07      	ldr	r3, [sp, #28]
 8025854:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8025856:	9318      	str	r3, [sp, #96]	; 0x60
 8025858:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802585a:	2b00      	cmp	r3, #0
 802585c:	f340 818c 	ble.w	8025b78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8025860:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8025862:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025864:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8025868:	689b      	ldr	r3, [r3, #8]
 802586a:	1422      	asrs	r2, r4, #16
 802586c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8025870:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8025874:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8025878:	f100 81cd 	bmi.w	8025c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802587c:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8025880:	4542      	cmp	r2, r8
 8025882:	f280 81c8 	bge.w	8025c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8025886:	f1bc 0f00 	cmp.w	ip, #0
 802588a:	f2c0 81c4 	blt.w	8025c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802588e:	f10e 38ff 	add.w	r8, lr, #4294967295	; 0xffffffff
 8025892:	45c4      	cmp	ip, r8
 8025894:	f280 81bf 	bge.w	8025c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8025898:	b21b      	sxth	r3, r3
 802589a:	fb0c 2203 	mla	r2, ip, r3, r2
 802589e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80258a0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80258a4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80258a8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80258ac:	2800      	cmp	r0, #0
 80258ae:	f000 81a9 	beq.w	8025c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80258b2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80258b6:	950c      	str	r5, [sp, #48]	; 0x30
 80258b8:	0e2d      	lsrs	r5, r5, #24
 80258ba:	9513      	str	r5, [sp, #76]	; 0x4c
 80258bc:	b181      	cbz	r1, 80258e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80258be:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80258c2:	3b01      	subs	r3, #1
 80258c4:	009b      	lsls	r3, r3, #2
 80258c6:	3304      	adds	r3, #4
 80258c8:	eb08 0c03 	add.w	ip, r8, r3
 80258cc:	f858 3003 	ldr.w	r3, [r8, r3]
 80258d0:	9308      	str	r3, [sp, #32]
 80258d2:	0e1b      	lsrs	r3, r3, #24
 80258d4:	9311      	str	r3, [sp, #68]	; 0x44
 80258d6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80258da:	930d      	str	r3, [sp, #52]	; 0x34
 80258dc:	0e1b      	lsrs	r3, r3, #24
 80258de:	9314      	str	r3, [sp, #80]	; 0x50
 80258e0:	b280      	uxth	r0, r0
 80258e2:	b289      	uxth	r1, r1
 80258e4:	fb00 f901 	mul.w	r9, r0, r1
 80258e8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80258ec:	0100      	lsls	r0, r0, #4
 80258ee:	eba0 0809 	sub.w	r8, r0, r9
 80258f2:	b289      	uxth	r1, r1
 80258f4:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80258f8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80258fa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80258fc:	fa1f f888 	uxth.w	r8, r8
 8025900:	1a5b      	subs	r3, r3, r1
 8025902:	b29b      	uxth	r3, r3
 8025904:	fb08 f000 	mul.w	r0, r8, r0
 8025908:	fb03 000e 	mla	r0, r3, lr, r0
 802590c:	fb01 0005 	mla	r0, r1, r5, r0
 8025910:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025912:	fb09 0005 	mla	r0, r9, r5, r0
 8025916:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802591a:	2800      	cmp	r0, #0
 802591c:	f000 80fa 	beq.w	8025b14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025920:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8025924:	d01b      	beq.n	802595e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8025926:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802592a:	fb0e fa0a 	mul.w	sl, lr, sl
 802592e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025932:	fb0e fe02 	mul.w	lr, lr, r2
 8025936:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802593a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802593e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025942:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8025946:	4452      	add	r2, sl
 8025948:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802594c:	0a12      	lsrs	r2, r2, #8
 802594e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025952:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025956:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802595a:	ea42 020c 	orr.w	r2, r2, ip
 802595e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025960:	2dff      	cmp	r5, #255	; 0xff
 8025962:	d021      	beq.n	80259a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8025964:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025966:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802596a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802596c:	fb05 fb0b 	mul.w	fp, r5, fp
 8025970:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025972:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025976:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025978:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802597c:	fb05 fa0a 	mul.w	sl, r5, sl
 8025980:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025984:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025988:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802598c:	44de      	add	lr, fp
 802598e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025992:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025996:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802599a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802599e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80259a2:	ea4e 050a 	orr.w	r5, lr, sl
 80259a6:	950c      	str	r5, [sp, #48]	; 0x30
 80259a8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80259aa:	2dff      	cmp	r5, #255	; 0xff
 80259ac:	d021      	beq.n	80259f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80259ae:	9d08      	ldr	r5, [sp, #32]
 80259b0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80259b4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80259b6:	fb05 fb0b 	mul.w	fp, r5, fp
 80259ba:	9d08      	ldr	r5, [sp, #32]
 80259bc:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80259c0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80259c2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80259c6:	fb05 fa0a 	mul.w	sl, r5, sl
 80259ca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80259ce:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80259d2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80259d6:	44de      	add	lr, fp
 80259d8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80259dc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80259e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80259e4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80259e8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80259ec:	ea4e 050a 	orr.w	r5, lr, sl
 80259f0:	9508      	str	r5, [sp, #32]
 80259f2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80259f4:	2dff      	cmp	r5, #255	; 0xff
 80259f6:	d021      	beq.n	8025a3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80259f8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80259fa:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80259fe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025a00:	fb05 fb0b 	mul.w	fp, r5, fp
 8025a04:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025a06:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025a0a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025a0c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025a10:	fb05 fa0a 	mul.w	sl, r5, sl
 8025a14:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025a18:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025a1c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025a20:	44de      	add	lr, fp
 8025a22:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025a26:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025a2a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025a2e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025a32:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025a36:	ea4e 050a 	orr.w	r5, lr, sl
 8025a3a:	950d      	str	r5, [sp, #52]	; 0x34
 8025a3c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025a3e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025a42:	9d08      	ldr	r5, [sp, #32]
 8025a44:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8025a48:	fb08 fc0c 	mul.w	ip, r8, ip
 8025a4c:	fb03 cc0e 	mla	ip, r3, lr, ip
 8025a50:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025a54:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025a56:	fb01 cc0e 	mla	ip, r1, lr, ip
 8025a5a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025a5e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025a60:	fb09 cc0e 	mla	ip, r9, lr, ip
 8025a64:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8025a68:	fb08 f80e 	mul.w	r8, r8, lr
 8025a6c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025a70:	fb03 8202 	mla	r2, r3, r2, r8
 8025a74:	9b08      	ldr	r3, [sp, #32]
 8025a76:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025a78:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8025a7c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025a7e:	fb01 220a 	mla	r2, r1, sl, r2
 8025a82:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8025a86:	fb09 2901 	mla	r9, r9, r1, r2
 8025a8a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8025a8c:	883b      	ldrh	r3, [r7, #0]
 8025a8e:	4342      	muls	r2, r0
 8025a90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025a94:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025a98:	1c50      	adds	r0, r2, #1
 8025a9a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025a9e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8025aa2:	ea4c 0c09 	orr.w	ip, ip, r9
 8025aa6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8025aaa:	1219      	asrs	r1, r3, #8
 8025aac:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8025ab0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8025ab4:	b2c0      	uxtb	r0, r0
 8025ab6:	fb12 f205 	smulbb	r2, r2, r5
 8025aba:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025abe:	fb01 2100 	mla	r1, r1, r0, r2
 8025ac2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8025ac6:	10da      	asrs	r2, r3, #3
 8025ac8:	fa5f fc8c 	uxtb.w	ip, ip
 8025acc:	00db      	lsls	r3, r3, #3
 8025ace:	fb1c fc05 	smulbb	ip, ip, r5
 8025ad2:	b2db      	uxtb	r3, r3
 8025ad4:	b289      	uxth	r1, r1
 8025ad6:	fb03 c300 	mla	r3, r3, r0, ip
 8025ada:	fa1f fc83 	uxth.w	ip, r3
 8025ade:	1c4b      	adds	r3, r1, #1
 8025ae0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025ae4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025ae8:	fb1e fe05 	smulbb	lr, lr, r5
 8025aec:	f10c 0301 	add.w	r3, ip, #1
 8025af0:	fb02 e200 	mla	r2, r2, r0, lr
 8025af4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8025af8:	b292      	uxth	r2, r2
 8025afa:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8025afe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025b02:	430b      	orrs	r3, r1
 8025b04:	1c51      	adds	r1, r2, #1
 8025b06:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025b0a:	0952      	lsrs	r2, r2, #5
 8025b0c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025b10:	4313      	orrs	r3, r2
 8025b12:	803b      	strh	r3, [r7, #0]
 8025b14:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8025b16:	441c      	add	r4, r3
 8025b18:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8025b1a:	441e      	add	r6, r3
 8025b1c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025b1e:	3b01      	subs	r3, #1
 8025b20:	3702      	adds	r7, #2
 8025b22:	9318      	str	r3, [sp, #96]	; 0x60
 8025b24:	e698      	b.n	8025858 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8025b26:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8025b28:	441c      	add	r4, r3
 8025b2a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8025b2c:	441e      	add	r6, r3
 8025b2e:	9b07      	ldr	r3, [sp, #28]
 8025b30:	3b01      	subs	r3, #1
 8025b32:	9307      	str	r3, [sp, #28]
 8025b34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025b36:	3302      	adds	r3, #2
 8025b38:	930a      	str	r3, [sp, #40]	; 0x28
 8025b3a:	e66d      	b.n	8025818 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8025b3c:	d023      	beq.n	8025b86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8025b3e:	9b07      	ldr	r3, [sp, #28]
 8025b40:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8025b42:	3b01      	subs	r3, #1
 8025b44:	fb00 4003 	mla	r0, r0, r3, r4
 8025b48:	1400      	asrs	r0, r0, #16
 8025b4a:	f53f ae82 	bmi.w	8025852 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025b4e:	3901      	subs	r1, #1
 8025b50:	4288      	cmp	r0, r1
 8025b52:	f6bf ae7e 	bge.w	8025852 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025b56:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8025b58:	fb01 6303 	mla	r3, r1, r3, r6
 8025b5c:	141b      	asrs	r3, r3, #16
 8025b5e:	f53f ae78 	bmi.w	8025852 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025b62:	3a01      	subs	r2, #1
 8025b64:	4293      	cmp	r3, r2
 8025b66:	f6bf ae74 	bge.w	8025852 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025b6a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8025b6e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8025b72:	f1bb 0f00 	cmp.w	fp, #0
 8025b76:	dc6c      	bgt.n	8025c52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8025b78:	9b07      	ldr	r3, [sp, #28]
 8025b7a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025b7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025b80:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8025b84:	930a      	str	r3, [sp, #40]	; 0x28
 8025b86:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025b88:	2b00      	cmp	r3, #0
 8025b8a:	f340 81b3 	ble.w	8025ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8025b8e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025b92:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025b96:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025b9a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025b9c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025ba0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025ba4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025ba8:	eef0 6a62 	vmov.f32	s13, s5
 8025bac:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025bb0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025bb4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025bb8:	ee16 4a90 	vmov	r4, s13
 8025bbc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025bc0:	eef0 6a43 	vmov.f32	s13, s6
 8025bc4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025bc8:	ee12 2a90 	vmov	r2, s5
 8025bcc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025bd0:	fb92 f3f3 	sdiv	r3, r2, r3
 8025bd4:	ee13 2a10 	vmov	r2, s6
 8025bd8:	9329      	str	r3, [sp, #164]	; 0xa4
 8025bda:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025bdc:	fb92 f3f3 	sdiv	r3, r2, r3
 8025be0:	932a      	str	r3, [sp, #168]	; 0xa8
 8025be2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025be4:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8025be6:	3b01      	subs	r3, #1
 8025be8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025bec:	9317      	str	r3, [sp, #92]	; 0x5c
 8025bee:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025bf0:	bf08      	it	eq
 8025bf2:	4613      	moveq	r3, r2
 8025bf4:	ee16 6a90 	vmov	r6, s13
 8025bf8:	9307      	str	r3, [sp, #28]
 8025bfa:	eeb0 3a67 	vmov.f32	s6, s15
 8025bfe:	eef0 2a47 	vmov.f32	s5, s14
 8025c02:	e5fb      	b.n	80257fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8025c04:	2900      	cmp	r1, #0
 8025c06:	f43f ae6b 	beq.w	80258e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8025c0a:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025c0e:	9308      	str	r3, [sp, #32]
 8025c10:	0e1b      	lsrs	r3, r3, #24
 8025c12:	9311      	str	r3, [sp, #68]	; 0x44
 8025c14:	e664      	b.n	80258e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8025c16:	f112 0801 	adds.w	r8, r2, #1
 8025c1a:	f53f af7b 	bmi.w	8025b14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025c1e:	4543      	cmp	r3, r8
 8025c20:	f6ff af78 	blt.w	8025b14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025c24:	f11c 0801 	adds.w	r8, ip, #1
 8025c28:	f53f af74 	bmi.w	8025b14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025c2c:	45c6      	cmp	lr, r8
 8025c2e:	f6ff af71 	blt.w	8025b14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025c32:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8025c34:	9201      	str	r2, [sp, #4]
 8025c36:	fa0f f28e 	sxth.w	r2, lr
 8025c3a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8025c3e:	e9cd c002 	strd	ip, r0, [sp, #8]
 8025c42:	9200      	str	r2, [sp, #0]
 8025c44:	b21b      	sxth	r3, r3
 8025c46:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8025c48:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8025c4a:	4639      	mov	r1, r7
 8025c4c:	f7ff fc79 	bl	8025542 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8025c50:	e760      	b.n	8025b14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025c52:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025c54:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025c56:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025c5a:	1427      	asrs	r7, r4, #16
 8025c5c:	1433      	asrs	r3, r6, #16
 8025c5e:	fb01 7303 	mla	r3, r1, r3, r7
 8025c62:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8025c66:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8025c6a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025c6e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025c72:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8025c76:	2a00      	cmp	r2, #0
 8025c78:	f000 8133 	beq.w	8025ee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8025c7c:	687d      	ldr	r5, [r7, #4]
 8025c7e:	950e      	str	r5, [sp, #56]	; 0x38
 8025c80:	0e2d      	lsrs	r5, r5, #24
 8025c82:	9515      	str	r5, [sp, #84]	; 0x54
 8025c84:	b178      	cbz	r0, 8025ca6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025c86:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8025c8a:	3901      	subs	r1, #1
 8025c8c:	0089      	lsls	r1, r1, #2
 8025c8e:	3104      	adds	r1, #4
 8025c90:	eb07 0e01 	add.w	lr, r7, r1
 8025c94:	5879      	ldr	r1, [r7, r1]
 8025c96:	9109      	str	r1, [sp, #36]	; 0x24
 8025c98:	0e09      	lsrs	r1, r1, #24
 8025c9a:	9112      	str	r1, [sp, #72]	; 0x48
 8025c9c:	f8de 1004 	ldr.w	r1, [lr, #4]
 8025ca0:	910f      	str	r1, [sp, #60]	; 0x3c
 8025ca2:	0e09      	lsrs	r1, r1, #24
 8025ca4:	9116      	str	r1, [sp, #88]	; 0x58
 8025ca6:	b292      	uxth	r2, r2
 8025ca8:	b280      	uxth	r0, r0
 8025caa:	fb02 f800 	mul.w	r8, r2, r0
 8025cae:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8025cb2:	0112      	lsls	r2, r2, #4
 8025cb4:	eba2 0e08 	sub.w	lr, r2, r8
 8025cb8:	b280      	uxth	r0, r0
 8025cba:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8025cbe:	9915      	ldr	r1, [sp, #84]	; 0x54
 8025cc0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025cc2:	fa1f fe8e 	uxth.w	lr, lr
 8025cc6:	1a12      	subs	r2, r2, r0
 8025cc8:	b292      	uxth	r2, r2
 8025cca:	fb0e f101 	mul.w	r1, lr, r1
 8025cce:	fb02 110c 	mla	r1, r2, ip, r1
 8025cd2:	fb00 1105 	mla	r1, r0, r5, r1
 8025cd6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025cd8:	fb08 1105 	mla	r1, r8, r5, r1
 8025cdc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8025ce0:	2900      	cmp	r1, #0
 8025ce2:	f000 80f5 	beq.w	8025ed0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8025ce6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8025cea:	d019      	beq.n	8025d20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8025cec:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025cf0:	fb0c fa0a 	mul.w	sl, ip, sl
 8025cf4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025cf8:	fb0c fc03 	mul.w	ip, ip, r3
 8025cfc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025d00:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025d04:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025d08:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8025d0c:	4453      	add	r3, sl
 8025d0e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025d12:	0a1b      	lsrs	r3, r3, #8
 8025d14:	0a3f      	lsrs	r7, r7, #8
 8025d16:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025d1a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025d1e:	433b      	orrs	r3, r7
 8025d20:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025d22:	2dff      	cmp	r5, #255	; 0xff
 8025d24:	d020      	beq.n	8025d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8025d26:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025d28:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025d2c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025d2e:	436f      	muls	r7, r5
 8025d30:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025d32:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025d36:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025d38:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025d3c:	fb05 fa0a 	mul.w	sl, r5, sl
 8025d40:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025d44:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025d48:	44bc      	add	ip, r7
 8025d4a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025d4e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025d52:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025d56:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025d5a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025d5e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025d62:	ea4c 050a 	orr.w	r5, ip, sl
 8025d66:	950e      	str	r5, [sp, #56]	; 0x38
 8025d68:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025d6a:	2dff      	cmp	r5, #255	; 0xff
 8025d6c:	d020      	beq.n	8025db0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8025d6e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025d70:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025d74:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025d76:	436f      	muls	r7, r5
 8025d78:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025d7a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025d7e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025d80:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025d84:	fb05 fa0a 	mul.w	sl, r5, sl
 8025d88:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025d8c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025d90:	44bc      	add	ip, r7
 8025d92:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025d96:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025d9a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025d9e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025da2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025da6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025daa:	ea4c 050a 	orr.w	r5, ip, sl
 8025dae:	9509      	str	r5, [sp, #36]	; 0x24
 8025db0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025db2:	2dff      	cmp	r5, #255	; 0xff
 8025db4:	d020      	beq.n	8025df8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8025db6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025db8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025dbc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025dbe:	436f      	muls	r7, r5
 8025dc0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025dc2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025dc6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025dc8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025dcc:	fb05 fa0a 	mul.w	sl, r5, sl
 8025dd0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025dd4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025dd8:	44bc      	add	ip, r7
 8025dda:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025dde:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025de2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025de6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025dea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025dee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025df2:	ea4c 050a 	orr.w	r5, ip, sl
 8025df6:	950f      	str	r5, [sp, #60]	; 0x3c
 8025df8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025dfa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025dfe:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025e00:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8025e04:	fb0e f707 	mul.w	r7, lr, r7
 8025e08:	fb02 770c 	mla	r7, r2, ip, r7
 8025e0c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025e10:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025e12:	fb00 770c 	mla	r7, r0, ip, r7
 8025e16:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025e1a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025e1c:	fb08 770c 	mla	r7, r8, ip, r7
 8025e20:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025e24:	fb0e fe0c 	mul.w	lr, lr, ip
 8025e28:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025e2c:	fb02 e303 	mla	r3, r2, r3, lr
 8025e30:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025e32:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025e34:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8025e38:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025e3a:	fb00 330a 	mla	r3, r0, sl, r3
 8025e3e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8025e42:	fb08 3c0c 	mla	ip, r8, ip, r3
 8025e46:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8025e48:	f8b9 0000 	ldrh.w	r0, [r9]
 8025e4c:	4359      	muls	r1, r3
 8025e4e:	0a3f      	lsrs	r7, r7, #8
 8025e50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025e54:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025e58:	1c4b      	adds	r3, r1, #1
 8025e5a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025e5e:	ea47 070c 	orr.w	r7, r7, ip
 8025e62:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025e66:	1202      	asrs	r2, r0, #8
 8025e68:	0c3b      	lsrs	r3, r7, #16
 8025e6a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8025e6e:	b2c9      	uxtb	r1, r1
 8025e70:	fb13 f305 	smulbb	r3, r3, r5
 8025e74:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8025e78:	fb02 3201 	mla	r2, r2, r1, r3
 8025e7c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8025e80:	10c3      	asrs	r3, r0, #3
 8025e82:	b2ff      	uxtb	r7, r7
 8025e84:	00c0      	lsls	r0, r0, #3
 8025e86:	b2c0      	uxtb	r0, r0
 8025e88:	fb17 f705 	smulbb	r7, r7, r5
 8025e8c:	fb00 7001 	mla	r0, r0, r1, r7
 8025e90:	b292      	uxth	r2, r2
 8025e92:	fb1c fc05 	smulbb	ip, ip, r5
 8025e96:	b280      	uxth	r0, r0
 8025e98:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025e9c:	fb03 c301 	mla	r3, r3, r1, ip
 8025ea0:	1c51      	adds	r1, r2, #1
 8025ea2:	f100 0c01 	add.w	ip, r0, #1
 8025ea6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025eaa:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8025eae:	b29b      	uxth	r3, r3
 8025eb0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8025eb4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8025eb8:	ea4c 0202 	orr.w	r2, ip, r2
 8025ebc:	f103 0c01 	add.w	ip, r3, #1
 8025ec0:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8025ec4:	095b      	lsrs	r3, r3, #5
 8025ec6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025eca:	431a      	orrs	r2, r3
 8025ecc:	f8a9 2000 	strh.w	r2, [r9]
 8025ed0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8025ed2:	441c      	add	r4, r3
 8025ed4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8025ed6:	f109 0902 	add.w	r9, r9, #2
 8025eda:	441e      	add	r6, r3
 8025edc:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8025ee0:	e647      	b.n	8025b72 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8025ee2:	2800      	cmp	r0, #0
 8025ee4:	f43f aedf 	beq.w	8025ca6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025ee8:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8025eec:	9109      	str	r1, [sp, #36]	; 0x24
 8025eee:	0e09      	lsrs	r1, r1, #24
 8025ef0:	9112      	str	r1, [sp, #72]	; 0x48
 8025ef2:	e6d8      	b.n	8025ca6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025ef4:	b01d      	add	sp, #116	; 0x74
 8025ef6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025efa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8025efa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025efe:	b085      	sub	sp, #20
 8025f00:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8025f04:	9102      	str	r1, [sp, #8]
 8025f06:	2c00      	cmp	r4, #0
 8025f08:	fb04 7103 	mla	r1, r4, r3, r7
 8025f0c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8025f10:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8025f14:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8025f18:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8025f1c:	f2c0 810c 	blt.w	8026138 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8025f20:	45a6      	cmp	lr, r4
 8025f22:	f340 8109 	ble.w	8026138 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8025f26:	2f00      	cmp	r7, #0
 8025f28:	f2c0 8104 	blt.w	8026134 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8025f2c:	42bb      	cmp	r3, r7
 8025f2e:	f340 8101 	ble.w	8026134 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8025f32:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8025f36:	1c7a      	adds	r2, r7, #1
 8025f38:	f100 8101 	bmi.w	802613e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8025f3c:	4293      	cmp	r3, r2
 8025f3e:	f340 80fe 	ble.w	802613e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8025f42:	2e00      	cmp	r6, #0
 8025f44:	f000 80fd 	beq.w	8026142 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8025f48:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8025f4c:	3401      	adds	r4, #1
 8025f4e:	f100 80fc 	bmi.w	802614a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8025f52:	45a6      	cmp	lr, r4
 8025f54:	f340 80f9 	ble.w	802614a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8025f58:	2800      	cmp	r0, #0
 8025f5a:	f000 80f9 	beq.w	8026150 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8025f5e:	2f00      	cmp	r7, #0
 8025f60:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8025f64:	f2c0 80ef 	blt.w	8026146 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8025f68:	42bb      	cmp	r3, r7
 8025f6a:	f340 80ec 	ble.w	8026146 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8025f6e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8025f72:	3701      	adds	r7, #1
 8025f74:	f100 80ef 	bmi.w	8026156 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8025f78:	42bb      	cmp	r3, r7
 8025f7a:	f340 80ec 	ble.w	8026156 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8025f7e:	2e00      	cmp	r6, #0
 8025f80:	f000 80eb 	beq.w	802615a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8025f84:	6852      	ldr	r2, [r2, #4]
 8025f86:	b2b6      	uxth	r6, r6
 8025f88:	b280      	uxth	r0, r0
 8025f8a:	fb00 fe06 	mul.w	lr, r0, r6
 8025f8e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8025f92:	0136      	lsls	r6, r6, #4
 8025f94:	eba6 070e 	sub.w	r7, r6, lr
 8025f98:	b280      	uxth	r0, r0
 8025f9a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8025f9e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8025fa2:	b2bf      	uxth	r7, r7
 8025fa4:	1a1b      	subs	r3, r3, r0
 8025fa6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8025faa:	b29b      	uxth	r3, r3
 8025fac:	fb07 f60a 	mul.w	r6, r7, sl
 8025fb0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8025fb4:	fb0b 6603 	mla	r6, fp, r3, r6
 8025fb8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8025fbc:	fb00 6609 	mla	r6, r0, r9, r6
 8025fc0:	fb0e 6608 	mla	r6, lr, r8, r6
 8025fc4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8025fc8:	9600      	str	r6, [sp, #0]
 8025fca:	2e00      	cmp	r6, #0
 8025fcc:	f000 80af 	beq.w	802612e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8025fd0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025fd4:	fb0b fc0c 	mul.w	ip, fp, ip
 8025fd8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8025fdc:	fb0b f505 	mul.w	r5, fp, r5
 8025fe0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8025fe4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8025fe8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025fec:	44dc      	add	ip, fp
 8025fee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025ff2:	9501      	str	r5, [sp, #4]
 8025ff4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8025ff8:	9503      	str	r5, [sp, #12]
 8025ffa:	9d01      	ldr	r5, [sp, #4]
 8025ffc:	9e02      	ldr	r6, [sp, #8]
 8025ffe:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8026002:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8026006:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802600a:	fb0a fc0c 	mul.w	ip, sl, ip
 802600e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8026012:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8026016:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802601a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802601e:	4465      	add	r5, ip
 8026020:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8026024:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8026028:	fb09 fc0c 	mul.w	ip, r9, ip
 802602c:	fb09 f904 	mul.w	r9, r9, r4
 8026030:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8026034:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8026038:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802603c:	fb08 f404 	mul.w	r4, r8, r4
 8026040:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8026044:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8026048:	fb08 f802 	mul.w	r8, r8, r2
 802604c:	fb0a fa01 	mul.w	sl, sl, r1
 8026050:	0a22      	lsrs	r2, r4, #8
 8026052:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8026056:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802605a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802605e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8026062:	4414      	add	r4, r2
 8026064:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8026068:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802606c:	0a2d      	lsrs	r5, r5, #8
 802606e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8026072:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8026076:	9a03      	ldr	r2, [sp, #12]
 8026078:	8836      	ldrh	r6, [r6, #0]
 802607a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802607e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8026082:	437d      	muls	r5, r7
 8026084:	4461      	add	r1, ip
 8026086:	0a24      	lsrs	r4, r4, #8
 8026088:	fb02 5503 	mla	r5, r2, r3, r5
 802608c:	0a09      	lsrs	r1, r1, #8
 802608e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8026092:	fb04 540e 	mla	r4, r4, lr, r5
 8026096:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802609a:	fb01 4100 	mla	r1, r1, r0, r4
 802609e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80260a2:	0a09      	lsrs	r1, r1, #8
 80260a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80260a8:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80260ac:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80260b0:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80260b4:	fb07 f70a 	mul.w	r7, r7, sl
 80260b8:	fb03 7101 	mla	r1, r3, r1, r7
 80260bc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80260c0:	9b00      	ldr	r3, [sp, #0]
 80260c2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80260c6:	fb0e 1e08 	mla	lr, lr, r8, r1
 80260ca:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80260ce:	fb00 e101 	mla	r1, r0, r1, lr
 80260d2:	43da      	mvns	r2, r3
 80260d4:	1233      	asrs	r3, r6, #8
 80260d6:	b2d2      	uxtb	r2, r2
 80260d8:	10f0      	asrs	r0, r6, #3
 80260da:	0a09      	lsrs	r1, r1, #8
 80260dc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80260e0:	00f6      	lsls	r6, r6, #3
 80260e2:	4353      	muls	r3, r2
 80260e4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80260e8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80260ec:	b2f6      	uxtb	r6, r6
 80260ee:	4321      	orrs	r1, r4
 80260f0:	4350      	muls	r0, r2
 80260f2:	4356      	muls	r6, r2
 80260f4:	1c5a      	adds	r2, r3, #1
 80260f6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80260fa:	0c0b      	lsrs	r3, r1, #16
 80260fc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026100:	1c42      	adds	r2, r0, #1
 8026102:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026106:	0a0a      	lsrs	r2, r1, #8
 8026108:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802610c:	021b      	lsls	r3, r3, #8
 802610e:	00d2      	lsls	r2, r2, #3
 8026110:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026114:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8026118:	4313      	orrs	r3, r2
 802611a:	1c72      	adds	r2, r6, #1
 802611c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8026120:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8026124:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8026128:	4319      	orrs	r1, r3
 802612a:	9b02      	ldr	r3, [sp, #8]
 802612c:	8019      	strh	r1, [r3, #0]
 802612e:	b005      	add	sp, #20
 8026130:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026134:	2500      	movs	r5, #0
 8026136:	e6fe      	b.n	8025f36 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8026138:	2100      	movs	r1, #0
 802613a:	460d      	mov	r5, r1
 802613c:	e706      	b.n	8025f4c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802613e:	2100      	movs	r1, #0
 8026140:	e704      	b.n	8025f4c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8026142:	4631      	mov	r1, r6
 8026144:	e702      	b.n	8025f4c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8026146:	2400      	movs	r4, #0
 8026148:	e713      	b.n	8025f72 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 802614a:	2200      	movs	r2, #0
 802614c:	4614      	mov	r4, r2
 802614e:	e71a      	b.n	8025f86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8026150:	4602      	mov	r2, r0
 8026152:	4604      	mov	r4, r0
 8026154:	e717      	b.n	8025f86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8026156:	2200      	movs	r2, #0
 8026158:	e715      	b.n	8025f86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802615a:	4632      	mov	r2, r6
 802615c:	e713      	b.n	8025f86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08026160 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026164:	b09b      	sub	sp, #108	; 0x6c
 8026166:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 802616a:	9218      	str	r2, [sp, #96]	; 0x60
 802616c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802616e:	9116      	str	r1, [sp, #88]	; 0x58
 8026170:	9307      	str	r3, [sp, #28]
 8026172:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8026176:	9019      	str	r0, [sp, #100]	; 0x64
 8026178:	6850      	ldr	r0, [r2, #4]
 802617a:	6812      	ldr	r2, [r2, #0]
 802617c:	fb00 1303 	mla	r3, r0, r3, r1
 8026180:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026184:	930a      	str	r3, [sp, #40]	; 0x28
 8026186:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8026188:	681b      	ldr	r3, [r3, #0]
 802618a:	930f      	str	r3, [sp, #60]	; 0x3c
 802618c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802618e:	2b00      	cmp	r3, #0
 8026190:	dc03      	bgt.n	802619a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026192:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026194:	2b00      	cmp	r3, #0
 8026196:	f340 8386 	ble.w	80268a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802619a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802619c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80261a0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80261a4:	1e48      	subs	r0, r1, #1
 80261a6:	1e57      	subs	r7, r2, #1
 80261a8:	9b07      	ldr	r3, [sp, #28]
 80261aa:	2b00      	cmp	r3, #0
 80261ac:	f340 8166 	ble.w	802647c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80261b0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80261b4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80261b8:	d406      	bmi.n	80261c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80261ba:	4584      	cmp	ip, r0
 80261bc:	da04      	bge.n	80261c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80261be:	2b00      	cmp	r3, #0
 80261c0:	db02      	blt.n	80261c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80261c2:	42bb      	cmp	r3, r7
 80261c4:	f2c0 815b 	blt.w	802647e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80261c8:	f11c 0c01 	adds.w	ip, ip, #1
 80261cc:	f100 814b 	bmi.w	8026466 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80261d0:	4561      	cmp	r1, ip
 80261d2:	f2c0 8148 	blt.w	8026466 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80261d6:	3301      	adds	r3, #1
 80261d8:	f100 8145 	bmi.w	8026466 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80261dc:	429a      	cmp	r2, r3
 80261de:	f2c0 8142 	blt.w	8026466 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80261e2:	9b07      	ldr	r3, [sp, #28]
 80261e4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80261e6:	9317      	str	r3, [sp, #92]	; 0x5c
 80261e8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80261ea:	2b00      	cmp	r3, #0
 80261ec:	f340 8165 	ble.w	80264ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80261f0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80261f2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80261f4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80261f8:	689b      	ldr	r3, [r3, #8]
 80261fa:	1422      	asrs	r2, r4, #16
 80261fc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8026200:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8026204:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8026208:	f100 81d5 	bmi.w	80265b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802620c:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8026210:	4542      	cmp	r2, r8
 8026212:	f280 81d0 	bge.w	80265b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8026216:	f1bc 0f00 	cmp.w	ip, #0
 802621a:	f2c0 81cc 	blt.w	80265b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802621e:	f10e 38ff 	add.w	r8, lr, #4294967295	; 0xffffffff
 8026222:	45c4      	cmp	ip, r8
 8026224:	f280 81c7 	bge.w	80265b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8026228:	b21b      	sxth	r3, r3
 802622a:	fb0c 2203 	mla	r2, ip, r3, r2
 802622e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026230:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8026234:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8026238:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802623c:	2900      	cmp	r1, #0
 802623e:	f000 8182 	beq.w	8026546 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8026242:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8026246:	950b      	str	r5, [sp, #44]	; 0x2c
 8026248:	0e2d      	lsrs	r5, r5, #24
 802624a:	9512      	str	r5, [sp, #72]	; 0x48
 802624c:	b180      	cbz	r0, 8026270 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802624e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8026252:	3b01      	subs	r3, #1
 8026254:	009b      	lsls	r3, r3, #2
 8026256:	3304      	adds	r3, #4
 8026258:	eb08 0c03 	add.w	ip, r8, r3
 802625c:	f858 3003 	ldr.w	r3, [r8, r3]
 8026260:	9308      	str	r3, [sp, #32]
 8026262:	0e1b      	lsrs	r3, r3, #24
 8026264:	9310      	str	r3, [sp, #64]	; 0x40
 8026266:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802626a:	930c      	str	r3, [sp, #48]	; 0x30
 802626c:	0e1b      	lsrs	r3, r3, #24
 802626e:	9313      	str	r3, [sp, #76]	; 0x4c
 8026270:	b289      	uxth	r1, r1
 8026272:	b280      	uxth	r0, r0
 8026274:	fb01 f900 	mul.w	r9, r1, r0
 8026278:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802627c:	0109      	lsls	r1, r1, #4
 802627e:	eba1 0809 	sub.w	r8, r1, r9
 8026282:	b280      	uxth	r0, r0
 8026284:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8026288:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802628a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802628c:	fa1f f888 	uxth.w	r8, r8
 8026290:	1a09      	subs	r1, r1, r0
 8026292:	b289      	uxth	r1, r1
 8026294:	fb08 f303 	mul.w	r3, r8, r3
 8026298:	fb01 330e 	mla	r3, r1, lr, r3
 802629c:	fb00 3305 	mla	r3, r0, r5, r3
 80262a0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80262a2:	fb09 3305 	mla	r3, r9, r5, r3
 80262a6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80262aa:	2b00      	cmp	r3, #0
 80262ac:	f000 80d2 	beq.w	8026454 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80262b0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80262b4:	d01b      	beq.n	80262ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 80262b6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80262ba:	fb0e fa0a 	mul.w	sl, lr, sl
 80262be:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80262c2:	fb0e fe02 	mul.w	lr, lr, r2
 80262c6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80262ca:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80262ce:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80262d2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80262d6:	4452      	add	r2, sl
 80262d8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80262dc:	0a12      	lsrs	r2, r2, #8
 80262de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80262e2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80262e6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80262ea:	ea42 020c 	orr.w	r2, r2, ip
 80262ee:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80262f0:	2dff      	cmp	r5, #255	; 0xff
 80262f2:	d021      	beq.n	8026338 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80262f4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80262f6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80262fa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80262fc:	fb05 fb0b 	mul.w	fp, r5, fp
 8026300:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8026302:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026306:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026308:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802630c:	fb05 fa0a 	mul.w	sl, r5, sl
 8026310:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026314:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8026318:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802631c:	44de      	add	lr, fp
 802631e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026322:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026326:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802632a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802632e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026332:	ea4e 050a 	orr.w	r5, lr, sl
 8026336:	950b      	str	r5, [sp, #44]	; 0x2c
 8026338:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802633a:	2dff      	cmp	r5, #255	; 0xff
 802633c:	d021      	beq.n	8026382 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802633e:	9d08      	ldr	r5, [sp, #32]
 8026340:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8026344:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8026346:	fb05 fb0b 	mul.w	fp, r5, fp
 802634a:	9d08      	ldr	r5, [sp, #32]
 802634c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8026350:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8026352:	fb05 fa0e 	mul.w	sl, r5, lr
 8026356:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802635a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802635e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8026362:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8026366:	44de      	add	lr, fp
 8026368:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802636c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026370:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026374:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026378:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802637c:	ea4e 050a 	orr.w	r5, lr, sl
 8026380:	9508      	str	r5, [sp, #32]
 8026382:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8026384:	2dff      	cmp	r5, #255	; 0xff
 8026386:	d021      	beq.n	80263cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8026388:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802638a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802638e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8026390:	fb05 fb0b 	mul.w	fp, r5, fp
 8026394:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8026396:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802639a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802639c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80263a0:	fb05 fa0a 	mul.w	sl, r5, sl
 80263a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80263a8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80263ac:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80263b0:	44de      	add	lr, fp
 80263b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80263b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80263ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80263be:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80263c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80263c6:	ea4e 050a 	orr.w	r5, lr, sl
 80263ca:	950c      	str	r5, [sp, #48]	; 0x30
 80263cc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80263ce:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80263d2:	9d08      	ldr	r5, [sp, #32]
 80263d4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80263d8:	fb08 fc0c 	mul.w	ip, r8, ip
 80263dc:	fb01 cc0e 	mla	ip, r1, lr, ip
 80263e0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80263e4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80263e6:	fb00 cc0e 	mla	ip, r0, lr, ip
 80263ea:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80263ee:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80263f0:	fb09 cc0e 	mla	ip, r9, lr, ip
 80263f4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80263f8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80263fc:	fb08 f80e 	mul.w	r8, r8, lr
 8026400:	fb01 8202 	mla	r2, r1, r2, r8
 8026404:	9908      	ldr	r1, [sp, #32]
 8026406:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802640a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802640c:	fb00 220a 	mla	r2, r0, sl, r2
 8026410:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8026414:	fb09 2900 	mla	r9, r9, r0, r2
 8026418:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802641c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026420:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026424:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8026428:	ea4c 0c09 	orr.w	ip, ip, r9
 802642c:	2bff      	cmp	r3, #255	; 0xff
 802642e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8026432:	f040 8091 	bne.w	8026558 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8026436:	ea4f 135c 	mov.w	r3, ip, lsr #5
 802643a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 802643e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026442:	f022 0207 	bic.w	r2, r2, #7
 8026446:	431a      	orrs	r2, r3
 8026448:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 802644c:	ea4c 0c02 	orr.w	ip, ip, r2
 8026450:	f8a7 c000 	strh.w	ip, [r7]
 8026454:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8026456:	441c      	add	r4, r3
 8026458:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802645a:	441e      	add	r6, r3
 802645c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802645e:	3b01      	subs	r3, #1
 8026460:	3702      	adds	r7, #2
 8026462:	9317      	str	r3, [sp, #92]	; 0x5c
 8026464:	e6c0      	b.n	80261e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8026466:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8026468:	441c      	add	r4, r3
 802646a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802646c:	441e      	add	r6, r3
 802646e:	9b07      	ldr	r3, [sp, #28]
 8026470:	3b01      	subs	r3, #1
 8026472:	9307      	str	r3, [sp, #28]
 8026474:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026476:	3302      	adds	r3, #2
 8026478:	930a      	str	r3, [sp, #40]	; 0x28
 802647a:	e695      	b.n	80261a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802647c:	d024      	beq.n	80264c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 802647e:	9b07      	ldr	r3, [sp, #28]
 8026480:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8026482:	3b01      	subs	r3, #1
 8026484:	fb00 4003 	mla	r0, r0, r3, r4
 8026488:	1400      	asrs	r0, r0, #16
 802648a:	f53f aeaa 	bmi.w	80261e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802648e:	3901      	subs	r1, #1
 8026490:	4288      	cmp	r0, r1
 8026492:	f6bf aea6 	bge.w	80261e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8026496:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8026498:	fb01 6303 	mla	r3, r1, r3, r6
 802649c:	141b      	asrs	r3, r3, #16
 802649e:	f53f aea0 	bmi.w	80261e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80264a2:	3a01      	subs	r2, #1
 80264a4:	4293      	cmp	r3, r2
 80264a6:	f6bf ae9c 	bge.w	80261e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80264aa:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80264ae:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 80264b2:	f1bb 0f00 	cmp.w	fp, #0
 80264b6:	f300 809a 	bgt.w	80265ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80264ba:	9b07      	ldr	r3, [sp, #28]
 80264bc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80264c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80264c2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80264c6:	930a      	str	r3, [sp, #40]	; 0x28
 80264c8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80264ca:	2b00      	cmp	r3, #0
 80264cc:	f340 81eb 	ble.w	80268a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80264d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80264d4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80264d8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80264dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80264de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80264e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80264e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80264ea:	eef0 6a62 	vmov.f32	s13, s5
 80264ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80264f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80264f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80264fa:	ee16 4a90 	vmov	r4, s13
 80264fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026502:	eef0 6a43 	vmov.f32	s13, s6
 8026506:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802650a:	ee12 2a90 	vmov	r2, s5
 802650e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026512:	fb92 f3f3 	sdiv	r3, r2, r3
 8026516:	ee13 2a10 	vmov	r2, s6
 802651a:	9327      	str	r3, [sp, #156]	; 0x9c
 802651c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802651e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026522:	9328      	str	r3, [sp, #160]	; 0xa0
 8026524:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8026526:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8026528:	3b01      	subs	r3, #1
 802652a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802652e:	9316      	str	r3, [sp, #88]	; 0x58
 8026530:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026532:	bf08      	it	eq
 8026534:	4613      	moveq	r3, r2
 8026536:	ee16 6a90 	vmov	r6, s13
 802653a:	9307      	str	r3, [sp, #28]
 802653c:	eeb0 3a67 	vmov.f32	s6, s15
 8026540:	eef0 2a47 	vmov.f32	s5, s14
 8026544:	e622      	b.n	802618c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8026546:	2800      	cmp	r0, #0
 8026548:	f43f ae92 	beq.w	8026270 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802654c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8026550:	9308      	str	r3, [sp, #32]
 8026552:	0e1b      	lsrs	r3, r3, #24
 8026554:	9310      	str	r3, [sp, #64]	; 0x40
 8026556:	e68b      	b.n	8026270 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8026558:	8839      	ldrh	r1, [r7, #0]
 802655a:	4dd4      	ldr	r5, [pc, #848]	; (80268ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802655c:	43db      	mvns	r3, r3
 802655e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8026562:	fa5f f883 	uxtb.w	r8, r3
 8026566:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 802656a:	fb0e fe08 	mul.w	lr, lr, r8
 802656e:	10c8      	asrs	r0, r1, #3
 8026570:	00cb      	lsls	r3, r1, #3
 8026572:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026576:	f10e 0101 	add.w	r1, lr, #1
 802657a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802657e:	fb00 f008 	mul.w	r0, r0, r8
 8026582:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8026586:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802658a:	f100 0e01 	add.w	lr, r0, #1
 802658e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8026592:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8026596:	b2db      	uxtb	r3, r3
 8026598:	b2c9      	uxtb	r1, r1
 802659a:	00d2      	lsls	r2, r2, #3
 802659c:	fb03 f308 	mul.w	r3, r3, r8
 80265a0:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80265a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80265a8:	430a      	orrs	r2, r1
 80265aa:	1c59      	adds	r1, r3, #1
 80265ac:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80265b0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80265b4:	e748      	b.n	8026448 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 80265b6:	f112 0801 	adds.w	r8, r2, #1
 80265ba:	f53f af4b 	bmi.w	8026454 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80265be:	4543      	cmp	r3, r8
 80265c0:	f6ff af48 	blt.w	8026454 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80265c4:	f11c 0801 	adds.w	r8, ip, #1
 80265c8:	f53f af44 	bmi.w	8026454 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80265cc:	45c6      	cmp	lr, r8
 80265ce:	f6ff af41 	blt.w	8026454 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80265d2:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 80265d6:	fa0f f28e 	sxth.w	r2, lr
 80265da:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80265de:	9200      	str	r2, [sp, #0]
 80265e0:	b21b      	sxth	r3, r3
 80265e2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80265e4:	9819      	ldr	r0, [sp, #100]	; 0x64
 80265e6:	4639      	mov	r1, r7
 80265e8:	f7ff fc87 	bl	8025efa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80265ec:	e732      	b.n	8026454 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80265ee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80265f0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80265f2:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80265f6:	1421      	asrs	r1, r4, #16
 80265f8:	1433      	asrs	r3, r6, #16
 80265fa:	fb07 1303 	mla	r3, r7, r3, r1
 80265fe:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8026600:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8026604:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8026608:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802660c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8026610:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8026614:	2a00      	cmp	r2, #0
 8026616:	f000 8107 	beq.w	8026828 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802661a:	684d      	ldr	r5, [r1, #4]
 802661c:	950d      	str	r5, [sp, #52]	; 0x34
 802661e:	0e2d      	lsrs	r5, r5, #24
 8026620:	9514      	str	r5, [sp, #80]	; 0x50
 8026622:	b178      	cbz	r0, 8026644 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8026624:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8026628:	3f01      	subs	r7, #1
 802662a:	00bf      	lsls	r7, r7, #2
 802662c:	3704      	adds	r7, #4
 802662e:	eb01 0e07 	add.w	lr, r1, r7
 8026632:	59c9      	ldr	r1, [r1, r7]
 8026634:	9109      	str	r1, [sp, #36]	; 0x24
 8026636:	0e09      	lsrs	r1, r1, #24
 8026638:	9111      	str	r1, [sp, #68]	; 0x44
 802663a:	f8de 1004 	ldr.w	r1, [lr, #4]
 802663e:	910e      	str	r1, [sp, #56]	; 0x38
 8026640:	0e09      	lsrs	r1, r1, #24
 8026642:	9115      	str	r1, [sp, #84]	; 0x54
 8026644:	b292      	uxth	r2, r2
 8026646:	b280      	uxth	r0, r0
 8026648:	fb02 f900 	mul.w	r9, r2, r0
 802664c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8026650:	0112      	lsls	r2, r2, #4
 8026652:	eba2 0e09 	sub.w	lr, r2, r9
 8026656:	b280      	uxth	r0, r0
 8026658:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 802665c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802665e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8026660:	fa1f fe8e 	uxth.w	lr, lr
 8026664:	1a09      	subs	r1, r1, r0
 8026666:	b289      	uxth	r1, r1
 8026668:	fb0e f202 	mul.w	r2, lr, r2
 802666c:	fb01 220c 	mla	r2, r1, ip, r2
 8026670:	fb00 2205 	mla	r2, r0, r5, r2
 8026674:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8026676:	fb09 2205 	mla	r2, r9, r5, r2
 802667a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802667e:	2a00      	cmp	r2, #0
 8026680:	f000 80c9 	beq.w	8026816 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8026684:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8026688:	d019      	beq.n	80266be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802668a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802668e:	fb0c fa0a 	mul.w	sl, ip, sl
 8026692:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8026696:	fb0c fc03 	mul.w	ip, ip, r3
 802669a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802669e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80266a2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80266a6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80266aa:	4453      	add	r3, sl
 80266ac:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80266b0:	0a1b      	lsrs	r3, r3, #8
 80266b2:	0a3f      	lsrs	r7, r7, #8
 80266b4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80266b8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80266bc:	433b      	orrs	r3, r7
 80266be:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80266c0:	2dff      	cmp	r5, #255	; 0xff
 80266c2:	d020      	beq.n	8026706 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 80266c4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80266c6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80266ca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80266cc:	436f      	muls	r7, r5
 80266ce:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80266d0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80266d4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80266d6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80266da:	fb05 fa0a 	mul.w	sl, r5, sl
 80266de:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80266e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80266e6:	44bc      	add	ip, r7
 80266e8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80266ec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80266f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80266f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80266f8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80266fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026700:	ea4c 050a 	orr.w	r5, ip, sl
 8026704:	950d      	str	r5, [sp, #52]	; 0x34
 8026706:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8026708:	2dff      	cmp	r5, #255	; 0xff
 802670a:	d020      	beq.n	802674e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 802670c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802670e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8026712:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8026714:	436f      	muls	r7, r5
 8026716:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8026718:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802671c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802671e:	fb05 fa0c 	mul.w	sl, r5, ip
 8026722:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8026726:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802672a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802672e:	44bc      	add	ip, r7
 8026730:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8026734:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026738:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802673c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026740:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026744:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026748:	ea4c 050a 	orr.w	r5, ip, sl
 802674c:	9509      	str	r5, [sp, #36]	; 0x24
 802674e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8026750:	2dff      	cmp	r5, #255	; 0xff
 8026752:	d020      	beq.n	8026796 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8026754:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026756:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802675a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802675c:	436f      	muls	r7, r5
 802675e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026760:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026764:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8026766:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802676a:	fb05 fa0a 	mul.w	sl, r5, sl
 802676e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026772:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026776:	44bc      	add	ip, r7
 8026778:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802677c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026780:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026784:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026788:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802678c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026790:	ea4c 050a 	orr.w	r5, ip, sl
 8026794:	950e      	str	r5, [sp, #56]	; 0x38
 8026796:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8026798:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802679c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802679e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80267a2:	fb0e f707 	mul.w	r7, lr, r7
 80267a6:	fb01 770c 	mla	r7, r1, ip, r7
 80267aa:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80267ae:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80267b0:	fb00 770c 	mla	r7, r0, ip, r7
 80267b4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80267b8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80267ba:	fb09 770c 	mla	r7, r9, ip, r7
 80267be:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80267c2:	fb0e fe0c 	mul.w	lr, lr, ip
 80267c6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80267ca:	fb01 e303 	mla	r3, r1, r3, lr
 80267ce:	9909      	ldr	r1, [sp, #36]	; 0x24
 80267d0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80267d4:	990e      	ldr	r1, [sp, #56]	; 0x38
 80267d6:	fb00 330a 	mla	r3, r0, sl, r3
 80267da:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80267de:	fb09 3c0c 	mla	ip, r9, ip, r3
 80267e2:	0a3f      	lsrs	r7, r7, #8
 80267e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80267e8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80267ec:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80267f0:	ea47 070c 	orr.w	r7, r7, ip
 80267f4:	2aff      	cmp	r2, #255	; 0xff
 80267f6:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80267fa:	d11e      	bne.n	802683a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 80267fc:	097a      	lsrs	r2, r7, #5
 80267fe:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8026802:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026806:	f023 0307 	bic.w	r3, r3, #7
 802680a:	4313      	orrs	r3, r2
 802680c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8026810:	431f      	orrs	r7, r3
 8026812:	f8a8 7000 	strh.w	r7, [r8]
 8026816:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8026818:	441c      	add	r4, r3
 802681a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802681c:	f108 0802 	add.w	r8, r8, #2
 8026820:	441e      	add	r6, r3
 8026822:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8026826:	e644      	b.n	80264b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8026828:	2800      	cmp	r0, #0
 802682a:	f43f af0b 	beq.w	8026644 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802682e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8026832:	9109      	str	r1, [sp, #36]	; 0x24
 8026834:	0e09      	lsrs	r1, r1, #24
 8026836:	9111      	str	r1, [sp, #68]	; 0x44
 8026838:	e704      	b.n	8026644 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802683a:	f8b8 1000 	ldrh.w	r1, [r8]
 802683e:	43d2      	mvns	r2, r2
 8026840:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8026844:	fa5f fe82 	uxtb.w	lr, r2
 8026848:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802684c:	fb0c fc0e 	mul.w	ip, ip, lr
 8026850:	10c8      	asrs	r0, r1, #3
 8026852:	00ca      	lsls	r2, r1, #3
 8026854:	f10c 0101 	add.w	r1, ip, #1
 8026858:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802685c:	0c39      	lsrs	r1, r7, #16
 802685e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026862:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026866:	4911      	ldr	r1, [pc, #68]	; (80268ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8026868:	fb00 f00e 	mul.w	r0, r0, lr
 802686c:	fa5f fc8c 	uxtb.w	ip, ip
 8026870:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8026874:	b2d2      	uxtb	r2, r2
 8026876:	1c41      	adds	r1, r0, #1
 8026878:	fb02 f20e 	mul.w	r2, r2, lr
 802687c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8026880:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026884:	1c51      	adds	r1, r2, #1
 8026886:	00c0      	lsls	r0, r0, #3
 8026888:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802688c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026890:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8026894:	ea4c 0c00 	orr.w	ip, ip, r0
 8026898:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802689c:	ea47 0c0c 	orr.w	ip, r7, ip
 80268a0:	f8a8 c000 	strh.w	ip, [r8]
 80268a4:	e7b7      	b.n	8026816 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80268a6:	b01b      	add	sp, #108	; 0x6c
 80268a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80268ac:	fffff800 	.word	0xfffff800

080268b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80268b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80268b4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80268b8:	2d00      	cmp	r5, #0
 80268ba:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80268be:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80268c2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80268c6:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80268ca:	fb05 0e03 	mla	lr, r5, r3, r0
 80268ce:	f2c0 808c 	blt.w	80269ea <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80268d2:	45a9      	cmp	r9, r5
 80268d4:	f340 8089 	ble.w	80269ea <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80268d8:	2800      	cmp	r0, #0
 80268da:	f2c0 8084 	blt.w	80269e6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80268de:	4580      	cmp	r8, r0
 80268e0:	f340 8081 	ble.w	80269e6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80268e4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80268e8:	f01e 0f01 	tst.w	lr, #1
 80268ec:	5d16      	ldrb	r6, [r2, r4]
 80268ee:	bf0c      	ite	eq
 80268f0:	f006 060f 	andeq.w	r6, r6, #15
 80268f4:	1136      	asrne	r6, r6, #4
 80268f6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80268fa:	b2f6      	uxtb	r6, r6
 80268fc:	1c44      	adds	r4, r0, #1
 80268fe:	d477      	bmi.n	80269f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8026900:	45a0      	cmp	r8, r4
 8026902:	dd75      	ble.n	80269f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8026904:	2f00      	cmp	r7, #0
 8026906:	d075      	beq.n	80269f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8026908:	f10e 0a01 	add.w	sl, lr, #1
 802690c:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8026910:	f01a 0f01 	tst.w	sl, #1
 8026914:	5d14      	ldrb	r4, [r2, r4]
 8026916:	bf0c      	ite	eq
 8026918:	f004 040f 	andeq.w	r4, r4, #15
 802691c:	1124      	asrne	r4, r4, #4
 802691e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8026922:	b2e4      	uxtb	r4, r4
 8026924:	3501      	adds	r5, #1
 8026926:	d469      	bmi.n	80269fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8026928:	45a9      	cmp	r9, r5
 802692a:	dd67      	ble.n	80269fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802692c:	f1bc 0f00 	cmp.w	ip, #0
 8026930:	d067      	beq.n	8026a02 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8026932:	2800      	cmp	r0, #0
 8026934:	db60      	blt.n	80269f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8026936:	4580      	cmp	r8, r0
 8026938:	dd5e      	ble.n	80269f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802693a:	eb03 090e 	add.w	r9, r3, lr
 802693e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8026942:	f019 0f01 	tst.w	r9, #1
 8026946:	5d55      	ldrb	r5, [r2, r5]
 8026948:	bf0c      	ite	eq
 802694a:	f005 050f 	andeq.w	r5, r5, #15
 802694e:	112d      	asrne	r5, r5, #4
 8026950:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8026954:	b2ed      	uxtb	r5, r5
 8026956:	3001      	adds	r0, #1
 8026958:	d456      	bmi.n	8026a08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802695a:	4580      	cmp	r8, r0
 802695c:	dd54      	ble.n	8026a08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802695e:	2f00      	cmp	r7, #0
 8026960:	d054      	beq.n	8026a0c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8026962:	3301      	adds	r3, #1
 8026964:	449e      	add	lr, r3
 8026966:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802696a:	f01e 0f01 	tst.w	lr, #1
 802696e:	5cd0      	ldrb	r0, [r2, r3]
 8026970:	bf0c      	ite	eq
 8026972:	f000 000f 	andeq.w	r0, r0, #15
 8026976:	1100      	asrne	r0, r0, #4
 8026978:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802697c:	b2c3      	uxtb	r3, r0
 802697e:	b2ba      	uxth	r2, r7
 8026980:	fa1f fc8c 	uxth.w	ip, ip
 8026984:	fb02 f00c 	mul.w	r0, r2, ip
 8026988:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802698c:	0112      	lsls	r2, r2, #4
 802698e:	fa1f fc8c 	uxth.w	ip, ip
 8026992:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8026996:	1a12      	subs	r2, r2, r0
 8026998:	eba7 070c 	sub.w	r7, r7, ip
 802699c:	b292      	uxth	r2, r2
 802699e:	b2bf      	uxth	r7, r7
 80269a0:	4362      	muls	r2, r4
 80269a2:	fb06 2207 	mla	r2, r6, r7, r2
 80269a6:	fb0c 2505 	mla	r5, ip, r5, r2
 80269aa:	fb00 5303 	mla	r3, r0, r3, r5
 80269ae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80269b2:	b1b3      	cbz	r3, 80269e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80269b4:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80269b8:	435a      	muls	r2, r3
 80269ba:	1c53      	adds	r3, r2, #1
 80269bc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80269c0:	4a2d      	ldr	r2, [pc, #180]	; (8026a78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80269c2:	121b      	asrs	r3, r3, #8
 80269c4:	6812      	ldr	r2, [r2, #0]
 80269c6:	2bff      	cmp	r3, #255	; 0xff
 80269c8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80269cc:	d120      	bne.n	8026a10 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80269ce:	4b2b      	ldr	r3, [pc, #172]	; (8026a7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80269d0:	0950      	lsrs	r0, r2, #5
 80269d2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80269d6:	4033      	ands	r3, r6
 80269d8:	4318      	orrs	r0, r3
 80269da:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80269de:	4302      	orrs	r2, r0
 80269e0:	800a      	strh	r2, [r1, #0]
 80269e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80269e6:	2600      	movs	r6, #0
 80269e8:	e788      	b.n	80268fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80269ea:	2400      	movs	r4, #0
 80269ec:	4626      	mov	r6, r4
 80269ee:	e799      	b.n	8026924 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80269f0:	2400      	movs	r4, #0
 80269f2:	e797      	b.n	8026924 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80269f4:	463c      	mov	r4, r7
 80269f6:	e795      	b.n	8026924 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80269f8:	2500      	movs	r5, #0
 80269fa:	e7ac      	b.n	8026956 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80269fc:	2300      	movs	r3, #0
 80269fe:	461d      	mov	r5, r3
 8026a00:	e7bd      	b.n	802697e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026a02:	4663      	mov	r3, ip
 8026a04:	4665      	mov	r5, ip
 8026a06:	e7ba      	b.n	802697e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026a08:	2300      	movs	r3, #0
 8026a0a:	e7b8      	b.n	802697e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026a0c:	463b      	mov	r3, r7
 8026a0e:	e7b6      	b.n	802697e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026a10:	880d      	ldrh	r5, [r1, #0]
 8026a12:	b29f      	uxth	r7, r3
 8026a14:	122c      	asrs	r4, r5, #8
 8026a16:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8026a1a:	43db      	mvns	r3, r3
 8026a1c:	b2db      	uxtb	r3, r3
 8026a1e:	fb10 f007 	smulbb	r0, r0, r7
 8026a22:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026a26:	fb04 0403 	mla	r4, r4, r3, r0
 8026a2a:	b2f6      	uxtb	r6, r6
 8026a2c:	10e8      	asrs	r0, r5, #3
 8026a2e:	b2d2      	uxtb	r2, r2
 8026a30:	00ed      	lsls	r5, r5, #3
 8026a32:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026a36:	fb12 f207 	smulbb	r2, r2, r7
 8026a3a:	fb16 f607 	smulbb	r6, r6, r7
 8026a3e:	b2ed      	uxtb	r5, r5
 8026a40:	b2a4      	uxth	r4, r4
 8026a42:	fb00 6603 	mla	r6, r0, r3, r6
 8026a46:	fb05 2303 	mla	r3, r5, r3, r2
 8026a4a:	b29a      	uxth	r2, r3
 8026a4c:	1c63      	adds	r3, r4, #1
 8026a4e:	b2b0      	uxth	r0, r6
 8026a50:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8026a54:	1c53      	adds	r3, r2, #1
 8026a56:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026a5a:	1c42      	adds	r2, r0, #1
 8026a5c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026a60:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8026a64:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026a68:	0940      	lsrs	r0, r0, #5
 8026a6a:	4323      	orrs	r3, r4
 8026a6c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026a70:	4303      	orrs	r3, r0
 8026a72:	800b      	strh	r3, [r1, #0]
 8026a74:	e7b5      	b.n	80269e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8026a76:	bf00      	nop
 8026a78:	2000e1d0 	.word	0x2000e1d0
 8026a7c:	00fff800 	.word	0x00fff800

08026a80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026a80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026a84:	b097      	sub	sp, #92	; 0x5c
 8026a86:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8026a8a:	9214      	str	r2, [sp, #80]	; 0x50
 8026a8c:	9309      	str	r3, [sp, #36]	; 0x24
 8026a8e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8026a90:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8026a94:	910d      	str	r1, [sp, #52]	; 0x34
 8026a96:	930f      	str	r3, [sp, #60]	; 0x3c
 8026a98:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8026a9c:	9015      	str	r0, [sp, #84]	; 0x54
 8026a9e:	6850      	ldr	r0, [r2, #4]
 8026aa0:	6812      	ldr	r2, [r2, #0]
 8026aa2:	fb00 1303 	mla	r3, r0, r3, r1
 8026aa6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8026aaa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026aac:	689b      	ldr	r3, [r3, #8]
 8026aae:	3301      	adds	r3, #1
 8026ab0:	f023 0301 	bic.w	r3, r3, #1
 8026ab4:	930a      	str	r3, [sp, #40]	; 0x28
 8026ab6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026ab8:	681f      	ldr	r7, [r3, #0]
 8026aba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026abc:	2b00      	cmp	r3, #0
 8026abe:	dc03      	bgt.n	8026ac8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026ac0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8026ac2:	2b00      	cmp	r3, #0
 8026ac4:	f340 8287 	ble.w	8026fd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8026ac8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026aca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026ace:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026ad2:	1e48      	subs	r0, r1, #1
 8026ad4:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
 8026ad8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026ada:	2b00      	cmp	r3, #0
 8026adc:	f340 80c4 	ble.w	8026c68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8026ae0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026ae4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026ae8:	d406      	bmi.n	8026af8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026aea:	4586      	cmp	lr, r0
 8026aec:	da04      	bge.n	8026af8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026aee:	2b00      	cmp	r3, #0
 8026af0:	db02      	blt.n	8026af8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026af2:	4563      	cmp	r3, ip
 8026af4:	f2c0 80b9 	blt.w	8026c6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8026af8:	f11e 0e01 	adds.w	lr, lr, #1
 8026afc:	f100 80aa 	bmi.w	8026c54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026b00:	4571      	cmp	r1, lr
 8026b02:	f2c0 80a7 	blt.w	8026c54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026b06:	3301      	adds	r3, #1
 8026b08:	f100 80a4 	bmi.w	8026c54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026b0c:	429a      	cmp	r2, r3
 8026b0e:	f2c0 80a1 	blt.w	8026c54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026b12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026b14:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8026b18:	930e      	str	r3, [sp, #56]	; 0x38
 8026b1a:	46c8      	mov	r8, r9
 8026b1c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026b1e:	2b00      	cmp	r3, #0
 8026b20:	f340 80c3 	ble.w	8026caa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8026b24:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026b26:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8026b2a:	1423      	asrs	r3, r4, #16
 8026b2c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026b30:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026b34:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8026b38:	f100 814d 	bmi.w	8026dd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026b3c:	f10c 3bff 	add.w	fp, ip, #4294967295	; 0xffffffff
 8026b40:	455b      	cmp	r3, fp
 8026b42:	f280 8148 	bge.w	8026dd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026b46:	2800      	cmp	r0, #0
 8026b48:	f2c0 8145 	blt.w	8026dd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026b4c:	f10e 3bff 	add.w	fp, lr, #4294967295	; 0xffffffff
 8026b50:	4558      	cmp	r0, fp
 8026b52:	f280 8140 	bge.w	8026dd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026b56:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8026b58:	fb00 3305 	mla	r3, r0, r5, r3
 8026b5c:	0858      	lsrs	r0, r3, #1
 8026b5e:	07dd      	lsls	r5, r3, #31
 8026b60:	f817 c000 	ldrb.w	ip, [r7, r0]
 8026b64:	bf54      	ite	pl
 8026b66:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026b6a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026b6e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026b72:	fa5f fc8c 	uxtb.w	ip, ip
 8026b76:	2a00      	cmp	r2, #0
 8026b78:	f000 80db 	beq.w	8026d32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8026b7c:	1c58      	adds	r0, r3, #1
 8026b7e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8026b82:	07c0      	lsls	r0, r0, #31
 8026b84:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8026b88:	bf54      	ite	pl
 8026b8a:	f00e 0e0f 	andpl.w	lr, lr, #15
 8026b8e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8026b92:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8026b96:	fa5f f08e 	uxtb.w	r0, lr
 8026b9a:	9010      	str	r0, [sp, #64]	; 0x40
 8026b9c:	b1c9      	cbz	r1, 8026bd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026b9e:	4453      	add	r3, sl
 8026ba0:	0858      	lsrs	r0, r3, #1
 8026ba2:	07dd      	lsls	r5, r3, #31
 8026ba4:	5c38      	ldrb	r0, [r7, r0]
 8026ba6:	bf54      	ite	pl
 8026ba8:	f000 000f 	andpl.w	r0, r0, #15
 8026bac:	1100      	asrmi	r0, r0, #4
 8026bae:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026bb2:	3301      	adds	r3, #1
 8026bb4:	b2c0      	uxtb	r0, r0
 8026bb6:	900b      	str	r0, [sp, #44]	; 0x2c
 8026bb8:	0858      	lsrs	r0, r3, #1
 8026bba:	07dd      	lsls	r5, r3, #31
 8026bbc:	f817 e000 	ldrb.w	lr, [r7, r0]
 8026bc0:	bf54      	ite	pl
 8026bc2:	f00e 030f 	andpl.w	r3, lr, #15
 8026bc6:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8026bca:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026bce:	b2db      	uxtb	r3, r3
 8026bd0:	9311      	str	r3, [sp, #68]	; 0x44
 8026bd2:	b292      	uxth	r2, r2
 8026bd4:	b289      	uxth	r1, r1
 8026bd6:	fb02 f301 	mul.w	r3, r2, r1
 8026bda:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8026bde:	0112      	lsls	r2, r2, #4
 8026be0:	b289      	uxth	r1, r1
 8026be2:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8026be6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8026be8:	1ad2      	subs	r2, r2, r3
 8026bea:	1a40      	subs	r0, r0, r1
 8026bec:	b292      	uxth	r2, r2
 8026bee:	436a      	muls	r2, r5
 8026bf0:	b280      	uxth	r0, r0
 8026bf2:	fb0c 2c00 	mla	ip, ip, r0, r2
 8026bf6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8026bf8:	fb01 c102 	mla	r1, r1, r2, ip
 8026bfc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8026bfe:	fb03 1302 	mla	r3, r3, r2, r1
 8026c02:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026c06:	b1db      	cbz	r3, 8026c40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026c08:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026c0a:	4353      	muls	r3, r2
 8026c0c:	1c5a      	adds	r2, r3, #1
 8026c0e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026c12:	4ac6      	ldr	r2, [pc, #792]	; (8026f2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8026c14:	121b      	asrs	r3, r3, #8
 8026c16:	6812      	ldr	r2, [r2, #0]
 8026c18:	2bff      	cmp	r3, #255	; 0xff
 8026c1a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8026c1e:	f040 8099 	bne.w	8026d54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8026c22:	0953      	lsrs	r3, r2, #5
 8026c24:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8026c28:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026c2c:	f02c 0c07 	bic.w	ip, ip, #7
 8026c30:	ea43 0c0c 	orr.w	ip, r3, ip
 8026c34:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026c38:	ea4c 0202 	orr.w	r2, ip, r2
 8026c3c:	f8a8 2000 	strh.w	r2, [r8]
 8026c40:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026c42:	441c      	add	r4, r3
 8026c44:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026c46:	441e      	add	r6, r3
 8026c48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026c4a:	3b01      	subs	r3, #1
 8026c4c:	f108 0802 	add.w	r8, r8, #2
 8026c50:	930e      	str	r3, [sp, #56]	; 0x38
 8026c52:	e763      	b.n	8026b1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8026c54:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026c56:	441c      	add	r4, r3
 8026c58:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026c5a:	441e      	add	r6, r3
 8026c5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026c5e:	3b01      	subs	r3, #1
 8026c60:	9309      	str	r3, [sp, #36]	; 0x24
 8026c62:	f109 0902 	add.w	r9, r9, #2
 8026c66:	e737      	b.n	8026ad8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8026c68:	d024      	beq.n	8026cb4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8026c6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026c6c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8026c6e:	3b01      	subs	r3, #1
 8026c70:	fb00 4003 	mla	r0, r0, r3, r4
 8026c74:	1400      	asrs	r0, r0, #16
 8026c76:	f53f af4c 	bmi.w	8026b12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026c7a:	3901      	subs	r1, #1
 8026c7c:	4288      	cmp	r0, r1
 8026c7e:	f6bf af48 	bge.w	8026b12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026c82:	9924      	ldr	r1, [sp, #144]	; 0x90
 8026c84:	fb01 6303 	mla	r3, r1, r3, r6
 8026c88:	141b      	asrs	r3, r3, #16
 8026c8a:	f53f af42 	bmi.w	8026b12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026c8e:	3a01      	subs	r2, #1
 8026c90:	4293      	cmp	r3, r2
 8026c92:	f6bf af3e 	bge.w	8026b12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026c96:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8026c9a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8026c9e:	930e      	str	r3, [sp, #56]	; 0x38
 8026ca0:	46c8      	mov	r8, r9
 8026ca2:	f1bb 0f00 	cmp.w	fp, #0
 8026ca6:	f300 80b7 	bgt.w	8026e18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8026caa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026cac:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8026cb0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8026cb4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026cb6:	2b00      	cmp	r3, #0
 8026cb8:	f340 818d 	ble.w	8026fd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8026cbc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026cc0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026cc4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026cc8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026cca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026cce:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026cd2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026cd6:	eef0 6a62 	vmov.f32	s13, s5
 8026cda:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026cde:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026ce2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026ce6:	ee16 4a90 	vmov	r4, s13
 8026cea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026cee:	eef0 6a43 	vmov.f32	s13, s6
 8026cf2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026cf6:	ee12 2a90 	vmov	r2, s5
 8026cfa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026cfe:	fb92 f3f3 	sdiv	r3, r2, r3
 8026d02:	ee13 2a10 	vmov	r2, s6
 8026d06:	9323      	str	r3, [sp, #140]	; 0x8c
 8026d08:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026d0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8026d0e:	9324      	str	r3, [sp, #144]	; 0x90
 8026d10:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026d12:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8026d14:	3b01      	subs	r3, #1
 8026d16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026d1a:	930d      	str	r3, [sp, #52]	; 0x34
 8026d1c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026d1e:	bf08      	it	eq
 8026d20:	4613      	moveq	r3, r2
 8026d22:	ee16 6a90 	vmov	r6, s13
 8026d26:	9309      	str	r3, [sp, #36]	; 0x24
 8026d28:	eeb0 3a67 	vmov.f32	s6, s15
 8026d2c:	eef0 2a47 	vmov.f32	s5, s14
 8026d30:	e6c3      	b.n	8026aba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026d32:	2900      	cmp	r1, #0
 8026d34:	f43f af4d 	beq.w	8026bd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026d38:	eb0a 0003 	add.w	r0, sl, r3
 8026d3c:	0843      	lsrs	r3, r0, #1
 8026d3e:	07c0      	lsls	r0, r0, #31
 8026d40:	5cfb      	ldrb	r3, [r7, r3]
 8026d42:	bf54      	ite	pl
 8026d44:	f003 030f 	andpl.w	r3, r3, #15
 8026d48:	111b      	asrmi	r3, r3, #4
 8026d4a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026d4e:	b2db      	uxtb	r3, r3
 8026d50:	930b      	str	r3, [sp, #44]	; 0x2c
 8026d52:	e73e      	b.n	8026bd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026d54:	f8b8 e000 	ldrh.w	lr, [r8]
 8026d58:	fa1f fb83 	uxth.w	fp, r3
 8026d5c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8026d60:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8026d64:	43db      	mvns	r3, r3
 8026d66:	b2db      	uxtb	r3, r3
 8026d68:	fb11 f10b 	smulbb	r1, r1, fp
 8026d6c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026d70:	fb00 1003 	mla	r0, r0, r3, r1
 8026d74:	fa5f fc8c 	uxtb.w	ip, ip
 8026d78:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8026d7c:	b2d2      	uxtb	r2, r2
 8026d7e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026d82:	b280      	uxth	r0, r0
 8026d84:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026d88:	fb1c fc0b 	smulbb	ip, ip, fp
 8026d8c:	fa5f fe8e 	uxtb.w	lr, lr
 8026d90:	fb12 fb0b 	smulbb	fp, r2, fp
 8026d94:	fb01 cc03 	mla	ip, r1, r3, ip
 8026d98:	fb0e bb03 	mla	fp, lr, r3, fp
 8026d9c:	1c43      	adds	r3, r0, #1
 8026d9e:	fa1f fc8c 	uxth.w	ip, ip
 8026da2:	fa1f fb8b 	uxth.w	fp, fp
 8026da6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026daa:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8026dae:	f10c 0101 	add.w	r1, ip, #1
 8026db2:	f10b 0001 	add.w	r0, fp, #1
 8026db6:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8026dba:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026dbe:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026dc2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026dc6:	4318      	orrs	r0, r3
 8026dc8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026dcc:	ea40 000c 	orr.w	r0, r0, ip
 8026dd0:	f8a8 0000 	strh.w	r0, [r8]
 8026dd4:	e734      	b.n	8026c40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026dd6:	f113 0b01 	adds.w	fp, r3, #1
 8026dda:	f53f af31 	bmi.w	8026c40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026dde:	45dc      	cmp	ip, fp
 8026de0:	f6ff af2e 	blt.w	8026c40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026de4:	f110 0b01 	adds.w	fp, r0, #1
 8026de8:	f53f af2a 	bmi.w	8026c40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026dec:	45de      	cmp	lr, fp
 8026dee:	f6ff af27 	blt.w	8026c40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026df2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026df4:	9302      	str	r3, [sp, #8]
 8026df6:	fa0f f38e 	sxth.w	r3, lr
 8026dfa:	9301      	str	r3, [sp, #4]
 8026dfc:	fa0f f38c 	sxth.w	r3, ip
 8026e00:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8026e04:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8026e08:	9300      	str	r3, [sp, #0]
 8026e0a:	463a      	mov	r2, r7
 8026e0c:	4653      	mov	r3, sl
 8026e0e:	4641      	mov	r1, r8
 8026e10:	9815      	ldr	r0, [sp, #84]	; 0x54
 8026e12:	f7ff fd4d 	bl	80268b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8026e16:	e713      	b.n	8026c40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026e18:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8026e1a:	1422      	asrs	r2, r4, #16
 8026e1c:	1433      	asrs	r3, r6, #16
 8026e1e:	fb05 2303 	mla	r3, r5, r3, r2
 8026e22:	085a      	lsrs	r2, r3, #1
 8026e24:	07dd      	lsls	r5, r3, #31
 8026e26:	5cba      	ldrb	r2, [r7, r2]
 8026e28:	bf54      	ite	pl
 8026e2a:	f002 020f 	andpl.w	r2, r2, #15
 8026e2e:	1112      	asrmi	r2, r2, #4
 8026e30:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8026e34:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8026e38:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8026e3c:	b2d2      	uxtb	r2, r2
 8026e3e:	2900      	cmp	r1, #0
 8026e40:	d076      	beq.n	8026f30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8026e42:	f103 0e01 	add.w	lr, r3, #1
 8026e46:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8026e4a:	f01e 0f01 	tst.w	lr, #1
 8026e4e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026e52:	bf0c      	ite	eq
 8026e54:	f00c 0c0f 	andeq.w	ip, ip, #15
 8026e58:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8026e5c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026e60:	fa5f f58c 	uxtb.w	r5, ip
 8026e64:	9512      	str	r5, [sp, #72]	; 0x48
 8026e66:	b300      	cbz	r0, 8026eaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026e68:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026e6a:	442b      	add	r3, r5
 8026e6c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026e70:	07dd      	lsls	r5, r3, #31
 8026e72:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026e76:	bf54      	ite	pl
 8026e78:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026e7c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026e80:	3301      	adds	r3, #1
 8026e82:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026e86:	fa5f f58c 	uxtb.w	r5, ip
 8026e8a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026e8e:	950c      	str	r5, [sp, #48]	; 0x30
 8026e90:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026e94:	07dd      	lsls	r5, r3, #31
 8026e96:	bf54      	ite	pl
 8026e98:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026e9c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026ea0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026ea4:	fa5f f38c 	uxtb.w	r3, ip
 8026ea8:	9313      	str	r3, [sp, #76]	; 0x4c
 8026eaa:	b289      	uxth	r1, r1
 8026eac:	b280      	uxth	r0, r0
 8026eae:	fb01 f300 	mul.w	r3, r1, r0
 8026eb2:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8026eb6:	0109      	lsls	r1, r1, #4
 8026eb8:	b280      	uxth	r0, r0
 8026eba:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8026ebe:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026ec0:	1ac9      	subs	r1, r1, r3
 8026ec2:	ebac 0c00 	sub.w	ip, ip, r0
 8026ec6:	b289      	uxth	r1, r1
 8026ec8:	4369      	muls	r1, r5
 8026eca:	fa1f fc8c 	uxth.w	ip, ip
 8026ece:	fb02 120c 	mla	r2, r2, ip, r1
 8026ed2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026ed4:	fb00 2001 	mla	r0, r0, r1, r2
 8026ed8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8026eda:	fb03 0302 	mla	r3, r3, r2, r0
 8026ede:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026ee2:	b1d3      	cbz	r3, 8026f1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8026ee4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026ee6:	4353      	muls	r3, r2
 8026ee8:	1c5a      	adds	r2, r3, #1
 8026eea:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026eee:	4a0f      	ldr	r2, [pc, #60]	; (8026f2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8026ef0:	121b      	asrs	r3, r3, #8
 8026ef2:	6812      	ldr	r2, [r2, #0]
 8026ef4:	2bff      	cmp	r3, #255	; 0xff
 8026ef6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8026efa:	d12d      	bne.n	8026f58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8026efc:	0953      	lsrs	r3, r2, #5
 8026efe:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8026f02:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026f06:	f02c 0c07 	bic.w	ip, ip, #7
 8026f0a:	ea43 0c0c 	orr.w	ip, r3, ip
 8026f0e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026f12:	ea4c 0202 	orr.w	r2, ip, r2
 8026f16:	f8a8 2000 	strh.w	r2, [r8]
 8026f1a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026f1c:	441c      	add	r4, r3
 8026f1e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026f20:	f108 0802 	add.w	r8, r8, #2
 8026f24:	441e      	add	r6, r3
 8026f26:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8026f2a:	e6ba      	b.n	8026ca2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8026f2c:	2000e1d0 	.word	0x2000e1d0
 8026f30:	2800      	cmp	r0, #0
 8026f32:	d0ba      	beq.n	8026eaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026f34:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026f36:	442b      	add	r3, r5
 8026f38:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026f3c:	07db      	lsls	r3, r3, #31
 8026f3e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026f42:	bf54      	ite	pl
 8026f44:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026f48:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026f4c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026f50:	fa5f f38c 	uxtb.w	r3, ip
 8026f54:	930c      	str	r3, [sp, #48]	; 0x30
 8026f56:	e7a8      	b.n	8026eaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026f58:	f8b8 e000 	ldrh.w	lr, [r8]
 8026f5c:	fa1f fa83 	uxth.w	sl, r3
 8026f60:	ea4f 202e 	mov.w	r0, lr, asr #8
 8026f64:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8026f68:	43db      	mvns	r3, r3
 8026f6a:	b2db      	uxtb	r3, r3
 8026f6c:	fb11 f10a 	smulbb	r1, r1, sl
 8026f70:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026f74:	fb00 1003 	mla	r0, r0, r3, r1
 8026f78:	b2d2      	uxtb	r2, r2
 8026f7a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8026f7e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026f82:	fa5f fe8e 	uxtb.w	lr, lr
 8026f86:	fb12 f20a 	smulbb	r2, r2, sl
 8026f8a:	fb0e 2203 	mla	r2, lr, r3, r2
 8026f8e:	fa5f fc8c 	uxtb.w	ip, ip
 8026f92:	b280      	uxth	r0, r0
 8026f94:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026f98:	b292      	uxth	r2, r2
 8026f9a:	fb1c fc0a 	smulbb	ip, ip, sl
 8026f9e:	fb01 cc03 	mla	ip, r1, r3, ip
 8026fa2:	1c43      	adds	r3, r0, #1
 8026fa4:	1c51      	adds	r1, r2, #1
 8026fa6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026faa:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8026fae:	fa1f fc8c 	uxth.w	ip, ip
 8026fb2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8026fb6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8026fba:	4308      	orrs	r0, r1
 8026fbc:	f10c 0101 	add.w	r1, ip, #1
 8026fc0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026fc4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026fc8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026fcc:	ea40 000c 	orr.w	r0, r0, ip
 8026fd0:	f8a8 0000 	strh.w	r0, [r8]
 8026fd4:	e7a1      	b.n	8026f1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8026fd6:	b017      	add	sp, #92	; 0x5c
 8026fd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026fdc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8026fdc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026fe0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8026fe4:	2d00      	cmp	r5, #0
 8026fe6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8026fea:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8026fee:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8026ff2:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8026ff6:	fb05 0e03 	mla	lr, r5, r3, r0
 8026ffa:	f2c0 80b0 	blt.w	802715e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8026ffe:	45a9      	cmp	r9, r5
 8027000:	f340 80ad 	ble.w	802715e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8027004:	2800      	cmp	r0, #0
 8027006:	f2c0 80a8 	blt.w	802715a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802700a:	4580      	cmp	r8, r0
 802700c:	f340 80a5 	ble.w	802715a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8027010:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8027014:	f01e 0f01 	tst.w	lr, #1
 8027018:	5d16      	ldrb	r6, [r2, r4]
 802701a:	bf0c      	ite	eq
 802701c:	f006 060f 	andeq.w	r6, r6, #15
 8027020:	1136      	asrne	r6, r6, #4
 8027022:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8027026:	b2f6      	uxtb	r6, r6
 8027028:	1c44      	adds	r4, r0, #1
 802702a:	f100 809b 	bmi.w	8027164 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802702e:	45a0      	cmp	r8, r4
 8027030:	f340 8098 	ble.w	8027164 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8027034:	2f00      	cmp	r7, #0
 8027036:	f000 8097 	beq.w	8027168 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802703a:	f10e 0a01 	add.w	sl, lr, #1
 802703e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8027042:	f01a 0f01 	tst.w	sl, #1
 8027046:	5d14      	ldrb	r4, [r2, r4]
 8027048:	bf0c      	ite	eq
 802704a:	f004 040f 	andeq.w	r4, r4, #15
 802704e:	1124      	asrne	r4, r4, #4
 8027050:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8027054:	b2e4      	uxtb	r4, r4
 8027056:	3501      	adds	r5, #1
 8027058:	f100 808a 	bmi.w	8027170 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802705c:	45a9      	cmp	r9, r5
 802705e:	f340 8087 	ble.w	8027170 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8027062:	f1bc 0f00 	cmp.w	ip, #0
 8027066:	f000 8086 	beq.w	8027176 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802706a:	2800      	cmp	r0, #0
 802706c:	db7e      	blt.n	802716c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802706e:	4580      	cmp	r8, r0
 8027070:	dd7c      	ble.n	802716c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8027072:	eb03 090e 	add.w	r9, r3, lr
 8027076:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802707a:	f019 0f01 	tst.w	r9, #1
 802707e:	5d55      	ldrb	r5, [r2, r5]
 8027080:	bf0c      	ite	eq
 8027082:	f005 050f 	andeq.w	r5, r5, #15
 8027086:	112d      	asrne	r5, r5, #4
 8027088:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802708c:	b2ed      	uxtb	r5, r5
 802708e:	3001      	adds	r0, #1
 8027090:	d474      	bmi.n	802717c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8027092:	4580      	cmp	r8, r0
 8027094:	dd72      	ble.n	802717c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8027096:	2f00      	cmp	r7, #0
 8027098:	d072      	beq.n	8027180 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802709a:	3301      	adds	r3, #1
 802709c:	449e      	add	lr, r3
 802709e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80270a2:	f01e 0f01 	tst.w	lr, #1
 80270a6:	5cd0      	ldrb	r0, [r2, r3]
 80270a8:	bf0c      	ite	eq
 80270aa:	f000 000f 	andeq.w	r0, r0, #15
 80270ae:	1100      	asrne	r0, r0, #4
 80270b0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80270b4:	b2c3      	uxtb	r3, r0
 80270b6:	b2ba      	uxth	r2, r7
 80270b8:	fa1f fc8c 	uxth.w	ip, ip
 80270bc:	fb02 f00c 	mul.w	r0, r2, ip
 80270c0:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80270c4:	0112      	lsls	r2, r2, #4
 80270c6:	fa1f fc8c 	uxth.w	ip, ip
 80270ca:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80270ce:	1a12      	subs	r2, r2, r0
 80270d0:	eba7 070c 	sub.w	r7, r7, ip
 80270d4:	b292      	uxth	r2, r2
 80270d6:	b2bf      	uxth	r7, r7
 80270d8:	4362      	muls	r2, r4
 80270da:	fb06 2207 	mla	r2, r6, r7, r2
 80270de:	fb0c 2505 	mla	r5, ip, r5, r2
 80270e2:	fb00 5303 	mla	r3, r0, r3, r5
 80270e6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80270ea:	b3a3      	cbz	r3, 8027156 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 80270ec:	4a25      	ldr	r2, [pc, #148]	; (8027184 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 80270ee:	880e      	ldrh	r6, [r1, #0]
 80270f0:	6815      	ldr	r5, [r2, #0]
 80270f2:	1234      	asrs	r4, r6, #8
 80270f4:	b29a      	uxth	r2, r3
 80270f6:	f3c5 4007 	ubfx	r0, r5, #16, #8
 80270fa:	43db      	mvns	r3, r3
 80270fc:	b2db      	uxtb	r3, r3
 80270fe:	fb10 f002 	smulbb	r0, r0, r2
 8027102:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8027106:	fb04 0403 	mla	r4, r4, r3, r0
 802710a:	f3c5 2707 	ubfx	r7, r5, #8, #8
 802710e:	10f0      	asrs	r0, r6, #3
 8027110:	b2ed      	uxtb	r5, r5
 8027112:	00f6      	lsls	r6, r6, #3
 8027114:	fb17 f702 	smulbb	r7, r7, r2
 8027118:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802711c:	fb15 f202 	smulbb	r2, r5, r2
 8027120:	b2f6      	uxtb	r6, r6
 8027122:	b2a4      	uxth	r4, r4
 8027124:	fb00 7003 	mla	r0, r0, r3, r7
 8027128:	fb06 2303 	mla	r3, r6, r3, r2
 802712c:	b29a      	uxth	r2, r3
 802712e:	1c63      	adds	r3, r4, #1
 8027130:	b280      	uxth	r0, r0
 8027132:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8027136:	1c53      	adds	r3, r2, #1
 8027138:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802713c:	1c42      	adds	r2, r0, #1
 802713e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027142:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8027146:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802714a:	0940      	lsrs	r0, r0, #5
 802714c:	4323      	orrs	r3, r4
 802714e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8027152:	4303      	orrs	r3, r0
 8027154:	800b      	strh	r3, [r1, #0]
 8027156:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802715a:	2600      	movs	r6, #0
 802715c:	e764      	b.n	8027028 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802715e:	2400      	movs	r4, #0
 8027160:	4626      	mov	r6, r4
 8027162:	e778      	b.n	8027056 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8027164:	2400      	movs	r4, #0
 8027166:	e776      	b.n	8027056 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8027168:	463c      	mov	r4, r7
 802716a:	e774      	b.n	8027056 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802716c:	2500      	movs	r5, #0
 802716e:	e78e      	b.n	802708e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8027170:	2300      	movs	r3, #0
 8027172:	461d      	mov	r5, r3
 8027174:	e79f      	b.n	80270b6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8027176:	4663      	mov	r3, ip
 8027178:	4665      	mov	r5, ip
 802717a:	e79c      	b.n	80270b6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802717c:	2300      	movs	r3, #0
 802717e:	e79a      	b.n	80270b6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8027180:	463b      	mov	r3, r7
 8027182:	e798      	b.n	80270b6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8027184:	2000e1d0 	.word	0x2000e1d0

08027188 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802718c:	b093      	sub	sp, #76	; 0x4c
 802718e:	461d      	mov	r5, r3
 8027190:	920c      	str	r2, [sp, #48]	; 0x30
 8027192:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8027194:	9107      	str	r1, [sp, #28]
 8027196:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802719a:	9011      	str	r0, [sp, #68]	; 0x44
 802719c:	6850      	ldr	r0, [r2, #4]
 802719e:	6812      	ldr	r2, [r2, #0]
 80271a0:	fb00 1303 	mla	r3, r0, r3, r1
 80271a4:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80271a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80271aa:	689b      	ldr	r3, [r3, #8]
 80271ac:	3301      	adds	r3, #1
 80271ae:	f023 0301 	bic.w	r3, r3, #1
 80271b2:	9306      	str	r3, [sp, #24]
 80271b4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80271b6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80271ba:	681f      	ldr	r7, [r3, #0]
 80271bc:	9b07      	ldr	r3, [sp, #28]
 80271be:	2b00      	cmp	r3, #0
 80271c0:	dc03      	bgt.n	80271ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80271c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80271c4:	2b00      	cmp	r3, #0
 80271c6:	f340 8267 	ble.w	8027698 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80271ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80271cc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80271d0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80271d4:	1e48      	subs	r0, r1, #1
 80271d6:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
 80271da:	2d00      	cmp	r5, #0
 80271dc:	f340 80b8 	ble.w	8027350 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80271e0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80271e4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80271e8:	d406      	bmi.n	80271f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80271ea:	4586      	cmp	lr, r0
 80271ec:	da04      	bge.n	80271f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80271ee:	2b00      	cmp	r3, #0
 80271f0:	db02      	blt.n	80271f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80271f2:	4563      	cmp	r3, ip
 80271f4:	f2c0 80ad 	blt.w	8027352 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 80271f8:	f11e 0e01 	adds.w	lr, lr, #1
 80271fc:	f100 80a0 	bmi.w	8027340 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8027200:	4571      	cmp	r1, lr
 8027202:	f2c0 809d 	blt.w	8027340 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8027206:	3301      	adds	r3, #1
 8027208:	f100 809a 	bmi.w	8027340 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802720c:	429a      	cmp	r2, r3
 802720e:	f2c0 8097 	blt.w	8027340 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8027212:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8027216:	9509      	str	r5, [sp, #36]	; 0x24
 8027218:	46c8      	mov	r8, r9
 802721a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802721c:	2b00      	cmp	r3, #0
 802721e:	f340 80b6 	ble.w	802738e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8027222:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8027226:	9308      	str	r3, [sp, #32]
 8027228:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802722a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802722e:	1423      	asrs	r3, r4, #16
 8027230:	ea4f 4026 	mov.w	r0, r6, asr #16
 8027234:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8027238:	f100 813e 	bmi.w	80274b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802723c:	f10c 3bff 	add.w	fp, ip, #4294967295	; 0xffffffff
 8027240:	455b      	cmp	r3, fp
 8027242:	f280 8139 	bge.w	80274b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8027246:	2800      	cmp	r0, #0
 8027248:	f2c0 8136 	blt.w	80274b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802724c:	f10e 3bff 	add.w	fp, lr, #4294967295	; 0xffffffff
 8027250:	4558      	cmp	r0, fp
 8027252:	f280 8131 	bge.w	80274b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8027256:	9a06      	ldr	r2, [sp, #24]
 8027258:	fb00 3302 	mla	r3, r0, r2, r3
 802725c:	0858      	lsrs	r0, r3, #1
 802725e:	07da      	lsls	r2, r3, #31
 8027260:	f817 c000 	ldrb.w	ip, [r7, r0]
 8027264:	9a08      	ldr	r2, [sp, #32]
 8027266:	bf54      	ite	pl
 8027268:	f00c 0c0f 	andpl.w	ip, ip, #15
 802726c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027270:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027274:	fa5f fc8c 	uxtb.w	ip, ip
 8027278:	2a00      	cmp	r2, #0
 802727a:	f000 80cb 	beq.w	8027414 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802727e:	1c58      	adds	r0, r3, #1
 8027280:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8027284:	07c0      	lsls	r0, r0, #31
 8027286:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802728a:	bf54      	ite	pl
 802728c:	f00e 0e0f 	andpl.w	lr, lr, #15
 8027290:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8027294:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8027298:	fa5f fe8e 	uxtb.w	lr, lr
 802729c:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 80272a0:	b1b9      	cbz	r1, 80272d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80272a2:	4453      	add	r3, sl
 80272a4:	0858      	lsrs	r0, r3, #1
 80272a6:	07da      	lsls	r2, r3, #31
 80272a8:	5c38      	ldrb	r0, [r7, r0]
 80272aa:	bf54      	ite	pl
 80272ac:	f000 000f 	andpl.w	r0, r0, #15
 80272b0:	1100      	asrmi	r0, r0, #4
 80272b2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80272b6:	b2c0      	uxtb	r0, r0
 80272b8:	900a      	str	r0, [sp, #40]	; 0x28
 80272ba:	1c58      	adds	r0, r3, #1
 80272bc:	0843      	lsrs	r3, r0, #1
 80272be:	07c2      	lsls	r2, r0, #31
 80272c0:	5cfb      	ldrb	r3, [r7, r3]
 80272c2:	bf54      	ite	pl
 80272c4:	f003 030f 	andpl.w	r3, r3, #15
 80272c8:	111b      	asrmi	r3, r3, #4
 80272ca:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80272ce:	b2db      	uxtb	r3, r3
 80272d0:	930e      	str	r3, [sp, #56]	; 0x38
 80272d2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80272d6:	b289      	uxth	r1, r1
 80272d8:	fb02 f301 	mul.w	r3, r2, r1
 80272dc:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80272e0:	0112      	lsls	r2, r2, #4
 80272e2:	b289      	uxth	r1, r1
 80272e4:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80272e8:	1a40      	subs	r0, r0, r1
 80272ea:	fa1f fe80 	uxth.w	lr, r0
 80272ee:	1ad2      	subs	r2, r2, r3
 80272f0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80272f2:	b292      	uxth	r2, r2
 80272f4:	4342      	muls	r2, r0
 80272f6:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80272fa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80272fc:	fb01 c102 	mla	r1, r1, r2, ip
 8027300:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8027302:	fb03 1302 	mla	r3, r3, r2, r1
 8027306:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802730a:	2bff      	cmp	r3, #255	; 0xff
 802730c:	f040 8093 	bne.w	8027436 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8027310:	4bbe      	ldr	r3, [pc, #760]	; (802760c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8027312:	681a      	ldr	r2, [r3, #0]
 8027314:	4bbe      	ldr	r3, [pc, #760]	; (8027610 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8027316:	0951      	lsrs	r1, r2, #5
 8027318:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802731c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8027320:	430b      	orrs	r3, r1
 8027322:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8027326:	4313      	orrs	r3, r2
 8027328:	f8a8 3000 	strh.w	r3, [r8]
 802732c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802732e:	441c      	add	r4, r3
 8027330:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027332:	441e      	add	r6, r3
 8027334:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027336:	3b01      	subs	r3, #1
 8027338:	f108 0802 	add.w	r8, r8, #2
 802733c:	9309      	str	r3, [sp, #36]	; 0x24
 802733e:	e76c      	b.n	802721a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8027340:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8027342:	441c      	add	r4, r3
 8027344:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027346:	3d01      	subs	r5, #1
 8027348:	441e      	add	r6, r3
 802734a:	f109 0902 	add.w	r9, r9, #2
 802734e:	e744      	b.n	80271da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8027350:	d021      	beq.n	8027396 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8027352:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8027354:	1e6b      	subs	r3, r5, #1
 8027356:	fb00 4003 	mla	r0, r0, r3, r4
 802735a:	1400      	asrs	r0, r0, #16
 802735c:	f53f af59 	bmi.w	8027212 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027360:	3901      	subs	r1, #1
 8027362:	4288      	cmp	r0, r1
 8027364:	f6bf af55 	bge.w	8027212 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027368:	9920      	ldr	r1, [sp, #128]	; 0x80
 802736a:	fb01 6303 	mla	r3, r1, r3, r6
 802736e:	141b      	asrs	r3, r3, #16
 8027370:	f53f af4f 	bmi.w	8027212 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027374:	3a01      	subs	r2, #1
 8027376:	4293      	cmp	r3, r2
 8027378:	f6bf af4b 	bge.w	8027212 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802737c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8027380:	9308      	str	r3, [sp, #32]
 8027382:	46a8      	mov	r8, r5
 8027384:	46ce      	mov	lr, r9
 8027386:	f1b8 0f00 	cmp.w	r8, #0
 802738a:	f300 80b5 	bgt.w	80274f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802738e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8027392:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8027396:	9b07      	ldr	r3, [sp, #28]
 8027398:	2b00      	cmp	r3, #0
 802739a:	f340 817d 	ble.w	8027698 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802739e:	ee30 0a04 	vadd.f32	s0, s0, s8
 80273a2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80273a6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80273aa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80273ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80273b0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80273b4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80273b8:	eef0 6a62 	vmov.f32	s13, s5
 80273bc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80273c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80273c4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80273c8:	ee16 4a90 	vmov	r4, s13
 80273cc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80273d0:	eef0 6a43 	vmov.f32	s13, s6
 80273d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80273d8:	ee12 2a90 	vmov	r2, s5
 80273dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80273e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80273e4:	ee13 2a10 	vmov	r2, s6
 80273e8:	931f      	str	r3, [sp, #124]	; 0x7c
 80273ea:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80273ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80273f0:	9320      	str	r3, [sp, #128]	; 0x80
 80273f2:	9b07      	ldr	r3, [sp, #28]
 80273f4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80273f6:	3b01      	subs	r3, #1
 80273f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80273fc:	9307      	str	r3, [sp, #28]
 80273fe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027400:	ee16 6a90 	vmov	r6, s13
 8027404:	bf14      	ite	ne
 8027406:	461d      	movne	r5, r3
 8027408:	4615      	moveq	r5, r2
 802740a:	eeb0 3a67 	vmov.f32	s6, s15
 802740e:	eef0 2a47 	vmov.f32	s5, s14
 8027412:	e6d3      	b.n	80271bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8027414:	2900      	cmp	r1, #0
 8027416:	f43f af5c 	beq.w	80272d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802741a:	eb0a 0003 	add.w	r0, sl, r3
 802741e:	0843      	lsrs	r3, r0, #1
 8027420:	07c0      	lsls	r0, r0, #31
 8027422:	5cfb      	ldrb	r3, [r7, r3]
 8027424:	bf54      	ite	pl
 8027426:	f003 030f 	andpl.w	r3, r3, #15
 802742a:	111b      	asrmi	r3, r3, #4
 802742c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027430:	b2db      	uxtb	r3, r3
 8027432:	930a      	str	r3, [sp, #40]	; 0x28
 8027434:	e74d      	b.n	80272d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8027436:	2b00      	cmp	r3, #0
 8027438:	f43f af78 	beq.w	802732c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802743c:	4a73      	ldr	r2, [pc, #460]	; (802760c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802743e:	f8b8 c000 	ldrh.w	ip, [r8]
 8027442:	6810      	ldr	r0, [r2, #0]
 8027444:	fa1f fe83 	uxth.w	lr, r3
 8027448:	ea4f 212c 	mov.w	r1, ip, asr #8
 802744c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8027450:	43db      	mvns	r3, r3
 8027452:	b2db      	uxtb	r3, r3
 8027454:	fb12 f20e 	smulbb	r2, r2, lr
 8027458:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802745c:	fb01 2103 	mla	r1, r1, r3, r2
 8027460:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8027464:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8027468:	b2c0      	uxtb	r0, r0
 802746a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802746e:	fb1b fb0e 	smulbb	fp, fp, lr
 8027472:	b289      	uxth	r1, r1
 8027474:	fb10 fe0e 	smulbb	lr, r0, lr
 8027478:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802747c:	fa5f fc8c 	uxtb.w	ip, ip
 8027480:	fb02 b203 	mla	r2, r2, r3, fp
 8027484:	1c48      	adds	r0, r1, #1
 8027486:	fb0c e303 	mla	r3, ip, r3, lr
 802748a:	b292      	uxth	r2, r2
 802748c:	b29b      	uxth	r3, r3
 802748e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8027492:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8027496:	f102 0b01 	add.w	fp, r2, #1
 802749a:	1c59      	adds	r1, r3, #1
 802749c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80274a0:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80274a4:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80274a8:	0952      	lsrs	r2, r2, #5
 80274aa:	4301      	orrs	r1, r0
 80274ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80274b0:	4311      	orrs	r1, r2
 80274b2:	f8a8 1000 	strh.w	r1, [r8]
 80274b6:	e739      	b.n	802732c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80274b8:	f113 0b01 	adds.w	fp, r3, #1
 80274bc:	f53f af36 	bmi.w	802732c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80274c0:	45dc      	cmp	ip, fp
 80274c2:	f6ff af33 	blt.w	802732c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80274c6:	f110 0b01 	adds.w	fp, r0, #1
 80274ca:	f53f af2f 	bmi.w	802732c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80274ce:	45de      	cmp	lr, fp
 80274d0:	f6ff af2c 	blt.w	802732c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80274d4:	9a08      	ldr	r2, [sp, #32]
 80274d6:	9302      	str	r3, [sp, #8]
 80274d8:	fa0f f38e 	sxth.w	r3, lr
 80274dc:	9301      	str	r3, [sp, #4]
 80274de:	fa0f f38c 	sxth.w	r3, ip
 80274e2:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80274e6:	9105      	str	r1, [sp, #20]
 80274e8:	9300      	str	r3, [sp, #0]
 80274ea:	463a      	mov	r2, r7
 80274ec:	4653      	mov	r3, sl
 80274ee:	4641      	mov	r1, r8
 80274f0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80274f2:	f7ff fd73 	bl	8026fdc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80274f6:	e719      	b.n	802732c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80274f8:	9906      	ldr	r1, [sp, #24]
 80274fa:	1422      	asrs	r2, r4, #16
 80274fc:	1433      	asrs	r3, r6, #16
 80274fe:	fb01 2303 	mla	r3, r1, r3, r2
 8027502:	085a      	lsrs	r2, r3, #1
 8027504:	07d9      	lsls	r1, r3, #31
 8027506:	5cba      	ldrb	r2, [r7, r2]
 8027508:	bf54      	ite	pl
 802750a:	f002 020f 	andpl.w	r2, r2, #15
 802750e:	1112      	asrmi	r2, r2, #4
 8027510:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8027514:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8027518:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802751c:	b2d2      	uxtb	r2, r2
 802751e:	2800      	cmp	r0, #0
 8027520:	d062      	beq.n	80275e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8027522:	f103 0a01 	add.w	sl, r3, #1
 8027526:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802752a:	f01a 0f01 	tst.w	sl, #1
 802752e:	5c79      	ldrb	r1, [r7, r1]
 8027530:	bf0c      	ite	eq
 8027532:	f001 010f 	andeq.w	r1, r1, #15
 8027536:	1109      	asrne	r1, r1, #4
 8027538:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802753c:	b2c9      	uxtb	r1, r1
 802753e:	910f      	str	r1, [sp, #60]	; 0x3c
 8027540:	f1bc 0f00 	cmp.w	ip, #0
 8027544:	d019      	beq.n	802757a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8027546:	9908      	ldr	r1, [sp, #32]
 8027548:	440b      	add	r3, r1
 802754a:	0859      	lsrs	r1, r3, #1
 802754c:	f013 0f01 	tst.w	r3, #1
 8027550:	5c79      	ldrb	r1, [r7, r1]
 8027552:	bf0c      	ite	eq
 8027554:	f001 010f 	andeq.w	r1, r1, #15
 8027558:	1109      	asrne	r1, r1, #4
 802755a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802755e:	b2c9      	uxtb	r1, r1
 8027560:	3301      	adds	r3, #1
 8027562:	910b      	str	r1, [sp, #44]	; 0x2c
 8027564:	0859      	lsrs	r1, r3, #1
 8027566:	07db      	lsls	r3, r3, #31
 8027568:	5c79      	ldrb	r1, [r7, r1]
 802756a:	bf54      	ite	pl
 802756c:	f001 010f 	andpl.w	r1, r1, #15
 8027570:	1109      	asrmi	r1, r1, #4
 8027572:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8027576:	b2c9      	uxtb	r1, r1
 8027578:	9110      	str	r1, [sp, #64]	; 0x40
 802757a:	b280      	uxth	r0, r0
 802757c:	fa1f fc8c 	uxth.w	ip, ip
 8027580:	fb00 f30c 	mul.w	r3, r0, ip
 8027584:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8027588:	0100      	lsls	r0, r0, #4
 802758a:	fa1f fc8c 	uxth.w	ip, ip
 802758e:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8027592:	eba1 010c 	sub.w	r1, r1, ip
 8027596:	fa1f fa81 	uxth.w	sl, r1
 802759a:	1ac0      	subs	r0, r0, r3
 802759c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802759e:	b280      	uxth	r0, r0
 80275a0:	4348      	muls	r0, r1
 80275a2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80275a4:	fb02 020a 	mla	r2, r2, sl, r0
 80275a8:	fb0c 2c01 	mla	ip, ip, r1, r2
 80275ac:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80275ae:	fb03 c302 	mla	r3, r3, r2, ip
 80275b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80275b6:	2bff      	cmp	r3, #255	; 0xff
 80275b8:	d12c      	bne.n	8027614 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 80275ba:	4b14      	ldr	r3, [pc, #80]	; (802760c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80275bc:	681a      	ldr	r2, [r3, #0]
 80275be:	4b14      	ldr	r3, [pc, #80]	; (8027610 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80275c0:	0951      	lsrs	r1, r2, #5
 80275c2:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80275c6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80275ca:	430b      	orrs	r3, r1
 80275cc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80275d0:	4313      	orrs	r3, r2
 80275d2:	f8ae 3000 	strh.w	r3, [lr]
 80275d6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80275d8:	441c      	add	r4, r3
 80275da:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80275dc:	f10e 0e02 	add.w	lr, lr, #2
 80275e0:	441e      	add	r6, r3
 80275e2:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 80275e6:	e6ce      	b.n	8027386 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80275e8:	f1bc 0f00 	cmp.w	ip, #0
 80275ec:	d0c5      	beq.n	802757a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80275ee:	9908      	ldr	r1, [sp, #32]
 80275f0:	440b      	add	r3, r1
 80275f2:	0859      	lsrs	r1, r3, #1
 80275f4:	07db      	lsls	r3, r3, #31
 80275f6:	5c79      	ldrb	r1, [r7, r1]
 80275f8:	bf54      	ite	pl
 80275fa:	f001 010f 	andpl.w	r1, r1, #15
 80275fe:	1109      	asrmi	r1, r1, #4
 8027600:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8027604:	b2c9      	uxtb	r1, r1
 8027606:	910b      	str	r1, [sp, #44]	; 0x2c
 8027608:	e7b7      	b.n	802757a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802760a:	bf00      	nop
 802760c:	2000e1d0 	.word	0x2000e1d0
 8027610:	fffff800 	.word	0xfffff800
 8027614:	2b00      	cmp	r3, #0
 8027616:	d0de      	beq.n	80275d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8027618:	4a21      	ldr	r2, [pc, #132]	; (80276a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802761a:	f8be c000 	ldrh.w	ip, [lr]
 802761e:	6810      	ldr	r0, [r2, #0]
 8027620:	fa1f fa83 	uxth.w	sl, r3
 8027624:	ea4f 212c 	mov.w	r1, ip, asr #8
 8027628:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802762c:	43db      	mvns	r3, r3
 802762e:	b2db      	uxtb	r3, r3
 8027630:	fb12 f20a 	smulbb	r2, r2, sl
 8027634:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8027638:	fb01 2103 	mla	r1, r1, r3, r2
 802763c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8027640:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8027644:	b2c0      	uxtb	r0, r0
 8027646:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802764a:	fa5f fc8c 	uxtb.w	ip, ip
 802764e:	fb10 f00a 	smulbb	r0, r0, sl
 8027652:	fb0c 0003 	mla	r0, ip, r3, r0
 8027656:	b289      	uxth	r1, r1
 8027658:	fb1b fb0a 	smulbb	fp, fp, sl
 802765c:	b280      	uxth	r0, r0
 802765e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8027662:	fb02 b203 	mla	r2, r2, r3, fp
 8027666:	1c4b      	adds	r3, r1, #1
 8027668:	f100 0b01 	add.w	fp, r0, #1
 802766c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8027670:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8027674:	b292      	uxth	r2, r2
 8027676:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802767a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802767e:	ea4b 0101 	orr.w	r1, fp, r1
 8027682:	f102 0b01 	add.w	fp, r2, #1
 8027686:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802768a:	0952      	lsrs	r2, r2, #5
 802768c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027690:	4311      	orrs	r1, r2
 8027692:	f8ae 1000 	strh.w	r1, [lr]
 8027696:	e79e      	b.n	80275d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8027698:	b013      	add	sp, #76	; 0x4c
 802769a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802769e:	bf00      	nop
 80276a0:	2000e1d0 	.word	0x2000e1d0

080276a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80276a4:	b570      	push	{r4, r5, r6, lr}
 80276a6:	1208      	asrs	r0, r1, #8
 80276a8:	b29e      	uxth	r6, r3
 80276aa:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80276ae:	1213      	asrs	r3, r2, #8
 80276b0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80276b4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80276b8:	fb13 f305 	smulbb	r3, r3, r5
 80276bc:	fb10 f006 	smulbb	r0, r0, r6
 80276c0:	4418      	add	r0, r3
 80276c2:	10cc      	asrs	r4, r1, #3
 80276c4:	10d3      	asrs	r3, r2, #3
 80276c6:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80276ca:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80276ce:	fb13 f305 	smulbb	r3, r3, r5
 80276d2:	fb14 f406 	smulbb	r4, r4, r6
 80276d6:	00c9      	lsls	r1, r1, #3
 80276d8:	00d2      	lsls	r2, r2, #3
 80276da:	441c      	add	r4, r3
 80276dc:	b2d2      	uxtb	r2, r2
 80276de:	b2cb      	uxtb	r3, r1
 80276e0:	fb12 f205 	smulbb	r2, r2, r5
 80276e4:	b280      	uxth	r0, r0
 80276e6:	fb13 f306 	smulbb	r3, r3, r6
 80276ea:	4413      	add	r3, r2
 80276ec:	1c42      	adds	r2, r0, #1
 80276ee:	b29b      	uxth	r3, r3
 80276f0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80276f4:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 80276f8:	1c58      	adds	r0, r3, #1
 80276fa:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80276fe:	b2a4      	uxth	r4, r4
 8027700:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8027704:	4310      	orrs	r0, r2
 8027706:	1c62      	adds	r2, r4, #1
 8027708:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802770c:	0964      	lsrs	r4, r4, #5
 802770e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8027712:	4320      	orrs	r0, r4
 8027714:	bd70      	pop	{r4, r5, r6, pc}
	...

08027718 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8027718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802771c:	b08f      	sub	sp, #60	; 0x3c
 802771e:	461c      	mov	r4, r3
 8027720:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8027724:	9004      	str	r0, [sp, #16]
 8027726:	460d      	mov	r5, r1
 8027728:	4616      	mov	r6, r2
 802772a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802772c:	2f00      	cmp	r7, #0
 802772e:	f000 80f6 	beq.w	802791e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8027732:	6820      	ldr	r0, [r4, #0]
 8027734:	6861      	ldr	r1, [r4, #4]
 8027736:	aa0a      	add	r2, sp, #40	; 0x28
 8027738:	c203      	stmia	r2!, {r0, r1}
 802773a:	6818      	ldr	r0, [r3, #0]
 802773c:	6859      	ldr	r1, [r3, #4]
 802773e:	aa0c      	add	r2, sp, #48	; 0x30
 8027740:	c203      	stmia	r2!, {r0, r1}
 8027742:	a80a      	add	r0, sp, #40	; 0x28
 8027744:	f7ef fd06 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027748:	4621      	mov	r1, r4
 802774a:	a80c      	add	r0, sp, #48	; 0x30
 802774c:	f7ef fd46 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027750:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8027754:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8027758:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 802775c:	f002 0301 	and.w	r3, r2, #1
 8027760:	9306      	str	r3, [sp, #24]
 8027762:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8027766:	f003 0101 	and.w	r1, r3, #1
 802776a:	9105      	str	r1, [sp, #20]
 802776c:	9805      	ldr	r0, [sp, #20]
 802776e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8027772:	4403      	add	r3, r0
 8027774:	fb01 2303 	mla	r3, r1, r3, r2
 8027778:	f04f 0802 	mov.w	r8, #2
 802777c:	fb93 f3f8 	sdiv	r3, r3, r8
 8027780:	441d      	add	r5, r3
 8027782:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8027786:	441a      	add	r2, r3
 8027788:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802778c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8027790:	4419      	add	r1, r3
 8027792:	4b64      	ldr	r3, [pc, #400]	; (8027924 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8027794:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8027798:	6818      	ldr	r0, [r3, #0]
 802779a:	6803      	ldr	r3, [r0, #0]
 802779c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802779e:	4798      	blx	r3
 80277a0:	4a61      	ldr	r2, [pc, #388]	; (8027928 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80277a2:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80277a6:	8813      	ldrh	r3, [r2, #0]
 80277a8:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 80277ac:	2fff      	cmp	r7, #255	; 0xff
 80277ae:	fb03 a404 	mla	r4, r3, r4, sl
 80277b2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80277b6:	f106 0604 	add.w	r6, r6, #4
 80277ba:	4611      	mov	r1, r2
 80277bc:	fb03 fb0b 	mul.w	fp, r3, fp
 80277c0:	d06b      	beq.n	802789a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80277c2:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 80277c6:	9303      	str	r3, [sp, #12]
 80277c8:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80277cc:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80277d0:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80277d4:	9b07      	ldr	r3, [sp, #28]
 80277d6:	42a3      	cmp	r3, r4
 80277d8:	f240 809c 	bls.w	8027914 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80277dc:	9b06      	ldr	r3, [sp, #24]
 80277de:	2b00      	cmp	r3, #0
 80277e0:	d039      	beq.n	8027856 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80277e2:	782b      	ldrb	r3, [r5, #0]
 80277e4:	8822      	ldrh	r2, [r4, #0]
 80277e6:	9804      	ldr	r0, [sp, #16]
 80277e8:	f003 030f 	and.w	r3, r3, #15
 80277ec:	f105 0801 	add.w	r8, r5, #1
 80277f0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80277f4:	9b03      	ldr	r3, [sp, #12]
 80277f6:	9300      	str	r3, [sp, #0]
 80277f8:	463b      	mov	r3, r7
 80277fa:	f7ff ff53 	bl	80276a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80277fe:	f824 0b02 	strh.w	r0, [r4], #2
 8027802:	f109 3bff 	add.w	fp, r9, #4294967295	; 0xffffffff
 8027806:	f1bb 0f01 	cmp.w	fp, #1
 802780a:	46a2      	mov	sl, r4
 802780c:	f104 0404 	add.w	r4, r4, #4
 8027810:	dd24      	ble.n	802785c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8027812:	f898 3000 	ldrb.w	r3, [r8]
 8027816:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802781a:	9804      	ldr	r0, [sp, #16]
 802781c:	091b      	lsrs	r3, r3, #4
 802781e:	f1ab 0b02 	sub.w	fp, fp, #2
 8027822:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8027826:	9b03      	ldr	r3, [sp, #12]
 8027828:	9300      	str	r3, [sp, #0]
 802782a:	463b      	mov	r3, r7
 802782c:	f7ff ff3a 	bl	80276a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8027830:	f824 0c04 	strh.w	r0, [r4, #-4]
 8027834:	f818 3b01 	ldrb.w	r3, [r8], #1
 8027838:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802783c:	9804      	ldr	r0, [sp, #16]
 802783e:	f003 030f 	and.w	r3, r3, #15
 8027842:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8027846:	9b03      	ldr	r3, [sp, #12]
 8027848:	9300      	str	r3, [sp, #0]
 802784a:	463b      	mov	r3, r7
 802784c:	f7ff ff2a 	bl	80276a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8027850:	f824 0c02 	strh.w	r0, [r4, #-2]
 8027854:	e7d7      	b.n	8027806 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8027856:	46a8      	mov	r8, r5
 8027858:	46cb      	mov	fp, r9
 802785a:	e7d4      	b.n	8027806 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802785c:	d10e      	bne.n	802787c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 802785e:	f898 3000 	ldrb.w	r3, [r8]
 8027862:	f8ba 2000 	ldrh.w	r2, [sl]
 8027866:	9804      	ldr	r0, [sp, #16]
 8027868:	091b      	lsrs	r3, r3, #4
 802786a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802786e:	9b03      	ldr	r3, [sp, #12]
 8027870:	9300      	str	r3, [sp, #0]
 8027872:	463b      	mov	r3, r7
 8027874:	f7ff ff16 	bl	80276a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8027878:	f82a 0b02 	strh.w	r0, [sl], #2
 802787c:	9b08      	ldr	r3, [sp, #32]
 802787e:	9a05      	ldr	r2, [sp, #20]
 8027880:	881c      	ldrh	r4, [r3, #0]
 8027882:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8027886:	eba4 0409 	sub.w	r4, r4, r9
 802788a:	4413      	add	r3, r2
 802788c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8027890:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027892:	fb93 f3f2 	sdiv	r3, r3, r2
 8027896:	441d      	add	r5, r3
 8027898:	e79c      	b.n	80277d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802789a:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 802789e:	45a3      	cmp	fp, r4
 80278a0:	d938      	bls.n	8027914 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80278a2:	9b06      	ldr	r3, [sp, #24]
 80278a4:	b1f3      	cbz	r3, 80278e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80278a6:	782b      	ldrb	r3, [r5, #0]
 80278a8:	f003 030f 	and.w	r3, r3, #15
 80278ac:	1c6a      	adds	r2, r5, #1
 80278ae:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80278b2:	8023      	strh	r3, [r4, #0]
 80278b4:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
 80278b8:	3402      	adds	r4, #2
 80278ba:	2801      	cmp	r0, #1
 80278bc:	4623      	mov	r3, r4
 80278be:	f104 0404 	add.w	r4, r4, #4
 80278c2:	dd12      	ble.n	80278ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80278c4:	7813      	ldrb	r3, [r2, #0]
 80278c6:	091b      	lsrs	r3, r3, #4
 80278c8:	3802      	subs	r0, #2
 80278ca:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80278ce:	f824 3c04 	strh.w	r3, [r4, #-4]
 80278d2:	f812 3b01 	ldrb.w	r3, [r2], #1
 80278d6:	f003 030f 	and.w	r3, r3, #15
 80278da:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80278de:	f824 3c02 	strh.w	r3, [r4, #-2]
 80278e2:	e7ea      	b.n	80278ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80278e4:	462a      	mov	r2, r5
 80278e6:	4648      	mov	r0, r9
 80278e8:	e7e7      	b.n	80278ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80278ea:	d106      	bne.n	80278fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80278ec:	7812      	ldrb	r2, [r2, #0]
 80278ee:	0912      	lsrs	r2, r2, #4
 80278f0:	3302      	adds	r3, #2
 80278f2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80278f6:	f823 2c02 	strh.w	r2, [r3, #-2]
 80278fa:	880c      	ldrh	r4, [r1, #0]
 80278fc:	9a05      	ldr	r2, [sp, #20]
 80278fe:	eba4 0409 	sub.w	r4, r4, r9
 8027902:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8027906:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802790a:	4413      	add	r3, r2
 802790c:	fb93 f3f8 	sdiv	r3, r3, r8
 8027910:	441d      	add	r5, r3
 8027912:	e7c4      	b.n	802789e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8027914:	4b03      	ldr	r3, [pc, #12]	; (8027924 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8027916:	6818      	ldr	r0, [r3, #0]
 8027918:	6803      	ldr	r3, [r0, #0]
 802791a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802791c:	4798      	blx	r3
 802791e:	b00f      	add	sp, #60	; 0x3c
 8027920:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027924:	2000e1c0 	.word	0x2000e1c0
 8027928:	2000e1ba 	.word	0x2000e1ba

0802792c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 802792c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802792e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8027932:	2dff      	cmp	r5, #255	; 0xff
 8027934:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8027938:	d10c      	bne.n	8027954 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802793a:	2bff      	cmp	r3, #255	; 0xff
 802793c:	d10a      	bne.n	8027954 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802793e:	4b25      	ldr	r3, [pc, #148]	; (80279d4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8027940:	0948      	lsrs	r0, r1, #5
 8027942:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8027946:	403b      	ands	r3, r7
 8027948:	4318      	orrs	r0, r3
 802794a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802794e:	4308      	orrs	r0, r1
 8027950:	b280      	uxth	r0, r0
 8027952:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027954:	fb15 f503 	smulbb	r5, r5, r3
 8027958:	b2ab      	uxth	r3, r5
 802795a:	1c5d      	adds	r5, r3, #1
 802795c:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8027960:	1214      	asrs	r4, r2, #8
 8027962:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8027966:	fa1f fc85 	uxth.w	ip, r5
 802796a:	10d6      	asrs	r6, r2, #3
 802796c:	00d0      	lsls	r0, r2, #3
 802796e:	43ed      	mvns	r5, r5
 8027970:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8027974:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8027978:	b2eb      	uxtb	r3, r5
 802797a:	b2c0      	uxtb	r0, r0
 802797c:	fb12 f20c 	smulbb	r2, r2, ip
 8027980:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8027984:	fb04 2403 	mla	r4, r4, r3, r2
 8027988:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 802798c:	b2c8      	uxtb	r0, r1
 802798e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8027992:	b2fd      	uxtb	r5, r7
 8027994:	fb10 f00c 	smulbb	r0, r0, ip
 8027998:	b2a4      	uxth	r4, r4
 802799a:	fb02 0003 	mla	r0, r2, r3, r0
 802799e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80279a2:	fb15 f50c 	smulbb	r5, r5, ip
 80279a6:	fb06 5503 	mla	r5, r6, r3, r5
 80279aa:	b283      	uxth	r3, r0
 80279ac:	1c60      	adds	r0, r4, #1
 80279ae:	b2ad      	uxth	r5, r5
 80279b0:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80279b4:	1c58      	adds	r0, r3, #1
 80279b6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80279ba:	1c6b      	adds	r3, r5, #1
 80279bc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80279c0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80279c4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80279c8:	096d      	lsrs	r5, r5, #5
 80279ca:	4320      	orrs	r0, r4
 80279cc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80279d0:	4328      	orrs	r0, r5
 80279d2:	e7be      	b.n	8027952 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80279d4:	00fff800 	.word	0x00fff800

080279d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80279d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80279dc:	461c      	mov	r4, r3
 80279de:	b08d      	sub	sp, #52	; 0x34
 80279e0:	460d      	mov	r5, r1
 80279e2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80279e4:	6861      	ldr	r1, [r4, #4]
 80279e6:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 80279ea:	4680      	mov	r8, r0
 80279ec:	6820      	ldr	r0, [r4, #0]
 80279ee:	4616      	mov	r6, r2
 80279f0:	aa08      	add	r2, sp, #32
 80279f2:	c203      	stmia	r2!, {r0, r1}
 80279f4:	6818      	ldr	r0, [r3, #0]
 80279f6:	6859      	ldr	r1, [r3, #4]
 80279f8:	aa0a      	add	r2, sp, #40	; 0x28
 80279fa:	c203      	stmia	r2!, {r0, r1}
 80279fc:	a808      	add	r0, sp, #32
 80279fe:	f7ef fba9 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027a02:	4621      	mov	r1, r4
 8027a04:	a80a      	add	r0, sp, #40	; 0x28
 8027a06:	f7ef fbe9 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027a0a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8027a0e:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8027a12:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8027a16:	f002 0301 	and.w	r3, r2, #1
 8027a1a:	9303      	str	r3, [sp, #12]
 8027a1c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8027a20:	f003 0101 	and.w	r1, r3, #1
 8027a24:	9102      	str	r1, [sp, #8]
 8027a26:	9802      	ldr	r0, [sp, #8]
 8027a28:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8027a2c:	4403      	add	r3, r0
 8027a2e:	fb01 2303 	mla	r3, r1, r3, r2
 8027a32:	f04f 0a02 	mov.w	sl, #2
 8027a36:	fb93 f3fa 	sdiv	r3, r3, sl
 8027a3a:	441d      	add	r5, r3
 8027a3c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8027a40:	441a      	add	r2, r3
 8027a42:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8027a46:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8027a4a:	4a3f      	ldr	r2, [pc, #252]	; (8027b48 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8027a4c:	9205      	str	r2, [sp, #20]
 8027a4e:	4419      	add	r1, r3
 8027a50:	6810      	ldr	r0, [r2, #0]
 8027a52:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8027a56:	6803      	ldr	r3, [r0, #0]
 8027a58:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8027a5a:	4798      	blx	r3
 8027a5c:	4b3b      	ldr	r3, [pc, #236]	; (8027b4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8027a5e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8027a62:	8819      	ldrh	r1, [r3, #0]
 8027a64:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8027a68:	fb01 c404 	mla	r4, r1, r4, ip
 8027a6c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8027a70:	434f      	muls	r7, r1
 8027a72:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8027a76:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8027a7a:	3604      	adds	r6, #4
 8027a7c:	9204      	str	r2, [sp, #16]
 8027a7e:	9b04      	ldr	r3, [sp, #16]
 8027a80:	429c      	cmp	r4, r3
 8027a82:	d258      	bcs.n	8027b36 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8027a84:	9b03      	ldr	r3, [sp, #12]
 8027a86:	2b00      	cmp	r3, #0
 8027a88:	d034      	beq.n	8027af4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8027a8a:	782b      	ldrb	r3, [r5, #0]
 8027a8c:	f003 030f 	and.w	r3, r3, #15
 8027a90:	1c6f      	adds	r7, r5, #1
 8027a92:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027a96:	0e0b      	lsrs	r3, r1, #24
 8027a98:	d006      	beq.n	8027aa8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8027a9a:	8822      	ldrh	r2, [r4, #0]
 8027a9c:	9300      	str	r3, [sp, #0]
 8027a9e:	4640      	mov	r0, r8
 8027aa0:	464b      	mov	r3, r9
 8027aa2:	f7ff ff43 	bl	802792c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027aa6:	8020      	strh	r0, [r4, #0]
 8027aa8:	3402      	adds	r4, #2
 8027aaa:	f10b 3aff 	add.w	sl, fp, #4294967295	; 0xffffffff
 8027aae:	f1ba 0f01 	cmp.w	sl, #1
 8027ab2:	dd22      	ble.n	8027afa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8027ab4:	783b      	ldrb	r3, [r7, #0]
 8027ab6:	091b      	lsrs	r3, r3, #4
 8027ab8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027abc:	0e0b      	lsrs	r3, r1, #24
 8027abe:	d006      	beq.n	8027ace <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8027ac0:	8822      	ldrh	r2, [r4, #0]
 8027ac2:	9300      	str	r3, [sp, #0]
 8027ac4:	4640      	mov	r0, r8
 8027ac6:	464b      	mov	r3, r9
 8027ac8:	f7ff ff30 	bl	802792c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027acc:	8020      	strh	r0, [r4, #0]
 8027ace:	f817 3b01 	ldrb.w	r3, [r7], #1
 8027ad2:	f003 030f 	and.w	r3, r3, #15
 8027ad6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027ada:	0e0b      	lsrs	r3, r1, #24
 8027adc:	d006      	beq.n	8027aec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8027ade:	8862      	ldrh	r2, [r4, #2]
 8027ae0:	9300      	str	r3, [sp, #0]
 8027ae2:	4640      	mov	r0, r8
 8027ae4:	464b      	mov	r3, r9
 8027ae6:	f7ff ff21 	bl	802792c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027aea:	8060      	strh	r0, [r4, #2]
 8027aec:	3404      	adds	r4, #4
 8027aee:	f1aa 0a02 	sub.w	sl, sl, #2
 8027af2:	e7dc      	b.n	8027aae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8027af4:	462f      	mov	r7, r5
 8027af6:	46da      	mov	sl, fp
 8027af8:	e7d9      	b.n	8027aae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8027afa:	d10d      	bne.n	8027b18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8027afc:	783b      	ldrb	r3, [r7, #0]
 8027afe:	091b      	lsrs	r3, r3, #4
 8027b00:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027b04:	0e0b      	lsrs	r3, r1, #24
 8027b06:	d006      	beq.n	8027b16 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8027b08:	8822      	ldrh	r2, [r4, #0]
 8027b0a:	9300      	str	r3, [sp, #0]
 8027b0c:	4640      	mov	r0, r8
 8027b0e:	464b      	mov	r3, r9
 8027b10:	f7ff ff0c 	bl	802792c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027b14:	8020      	strh	r0, [r4, #0]
 8027b16:	3402      	adds	r4, #2
 8027b18:	9b06      	ldr	r3, [sp, #24]
 8027b1a:	9a02      	ldr	r2, [sp, #8]
 8027b1c:	881b      	ldrh	r3, [r3, #0]
 8027b1e:	eba3 030b 	sub.w	r3, r3, fp
 8027b22:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8027b26:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8027b2a:	4413      	add	r3, r2
 8027b2c:	9a07      	ldr	r2, [sp, #28]
 8027b2e:	fb93 f3f2 	sdiv	r3, r3, r2
 8027b32:	441d      	add	r5, r3
 8027b34:	e7a3      	b.n	8027a7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8027b36:	9b05      	ldr	r3, [sp, #20]
 8027b38:	6818      	ldr	r0, [r3, #0]
 8027b3a:	6803      	ldr	r3, [r0, #0]
 8027b3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027b3e:	4798      	blx	r3
 8027b40:	b00d      	add	sp, #52	; 0x34
 8027b42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027b46:	bf00      	nop
 8027b48:	2000e1c0 	.word	0x2000e1c0
 8027b4c:	2000e1ba 	.word	0x2000e1ba

08027b50 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8027b50:	b570      	push	{r4, r5, r6, lr}
 8027b52:	1214      	asrs	r4, r2, #8
 8027b54:	788d      	ldrb	r5, [r1, #2]
 8027b56:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8027b5a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8027b5e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8027b62:	fb15 f503 	smulbb	r5, r5, r3
 8027b66:	fb04 5506 	mla	r5, r4, r6, r5
 8027b6a:	10d0      	asrs	r0, r2, #3
 8027b6c:	784c      	ldrb	r4, [r1, #1]
 8027b6e:	7809      	ldrb	r1, [r1, #0]
 8027b70:	00d2      	lsls	r2, r2, #3
 8027b72:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8027b76:	b2d2      	uxtb	r2, r2
 8027b78:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8027b7c:	fb14 f403 	smulbb	r4, r4, r3
 8027b80:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8027b84:	fb11 f303 	smulbb	r3, r1, r3
 8027b88:	fb00 4406 	mla	r4, r0, r6, r4
 8027b8c:	fb02 3306 	mla	r3, r2, r6, r3
 8027b90:	b2ad      	uxth	r5, r5
 8027b92:	b29b      	uxth	r3, r3
 8027b94:	b2a4      	uxth	r4, r4
 8027b96:	1c68      	adds	r0, r5, #1
 8027b98:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8027b9c:	1c62      	adds	r2, r4, #1
 8027b9e:	1c58      	adds	r0, r3, #1
 8027ba0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8027ba4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8027ba8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8027bac:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8027bb0:	0964      	lsrs	r4, r4, #5
 8027bb2:	4328      	orrs	r0, r5
 8027bb4:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8027bb8:	4320      	orrs	r0, r4
 8027bba:	bd70      	pop	{r4, r5, r6, pc}

08027bbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8027bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027bc0:	b08f      	sub	sp, #60	; 0x3c
 8027bc2:	461c      	mov	r4, r3
 8027bc4:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8027bc8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027bca:	4682      	mov	sl, r0
 8027bcc:	460e      	mov	r6, r1
 8027bce:	4615      	mov	r5, r2
 8027bd0:	2f00      	cmp	r7, #0
 8027bd2:	f000 8142 	beq.w	8027e5a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8027bd6:	6820      	ldr	r0, [r4, #0]
 8027bd8:	6861      	ldr	r1, [r4, #4]
 8027bda:	aa0a      	add	r2, sp, #40	; 0x28
 8027bdc:	c203      	stmia	r2!, {r0, r1}
 8027bde:	6818      	ldr	r0, [r3, #0]
 8027be0:	6859      	ldr	r1, [r3, #4]
 8027be2:	aa0c      	add	r2, sp, #48	; 0x30
 8027be4:	c203      	stmia	r2!, {r0, r1}
 8027be6:	a80a      	add	r0, sp, #40	; 0x28
 8027be8:	f7ef fab4 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027bec:	4621      	mov	r1, r4
 8027bee:	a80c      	add	r0, sp, #48	; 0x30
 8027bf0:	f7ef faf4 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027bf4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8027bf8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8027bfc:	f002 0301 	and.w	r3, r2, #1
 8027c00:	9306      	str	r3, [sp, #24]
 8027c02:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8027c06:	f003 0101 	and.w	r1, r3, #1
 8027c0a:	9105      	str	r1, [sp, #20]
 8027c0c:	9805      	ldr	r0, [sp, #20]
 8027c0e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8027c12:	4403      	add	r3, r0
 8027c14:	fb01 2303 	mla	r3, r1, r3, r2
 8027c18:	f04f 0802 	mov.w	r8, #2
 8027c1c:	fb93 f3f8 	sdiv	r3, r3, r8
 8027c20:	441e      	add	r6, r3
 8027c22:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8027c26:	441a      	add	r2, r3
 8027c28:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8027c2c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8027c30:	4419      	add	r1, r3
 8027c32:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8027c36:	9303      	str	r3, [sp, #12]
 8027c38:	4b89      	ldr	r3, [pc, #548]	; (8027e60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8027c3a:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8027c3e:	6818      	ldr	r0, [r3, #0]
 8027c40:	6803      	ldr	r3, [r0, #0]
 8027c42:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8027c44:	4798      	blx	r3
 8027c46:	4a87      	ldr	r2, [pc, #540]	; (8027e64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8027c48:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8027c4c:	8813      	ldrh	r3, [r2, #0]
 8027c4e:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8027c52:	2fff      	cmp	r7, #255	; 0xff
 8027c54:	fb03 9404 	mla	r4, r3, r4, r9
 8027c58:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8027c5c:	f105 0504 	add.w	r5, r5, #4
 8027c60:	4694      	mov	ip, r2
 8027c62:	fb03 f30b 	mul.w	r3, r3, fp
 8027c66:	d071      	beq.n	8027d4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8027c68:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8027c6c:	43f9      	mvns	r1, r7
 8027c6e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8027c72:	b2c9      	uxtb	r1, r1
 8027c74:	9104      	str	r1, [sp, #16]
 8027c76:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8027c7a:	9b07      	ldr	r3, [sp, #28]
 8027c7c:	42a3      	cmp	r3, r4
 8027c7e:	f240 80e7 	bls.w	8027e50 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8027c82:	9b06      	ldr	r3, [sp, #24]
 8027c84:	2b00      	cmp	r3, #0
 8027c86:	d03d      	beq.n	8027d04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8027c88:	7831      	ldrb	r1, [r6, #0]
 8027c8a:	9b04      	ldr	r3, [sp, #16]
 8027c8c:	8822      	ldrh	r2, [r4, #0]
 8027c8e:	9300      	str	r3, [sp, #0]
 8027c90:	f001 010f 	and.w	r1, r1, #15
 8027c94:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027c98:	463b      	mov	r3, r7
 8027c9a:	4429      	add	r1, r5
 8027c9c:	4650      	mov	r0, sl
 8027c9e:	f7ff ff57 	bl	8027b50 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027ca2:	9b03      	ldr	r3, [sp, #12]
 8027ca4:	f824 0b02 	strh.w	r0, [r4], #2
 8027ca8:	f106 0801 	add.w	r8, r6, #1
 8027cac:	f103 3bff 	add.w	fp, r3, #4294967295	; 0xffffffff
 8027cb0:	f1bb 0f01 	cmp.w	fp, #1
 8027cb4:	46a1      	mov	r9, r4
 8027cb6:	f104 0404 	add.w	r4, r4, #4
 8027cba:	dd27      	ble.n	8027d0c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8027cbc:	f898 1000 	ldrb.w	r1, [r8]
 8027cc0:	9b04      	ldr	r3, [sp, #16]
 8027cc2:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8027cc6:	9300      	str	r3, [sp, #0]
 8027cc8:	0909      	lsrs	r1, r1, #4
 8027cca:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027cce:	463b      	mov	r3, r7
 8027cd0:	4429      	add	r1, r5
 8027cd2:	4650      	mov	r0, sl
 8027cd4:	f7ff ff3c 	bl	8027b50 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027cd8:	f824 0c04 	strh.w	r0, [r4, #-4]
 8027cdc:	f818 1b01 	ldrb.w	r1, [r8], #1
 8027ce0:	9b04      	ldr	r3, [sp, #16]
 8027ce2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8027ce6:	9300      	str	r3, [sp, #0]
 8027ce8:	f001 010f 	and.w	r1, r1, #15
 8027cec:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027cf0:	463b      	mov	r3, r7
 8027cf2:	4429      	add	r1, r5
 8027cf4:	4650      	mov	r0, sl
 8027cf6:	f7ff ff2b 	bl	8027b50 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027cfa:	f1ab 0b02 	sub.w	fp, fp, #2
 8027cfe:	f824 0c02 	strh.w	r0, [r4, #-2]
 8027d02:	e7d5      	b.n	8027cb0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8027d04:	46b0      	mov	r8, r6
 8027d06:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8027d0a:	e7d1      	b.n	8027cb0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8027d0c:	d10f      	bne.n	8027d2e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8027d0e:	f898 1000 	ldrb.w	r1, [r8]
 8027d12:	9b04      	ldr	r3, [sp, #16]
 8027d14:	f8b9 2000 	ldrh.w	r2, [r9]
 8027d18:	9300      	str	r3, [sp, #0]
 8027d1a:	0909      	lsrs	r1, r1, #4
 8027d1c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027d20:	463b      	mov	r3, r7
 8027d22:	4429      	add	r1, r5
 8027d24:	4650      	mov	r0, sl
 8027d26:	f7ff ff13 	bl	8027b50 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027d2a:	f829 0b02 	strh.w	r0, [r9], #2
 8027d2e:	9b08      	ldr	r3, [sp, #32]
 8027d30:	9a05      	ldr	r2, [sp, #20]
 8027d32:	881c      	ldrh	r4, [r3, #0]
 8027d34:	9b03      	ldr	r3, [sp, #12]
 8027d36:	1ae4      	subs	r4, r4, r3
 8027d38:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8027d3c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8027d40:	4413      	add	r3, r2
 8027d42:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027d44:	fb93 f3f2 	sdiv	r3, r3, r2
 8027d48:	441e      	add	r6, r3
 8027d4a:	e796      	b.n	8027c7a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8027d4c:	4f46      	ldr	r7, [pc, #280]	; (8027e68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8027d4e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8027d52:	42a3      	cmp	r3, r4
 8027d54:	d97c      	bls.n	8027e50 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8027d56:	9a06      	ldr	r2, [sp, #24]
 8027d58:	2a00      	cmp	r2, #0
 8027d5a:	d054      	beq.n	8027e06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8027d5c:	7830      	ldrb	r0, [r6, #0]
 8027d5e:	f000 000f 	and.w	r0, r0, #15
 8027d62:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027d66:	eb05 0e00 	add.w	lr, r5, r0
 8027d6a:	5c28      	ldrb	r0, [r5, r0]
 8027d6c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8027d70:	f89e e001 	ldrb.w	lr, [lr, #1]
 8027d74:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8027d78:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8027d7c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8027d80:	ea42 020e 	orr.w	r2, r2, lr
 8027d84:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8027d88:	f824 2b02 	strh.w	r2, [r4], #2
 8027d8c:	9a03      	ldr	r2, [sp, #12]
 8027d8e:	1c71      	adds	r1, r6, #1
 8027d90:	f102 3eff 	add.w	lr, r2, #4294967295	; 0xffffffff
 8027d94:	f1be 0f01 	cmp.w	lr, #1
 8027d98:	4620      	mov	r0, r4
 8027d9a:	f104 0404 	add.w	r4, r4, #4
 8027d9e:	dd36      	ble.n	8027e0e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8027da0:	7808      	ldrb	r0, [r1, #0]
 8027da2:	0900      	lsrs	r0, r0, #4
 8027da4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027da8:	eb05 0a00 	add.w	sl, r5, r0
 8027dac:	f1ae 0e02 	sub.w	lr, lr, #2
 8027db0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8027db4:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8027db8:	00d2      	lsls	r2, r2, #3
 8027dba:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8027dbe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027dc2:	ea49 0202 	orr.w	r2, r9, r2
 8027dc6:	f815 9000 	ldrb.w	r9, [r5, r0]
 8027dca:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8027dce:	f824 2c04 	strh.w	r2, [r4, #-4]
 8027dd2:	f811 0b01 	ldrb.w	r0, [r1], #1
 8027dd6:	f000 000f 	and.w	r0, r0, #15
 8027dda:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027dde:	eb05 0a00 	add.w	sl, r5, r0
 8027de2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8027de6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8027dea:	00d2      	lsls	r2, r2, #3
 8027dec:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8027df0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027df4:	ea49 0202 	orr.w	r2, r9, r2
 8027df8:	f815 9000 	ldrb.w	r9, [r5, r0]
 8027dfc:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8027e00:	f824 2c02 	strh.w	r2, [r4, #-2]
 8027e04:	e7c6      	b.n	8027d94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8027e06:	4631      	mov	r1, r6
 8027e08:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8027e0c:	e7c2      	b.n	8027d94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8027e0e:	d111      	bne.n	8027e34 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8027e10:	7809      	ldrb	r1, [r1, #0]
 8027e12:	0909      	lsrs	r1, r1, #4
 8027e14:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027e18:	186c      	adds	r4, r5, r1
 8027e1a:	5c69      	ldrb	r1, [r5, r1]
 8027e1c:	78a2      	ldrb	r2, [r4, #2]
 8027e1e:	7864      	ldrb	r4, [r4, #1]
 8027e20:	00e4      	lsls	r4, r4, #3
 8027e22:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8027e26:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8027e2a:	4322      	orrs	r2, r4
 8027e2c:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8027e30:	f820 2b02 	strh.w	r2, [r0], #2
 8027e34:	9a03      	ldr	r2, [sp, #12]
 8027e36:	f8bc 4000 	ldrh.w	r4, [ip]
 8027e3a:	9905      	ldr	r1, [sp, #20]
 8027e3c:	1aa4      	subs	r4, r4, r2
 8027e3e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8027e42:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8027e46:	440a      	add	r2, r1
 8027e48:	fb92 f2f8 	sdiv	r2, r2, r8
 8027e4c:	4416      	add	r6, r2
 8027e4e:	e780      	b.n	8027d52 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8027e50:	4b03      	ldr	r3, [pc, #12]	; (8027e60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8027e52:	6818      	ldr	r0, [r3, #0]
 8027e54:	6803      	ldr	r3, [r0, #0]
 8027e56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027e58:	4798      	blx	r3
 8027e5a:	b00f      	add	sp, #60	; 0x3c
 8027e5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027e60:	2000e1c0 	.word	0x2000e1c0
 8027e64:	2000e1ba 	.word	0x2000e1ba
 8027e68:	fffff800 	.word	0xfffff800

08027e6c <CRC_Lock>:
 8027e6c:	b530      	push	{r4, r5, lr}
 8027e6e:	4a20      	ldr	r2, [pc, #128]	; (8027ef0 <CRC_Lock+0x84>)
 8027e70:	6813      	ldr	r3, [r2, #0]
 8027e72:	f023 0301 	bic.w	r3, r3, #1
 8027e76:	6013      	str	r3, [r2, #0]
 8027e78:	4b1e      	ldr	r3, [pc, #120]	; (8027ef4 <CRC_Lock+0x88>)
 8027e7a:	681a      	ldr	r2, [r3, #0]
 8027e7c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8027e80:	4022      	ands	r2, r4
 8027e82:	f24c 2540 	movw	r5, #49728	; 0xc240
 8027e86:	42aa      	cmp	r2, r5
 8027e88:	d005      	beq.n	8027e96 <CRC_Lock+0x2a>
 8027e8a:	681b      	ldr	r3, [r3, #0]
 8027e8c:	f24c 2270 	movw	r2, #49776	; 0xc270
 8027e90:	4023      	ands	r3, r4
 8027e92:	4293      	cmp	r3, r2
 8027e94:	d124      	bne.n	8027ee0 <CRC_Lock+0x74>
 8027e96:	4b18      	ldr	r3, [pc, #96]	; (8027ef8 <CRC_Lock+0x8c>)
 8027e98:	681b      	ldr	r3, [r3, #0]
 8027e9a:	bb0b      	cbnz	r3, 8027ee0 <CRC_Lock+0x74>
 8027e9c:	4b17      	ldr	r3, [pc, #92]	; (8027efc <CRC_Lock+0x90>)
 8027e9e:	681a      	ldr	r2, [r3, #0]
 8027ea0:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027ea4:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8027ea8:	d00d      	beq.n	8027ec6 <CRC_Lock+0x5a>
 8027eaa:	681a      	ldr	r2, [r3, #0]
 8027eac:	f240 4483 	movw	r4, #1155	; 0x483
 8027eb0:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027eb4:	42a2      	cmp	r2, r4
 8027eb6:	d006      	beq.n	8027ec6 <CRC_Lock+0x5a>
 8027eb8:	681b      	ldr	r3, [r3, #0]
 8027eba:	f240 4285 	movw	r2, #1157	; 0x485
 8027ebe:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8027ec2:	4293      	cmp	r3, r2
 8027ec4:	d10c      	bne.n	8027ee0 <CRC_Lock+0x74>
 8027ec6:	4b0e      	ldr	r3, [pc, #56]	; (8027f00 <CRC_Lock+0x94>)
 8027ec8:	2201      	movs	r2, #1
 8027eca:	601a      	str	r2, [r3, #0]
 8027ecc:	681a      	ldr	r2, [r3, #0]
 8027ece:	2a00      	cmp	r2, #0
 8027ed0:	d1fc      	bne.n	8027ecc <CRC_Lock+0x60>
 8027ed2:	4b0c      	ldr	r3, [pc, #48]	; (8027f04 <CRC_Lock+0x98>)
 8027ed4:	6018      	str	r0, [r3, #0]
 8027ed6:	6818      	ldr	r0, [r3, #0]
 8027ed8:	1a43      	subs	r3, r0, r1
 8027eda:	4258      	negs	r0, r3
 8027edc:	4158      	adcs	r0, r3
 8027ede:	bd30      	pop	{r4, r5, pc}
 8027ee0:	4b09      	ldr	r3, [pc, #36]	; (8027f08 <CRC_Lock+0x9c>)
 8027ee2:	2201      	movs	r2, #1
 8027ee4:	601a      	str	r2, [r3, #0]
 8027ee6:	681a      	ldr	r2, [r3, #0]
 8027ee8:	2a00      	cmp	r2, #0
 8027eea:	d1fc      	bne.n	8027ee6 <CRC_Lock+0x7a>
 8027eec:	4b07      	ldr	r3, [pc, #28]	; (8027f0c <CRC_Lock+0xa0>)
 8027eee:	e7f1      	b.n	8027ed4 <CRC_Lock+0x68>
 8027ef0:	e0002000 	.word	0xe0002000
 8027ef4:	e000ed00 	.word	0xe000ed00
 8027ef8:	e0042000 	.word	0xe0042000
 8027efc:	5c001000 	.word	0x5c001000
 8027f00:	58024c08 	.word	0x58024c08
 8027f04:	58024c00 	.word	0x58024c00
 8027f08:	40023008 	.word	0x40023008
 8027f0c:	40023000 	.word	0x40023000

08027f10 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8027f10:	6101      	str	r1, [r0, #16]
 8027f12:	4770      	bx	lr

08027f14 <_ZN8touchgfx8Gestures4tickEv>:
 8027f14:	7b83      	ldrb	r3, [r0, #14]
 8027f16:	b14b      	cbz	r3, 8027f2c <_ZN8touchgfx8Gestures4tickEv+0x18>
 8027f18:	8903      	ldrh	r3, [r0, #8]
 8027f1a:	3301      	adds	r3, #1
 8027f1c:	b29b      	uxth	r3, r3
 8027f1e:	2b07      	cmp	r3, #7
 8027f20:	8103      	strh	r3, [r0, #8]
 8027f22:	bf81      	itttt	hi
 8027f24:	2300      	movhi	r3, #0
 8027f26:	8143      	strhhi	r3, [r0, #10]
 8027f28:	8183      	strhhi	r3, [r0, #12]
 8027f2a:	7383      	strbhi	r3, [r0, #14]
 8027f2c:	4770      	bx	lr
	...

08027f30 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8027f30:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8027f34:	4698      	mov	r8, r3
 8027f36:	8883      	ldrh	r3, [r0, #4]
 8027f38:	f8ad 3006 	strh.w	r3, [sp, #6]
 8027f3c:	eba8 0303 	sub.w	r3, r8, r3
 8027f40:	b21b      	sxth	r3, r3
 8027f42:	4604      	mov	r4, r0
 8027f44:	2b00      	cmp	r3, #0
 8027f46:	4617      	mov	r7, r2
 8027f48:	4a18      	ldr	r2, [pc, #96]	; (8027fac <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8027f4a:	9200      	str	r2, [sp, #0]
 8027f4c:	bfb8      	it	lt
 8027f4e:	425b      	neglt	r3, r3
 8027f50:	8aa2      	ldrh	r2, [r4, #20]
 8027f52:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8027f56:	f8ad 800a 	strh.w	r8, [sp, #10]
 8027f5a:	b21b      	sxth	r3, r3
 8027f5c:	460e      	mov	r6, r1
 8027f5e:	4293      	cmp	r3, r2
 8027f60:	88c1      	ldrh	r1, [r0, #6]
 8027f62:	f8ad 1008 	strh.w	r1, [sp, #8]
 8027f66:	f04f 0000 	mov.w	r0, #0
 8027f6a:	f88d 0004 	strb.w	r0, [sp, #4]
 8027f6e:	f8ad 500c 	strh.w	r5, [sp, #12]
 8027f72:	dc07      	bgt.n	8027f84 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8027f74:	1a69      	subs	r1, r5, r1
 8027f76:	b209      	sxth	r1, r1
 8027f78:	2900      	cmp	r1, #0
 8027f7a:	bfb8      	it	lt
 8027f7c:	4249      	neglt	r1, r1
 8027f7e:	b209      	sxth	r1, r1
 8027f80:	428a      	cmp	r2, r1
 8027f82:	da10      	bge.n	8027fa6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8027f84:	6920      	ldr	r0, [r4, #16]
 8027f86:	6803      	ldr	r3, [r0, #0]
 8027f88:	4669      	mov	r1, sp
 8027f8a:	685b      	ldr	r3, [r3, #4]
 8027f8c:	4798      	blx	r3
 8027f8e:	eba8 0606 	sub.w	r6, r8, r6
 8027f92:	2300      	movs	r3, #0
 8027f94:	1bef      	subs	r7, r5, r7
 8027f96:	2001      	movs	r0, #1
 8027f98:	8123      	strh	r3, [r4, #8]
 8027f9a:	8166      	strh	r6, [r4, #10]
 8027f9c:	81a7      	strh	r7, [r4, #12]
 8027f9e:	f8a4 8004 	strh.w	r8, [r4, #4]
 8027fa2:	80e5      	strh	r5, [r4, #6]
 8027fa4:	73a0      	strb	r0, [r4, #14]
 8027fa6:	b004      	add	sp, #16
 8027fa8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027fac:	0802ce98 	.word	0x0802ce98

08027fb0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8027fb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027fb2:	461e      	mov	r6, r3
 8027fb4:	1e4b      	subs	r3, r1, #1
 8027fb6:	2b01      	cmp	r3, #1
 8027fb8:	b085      	sub	sp, #20
 8027fba:	4604      	mov	r4, r0
 8027fbc:	460d      	mov	r5, r1
 8027fbe:	4617      	mov	r7, r2
 8027fc0:	d84b      	bhi.n	802805a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8027fc2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8027fc6:	1cd3      	adds	r3, r2, #3
 8027fc8:	b29b      	uxth	r3, r3
 8027fca:	2b06      	cmp	r3, #6
 8027fcc:	d916      	bls.n	8027ffc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8027fce:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8028070 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8027fd2:	f8cd c004 	str.w	ip, [sp, #4]
 8027fd6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8027fda:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8027fde:	6900      	ldr	r0, [r0, #16]
 8027fe0:	f8ad 100c 	strh.w	r1, [sp, #12]
 8027fe4:	f04f 0c00 	mov.w	ip, #0
 8027fe8:	f88d c008 	strb.w	ip, [sp, #8]
 8027fec:	f8ad 200a 	strh.w	r2, [sp, #10]
 8027ff0:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027ff4:	6803      	ldr	r3, [r0, #0]
 8027ff6:	a901      	add	r1, sp, #4
 8027ff8:	689b      	ldr	r3, [r3, #8]
 8027ffa:	4798      	blx	r3
 8027ffc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8028000:	1cd3      	adds	r3, r2, #3
 8028002:	b29b      	uxth	r3, r3
 8028004:	2b06      	cmp	r3, #6
 8028006:	d916      	bls.n	8028036 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8028008:	f8df c064 	ldr.w	ip, [pc, #100]	; 8028070 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802800c:	f8cd c004 	str.w	ip, [sp, #4]
 8028010:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8028014:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8028018:	6920      	ldr	r0, [r4, #16]
 802801a:	f8ad 100c 	strh.w	r1, [sp, #12]
 802801e:	f04f 0c01 	mov.w	ip, #1
 8028022:	f88d c008 	strb.w	ip, [sp, #8]
 8028026:	f8ad 200a 	strh.w	r2, [sp, #10]
 802802a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802802e:	6803      	ldr	r3, [r0, #0]
 8028030:	a901      	add	r1, sp, #4
 8028032:	689b      	ldr	r3, [r3, #8]
 8028034:	4798      	blx	r3
 8028036:	4b0d      	ldr	r3, [pc, #52]	; (802806c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8028038:	9301      	str	r3, [sp, #4]
 802803a:	6920      	ldr	r0, [r4, #16]
 802803c:	f88d 5008 	strb.w	r5, [sp, #8]
 8028040:	2300      	movs	r3, #0
 8028042:	f8ad 700a 	strh.w	r7, [sp, #10]
 8028046:	f8ad 600c 	strh.w	r6, [sp, #12]
 802804a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802804e:	6803      	ldr	r3, [r0, #0]
 8028050:	a901      	add	r1, sp, #4
 8028052:	681b      	ldr	r3, [r3, #0]
 8028054:	4798      	blx	r3
 8028056:	b005      	add	sp, #20
 8028058:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802805a:	2900      	cmp	r1, #0
 802805c:	d1eb      	bne.n	8028036 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802805e:	80a2      	strh	r2, [r4, #4]
 8028060:	80c6      	strh	r6, [r0, #6]
 8028062:	60a1      	str	r1, [r4, #8]
 8028064:	81a1      	strh	r1, [r4, #12]
 8028066:	73a1      	strb	r1, [r4, #14]
 8028068:	e7e5      	b.n	8028036 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802806a:	bf00      	nop
 802806c:	0802ce84 	.word	0x0802ce84
 8028070:	0802ceac 	.word	0x0802ceac

08028074 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8028074:	10c9      	asrs	r1, r1, #3
 8028076:	2900      	cmp	r1, #0
 8028078:	bfb8      	it	lt
 802807a:	4249      	neglt	r1, r1
 802807c:	2801      	cmp	r0, #1
 802807e:	d108      	bne.n	8028092 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8028080:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8028084:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8028088:	4601      	mov	r1, r0
 802808a:	dd02      	ble.n	8028092 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 802808c:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8028090:	4770      	bx	lr
 8028092:	29ff      	cmp	r1, #255	; 0xff
 8028094:	bfa8      	it	ge
 8028096:	21ff      	movge	r1, #255	; 0xff
 8028098:	4608      	mov	r0, r1
 802809a:	4770      	bx	lr

0802809c <_ZN8touchgfx10Rasterizer6lineToEii>:
 802809c:	b410      	push	{r4}
 802809e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80280a2:	429c      	cmp	r4, r3
 80280a4:	d803      	bhi.n	80280ae <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 80280a6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80280aa:	f7ed bb57 	b.w	801575c <_ZN8touchgfx7Outline6lineToEii>
 80280ae:	f85d 4b04 	ldr.w	r4, [sp], #4
 80280b2:	4770      	bx	lr

080280b4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 80280b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80280b8:	b08b      	sub	sp, #44	; 0x2c
 80280ba:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80280be:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80280c2:	9308      	str	r3, [sp, #32]
 80280c4:	4606      	mov	r6, r0
 80280c6:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80280ca:	9309      	str	r3, [sp, #36]	; 0x24
 80280cc:	468a      	mov	sl, r1
 80280ce:	f7ed fcb2 	bl	8015a36 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 80280d2:	68b5      	ldr	r5, [r6, #8]
 80280d4:	4604      	mov	r4, r0
 80280d6:	2d00      	cmp	r5, #0
 80280d8:	d044      	beq.n	8028164 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80280da:	6873      	ldr	r3, [r6, #4]
 80280dc:	42ab      	cmp	r3, r5
 80280de:	d33d      	bcc.n	802815c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 80280e0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80280e4:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 80280e8:	eb02 0b03 	add.w	fp, r2, r3
 80280ec:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 80280f0:	fb02 1203 	mla	r2, r2, r3, r1
 80280f4:	9205      	str	r2, [sp, #20]
 80280f6:	1e6a      	subs	r2, r5, #1
 80280f8:	9204      	str	r2, [sp, #16]
 80280fa:	f04f 0800 	mov.w	r8, #0
 80280fe:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8028102:	f9b4 7000 	ldrsh.w	r7, [r4]
 8028106:	454b      	cmp	r3, r9
 8028108:	463a      	mov	r2, r7
 802810a:	d008      	beq.n	802811e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 802810c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8028110:	eb03 0b09 	add.w	fp, r3, r9
 8028114:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8028118:	fb03 1309 	mla	r3, r3, r9, r1
 802811c:	9305      	str	r3, [sp, #20]
 802811e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8028122:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8028126:	4498      	add	r8, r3
 8028128:	9b04      	ldr	r3, [sp, #16]
 802812a:	3b01      	subs	r3, #1
 802812c:	9304      	str	r3, [sp, #16]
 802812e:	9b04      	ldr	r3, [sp, #16]
 8028130:	3301      	adds	r3, #1
 8028132:	d015      	beq.n	8028160 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8028134:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8028138:	42bb      	cmp	r3, r7
 802813a:	d117      	bne.n	802816c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 802813c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8028140:	9b04      	ldr	r3, [sp, #16]
 8028142:	4548      	cmp	r0, r9
 8028144:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8028148:	d17f      	bne.n	802824a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802814a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 802814e:	4401      	add	r1, r0
 8028150:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8028154:	4480      	add	r8, r0
 8028156:	e7e9      	b.n	802812c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8028158:	461f      	mov	r7, r3
 802815a:	e044      	b.n	80281e6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 802815c:	2000      	movs	r0, #0
 802815e:	e002      	b.n	8028166 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8028160:	2900      	cmp	r1, #0
 8028162:	d16f      	bne.n	8028244 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8028164:	2001      	movs	r0, #1
 8028166:	b00b      	add	sp, #44	; 0x2c
 8028168:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802816c:	2900      	cmp	r1, #0
 802816e:	d030      	beq.n	80281d2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8028170:	2f00      	cmp	r7, #0
 8028172:	db29      	blt.n	80281c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8028174:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8028178:	42bb      	cmp	r3, r7
 802817a:	dd25      	ble.n	80281c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802817c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8028180:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8028184:	f7ff ff76 	bl	8028074 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8028188:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802818a:	fb10 f003 	smulbb	r0, r0, r3
 802818e:	b280      	uxth	r0, r0
 8028190:	1c41      	adds	r1, r0, #1
 8028192:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8028196:	1209      	asrs	r1, r1, #8
 8028198:	f011 0fff 	tst.w	r1, #255	; 0xff
 802819c:	d014      	beq.n	80281c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802819e:	9808      	ldr	r0, [sp, #32]
 80281a0:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80281a2:	b2c9      	uxtb	r1, r1
 80281a4:	b2ba      	uxth	r2, r7
 80281a6:	9102      	str	r1, [sp, #8]
 80281a8:	2101      	movs	r1, #1
 80281aa:	4413      	add	r3, r2
 80281ac:	9101      	str	r1, [sp, #4]
 80281ae:	4402      	add	r2, r0
 80281b0:	fa0f f18b 	sxth.w	r1, fp
 80281b4:	f8da 0000 	ldr.w	r0, [sl]
 80281b8:	9100      	str	r1, [sp, #0]
 80281ba:	6941      	ldr	r1, [r0, #20]
 80281bc:	b21b      	sxth	r3, r3
 80281be:	460d      	mov	r5, r1
 80281c0:	b212      	sxth	r2, r2
 80281c2:	9905      	ldr	r1, [sp, #20]
 80281c4:	4650      	mov	r0, sl
 80281c6:	47a8      	blx	r5
 80281c8:	9b04      	ldr	r3, [sp, #16]
 80281ca:	3301      	adds	r3, #1
 80281cc:	f107 0201 	add.w	r2, r7, #1
 80281d0:	d0c8      	beq.n	8028164 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80281d2:	f9b4 7000 	ldrsh.w	r7, [r4]
 80281d6:	1abb      	subs	r3, r7, r2
 80281d8:	2b00      	cmp	r3, #0
 80281da:	dd31      	ble.n	8028240 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80281dc:	2a00      	cmp	r2, #0
 80281de:	dabb      	bge.n	8028158 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 80281e0:	2f00      	cmp	r7, #0
 80281e2:	dd2d      	ble.n	8028240 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80281e4:	2200      	movs	r2, #0
 80281e6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80281ea:	19d1      	adds	r1, r2, r7
 80281ec:	4299      	cmp	r1, r3
 80281ee:	db02      	blt.n	80281f6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 80281f0:	1a9f      	subs	r7, r3, r2
 80281f2:	2f00      	cmp	r7, #0
 80281f4:	dd24      	ble.n	8028240 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80281f6:	ea4f 1188 	mov.w	r1, r8, lsl #6
 80281fa:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80281fe:	f7ff ff39 	bl	8028074 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8028202:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028204:	fb10 f003 	smulbb	r0, r0, r3
 8028208:	b280      	uxth	r0, r0
 802820a:	1c41      	adds	r1, r0, #1
 802820c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8028210:	1209      	asrs	r1, r1, #8
 8028212:	f011 0fff 	tst.w	r1, #255	; 0xff
 8028216:	d013      	beq.n	8028240 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8028218:	9808      	ldr	r0, [sp, #32]
 802821a:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 802821c:	b292      	uxth	r2, r2
 802821e:	b2c9      	uxtb	r1, r1
 8028220:	4413      	add	r3, r2
 8028222:	9102      	str	r1, [sp, #8]
 8028224:	4402      	add	r2, r0
 8028226:	b23f      	sxth	r7, r7
 8028228:	f8da 0000 	ldr.w	r0, [sl]
 802822c:	9701      	str	r7, [sp, #4]
 802822e:	fa0f f18b 	sxth.w	r1, fp
 8028232:	9100      	str	r1, [sp, #0]
 8028234:	6947      	ldr	r7, [r0, #20]
 8028236:	9905      	ldr	r1, [sp, #20]
 8028238:	b21b      	sxth	r3, r3
 802823a:	b212      	sxth	r2, r2
 802823c:	4650      	mov	r0, sl
 802823e:	47b8      	blx	r7
 8028240:	464b      	mov	r3, r9
 8028242:	e75c      	b.n	80280fe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8028244:	2f00      	cmp	r7, #0
 8028246:	da95      	bge.n	8028174 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8028248:	e78c      	b.n	8028164 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802824a:	2900      	cmp	r1, #0
 802824c:	d0f8      	beq.n	8028240 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802824e:	e78f      	b.n	8028170 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08028250 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8028250:	4b4b      	ldr	r3, [pc, #300]	; (8028380 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8028252:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8028256:	2500      	movs	r5, #0
 8028258:	f100 0620 	add.w	r6, r0, #32
 802825c:	4604      	mov	r4, r0
 802825e:	e9c0 3100 	strd	r3, r1, [r0]
 8028262:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8028266:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802826a:	e9c0 5506 	strd	r5, r5, [r0, #24]
 802826e:	f100 0718 	add.w	r7, r0, #24
 8028272:	4630      	mov	r0, r6
 8028274:	4690      	mov	r8, r2
 8028276:	f7ec fda9 	bl	8014dcc <_ZN8touchgfx7OutlineC1Ev>
 802827a:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 802827e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8028282:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8028286:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 802828a:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 802828e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8028292:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8028296:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 802829a:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 802829e:	f9b8 2000 	ldrsh.w	r2, [r8]
 80282a2:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 80282a6:	f8d4 c004 	ldr.w	ip, [r4, #4]
 80282aa:	9500      	str	r5, [sp, #0]
 80282ac:	4410      	add	r0, r2
 80282ae:	b280      	uxth	r0, r0
 80282b0:	fa0f fa80 	sxth.w	sl, r0
 80282b4:	45aa      	cmp	sl, r5
 80282b6:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 80282ba:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 80282be:	dd5c      	ble.n	802837a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80282c0:	4591      	cmp	r9, r2
 80282c2:	dd5a      	ble.n	802837a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80282c4:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 80282c8:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80282cc:	440b      	add	r3, r1
 80282ce:	b29b      	uxth	r3, r3
 80282d0:	b21d      	sxth	r5, r3
 80282d2:	2d00      	cmp	r5, #0
 80282d4:	dd51      	ble.n	802837a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80282d6:	458e      	cmp	lr, r1
 80282d8:	dd4f      	ble.n	802837a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80282da:	45d1      	cmp	r9, sl
 80282dc:	bfb8      	it	lt
 80282de:	fa1f f089 	uxthlt.w	r0, r9
 80282e2:	45ae      	cmp	lr, r5
 80282e4:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80282e8:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80282ec:	bfb8      	it	lt
 80282ee:	fa1f f38e 	uxthlt.w	r3, lr
 80282f2:	1a80      	subs	r0, r0, r2
 80282f4:	1a5b      	subs	r3, r3, r1
 80282f6:	f8ad 0004 	strh.w	r0, [sp, #4]
 80282fa:	f8ad 3006 	strh.w	r3, [sp, #6]
 80282fe:	f8ad 2000 	strh.w	r2, [sp]
 8028302:	f8ad 1002 	strh.w	r1, [sp, #2]
 8028306:	466d      	mov	r5, sp
 8028308:	e895 0003 	ldmia.w	r5, {r0, r1}
 802830c:	e887 0003 	stmia.w	r7, {r0, r1}
 8028310:	f8dc 3000 	ldr.w	r3, [ip]
 8028314:	4660      	mov	r0, ip
 8028316:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8028318:	4639      	mov	r1, r7
 802831a:	4798      	blx	r3
 802831c:	6861      	ldr	r1, [r4, #4]
 802831e:	4628      	mov	r0, r5
 8028320:	3104      	adds	r1, #4
 8028322:	f7ee ff5b 	bl	80171dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028326:	4638      	mov	r0, r7
 8028328:	f7ee ff14 	bl	8017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802832c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8028330:	f8bd 2000 	ldrh.w	r2, [sp]
 8028334:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8028338:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 802833c:	4630      	mov	r0, r6
 802833e:	f7ec fd29 	bl	8014d94 <_ZN8touchgfx7Outline5resetEv>
 8028342:	f9bd 3000 	ldrsh.w	r3, [sp]
 8028346:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 802834a:	015b      	lsls	r3, r3, #5
 802834c:	60a3      	str	r3, [r4, #8]
 802834e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8028352:	015b      	lsls	r3, r3, #5
 8028354:	60e3      	str	r3, [r4, #12]
 8028356:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802835a:	015b      	lsls	r3, r3, #5
 802835c:	6123      	str	r3, [r4, #16]
 802835e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8028362:	015b      	lsls	r3, r3, #5
 8028364:	6163      	str	r3, [r4, #20]
 8028366:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 802836a:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 802836e:	4620      	mov	r0, r4
 8028370:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8028374:	b002      	add	sp, #8
 8028376:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802837a:	2300      	movs	r3, #0
 802837c:	9301      	str	r3, [sp, #4]
 802837e:	e7c2      	b.n	8028306 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8028380:	0802d1d0 	.word	0x0802d1d0

08028384 <_ZN8touchgfx6Canvas5closeEv>:
 8028384:	b538      	push	{r3, r4, r5, lr}
 8028386:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802838a:	4604      	mov	r4, r0
 802838c:	b193      	cbz	r3, 80283b4 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802838e:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8028392:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8028396:	4213      	tst	r3, r2
 8028398:	d10c      	bne.n	80283b4 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802839a:	f100 0520 	add.w	r5, r0, #32
 802839e:	b123      	cbz	r3, 80283aa <_ZN8touchgfx6Canvas5closeEv+0x26>
 80283a0:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 80283a4:	4628      	mov	r0, r5
 80283a6:	f7ff fe79 	bl	802809c <_ZN8touchgfx10Rasterizer6lineToEii>
 80283aa:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 80283ae:	4628      	mov	r0, r5
 80283b0:	f7ff fe74 	bl	802809c <_ZN8touchgfx10Rasterizer6lineToEii>
 80283b4:	2300      	movs	r3, #0
 80283b6:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80283ba:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 80283be:	4298      	cmp	r0, r3
 80283c0:	bf34      	ite	cc
 80283c2:	2000      	movcc	r0, #0
 80283c4:	2001      	movcs	r0, #1
 80283c6:	bd38      	pop	{r3, r4, r5, pc}

080283c8 <_ZN8touchgfx6Canvas6renderEh>:
 80283c8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80283cc:	4604      	mov	r4, r0
 80283ce:	6840      	ldr	r0, [r0, #4]
 80283d0:	6803      	ldr	r3, [r0, #0]
 80283d2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80283d4:	460d      	mov	r5, r1
 80283d6:	4798      	blx	r3
 80283d8:	fb10 f105 	smulbb	r1, r0, r5
 80283dc:	b289      	uxth	r1, r1
 80283de:	1c4d      	adds	r5, r1, #1
 80283e0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80283e4:	122d      	asrs	r5, r5, #8
 80283e6:	f000 809d 	beq.w	8028524 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 80283ea:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 80283ee:	2b00      	cmp	r3, #0
 80283f0:	f000 8098 	beq.w	8028524 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 80283f4:	4620      	mov	r0, r4
 80283f6:	f7ff ffc5 	bl	8028384 <_ZN8touchgfx6Canvas5closeEv>
 80283fa:	4607      	mov	r7, r0
 80283fc:	2800      	cmp	r0, #0
 80283fe:	d048      	beq.n	8028492 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8028400:	6863      	ldr	r3, [r4, #4]
 8028402:	4e49      	ldr	r6, [pc, #292]	; (8028528 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8028404:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8028406:	6837      	ldr	r7, [r6, #0]
 8028408:	6803      	ldr	r3, [r0, #0]
 802840a:	689b      	ldr	r3, [r3, #8]
 802840c:	4798      	blx	r3
 802840e:	4601      	mov	r1, r0
 8028410:	4638      	mov	r0, r7
 8028412:	f7ea ffdf 	bl	80133d4 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8028416:	4607      	mov	r7, r0
 8028418:	f7e3 fb2c 	bl	800ba74 <_ZN8touchgfx3HAL3lcdEv>
 802841c:	6803      	ldr	r3, [r0, #0]
 802841e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8028420:	4798      	blx	r3
 8028422:	4680      	mov	r8, r0
 8028424:	f7e3 fb26 	bl	800ba74 <_ZN8touchgfx3HAL3lcdEv>
 8028428:	6803      	ldr	r3, [r0, #0]
 802842a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802842c:	4798      	blx	r3
 802842e:	280b      	cmp	r0, #11
 8028430:	d85d      	bhi.n	80284ee <_ZN8touchgfx6Canvas6renderEh+0x126>
 8028432:	e8df f000 	tbb	[pc, r0]
 8028436:	5e53      	.short	0x5e53
 8028438:	325c066e 	.word	0x325c066e
 802843c:	67676742 	.word	0x67676742
 8028440:	6767      	.short	0x6767
 8028442:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8028446:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802844a:	2208      	movs	r2, #8
 802844c:	fb91 f2f2 	sdiv	r2, r1, r2
 8028450:	fb08 2303 	mla	r3, r8, r3, r2
 8028454:	441f      	add	r7, r3
 8028456:	424b      	negs	r3, r1
 8028458:	f003 0307 	and.w	r3, r3, #7
 802845c:	f001 0107 	and.w	r1, r1, #7
 8028460:	bf58      	it	pl
 8028462:	4259      	negpl	r1, r3
 8028464:	b2c9      	uxtb	r1, r1
 8028466:	b2ed      	uxtb	r5, r5
 8028468:	e9cd 1500 	strd	r1, r5, [sp]
 802846c:	6860      	ldr	r0, [r4, #4]
 802846e:	463a      	mov	r2, r7
 8028470:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8028472:	fa0f f388 	sxth.w	r3, r8
 8028476:	f104 0020 	add.w	r0, r4, #32
 802847a:	f7ff fe1b 	bl	80280b4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802847e:	6863      	ldr	r3, [r4, #4]
 8028480:	4607      	mov	r7, r0
 8028482:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8028484:	6803      	ldr	r3, [r0, #0]
 8028486:	691b      	ldr	r3, [r3, #16]
 8028488:	4798      	blx	r3
 802848a:	6830      	ldr	r0, [r6, #0]
 802848c:	6803      	ldr	r3, [r0, #0]
 802848e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8028490:	4798      	blx	r3
 8028492:	4638      	mov	r0, r7
 8028494:	b002      	add	sp, #8
 8028496:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802849a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802849e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80284a2:	2204      	movs	r2, #4
 80284a4:	fb91 f2f2 	sdiv	r2, r1, r2
 80284a8:	fb08 2303 	mla	r3, r8, r3, r2
 80284ac:	441f      	add	r7, r3
 80284ae:	424b      	negs	r3, r1
 80284b0:	f003 0303 	and.w	r3, r3, #3
 80284b4:	f001 0103 	and.w	r1, r1, #3
 80284b8:	e7d2      	b.n	8028460 <_ZN8touchgfx6Canvas6renderEh+0x98>
 80284ba:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80284be:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80284c2:	2900      	cmp	r1, #0
 80284c4:	f04f 0202 	mov.w	r2, #2
 80284c8:	fb91 f2f2 	sdiv	r2, r1, r2
 80284cc:	f001 0101 	and.w	r1, r1, #1
 80284d0:	fb08 2303 	mla	r3, r8, r3, r2
 80284d4:	441f      	add	r7, r3
 80284d6:	bfb8      	it	lt
 80284d8:	4249      	neglt	r1, r1
 80284da:	e7c3      	b.n	8028464 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 80284dc:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80284e0:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80284e4:	fb08 f303 	mul.w	r3, r8, r3
 80284e8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80284ec:	441f      	add	r7, r3
 80284ee:	2100      	movs	r1, #0
 80284f0:	e7b9      	b.n	8028466 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 80284f2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80284f6:	fb08 f203 	mul.w	r2, r8, r3
 80284fa:	8b23      	ldrh	r3, [r4, #24]
 80284fc:	2103      	movs	r1, #3
 80284fe:	fb13 2301 	smlabb	r3, r3, r1, r2
 8028502:	e7f3      	b.n	80284ec <_ZN8touchgfx6Canvas6renderEh+0x124>
 8028504:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8028508:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802850c:	fb08 2303 	mla	r3, r8, r3, r2
 8028510:	e7ec      	b.n	80284ec <_ZN8touchgfx6Canvas6renderEh+0x124>
 8028512:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8028516:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802851a:	fb08 f303 	mul.w	r3, r8, r3
 802851e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8028522:	e7e3      	b.n	80284ec <_ZN8touchgfx6Canvas6renderEh+0x124>
 8028524:	2701      	movs	r7, #1
 8028526:	e7b4      	b.n	8028492 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8028528:	2000e1c0 	.word	0x2000e1c0

0802852c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802852c:	b510      	push	{r4, lr}
 802852e:	4b07      	ldr	r3, [pc, #28]	; (802854c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8028530:	781b      	ldrb	r3, [r3, #0]
 8028532:	2b01      	cmp	r3, #1
 8028534:	d108      	bne.n	8028548 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8028536:	6843      	ldr	r3, [r0, #4]
 8028538:	6814      	ldr	r4, [r2, #0]
 802853a:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802853e:	680b      	ldr	r3, [r1, #0]
 8028540:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8028544:	6013      	str	r3, [r2, #0]
 8028546:	600c      	str	r4, [r1, #0]
 8028548:	bd10      	pop	{r4, pc}
 802854a:	bf00      	nop
 802854c:	2000e1b8 	.word	0x2000e1b8

08028550 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8028550:	b513      	push	{r0, r1, r4, lr}
 8028552:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8028556:	4604      	mov	r4, r0
 8028558:	e9cd 2100 	strd	r2, r1, [sp]
 802855c:	b9a3      	cbnz	r3, 8028588 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802855e:	466a      	mov	r2, sp
 8028560:	a901      	add	r1, sp, #4
 8028562:	4620      	mov	r0, r4
 8028564:	f7ff ffe2 	bl	802852c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8028568:	68a3      	ldr	r3, [r4, #8]
 802856a:	9901      	ldr	r1, [sp, #4]
 802856c:	9a00      	ldr	r2, [sp, #0]
 802856e:	1ac9      	subs	r1, r1, r3
 8028570:	68e3      	ldr	r3, [r4, #12]
 8028572:	9101      	str	r1, [sp, #4]
 8028574:	1ad2      	subs	r2, r2, r3
 8028576:	2a00      	cmp	r2, #0
 8028578:	9200      	str	r2, [sp, #0]
 802857a:	da0b      	bge.n	8028594 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 802857c:	2301      	movs	r3, #1
 802857e:	2900      	cmp	r1, #0
 8028580:	da0e      	bge.n	80285a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8028582:	f043 0304 	orr.w	r3, r3, #4
 8028586:	e013      	b.n	80285b0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8028588:	f7ff fefc 	bl	8028384 <_ZN8touchgfx6Canvas5closeEv>
 802858c:	2800      	cmp	r0, #0
 802858e:	d1e6      	bne.n	802855e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8028590:	b002      	add	sp, #8
 8028592:	bd10      	pop	{r4, pc}
 8028594:	6963      	ldr	r3, [r4, #20]
 8028596:	429a      	cmp	r2, r3
 8028598:	bfac      	ite	ge
 802859a:	2302      	movge	r3, #2
 802859c:	2300      	movlt	r3, #0
 802859e:	e7ee      	b.n	802857e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 80285a0:	6920      	ldr	r0, [r4, #16]
 80285a2:	4281      	cmp	r1, r0
 80285a4:	bfac      	ite	ge
 80285a6:	2008      	movge	r0, #8
 80285a8:	2000      	movlt	r0, #0
 80285aa:	4318      	orrs	r0, r3
 80285ac:	b2c3      	uxtb	r3, r0
 80285ae:	b158      	cbz	r0, 80285c8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 80285b0:	2200      	movs	r2, #0
 80285b2:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 80285b6:	9901      	ldr	r1, [sp, #4]
 80285b8:	9a00      	ldr	r2, [sp, #0]
 80285ba:	66a1      	str	r1, [r4, #104]	; 0x68
 80285bc:	66e2      	str	r2, [r4, #108]	; 0x6c
 80285be:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 80285c2:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80285c6:	e7e3      	b.n	8028590 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80285c8:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80285cc:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80285d0:	4298      	cmp	r0, r3
 80285d2:	d803      	bhi.n	80285dc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80285d4:	f104 0020 	add.w	r0, r4, #32
 80285d8:	f7ed f8da 	bl	8015790 <_ZN8touchgfx7Outline6moveToEii>
 80285dc:	2301      	movs	r3, #1
 80285de:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80285e2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80285e6:	2300      	movs	r3, #0
 80285e8:	e7e5      	b.n	80285b6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080285ea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80285ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80285ec:	ab02      	add	r3, sp, #8
 80285ee:	4604      	mov	r4, r0
 80285f0:	f843 2d08 	str.w	r2, [r3, #-8]!
 80285f4:	9101      	str	r1, [sp, #4]
 80285f6:	461a      	mov	r2, r3
 80285f8:	a901      	add	r1, sp, #4
 80285fa:	f7ff ff97 	bl	802852c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80285fe:	68a3      	ldr	r3, [r4, #8]
 8028600:	9901      	ldr	r1, [sp, #4]
 8028602:	9a00      	ldr	r2, [sp, #0]
 8028604:	1ac9      	subs	r1, r1, r3
 8028606:	68e3      	ldr	r3, [r4, #12]
 8028608:	9101      	str	r1, [sp, #4]
 802860a:	1ad2      	subs	r2, r2, r3
 802860c:	2a00      	cmp	r2, #0
 802860e:	9200      	str	r2, [sp, #0]
 8028610:	db1c      	blt.n	802864c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8028612:	6963      	ldr	r3, [r4, #20]
 8028614:	429a      	cmp	r2, r3
 8028616:	bfac      	ite	ge
 8028618:	2002      	movge	r0, #2
 802861a:	2000      	movlt	r0, #0
 802861c:	2900      	cmp	r1, #0
 802861e:	db17      	blt.n	8028650 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8028620:	6923      	ldr	r3, [r4, #16]
 8028622:	4299      	cmp	r1, r3
 8028624:	bfac      	ite	ge
 8028626:	2308      	movge	r3, #8
 8028628:	2300      	movlt	r3, #0
 802862a:	4303      	orrs	r3, r0
 802862c:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8028630:	b2dd      	uxtb	r5, r3
 8028632:	b978      	cbnz	r0, 8028654 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8028634:	f104 0020 	add.w	r0, r4, #32
 8028638:	f7ff fd30 	bl	802809c <_ZN8touchgfx10Rasterizer6lineToEii>
 802863c:	9b01      	ldr	r3, [sp, #4]
 802863e:	65e3      	str	r3, [r4, #92]	; 0x5c
 8028640:	9b00      	ldr	r3, [sp, #0]
 8028642:	6623      	str	r3, [r4, #96]	; 0x60
 8028644:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8028648:	b002      	add	sp, #8
 802864a:	bd70      	pop	{r4, r5, r6, pc}
 802864c:	2001      	movs	r0, #1
 802864e:	e7e5      	b.n	802861c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8028650:	2304      	movs	r3, #4
 8028652:	e7ea      	b.n	802862a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8028654:	b113      	cbz	r3, 802865c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8028656:	ea10 0305 	ands.w	r3, r0, r5
 802865a:	d11c      	bne.n	8028696 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802865c:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8028660:	f104 0620 	add.w	r6, r4, #32
 8028664:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8028668:	b98b      	cbnz	r3, 802868e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802866a:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802866e:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8028672:	4298      	cmp	r0, r3
 8028674:	d802      	bhi.n	802867c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8028676:	4630      	mov	r0, r6
 8028678:	f7ed f88a 	bl	8015790 <_ZN8touchgfx7Outline6moveToEii>
 802867c:	2301      	movs	r3, #1
 802867e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8028682:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8028686:	e9dd 2100 	ldrd	r2, r1, [sp]
 802868a:	4630      	mov	r0, r6
 802868c:	e7d4      	b.n	8028638 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802868e:	4630      	mov	r0, r6
 8028690:	f7ff fd04 	bl	802809c <_ZN8touchgfx10Rasterizer6lineToEii>
 8028694:	e7f7      	b.n	8028686 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8028696:	461d      	mov	r5, r3
 8028698:	e7d0      	b.n	802863c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802869c <_ZN8touchgfx6CanvasD1Ev>:
 802869c:	b510      	push	{r4, lr}
 802869e:	4b04      	ldr	r3, [pc, #16]	; (80286b0 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 80286a0:	4604      	mov	r4, r0
 80286a2:	f840 3b20 	str.w	r3, [r0], #32
 80286a6:	f7ec fb6d 	bl	8014d84 <_ZN8touchgfx7OutlineD1Ev>
 80286aa:	4620      	mov	r0, r4
 80286ac:	bd10      	pop	{r4, pc}
 80286ae:	bf00      	nop
 80286b0:	0802d1d0 	.word	0x0802d1d0

080286b4 <_ZN8touchgfx6CanvasD0Ev>:
 80286b4:	b510      	push	{r4, lr}
 80286b6:	4604      	mov	r4, r0
 80286b8:	f7ff fff0 	bl	802869c <_ZN8touchgfx6CanvasD1Ev>
 80286bc:	4620      	mov	r0, r4
 80286be:	2170      	movs	r1, #112	; 0x70
 80286c0:	f000 f807 	bl	80286d2 <_ZdlPvj>
 80286c4:	4620      	mov	r0, r4
 80286c6:	bd10      	pop	{r4, pc}

080286c8 <__aeabi_atexit>:
 80286c8:	460b      	mov	r3, r1
 80286ca:	4601      	mov	r1, r0
 80286cc:	4618      	mov	r0, r3
 80286ce:	f000 bb31 	b.w	8028d34 <__cxa_atexit>

080286d2 <_ZdlPvj>:
 80286d2:	f000 b812 	b.w	80286fa <_ZdlPv>

080286d6 <__cxa_guard_acquire>:
 80286d6:	6803      	ldr	r3, [r0, #0]
 80286d8:	07db      	lsls	r3, r3, #31
 80286da:	d406      	bmi.n	80286ea <__cxa_guard_acquire+0x14>
 80286dc:	7843      	ldrb	r3, [r0, #1]
 80286de:	b103      	cbz	r3, 80286e2 <__cxa_guard_acquire+0xc>
 80286e0:	deff      	udf	#255	; 0xff
 80286e2:	2301      	movs	r3, #1
 80286e4:	7043      	strb	r3, [r0, #1]
 80286e6:	4618      	mov	r0, r3
 80286e8:	4770      	bx	lr
 80286ea:	2000      	movs	r0, #0
 80286ec:	4770      	bx	lr

080286ee <__cxa_guard_release>:
 80286ee:	2301      	movs	r3, #1
 80286f0:	6003      	str	r3, [r0, #0]
 80286f2:	4770      	bx	lr

080286f4 <__cxa_pure_virtual>:
 80286f4:	b508      	push	{r3, lr}
 80286f6:	f000 f80f 	bl	8028718 <_ZSt9terminatev>

080286fa <_ZdlPv>:
 80286fa:	f000 b857 	b.w	80287ac <free>

080286fe <_ZN10__cxxabiv111__terminateEPFvvE>:
 80286fe:	b508      	push	{r3, lr}
 8028700:	4780      	blx	r0
 8028702:	f000 f80e 	bl	8028722 <abort>
	...

08028708 <_ZSt13get_terminatev>:
 8028708:	4b02      	ldr	r3, [pc, #8]	; (8028714 <_ZSt13get_terminatev+0xc>)
 802870a:	6818      	ldr	r0, [r3, #0]
 802870c:	f3bf 8f5b 	dmb	ish
 8028710:	4770      	bx	lr
 8028712:	bf00      	nop
 8028714:	200000d4 	.word	0x200000d4

08028718 <_ZSt9terminatev>:
 8028718:	b508      	push	{r3, lr}
 802871a:	f7ff fff5 	bl	8028708 <_ZSt13get_terminatev>
 802871e:	f7ff ffee 	bl	80286fe <_ZN10__cxxabiv111__terminateEPFvvE>

08028722 <abort>:
 8028722:	b508      	push	{r3, lr}
 8028724:	2006      	movs	r0, #6
 8028726:	f000 faad 	bl	8028c84 <raise>
 802872a:	2001      	movs	r0, #1
 802872c:	f7d9 ff00 	bl	8002530 <_exit>

08028730 <__assert_func>:
 8028730:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8028732:	4614      	mov	r4, r2
 8028734:	461a      	mov	r2, r3
 8028736:	4b09      	ldr	r3, [pc, #36]	; (802875c <__assert_func+0x2c>)
 8028738:	681b      	ldr	r3, [r3, #0]
 802873a:	4605      	mov	r5, r0
 802873c:	68d8      	ldr	r0, [r3, #12]
 802873e:	b14c      	cbz	r4, 8028754 <__assert_func+0x24>
 8028740:	4b07      	ldr	r3, [pc, #28]	; (8028760 <__assert_func+0x30>)
 8028742:	9100      	str	r1, [sp, #0]
 8028744:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8028748:	4906      	ldr	r1, [pc, #24]	; (8028764 <__assert_func+0x34>)
 802874a:	462b      	mov	r3, r5
 802874c:	f000 f994 	bl	8028a78 <fiprintf>
 8028750:	f7ff ffe7 	bl	8028722 <abort>
 8028754:	4b04      	ldr	r3, [pc, #16]	; (8028768 <__assert_func+0x38>)
 8028756:	461c      	mov	r4, r3
 8028758:	e7f3      	b.n	8028742 <__assert_func+0x12>
 802875a:	bf00      	nop
 802875c:	20000130 	.word	0x20000130
 8028760:	0802d1dc 	.word	0x0802d1dc
 8028764:	0802d1e9 	.word	0x0802d1e9
 8028768:	0802d217 	.word	0x0802d217

0802876c <atexit>:
 802876c:	2300      	movs	r3, #0
 802876e:	4601      	mov	r1, r0
 8028770:	461a      	mov	r2, r3
 8028772:	4618      	mov	r0, r3
 8028774:	f000 bb02 	b.w	8028d7c <__register_exitproc>

08028778 <exit>:
 8028778:	b508      	push	{r3, lr}
 802877a:	4b06      	ldr	r3, [pc, #24]	; (8028794 <exit+0x1c>)
 802877c:	4604      	mov	r4, r0
 802877e:	b113      	cbz	r3, 8028786 <exit+0xe>
 8028780:	2100      	movs	r1, #0
 8028782:	f000 fb59 	bl	8028e38 <__call_exitprocs>
 8028786:	4b04      	ldr	r3, [pc, #16]	; (8028798 <exit+0x20>)
 8028788:	681b      	ldr	r3, [r3, #0]
 802878a:	b103      	cbz	r3, 802878e <exit+0x16>
 802878c:	4798      	blx	r3
 802878e:	4620      	mov	r0, r4
 8028790:	f7d9 fece 	bl	8002530 <_exit>
 8028794:	08028e39 	.word	0x08028e39
 8028798:	2000ec54 	.word	0x2000ec54

0802879c <malloc>:
 802879c:	4b02      	ldr	r3, [pc, #8]	; (80287a8 <malloc+0xc>)
 802879e:	4601      	mov	r1, r0
 80287a0:	6818      	ldr	r0, [r3, #0]
 80287a2:	f000 b82b 	b.w	80287fc <_malloc_r>
 80287a6:	bf00      	nop
 80287a8:	20000130 	.word	0x20000130

080287ac <free>:
 80287ac:	4b02      	ldr	r3, [pc, #8]	; (80287b8 <free+0xc>)
 80287ae:	4601      	mov	r1, r0
 80287b0:	6818      	ldr	r0, [r3, #0]
 80287b2:	f000 bb9d 	b.w	8028ef0 <_free_r>
 80287b6:	bf00      	nop
 80287b8:	20000130 	.word	0x20000130

080287bc <sbrk_aligned>:
 80287bc:	b570      	push	{r4, r5, r6, lr}
 80287be:	4e0e      	ldr	r6, [pc, #56]	; (80287f8 <sbrk_aligned+0x3c>)
 80287c0:	460c      	mov	r4, r1
 80287c2:	6831      	ldr	r1, [r6, #0]
 80287c4:	4605      	mov	r5, r0
 80287c6:	b911      	cbnz	r1, 80287ce <sbrk_aligned+0x12>
 80287c8:	f000 fa78 	bl	8028cbc <_sbrk_r>
 80287cc:	6030      	str	r0, [r6, #0]
 80287ce:	4621      	mov	r1, r4
 80287d0:	4628      	mov	r0, r5
 80287d2:	f000 fa73 	bl	8028cbc <_sbrk_r>
 80287d6:	1c43      	adds	r3, r0, #1
 80287d8:	d00a      	beq.n	80287f0 <sbrk_aligned+0x34>
 80287da:	1cc4      	adds	r4, r0, #3
 80287dc:	f024 0403 	bic.w	r4, r4, #3
 80287e0:	42a0      	cmp	r0, r4
 80287e2:	d007      	beq.n	80287f4 <sbrk_aligned+0x38>
 80287e4:	1a21      	subs	r1, r4, r0
 80287e6:	4628      	mov	r0, r5
 80287e8:	f000 fa68 	bl	8028cbc <_sbrk_r>
 80287ec:	3001      	adds	r0, #1
 80287ee:	d101      	bne.n	80287f4 <sbrk_aligned+0x38>
 80287f0:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80287f4:	4620      	mov	r0, r4
 80287f6:	bd70      	pop	{r4, r5, r6, pc}
 80287f8:	2000eb18 	.word	0x2000eb18

080287fc <_malloc_r>:
 80287fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8028800:	1ccd      	adds	r5, r1, #3
 8028802:	f025 0503 	bic.w	r5, r5, #3
 8028806:	3508      	adds	r5, #8
 8028808:	2d0c      	cmp	r5, #12
 802880a:	bf38      	it	cc
 802880c:	250c      	movcc	r5, #12
 802880e:	2d00      	cmp	r5, #0
 8028810:	4607      	mov	r7, r0
 8028812:	db01      	blt.n	8028818 <_malloc_r+0x1c>
 8028814:	42a9      	cmp	r1, r5
 8028816:	d905      	bls.n	8028824 <_malloc_r+0x28>
 8028818:	230c      	movs	r3, #12
 802881a:	603b      	str	r3, [r7, #0]
 802881c:	2600      	movs	r6, #0
 802881e:	4630      	mov	r0, r6
 8028820:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8028824:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80288f8 <_malloc_r+0xfc>
 8028828:	f000 f868 	bl	80288fc <__malloc_lock>
 802882c:	f8d8 3000 	ldr.w	r3, [r8]
 8028830:	461c      	mov	r4, r3
 8028832:	bb5c      	cbnz	r4, 802888c <_malloc_r+0x90>
 8028834:	4629      	mov	r1, r5
 8028836:	4638      	mov	r0, r7
 8028838:	f7ff ffc0 	bl	80287bc <sbrk_aligned>
 802883c:	1c43      	adds	r3, r0, #1
 802883e:	4604      	mov	r4, r0
 8028840:	d155      	bne.n	80288ee <_malloc_r+0xf2>
 8028842:	f8d8 4000 	ldr.w	r4, [r8]
 8028846:	4626      	mov	r6, r4
 8028848:	2e00      	cmp	r6, #0
 802884a:	d145      	bne.n	80288d8 <_malloc_r+0xdc>
 802884c:	2c00      	cmp	r4, #0
 802884e:	d048      	beq.n	80288e2 <_malloc_r+0xe6>
 8028850:	6823      	ldr	r3, [r4, #0]
 8028852:	4631      	mov	r1, r6
 8028854:	4638      	mov	r0, r7
 8028856:	eb04 0903 	add.w	r9, r4, r3
 802885a:	f000 fa2f 	bl	8028cbc <_sbrk_r>
 802885e:	4581      	cmp	r9, r0
 8028860:	d13f      	bne.n	80288e2 <_malloc_r+0xe6>
 8028862:	6821      	ldr	r1, [r4, #0]
 8028864:	1a6d      	subs	r5, r5, r1
 8028866:	4629      	mov	r1, r5
 8028868:	4638      	mov	r0, r7
 802886a:	f7ff ffa7 	bl	80287bc <sbrk_aligned>
 802886e:	3001      	adds	r0, #1
 8028870:	d037      	beq.n	80288e2 <_malloc_r+0xe6>
 8028872:	6823      	ldr	r3, [r4, #0]
 8028874:	442b      	add	r3, r5
 8028876:	6023      	str	r3, [r4, #0]
 8028878:	f8d8 3000 	ldr.w	r3, [r8]
 802887c:	2b00      	cmp	r3, #0
 802887e:	d038      	beq.n	80288f2 <_malloc_r+0xf6>
 8028880:	685a      	ldr	r2, [r3, #4]
 8028882:	42a2      	cmp	r2, r4
 8028884:	d12b      	bne.n	80288de <_malloc_r+0xe2>
 8028886:	2200      	movs	r2, #0
 8028888:	605a      	str	r2, [r3, #4]
 802888a:	e00f      	b.n	80288ac <_malloc_r+0xb0>
 802888c:	6822      	ldr	r2, [r4, #0]
 802888e:	1b52      	subs	r2, r2, r5
 8028890:	d41f      	bmi.n	80288d2 <_malloc_r+0xd6>
 8028892:	2a0b      	cmp	r2, #11
 8028894:	d917      	bls.n	80288c6 <_malloc_r+0xca>
 8028896:	1961      	adds	r1, r4, r5
 8028898:	42a3      	cmp	r3, r4
 802889a:	6025      	str	r5, [r4, #0]
 802889c:	bf18      	it	ne
 802889e:	6059      	strne	r1, [r3, #4]
 80288a0:	6863      	ldr	r3, [r4, #4]
 80288a2:	bf08      	it	eq
 80288a4:	f8c8 1000 	streq.w	r1, [r8]
 80288a8:	5162      	str	r2, [r4, r5]
 80288aa:	604b      	str	r3, [r1, #4]
 80288ac:	4638      	mov	r0, r7
 80288ae:	f104 060b 	add.w	r6, r4, #11
 80288b2:	f000 f829 	bl	8028908 <__malloc_unlock>
 80288b6:	f026 0607 	bic.w	r6, r6, #7
 80288ba:	1d23      	adds	r3, r4, #4
 80288bc:	1af2      	subs	r2, r6, r3
 80288be:	d0ae      	beq.n	802881e <_malloc_r+0x22>
 80288c0:	1b9b      	subs	r3, r3, r6
 80288c2:	50a3      	str	r3, [r4, r2]
 80288c4:	e7ab      	b.n	802881e <_malloc_r+0x22>
 80288c6:	42a3      	cmp	r3, r4
 80288c8:	6862      	ldr	r2, [r4, #4]
 80288ca:	d1dd      	bne.n	8028888 <_malloc_r+0x8c>
 80288cc:	f8c8 2000 	str.w	r2, [r8]
 80288d0:	e7ec      	b.n	80288ac <_malloc_r+0xb0>
 80288d2:	4623      	mov	r3, r4
 80288d4:	6864      	ldr	r4, [r4, #4]
 80288d6:	e7ac      	b.n	8028832 <_malloc_r+0x36>
 80288d8:	4634      	mov	r4, r6
 80288da:	6876      	ldr	r6, [r6, #4]
 80288dc:	e7b4      	b.n	8028848 <_malloc_r+0x4c>
 80288de:	4613      	mov	r3, r2
 80288e0:	e7cc      	b.n	802887c <_malloc_r+0x80>
 80288e2:	230c      	movs	r3, #12
 80288e4:	603b      	str	r3, [r7, #0]
 80288e6:	4638      	mov	r0, r7
 80288e8:	f000 f80e 	bl	8028908 <__malloc_unlock>
 80288ec:	e797      	b.n	802881e <_malloc_r+0x22>
 80288ee:	6025      	str	r5, [r4, #0]
 80288f0:	e7dc      	b.n	80288ac <_malloc_r+0xb0>
 80288f2:	605b      	str	r3, [r3, #4]
 80288f4:	deff      	udf	#255	; 0xff
 80288f6:	bf00      	nop
 80288f8:	2000eb14 	.word	0x2000eb14

080288fc <__malloc_lock>:
 80288fc:	4801      	ldr	r0, [pc, #4]	; (8028904 <__malloc_lock+0x8>)
 80288fe:	f000 ba17 	b.w	8028d30 <__retarget_lock_acquire_recursive>
 8028902:	bf00      	nop
 8028904:	2000ec59 	.word	0x2000ec59

08028908 <__malloc_unlock>:
 8028908:	4801      	ldr	r0, [pc, #4]	; (8028910 <__malloc_unlock+0x8>)
 802890a:	f000 ba12 	b.w	8028d32 <__retarget_lock_release_recursive>
 802890e:	bf00      	nop
 8028910:	2000ec59 	.word	0x2000ec59

08028914 <siprintf>:
 8028914:	b40e      	push	{r1, r2, r3}
 8028916:	b500      	push	{lr}
 8028918:	b09c      	sub	sp, #112	; 0x70
 802891a:	ab1d      	add	r3, sp, #116	; 0x74
 802891c:	9002      	str	r0, [sp, #8]
 802891e:	9006      	str	r0, [sp, #24]
 8028920:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8028924:	4809      	ldr	r0, [pc, #36]	; (802894c <siprintf+0x38>)
 8028926:	9107      	str	r1, [sp, #28]
 8028928:	9104      	str	r1, [sp, #16]
 802892a:	4909      	ldr	r1, [pc, #36]	; (8028950 <siprintf+0x3c>)
 802892c:	f853 2b04 	ldr.w	r2, [r3], #4
 8028930:	9105      	str	r1, [sp, #20]
 8028932:	6800      	ldr	r0, [r0, #0]
 8028934:	9301      	str	r3, [sp, #4]
 8028936:	a902      	add	r1, sp, #8
 8028938:	f000 fb80 	bl	802903c <_svfiprintf_r>
 802893c:	9b02      	ldr	r3, [sp, #8]
 802893e:	2200      	movs	r2, #0
 8028940:	701a      	strb	r2, [r3, #0]
 8028942:	b01c      	add	sp, #112	; 0x70
 8028944:	f85d eb04 	ldr.w	lr, [sp], #4
 8028948:	b003      	add	sp, #12
 802894a:	4770      	bx	lr
 802894c:	20000130 	.word	0x20000130
 8028950:	ffff0208 	.word	0xffff0208

08028954 <std>:
 8028954:	2300      	movs	r3, #0
 8028956:	b510      	push	{r4, lr}
 8028958:	4604      	mov	r4, r0
 802895a:	e9c0 3300 	strd	r3, r3, [r0]
 802895e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8028962:	6083      	str	r3, [r0, #8]
 8028964:	8181      	strh	r1, [r0, #12]
 8028966:	6643      	str	r3, [r0, #100]	; 0x64
 8028968:	81c2      	strh	r2, [r0, #14]
 802896a:	6183      	str	r3, [r0, #24]
 802896c:	4619      	mov	r1, r3
 802896e:	2208      	movs	r2, #8
 8028970:	305c      	adds	r0, #92	; 0x5c
 8028972:	f000 f957 	bl	8028c24 <memset>
 8028976:	4b05      	ldr	r3, [pc, #20]	; (802898c <std+0x38>)
 8028978:	6263      	str	r3, [r4, #36]	; 0x24
 802897a:	4b05      	ldr	r3, [pc, #20]	; (8028990 <std+0x3c>)
 802897c:	62a3      	str	r3, [r4, #40]	; 0x28
 802897e:	4b05      	ldr	r3, [pc, #20]	; (8028994 <std+0x40>)
 8028980:	62e3      	str	r3, [r4, #44]	; 0x2c
 8028982:	4b05      	ldr	r3, [pc, #20]	; (8028998 <std+0x44>)
 8028984:	6224      	str	r4, [r4, #32]
 8028986:	6323      	str	r3, [r4, #48]	; 0x30
 8028988:	bd10      	pop	{r4, pc}
 802898a:	bf00      	nop
 802898c:	0802993d 	.word	0x0802993d
 8028990:	0802995f 	.word	0x0802995f
 8028994:	08029997 	.word	0x08029997
 8028998:	080299bb 	.word	0x080299bb

0802899c <stdio_exit_handler>:
 802899c:	4a02      	ldr	r2, [pc, #8]	; (80289a8 <stdio_exit_handler+0xc>)
 802899e:	4903      	ldr	r1, [pc, #12]	; (80289ac <stdio_exit_handler+0x10>)
 80289a0:	4803      	ldr	r0, [pc, #12]	; (80289b0 <stdio_exit_handler+0x14>)
 80289a2:	f000 b87b 	b.w	8028a9c <_fwalk_sglue>
 80289a6:	bf00      	nop
 80289a8:	200000d8 	.word	0x200000d8
 80289ac:	080298ed 	.word	0x080298ed
 80289b0:	200000e4 	.word	0x200000e4

080289b4 <cleanup_stdio>:
 80289b4:	6841      	ldr	r1, [r0, #4]
 80289b6:	4b0c      	ldr	r3, [pc, #48]	; (80289e8 <cleanup_stdio+0x34>)
 80289b8:	4299      	cmp	r1, r3
 80289ba:	b510      	push	{r4, lr}
 80289bc:	4604      	mov	r4, r0
 80289be:	d001      	beq.n	80289c4 <cleanup_stdio+0x10>
 80289c0:	f000 ff94 	bl	80298ec <_fflush_r>
 80289c4:	68a1      	ldr	r1, [r4, #8]
 80289c6:	4b09      	ldr	r3, [pc, #36]	; (80289ec <cleanup_stdio+0x38>)
 80289c8:	4299      	cmp	r1, r3
 80289ca:	d002      	beq.n	80289d2 <cleanup_stdio+0x1e>
 80289cc:	4620      	mov	r0, r4
 80289ce:	f000 ff8d 	bl	80298ec <_fflush_r>
 80289d2:	68e1      	ldr	r1, [r4, #12]
 80289d4:	4b06      	ldr	r3, [pc, #24]	; (80289f0 <cleanup_stdio+0x3c>)
 80289d6:	4299      	cmp	r1, r3
 80289d8:	d004      	beq.n	80289e4 <cleanup_stdio+0x30>
 80289da:	4620      	mov	r0, r4
 80289dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80289e0:	f000 bf84 	b.w	80298ec <_fflush_r>
 80289e4:	bd10      	pop	{r4, pc}
 80289e6:	bf00      	nop
 80289e8:	2000eb1c 	.word	0x2000eb1c
 80289ec:	2000eb84 	.word	0x2000eb84
 80289f0:	2000ebec 	.word	0x2000ebec

080289f4 <global_stdio_init.part.0>:
 80289f4:	b510      	push	{r4, lr}
 80289f6:	4b0b      	ldr	r3, [pc, #44]	; (8028a24 <global_stdio_init.part.0+0x30>)
 80289f8:	4c0b      	ldr	r4, [pc, #44]	; (8028a28 <global_stdio_init.part.0+0x34>)
 80289fa:	4a0c      	ldr	r2, [pc, #48]	; (8028a2c <global_stdio_init.part.0+0x38>)
 80289fc:	601a      	str	r2, [r3, #0]
 80289fe:	4620      	mov	r0, r4
 8028a00:	2200      	movs	r2, #0
 8028a02:	2104      	movs	r1, #4
 8028a04:	f7ff ffa6 	bl	8028954 <std>
 8028a08:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8028a0c:	2201      	movs	r2, #1
 8028a0e:	2109      	movs	r1, #9
 8028a10:	f7ff ffa0 	bl	8028954 <std>
 8028a14:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8028a18:	2202      	movs	r2, #2
 8028a1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028a1e:	2112      	movs	r1, #18
 8028a20:	f7ff bf98 	b.w	8028954 <std>
 8028a24:	2000ec54 	.word	0x2000ec54
 8028a28:	2000eb1c 	.word	0x2000eb1c
 8028a2c:	0802899d 	.word	0x0802899d

08028a30 <__sfp_lock_acquire>:
 8028a30:	4801      	ldr	r0, [pc, #4]	; (8028a38 <__sfp_lock_acquire+0x8>)
 8028a32:	f000 b97d 	b.w	8028d30 <__retarget_lock_acquire_recursive>
 8028a36:	bf00      	nop
 8028a38:	2000ec5a 	.word	0x2000ec5a

08028a3c <__sfp_lock_release>:
 8028a3c:	4801      	ldr	r0, [pc, #4]	; (8028a44 <__sfp_lock_release+0x8>)
 8028a3e:	f000 b978 	b.w	8028d32 <__retarget_lock_release_recursive>
 8028a42:	bf00      	nop
 8028a44:	2000ec5a 	.word	0x2000ec5a

08028a48 <__sinit>:
 8028a48:	b510      	push	{r4, lr}
 8028a4a:	4604      	mov	r4, r0
 8028a4c:	f7ff fff0 	bl	8028a30 <__sfp_lock_acquire>
 8028a50:	6a23      	ldr	r3, [r4, #32]
 8028a52:	b11b      	cbz	r3, 8028a5c <__sinit+0x14>
 8028a54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028a58:	f7ff bff0 	b.w	8028a3c <__sfp_lock_release>
 8028a5c:	4b04      	ldr	r3, [pc, #16]	; (8028a70 <__sinit+0x28>)
 8028a5e:	6223      	str	r3, [r4, #32]
 8028a60:	4b04      	ldr	r3, [pc, #16]	; (8028a74 <__sinit+0x2c>)
 8028a62:	681b      	ldr	r3, [r3, #0]
 8028a64:	2b00      	cmp	r3, #0
 8028a66:	d1f5      	bne.n	8028a54 <__sinit+0xc>
 8028a68:	f7ff ffc4 	bl	80289f4 <global_stdio_init.part.0>
 8028a6c:	e7f2      	b.n	8028a54 <__sinit+0xc>
 8028a6e:	bf00      	nop
 8028a70:	080289b5 	.word	0x080289b5
 8028a74:	2000ec54 	.word	0x2000ec54

08028a78 <fiprintf>:
 8028a78:	b40e      	push	{r1, r2, r3}
 8028a7a:	b503      	push	{r0, r1, lr}
 8028a7c:	4601      	mov	r1, r0
 8028a7e:	ab03      	add	r3, sp, #12
 8028a80:	4805      	ldr	r0, [pc, #20]	; (8028a98 <fiprintf+0x20>)
 8028a82:	f853 2b04 	ldr.w	r2, [r3], #4
 8028a86:	6800      	ldr	r0, [r0, #0]
 8028a88:	9301      	str	r3, [sp, #4]
 8028a8a:	f000 fbff 	bl	802928c <_vfiprintf_r>
 8028a8e:	b002      	add	sp, #8
 8028a90:	f85d eb04 	ldr.w	lr, [sp], #4
 8028a94:	b003      	add	sp, #12
 8028a96:	4770      	bx	lr
 8028a98:	20000130 	.word	0x20000130

08028a9c <_fwalk_sglue>:
 8028a9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8028aa0:	4607      	mov	r7, r0
 8028aa2:	4688      	mov	r8, r1
 8028aa4:	4614      	mov	r4, r2
 8028aa6:	2600      	movs	r6, #0
 8028aa8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8028aac:	f1b9 0901 	subs.w	r9, r9, #1
 8028ab0:	d505      	bpl.n	8028abe <_fwalk_sglue+0x22>
 8028ab2:	6824      	ldr	r4, [r4, #0]
 8028ab4:	2c00      	cmp	r4, #0
 8028ab6:	d1f7      	bne.n	8028aa8 <_fwalk_sglue+0xc>
 8028ab8:	4630      	mov	r0, r6
 8028aba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8028abe:	89ab      	ldrh	r3, [r5, #12]
 8028ac0:	2b01      	cmp	r3, #1
 8028ac2:	d907      	bls.n	8028ad4 <_fwalk_sglue+0x38>
 8028ac4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8028ac8:	3301      	adds	r3, #1
 8028aca:	d003      	beq.n	8028ad4 <_fwalk_sglue+0x38>
 8028acc:	4629      	mov	r1, r5
 8028ace:	4638      	mov	r0, r7
 8028ad0:	47c0      	blx	r8
 8028ad2:	4306      	orrs	r6, r0
 8028ad4:	3568      	adds	r5, #104	; 0x68
 8028ad6:	e7e9      	b.n	8028aac <_fwalk_sglue+0x10>

08028ad8 <iprintf>:
 8028ad8:	b40f      	push	{r0, r1, r2, r3}
 8028ada:	b507      	push	{r0, r1, r2, lr}
 8028adc:	4906      	ldr	r1, [pc, #24]	; (8028af8 <iprintf+0x20>)
 8028ade:	ab04      	add	r3, sp, #16
 8028ae0:	6808      	ldr	r0, [r1, #0]
 8028ae2:	f853 2b04 	ldr.w	r2, [r3], #4
 8028ae6:	6881      	ldr	r1, [r0, #8]
 8028ae8:	9301      	str	r3, [sp, #4]
 8028aea:	f000 fbcf 	bl	802928c <_vfiprintf_r>
 8028aee:	b003      	add	sp, #12
 8028af0:	f85d eb04 	ldr.w	lr, [sp], #4
 8028af4:	b004      	add	sp, #16
 8028af6:	4770      	bx	lr
 8028af8:	20000130 	.word	0x20000130

08028afc <_puts_r>:
 8028afc:	6a03      	ldr	r3, [r0, #32]
 8028afe:	b570      	push	{r4, r5, r6, lr}
 8028b00:	6884      	ldr	r4, [r0, #8]
 8028b02:	4605      	mov	r5, r0
 8028b04:	460e      	mov	r6, r1
 8028b06:	b90b      	cbnz	r3, 8028b0c <_puts_r+0x10>
 8028b08:	f7ff ff9e 	bl	8028a48 <__sinit>
 8028b0c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8028b0e:	07db      	lsls	r3, r3, #31
 8028b10:	d405      	bmi.n	8028b1e <_puts_r+0x22>
 8028b12:	89a3      	ldrh	r3, [r4, #12]
 8028b14:	0598      	lsls	r0, r3, #22
 8028b16:	d402      	bmi.n	8028b1e <_puts_r+0x22>
 8028b18:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8028b1a:	f000 f909 	bl	8028d30 <__retarget_lock_acquire_recursive>
 8028b1e:	89a3      	ldrh	r3, [r4, #12]
 8028b20:	0719      	lsls	r1, r3, #28
 8028b22:	d513      	bpl.n	8028b4c <_puts_r+0x50>
 8028b24:	6923      	ldr	r3, [r4, #16]
 8028b26:	b18b      	cbz	r3, 8028b4c <_puts_r+0x50>
 8028b28:	3e01      	subs	r6, #1
 8028b2a:	68a3      	ldr	r3, [r4, #8]
 8028b2c:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8028b30:	3b01      	subs	r3, #1
 8028b32:	60a3      	str	r3, [r4, #8]
 8028b34:	b9e9      	cbnz	r1, 8028b72 <_puts_r+0x76>
 8028b36:	2b00      	cmp	r3, #0
 8028b38:	da2e      	bge.n	8028b98 <_puts_r+0x9c>
 8028b3a:	4622      	mov	r2, r4
 8028b3c:	210a      	movs	r1, #10
 8028b3e:	4628      	mov	r0, r5
 8028b40:	f000 ff6e 	bl	8029a20 <__swbuf_r>
 8028b44:	3001      	adds	r0, #1
 8028b46:	d007      	beq.n	8028b58 <_puts_r+0x5c>
 8028b48:	250a      	movs	r5, #10
 8028b4a:	e007      	b.n	8028b5c <_puts_r+0x60>
 8028b4c:	4621      	mov	r1, r4
 8028b4e:	4628      	mov	r0, r5
 8028b50:	f000 ffa4 	bl	8029a9c <__swsetup_r>
 8028b54:	2800      	cmp	r0, #0
 8028b56:	d0e7      	beq.n	8028b28 <_puts_r+0x2c>
 8028b58:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8028b5c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8028b5e:	07da      	lsls	r2, r3, #31
 8028b60:	d405      	bmi.n	8028b6e <_puts_r+0x72>
 8028b62:	89a3      	ldrh	r3, [r4, #12]
 8028b64:	059b      	lsls	r3, r3, #22
 8028b66:	d402      	bmi.n	8028b6e <_puts_r+0x72>
 8028b68:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8028b6a:	f000 f8e2 	bl	8028d32 <__retarget_lock_release_recursive>
 8028b6e:	4628      	mov	r0, r5
 8028b70:	bd70      	pop	{r4, r5, r6, pc}
 8028b72:	2b00      	cmp	r3, #0
 8028b74:	da04      	bge.n	8028b80 <_puts_r+0x84>
 8028b76:	69a2      	ldr	r2, [r4, #24]
 8028b78:	429a      	cmp	r2, r3
 8028b7a:	dc06      	bgt.n	8028b8a <_puts_r+0x8e>
 8028b7c:	290a      	cmp	r1, #10
 8028b7e:	d004      	beq.n	8028b8a <_puts_r+0x8e>
 8028b80:	6823      	ldr	r3, [r4, #0]
 8028b82:	1c5a      	adds	r2, r3, #1
 8028b84:	6022      	str	r2, [r4, #0]
 8028b86:	7019      	strb	r1, [r3, #0]
 8028b88:	e7cf      	b.n	8028b2a <_puts_r+0x2e>
 8028b8a:	4622      	mov	r2, r4
 8028b8c:	4628      	mov	r0, r5
 8028b8e:	f000 ff47 	bl	8029a20 <__swbuf_r>
 8028b92:	3001      	adds	r0, #1
 8028b94:	d1c9      	bne.n	8028b2a <_puts_r+0x2e>
 8028b96:	e7df      	b.n	8028b58 <_puts_r+0x5c>
 8028b98:	6823      	ldr	r3, [r4, #0]
 8028b9a:	250a      	movs	r5, #10
 8028b9c:	1c5a      	adds	r2, r3, #1
 8028b9e:	6022      	str	r2, [r4, #0]
 8028ba0:	701d      	strb	r5, [r3, #0]
 8028ba2:	e7db      	b.n	8028b5c <_puts_r+0x60>

08028ba4 <puts>:
 8028ba4:	4b02      	ldr	r3, [pc, #8]	; (8028bb0 <puts+0xc>)
 8028ba6:	4601      	mov	r1, r0
 8028ba8:	6818      	ldr	r0, [r3, #0]
 8028baa:	f7ff bfa7 	b.w	8028afc <_puts_r>
 8028bae:	bf00      	nop
 8028bb0:	20000130 	.word	0x20000130

08028bb4 <strcat>:
 8028bb4:	b510      	push	{r4, lr}
 8028bb6:	4602      	mov	r2, r0
 8028bb8:	7814      	ldrb	r4, [r2, #0]
 8028bba:	4613      	mov	r3, r2
 8028bbc:	3201      	adds	r2, #1
 8028bbe:	2c00      	cmp	r4, #0
 8028bc0:	d1fa      	bne.n	8028bb8 <strcat+0x4>
 8028bc2:	3b01      	subs	r3, #1
 8028bc4:	f811 2b01 	ldrb.w	r2, [r1], #1
 8028bc8:	f803 2f01 	strb.w	r2, [r3, #1]!
 8028bcc:	2a00      	cmp	r2, #0
 8028bce:	d1f9      	bne.n	8028bc4 <strcat+0x10>
 8028bd0:	bd10      	pop	{r4, pc}

08028bd2 <strncpy>:
 8028bd2:	b510      	push	{r4, lr}
 8028bd4:	3901      	subs	r1, #1
 8028bd6:	4603      	mov	r3, r0
 8028bd8:	b132      	cbz	r2, 8028be8 <strncpy+0x16>
 8028bda:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8028bde:	f803 4b01 	strb.w	r4, [r3], #1
 8028be2:	3a01      	subs	r2, #1
 8028be4:	2c00      	cmp	r4, #0
 8028be6:	d1f7      	bne.n	8028bd8 <strncpy+0x6>
 8028be8:	441a      	add	r2, r3
 8028bea:	2100      	movs	r1, #0
 8028bec:	4293      	cmp	r3, r2
 8028bee:	d100      	bne.n	8028bf2 <strncpy+0x20>
 8028bf0:	bd10      	pop	{r4, pc}
 8028bf2:	f803 1b01 	strb.w	r1, [r3], #1
 8028bf6:	e7f9      	b.n	8028bec <strncpy+0x1a>

08028bf8 <strstr>:
 8028bf8:	780a      	ldrb	r2, [r1, #0]
 8028bfa:	b570      	push	{r4, r5, r6, lr}
 8028bfc:	b96a      	cbnz	r2, 8028c1a <strstr+0x22>
 8028bfe:	bd70      	pop	{r4, r5, r6, pc}
 8028c00:	429a      	cmp	r2, r3
 8028c02:	d109      	bne.n	8028c18 <strstr+0x20>
 8028c04:	460c      	mov	r4, r1
 8028c06:	4605      	mov	r5, r0
 8028c08:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8028c0c:	2b00      	cmp	r3, #0
 8028c0e:	d0f6      	beq.n	8028bfe <strstr+0x6>
 8028c10:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 8028c14:	429e      	cmp	r6, r3
 8028c16:	d0f7      	beq.n	8028c08 <strstr+0x10>
 8028c18:	3001      	adds	r0, #1
 8028c1a:	7803      	ldrb	r3, [r0, #0]
 8028c1c:	2b00      	cmp	r3, #0
 8028c1e:	d1ef      	bne.n	8028c00 <strstr+0x8>
 8028c20:	4618      	mov	r0, r3
 8028c22:	e7ec      	b.n	8028bfe <strstr+0x6>

08028c24 <memset>:
 8028c24:	4402      	add	r2, r0
 8028c26:	4603      	mov	r3, r0
 8028c28:	4293      	cmp	r3, r2
 8028c2a:	d100      	bne.n	8028c2e <memset+0xa>
 8028c2c:	4770      	bx	lr
 8028c2e:	f803 1b01 	strb.w	r1, [r3], #1
 8028c32:	e7f9      	b.n	8028c28 <memset+0x4>

08028c34 <_raise_r>:
 8028c34:	291f      	cmp	r1, #31
 8028c36:	b538      	push	{r3, r4, r5, lr}
 8028c38:	4604      	mov	r4, r0
 8028c3a:	460d      	mov	r5, r1
 8028c3c:	d904      	bls.n	8028c48 <_raise_r+0x14>
 8028c3e:	2316      	movs	r3, #22
 8028c40:	6003      	str	r3, [r0, #0]
 8028c42:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8028c46:	bd38      	pop	{r3, r4, r5, pc}
 8028c48:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8028c4a:	b112      	cbz	r2, 8028c52 <_raise_r+0x1e>
 8028c4c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8028c50:	b94b      	cbnz	r3, 8028c66 <_raise_r+0x32>
 8028c52:	4620      	mov	r0, r4
 8028c54:	f000 f830 	bl	8028cb8 <_getpid_r>
 8028c58:	462a      	mov	r2, r5
 8028c5a:	4601      	mov	r1, r0
 8028c5c:	4620      	mov	r0, r4
 8028c5e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8028c62:	f000 b817 	b.w	8028c94 <_kill_r>
 8028c66:	2b01      	cmp	r3, #1
 8028c68:	d00a      	beq.n	8028c80 <_raise_r+0x4c>
 8028c6a:	1c59      	adds	r1, r3, #1
 8028c6c:	d103      	bne.n	8028c76 <_raise_r+0x42>
 8028c6e:	2316      	movs	r3, #22
 8028c70:	6003      	str	r3, [r0, #0]
 8028c72:	2001      	movs	r0, #1
 8028c74:	e7e7      	b.n	8028c46 <_raise_r+0x12>
 8028c76:	2400      	movs	r4, #0
 8028c78:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8028c7c:	4628      	mov	r0, r5
 8028c7e:	4798      	blx	r3
 8028c80:	2000      	movs	r0, #0
 8028c82:	e7e0      	b.n	8028c46 <_raise_r+0x12>

08028c84 <raise>:
 8028c84:	4b02      	ldr	r3, [pc, #8]	; (8028c90 <raise+0xc>)
 8028c86:	4601      	mov	r1, r0
 8028c88:	6818      	ldr	r0, [r3, #0]
 8028c8a:	f7ff bfd3 	b.w	8028c34 <_raise_r>
 8028c8e:	bf00      	nop
 8028c90:	20000130 	.word	0x20000130

08028c94 <_kill_r>:
 8028c94:	b538      	push	{r3, r4, r5, lr}
 8028c96:	4d07      	ldr	r5, [pc, #28]	; (8028cb4 <_kill_r+0x20>)
 8028c98:	2300      	movs	r3, #0
 8028c9a:	4604      	mov	r4, r0
 8028c9c:	4608      	mov	r0, r1
 8028c9e:	4611      	mov	r1, r2
 8028ca0:	602b      	str	r3, [r5, #0]
 8028ca2:	f7d9 fc35 	bl	8002510 <_kill>
 8028ca6:	1c43      	adds	r3, r0, #1
 8028ca8:	d102      	bne.n	8028cb0 <_kill_r+0x1c>
 8028caa:	682b      	ldr	r3, [r5, #0]
 8028cac:	b103      	cbz	r3, 8028cb0 <_kill_r+0x1c>
 8028cae:	6023      	str	r3, [r4, #0]
 8028cb0:	bd38      	pop	{r3, r4, r5, pc}
 8028cb2:	bf00      	nop
 8028cb4:	2000edf4 	.word	0x2000edf4

08028cb8 <_getpid_r>:
 8028cb8:	f7d9 bc22 	b.w	8002500 <_getpid>

08028cbc <_sbrk_r>:
 8028cbc:	b538      	push	{r3, r4, r5, lr}
 8028cbe:	4d06      	ldr	r5, [pc, #24]	; (8028cd8 <_sbrk_r+0x1c>)
 8028cc0:	2300      	movs	r3, #0
 8028cc2:	4604      	mov	r4, r0
 8028cc4:	4608      	mov	r0, r1
 8028cc6:	602b      	str	r3, [r5, #0]
 8028cc8:	f7d9 fc8e 	bl	80025e8 <_sbrk>
 8028ccc:	1c43      	adds	r3, r0, #1
 8028cce:	d102      	bne.n	8028cd6 <_sbrk_r+0x1a>
 8028cd0:	682b      	ldr	r3, [r5, #0]
 8028cd2:	b103      	cbz	r3, 8028cd6 <_sbrk_r+0x1a>
 8028cd4:	6023      	str	r3, [r4, #0]
 8028cd6:	bd38      	pop	{r3, r4, r5, pc}
 8028cd8:	2000edf4 	.word	0x2000edf4

08028cdc <__errno>:
 8028cdc:	4b01      	ldr	r3, [pc, #4]	; (8028ce4 <__errno+0x8>)
 8028cde:	6818      	ldr	r0, [r3, #0]
 8028ce0:	4770      	bx	lr
 8028ce2:	bf00      	nop
 8028ce4:	20000130 	.word	0x20000130

08028ce8 <__libc_init_array>:
 8028ce8:	b570      	push	{r4, r5, r6, lr}
 8028cea:	4d0d      	ldr	r5, [pc, #52]	; (8028d20 <__libc_init_array+0x38>)
 8028cec:	4c0d      	ldr	r4, [pc, #52]	; (8028d24 <__libc_init_array+0x3c>)
 8028cee:	1b64      	subs	r4, r4, r5
 8028cf0:	10a4      	asrs	r4, r4, #2
 8028cf2:	2600      	movs	r6, #0
 8028cf4:	42a6      	cmp	r6, r4
 8028cf6:	d109      	bne.n	8028d0c <__libc_init_array+0x24>
 8028cf8:	4d0b      	ldr	r5, [pc, #44]	; (8028d28 <__libc_init_array+0x40>)
 8028cfa:	4c0c      	ldr	r4, [pc, #48]	; (8028d2c <__libc_init_array+0x44>)
 8028cfc:	f001 f812 	bl	8029d24 <_init>
 8028d00:	1b64      	subs	r4, r4, r5
 8028d02:	10a4      	asrs	r4, r4, #2
 8028d04:	2600      	movs	r6, #0
 8028d06:	42a6      	cmp	r6, r4
 8028d08:	d105      	bne.n	8028d16 <__libc_init_array+0x2e>
 8028d0a:	bd70      	pop	{r4, r5, r6, pc}
 8028d0c:	f855 3b04 	ldr.w	r3, [r5], #4
 8028d10:	4798      	blx	r3
 8028d12:	3601      	adds	r6, #1
 8028d14:	e7ee      	b.n	8028cf4 <__libc_init_array+0xc>
 8028d16:	f855 3b04 	ldr.w	r3, [r5], #4
 8028d1a:	4798      	blx	r3
 8028d1c:	3601      	adds	r6, #1
 8028d1e:	e7f2      	b.n	8028d06 <__libc_init_array+0x1e>
 8028d20:	0808e76c 	.word	0x0808e76c
 8028d24:	0808e76c 	.word	0x0808e76c
 8028d28:	0808e76c 	.word	0x0808e76c
 8028d2c:	0808e784 	.word	0x0808e784

08028d30 <__retarget_lock_acquire_recursive>:
 8028d30:	4770      	bx	lr

08028d32 <__retarget_lock_release_recursive>:
 8028d32:	4770      	bx	lr

08028d34 <__cxa_atexit>:
 8028d34:	b510      	push	{r4, lr}
 8028d36:	4c05      	ldr	r4, [pc, #20]	; (8028d4c <__cxa_atexit+0x18>)
 8028d38:	4613      	mov	r3, r2
 8028d3a:	b12c      	cbz	r4, 8028d48 <__cxa_atexit+0x14>
 8028d3c:	460a      	mov	r2, r1
 8028d3e:	4601      	mov	r1, r0
 8028d40:	2002      	movs	r0, #2
 8028d42:	f000 f81b 	bl	8028d7c <__register_exitproc>
 8028d46:	bd10      	pop	{r4, pc}
 8028d48:	4620      	mov	r0, r4
 8028d4a:	e7fc      	b.n	8028d46 <__cxa_atexit+0x12>
 8028d4c:	08028d7d 	.word	0x08028d7d

08028d50 <memcpy>:
 8028d50:	440a      	add	r2, r1
 8028d52:	4291      	cmp	r1, r2
 8028d54:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8028d58:	d100      	bne.n	8028d5c <memcpy+0xc>
 8028d5a:	4770      	bx	lr
 8028d5c:	b510      	push	{r4, lr}
 8028d5e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8028d62:	f803 4f01 	strb.w	r4, [r3, #1]!
 8028d66:	4291      	cmp	r1, r2
 8028d68:	d1f9      	bne.n	8028d5e <memcpy+0xe>
 8028d6a:	bd10      	pop	{r4, pc}

08028d6c <strcpy>:
 8028d6c:	4603      	mov	r3, r0
 8028d6e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8028d72:	f803 2b01 	strb.w	r2, [r3], #1
 8028d76:	2a00      	cmp	r2, #0
 8028d78:	d1f9      	bne.n	8028d6e <strcpy+0x2>
 8028d7a:	4770      	bx	lr

08028d7c <__register_exitproc>:
 8028d7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8028d80:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8028e34 <__register_exitproc+0xb8>
 8028d84:	4606      	mov	r6, r0
 8028d86:	f8d8 0000 	ldr.w	r0, [r8]
 8028d8a:	461f      	mov	r7, r3
 8028d8c:	460d      	mov	r5, r1
 8028d8e:	4691      	mov	r9, r2
 8028d90:	f7ff ffce 	bl	8028d30 <__retarget_lock_acquire_recursive>
 8028d94:	4b23      	ldr	r3, [pc, #140]	; (8028e24 <__register_exitproc+0xa8>)
 8028d96:	681c      	ldr	r4, [r3, #0]
 8028d98:	b934      	cbnz	r4, 8028da8 <__register_exitproc+0x2c>
 8028d9a:	4c23      	ldr	r4, [pc, #140]	; (8028e28 <__register_exitproc+0xac>)
 8028d9c:	601c      	str	r4, [r3, #0]
 8028d9e:	4b23      	ldr	r3, [pc, #140]	; (8028e2c <__register_exitproc+0xb0>)
 8028da0:	b113      	cbz	r3, 8028da8 <__register_exitproc+0x2c>
 8028da2:	681b      	ldr	r3, [r3, #0]
 8028da4:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8028da8:	6863      	ldr	r3, [r4, #4]
 8028daa:	2b1f      	cmp	r3, #31
 8028dac:	dd07      	ble.n	8028dbe <__register_exitproc+0x42>
 8028dae:	f8d8 0000 	ldr.w	r0, [r8]
 8028db2:	f7ff ffbe 	bl	8028d32 <__retarget_lock_release_recursive>
 8028db6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8028dba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8028dbe:	b32e      	cbz	r6, 8028e0c <__register_exitproc+0x90>
 8028dc0:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8028dc4:	b968      	cbnz	r0, 8028de2 <__register_exitproc+0x66>
 8028dc6:	4b1a      	ldr	r3, [pc, #104]	; (8028e30 <__register_exitproc+0xb4>)
 8028dc8:	2b00      	cmp	r3, #0
 8028dca:	d0f0      	beq.n	8028dae <__register_exitproc+0x32>
 8028dcc:	f44f 7084 	mov.w	r0, #264	; 0x108
 8028dd0:	f7ff fce4 	bl	802879c <malloc>
 8028dd4:	2800      	cmp	r0, #0
 8028dd6:	d0ea      	beq.n	8028dae <__register_exitproc+0x32>
 8028dd8:	2300      	movs	r3, #0
 8028dda:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8028dde:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8028de2:	6863      	ldr	r3, [r4, #4]
 8028de4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8028de8:	2201      	movs	r2, #1
 8028dea:	409a      	lsls	r2, r3
 8028dec:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8028df0:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8028df4:	4313      	orrs	r3, r2
 8028df6:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8028dfa:	2e02      	cmp	r6, #2
 8028dfc:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8028e00:	bf02      	ittt	eq
 8028e02:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8028e06:	4313      	orreq	r3, r2
 8028e08:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8028e0c:	6863      	ldr	r3, [r4, #4]
 8028e0e:	f8d8 0000 	ldr.w	r0, [r8]
 8028e12:	1c5a      	adds	r2, r3, #1
 8028e14:	3302      	adds	r3, #2
 8028e16:	6062      	str	r2, [r4, #4]
 8028e18:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8028e1c:	f7ff ff89 	bl	8028d32 <__retarget_lock_release_recursive>
 8028e20:	2000      	movs	r0, #0
 8028e22:	e7ca      	b.n	8028dba <__register_exitproc+0x3e>
 8028e24:	2000ece8 	.word	0x2000ece8
 8028e28:	2000ec5c 	.word	0x2000ec5c
 8028e2c:	0802d24c 	.word	0x0802d24c
 8028e30:	0802879d 	.word	0x0802879d
 8028e34:	20000134 	.word	0x20000134

08028e38 <__call_exitprocs>:
 8028e38:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028e3c:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 8028ee8 <__call_exitprocs+0xb0>
 8028e40:	9100      	str	r1, [sp, #0]
 8028e42:	4680      	mov	r8, r0
 8028e44:	f8d9 0000 	ldr.w	r0, [r9]
 8028e48:	f8df a0a0 	ldr.w	sl, [pc, #160]	; 8028eec <__call_exitprocs+0xb4>
 8028e4c:	f7ff ff70 	bl	8028d30 <__retarget_lock_acquire_recursive>
 8028e50:	f8da 4000 	ldr.w	r4, [sl]
 8028e54:	b934      	cbnz	r4, 8028e64 <__call_exitprocs+0x2c>
 8028e56:	f8d9 0000 	ldr.w	r0, [r9]
 8028e5a:	b003      	add	sp, #12
 8028e5c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028e60:	f7ff bf67 	b.w	8028d32 <__retarget_lock_release_recursive>
 8028e64:	6865      	ldr	r5, [r4, #4]
 8028e66:	f8d4 7088 	ldr.w	r7, [r4, #136]	; 0x88
 8028e6a:	1e6e      	subs	r6, r5, #1
 8028e6c:	3501      	adds	r5, #1
 8028e6e:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8028e72:	f107 0b80 	add.w	fp, r7, #128	; 0x80
 8028e76:	2e00      	cmp	r6, #0
 8028e78:	dbed      	blt.n	8028e56 <__call_exitprocs+0x1e>
 8028e7a:	9b00      	ldr	r3, [sp, #0]
 8028e7c:	b143      	cbz	r3, 8028e90 <__call_exitprocs+0x58>
 8028e7e:	b917      	cbnz	r7, 8028e86 <__call_exitprocs+0x4e>
 8028e80:	3e01      	subs	r6, #1
 8028e82:	3d04      	subs	r5, #4
 8028e84:	e7f7      	b.n	8028e76 <__call_exitprocs+0x3e>
 8028e86:	f85b 2026 	ldr.w	r2, [fp, r6, lsl #2]
 8028e8a:	9b00      	ldr	r3, [sp, #0]
 8028e8c:	429a      	cmp	r2, r3
 8028e8e:	d1f7      	bne.n	8028e80 <__call_exitprocs+0x48>
 8028e90:	6861      	ldr	r1, [r4, #4]
 8028e92:	682a      	ldr	r2, [r5, #0]
 8028e94:	3901      	subs	r1, #1
 8028e96:	42b1      	cmp	r1, r6
 8028e98:	bf16      	itet	ne
 8028e9a:	2300      	movne	r3, #0
 8028e9c:	6066      	streq	r6, [r4, #4]
 8028e9e:	602b      	strne	r3, [r5, #0]
 8028ea0:	2a00      	cmp	r2, #0
 8028ea2:	d0ed      	beq.n	8028e80 <__call_exitprocs+0x48>
 8028ea4:	6863      	ldr	r3, [r4, #4]
 8028ea6:	9301      	str	r3, [sp, #4]
 8028ea8:	b13f      	cbz	r7, 8028eba <__call_exitprocs+0x82>
 8028eaa:	f8d7 1100 	ldr.w	r1, [r7, #256]	; 0x100
 8028eae:	2301      	movs	r3, #1
 8028eb0:	fa03 fc06 	lsl.w	ip, r3, r6
 8028eb4:	ea1c 0f01 	tst.w	ip, r1
 8028eb8:	d109      	bne.n	8028ece <__call_exitprocs+0x96>
 8028eba:	4790      	blx	r2
 8028ebc:	6861      	ldr	r1, [r4, #4]
 8028ebe:	9b01      	ldr	r3, [sp, #4]
 8028ec0:	f8da 2000 	ldr.w	r2, [sl]
 8028ec4:	4299      	cmp	r1, r3
 8028ec6:	d1c3      	bne.n	8028e50 <__call_exitprocs+0x18>
 8028ec8:	4294      	cmp	r4, r2
 8028eca:	d0d9      	beq.n	8028e80 <__call_exitprocs+0x48>
 8028ecc:	e7c0      	b.n	8028e50 <__call_exitprocs+0x18>
 8028ece:	f8d7 0104 	ldr.w	r0, [r7, #260]	; 0x104
 8028ed2:	f857 1026 	ldr.w	r1, [r7, r6, lsl #2]
 8028ed6:	ea1c 0f00 	tst.w	ip, r0
 8028eda:	d102      	bne.n	8028ee2 <__call_exitprocs+0xaa>
 8028edc:	4640      	mov	r0, r8
 8028ede:	4790      	blx	r2
 8028ee0:	e7ec      	b.n	8028ebc <__call_exitprocs+0x84>
 8028ee2:	4608      	mov	r0, r1
 8028ee4:	4790      	blx	r2
 8028ee6:	e7e9      	b.n	8028ebc <__call_exitprocs+0x84>
 8028ee8:	20000134 	.word	0x20000134
 8028eec:	2000ece8 	.word	0x2000ece8

08028ef0 <_free_r>:
 8028ef0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8028ef2:	2900      	cmp	r1, #0
 8028ef4:	d044      	beq.n	8028f80 <_free_r+0x90>
 8028ef6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8028efa:	9001      	str	r0, [sp, #4]
 8028efc:	2b00      	cmp	r3, #0
 8028efe:	f1a1 0404 	sub.w	r4, r1, #4
 8028f02:	bfb8      	it	lt
 8028f04:	18e4      	addlt	r4, r4, r3
 8028f06:	f7ff fcf9 	bl	80288fc <__malloc_lock>
 8028f0a:	4a1e      	ldr	r2, [pc, #120]	; (8028f84 <_free_r+0x94>)
 8028f0c:	9801      	ldr	r0, [sp, #4]
 8028f0e:	6813      	ldr	r3, [r2, #0]
 8028f10:	b933      	cbnz	r3, 8028f20 <_free_r+0x30>
 8028f12:	6063      	str	r3, [r4, #4]
 8028f14:	6014      	str	r4, [r2, #0]
 8028f16:	b003      	add	sp, #12
 8028f18:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8028f1c:	f7ff bcf4 	b.w	8028908 <__malloc_unlock>
 8028f20:	42a3      	cmp	r3, r4
 8028f22:	d908      	bls.n	8028f36 <_free_r+0x46>
 8028f24:	6825      	ldr	r5, [r4, #0]
 8028f26:	1961      	adds	r1, r4, r5
 8028f28:	428b      	cmp	r3, r1
 8028f2a:	bf01      	itttt	eq
 8028f2c:	6819      	ldreq	r1, [r3, #0]
 8028f2e:	685b      	ldreq	r3, [r3, #4]
 8028f30:	1949      	addeq	r1, r1, r5
 8028f32:	6021      	streq	r1, [r4, #0]
 8028f34:	e7ed      	b.n	8028f12 <_free_r+0x22>
 8028f36:	461a      	mov	r2, r3
 8028f38:	685b      	ldr	r3, [r3, #4]
 8028f3a:	b10b      	cbz	r3, 8028f40 <_free_r+0x50>
 8028f3c:	42a3      	cmp	r3, r4
 8028f3e:	d9fa      	bls.n	8028f36 <_free_r+0x46>
 8028f40:	6811      	ldr	r1, [r2, #0]
 8028f42:	1855      	adds	r5, r2, r1
 8028f44:	42a5      	cmp	r5, r4
 8028f46:	d10b      	bne.n	8028f60 <_free_r+0x70>
 8028f48:	6824      	ldr	r4, [r4, #0]
 8028f4a:	4421      	add	r1, r4
 8028f4c:	1854      	adds	r4, r2, r1
 8028f4e:	42a3      	cmp	r3, r4
 8028f50:	6011      	str	r1, [r2, #0]
 8028f52:	d1e0      	bne.n	8028f16 <_free_r+0x26>
 8028f54:	681c      	ldr	r4, [r3, #0]
 8028f56:	685b      	ldr	r3, [r3, #4]
 8028f58:	6053      	str	r3, [r2, #4]
 8028f5a:	440c      	add	r4, r1
 8028f5c:	6014      	str	r4, [r2, #0]
 8028f5e:	e7da      	b.n	8028f16 <_free_r+0x26>
 8028f60:	d902      	bls.n	8028f68 <_free_r+0x78>
 8028f62:	230c      	movs	r3, #12
 8028f64:	6003      	str	r3, [r0, #0]
 8028f66:	e7d6      	b.n	8028f16 <_free_r+0x26>
 8028f68:	6825      	ldr	r5, [r4, #0]
 8028f6a:	1961      	adds	r1, r4, r5
 8028f6c:	428b      	cmp	r3, r1
 8028f6e:	bf04      	itt	eq
 8028f70:	6819      	ldreq	r1, [r3, #0]
 8028f72:	685b      	ldreq	r3, [r3, #4]
 8028f74:	6063      	str	r3, [r4, #4]
 8028f76:	bf04      	itt	eq
 8028f78:	1949      	addeq	r1, r1, r5
 8028f7a:	6021      	streq	r1, [r4, #0]
 8028f7c:	6054      	str	r4, [r2, #4]
 8028f7e:	e7ca      	b.n	8028f16 <_free_r+0x26>
 8028f80:	b003      	add	sp, #12
 8028f82:	bd30      	pop	{r4, r5, pc}
 8028f84:	2000eb14 	.word	0x2000eb14

08028f88 <__ssputs_r>:
 8028f88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028f8c:	688e      	ldr	r6, [r1, #8]
 8028f8e:	461f      	mov	r7, r3
 8028f90:	42be      	cmp	r6, r7
 8028f92:	680b      	ldr	r3, [r1, #0]
 8028f94:	4682      	mov	sl, r0
 8028f96:	460c      	mov	r4, r1
 8028f98:	4690      	mov	r8, r2
 8028f9a:	d82c      	bhi.n	8028ff6 <__ssputs_r+0x6e>
 8028f9c:	898a      	ldrh	r2, [r1, #12]
 8028f9e:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8028fa2:	d026      	beq.n	8028ff2 <__ssputs_r+0x6a>
 8028fa4:	6965      	ldr	r5, [r4, #20]
 8028fa6:	6909      	ldr	r1, [r1, #16]
 8028fa8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8028fac:	eba3 0901 	sub.w	r9, r3, r1
 8028fb0:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8028fb4:	1c7b      	adds	r3, r7, #1
 8028fb6:	444b      	add	r3, r9
 8028fb8:	106d      	asrs	r5, r5, #1
 8028fba:	429d      	cmp	r5, r3
 8028fbc:	bf38      	it	cc
 8028fbe:	461d      	movcc	r5, r3
 8028fc0:	0553      	lsls	r3, r2, #21
 8028fc2:	d527      	bpl.n	8029014 <__ssputs_r+0x8c>
 8028fc4:	4629      	mov	r1, r5
 8028fc6:	f7ff fc19 	bl	80287fc <_malloc_r>
 8028fca:	4606      	mov	r6, r0
 8028fcc:	b360      	cbz	r0, 8029028 <__ssputs_r+0xa0>
 8028fce:	6921      	ldr	r1, [r4, #16]
 8028fd0:	464a      	mov	r2, r9
 8028fd2:	f7ff febd 	bl	8028d50 <memcpy>
 8028fd6:	89a3      	ldrh	r3, [r4, #12]
 8028fd8:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8028fdc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8028fe0:	81a3      	strh	r3, [r4, #12]
 8028fe2:	6126      	str	r6, [r4, #16]
 8028fe4:	6165      	str	r5, [r4, #20]
 8028fe6:	444e      	add	r6, r9
 8028fe8:	eba5 0509 	sub.w	r5, r5, r9
 8028fec:	6026      	str	r6, [r4, #0]
 8028fee:	60a5      	str	r5, [r4, #8]
 8028ff0:	463e      	mov	r6, r7
 8028ff2:	42be      	cmp	r6, r7
 8028ff4:	d900      	bls.n	8028ff8 <__ssputs_r+0x70>
 8028ff6:	463e      	mov	r6, r7
 8028ff8:	6820      	ldr	r0, [r4, #0]
 8028ffa:	4632      	mov	r2, r6
 8028ffc:	4641      	mov	r1, r8
 8028ffe:	f000 fe07 	bl	8029c10 <memmove>
 8029002:	68a3      	ldr	r3, [r4, #8]
 8029004:	1b9b      	subs	r3, r3, r6
 8029006:	60a3      	str	r3, [r4, #8]
 8029008:	6823      	ldr	r3, [r4, #0]
 802900a:	4433      	add	r3, r6
 802900c:	6023      	str	r3, [r4, #0]
 802900e:	2000      	movs	r0, #0
 8029010:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8029014:	462a      	mov	r2, r5
 8029016:	f000 fcd4 	bl	80299c2 <_realloc_r>
 802901a:	4606      	mov	r6, r0
 802901c:	2800      	cmp	r0, #0
 802901e:	d1e0      	bne.n	8028fe2 <__ssputs_r+0x5a>
 8029020:	6921      	ldr	r1, [r4, #16]
 8029022:	4650      	mov	r0, sl
 8029024:	f7ff ff64 	bl	8028ef0 <_free_r>
 8029028:	230c      	movs	r3, #12
 802902a:	f8ca 3000 	str.w	r3, [sl]
 802902e:	89a3      	ldrh	r3, [r4, #12]
 8029030:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8029034:	81a3      	strh	r3, [r4, #12]
 8029036:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 802903a:	e7e9      	b.n	8029010 <__ssputs_r+0x88>

0802903c <_svfiprintf_r>:
 802903c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029040:	4698      	mov	r8, r3
 8029042:	898b      	ldrh	r3, [r1, #12]
 8029044:	061b      	lsls	r3, r3, #24
 8029046:	b09d      	sub	sp, #116	; 0x74
 8029048:	4607      	mov	r7, r0
 802904a:	460d      	mov	r5, r1
 802904c:	4614      	mov	r4, r2
 802904e:	d50e      	bpl.n	802906e <_svfiprintf_r+0x32>
 8029050:	690b      	ldr	r3, [r1, #16]
 8029052:	b963      	cbnz	r3, 802906e <_svfiprintf_r+0x32>
 8029054:	2140      	movs	r1, #64	; 0x40
 8029056:	f7ff fbd1 	bl	80287fc <_malloc_r>
 802905a:	6028      	str	r0, [r5, #0]
 802905c:	6128      	str	r0, [r5, #16]
 802905e:	b920      	cbnz	r0, 802906a <_svfiprintf_r+0x2e>
 8029060:	230c      	movs	r3, #12
 8029062:	603b      	str	r3, [r7, #0]
 8029064:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8029068:	e0d0      	b.n	802920c <_svfiprintf_r+0x1d0>
 802906a:	2340      	movs	r3, #64	; 0x40
 802906c:	616b      	str	r3, [r5, #20]
 802906e:	2300      	movs	r3, #0
 8029070:	9309      	str	r3, [sp, #36]	; 0x24
 8029072:	2320      	movs	r3, #32
 8029074:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8029078:	f8cd 800c 	str.w	r8, [sp, #12]
 802907c:	2330      	movs	r3, #48	; 0x30
 802907e:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8029224 <_svfiprintf_r+0x1e8>
 8029082:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8029086:	f04f 0901 	mov.w	r9, #1
 802908a:	4623      	mov	r3, r4
 802908c:	469a      	mov	sl, r3
 802908e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8029092:	b10a      	cbz	r2, 8029098 <_svfiprintf_r+0x5c>
 8029094:	2a25      	cmp	r2, #37	; 0x25
 8029096:	d1f9      	bne.n	802908c <_svfiprintf_r+0x50>
 8029098:	ebba 0b04 	subs.w	fp, sl, r4
 802909c:	d00b      	beq.n	80290b6 <_svfiprintf_r+0x7a>
 802909e:	465b      	mov	r3, fp
 80290a0:	4622      	mov	r2, r4
 80290a2:	4629      	mov	r1, r5
 80290a4:	4638      	mov	r0, r7
 80290a6:	f7ff ff6f 	bl	8028f88 <__ssputs_r>
 80290aa:	3001      	adds	r0, #1
 80290ac:	f000 80a9 	beq.w	8029202 <_svfiprintf_r+0x1c6>
 80290b0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80290b2:	445a      	add	r2, fp
 80290b4:	9209      	str	r2, [sp, #36]	; 0x24
 80290b6:	f89a 3000 	ldrb.w	r3, [sl]
 80290ba:	2b00      	cmp	r3, #0
 80290bc:	f000 80a1 	beq.w	8029202 <_svfiprintf_r+0x1c6>
 80290c0:	2300      	movs	r3, #0
 80290c2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80290c6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80290ca:	f10a 0a01 	add.w	sl, sl, #1
 80290ce:	9304      	str	r3, [sp, #16]
 80290d0:	9307      	str	r3, [sp, #28]
 80290d2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80290d6:	931a      	str	r3, [sp, #104]	; 0x68
 80290d8:	4654      	mov	r4, sl
 80290da:	2205      	movs	r2, #5
 80290dc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80290e0:	4850      	ldr	r0, [pc, #320]	; (8029224 <_svfiprintf_r+0x1e8>)
 80290e2:	f7d7 f885 	bl	80001f0 <memchr>
 80290e6:	9a04      	ldr	r2, [sp, #16]
 80290e8:	b9d8      	cbnz	r0, 8029122 <_svfiprintf_r+0xe6>
 80290ea:	06d0      	lsls	r0, r2, #27
 80290ec:	bf44      	itt	mi
 80290ee:	2320      	movmi	r3, #32
 80290f0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80290f4:	0711      	lsls	r1, r2, #28
 80290f6:	bf44      	itt	mi
 80290f8:	232b      	movmi	r3, #43	; 0x2b
 80290fa:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80290fe:	f89a 3000 	ldrb.w	r3, [sl]
 8029102:	2b2a      	cmp	r3, #42	; 0x2a
 8029104:	d015      	beq.n	8029132 <_svfiprintf_r+0xf6>
 8029106:	9a07      	ldr	r2, [sp, #28]
 8029108:	4654      	mov	r4, sl
 802910a:	2000      	movs	r0, #0
 802910c:	f04f 0c0a 	mov.w	ip, #10
 8029110:	4621      	mov	r1, r4
 8029112:	f811 3b01 	ldrb.w	r3, [r1], #1
 8029116:	3b30      	subs	r3, #48	; 0x30
 8029118:	2b09      	cmp	r3, #9
 802911a:	d94d      	bls.n	80291b8 <_svfiprintf_r+0x17c>
 802911c:	b1b0      	cbz	r0, 802914c <_svfiprintf_r+0x110>
 802911e:	9207      	str	r2, [sp, #28]
 8029120:	e014      	b.n	802914c <_svfiprintf_r+0x110>
 8029122:	eba0 0308 	sub.w	r3, r0, r8
 8029126:	fa09 f303 	lsl.w	r3, r9, r3
 802912a:	4313      	orrs	r3, r2
 802912c:	9304      	str	r3, [sp, #16]
 802912e:	46a2      	mov	sl, r4
 8029130:	e7d2      	b.n	80290d8 <_svfiprintf_r+0x9c>
 8029132:	9b03      	ldr	r3, [sp, #12]
 8029134:	1d19      	adds	r1, r3, #4
 8029136:	681b      	ldr	r3, [r3, #0]
 8029138:	9103      	str	r1, [sp, #12]
 802913a:	2b00      	cmp	r3, #0
 802913c:	bfbb      	ittet	lt
 802913e:	425b      	neglt	r3, r3
 8029140:	f042 0202 	orrlt.w	r2, r2, #2
 8029144:	9307      	strge	r3, [sp, #28]
 8029146:	9307      	strlt	r3, [sp, #28]
 8029148:	bfb8      	it	lt
 802914a:	9204      	strlt	r2, [sp, #16]
 802914c:	7823      	ldrb	r3, [r4, #0]
 802914e:	2b2e      	cmp	r3, #46	; 0x2e
 8029150:	d10c      	bne.n	802916c <_svfiprintf_r+0x130>
 8029152:	7863      	ldrb	r3, [r4, #1]
 8029154:	2b2a      	cmp	r3, #42	; 0x2a
 8029156:	d134      	bne.n	80291c2 <_svfiprintf_r+0x186>
 8029158:	9b03      	ldr	r3, [sp, #12]
 802915a:	1d1a      	adds	r2, r3, #4
 802915c:	681b      	ldr	r3, [r3, #0]
 802915e:	9203      	str	r2, [sp, #12]
 8029160:	2b00      	cmp	r3, #0
 8029162:	bfb8      	it	lt
 8029164:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8029168:	3402      	adds	r4, #2
 802916a:	9305      	str	r3, [sp, #20]
 802916c:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8029234 <_svfiprintf_r+0x1f8>
 8029170:	7821      	ldrb	r1, [r4, #0]
 8029172:	2203      	movs	r2, #3
 8029174:	4650      	mov	r0, sl
 8029176:	f7d7 f83b 	bl	80001f0 <memchr>
 802917a:	b138      	cbz	r0, 802918c <_svfiprintf_r+0x150>
 802917c:	9b04      	ldr	r3, [sp, #16]
 802917e:	eba0 000a 	sub.w	r0, r0, sl
 8029182:	2240      	movs	r2, #64	; 0x40
 8029184:	4082      	lsls	r2, r0
 8029186:	4313      	orrs	r3, r2
 8029188:	3401      	adds	r4, #1
 802918a:	9304      	str	r3, [sp, #16]
 802918c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8029190:	4825      	ldr	r0, [pc, #148]	; (8029228 <_svfiprintf_r+0x1ec>)
 8029192:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8029196:	2206      	movs	r2, #6
 8029198:	f7d7 f82a 	bl	80001f0 <memchr>
 802919c:	2800      	cmp	r0, #0
 802919e:	d038      	beq.n	8029212 <_svfiprintf_r+0x1d6>
 80291a0:	4b22      	ldr	r3, [pc, #136]	; (802922c <_svfiprintf_r+0x1f0>)
 80291a2:	bb1b      	cbnz	r3, 80291ec <_svfiprintf_r+0x1b0>
 80291a4:	9b03      	ldr	r3, [sp, #12]
 80291a6:	3307      	adds	r3, #7
 80291a8:	f023 0307 	bic.w	r3, r3, #7
 80291ac:	3308      	adds	r3, #8
 80291ae:	9303      	str	r3, [sp, #12]
 80291b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80291b2:	4433      	add	r3, r6
 80291b4:	9309      	str	r3, [sp, #36]	; 0x24
 80291b6:	e768      	b.n	802908a <_svfiprintf_r+0x4e>
 80291b8:	fb0c 3202 	mla	r2, ip, r2, r3
 80291bc:	460c      	mov	r4, r1
 80291be:	2001      	movs	r0, #1
 80291c0:	e7a6      	b.n	8029110 <_svfiprintf_r+0xd4>
 80291c2:	2300      	movs	r3, #0
 80291c4:	3401      	adds	r4, #1
 80291c6:	9305      	str	r3, [sp, #20]
 80291c8:	4619      	mov	r1, r3
 80291ca:	f04f 0c0a 	mov.w	ip, #10
 80291ce:	4620      	mov	r0, r4
 80291d0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80291d4:	3a30      	subs	r2, #48	; 0x30
 80291d6:	2a09      	cmp	r2, #9
 80291d8:	d903      	bls.n	80291e2 <_svfiprintf_r+0x1a6>
 80291da:	2b00      	cmp	r3, #0
 80291dc:	d0c6      	beq.n	802916c <_svfiprintf_r+0x130>
 80291de:	9105      	str	r1, [sp, #20]
 80291e0:	e7c4      	b.n	802916c <_svfiprintf_r+0x130>
 80291e2:	fb0c 2101 	mla	r1, ip, r1, r2
 80291e6:	4604      	mov	r4, r0
 80291e8:	2301      	movs	r3, #1
 80291ea:	e7f0      	b.n	80291ce <_svfiprintf_r+0x192>
 80291ec:	ab03      	add	r3, sp, #12
 80291ee:	9300      	str	r3, [sp, #0]
 80291f0:	462a      	mov	r2, r5
 80291f2:	4b0f      	ldr	r3, [pc, #60]	; (8029230 <_svfiprintf_r+0x1f4>)
 80291f4:	a904      	add	r1, sp, #16
 80291f6:	4638      	mov	r0, r7
 80291f8:	f3af 8000 	nop.w
 80291fc:	1c42      	adds	r2, r0, #1
 80291fe:	4606      	mov	r6, r0
 8029200:	d1d6      	bne.n	80291b0 <_svfiprintf_r+0x174>
 8029202:	89ab      	ldrh	r3, [r5, #12]
 8029204:	065b      	lsls	r3, r3, #25
 8029206:	f53f af2d 	bmi.w	8029064 <_svfiprintf_r+0x28>
 802920a:	9809      	ldr	r0, [sp, #36]	; 0x24
 802920c:	b01d      	add	sp, #116	; 0x74
 802920e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029212:	ab03      	add	r3, sp, #12
 8029214:	9300      	str	r3, [sp, #0]
 8029216:	462a      	mov	r2, r5
 8029218:	4b05      	ldr	r3, [pc, #20]	; (8029230 <_svfiprintf_r+0x1f4>)
 802921a:	a904      	add	r1, sp, #16
 802921c:	4638      	mov	r0, r7
 802921e:	f000 f9bd 	bl	802959c <_printf_i>
 8029222:	e7eb      	b.n	80291fc <_svfiprintf_r+0x1c0>
 8029224:	0802d218 	.word	0x0802d218
 8029228:	0802d222 	.word	0x0802d222
 802922c:	00000000 	.word	0x00000000
 8029230:	08028f89 	.word	0x08028f89
 8029234:	0802d21e 	.word	0x0802d21e

08029238 <__sfputc_r>:
 8029238:	6893      	ldr	r3, [r2, #8]
 802923a:	3b01      	subs	r3, #1
 802923c:	2b00      	cmp	r3, #0
 802923e:	b410      	push	{r4}
 8029240:	6093      	str	r3, [r2, #8]
 8029242:	da08      	bge.n	8029256 <__sfputc_r+0x1e>
 8029244:	6994      	ldr	r4, [r2, #24]
 8029246:	42a3      	cmp	r3, r4
 8029248:	db01      	blt.n	802924e <__sfputc_r+0x16>
 802924a:	290a      	cmp	r1, #10
 802924c:	d103      	bne.n	8029256 <__sfputc_r+0x1e>
 802924e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029252:	f000 bbe5 	b.w	8029a20 <__swbuf_r>
 8029256:	6813      	ldr	r3, [r2, #0]
 8029258:	1c58      	adds	r0, r3, #1
 802925a:	6010      	str	r0, [r2, #0]
 802925c:	7019      	strb	r1, [r3, #0]
 802925e:	4608      	mov	r0, r1
 8029260:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029264:	4770      	bx	lr

08029266 <__sfputs_r>:
 8029266:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8029268:	4606      	mov	r6, r0
 802926a:	460f      	mov	r7, r1
 802926c:	4614      	mov	r4, r2
 802926e:	18d5      	adds	r5, r2, r3
 8029270:	42ac      	cmp	r4, r5
 8029272:	d101      	bne.n	8029278 <__sfputs_r+0x12>
 8029274:	2000      	movs	r0, #0
 8029276:	e007      	b.n	8029288 <__sfputs_r+0x22>
 8029278:	f814 1b01 	ldrb.w	r1, [r4], #1
 802927c:	463a      	mov	r2, r7
 802927e:	4630      	mov	r0, r6
 8029280:	f7ff ffda 	bl	8029238 <__sfputc_r>
 8029284:	1c43      	adds	r3, r0, #1
 8029286:	d1f3      	bne.n	8029270 <__sfputs_r+0xa>
 8029288:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802928c <_vfiprintf_r>:
 802928c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029290:	460d      	mov	r5, r1
 8029292:	b09d      	sub	sp, #116	; 0x74
 8029294:	4614      	mov	r4, r2
 8029296:	4698      	mov	r8, r3
 8029298:	4606      	mov	r6, r0
 802929a:	b118      	cbz	r0, 80292a4 <_vfiprintf_r+0x18>
 802929c:	6a03      	ldr	r3, [r0, #32]
 802929e:	b90b      	cbnz	r3, 80292a4 <_vfiprintf_r+0x18>
 80292a0:	f7ff fbd2 	bl	8028a48 <__sinit>
 80292a4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80292a6:	07d9      	lsls	r1, r3, #31
 80292a8:	d405      	bmi.n	80292b6 <_vfiprintf_r+0x2a>
 80292aa:	89ab      	ldrh	r3, [r5, #12]
 80292ac:	059a      	lsls	r2, r3, #22
 80292ae:	d402      	bmi.n	80292b6 <_vfiprintf_r+0x2a>
 80292b0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80292b2:	f7ff fd3d 	bl	8028d30 <__retarget_lock_acquire_recursive>
 80292b6:	89ab      	ldrh	r3, [r5, #12]
 80292b8:	071b      	lsls	r3, r3, #28
 80292ba:	d501      	bpl.n	80292c0 <_vfiprintf_r+0x34>
 80292bc:	692b      	ldr	r3, [r5, #16]
 80292be:	b99b      	cbnz	r3, 80292e8 <_vfiprintf_r+0x5c>
 80292c0:	4629      	mov	r1, r5
 80292c2:	4630      	mov	r0, r6
 80292c4:	f000 fbea 	bl	8029a9c <__swsetup_r>
 80292c8:	b170      	cbz	r0, 80292e8 <_vfiprintf_r+0x5c>
 80292ca:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80292cc:	07dc      	lsls	r4, r3, #31
 80292ce:	d504      	bpl.n	80292da <_vfiprintf_r+0x4e>
 80292d0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80292d4:	b01d      	add	sp, #116	; 0x74
 80292d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80292da:	89ab      	ldrh	r3, [r5, #12]
 80292dc:	0598      	lsls	r0, r3, #22
 80292de:	d4f7      	bmi.n	80292d0 <_vfiprintf_r+0x44>
 80292e0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80292e2:	f7ff fd26 	bl	8028d32 <__retarget_lock_release_recursive>
 80292e6:	e7f3      	b.n	80292d0 <_vfiprintf_r+0x44>
 80292e8:	2300      	movs	r3, #0
 80292ea:	9309      	str	r3, [sp, #36]	; 0x24
 80292ec:	2320      	movs	r3, #32
 80292ee:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80292f2:	f8cd 800c 	str.w	r8, [sp, #12]
 80292f6:	2330      	movs	r3, #48	; 0x30
 80292f8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 80294ac <_vfiprintf_r+0x220>
 80292fc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8029300:	f04f 0901 	mov.w	r9, #1
 8029304:	4623      	mov	r3, r4
 8029306:	469a      	mov	sl, r3
 8029308:	f813 2b01 	ldrb.w	r2, [r3], #1
 802930c:	b10a      	cbz	r2, 8029312 <_vfiprintf_r+0x86>
 802930e:	2a25      	cmp	r2, #37	; 0x25
 8029310:	d1f9      	bne.n	8029306 <_vfiprintf_r+0x7a>
 8029312:	ebba 0b04 	subs.w	fp, sl, r4
 8029316:	d00b      	beq.n	8029330 <_vfiprintf_r+0xa4>
 8029318:	465b      	mov	r3, fp
 802931a:	4622      	mov	r2, r4
 802931c:	4629      	mov	r1, r5
 802931e:	4630      	mov	r0, r6
 8029320:	f7ff ffa1 	bl	8029266 <__sfputs_r>
 8029324:	3001      	adds	r0, #1
 8029326:	f000 80a9 	beq.w	802947c <_vfiprintf_r+0x1f0>
 802932a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802932c:	445a      	add	r2, fp
 802932e:	9209      	str	r2, [sp, #36]	; 0x24
 8029330:	f89a 3000 	ldrb.w	r3, [sl]
 8029334:	2b00      	cmp	r3, #0
 8029336:	f000 80a1 	beq.w	802947c <_vfiprintf_r+0x1f0>
 802933a:	2300      	movs	r3, #0
 802933c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8029340:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8029344:	f10a 0a01 	add.w	sl, sl, #1
 8029348:	9304      	str	r3, [sp, #16]
 802934a:	9307      	str	r3, [sp, #28]
 802934c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8029350:	931a      	str	r3, [sp, #104]	; 0x68
 8029352:	4654      	mov	r4, sl
 8029354:	2205      	movs	r2, #5
 8029356:	f814 1b01 	ldrb.w	r1, [r4], #1
 802935a:	4854      	ldr	r0, [pc, #336]	; (80294ac <_vfiprintf_r+0x220>)
 802935c:	f7d6 ff48 	bl	80001f0 <memchr>
 8029360:	9a04      	ldr	r2, [sp, #16]
 8029362:	b9d8      	cbnz	r0, 802939c <_vfiprintf_r+0x110>
 8029364:	06d1      	lsls	r1, r2, #27
 8029366:	bf44      	itt	mi
 8029368:	2320      	movmi	r3, #32
 802936a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802936e:	0713      	lsls	r3, r2, #28
 8029370:	bf44      	itt	mi
 8029372:	232b      	movmi	r3, #43	; 0x2b
 8029374:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8029378:	f89a 3000 	ldrb.w	r3, [sl]
 802937c:	2b2a      	cmp	r3, #42	; 0x2a
 802937e:	d015      	beq.n	80293ac <_vfiprintf_r+0x120>
 8029380:	9a07      	ldr	r2, [sp, #28]
 8029382:	4654      	mov	r4, sl
 8029384:	2000      	movs	r0, #0
 8029386:	f04f 0c0a 	mov.w	ip, #10
 802938a:	4621      	mov	r1, r4
 802938c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8029390:	3b30      	subs	r3, #48	; 0x30
 8029392:	2b09      	cmp	r3, #9
 8029394:	d94d      	bls.n	8029432 <_vfiprintf_r+0x1a6>
 8029396:	b1b0      	cbz	r0, 80293c6 <_vfiprintf_r+0x13a>
 8029398:	9207      	str	r2, [sp, #28]
 802939a:	e014      	b.n	80293c6 <_vfiprintf_r+0x13a>
 802939c:	eba0 0308 	sub.w	r3, r0, r8
 80293a0:	fa09 f303 	lsl.w	r3, r9, r3
 80293a4:	4313      	orrs	r3, r2
 80293a6:	9304      	str	r3, [sp, #16]
 80293a8:	46a2      	mov	sl, r4
 80293aa:	e7d2      	b.n	8029352 <_vfiprintf_r+0xc6>
 80293ac:	9b03      	ldr	r3, [sp, #12]
 80293ae:	1d19      	adds	r1, r3, #4
 80293b0:	681b      	ldr	r3, [r3, #0]
 80293b2:	9103      	str	r1, [sp, #12]
 80293b4:	2b00      	cmp	r3, #0
 80293b6:	bfbb      	ittet	lt
 80293b8:	425b      	neglt	r3, r3
 80293ba:	f042 0202 	orrlt.w	r2, r2, #2
 80293be:	9307      	strge	r3, [sp, #28]
 80293c0:	9307      	strlt	r3, [sp, #28]
 80293c2:	bfb8      	it	lt
 80293c4:	9204      	strlt	r2, [sp, #16]
 80293c6:	7823      	ldrb	r3, [r4, #0]
 80293c8:	2b2e      	cmp	r3, #46	; 0x2e
 80293ca:	d10c      	bne.n	80293e6 <_vfiprintf_r+0x15a>
 80293cc:	7863      	ldrb	r3, [r4, #1]
 80293ce:	2b2a      	cmp	r3, #42	; 0x2a
 80293d0:	d134      	bne.n	802943c <_vfiprintf_r+0x1b0>
 80293d2:	9b03      	ldr	r3, [sp, #12]
 80293d4:	1d1a      	adds	r2, r3, #4
 80293d6:	681b      	ldr	r3, [r3, #0]
 80293d8:	9203      	str	r2, [sp, #12]
 80293da:	2b00      	cmp	r3, #0
 80293dc:	bfb8      	it	lt
 80293de:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 80293e2:	3402      	adds	r4, #2
 80293e4:	9305      	str	r3, [sp, #20]
 80293e6:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 80294bc <_vfiprintf_r+0x230>
 80293ea:	7821      	ldrb	r1, [r4, #0]
 80293ec:	2203      	movs	r2, #3
 80293ee:	4650      	mov	r0, sl
 80293f0:	f7d6 fefe 	bl	80001f0 <memchr>
 80293f4:	b138      	cbz	r0, 8029406 <_vfiprintf_r+0x17a>
 80293f6:	9b04      	ldr	r3, [sp, #16]
 80293f8:	eba0 000a 	sub.w	r0, r0, sl
 80293fc:	2240      	movs	r2, #64	; 0x40
 80293fe:	4082      	lsls	r2, r0
 8029400:	4313      	orrs	r3, r2
 8029402:	3401      	adds	r4, #1
 8029404:	9304      	str	r3, [sp, #16]
 8029406:	f814 1b01 	ldrb.w	r1, [r4], #1
 802940a:	4829      	ldr	r0, [pc, #164]	; (80294b0 <_vfiprintf_r+0x224>)
 802940c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8029410:	2206      	movs	r2, #6
 8029412:	f7d6 feed 	bl	80001f0 <memchr>
 8029416:	2800      	cmp	r0, #0
 8029418:	d03f      	beq.n	802949a <_vfiprintf_r+0x20e>
 802941a:	4b26      	ldr	r3, [pc, #152]	; (80294b4 <_vfiprintf_r+0x228>)
 802941c:	bb1b      	cbnz	r3, 8029466 <_vfiprintf_r+0x1da>
 802941e:	9b03      	ldr	r3, [sp, #12]
 8029420:	3307      	adds	r3, #7
 8029422:	f023 0307 	bic.w	r3, r3, #7
 8029426:	3308      	adds	r3, #8
 8029428:	9303      	str	r3, [sp, #12]
 802942a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802942c:	443b      	add	r3, r7
 802942e:	9309      	str	r3, [sp, #36]	; 0x24
 8029430:	e768      	b.n	8029304 <_vfiprintf_r+0x78>
 8029432:	fb0c 3202 	mla	r2, ip, r2, r3
 8029436:	460c      	mov	r4, r1
 8029438:	2001      	movs	r0, #1
 802943a:	e7a6      	b.n	802938a <_vfiprintf_r+0xfe>
 802943c:	2300      	movs	r3, #0
 802943e:	3401      	adds	r4, #1
 8029440:	9305      	str	r3, [sp, #20]
 8029442:	4619      	mov	r1, r3
 8029444:	f04f 0c0a 	mov.w	ip, #10
 8029448:	4620      	mov	r0, r4
 802944a:	f810 2b01 	ldrb.w	r2, [r0], #1
 802944e:	3a30      	subs	r2, #48	; 0x30
 8029450:	2a09      	cmp	r2, #9
 8029452:	d903      	bls.n	802945c <_vfiprintf_r+0x1d0>
 8029454:	2b00      	cmp	r3, #0
 8029456:	d0c6      	beq.n	80293e6 <_vfiprintf_r+0x15a>
 8029458:	9105      	str	r1, [sp, #20]
 802945a:	e7c4      	b.n	80293e6 <_vfiprintf_r+0x15a>
 802945c:	fb0c 2101 	mla	r1, ip, r1, r2
 8029460:	4604      	mov	r4, r0
 8029462:	2301      	movs	r3, #1
 8029464:	e7f0      	b.n	8029448 <_vfiprintf_r+0x1bc>
 8029466:	ab03      	add	r3, sp, #12
 8029468:	9300      	str	r3, [sp, #0]
 802946a:	462a      	mov	r2, r5
 802946c:	4b12      	ldr	r3, [pc, #72]	; (80294b8 <_vfiprintf_r+0x22c>)
 802946e:	a904      	add	r1, sp, #16
 8029470:	4630      	mov	r0, r6
 8029472:	f3af 8000 	nop.w
 8029476:	4607      	mov	r7, r0
 8029478:	1c78      	adds	r0, r7, #1
 802947a:	d1d6      	bne.n	802942a <_vfiprintf_r+0x19e>
 802947c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802947e:	07d9      	lsls	r1, r3, #31
 8029480:	d405      	bmi.n	802948e <_vfiprintf_r+0x202>
 8029482:	89ab      	ldrh	r3, [r5, #12]
 8029484:	059a      	lsls	r2, r3, #22
 8029486:	d402      	bmi.n	802948e <_vfiprintf_r+0x202>
 8029488:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802948a:	f7ff fc52 	bl	8028d32 <__retarget_lock_release_recursive>
 802948e:	89ab      	ldrh	r3, [r5, #12]
 8029490:	065b      	lsls	r3, r3, #25
 8029492:	f53f af1d 	bmi.w	80292d0 <_vfiprintf_r+0x44>
 8029496:	9809      	ldr	r0, [sp, #36]	; 0x24
 8029498:	e71c      	b.n	80292d4 <_vfiprintf_r+0x48>
 802949a:	ab03      	add	r3, sp, #12
 802949c:	9300      	str	r3, [sp, #0]
 802949e:	462a      	mov	r2, r5
 80294a0:	4b05      	ldr	r3, [pc, #20]	; (80294b8 <_vfiprintf_r+0x22c>)
 80294a2:	a904      	add	r1, sp, #16
 80294a4:	4630      	mov	r0, r6
 80294a6:	f000 f879 	bl	802959c <_printf_i>
 80294aa:	e7e4      	b.n	8029476 <_vfiprintf_r+0x1ea>
 80294ac:	0802d218 	.word	0x0802d218
 80294b0:	0802d222 	.word	0x0802d222
 80294b4:	00000000 	.word	0x00000000
 80294b8:	08029267 	.word	0x08029267
 80294bc:	0802d21e 	.word	0x0802d21e

080294c0 <_printf_common>:
 80294c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80294c4:	4616      	mov	r6, r2
 80294c6:	4699      	mov	r9, r3
 80294c8:	688a      	ldr	r2, [r1, #8]
 80294ca:	690b      	ldr	r3, [r1, #16]
 80294cc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80294d0:	4293      	cmp	r3, r2
 80294d2:	bfb8      	it	lt
 80294d4:	4613      	movlt	r3, r2
 80294d6:	6033      	str	r3, [r6, #0]
 80294d8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80294dc:	4607      	mov	r7, r0
 80294de:	460c      	mov	r4, r1
 80294e0:	b10a      	cbz	r2, 80294e6 <_printf_common+0x26>
 80294e2:	3301      	adds	r3, #1
 80294e4:	6033      	str	r3, [r6, #0]
 80294e6:	6823      	ldr	r3, [r4, #0]
 80294e8:	0699      	lsls	r1, r3, #26
 80294ea:	bf42      	ittt	mi
 80294ec:	6833      	ldrmi	r3, [r6, #0]
 80294ee:	3302      	addmi	r3, #2
 80294f0:	6033      	strmi	r3, [r6, #0]
 80294f2:	6825      	ldr	r5, [r4, #0]
 80294f4:	f015 0506 	ands.w	r5, r5, #6
 80294f8:	d106      	bne.n	8029508 <_printf_common+0x48>
 80294fa:	f104 0a19 	add.w	sl, r4, #25
 80294fe:	68e3      	ldr	r3, [r4, #12]
 8029500:	6832      	ldr	r2, [r6, #0]
 8029502:	1a9b      	subs	r3, r3, r2
 8029504:	42ab      	cmp	r3, r5
 8029506:	dc26      	bgt.n	8029556 <_printf_common+0x96>
 8029508:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802950c:	1e13      	subs	r3, r2, #0
 802950e:	6822      	ldr	r2, [r4, #0]
 8029510:	bf18      	it	ne
 8029512:	2301      	movne	r3, #1
 8029514:	0692      	lsls	r2, r2, #26
 8029516:	d42b      	bmi.n	8029570 <_printf_common+0xb0>
 8029518:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802951c:	4649      	mov	r1, r9
 802951e:	4638      	mov	r0, r7
 8029520:	47c0      	blx	r8
 8029522:	3001      	adds	r0, #1
 8029524:	d01e      	beq.n	8029564 <_printf_common+0xa4>
 8029526:	6823      	ldr	r3, [r4, #0]
 8029528:	6922      	ldr	r2, [r4, #16]
 802952a:	f003 0306 	and.w	r3, r3, #6
 802952e:	2b04      	cmp	r3, #4
 8029530:	bf02      	ittt	eq
 8029532:	68e5      	ldreq	r5, [r4, #12]
 8029534:	6833      	ldreq	r3, [r6, #0]
 8029536:	1aed      	subeq	r5, r5, r3
 8029538:	68a3      	ldr	r3, [r4, #8]
 802953a:	bf0c      	ite	eq
 802953c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8029540:	2500      	movne	r5, #0
 8029542:	4293      	cmp	r3, r2
 8029544:	bfc4      	itt	gt
 8029546:	1a9b      	subgt	r3, r3, r2
 8029548:	18ed      	addgt	r5, r5, r3
 802954a:	2600      	movs	r6, #0
 802954c:	341a      	adds	r4, #26
 802954e:	42b5      	cmp	r5, r6
 8029550:	d11a      	bne.n	8029588 <_printf_common+0xc8>
 8029552:	2000      	movs	r0, #0
 8029554:	e008      	b.n	8029568 <_printf_common+0xa8>
 8029556:	2301      	movs	r3, #1
 8029558:	4652      	mov	r2, sl
 802955a:	4649      	mov	r1, r9
 802955c:	4638      	mov	r0, r7
 802955e:	47c0      	blx	r8
 8029560:	3001      	adds	r0, #1
 8029562:	d103      	bne.n	802956c <_printf_common+0xac>
 8029564:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8029568:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802956c:	3501      	adds	r5, #1
 802956e:	e7c6      	b.n	80294fe <_printf_common+0x3e>
 8029570:	18e1      	adds	r1, r4, r3
 8029572:	1c5a      	adds	r2, r3, #1
 8029574:	2030      	movs	r0, #48	; 0x30
 8029576:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802957a:	4422      	add	r2, r4
 802957c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8029580:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8029584:	3302      	adds	r3, #2
 8029586:	e7c7      	b.n	8029518 <_printf_common+0x58>
 8029588:	2301      	movs	r3, #1
 802958a:	4622      	mov	r2, r4
 802958c:	4649      	mov	r1, r9
 802958e:	4638      	mov	r0, r7
 8029590:	47c0      	blx	r8
 8029592:	3001      	adds	r0, #1
 8029594:	d0e6      	beq.n	8029564 <_printf_common+0xa4>
 8029596:	3601      	adds	r6, #1
 8029598:	e7d9      	b.n	802954e <_printf_common+0x8e>
	...

0802959c <_printf_i>:
 802959c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80295a0:	7e0f      	ldrb	r7, [r1, #24]
 80295a2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80295a4:	2f78      	cmp	r7, #120	; 0x78
 80295a6:	4691      	mov	r9, r2
 80295a8:	4680      	mov	r8, r0
 80295aa:	460c      	mov	r4, r1
 80295ac:	469a      	mov	sl, r3
 80295ae:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80295b2:	d807      	bhi.n	80295c4 <_printf_i+0x28>
 80295b4:	2f62      	cmp	r7, #98	; 0x62
 80295b6:	d80a      	bhi.n	80295ce <_printf_i+0x32>
 80295b8:	2f00      	cmp	r7, #0
 80295ba:	f000 80d4 	beq.w	8029766 <_printf_i+0x1ca>
 80295be:	2f58      	cmp	r7, #88	; 0x58
 80295c0:	f000 80c0 	beq.w	8029744 <_printf_i+0x1a8>
 80295c4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80295c8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80295cc:	e03a      	b.n	8029644 <_printf_i+0xa8>
 80295ce:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80295d2:	2b15      	cmp	r3, #21
 80295d4:	d8f6      	bhi.n	80295c4 <_printf_i+0x28>
 80295d6:	a101      	add	r1, pc, #4	; (adr r1, 80295dc <_printf_i+0x40>)
 80295d8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80295dc:	08029635 	.word	0x08029635
 80295e0:	08029649 	.word	0x08029649
 80295e4:	080295c5 	.word	0x080295c5
 80295e8:	080295c5 	.word	0x080295c5
 80295ec:	080295c5 	.word	0x080295c5
 80295f0:	080295c5 	.word	0x080295c5
 80295f4:	08029649 	.word	0x08029649
 80295f8:	080295c5 	.word	0x080295c5
 80295fc:	080295c5 	.word	0x080295c5
 8029600:	080295c5 	.word	0x080295c5
 8029604:	080295c5 	.word	0x080295c5
 8029608:	0802974d 	.word	0x0802974d
 802960c:	08029675 	.word	0x08029675
 8029610:	08029707 	.word	0x08029707
 8029614:	080295c5 	.word	0x080295c5
 8029618:	080295c5 	.word	0x080295c5
 802961c:	0802976f 	.word	0x0802976f
 8029620:	080295c5 	.word	0x080295c5
 8029624:	08029675 	.word	0x08029675
 8029628:	080295c5 	.word	0x080295c5
 802962c:	080295c5 	.word	0x080295c5
 8029630:	0802970f 	.word	0x0802970f
 8029634:	682b      	ldr	r3, [r5, #0]
 8029636:	1d1a      	adds	r2, r3, #4
 8029638:	681b      	ldr	r3, [r3, #0]
 802963a:	602a      	str	r2, [r5, #0]
 802963c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8029640:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8029644:	2301      	movs	r3, #1
 8029646:	e09f      	b.n	8029788 <_printf_i+0x1ec>
 8029648:	6820      	ldr	r0, [r4, #0]
 802964a:	682b      	ldr	r3, [r5, #0]
 802964c:	0607      	lsls	r7, r0, #24
 802964e:	f103 0104 	add.w	r1, r3, #4
 8029652:	6029      	str	r1, [r5, #0]
 8029654:	d501      	bpl.n	802965a <_printf_i+0xbe>
 8029656:	681e      	ldr	r6, [r3, #0]
 8029658:	e003      	b.n	8029662 <_printf_i+0xc6>
 802965a:	0646      	lsls	r6, r0, #25
 802965c:	d5fb      	bpl.n	8029656 <_printf_i+0xba>
 802965e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8029662:	2e00      	cmp	r6, #0
 8029664:	da03      	bge.n	802966e <_printf_i+0xd2>
 8029666:	232d      	movs	r3, #45	; 0x2d
 8029668:	4276      	negs	r6, r6
 802966a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802966e:	485a      	ldr	r0, [pc, #360]	; (80297d8 <_printf_i+0x23c>)
 8029670:	230a      	movs	r3, #10
 8029672:	e012      	b.n	802969a <_printf_i+0xfe>
 8029674:	682b      	ldr	r3, [r5, #0]
 8029676:	6820      	ldr	r0, [r4, #0]
 8029678:	1d19      	adds	r1, r3, #4
 802967a:	6029      	str	r1, [r5, #0]
 802967c:	0605      	lsls	r5, r0, #24
 802967e:	d501      	bpl.n	8029684 <_printf_i+0xe8>
 8029680:	681e      	ldr	r6, [r3, #0]
 8029682:	e002      	b.n	802968a <_printf_i+0xee>
 8029684:	0641      	lsls	r1, r0, #25
 8029686:	d5fb      	bpl.n	8029680 <_printf_i+0xe4>
 8029688:	881e      	ldrh	r6, [r3, #0]
 802968a:	4853      	ldr	r0, [pc, #332]	; (80297d8 <_printf_i+0x23c>)
 802968c:	2f6f      	cmp	r7, #111	; 0x6f
 802968e:	bf0c      	ite	eq
 8029690:	2308      	moveq	r3, #8
 8029692:	230a      	movne	r3, #10
 8029694:	2100      	movs	r1, #0
 8029696:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802969a:	6865      	ldr	r5, [r4, #4]
 802969c:	60a5      	str	r5, [r4, #8]
 802969e:	2d00      	cmp	r5, #0
 80296a0:	bfa2      	ittt	ge
 80296a2:	6821      	ldrge	r1, [r4, #0]
 80296a4:	f021 0104 	bicge.w	r1, r1, #4
 80296a8:	6021      	strge	r1, [r4, #0]
 80296aa:	b90e      	cbnz	r6, 80296b0 <_printf_i+0x114>
 80296ac:	2d00      	cmp	r5, #0
 80296ae:	d04b      	beq.n	8029748 <_printf_i+0x1ac>
 80296b0:	4615      	mov	r5, r2
 80296b2:	fbb6 f1f3 	udiv	r1, r6, r3
 80296b6:	fb03 6711 	mls	r7, r3, r1, r6
 80296ba:	5dc7      	ldrb	r7, [r0, r7]
 80296bc:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80296c0:	4637      	mov	r7, r6
 80296c2:	42bb      	cmp	r3, r7
 80296c4:	460e      	mov	r6, r1
 80296c6:	d9f4      	bls.n	80296b2 <_printf_i+0x116>
 80296c8:	2b08      	cmp	r3, #8
 80296ca:	d10b      	bne.n	80296e4 <_printf_i+0x148>
 80296cc:	6823      	ldr	r3, [r4, #0]
 80296ce:	07de      	lsls	r6, r3, #31
 80296d0:	d508      	bpl.n	80296e4 <_printf_i+0x148>
 80296d2:	6923      	ldr	r3, [r4, #16]
 80296d4:	6861      	ldr	r1, [r4, #4]
 80296d6:	4299      	cmp	r1, r3
 80296d8:	bfde      	ittt	le
 80296da:	2330      	movle	r3, #48	; 0x30
 80296dc:	f805 3c01 	strble.w	r3, [r5, #-1]
 80296e0:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 80296e4:	1b52      	subs	r2, r2, r5
 80296e6:	6122      	str	r2, [r4, #16]
 80296e8:	f8cd a000 	str.w	sl, [sp]
 80296ec:	464b      	mov	r3, r9
 80296ee:	aa03      	add	r2, sp, #12
 80296f0:	4621      	mov	r1, r4
 80296f2:	4640      	mov	r0, r8
 80296f4:	f7ff fee4 	bl	80294c0 <_printf_common>
 80296f8:	3001      	adds	r0, #1
 80296fa:	d14a      	bne.n	8029792 <_printf_i+0x1f6>
 80296fc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8029700:	b004      	add	sp, #16
 8029702:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8029706:	6823      	ldr	r3, [r4, #0]
 8029708:	f043 0320 	orr.w	r3, r3, #32
 802970c:	6023      	str	r3, [r4, #0]
 802970e:	4833      	ldr	r0, [pc, #204]	; (80297dc <_printf_i+0x240>)
 8029710:	2778      	movs	r7, #120	; 0x78
 8029712:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8029716:	6823      	ldr	r3, [r4, #0]
 8029718:	6829      	ldr	r1, [r5, #0]
 802971a:	061f      	lsls	r7, r3, #24
 802971c:	f851 6b04 	ldr.w	r6, [r1], #4
 8029720:	d402      	bmi.n	8029728 <_printf_i+0x18c>
 8029722:	065f      	lsls	r7, r3, #25
 8029724:	bf48      	it	mi
 8029726:	b2b6      	uxthmi	r6, r6
 8029728:	07df      	lsls	r7, r3, #31
 802972a:	bf48      	it	mi
 802972c:	f043 0320 	orrmi.w	r3, r3, #32
 8029730:	6029      	str	r1, [r5, #0]
 8029732:	bf48      	it	mi
 8029734:	6023      	strmi	r3, [r4, #0]
 8029736:	b91e      	cbnz	r6, 8029740 <_printf_i+0x1a4>
 8029738:	6823      	ldr	r3, [r4, #0]
 802973a:	f023 0320 	bic.w	r3, r3, #32
 802973e:	6023      	str	r3, [r4, #0]
 8029740:	2310      	movs	r3, #16
 8029742:	e7a7      	b.n	8029694 <_printf_i+0xf8>
 8029744:	4824      	ldr	r0, [pc, #144]	; (80297d8 <_printf_i+0x23c>)
 8029746:	e7e4      	b.n	8029712 <_printf_i+0x176>
 8029748:	4615      	mov	r5, r2
 802974a:	e7bd      	b.n	80296c8 <_printf_i+0x12c>
 802974c:	682b      	ldr	r3, [r5, #0]
 802974e:	6826      	ldr	r6, [r4, #0]
 8029750:	6961      	ldr	r1, [r4, #20]
 8029752:	1d18      	adds	r0, r3, #4
 8029754:	6028      	str	r0, [r5, #0]
 8029756:	0635      	lsls	r5, r6, #24
 8029758:	681b      	ldr	r3, [r3, #0]
 802975a:	d501      	bpl.n	8029760 <_printf_i+0x1c4>
 802975c:	6019      	str	r1, [r3, #0]
 802975e:	e002      	b.n	8029766 <_printf_i+0x1ca>
 8029760:	0670      	lsls	r0, r6, #25
 8029762:	d5fb      	bpl.n	802975c <_printf_i+0x1c0>
 8029764:	8019      	strh	r1, [r3, #0]
 8029766:	2300      	movs	r3, #0
 8029768:	6123      	str	r3, [r4, #16]
 802976a:	4615      	mov	r5, r2
 802976c:	e7bc      	b.n	80296e8 <_printf_i+0x14c>
 802976e:	682b      	ldr	r3, [r5, #0]
 8029770:	1d1a      	adds	r2, r3, #4
 8029772:	602a      	str	r2, [r5, #0]
 8029774:	681d      	ldr	r5, [r3, #0]
 8029776:	6862      	ldr	r2, [r4, #4]
 8029778:	2100      	movs	r1, #0
 802977a:	4628      	mov	r0, r5
 802977c:	f7d6 fd38 	bl	80001f0 <memchr>
 8029780:	b108      	cbz	r0, 8029786 <_printf_i+0x1ea>
 8029782:	1b40      	subs	r0, r0, r5
 8029784:	6060      	str	r0, [r4, #4]
 8029786:	6863      	ldr	r3, [r4, #4]
 8029788:	6123      	str	r3, [r4, #16]
 802978a:	2300      	movs	r3, #0
 802978c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8029790:	e7aa      	b.n	80296e8 <_printf_i+0x14c>
 8029792:	6923      	ldr	r3, [r4, #16]
 8029794:	462a      	mov	r2, r5
 8029796:	4649      	mov	r1, r9
 8029798:	4640      	mov	r0, r8
 802979a:	47d0      	blx	sl
 802979c:	3001      	adds	r0, #1
 802979e:	d0ad      	beq.n	80296fc <_printf_i+0x160>
 80297a0:	6823      	ldr	r3, [r4, #0]
 80297a2:	079b      	lsls	r3, r3, #30
 80297a4:	d413      	bmi.n	80297ce <_printf_i+0x232>
 80297a6:	68e0      	ldr	r0, [r4, #12]
 80297a8:	9b03      	ldr	r3, [sp, #12]
 80297aa:	4298      	cmp	r0, r3
 80297ac:	bfb8      	it	lt
 80297ae:	4618      	movlt	r0, r3
 80297b0:	e7a6      	b.n	8029700 <_printf_i+0x164>
 80297b2:	2301      	movs	r3, #1
 80297b4:	4632      	mov	r2, r6
 80297b6:	4649      	mov	r1, r9
 80297b8:	4640      	mov	r0, r8
 80297ba:	47d0      	blx	sl
 80297bc:	3001      	adds	r0, #1
 80297be:	d09d      	beq.n	80296fc <_printf_i+0x160>
 80297c0:	3501      	adds	r5, #1
 80297c2:	68e3      	ldr	r3, [r4, #12]
 80297c4:	9903      	ldr	r1, [sp, #12]
 80297c6:	1a5b      	subs	r3, r3, r1
 80297c8:	42ab      	cmp	r3, r5
 80297ca:	dcf2      	bgt.n	80297b2 <_printf_i+0x216>
 80297cc:	e7eb      	b.n	80297a6 <_printf_i+0x20a>
 80297ce:	2500      	movs	r5, #0
 80297d0:	f104 0619 	add.w	r6, r4, #25
 80297d4:	e7f5      	b.n	80297c2 <_printf_i+0x226>
 80297d6:	bf00      	nop
 80297d8:	0802d229 	.word	0x0802d229
 80297dc:	0802d23a 	.word	0x0802d23a

080297e0 <__sflush_r>:
 80297e0:	898a      	ldrh	r2, [r1, #12]
 80297e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80297e6:	4605      	mov	r5, r0
 80297e8:	0710      	lsls	r0, r2, #28
 80297ea:	460c      	mov	r4, r1
 80297ec:	d458      	bmi.n	80298a0 <__sflush_r+0xc0>
 80297ee:	684b      	ldr	r3, [r1, #4]
 80297f0:	2b00      	cmp	r3, #0
 80297f2:	dc05      	bgt.n	8029800 <__sflush_r+0x20>
 80297f4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80297f6:	2b00      	cmp	r3, #0
 80297f8:	dc02      	bgt.n	8029800 <__sflush_r+0x20>
 80297fa:	2000      	movs	r0, #0
 80297fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029800:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8029802:	2e00      	cmp	r6, #0
 8029804:	d0f9      	beq.n	80297fa <__sflush_r+0x1a>
 8029806:	2300      	movs	r3, #0
 8029808:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802980c:	682f      	ldr	r7, [r5, #0]
 802980e:	6a21      	ldr	r1, [r4, #32]
 8029810:	602b      	str	r3, [r5, #0]
 8029812:	d032      	beq.n	802987a <__sflush_r+0x9a>
 8029814:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8029816:	89a3      	ldrh	r3, [r4, #12]
 8029818:	075a      	lsls	r2, r3, #29
 802981a:	d505      	bpl.n	8029828 <__sflush_r+0x48>
 802981c:	6863      	ldr	r3, [r4, #4]
 802981e:	1ac0      	subs	r0, r0, r3
 8029820:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8029822:	b10b      	cbz	r3, 8029828 <__sflush_r+0x48>
 8029824:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8029826:	1ac0      	subs	r0, r0, r3
 8029828:	2300      	movs	r3, #0
 802982a:	4602      	mov	r2, r0
 802982c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802982e:	6a21      	ldr	r1, [r4, #32]
 8029830:	4628      	mov	r0, r5
 8029832:	47b0      	blx	r6
 8029834:	1c43      	adds	r3, r0, #1
 8029836:	89a3      	ldrh	r3, [r4, #12]
 8029838:	d106      	bne.n	8029848 <__sflush_r+0x68>
 802983a:	6829      	ldr	r1, [r5, #0]
 802983c:	291d      	cmp	r1, #29
 802983e:	d82b      	bhi.n	8029898 <__sflush_r+0xb8>
 8029840:	4a29      	ldr	r2, [pc, #164]	; (80298e8 <__sflush_r+0x108>)
 8029842:	410a      	asrs	r2, r1
 8029844:	07d6      	lsls	r6, r2, #31
 8029846:	d427      	bmi.n	8029898 <__sflush_r+0xb8>
 8029848:	2200      	movs	r2, #0
 802984a:	6062      	str	r2, [r4, #4]
 802984c:	04d9      	lsls	r1, r3, #19
 802984e:	6922      	ldr	r2, [r4, #16]
 8029850:	6022      	str	r2, [r4, #0]
 8029852:	d504      	bpl.n	802985e <__sflush_r+0x7e>
 8029854:	1c42      	adds	r2, r0, #1
 8029856:	d101      	bne.n	802985c <__sflush_r+0x7c>
 8029858:	682b      	ldr	r3, [r5, #0]
 802985a:	b903      	cbnz	r3, 802985e <__sflush_r+0x7e>
 802985c:	6560      	str	r0, [r4, #84]	; 0x54
 802985e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8029860:	602f      	str	r7, [r5, #0]
 8029862:	2900      	cmp	r1, #0
 8029864:	d0c9      	beq.n	80297fa <__sflush_r+0x1a>
 8029866:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802986a:	4299      	cmp	r1, r3
 802986c:	d002      	beq.n	8029874 <__sflush_r+0x94>
 802986e:	4628      	mov	r0, r5
 8029870:	f7ff fb3e 	bl	8028ef0 <_free_r>
 8029874:	2000      	movs	r0, #0
 8029876:	6360      	str	r0, [r4, #52]	; 0x34
 8029878:	e7c0      	b.n	80297fc <__sflush_r+0x1c>
 802987a:	2301      	movs	r3, #1
 802987c:	4628      	mov	r0, r5
 802987e:	47b0      	blx	r6
 8029880:	1c41      	adds	r1, r0, #1
 8029882:	d1c8      	bne.n	8029816 <__sflush_r+0x36>
 8029884:	682b      	ldr	r3, [r5, #0]
 8029886:	2b00      	cmp	r3, #0
 8029888:	d0c5      	beq.n	8029816 <__sflush_r+0x36>
 802988a:	2b1d      	cmp	r3, #29
 802988c:	d001      	beq.n	8029892 <__sflush_r+0xb2>
 802988e:	2b16      	cmp	r3, #22
 8029890:	d101      	bne.n	8029896 <__sflush_r+0xb6>
 8029892:	602f      	str	r7, [r5, #0]
 8029894:	e7b1      	b.n	80297fa <__sflush_r+0x1a>
 8029896:	89a3      	ldrh	r3, [r4, #12]
 8029898:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802989c:	81a3      	strh	r3, [r4, #12]
 802989e:	e7ad      	b.n	80297fc <__sflush_r+0x1c>
 80298a0:	690f      	ldr	r7, [r1, #16]
 80298a2:	2f00      	cmp	r7, #0
 80298a4:	d0a9      	beq.n	80297fa <__sflush_r+0x1a>
 80298a6:	0793      	lsls	r3, r2, #30
 80298a8:	680e      	ldr	r6, [r1, #0]
 80298aa:	bf08      	it	eq
 80298ac:	694b      	ldreq	r3, [r1, #20]
 80298ae:	600f      	str	r7, [r1, #0]
 80298b0:	bf18      	it	ne
 80298b2:	2300      	movne	r3, #0
 80298b4:	eba6 0807 	sub.w	r8, r6, r7
 80298b8:	608b      	str	r3, [r1, #8]
 80298ba:	f1b8 0f00 	cmp.w	r8, #0
 80298be:	dd9c      	ble.n	80297fa <__sflush_r+0x1a>
 80298c0:	6a21      	ldr	r1, [r4, #32]
 80298c2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80298c4:	4643      	mov	r3, r8
 80298c6:	463a      	mov	r2, r7
 80298c8:	4628      	mov	r0, r5
 80298ca:	47b0      	blx	r6
 80298cc:	2800      	cmp	r0, #0
 80298ce:	dc06      	bgt.n	80298de <__sflush_r+0xfe>
 80298d0:	89a3      	ldrh	r3, [r4, #12]
 80298d2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80298d6:	81a3      	strh	r3, [r4, #12]
 80298d8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80298dc:	e78e      	b.n	80297fc <__sflush_r+0x1c>
 80298de:	4407      	add	r7, r0
 80298e0:	eba8 0800 	sub.w	r8, r8, r0
 80298e4:	e7e9      	b.n	80298ba <__sflush_r+0xda>
 80298e6:	bf00      	nop
 80298e8:	dfbffffe 	.word	0xdfbffffe

080298ec <_fflush_r>:
 80298ec:	b538      	push	{r3, r4, r5, lr}
 80298ee:	690b      	ldr	r3, [r1, #16]
 80298f0:	4605      	mov	r5, r0
 80298f2:	460c      	mov	r4, r1
 80298f4:	b913      	cbnz	r3, 80298fc <_fflush_r+0x10>
 80298f6:	2500      	movs	r5, #0
 80298f8:	4628      	mov	r0, r5
 80298fa:	bd38      	pop	{r3, r4, r5, pc}
 80298fc:	b118      	cbz	r0, 8029906 <_fflush_r+0x1a>
 80298fe:	6a03      	ldr	r3, [r0, #32]
 8029900:	b90b      	cbnz	r3, 8029906 <_fflush_r+0x1a>
 8029902:	f7ff f8a1 	bl	8028a48 <__sinit>
 8029906:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802990a:	2b00      	cmp	r3, #0
 802990c:	d0f3      	beq.n	80298f6 <_fflush_r+0xa>
 802990e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8029910:	07d0      	lsls	r0, r2, #31
 8029912:	d404      	bmi.n	802991e <_fflush_r+0x32>
 8029914:	0599      	lsls	r1, r3, #22
 8029916:	d402      	bmi.n	802991e <_fflush_r+0x32>
 8029918:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802991a:	f7ff fa09 	bl	8028d30 <__retarget_lock_acquire_recursive>
 802991e:	4628      	mov	r0, r5
 8029920:	4621      	mov	r1, r4
 8029922:	f7ff ff5d 	bl	80297e0 <__sflush_r>
 8029926:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8029928:	07da      	lsls	r2, r3, #31
 802992a:	4605      	mov	r5, r0
 802992c:	d4e4      	bmi.n	80298f8 <_fflush_r+0xc>
 802992e:	89a3      	ldrh	r3, [r4, #12]
 8029930:	059b      	lsls	r3, r3, #22
 8029932:	d4e1      	bmi.n	80298f8 <_fflush_r+0xc>
 8029934:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8029936:	f7ff f9fc 	bl	8028d32 <__retarget_lock_release_recursive>
 802993a:	e7dd      	b.n	80298f8 <_fflush_r+0xc>

0802993c <__sread>:
 802993c:	b510      	push	{r4, lr}
 802993e:	460c      	mov	r4, r1
 8029940:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029944:	f000 f9c2 	bl	8029ccc <_read_r>
 8029948:	2800      	cmp	r0, #0
 802994a:	bfab      	itete	ge
 802994c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802994e:	89a3      	ldrhlt	r3, [r4, #12]
 8029950:	181b      	addge	r3, r3, r0
 8029952:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8029956:	bfac      	ite	ge
 8029958:	6563      	strge	r3, [r4, #84]	; 0x54
 802995a:	81a3      	strhlt	r3, [r4, #12]
 802995c:	bd10      	pop	{r4, pc}

0802995e <__swrite>:
 802995e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029962:	461f      	mov	r7, r3
 8029964:	898b      	ldrh	r3, [r1, #12]
 8029966:	05db      	lsls	r3, r3, #23
 8029968:	4605      	mov	r5, r0
 802996a:	460c      	mov	r4, r1
 802996c:	4616      	mov	r6, r2
 802996e:	d505      	bpl.n	802997c <__swrite+0x1e>
 8029970:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029974:	2302      	movs	r3, #2
 8029976:	2200      	movs	r2, #0
 8029978:	f000 f996 	bl	8029ca8 <_lseek_r>
 802997c:	89a3      	ldrh	r3, [r4, #12]
 802997e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8029982:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8029986:	81a3      	strh	r3, [r4, #12]
 8029988:	4632      	mov	r2, r6
 802998a:	463b      	mov	r3, r7
 802998c:	4628      	mov	r0, r5
 802998e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8029992:	f000 b9ad 	b.w	8029cf0 <_write_r>

08029996 <__sseek>:
 8029996:	b510      	push	{r4, lr}
 8029998:	460c      	mov	r4, r1
 802999a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802999e:	f000 f983 	bl	8029ca8 <_lseek_r>
 80299a2:	1c43      	adds	r3, r0, #1
 80299a4:	89a3      	ldrh	r3, [r4, #12]
 80299a6:	bf15      	itete	ne
 80299a8:	6560      	strne	r0, [r4, #84]	; 0x54
 80299aa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80299ae:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80299b2:	81a3      	strheq	r3, [r4, #12]
 80299b4:	bf18      	it	ne
 80299b6:	81a3      	strhne	r3, [r4, #12]
 80299b8:	bd10      	pop	{r4, pc}

080299ba <__sclose>:
 80299ba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80299be:	f000 b941 	b.w	8029c44 <_close_r>

080299c2 <_realloc_r>:
 80299c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80299c6:	4680      	mov	r8, r0
 80299c8:	4614      	mov	r4, r2
 80299ca:	460e      	mov	r6, r1
 80299cc:	b921      	cbnz	r1, 80299d8 <_realloc_r+0x16>
 80299ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80299d2:	4611      	mov	r1, r2
 80299d4:	f7fe bf12 	b.w	80287fc <_malloc_r>
 80299d8:	b92a      	cbnz	r2, 80299e6 <_realloc_r+0x24>
 80299da:	f7ff fa89 	bl	8028ef0 <_free_r>
 80299de:	4625      	mov	r5, r4
 80299e0:	4628      	mov	r0, r5
 80299e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80299e6:	f000 f995 	bl	8029d14 <_malloc_usable_size_r>
 80299ea:	4284      	cmp	r4, r0
 80299ec:	4607      	mov	r7, r0
 80299ee:	d802      	bhi.n	80299f6 <_realloc_r+0x34>
 80299f0:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80299f4:	d812      	bhi.n	8029a1c <_realloc_r+0x5a>
 80299f6:	4621      	mov	r1, r4
 80299f8:	4640      	mov	r0, r8
 80299fa:	f7fe feff 	bl	80287fc <_malloc_r>
 80299fe:	4605      	mov	r5, r0
 8029a00:	2800      	cmp	r0, #0
 8029a02:	d0ed      	beq.n	80299e0 <_realloc_r+0x1e>
 8029a04:	42bc      	cmp	r4, r7
 8029a06:	4622      	mov	r2, r4
 8029a08:	4631      	mov	r1, r6
 8029a0a:	bf28      	it	cs
 8029a0c:	463a      	movcs	r2, r7
 8029a0e:	f7ff f99f 	bl	8028d50 <memcpy>
 8029a12:	4631      	mov	r1, r6
 8029a14:	4640      	mov	r0, r8
 8029a16:	f7ff fa6b 	bl	8028ef0 <_free_r>
 8029a1a:	e7e1      	b.n	80299e0 <_realloc_r+0x1e>
 8029a1c:	4635      	mov	r5, r6
 8029a1e:	e7df      	b.n	80299e0 <_realloc_r+0x1e>

08029a20 <__swbuf_r>:
 8029a20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8029a22:	460e      	mov	r6, r1
 8029a24:	4614      	mov	r4, r2
 8029a26:	4605      	mov	r5, r0
 8029a28:	b118      	cbz	r0, 8029a32 <__swbuf_r+0x12>
 8029a2a:	6a03      	ldr	r3, [r0, #32]
 8029a2c:	b90b      	cbnz	r3, 8029a32 <__swbuf_r+0x12>
 8029a2e:	f7ff f80b 	bl	8028a48 <__sinit>
 8029a32:	69a3      	ldr	r3, [r4, #24]
 8029a34:	60a3      	str	r3, [r4, #8]
 8029a36:	89a3      	ldrh	r3, [r4, #12]
 8029a38:	071a      	lsls	r2, r3, #28
 8029a3a:	d525      	bpl.n	8029a88 <__swbuf_r+0x68>
 8029a3c:	6923      	ldr	r3, [r4, #16]
 8029a3e:	b31b      	cbz	r3, 8029a88 <__swbuf_r+0x68>
 8029a40:	6823      	ldr	r3, [r4, #0]
 8029a42:	6922      	ldr	r2, [r4, #16]
 8029a44:	1a98      	subs	r0, r3, r2
 8029a46:	6963      	ldr	r3, [r4, #20]
 8029a48:	b2f6      	uxtb	r6, r6
 8029a4a:	4283      	cmp	r3, r0
 8029a4c:	4637      	mov	r7, r6
 8029a4e:	dc04      	bgt.n	8029a5a <__swbuf_r+0x3a>
 8029a50:	4621      	mov	r1, r4
 8029a52:	4628      	mov	r0, r5
 8029a54:	f7ff ff4a 	bl	80298ec <_fflush_r>
 8029a58:	b9e0      	cbnz	r0, 8029a94 <__swbuf_r+0x74>
 8029a5a:	68a3      	ldr	r3, [r4, #8]
 8029a5c:	3b01      	subs	r3, #1
 8029a5e:	60a3      	str	r3, [r4, #8]
 8029a60:	6823      	ldr	r3, [r4, #0]
 8029a62:	1c5a      	adds	r2, r3, #1
 8029a64:	6022      	str	r2, [r4, #0]
 8029a66:	701e      	strb	r6, [r3, #0]
 8029a68:	6962      	ldr	r2, [r4, #20]
 8029a6a:	1c43      	adds	r3, r0, #1
 8029a6c:	429a      	cmp	r2, r3
 8029a6e:	d004      	beq.n	8029a7a <__swbuf_r+0x5a>
 8029a70:	89a3      	ldrh	r3, [r4, #12]
 8029a72:	07db      	lsls	r3, r3, #31
 8029a74:	d506      	bpl.n	8029a84 <__swbuf_r+0x64>
 8029a76:	2e0a      	cmp	r6, #10
 8029a78:	d104      	bne.n	8029a84 <__swbuf_r+0x64>
 8029a7a:	4621      	mov	r1, r4
 8029a7c:	4628      	mov	r0, r5
 8029a7e:	f7ff ff35 	bl	80298ec <_fflush_r>
 8029a82:	b938      	cbnz	r0, 8029a94 <__swbuf_r+0x74>
 8029a84:	4638      	mov	r0, r7
 8029a86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8029a88:	4621      	mov	r1, r4
 8029a8a:	4628      	mov	r0, r5
 8029a8c:	f000 f806 	bl	8029a9c <__swsetup_r>
 8029a90:	2800      	cmp	r0, #0
 8029a92:	d0d5      	beq.n	8029a40 <__swbuf_r+0x20>
 8029a94:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8029a98:	e7f4      	b.n	8029a84 <__swbuf_r+0x64>
	...

08029a9c <__swsetup_r>:
 8029a9c:	b538      	push	{r3, r4, r5, lr}
 8029a9e:	4b2a      	ldr	r3, [pc, #168]	; (8029b48 <__swsetup_r+0xac>)
 8029aa0:	4605      	mov	r5, r0
 8029aa2:	6818      	ldr	r0, [r3, #0]
 8029aa4:	460c      	mov	r4, r1
 8029aa6:	b118      	cbz	r0, 8029ab0 <__swsetup_r+0x14>
 8029aa8:	6a03      	ldr	r3, [r0, #32]
 8029aaa:	b90b      	cbnz	r3, 8029ab0 <__swsetup_r+0x14>
 8029aac:	f7fe ffcc 	bl	8028a48 <__sinit>
 8029ab0:	89a3      	ldrh	r3, [r4, #12]
 8029ab2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8029ab6:	0718      	lsls	r0, r3, #28
 8029ab8:	d422      	bmi.n	8029b00 <__swsetup_r+0x64>
 8029aba:	06d9      	lsls	r1, r3, #27
 8029abc:	d407      	bmi.n	8029ace <__swsetup_r+0x32>
 8029abe:	2309      	movs	r3, #9
 8029ac0:	602b      	str	r3, [r5, #0]
 8029ac2:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8029ac6:	81a3      	strh	r3, [r4, #12]
 8029ac8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8029acc:	e034      	b.n	8029b38 <__swsetup_r+0x9c>
 8029ace:	0758      	lsls	r0, r3, #29
 8029ad0:	d512      	bpl.n	8029af8 <__swsetup_r+0x5c>
 8029ad2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8029ad4:	b141      	cbz	r1, 8029ae8 <__swsetup_r+0x4c>
 8029ad6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8029ada:	4299      	cmp	r1, r3
 8029adc:	d002      	beq.n	8029ae4 <__swsetup_r+0x48>
 8029ade:	4628      	mov	r0, r5
 8029ae0:	f7ff fa06 	bl	8028ef0 <_free_r>
 8029ae4:	2300      	movs	r3, #0
 8029ae6:	6363      	str	r3, [r4, #52]	; 0x34
 8029ae8:	89a3      	ldrh	r3, [r4, #12]
 8029aea:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8029aee:	81a3      	strh	r3, [r4, #12]
 8029af0:	2300      	movs	r3, #0
 8029af2:	6063      	str	r3, [r4, #4]
 8029af4:	6923      	ldr	r3, [r4, #16]
 8029af6:	6023      	str	r3, [r4, #0]
 8029af8:	89a3      	ldrh	r3, [r4, #12]
 8029afa:	f043 0308 	orr.w	r3, r3, #8
 8029afe:	81a3      	strh	r3, [r4, #12]
 8029b00:	6923      	ldr	r3, [r4, #16]
 8029b02:	b94b      	cbnz	r3, 8029b18 <__swsetup_r+0x7c>
 8029b04:	89a3      	ldrh	r3, [r4, #12]
 8029b06:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8029b0a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8029b0e:	d003      	beq.n	8029b18 <__swsetup_r+0x7c>
 8029b10:	4621      	mov	r1, r4
 8029b12:	4628      	mov	r0, r5
 8029b14:	f000 f840 	bl	8029b98 <__smakebuf_r>
 8029b18:	89a0      	ldrh	r0, [r4, #12]
 8029b1a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8029b1e:	f010 0301 	ands.w	r3, r0, #1
 8029b22:	d00a      	beq.n	8029b3a <__swsetup_r+0x9e>
 8029b24:	2300      	movs	r3, #0
 8029b26:	60a3      	str	r3, [r4, #8]
 8029b28:	6963      	ldr	r3, [r4, #20]
 8029b2a:	425b      	negs	r3, r3
 8029b2c:	61a3      	str	r3, [r4, #24]
 8029b2e:	6923      	ldr	r3, [r4, #16]
 8029b30:	b943      	cbnz	r3, 8029b44 <__swsetup_r+0xa8>
 8029b32:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8029b36:	d1c4      	bne.n	8029ac2 <__swsetup_r+0x26>
 8029b38:	bd38      	pop	{r3, r4, r5, pc}
 8029b3a:	0781      	lsls	r1, r0, #30
 8029b3c:	bf58      	it	pl
 8029b3e:	6963      	ldrpl	r3, [r4, #20]
 8029b40:	60a3      	str	r3, [r4, #8]
 8029b42:	e7f4      	b.n	8029b2e <__swsetup_r+0x92>
 8029b44:	2000      	movs	r0, #0
 8029b46:	e7f7      	b.n	8029b38 <__swsetup_r+0x9c>
 8029b48:	20000130 	.word	0x20000130

08029b4c <__swhatbuf_r>:
 8029b4c:	b570      	push	{r4, r5, r6, lr}
 8029b4e:	460c      	mov	r4, r1
 8029b50:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029b54:	2900      	cmp	r1, #0
 8029b56:	b096      	sub	sp, #88	; 0x58
 8029b58:	4615      	mov	r5, r2
 8029b5a:	461e      	mov	r6, r3
 8029b5c:	da0d      	bge.n	8029b7a <__swhatbuf_r+0x2e>
 8029b5e:	89a3      	ldrh	r3, [r4, #12]
 8029b60:	f013 0f80 	tst.w	r3, #128	; 0x80
 8029b64:	f04f 0100 	mov.w	r1, #0
 8029b68:	bf0c      	ite	eq
 8029b6a:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8029b6e:	2340      	movne	r3, #64	; 0x40
 8029b70:	2000      	movs	r0, #0
 8029b72:	6031      	str	r1, [r6, #0]
 8029b74:	602b      	str	r3, [r5, #0]
 8029b76:	b016      	add	sp, #88	; 0x58
 8029b78:	bd70      	pop	{r4, r5, r6, pc}
 8029b7a:	466a      	mov	r2, sp
 8029b7c:	f000 f872 	bl	8029c64 <_fstat_r>
 8029b80:	2800      	cmp	r0, #0
 8029b82:	dbec      	blt.n	8029b5e <__swhatbuf_r+0x12>
 8029b84:	9901      	ldr	r1, [sp, #4]
 8029b86:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8029b8a:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8029b8e:	4259      	negs	r1, r3
 8029b90:	4159      	adcs	r1, r3
 8029b92:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8029b96:	e7eb      	b.n	8029b70 <__swhatbuf_r+0x24>

08029b98 <__smakebuf_r>:
 8029b98:	898b      	ldrh	r3, [r1, #12]
 8029b9a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8029b9c:	079d      	lsls	r5, r3, #30
 8029b9e:	4606      	mov	r6, r0
 8029ba0:	460c      	mov	r4, r1
 8029ba2:	d507      	bpl.n	8029bb4 <__smakebuf_r+0x1c>
 8029ba4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8029ba8:	6023      	str	r3, [r4, #0]
 8029baa:	6123      	str	r3, [r4, #16]
 8029bac:	2301      	movs	r3, #1
 8029bae:	6163      	str	r3, [r4, #20]
 8029bb0:	b002      	add	sp, #8
 8029bb2:	bd70      	pop	{r4, r5, r6, pc}
 8029bb4:	ab01      	add	r3, sp, #4
 8029bb6:	466a      	mov	r2, sp
 8029bb8:	f7ff ffc8 	bl	8029b4c <__swhatbuf_r>
 8029bbc:	9900      	ldr	r1, [sp, #0]
 8029bbe:	4605      	mov	r5, r0
 8029bc0:	4630      	mov	r0, r6
 8029bc2:	f7fe fe1b 	bl	80287fc <_malloc_r>
 8029bc6:	b948      	cbnz	r0, 8029bdc <__smakebuf_r+0x44>
 8029bc8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8029bcc:	059a      	lsls	r2, r3, #22
 8029bce:	d4ef      	bmi.n	8029bb0 <__smakebuf_r+0x18>
 8029bd0:	f023 0303 	bic.w	r3, r3, #3
 8029bd4:	f043 0302 	orr.w	r3, r3, #2
 8029bd8:	81a3      	strh	r3, [r4, #12]
 8029bda:	e7e3      	b.n	8029ba4 <__smakebuf_r+0xc>
 8029bdc:	89a3      	ldrh	r3, [r4, #12]
 8029bde:	6020      	str	r0, [r4, #0]
 8029be0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8029be4:	81a3      	strh	r3, [r4, #12]
 8029be6:	9b00      	ldr	r3, [sp, #0]
 8029be8:	6163      	str	r3, [r4, #20]
 8029bea:	9b01      	ldr	r3, [sp, #4]
 8029bec:	6120      	str	r0, [r4, #16]
 8029bee:	b15b      	cbz	r3, 8029c08 <__smakebuf_r+0x70>
 8029bf0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8029bf4:	4630      	mov	r0, r6
 8029bf6:	f000 f847 	bl	8029c88 <_isatty_r>
 8029bfa:	b128      	cbz	r0, 8029c08 <__smakebuf_r+0x70>
 8029bfc:	89a3      	ldrh	r3, [r4, #12]
 8029bfe:	f023 0303 	bic.w	r3, r3, #3
 8029c02:	f043 0301 	orr.w	r3, r3, #1
 8029c06:	81a3      	strh	r3, [r4, #12]
 8029c08:	89a3      	ldrh	r3, [r4, #12]
 8029c0a:	431d      	orrs	r5, r3
 8029c0c:	81a5      	strh	r5, [r4, #12]
 8029c0e:	e7cf      	b.n	8029bb0 <__smakebuf_r+0x18>

08029c10 <memmove>:
 8029c10:	4288      	cmp	r0, r1
 8029c12:	b510      	push	{r4, lr}
 8029c14:	eb01 0402 	add.w	r4, r1, r2
 8029c18:	d902      	bls.n	8029c20 <memmove+0x10>
 8029c1a:	4284      	cmp	r4, r0
 8029c1c:	4623      	mov	r3, r4
 8029c1e:	d807      	bhi.n	8029c30 <memmove+0x20>
 8029c20:	1e43      	subs	r3, r0, #1
 8029c22:	42a1      	cmp	r1, r4
 8029c24:	d008      	beq.n	8029c38 <memmove+0x28>
 8029c26:	f811 2b01 	ldrb.w	r2, [r1], #1
 8029c2a:	f803 2f01 	strb.w	r2, [r3, #1]!
 8029c2e:	e7f8      	b.n	8029c22 <memmove+0x12>
 8029c30:	4402      	add	r2, r0
 8029c32:	4601      	mov	r1, r0
 8029c34:	428a      	cmp	r2, r1
 8029c36:	d100      	bne.n	8029c3a <memmove+0x2a>
 8029c38:	bd10      	pop	{r4, pc}
 8029c3a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8029c3e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8029c42:	e7f7      	b.n	8029c34 <memmove+0x24>

08029c44 <_close_r>:
 8029c44:	b538      	push	{r3, r4, r5, lr}
 8029c46:	4d06      	ldr	r5, [pc, #24]	; (8029c60 <_close_r+0x1c>)
 8029c48:	2300      	movs	r3, #0
 8029c4a:	4604      	mov	r4, r0
 8029c4c:	4608      	mov	r0, r1
 8029c4e:	602b      	str	r3, [r5, #0]
 8029c50:	f7d8 fc95 	bl	800257e <_close>
 8029c54:	1c43      	adds	r3, r0, #1
 8029c56:	d102      	bne.n	8029c5e <_close_r+0x1a>
 8029c58:	682b      	ldr	r3, [r5, #0]
 8029c5a:	b103      	cbz	r3, 8029c5e <_close_r+0x1a>
 8029c5c:	6023      	str	r3, [r4, #0]
 8029c5e:	bd38      	pop	{r3, r4, r5, pc}
 8029c60:	2000edf4 	.word	0x2000edf4

08029c64 <_fstat_r>:
 8029c64:	b538      	push	{r3, r4, r5, lr}
 8029c66:	4d07      	ldr	r5, [pc, #28]	; (8029c84 <_fstat_r+0x20>)
 8029c68:	2300      	movs	r3, #0
 8029c6a:	4604      	mov	r4, r0
 8029c6c:	4608      	mov	r0, r1
 8029c6e:	4611      	mov	r1, r2
 8029c70:	602b      	str	r3, [r5, #0]
 8029c72:	f7d8 fc90 	bl	8002596 <_fstat>
 8029c76:	1c43      	adds	r3, r0, #1
 8029c78:	d102      	bne.n	8029c80 <_fstat_r+0x1c>
 8029c7a:	682b      	ldr	r3, [r5, #0]
 8029c7c:	b103      	cbz	r3, 8029c80 <_fstat_r+0x1c>
 8029c7e:	6023      	str	r3, [r4, #0]
 8029c80:	bd38      	pop	{r3, r4, r5, pc}
 8029c82:	bf00      	nop
 8029c84:	2000edf4 	.word	0x2000edf4

08029c88 <_isatty_r>:
 8029c88:	b538      	push	{r3, r4, r5, lr}
 8029c8a:	4d06      	ldr	r5, [pc, #24]	; (8029ca4 <_isatty_r+0x1c>)
 8029c8c:	2300      	movs	r3, #0
 8029c8e:	4604      	mov	r4, r0
 8029c90:	4608      	mov	r0, r1
 8029c92:	602b      	str	r3, [r5, #0]
 8029c94:	f7d8 fc8f 	bl	80025b6 <_isatty>
 8029c98:	1c43      	adds	r3, r0, #1
 8029c9a:	d102      	bne.n	8029ca2 <_isatty_r+0x1a>
 8029c9c:	682b      	ldr	r3, [r5, #0]
 8029c9e:	b103      	cbz	r3, 8029ca2 <_isatty_r+0x1a>
 8029ca0:	6023      	str	r3, [r4, #0]
 8029ca2:	bd38      	pop	{r3, r4, r5, pc}
 8029ca4:	2000edf4 	.word	0x2000edf4

08029ca8 <_lseek_r>:
 8029ca8:	b538      	push	{r3, r4, r5, lr}
 8029caa:	4d07      	ldr	r5, [pc, #28]	; (8029cc8 <_lseek_r+0x20>)
 8029cac:	4604      	mov	r4, r0
 8029cae:	4608      	mov	r0, r1
 8029cb0:	4611      	mov	r1, r2
 8029cb2:	2200      	movs	r2, #0
 8029cb4:	602a      	str	r2, [r5, #0]
 8029cb6:	461a      	mov	r2, r3
 8029cb8:	f7d8 fc88 	bl	80025cc <_lseek>
 8029cbc:	1c43      	adds	r3, r0, #1
 8029cbe:	d102      	bne.n	8029cc6 <_lseek_r+0x1e>
 8029cc0:	682b      	ldr	r3, [r5, #0]
 8029cc2:	b103      	cbz	r3, 8029cc6 <_lseek_r+0x1e>
 8029cc4:	6023      	str	r3, [r4, #0]
 8029cc6:	bd38      	pop	{r3, r4, r5, pc}
 8029cc8:	2000edf4 	.word	0x2000edf4

08029ccc <_read_r>:
 8029ccc:	b538      	push	{r3, r4, r5, lr}
 8029cce:	4d07      	ldr	r5, [pc, #28]	; (8029cec <_read_r+0x20>)
 8029cd0:	4604      	mov	r4, r0
 8029cd2:	4608      	mov	r0, r1
 8029cd4:	4611      	mov	r1, r2
 8029cd6:	2200      	movs	r2, #0
 8029cd8:	602a      	str	r2, [r5, #0]
 8029cda:	461a      	mov	r2, r3
 8029cdc:	f7d8 fc32 	bl	8002544 <_read>
 8029ce0:	1c43      	adds	r3, r0, #1
 8029ce2:	d102      	bne.n	8029cea <_read_r+0x1e>
 8029ce4:	682b      	ldr	r3, [r5, #0]
 8029ce6:	b103      	cbz	r3, 8029cea <_read_r+0x1e>
 8029ce8:	6023      	str	r3, [r4, #0]
 8029cea:	bd38      	pop	{r3, r4, r5, pc}
 8029cec:	2000edf4 	.word	0x2000edf4

08029cf0 <_write_r>:
 8029cf0:	b538      	push	{r3, r4, r5, lr}
 8029cf2:	4d07      	ldr	r5, [pc, #28]	; (8029d10 <_write_r+0x20>)
 8029cf4:	4604      	mov	r4, r0
 8029cf6:	4608      	mov	r0, r1
 8029cf8:	4611      	mov	r1, r2
 8029cfa:	2200      	movs	r2, #0
 8029cfc:	602a      	str	r2, [r5, #0]
 8029cfe:	461a      	mov	r2, r3
 8029d00:	f7d7 fdad 	bl	800185e <_write>
 8029d04:	1c43      	adds	r3, r0, #1
 8029d06:	d102      	bne.n	8029d0e <_write_r+0x1e>
 8029d08:	682b      	ldr	r3, [r5, #0]
 8029d0a:	b103      	cbz	r3, 8029d0e <_write_r+0x1e>
 8029d0c:	6023      	str	r3, [r4, #0]
 8029d0e:	bd38      	pop	{r3, r4, r5, pc}
 8029d10:	2000edf4 	.word	0x2000edf4

08029d14 <_malloc_usable_size_r>:
 8029d14:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8029d18:	1f18      	subs	r0, r3, #4
 8029d1a:	2b00      	cmp	r3, #0
 8029d1c:	bfbc      	itt	lt
 8029d1e:	580b      	ldrlt	r3, [r1, r0]
 8029d20:	18c0      	addlt	r0, r0, r3
 8029d22:	4770      	bx	lr

08029d24 <_init>:
 8029d24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8029d26:	bf00      	nop
 8029d28:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8029d2a:	bc08      	pop	{r3}
 8029d2c:	469e      	mov	lr, r3
 8029d2e:	4770      	bx	lr

08029d30 <_fini>:
 8029d30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8029d32:	bf00      	nop
 8029d34:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8029d36:	bc08      	pop	{r3}
 8029d38:	469e      	mov	lr, r3
 8029d3a:	4770      	bx	lr
